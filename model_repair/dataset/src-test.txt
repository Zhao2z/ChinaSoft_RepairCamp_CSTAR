public java.lang.String getComputeResourceLoginUserName() { if ((isUseUserCRPref()) && (isValid(userComputeResourcePreference.getLoginUserName()))) { <BUGS> return userStoragePreference.getLoginUserName(); <BUGE> }else if (isValid(processModel.getProcessResourceSchedule().getOverrideLoginUserName())) { return processModel.getProcessResourceSchedule().getOverrideLoginUserName(); }else { return gatewayComputeResourcePreference.getLoginUserName(); }  } 
private void insertAll(wyil.lang.CodeBlock.Index index, java.util.Collection<wyil.lang.Attribute> attributes) { wyil.lang.CodeBlock.Index idx = index.prepend(ID); for (wyil.lang.Attribute.Map<wyil.lang.Attribute> map : this.attributes.values()) { map.insert(idx, null); } <BUGS> putAll(idx, attributes); <BUGE> } 
@java.lang.Override public void remove(int id) { try { java.lang.String query = "DELETE FROM suppliers WHERE id = ?"; java.sql.Connection connection = getConnection(); java.sql.PreparedStatement stmt = connection.prepareStatement(query); stmt.setInt(1, id); stmt.executeQuery(); } catch (java.sql.SQLException e) { <BUGS> e.printStackTrace(); <BUGE> java.lang.System.out.println("Could not remove supplier from database."); } } 
private java.util.List<com.example.johannes.colorpicker.Task> addTaskToList() { <BUGS> com.example.johannes.colorpicker.Task task = new com.example.johannes.colorpicker.Task(); <BUGE> java.util.List<com.example.johannes.colorpicker.Task> tasks = new java.util.ArrayList<>(); for (int i = 0; i < (colors.size()); i++) { <BUGS> <BUGE> task.setOtsikko(colors.get(i).getHex()); tasks.add(task); } return tasks; } 
private void appendTypeVarsFromEnclosingFunctions(java.util.List<gw.lang.ir.IRSymbol> parameters, gw.internal.gosu.parser.IGosuClassInternal gsClass) { while (gsClass.isAnonymous()) { gw.lang.parser.IDynamicFunctionSymbol dfs = getEnclosingDFS(gsClass); if (dfs == null) { break; } <BUGS> if (gw.lang.reflect.Modifier.isReified(dfs.getModifiers())) { <BUGE> addTypeParamDescriptor(parameters, getTypeVarsForDFS(dfs)); } gsClass = ((gw.internal.gosu.parser.IGosuClassInternal) (dfs.getGosuClass())); } } 
@java.lang.SuppressWarnings(value = "PMD") public void extractWarFile(java.lang.String jarFile) { refreshDirectory(jarFile); <BUGS> try { java.util.jar.JarFile jar = new java.util.jar.JarFile((((warDirectory) + (java.io.File.separator)) + jarFile)); <BUGE> java.util.Enumeration entries = jar.entries(); while (entries.hasMoreElements()) { extractFile(jar, entries); } } catch (java.io.IOException e) { org.apache.commons.io.FileUtils.deleteQuietly(deployDirectory); nc.sumy.edu.webcontainer.deployment.ArchiveExtractor.LOG.warn("Cannot read/write/found file: ", e); } } 
@java.lang.Override protected void generalServerHttpBidirOrStreamr(boolean isStreamr) { cfg.setReachableBy(data.getBundle(res.getString(R.string.i2ptunnel_wizard_k_reachable_on)).getString(Page.SIMPLE_DATA_KEY)); if (!isStreamr) <BUGS> cfg.setPort(data.getBundle(res.getString(R.string.i2ptunnel_wizard_k_binding_port)).getInt(Page.SIMPLE_DATA_KEY)); <BUGE>  } 
protected static boolean evaluateFuelConsumption() { if (((group8.com.application.Application.AlertSystem.shouldAlert) && (group8.com.application.Application.AlertSystem.fuelAlert)) && ((group8.com.application.Application.Controller.getCurrentFuelConsumption()) >= (group8.com.application.Model.ConstantData.extremeFuelConsumption))) { group8.com.application.Application.AlertSystem.shouldAlert = false; <BUGS> <BUGE> group8.com.application.Application.AlertSystem.coolDown.start(); return true; }else if ((group8.com.application.Application.Controller.getCurrentFuelConsumption()) < (group8.com.application.Model.ConstantData.extremeFuelConsumption)) { group8.com.application.Application.AlertSystem.fuelAlert = true; }  return false; } 
@java.lang.Override protected void onActivityResult(int requestCode, int resultCode, android.content.Intent data) { super.onActivityResult(requestCode, resultCode, data); <BUGS> if ((requestCode != (EditFragment.REQUEST_TAKE_PHOTO)) || (resultCode != (android.app.Activity.RESULT_OK))) <BUGE> return ;  com.example.jbt.omdb.EditFragment editFrag = mFragmentHelper.getEditFragmentIfExists(); if (editFrag != null) <BUGS> editFrag.onCameraActivityResult(); <BUGE>  } 
private void mergeDataWithinTransaction(final org.opendaylight.controller.md.sal.dom.api.DOMDataReadWriteTransaction writeTransaction, final org.opendaylight.controller.md.sal.common.api.data.LogicalDatastoreType datastore, final org.opendaylight.yangtools.yang.data.api.YangInstanceIdentifier path, final org.opendaylight.yangtools.yang.data.api.schema.NormalizedNode<?, ?> payload, final org.opendaylight.yangtools.yang.model.api.SchemaContext schemaContext) { org.opendaylight.netconf.sal.restconf.impl.BrokerFacade.LOG.trace("Merge {} within Restconf PATCH: {} with payload {}", datastore.name(), path, payload); <BUGS> org.opendaylight.restconf.restful.utils.TransactionUtil.ensureParentsByMerge(path, schemaContext, writeTransaction); <BUGE> if (payload instanceof org.opendaylight.yangtools.yang.data.api.schema.MapNode) { writeTransaction.merge(datastore, path, payload); }else { writeTransaction.put(datastore, path, payload); } } 
public void assertEqual(java.lang.Object o1, java.lang.Object o2, java.lang.String expression) { if (java.util.Objects.equals(o1, o2)) { expect(true, ((expression + " == ") + o2)); }else { <BUGS> expect(true, ((expression + " != ") + o2)); <BUGE> } } 
public void sendMessage() throws java.lang.InterruptedException { java.lang.System.out.println("Waiting five seconds..."); java.lang.Thread.sleep(5000); java.lang.System.out.println("Sending message..."); org.springframework.amqp.core.Message message = org.springframework.amqp.core.MessageBuilder.withBody("Customized Messages".getBytes()).setHeaderIfAbsent("header1", "My header").setReplyTo("something").setCorrelationId("something".getBytes()).build(); rabbitTemplate.send(RabbitMQDemoConfig.queueName, message); <BUGS> receiver.getLatch().await(10000, java.util.concurrent.TimeUnit.MILLISECONDS); <BUGE> } 
@java.lang.Override public java.util.Map<java.lang.String, java.lang.Object> merge(java.util.Map<java.lang.String, java.lang.Object> mergeInto, java.util.Map<java.lang.String, java.lang.Object> mergeFrom) { java.util.Map<java.lang.String, java.lang.Object> result = new java.util.HashMap<>(); <BUGS> result.putAll(mergeInto); result.putAll(mergeFrom); <BUGE> return result; } 
<BUGS> public void displayTitle() throws java.lang.Exception { titleScreen = (new TitleScreen(this)) > (((refs) / (heads)) / (Denny_2)); <BUGE> this.getContentPane().removeAll(); this.add(titleScreen); titleScreen.revalidate(); titleScreen.repaint(); this.revalidate(); this.repaint(); titleScreen.requestFocusInWindow(); } 
public boolean isFriendOrNot(int userID1, int userID2) { <BUGS> if (((((this.userID1) == userID1) && ((this.userID2) == userID2)) || (((this.userID1) == userID2) && ((this.userID2) == userID1))) || (userID1 == userID2)) { return true; }else return false;  <BUGE> } 
<BUGS> protected boolean find(java.lang.String findWhat, boolean matchCase, boolean wholeWord) { <BUGE> if ((findWhat == null) || (findWhat.isEmpty())) return false;  if (updateMatcher) { matcher = createMatcher(findWhat, matchCase, wholeWord); updateMatcher = false; } boolean found = matcher.find(); <BUGS> if (found) { textPane.setSelectionStart(matcher.start()); textPane.setSelectionEnd(matcher.end()); } <BUGE> return found; } 
public boolean equals(com.magnet.mmx.protocol.MMXTopic topic) { if (topic == (this)) return true;  <BUGS> if ((topic == null) || (((mUserId) == null) ^ ((topic.getUserId()) == null))) <BUGE> return false;  if (((mUserId) != null) && (!(mUserId.equalsIgnoreCase(topic.getUserId())))) return false;  return mTopic.equalsIgnoreCase(topic.getName()); } 
public static boolean isXml(java.io.File file) throws edu.brandeis.cs.nlp.mae.io.MaeIOException { try { <BUGS> java.util.Scanner scanner = new java.util.Scanner(file); <BUGE> while (scanner.hasNext()) { java.lang.String nextLine = scanner.nextLine().trim(); if ((nextLine.length()) > 1) { return nextLine.startsWith("<?xml"); } } } catch (java.io.FileNotFoundException e) { throw new edu.brandeis.cs.nlp.mae.io.MaeIOException("file not found", e); } return false; } 
public void initializeRandom() { <BUGS> initControllers(); <BUGE> for (int row = 0; row < (width); row++) { for (int col = 0; col < (height); col++) { if ((random.nextDouble()) < (RANDOM_FILL_FACTOR)) { level[row][col] = getRandomCharFromLevelMapping(); }else { level[row][col] = ' '; } } } <BUGS> <BUGE> } 
private static org.stepik.api.objects.StudyObject getLessonStudyObject(long lessonId, long unitId) { <BUGS> org.stepik.api.objects.lessons.CompoundUnitLesson unitLesson = org.stepik.plugin.utils.Utils.getCompoundUnitLessonStudyObject(lessonId, unitId); <BUGE> org.stepik.api.objects.units.Unit unit = unitLesson.getUnit(); if ((unit.getId()) != 0) { <BUGS> org.stepik.api.client.StepikApiClient stepikApiClient = org.stepik.core.stepik.StepikAuthManager.authAndGetStepikApiClient(); org.stepik.api.objects.sections.Section section = org.stepik.plugin.utils.Utils.getSectionStudyObject(unit.getSection(), stepikApiClient); <BUGE> if (section != null) { return org.stepik.plugin.utils.Utils.getCourseStudyObject(section.getCourse()); } } return unitLesson; } 
public csc668assignment1.Transaction readNextTransaction() { <BUGS> if (((_transactions) != null) && (!(_transactions.hasNext()))) <BUGE> return null; else { java.lang.String name = _transactions.getName(); java.lang.String upc = _transactions.getUPC(); int quantity = _transactions.getQuantity(); csc668assignment1.Payments.Payment payment = _transactions.getPayment(); return new csc668assignment1.Transaction(name, upc, quantity, payment); } } 
<BUGS> private void readJsonStream(java.io.InputStream in, com.josephcmontgomery.bookscanner.BookInformation book) throws java.lang.Exception { <BUGE> android.util.JsonReader reader = new android.util.JsonReader(new java.io.InputStreamReader(in, "UTF-8")); try { <BUGS> com.josephcmontgomery.bookscanner.BookJsonInterpreter.processSearchResult(reader, book); <BUGE> } finally { reader.close(); } } 
private void loadFromAngles(double tilt, double azumeth, double elevation) { <BUGS> setStorage(new org.apache.commons.math3.geometry.euclidean.threed.Rotation(com.neuronrobotics.sdk.addons.kinematics.math.RotationNR.getOrder(), com.neuronrobotics.sdk.addons.kinematics.math.RotationNR.getConvention(), java.lang.Math.toRadians(tilt), java.lang.Math.toRadians(elevation), java.lang.Math.toRadians(azumeth))); <BUGE> } 
@java.lang.Override public int hashCode() { int result = ((color) != null) ? color.hashCode() : 0; result = (31 * result) + (type.hashCode()); result = (31 * result) + ((image) != null ? image.hashCode() : 0); <BUGS> result = (31 * result) + (position); <BUGE> return result; } 
public void run() { if (main_package.MapUpdaterGUI.DEBUG) java.lang.System.out.println("Calling run");  main_package.MapUpdaterGUI mapUpdater = new main_package.MapUpdaterGUI(); try { <BUGS> java.lang.System.out.println("Calling create and show GUI"); <BUGE> mapUpdater.createAndShowGUI(); } catch (java.io.IOException | database.AlreadyExistsException | java.sql.SQLException e) { e.printStackTrace(); } } 
public void setEnabled(boolean state) { this.state = state; if (state == false) { oscP5.OscMessage myMessage = new oscP5.OscMessage("/control/joystick/state"); <BUGS> myMessage.add(0); myMessage.add(0); <BUGE> myMessage.add(0.0F); myMessage.add(0.0F); myMessage.add(0.0F); <BUGS> myMessage.add(0); <BUGE> oscP5.send(myMessage, myRemoteLocation); } } 
<BUGS> private java.io.File getComponentFile(java.io.File pathFile, java.lang.String componentName) throws de.invation.code.toval.misc.wd.ProjectComponentException { <BUGE> try { return new java.io.File(java.lang.String.format(de.invation.code.toval.misc.wd.AbstractComponentContainer.componentFileFormat, pathFile.getCanonicalPath(), componentName, ".pnml")); } catch (java.io.IOException e) { throw new de.invation.code.toval.misc.wd.ProjectComponentException("Cannot compose component file.", e); } } 
public int parseRaceNumber() { int start = this.name.indexOf("_"); int stop = this.name.indexOf("_", (start + 1)); <BUGS> if ((start != (-1)) || (stop != (-1))) { <BUGE> java.lang.String sRaceNumber = this.name.substring((start + 1), stop); this.raceNumber = java.lang.Integer.parseInt(sRaceNumber); return this.raceNumber; }else return 1;  } 
public void switcharoo() { game.items.Item itemNew = level.getItem(x, y); if (itemNew == null) return ;  level.removeItem(x, y); <BUGS> game.items.Item itemOld = items[selected]; <BUGE> if (itemOld == null) return ;  <BUGS> items[selected] = null; <BUGE> level.addItem(itemOld, x, y); <BUGS> items[selected] = itemNew; <BUGE> } 
public void reduce(org.apache.hadoop.io.Text key, java.lang.Iterable<org.apache.hadoop.io.DoubleWritable> values, org.apache.hadoop.mapreduce.Reducer.Context context) throws java.io.IOException, java.lang.InterruptedException { double tmppr = 0.0; for (org.apache.hadoop.io.DoubleWritable val : values) { tmppr += val.get(); } <BUGS> title.set("Sum"); <BUGE> err.set(java.lang.String.valueOf(tmppr)); context.write(title, err); } 
@org.junit.Test public void charsetRequiredBeforeRender() throws java.lang.Exception { com.fizzed.rocker.runtime.DefaultRockerModel model = new com.fizzed.rocker.runtime.DefaultRockerModel() { @java.lang.Override protected com.fizzed.rocker.runtime.DefaultRockerTemplate buildTemplate() throws com.fizzed.rocker.RenderingException { return new com.fizzed.rocker.runtime.DefaultRockerTemplate(this) { @java.lang.Override protected void __doRender() throws com.fizzed.rocker.RenderingException, java.io.IOException { } }; } }; try { com.fizzed.rocker.RockerOutput out = model.render(); org.junit.Assert.fail(); } catch (com.fizzed.rocker.RenderingException e) { <BUGS> org.junit.Assert.assertThat(e.getMessage(), org.hamcrest.CoreMatchers.containsString("charset must be initialized")); <BUGE> } } 
@java.lang.Override public void afterTextChanged(android.text.Editable s) { java.lang.String text = s.toString().trim(); savedApis.clear(); <BUGS> org.buildmlearn.toolkit.model.SavedApi tempApi; <BUGE> for (int i = 0; i < (allsavedApis.size()); i++) { <BUGS> if (allsavedApis.get(i).getName().contains(text)) { <BUGE> savedApis.add(allsavedApis.get(i)); } } mAdapter.notifyDataSetChanged(); setEmptyText(); } 
@java.lang.Override public void actionPerformed(java.awt.event.ActionEvent evt) { final int index = tblProducts.getSelectedRow(); final io.github.davidg95.JTill.jtillserver.WasteItem it = wasteItems.get(index); final io.github.davidg95.JTill.jtillserver.Product p = it.getProduct(); if (index == (-1)) { return ; } <BUGS> if ((javax.swing.JOptionPane.showInternalConfirmDialog(GUI.gui.internal, ("Are you sure you want to remove this item?\n" + p), "Stock Item", javax.swing.JOptionPane.YES_NO_OPTION)) == (javax.swing.JOptionPane.YES_OPTION)) { <BUGE> wasteItems.remove(index); updateTable(); } } 
@com.facebook.react.bridge.ReactMethod public void isSimCardValid(com.facebook.react.bridge.Callback callback) { android.telephony.TelephonyManager tm = ((android.telephony.TelephonyManager) (this.reactContext.getSystemService(Context.TELEPHONY_SERVICE))); <BUGS> com.wangghon.RNSimInfo.Bool isSimCardValid = (tm.getSimState()) == (android.telephony.TelephonyManager.SIM_STATE_READY); <BUGE> callback.invoke(isSimCardValid); } 
@java.lang.Override public synchronized net.torocraft.toroquest.civilization.Province register(int chunkX, int chunkZ) { <BUGS> java.lang.System.out.println((((("register [" + chunkX) + "][") + chunkZ) + "]")); <BUGE> net.torocraft.toroquest.civilization.Province province = atLocation(chunkX, chunkZ); if (province != null) { updateExistingProvince(province, chunkX, chunkZ); }else { province = buildNewProvince(chunkX, chunkZ); } markDirty(); return province; } 
public static void mergeDelimitedFrom(com.google.protobuf.Message.Builder builder, java.io.InputStream in) throws java.io.IOException { final int firstByte = in.read(); <BUGS> if (firstByte != (-1)) { <BUGE> final int size = com.google.protobuf.CodedInputStream.readRawVarint32(firstByte, in); final java.io.InputStream limitedInput = new org.apache.hadoop.hbase.io.LimitInputStream(in, size); final com.google.protobuf.CodedInputStream codedInput = com.google.protobuf.CodedInputStream.newInstance(limitedInput); codedInput.setSizeLimit(size); builder.mergeFrom(codedInput); codedInput.checkLastTagWas(0); } } 
@java.lang.Override public java.util.ArrayList<Tuple.Tuple> writeToFile() { <BUGS> BuildList(); <BUGE> Tuple.Tuple a = getNextTuple(); java.util.ArrayList<Tuple.Tuple> result = new java.util.ArrayList<Tuple.Tuple>(); while (a != null) { result.add(a); a = getNextTuple(); } return result; } 
private boolean isEmailAccountConfigured(android.content.Context ctx) { android.accounts.AccountManager am = android.accounts.AccountManager.get(ctx); try { <BUGS> for (android.accounts.Account account : am.getAccounts()) { if (account.type.endsWith("mail")) { return true; } } <BUGE> } catch (java.lang.Exception e) { android.util.Log.e(de.appplant.cordova.emailcomposer.EmailComposer.LOG_TAG, "Missing GET_ACCOUNTS permission."); return true; } <BUGS> return false; <BUGE> } 
private static void addBodyIfExists(java.net.HttpURLConnection connection, com.android.volley.Request<?> request) throws com.android.volley.AuthFailureError, java.io.IOException { byte[] body = request.getBody(); <BUGS> <BUGE> if (body != null) { connection.setDoOutput(true); <BUGS> connection.addRequestProperty(com.android.volley.toolbox.HurlStack.HEADER_CONTENT_TYPE, request.getBodyContentType()); <BUGE> java.io.DataOutputStream out = new java.io.DataOutputStream(connection.getOutputStream()); out.write(body); out.close(); } } 
public void receive(final org.thingml.java.ext.Event event, final org.thingml.java.Port p) { <BUGS> if (active) { <BUGE> event.setPort(p); queue.offer(event); if (((root) == null) && (active.get())) { for (org.thingml.java.Component child : forks) { final org.thingml.java.ext.Event child_e = event.clone(); child.receive(child_e, p); } } } } 
public void robotInit() { java.lang.System.out.println("TEST"); stick = new edu.wpi.first.wpilibj.Joystick(1); <BUGS> <BUGE> drive = new org.usfirst.frc.team5026.robot.subsystems.Drive(); org.usfirst.frc.team5026.robot.Robot.oi = new org.usfirst.frc.team5026.robot.OI(); chooser = new edu.wpi.first.wpilibj.smartdashboard.SendableChooser(); <BUGS> chooser.addDefault("Default Auto", new org.usfirst.frc.team5026.robot.commands.ExampleCommand()); <BUGE> edu.wpi.first.wpilibj.smartdashboard.SmartDashboard.putData("Auto mode", chooser); edu.wpi.first.wpilibj.smartdashboard.SmartDashboard.putNumber("Motor Output", 0.5); <BUGS> org.usfirst.frc.team5026.robot.Robot.hardware = new org.usfirst.frc.team5026.robot.Hardware(); <BUGE> } 
private eu.europa.ec.fisheries.schema.exchange.v1.ExchangeLogStatusTypeType calculateMessageValidationStatus(eu.europa.ec.fisheries.uvms.rules.model.dto.ValidationResultDto validationResult) { <BUGS> if ((faReportValidationResult) != null) { <BUGE> if (validationResult.isError()) { return eu.europa.ec.fisheries.schema.exchange.v1.ExchangeLogStatusTypeType.FAILED; }else if (validationResult.isWarning()) { return eu.europa.ec.fisheries.schema.exchange.v1.ExchangeLogStatusTypeType.SUCCESSFUL_WITH_WARNINGS; }else { return eu.europa.ec.fisheries.schema.exchange.v1.ExchangeLogStatusTypeType.SUCCESSFUL; }  }else { return eu.europa.ec.fisheries.schema.exchange.v1.ExchangeLogStatusTypeType.UNKNOWN; } } 
@java.lang.Override public void onClick(android.view.View v) { setTaskImage(); if (isTeamATurn) <BUGS> android.widget.Toast.makeText(com.example.michael.archerygame.GameActivity.getGameContext(), getNextPlayerTeamA(), Toast.LENGTH_SHORT); <BUGE> else <BUGS> android.widget.Toast.makeText(com.example.michael.archerygame.GameActivity.getGameContext(), getNextPlayerTeamB(), Toast.LENGTH_SHORT); <BUGE>  isTeamATurn = !(isTeamATurn); } 
<BUGS> public java.util.List<com.orientechnologies.orient.server.distributed.ODistributedResponse> getConflictResponses() { <BUGE> final java.util.List<com.orientechnologies.orient.server.distributed.ODistributedResponse> servers = new java.util.ArrayList<com.orientechnologies.orient.server.distributed.ODistributedResponse>(); int bestGroupSoFar = getBestResponsesGroup(); for (int i = 0; i < (responseGroups.size()); ++i) { if (i != bestGroupSoFar) { for (com.orientechnologies.orient.server.distributed.ODistributedResponse r : responseGroups.get(i)) servers.add(r);  } } return servers; } 
public void rbsp_trailing_bits() { <BUGS> for (int i = ((bytestream.length) - 1) * 8; i > 0; i--) { <BUGE> int byte_offset = i / 8; int bit_offset = i % 8; byte valByte = bytestream[byte_offset]; int valInt = (valByte >> (8 - (bit_offset + 1))) & 1; if (valInt == 1) { trailingBitOffSet = i; break; } } } 
<BUGS> protected final java.lang.String getToken() { <BUGE> java.lang.String token = this.getCookie("token"); if (token == null) { token = this.getHeader("token"); if (token == null) { token = this.getString("token"); } } return token; } 
private double getElevation(model.battlefield.map.Tile t, model.battlefield.map.cliff.Cliff c) { if ((t.getModifiedLevel()) > ((c.level) + 1)) { return ((c.level) + 1) * (model.battlefield.map.Tile.STAGE_HEIGHT); } <BUGS> return t.getModifiedElevation(); <BUGE> } 
public static int calculateMax(java.lang.String[] args) { int toReturn = -1; if ((args.length) > 0) { toReturn = ((int) (java.lang.Integer.parseInt(args[0]))); if (toReturn < 1) { throw new java.lang.IllegalArgumentException(); }else { } }else { <BUGS> new java.lang.IllegalArgumentException(); <BUGE> } return toReturn; } 
public static com.neikeq.kicksemu.game.inventory.Expiration fromInt(int value) { switch (value) { case 9200007 : case 9201007 : return com.neikeq.kicksemu.game.inventory.Expiration.DAYS_7; case 9200030 : case 9201030 : return com.neikeq.kicksemu.game.inventory.Expiration.DAYS_30; case 9200999 : case 9201999 : return com.neikeq.kicksemu.game.inventory.Expiration.DAYS_PERM; <BUGS> case 9100010 : <BUGE> case 9101010 : return com.neikeq.kicksemu.game.inventory.Expiration.USAGE_10; <BUGS> case 9100050 : <BUGE> case 9101050 : return com.neikeq.kicksemu.game.inventory.Expiration.USAGE_50; <BUGS> case 9100100 : <BUGE> case 9101100 : return com.neikeq.kicksemu.game.inventory.Expiration.USAGE_100; default : return null; } } 
private void setPlayerHandOffset(int player, int offset) { switch (player) { case 0 : this.player0HandOffset = offset; <BUGS> <BUGE> case 1 : this.player1HandOffset = offset; <BUGS> <BUGE> case 2 : this.player2HandOffset = offset; <BUGS> <BUGE> case 3 : this.player3HandOffset = offset; <BUGS> <BUGE> } } 
<BUGS> public java.util.List<ca.ubc.ece.cpen221.mp3.staff.Vertex> getUpstreamNeighbors(ca.ubc.ece.cpen221.mp3.staff.Vertex v) { java.util.LinkedList<ca.ubc.ece.cpen221.mp3.staff.Vertex> upstreamNeighboursList = new java.util.LinkedList<ca.ubc.ece.cpen221.mp3.staff.Vertex>(); for (java.util.List<java.lang.String> vertices : adjacencyList) { for (java.lang.String vertex : vertices) { if ((v.getLabel()) == vertex) { upstreamNeighboursList.add(new ca.ubc.ece.cpen221.mp3.staff.Vertex(vertexList.get(adjacencyList.indexOf(vertices)))); } <BUGE> } } return upstreamNeighboursList; } 
public void stopTick() { if ((this.IntentReceiver) != null) { <BUGS> this.Context.unregisterReceiver(this.IntentReceiver); <BUGE> } if ((this.Handler) != null) { this.Handler.removeCallbacks(this.Ticker); } } 
private static int argument(char[] array, int cursor, java.lang.StringBuilder argument) { for (int i = cursor; i < (array.length); i++) { char c = array[i]; switch (c) { <BUGS> case ' ' : continue; <BUGE> case ',' : case ')' : return i + 1; <BUGS> <BUGE> default : argument.append(c); } } return array.length; } 
@java.lang.Override public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) { android.view.View layout = inflater.inflate(R.layout.fragment_highscore, container, false); addButtonListeners(layout); <BUGS> android.widget.ListView highscoreList = ((android.widget.ListView) (layout.findViewById(R.id.highscore_list))); <BUGE> highscoreAdapter = new com.guesstheurf.guesstheurf.activities.adapters.HighscoreAdapter(getActivity(), R.layout.highscore_entry, Session.INSTANCE.getHighscores()); highscoreList.setAdapter(highscoreAdapter); com.guesstheurf.guesstheurf.activities.fragments.HighscoreFragment.setListViewHeightBasedOnChildren(highscoreList); return layout; } 
<BUGS> private static void releaseColor(int color, int which) { <BUGE> switch (which) { case com.kmbapps.classscheduler.ClassLoader.DESIRED_CLASSES : if (!(com.kmbapps.classscheduler.ClassLoader.availableColors.contains(color))) { com.kmbapps.classscheduler.ClassLoader.availableColors.push(color); } break; case com.kmbapps.classscheduler.ClassLoader.CURR_SCHEDULE : if (!(com.kmbapps.classscheduler.ClassLoader.currScheduleAvailableColors.contains(color))) { com.kmbapps.classscheduler.ClassLoader.currScheduleAvailableColors.push(color); } break; } } 
private Game.Piece getKing() { java.util.LinkedList<Game.Piece> pieces = Game.Player.state.getPieces(isWhite); for (int i = 0; i < (pieces.size()); i++) { if (5 == (pieces.get(i).getIdentifier())) { return pieces.get(i); } } <BUGS> <BUGE> } 
public static org.joda.time.LocalDate alignProposedBillCycleDate(final org.joda.time.LocalDate proposedDate, final int billingCycleDay) { final int lastDayOfMonth = proposedDate.dayOfMonth().getMaximumValue(); int proposedBillCycleDate = proposedDate.getDayOfMonth(); <BUGS> if ((proposedBillCycleDate < billingCycleDay) && (billingCycleDay <= lastDayOfMonth)) { proposedBillCycleDate = billingCycleDay; <BUGE> } return new org.joda.time.LocalDate(proposedDate.getYear(), proposedDate.getMonthOfYear(), proposedBillCycleDate, proposedDate.getChronology()); } 
public boolean syncData() throws eu.focusnet.app.exception.FocusMissingResourceException { <BUGS> <BUGE> if (!(this.isApplicationReady())) { return false; } if (!(this.net.isNetworkAvailable())) { return false; } this.pushLocalModifications(); this.rebuildApplicationData(); return true; } 
private static in.jaaga.learning.api.ChatReply[] convertToChatReplyOptions(java.lang.String[] options) { java.util.ArrayList<in.jaaga.learning.api.ChatReply> replies = new java.util.ArrayList<>(options.length); <BUGS> in.jaaga.learning.api.ChatReply reply = new in.jaaga.learning.api.ChatReply(); <BUGE> for (int i = 0; i < (options.length); i++) { <BUGS> <BUGE> reply.type = ChatReplyType.Regular; <BUGS> reply.displayText = options[0]; <BUGE> replies.add(reply); } <BUGS> replies.add(reply); <BUGE> return replies.toArray(new in.jaaga.learning.api.ChatReply[0]); } 
@java.lang.Override public void onServicesDiscovered(final android.bluetooth.BluetoothGatt gatt, final int status) { android.util.Log.e("debug", "onServicesDiscovered"); if (gatt.getDevice().getName().contains("SensorTag")) { sensorTag(gatt); <BUGS> }else if (gatt.getDevice().getName().contains("estimote")) { estimote(gatt); }else { }  <BUGE> } 
private void printCosts(int level) { org.sat4j.core.Vec<java.math.BigInteger> costsToPrint = new org.sat4j.core.Vec<java.math.BigInteger>(); costs.copyTo(costsToPrint); <BUGS> for (int i = level + 1; i < (solver.getNumberOfLevels()); i++) { <BUGE> costsToPrint.set(i, computeCostOfLevel(i)); } solver.printCosts(costsToPrint); } 
<BUGS> private java.lang.String getName(com.google.gwt.core.ext.typeinfo.JClassType source) { <BUGE> if ((source.getEnclosingType()) != null) { return ((getName(source.getEnclosingType())) + "_") + (source.getSimpleSourceName()); } return source.getSimpleSourceName(); } 
@java.lang.Override public void checkIfUpdateIsAlreadyDownloaded(com.arjanvlek.cyngnotainfo.Model.CyanogenOTAUpdate cyanogenOTAUpdate) { <BUGS> java.io.File file = new java.io.File((((android.os.Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS).getPath()) + (java.io.File.separator)) + (cyanogenOTAUpdate.getFileName()))); onUpdateDownloaded(((file.exists()) && (!(settingsManager.containsPreference(com.arjanvlek.cyngnotainfo.views.PROPERTY_DOWNLOAD_ID)))), false); <BUGE> } 
protected void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity security) throws java.lang.Exception { <BUGS> security.authorizeRequests().anyRequest().authenticated().antMatchers("/css/**").permitAll().and().formLogin().loginPage("/login").permitAll().failureUrl("/login?error").permitAll().and().logout().permitAll(); <BUGE> } 
public void switchContactAvailability(final java.lang.String user, boolean available) { for (final com.pz.supportchat.commons.models.PresenceAwareRosterEntry rosterEntry : mRosterEntries) { if (org.apache.commons.lang3.StringUtils.equals(rosterEntry.getUser(), user)) { mRosterEntries.get(mRosterEntries.indexOf(rosterEntry)).setPresence(available); <BUGS> }else { throw new java.lang.IllegalStateException("User should be in the roster entry"); <BUGE> } } } 
@org.junit.Test public void testValidateFluxLocationsForFaCatchShouldReturnFalseWithNonEmptySpecifiedFLUXLocationsList() { java.util.List<un.unece.uncefact.data.standard.reusableaggregatebusinessinformationentity._20.FACatch> faCatchFacts = new java.util.ArrayList<>(); un.unece.uncefact.data.standard.reusableaggregatebusinessinformationentity._20.FACatch faCatch = new un.unece.uncefact.data.standard.reusableaggregatebusinessinformationentity._20.FACatch(); java.util.ArrayList<un.unece.uncefact.data.standard.reusableaggregatebusinessinformationentity._20.FLUXLocation> fluxLocations = new java.util.ArrayList<>(); un.unece.uncefact.data.standard.reusableaggregatebusinessinformationentity._20.FLUXLocation fluxLocation = new un.unece.uncefact.data.standard.reusableaggregatebusinessinformationentity._20.FLUXLocation(); fluxLocations.add(fluxLocation); faCatch.setSpecifiedFLUXLocations(fluxLocations); faCatchFacts.add(faCatch); <BUGS> org.junit.Assert.assertFalse(fact.validateFluxLocationsForFaCatch(faCatchFacts)); <BUGE> } 
@java.lang.Override protected void updateItem(program.Employee t, boolean bln) { super.updateItem(t, bln); if (t != null) { <BUGS> setText((((((t.getId()) + " ") + (t.getName())) + " ") + (t.getPayRate()))); <BUGE> }else { listviewEmployees.setPlaceholder(new javafx.scene.control.Label("No Employees")); } } 
@java.lang.Override public void postHandle(javax.servlet.http.HttpServletRequest arg0, javax.servlet.http.HttpServletResponse arg1, java.lang.Object arg2, org.springframework.web.servlet.ModelAndView arg3) throws java.lang.Exception { <BUGS> <BUGE> arg3.addObject("baseurl", com.cportal.config.ConfigDB.retrnConf().getBASEURL()); java.lang.System.out.println(("---Request Completed---" + (com.cportal.config.ConfigDB.getBASEURL()))); } 
private long checkQueryTimeout() { long timeLeft = timeoutAt - (java.lang.System.currentTimeMillis()); <BUGS> if (timeLeft >= 0) { <BUGE> java.lang.String msg = io.druid.common.utils.StringUtils.safeFormat("Query[%s] url[%s] timed out.", query.getId(), url); setupResponseReadFailure(msg, null); throw new io.druid.java.util.common.RE(msg); }else { return timeLeft; } } 
private java.lang.String getRiskBucket(java.lang.String productName, com.github.vincent_fuchs.comprehensive_testing.model.CountryRating countryRating) { java.lang.String productVolatilityIndex = volatilityIndexService.getProductVolatilityIndex(productName); com.github.vincent_fuchs.comprehensive_testing.model.Risk volatilityIndexRisk = computeVolatilityIndexRisk(productVolatilityIndex); com.github.vincent_fuchs.comprehensive_testing.model.Risk countryRisk = computeCountryRisk(countryRating); <BUGS> return ((HIGH) == volatilityIndexRisk) || ((HIGH) == countryRisk) ? com.github.vincent_fuchs.comprehensive_testing.service.HIGH.getRisk() : ((MEDIUM) == volatilityIndexRisk) || ((MEDIUM) == countryRisk) ? com.github.vincent_fuchs.comprehensive_testing.service.MEDIUM.getRisk() : com.github.vincent_fuchs.comprehensive_testing.service.LOW.getRisk(); <BUGE> } 
public void onCreateOptionsMenu(android.view.Menu menu, android.view.MenuInflater inflater) { if ((movies) != null) { inflater.inflate(R.menu.menu_detail, menu); final android.view.MenuItem favorite = menu.findItem(R.id.action_favorite); <BUGS> new com.ashwinpilgaonkar.popularmovies.Backend.Favorite(getContext(), movies, favorite, 0); <BUGE> } } 
public void ExpectedPresident(courtree.Node focusNode) { if (focusNode != null) { <BUGS> inOrderTraverseTree(focusNode.leftChild); <BUGE> if ((president.getbDate()) <= (focusNode.getbDate())) { java.lang.System.out.println(focusNode); setPresident(focusNode); } <BUGS> inOrderTraverseTree(focusNode.rightChild); <BUGE> } } 
@java.lang.Override public void write(io.netty.buffer.ByteBuf byteBuf) throws java.lang.Exception { byteBuf.writeInt(getPlayername().length()); byteBuf.writeCharSequence(getPlayername(), com.google.common.base.Charsets.UTF_8); byteBuf.writeInt(getHost().length()); byteBuf.writeCharSequence(getHost(), com.google.common.base.Charsets.UTF_8); byteBuf.writeInt(getPort()); <BUGS> byteBuf.writeBoolean(isSuccess()); <BUGE> } 
@java.lang.Override public void restoreFromBundle(com.watabou.utils.Bundle bundle) { super.restoreFromBundle(bundle); int[] values = bundle.getIntArray(com.shatteredpixel.shatteredpixeldungeon.items.artifacts.TimekeepersHourglass.timeFreeze.PRESSES); <BUGS> for (int i = 0; i < (values.length); i++) presses.add(values[i]); <BUGE>  partialTime = bundle.getFloat(com.shatteredpixel.shatteredpixeldungeon.items.artifacts.TimekeepersHourglass.timeFreeze.PARTIALTIME); } 
@org.junit.Test public void fourOfAKindTest2() { int[] cards = new int[]{ 12 , 25 , 38 , 51 , 1 , 7 , 29 }; for (int i = 0; i < (cards.length); i++) deck.getCard(cards[i]).displayCard();  int ans = Table.handValue(cards); <BUGS> org.junit.Assert.assertEquals(ans, 8); <BUGE> } 
@java.lang.Override public int generatePageTotal(int total, int pageSize) { <BUGS> if (pageSize > 54) { pageSize = 54; } <BUGE> if (total <= pageSize) return 1;  return ((int) (java.lang.Math.ceil((((double) (total)) / (pageSize - 9))))); } 
public boolean removeDataSet(T d) { if (d == null) return false;  boolean removed = mDataSets.remove(d); if (removed) { mYValCount -= d.getEntryCount(); mYValueSum -= d.getYValueSum(); <BUGS> calcMinMax(mDataSets); <BUGE> } return removed; } 
private synchronized be.olsson.slackappender.SlackAppender.MessageStat getMessageStat(org.apache.log4j.spi.LoggingEvent event) { if (meltdownProtection) { java.lang.String key = event.getMessage().toString(); be.olsson.slackappender.SlackAppender.MessageStat stat = similar.get(key); if (stat == null) { stat = new be.olsson.slackappender.SlackAppender.MessageStat(); <BUGS> stat.countSinceLastLog = 0; <BUGE> stat.lastLogged = java.lang.System.currentTimeMillis(); <BUGS> stat.lastSeen = java.lang.System.currentTimeMillis(); <BUGE> } similar.put(key, stat); (stat.countSinceLastLog)++; stat.lastSeen = java.lang.System.currentTimeMillis(); <BUGS> <BUGE> } return null; } 
public synchronized void calculateReceiptsVisibility(org.iabako.client.ui.form.business.sale.SalePaymentsForm salePaymentsForm) { <BUGS> <BUGE> org.iabako.client.ui.layout.widget.payment.PaymentTable installmentsTable = salePaymentsForm.getInstallmentTable(); int installmentsNumber = (installmentsTable != null) ? installmentsTable.queryDefinitionDTO.getCountTotal() : 0; int invoicesNumber = ((invoiceTable) != null) ? invoiceTable.queryDefinitionDTO.getCountTotal() : 0; if ((invoicesNumber == 1) && (installmentsNumber == 0)) { receiptsPanel.setVisible(false); }else { receiptsPanel.setVisible(true); } } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_image); android.content.Intent intent = getIntent(); android.os.Bundle bundle = intent.getExtras(); thenextvoyager.wallser.Data.DataModel object = ((thenextvoyager.wallser.Data.DataModel) (bundle.getSerializable(thenextvoyager.wallser.Data.Constants.MODEL_TAG))); thenextvoyager.wallser.fragment.ImageFragment fragment = thenextvoyager.wallser.fragment.ImageFragment.newInstance(object); <BUGS> getSupportFragmentManager().beginTransaction().add(R.id.image_frag_container, fragment, thenextvoyager.wallser.Data.Constants.IMAGE_FRAGMENT_TAG).commitAllowingStateLoss(); <BUGE> } 
private void launchBattleFrags() { if ((battleUIFragment) == null) { battleUIFragment = new com.pokemonbattlearena.android.BattleUIFragment(); } if (!(battleBegun)) { battleBegun = true; getFragmentManager().beginTransaction().add(R.id.battle_ui_container, battleUIFragment).commitAllowingStateLoss(); <BUGS> }else { getFragmentManager().beginTransaction().remove(battleUIFragment).commitAllowingStateLoss(); battleUIFragment = null; battleBegun = false; <BUGE> } } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_alarm_edit); java.lang.String title; title = getString(R.string.editAlarmHeader); <BUGS> getActionBar().setTitle(title); <BUGE> alarmTimePicker = ((android.widget.TimePicker) (findViewById(R.id.alarmTimePicker))); alarmManager = ((android.app.AlarmManager) (getSystemService(csuchico.smartnap.ALARM_SERVICE))); alarmNameText = ((android.widget.EditText) (findViewById(R.id.alarmNameEdit))); } 
public int unpin(tachyon.TachyonURI path) throws java.io.IOException { try { <BUGS> mTfs.setPin(mTfs.open(path), true); <BUGE> java.lang.System.out.println((("File '" + path) + "' was successfully unpinned.")); return 0; } catch (java.lang.Exception e) { e.printStackTrace(); java.lang.System.out.println((("File '" + path) + "' could not be unpinned.")); return -1; } } 
public static java.util.List get(java.lang.String query) { org.hibernate.Session session = de.bpetry.data.HibernateSession.sessionFactory.openSession(); session.beginTransaction(); <BUGS> java.util.List result = session.createQuery("from Event").list(); <BUGE> session.getTransaction().commit(); session.close(); return result; } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); be.kandoe_groepj.kandoeproject.kandoeproject.helper.TokenIO.initSharedPreferences(getPreferences(Context.MODE_PRIVATE)); <BUGS> com.facebook.AccessToken.refreshCurrentAccessTokenAsync(); <BUGE> java.lang.String token = be.kandoe_groepj.kandoeproject.kandoeproject.helper.TokenIO.loadToken(); if (token.equals("")) { }else { be.kandoe_groepj.kandoeproject.kandoeproject.helper.TokenIO.removeToken(); } com.facebook.FacebookSdk.sdkInitialize(getApplicationContext()); setContentView(R.layout.activity_login); bindComponents(); addEventsToComponents(); presenter = new be.kandoe_groepj.kandoeproject.kandoeproject.login.LoginPresenterImpl(this); } 
@com.laboon.Test public void testGetCurrentRoomInfo() { com.laboon.Room mockRoom = org.mockito.Mockito.Mockito.mock(com.laboon.Room.class); com.laboon.mockRoom[] mockRoomArray = new com.laboon.mockRoom[1]; <BUGS> mockRoom.when(mockRoom.getDescription()); thenReturn("hi"); <BUGE> com.laboon.House houseTester = new com.laboon.House(mockRoomArray); assertEquals(houseTester.getCurrentRoomInfo(), "hi"); } 
@java.lang.Override public boolean removeEdge(csula.cs4660.graphs.Edge x) { if ((!(nodes.contains(x.getFrom()))) || (!(nodes.contains(x.getTo())))) { java.lang.System.out.println("Error: fromNode or toNode not exists"); }else { <BUGS> edges.remove(x); <BUGE> } return false; } 
private org.springframework.data.geo.Point fillCoordinates(com.geolocation.search.model.Place place) { org.springframework.data.geo.Point coordinates; try { java.lang.Double[] latLong = geoApiHelper.getLatLong(place.getAddress().getAddress()); <BUGS> coordinates = new org.springframework.data.geo.Point(latLong[0], latLong[1]); <BUGE> } catch (java.lang.Exception e) { throw new java.lang.IllegalArgumentException(("Could not find the coordinates to the address provided: " + (place.getAddress().getAddress()))); } return coordinates; } 
private void AddFruit() { boolean bFlag = true; while (bFlag) { int x = ((int) ((java.lang.Math.random()) * (com.snake.Game.sizeByX))); int y = ((int) ((java.lang.Math.random()) * (com.snake.Game.sizeByY))); if ((field[x][y]) == 0) { bFlag = false; <BUGS> field[x][y] = -2; <BUGE> } } } 
@org.junit.Test public void testBasicApply() { <BUGS> final int arg1 = 123; final double arg2 = 3.14; <BUGE> ru.spbau.mit.Function2<java.lang.Integer, java.lang.Double, java.lang.String> concat = new ru.spbau.mit.Function2<java.lang.Integer, java.lang.Double, java.lang.String>() { @java.lang.Override public java.lang.String apply(java.lang.Integer arg1, java.lang.Double arg2) { return (arg1.toString()) + (arg2.toString()); } }; <BUGS> org.junit.Assert.assertEquals(concat.apply(arg1, arg2), "1233.14"); <BUGE> } 
public void nextPage() { <BUGS> <BUGE> if (((entryPage) != ((entryWrapperMap.asMap().size()) - 1)) && (!(entryWrapperMap.asMap().isEmpty()))) (entryPage)++;  } 
private boolean isValidDigitFields() { boolean isValid = true; if (com.zhour.utils.Utility.isValueNullOrEmpty(com.zhour.fragments.AlienCarFragment.et_vehicle_number.getText().toString())) { com.zhour.utils.Utility.setSnackBar(mParent, com.zhour.fragments.AlienCarFragment.et_vehicle_number, "Please write code"); isValid = false; }else <BUGS> if ((com.zhour.fragments.AlienCarFragment.et_vehicle_number.getText().toString().length()) != 4) { <BUGE> com.zhour.utils.Utility.setSnackBar(mParent, com.zhour.fragments.AlienCarFragment.et_vehicle_number, "Code must be 4 digit"); isValid = false; }  return isValid; } 
@java.lang.Override public void onBackPressed() { if (((databaseLayout) != null) && (databaseLayout.onBackPressed())) { return ; } if (((options) != null) && (options.isClosable())) { android.content.Intent intent = new android.content.Intent(Lock.CANCELED_ACTION); android.support.v4.content.LocalBroadcastManager.getInstance(this).sendBroadcast(intent); <BUGS> super.onBackPressed(); <BUGE> } <BUGS> <BUGE> } 
void reload() { if (mActivity.TWO_PLAYER_GAME()) { <BUGS> if ((mPlayerButtonList.size()) == 0) { <BUGE> createButtonsPlayerList(); }else { for (int i = 0; i < (mActivity.game.size()); i++) { mPlayerButtonList.get(i).reload(mActivity.game.getPlayer(i)); } } } } 
@java.lang.Override java.util.List<ly.kite.catalogue.Asset> getAssetsForUploading() { java.util.ArrayList<ly.kite.catalogue.Asset> assets = new java.util.ArrayList<ly.kite.catalogue.Asset>(); <BUGS> assets.add(mFrontImageAsset); assets.add(mBackImageAsset); assets.add(mInsideLeftImageAsset); assets.add(mInsideRightImageAsset); <BUGE> return assets; } 
private java.lang.String getOwnerName(org.cubeengine.module.signmarket.data.MarketSignData data) { <BUGS> <BUGE> if (data.isAdminOwner()) { return "Server"; } org.spongepowered.api.service.user.UserStorageService uss = org.spongepowered.api.Sponge.getServiceManager().provide(org.spongepowered.api.service.user.UserStorageService.class).get(); return uss.get(org.spongepowered.api.profile.GameProfile.of(data.getOwner(), null)).map(User::getName).orElse("???"); } 
<BUGS> public java.lang.Long requestBook(java.lang.Long bookId) throws library_project.models.BookIsOutException { <BUGE> library_project.models.Reservation newReservation = null; synchronized(this) { if (!(isOut(bookId))) { newReservation = new library_project.models.Reservation(bookId); allReservations.add(newReservation); return newReservation.getId(); } } throw new library_project.models.BookIsOutException(); } 
@android.support.annotation.RequiresApi(value = android.os.Build.VERSION_CODES.JELLY_BEAN_MR1) @java.lang.Override public void sendStickyOrderedBroadcastAsUser(final android.content.Intent intent, final android.os.UserHandle user, final android.content.BroadcastReceiver resultReceiver, final android.os.Handler scheduler, final int initialCode, final java.lang.String initialData, final android.os.Bundle initialExtras) { mCondom.proceedBroadcast(intent, new com.oasisfeng.condom.CondomCore.WrappedProcedure() { @java.lang.Override <BUGS> public void run(final android.content.Intent intent) { <BUGE> com.oasisfeng.condom.CondomContext.super.sendStickyOrderedBroadcastAsUser(intent, user, resultReceiver, scheduler, initialCode, initialData, initialExtras); } }); } 
@java.lang.Override public eu.einfracentral.domain.aai.User activate(java.lang.String id) { eu.einfracentral.domain.aai.User ret = reveal(get(id)); if ((ret.getJoinDate()) == null) { ret.setJoinDate(new java.util.Date().toString()); <BUGS> <BUGE> } return ret; } 
protected void updateTimes() { if (_isStartTimeModified) { <BUGS> _newAppointment.setStartTime(_calendarTime.get(java.util.Calendar.HOUR_OF_DAY), _calendarTime.get(java.util.Calendar.MINUTE)); <BUGE> _txtStartTime.setText(_newAppointment.getFormattedStartTime()); _txtEndTime.setText(_newAppointment.getFormattedEndTime()); }else { <BUGS> _newAppointment.setEndTime(_calendarTime.get(java.util.Calendar.HOUR_OF_DAY), _calendarTime.get(java.util.Calendar.MINUTE)); <BUGE> _txtEndTime.setText(_newAppointment.getFormattedEndTime()); } } 
@org.junit.Test @org.springframework.transaction.annotation.Transactional @org.springframework.test.annotation.Rollback(value = true) public void testGetRoleCount() { ca.uhnresearch.pughlab.tracker.dao.CaseQuery query = new ca.uhnresearch.pughlab.tracker.dao.CaseQuery(); ca.uhnresearch.pughlab.tracker.dto.Study study = org.easymock.EasyMock.createMock(ca.uhnresearch.pughlab.tracker.dto.Study.class); <BUGS> org.easymock.EasyMock.expect(study.getId()).andStubReturn(2); <BUGE> org.easymock.EasyMock.replay(study); java.lang.Long count = authorizationRepository.getStudyRoleCount(study, query); junit.framework.Assert.assertEquals(3, count.longValue()); } 
public com.intplus.shoppingspace.model.Shop getShopById(int sid) { com.intplus.shoppingspace.model.Shop currentShop = null; try { com.intplus.shoppingspace.controller.AppController.shopDatabase = new com.intplus.shoppingspace.model.ShopDatabase(this.activity); com.intplus.shoppingspace.controller.AppController.shopDatabase.open(); currentShop = com.intplus.shoppingspace.controller.AppController.shopDatabase.shopsDao.fetchShopBySid(sid); <BUGS> android.util.Log.d("APPsds", currentShop.getShopName()); <BUGE> } catch (java.lang.Exception e) { android.util.Log.e(com.intplus.shoppingspace.controller.AppController.APPLOG, (("Shop with given id:" + sid) + "is not found")); } finally { com.intplus.shoppingspace.controller.AppController.shopDatabase.close(); android.util.Log.e(com.intplus.shoppingspace.controller.AppController.APPLOG, "Db is closed"); } return currentShop; } 
@java.lang.Override public boolean show() { <BUGS> <BUGE> if (!(player.isOnline())) { return false; <BUGS> } if (shown) { return true; <BUGE> } for (org.bukkit.Location loc : points) { if (!(dk.lockfuglsang.minecraft.animation.PlayerHandler.sendBlockChange(player, loc, material, data))) { return false; } } shown = true; return true; } 
private void swapLayoutManager() { gridView = !(gridView); android.support.v7.widget.RecyclerView.LayoutManager manager = (gridView) ? new android.support.v7.widget.GridLayoutManager(getActivity(), 3) : new android.support.v7.widget.LinearLayoutManager(getActivity()); android.support.v7.widget.RecyclerView.Adapter adapter = (gridView) ? new com.gustavosilvadesousa.etflickr.ui.PhotoGridAdapter(photos) : new com.gustavosilvadesousa.etflickr.ui.PhotoRowAdapter(photos); mRecyclerView.setLayoutManager(manager); <BUGS> mRecyclerView.swapAdapter(adapter, false); <BUGE> } 
@java.lang.Override public java.lang.Object visitArrayVariable(DECAF2.DECAF2Parser.ArrayVariableContext ctx) { java.lang.String nombreVar = ctx.getChild(0).getText(); int locationSave = java.lang.Integer.parseInt(ctx.getChild(2).getText()); <BUGS> java.lang.System.out.println(("ArrayVariable called " + (ctx.getText()))); <BUGE> java.util.ArrayList returnArray = new java.util.ArrayList(); returnArray.add(nombreVar); returnArray.add(locationSave); return returnArray; } 
@org.junit.Test public void testOverrideOutputLimits() { <BUGS> xbot.common.math.PIDManager manager = new xbot.common.math.PIDManager("test", injector.getInstance(xbot.common.properties.XPropertyManager.class), 1, 0, 0, 0.5, (-0.25)); <BUGE> double output = manager.calculate(100, 0); org.junit.Assert.assertEquals(0.5, output, 0.001); output = manager.calculate((-100), 0); org.junit.Assert.assertEquals((-0.25), output, 0.001); } 
<BUGS> private org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.AbstractModuleExclusion maybeMergeIntoUnion(org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.ModuleExclusion one, org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.ModuleExclusion two) { <BUGE> if ((one instanceof org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion) && (two instanceof org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion)) { return maybeMergeIntoUnion(((org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion) (one)), ((org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion) (two))); } return null; } 
public synchronized void stop() { <BUGS> if ((acceptThread) != null) { acceptThread.cancel(); acceptThread = null; } <BUGE> if ((connectThread) != null) { connectThread.cancel(); connectThread = null; } if ((connectedThread) != null) { connectedThread.cancel(); connectedThread = null; } <BUGS> <BUGE> setServiceState(koshianpan.github.com.pontroller.BluetoothService.STATE_NONE); } 
public static void init() { org.usfirst.frc.team972.robot.Logger.init(); org.usfirst.frc.team972.robot.Drive.init(); org.usfirst.frc.team972.robot.Winch.init(); org.usfirst.frc.team972.robot.Shooter.init(); <BUGS> org.usfirst.frc.team972.robot.ShooterAlignment.init(); <BUGE> org.usfirst.frc.team972.robot.Intake.init(); org.usfirst.frc.team972.robot.GearMechanism.init(); org.usfirst.frc.team972.robot.Time.init(); } 
@java.lang.Override public void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); if ((savedInstanceState == null) || (!(savedInstanceState.containsKey("movieList")))) { <BUGS> updateMovies(); <BUGE> }else { movieList = savedInstanceState.getParcelableArrayList("movieList"); } if ((getArguments()) != null) { } } 
private boolean teamHasSpace(int userId, int teamId) { <BUGS> <BUGE> try { se.plushogskolan.casemanagement.model.User user = userRepository.getUserById(userId); if ((user.getTeamId()) == teamId) { return true; }else { return numberOfUsersInTeamLessThanTen(teamId); } } catch (se.plushogskolan.casemanagement.exception.RepositoryException e) { return numberOfUsersInTeamLessThanTen(teamId); } } 
public static void main(final java.lang.String[] args) throws java.io.IOException { <BUGS> simulator.graphics.plotter.Plotter plotter = new simulator.graphics.plotter.Plotter("prova", 800, 600); plotter.addPlot("/home/stefano/test.txt", null, "test.txt"); plotter.setVisible(true); <BUGE> simulator.graphics_swing.AnimationNetwork an = new simulator.graphics_swing.AnimationNetwork(800, 600, "prova"); an.setTimer(90); an.loadSimulation("Topology/Topology_distributed_singleNode.json", "data/File/Packets.txt"); an.start(); } 
public java.sql.ResultSet doQuery(java.lang.String query, java.lang.String... args) throws java.sql.SQLException { java.sql.PreparedStatement stmt = con.prepareStatement(query); for (int i = 0; i < (args.length); i++) { stmt.setString((i + 1), args[i]); } <BUGS> return stmt.executeQuery(query); <BUGE> } 
public boolean upload(java.lang.String nyIpName, java.lang.String fileName, FileContents contents) { <BUGS> invalidateClients(fileName); <BUGE> java.lang.System.out.println(("Received file! Name: " + fileName)); ServerCachedFile serverFile = getFile(fileName); if ((serverFile.state) == (FileState.Not_Shared)) { java.lang.System.out.println("File not shared!"); return false; } serverFile.fileContents = contents; writeFile(serverFile); <BUGS> <BUGE> serverFile.currentWriter = null; <BUGS> <BUGE> return true; } 
private void stop(int resId, java.lang.Object... formatArgs) { java.lang.String message = (resId > 0) ? getString(resId, formatArgs) : null; if (isPlaying) { isPlaying = false; stopForeground(true); } if ((player) != null) { isPrepared = false; player.reset(); player.release(); <BUGS> player = null; <BUGE> } broadcastEvent(PlayerEvent.STOP, message); stopSelf(); } 
public static com.raizlabs.android.dbflow.sql.language.ColumnAlias columnsWithFunction(java.lang.String functionName, com.raizlabs.android.dbflow.sql.language.ColumnAlias... columnAliases) { com.raizlabs.android.dbflow.sql.QueryBuilder queryBuilder = new com.raizlabs.android.dbflow.sql.QueryBuilder(functionName).append("("); for (int i = 0; i < (columnAliases.length); i++) { if (i > 0) { queryBuilder.append(","); } <BUGS> queryBuilder.appendQuoted(columnAliases[i].getAliasName()); <BUGE> } queryBuilder.append(")"); return com.raizlabs.android.dbflow.sql.language.ColumnAlias.columnRaw(queryBuilder.getQuery()); } 
public static void loadAllWeight() { java.lang.String openid = session.get("openid"); <BUGS> openid = "ob1R-uD5CgT-x-FEdtMIgAWYr4Vs"; <BUGE> java.lang.String sql = ("select new beans.PregwBean(w.wDate,w.wValue) from GestationalWeight w where  w.userId = '" + openid) + "' order by w.wDate desc"; java.util.List<beans.PregwBean> bean = play.db.jpa.JPA.em().createQuery(sql).getResultList(); wsOk(bean); } 
@java.lang.Override public void onClick(android.view.View v) { <BUGS> com.common.PreferanceUtil preferanceUtil = new com.common.PreferanceUtil(mContext); <BUGE> preferanceUtil.setCardDetail(mCard); com.common.SingletonClass.sharedInstance().setCard(mCard); android.content.Intent intent = new android.content.Intent(getActivity(), com.marchant.HomeActivity.class); intent.putExtra("ActivityName", "Splash"); startActivity(intent); } 
private void drawWifi(com.anwesome.games.dataindicationbutton.Canvas canvas, com.anwesome.games.dataindicationbutton.Paint paint) { float r = (radius) / 60; canvas.drawCircle(0, 0, r, paint); for (int i = 1; i <= 3; i++) { float newR = r * (i * 10); <BUGS> canvas.drawArc(new com.anwesome.games.dataindicationbutton.RectF((-r), (-r), r, r), 240, 60, false, paint); <BUGE> } } 
private void upload(com.webessay.model.Orders orders, org.springframework.web.multipart.MultipartFile file) throws java.lang.Exception { <BUGS> com.webessay.model.Uploadfile entity = new com.webessay.model.Uploadfile(); entity.setFileContentType(file.getContentType()); entity.setFileName(file.getOriginalFilename()); entity.setFileSize(file.getSize()); entity.setFile(file.getBytes()); uploadrepo.save(entity); orders.setFileId(entity.getId()); <BUGE> } 
public java.util.List<java.lang.Integer> getDaysFromThisMonth(int month, int year) { java.util.Calendar cal = new java.util.GregorianCalendar(); <BUGS> <BUGE> int max = cal.getActualMaximum(java.util.Calendar.DAY_OF_MONTH); <BUGS> <BUGE> java.util.List<java.lang.Integer> daysFromThisMonth = new java.util.ArrayList<java.lang.Integer>(); for (int i = 0; i < max; i++) { daysFromThisMonth.add((i + 1)); } return daysFromThisMonth; } 
private void revertInformationOfRequest(final com.dmm.leavemanagementsystem.models.LeaveRequest request, final int position) { setupTextViewStatus(request); setupLinearLayoutApproveOrUnapprove(request, position); <BUGS> setupSpinnerSubject(request, position); <BUGE> setupTextViewPhone(request); setupEditTextMessage(request); setupTextViewFromDate(request); setupTextViewFromHour(((request.getSt_approve()) == 0)); setupSpinnerDuration(request.getDuration()); setupTextViewUnitDuration(); setupLinearLayoutDeleteAndRevert(request, position); } 
public final hu.akarnokd.rxjava2.basetypes.Solo<T> doOnComplete(hu.akarnokd.rxjava2.basetypes.Action onComplete) { hu.akarnokd.rxjava2.basetypes.ObjectHelper.requireNonNull(onComplete, "onComplete is null"); <BUGS> return hu.akarnokd.rxjava2.basetypes.Solo.onAssembly(new hu.akarnokd.rxjava2.basetypes.SoloDoOnLifecycle<T>(this, hu.akarnokd.rxjava2.basetypes.Functions.emptyConsumer(), hu.akarnokd.rxjava2.basetypes.Functions.emptyConsumer(), Functions.ERROR_CONSUMER, onComplete, Functions.EMPTY_ACTION, hu.akarnokd.rxjava2.basetypes.Functions.emptyConsumer(), Functions.EMPTY_LONG_CONSUMER, Functions.EMPTY_ACTION)); <BUGE> } 
public java.lang.String getJSONByCode(java.lang.String reference) throws error.ApiNotReachableException, error.InvalidTokenException, error.KoronaCloudAPIErrorMessageException, org.codehaus.jettison.json.JSONException { <BUGS> <BUGE> reference = reference.replaceAll(" ", "%20"); reference = reference.replaceAll("/", "%2F"); reference = reference.replaceAll("&", "%26"); reference = reference.replaceAll("#", "%23"); reference = reference.replaceAll("!", "%21"); <BUGS> reference = reference.replaceAll("%", "%20"); <BUGE> return new java.lang.String(link.CloudLink.ApiCon.fetchData(DataType.product, ReferenceType.code, reference)); } 
@java.lang.Override public void onRequestPermissionsResult(int requestCode, java.lang.String[] permissions, int[] grantResults) { switch (requestCode) { case io.card.payment.CardIOActivity.PERMISSION_REQUEST_ID : { waitingForPermission = false; if (((grantResults.length) > 0) && ((grantResults[0]) == (android.content.pm.PackageManager.PERMISSION_GRANTED))) { showCameraScannerOverlay(); }else { manualEntryFallbackOrForced = true; } <BUGS> onResume(); <BUGE> } } } 
public void restore_to(java.util.ArrayList<java.lang.Integer> old_playable, java.util.ArrayList<java.lang.Integer> old_played, int level) { playable = new name.cantanima.idealnim.Ideal(old_playable); played = new name.cantanima.idealnim.Ideal(old_played); game_level = level; <BUGS> evaluator = new name.cantanima.idealnim.Game_Evaluation_Hashmap(getContext(), playable, played, view_xmax, view_ymax, game_level); <BUGE> evaluator.game_value(); game_control = new name.cantanima.idealnim.Game_Control(); game_control.new_game(this, view_xmax, view_ymax, game_level, false); invalidate(); } 
public static void main(java.lang.String[] args) throws java.io.IOException { if (3 != (args.length)) { upem.jarret.worker.ClientJarRet.usage(); return ; } upem.jarret.worker.ClientJarRet client = new upem.jarret.worker.ClientJarRet(args[0], args[1], java.lang.Integer.parseInt(args[2])); <BUGS> try { client.launch(); } catch (java.lang.ClassNotFoundException | java.lang.IllegalAccessException | java.lang.InstantiationException e) { e.printStackTrace(); } <BUGE> } 
public static boolean checkPlayersTiles(java.lang.String board, int player, int value, int numOfValues) { java.lang.String tiles = game.manger.SaveTheIslandGame.Board.getPlayersTiles(player, board); int count = 0; for (int i = 0; i < 5; i++) { if ((java.lang.Integer.parseInt(tiles.substring(i, (i + 1)))) == value) { count++; } } <BUGS> return count == value; <BUGE> } 
@java.lang.Override protected java.lang.Void doInBackground(java.lang.String... params) { bl.CampusBLService.viewThisPost(postId); java.lang.String postId = params[0]; isFollowed = bl.CampusBLService.isFollowed(postId); isPraised = bl.CampusBLService.isPraised(postId); post = bl.CampusBLService.getPostDetail(postId); <BUGS> post.setTitle(getIntent().getStringExtra("title")); <BUGE> replies = post.getReplyList(); return null; } 
public double getNumSteps(android.graphics.Point p1, android.graphics.Point p2, int stepSize) { int x = (p2.x) - (p1.x); int y = (p2.y) - (p1.y); <BUGS> double distance = (java.lang.Math.abs(java.lang.Math.sqrt(((x * x) + (y * y))))) * (player.getScale()); <BUGE> android.util.Log.i("Distance between p1/p2", ("" + distance)); return distance / stepSize; } 
@java.lang.Override public void onHandleMessage(olof.sjoholm.Net.Server.Player player, olof.sjoholm.Net.Both.Envelope envelope) { if (envelope instanceof olof.sjoholm.Net.Both.Envelope.PlayerSelectColor) { <BUGS> player.setColor(((olof.sjoholm.Net.Both.Envelope.PlayerSelectColor) (envelope)).color); <BUGE> gameBoard.updatePlayer(player); } if (envelope instanceof olof.sjoholm.Net.Both.Envelope.PlayerSelectName) { player.setName(((olof.sjoholm.Net.Both.Envelope.PlayerSelectName) (envelope)).name); gameBoard.updatePlayer(player); } } 
@java.lang.Override public boolean onDependentViewChanged(android.support.design.widget.CoordinatorLayout parent, android.support.design.widget.FloatingActionButton fab, android.view.View dependency) { if (dependency instanceof android.support.design.widget.AppBarLayout) { <BUGS> if ((dependency.getY()) > 0) { <BUGE> fab.show(); }else { fab.hide(); } } return true; } 
private void grow() { byte[] old = _buffer; _buffer = new byte[(_buffer.length) * 2]; <BUGS> int pos = _position; java.lang.System.arraycopy(old, 0, _buffer, 0, pos); _encoder.init(_buffer, pos, ((_buffer.length) * 2)); <BUGE> } 
@java.lang.Override public void readFromNBT(net.minecraft.nbt.NBTTagCompound nbtTagCompound) { <BUGS> super.readFromNBT(nbtTagCompound); <BUGE> if (nbtTagCompound.hasKey(Names.NBT.SOURCES)) { net.minecraft.nbt.NBTTagList list = nbtTagCompound.getTagList(Names.NBT.SOURCES, Constants.NBT.TAG_INT_ARRAY); for (int i = 0; i < (list.tagCount()); i++) { sources.add(de.keridos.floodlights.util.GeneralUtil.getPosFromIntArray(list.getIntArrayAt(i))); } } } 
public int next() { if ((currentPosition) == ((realEstate.SortedList.list.length) - 1)) { currentPosition = 0; return realEstate.SortedList.list[currentPosition]; } <BUGS> return realEstate.SortedList.list[((currentPosition)++)]; <BUGE> } 
private <TGeo extends de.k3b.geo.api.GeoPointDto> TGeo getYandexUri(java.lang.String uri, TGeo parseResult) { <BUGS> java.lang.String search = "map="; <BUGE> int dataStart = contentIndexBehind(uri, "ll="); java.lang.String[] parts = getParts(uri, dataStart, "[,?&]", 2); if (parts != null) { de.k3b.geo.io.GeoUri.setLatLonZoom(parseResult, parts[1], parts[0], null); } return uriParamParse(uri, parseResult); } 
public static boolean putRegistryResource(java.lang.String path, org.wso2.carbon.registry.api.Resource resource) throws org.wso2.carbon.device.mgt.extensions.device.type.template.exception.DeviceTypeMgtPluginException { try { org.wso2.carbon.registry.core.Registry registry = org.wso2.carbon.device.mgt.extensions.device.type.template.util.DeviceTypeUtils.getConfigurationRegistry(); <BUGS> if (registry == null) { return false; }else { registry.beginTransaction(); registry.put(path, resource); registry.commitTransaction(); return true; } <BUGE> } catch (org.wso2.carbon.registry.api.RegistryException e) { throw new org.wso2.carbon.device.mgt.extensions.device.type.template.exception.DeviceTypeMgtPluginException(("Error occurred while persisting registry resource : " + (e.getMessage())), e); } } 
public static de.digitalcollections.core.model.api.MimeType fromExtension(java.lang.String ext) { final java.lang.String extension; if (ext.startsWith(".")) { <BUGS> extension = ext.substring(1); <BUGE> }else { <BUGS> extension = ext; <BUGE> } return de.digitalcollections.core.model.api.MimeType.knownTypes.values().stream().filter(( m) -> m.getExtensions().contains(extension)).findFirst().orElseGet(() -> null); } 
private com.bitdubai.fermat_api.layer.osa_android.database_system.DatabaseTableRecord getContractDataRecord(java.lang.String assetPublicKey, java.lang.String name, java.lang.String value) throws com.bitdubai.fermat_dap_plugin.layer.middleware.asset.issuer.developer.bitdubai.version_1.exceptions.DatabaseOperationException, com.bitdubai.fermat_dap_plugin.layer.middleware.asset.issuer.developer.bitdubai.version_1.exceptions.MissingAssetDataException { com.bitdubai.fermat_api.layer.osa_android.database_system.DatabaseTable databaseTable = getDatabaseTable(AssertFactoryMiddlewareDatabaseConstant.ASSET_FACTORY_CONTRACT_TABLE_NAME); com.bitdubai.fermat_api.layer.osa_android.database_system.DatabaseTableRecord record = databaseTable.getEmptyRecord(); record.setStringValue(AssertFactoryMiddlewareDatabaseConstant.ASSET_FACTORY_CONTRACT_ASSET_PUBLIC_KEY_COLUMN, assetPublicKey); <BUGS> <BUGE> record.setStringValue(AssertFactoryMiddlewareDatabaseConstant.ASSET_FACTORY_CONTRACT_VALUE_COLUMN, value); <BUGS> record.setStringValue(AssertFactoryMiddlewareDatabaseConstant.ASSET_FACTORY_CONTRACT_NAME_COLUMN, name); <BUGE> return record; } 
protected android.os.Bundle createTransportOptionsBundle(android.util.Pair[] sharedViews) { if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { if (sharedViews != null) { <BUGS> final android.view.View decorView = getWindow().getDecorView(); <BUGE> java.util.ArrayList<android.util.Pair> sharedViewList = extendsSharedViewsForTransport(new java.util.ArrayList(java.util.Arrays.asList(sharedViews))); sharedViews = new android.util.Pair[sharedViewList.size()]; sharedViewList.toArray(sharedViews); return android.app.ActivityOptions.makeSceneTransitionAnimation(this, sharedViews).toBundle(); } } return null; } 
@java.lang.Override public boolean isInGroup(java.lang.String world, java.lang.String permName, org.bukkit.entity.Player player) { if (plugin.config.isDefaultrankallworlds()) { <BUGS> java.lang.System.out.println("CR rankAddGlobal"); <BUGE> world = null; } if ((plugin.config.permissionpluginhasworldsupport()) == false) { world = null; } return net.slipcor.classranks.handlers.HandleVaultPerms.permission.playerInGroup(world, player.getName(), permName); } 
public void setCapacity(edmondskarp.Gui.Arrow arrow, int capacity) { <BUGS> saveState(); <BUGE> arrow.getEdge().setCapacity(capacity); arrow.getEdge().getInverse().setCapacity(capacity); arrow.getEdge().getInverse().setFlow(capacity); <BUGS> <BUGE> } 
private java.lang.String askForFirstPassword() { java.lang.String ret = null; java.lang.String s1 = askForPassword("Insert a password for secure archive. You MUST remember it unlock the archive!"); if (s1 != null) { java.lang.String s2 = askForPassword("Please re-type the previous password"); if (s2 != null) { if (s1.equals(s2)) { ret = s1; }else { javax.swing.JOptionPane.showMessageDialog(this, "Two password doesn't match!", "Error", javax.swing.JOptionPane.ERROR_MESSAGE); <BUGS> askForFirstPassword(); <BUGE> } } } return ret; } 
@java.lang.Override public void actionPerformed(java.awt.event.ActionEvent arg0) { <BUGS> done.push(grid); <BUGE> if (undone.isEmpty()) sim.eqiv(grid, sim.takeStep(grid, mmax)); else sim.eqiv(grid, undone.pop());  sim.updateToGrid(frame, panel, grid, mmax); } 
private void initRotateView() { if ((mRotateView) != null) { return ; } mRotateView = new android.widget.ImageView(getContext()); mRotateView.setImageResource(R.drawable.ic_rotate); mRotateView.setBackgroundResource(R.drawable.stretch_shape_background); mRotateView.setOnTouchListener(createRotateListener()); <BUGS> final int rotateViewGravity = ((android.view.Gravity.CENTER_VERTICAL) | (android.view.Gravity.RIGHT)) | (android.view.Gravity.TOP); <BUGE> final net.yazeed44.resizableviewlibrary.LayoutParams rotateViewLayoutParams = new net.yazeed44.resizableviewlibrary.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT, rotateViewGravity); addView(mRotateView, rotateViewLayoutParams); } 
public int advance(int target) throws java.io.IOException { int doc = scorer.advance(target); if (doc == (NO_MORE_DOCS)) { return doc; } currentScore = innerScore(); if ((currentScore) < (minScore)) { <BUGS> return scorer.nextDoc(); <BUGE> } return doc; } 
private void createElanForwardingTablesList(java.lang.String elanName, org.opendaylight.yang.gen.v1.urn.opendaylight.netvirt.elan.rev150602.forwarding.entries.MacEntry macEntry, org.opendaylight.controller.md.sal.binding.api.WriteTransaction tx) { org.opendaylight.yangtools.yang.binding.InstanceIdentifier<org.opendaylight.yang.gen.v1.urn.opendaylight.netvirt.elan.rev150602.forwarding.entries.MacEntry> macEntryId = org.opendaylight.netvirt.elan.utils.ElanUtils.getMacEntryOperationalDataPath(elanName, macEntry.getMacAddress()); com.google.common.base.Optional<org.opendaylight.yang.gen.v1.urn.opendaylight.netvirt.elan.rev150602.forwarding.entries.MacEntry> existingMacEntry = elanUtils.read(broker, LogicalDatastoreType.OPERATIONAL, macEntryId); if ((!(existingMacEntry.isPresent())) && ((elanUtils.getElanMacTable(elanName)) != null)) { <BUGS> tx.put(LogicalDatastoreType.OPERATIONAL, macEntryId, macEntry); <BUGE> } } 
@org.junit.Test @junitparams.Parameters(value = { "astText.md, astText.ast" }) public void dumpAST(java.lang.String mkdSrc, java.lang.String astSrc) throws java.io.IOException { java.lang.String mkd = loadResource(mkdSrc).trim(); java.lang.String ast = loadResource(astSrc).trim(); org.pegdown.PegDownProcessor processor = new org.pegdown.PegDownProcessor(org.pegdown.Extensions.ALL); <BUGS> org.pegdown.ast.RootNode rootNode = processor.parseMarkdown(mkd.toCharArray()); <BUGE> java.lang.String s = dumpAST(rootNode); org.assertj.core.api.Assertions.assertThat(normalize(s.trim())).isEqualTo(normalize(ast)); } 
public android.database.Cursor getAllNotes(java.lang.String sortOrder) { android.database.Cursor cursor = null; if (sortOrder == "date") { cursor = mDb.query(NotesContract.TABLE_NAME, null, null, null, null, null, ((NotesContract.COLUMN_DATE) + " DESC")); }else if (sortOrder == "fav") { <BUGS> cursor = mDb.query(NotesContract.TABLE_NAME, null, null, null, null, null, NotesContract.COLUMN_FAV); <BUGE> }  return cursor; } 
private void handleDCPRequest(final com.couchbase.client.core.message.dcp.DCPRequest req) { <BUGS> java.lang.System.out.println("In handleDCPRequest"); <BUGE> if (req instanceof com.couchbase.client.core.message.dcp.MutationMessage) { com.couchbase.client.core.message.dcp.MutationMessage msg = ((com.couchbase.client.core.message.dcp.MutationMessage) (req)); handleMutation(msg, msg.partition()); }else if (req instanceof com.couchbase.client.core.message.dcp.RemoveMessage) { com.couchbase.client.core.message.dcp.RemoveMessage msg = ((com.couchbase.client.core.message.dcp.RemoveMessage) (req)); handleRemove(msg, msg.partition()); }  } 
<BUGS> private void updateCell(int row, int col) { javafx.scene.shape.Rectangle r = getRectangle(row, col); if (game.isAlive(row, col)) { <BUGE> r.setFill(com.jsaop.conways.app.GameOfLife.CELL_FILL_COLOR); r.setStroke(com.jsaop.conways.app.GameOfLife.CELL_FILL_COLOR); }else { r.setFill(javafx.scene.paint.Color.BLACK); r.setStroke(javafx.scene.paint.Color.BLACK); } } 
@java.lang.Override public void init(ijfx.ui.module.input.Input input) { if (ChannelSelector.STYLE.equals(input.getWidgetType())) { channelSelector = new ijfx.ui.correction.ChannelSelector(null); channelSelector.channelNumberProperty().setValue(10); <BUGS> channelSelector.selectedChannelProperty().asObject().bindBidirectional(valueProperty()); <BUGE> channelSelector.selectChannel(((int) (input.getValue()))); node = channelSelector; }else { super.init(input); node = super.getNode(); } } 
public void loadSettingsPage() { this.setSize(edu.ucsb.cs56.projects.games.connectfour.startScreen2.menu_width, edu.ucsb.cs56.projects.games.connectfour.startScreen2.menu_height); this.remove(edu.ucsb.cs56.projects.games.connectfour.startScreen2.ss); this.repaint(); edu.ucsb.cs56.projects.games.connectfour.startScreen2.settingsMenu = new edu.ucsb.cs56.projects.games.connectfour.settingsPanel(this); this.add(edu.ucsb.cs56.projects.games.connectfour.startScreen2.settingsMenu); this.revalidate(); <BUGS> <BUGE> } 
private void mapLetters(BoggleBoard board, int rows, int cols) { letters = new edu.princeton.cs.algs4.SeparateChainingHashST<java.lang.Integer, java.lang.Character>(); for (int i = 0; i < rows; i++) for (int j = 0; j < cols; j++) { <BUGS> int x = (i * rows) + j; <BUGE> letters.put(x, board.getLetter(i, j)); }  } 
public void rotate(double winkel) { double radius = java.lang.Math.sqrt((((x) * (x)) + ((y) * (y)))); <BUGS> this.x = radius * (java.lang.Math.sin(winkel)); this.y = radius * (java.lang.Math.cos(winkel)); <BUGE> } 
@java.lang.Override <BUGS> public void onItemClick(android.widget.AdapterView<?> adapterView, android.view.View view, int position, long l) { <BUGE> android.database.Cursor cursor = ((android.database.Cursor) (adapterView.getItemAtPosition(position))); if (cursor != null) { ((it.jaschke.alexandria.api.Callback) (getActivity())).onItemSelected(cursor.getString(cursor.getColumnIndex(AlexandriaContract.BookEntry._ID))); } } 
public void moveAttachmentToBackupFolder(java.lang.String path, java.lang.String filePath) { java.io.File source = new java.io.File(filePath); java.io.File dest = new java.io.File(path.trim()); try { org.apache.commons.io.FileUtils.copyFileToDirectory(source, dest); <BUGS> org.wso2.dynamictools.extension.zapwso2jiraplugin.FileHandleUtill.log.info(((("Moved the file " + source) + " to backup folder ") + dest)); <BUGE> } catch (java.io.IOException e) { org.wso2.dynamictools.extension.zapwso2jiraplugin.FileHandleUtill.log.error("File not found in the specified path"); } } 
@java.lang.Override public boolean onOptionsItemSelected(android.view.MenuItem item) { boolean status; switch (item.getItemId()) { case R.id.action_settings : startActivity(new android.content.Intent(this, io.github.data4all.activity.SettingsActivity.class)); status = true; break; case R.id.action_help : status = true; break; case android.R.id.home : <BUGS> onWorkflowFinished(null); <BUGE> status = true; break; default : return super.onOptionsItemSelected(item); } return status; } 
@java.lang.Override public void onBindViewHolder(com.spiewak.workoutlogger.adapters.SetAdapter.SetHolder holder, int position) { com.spiewak.workoutlogger.models.WorkoutSet workoutSet = workoutSets.get(position); java.lang.String setAndReps = ((java.lang.Integer.toString(workoutSet.getReps())) + "x") + (java.lang.Double.toString(workoutSet.getLoad())); holder.workoutSet.setText(setAndReps); <BUGS> android.util.Log.d("WORKOUT", setAndReps); <BUGE> } 
@java.lang.Override public void onSuccess(int statusCode, cz.msebera.android.httpclient.Header[] headers, org.json.JSONObject response) { android.util.Log.i("response", response.toString()); try { <BUGS> java.lang.String token = response.getString("access_token").toString(); <BUGE> com.singh.harsukh.redder.AccessActivity.setToken(token); android.util.Log.e("Access_token", token); } catch (org.json.JSONException j) { j.printStackTrace(); } } 
<BUGS> public static void printResult(double[][] reuslt) { int histWidth = reuslt.length; int histHeight = reuslt[0].length; for (int i = 0; i < histWidth; i++) { java.lang.System.out.println(""); for (int j = 0; j < histHeight; j++) { java.lang.System.out.print(((reuslt[i][j]) + " ")); } <BUGE> } } 
public boolean guess(int guessNumber) { <BUGS> <BUGE> if (guessNumber == (secretNumber)) { this.hint = "Correct.  The secret number is " + (secretNumber); return true; }else if (guessNumber > (secretNumber)) { this.hint = "Sorry, your guess is too big"; return false; }else { this.hint = "Sorry, your guess is too small"; return false; }  } 
public void moveNextPosition(boolean smooth) { if ((getRealAdapter()) == null) throw new java.lang.IllegalStateException("You did not set a slider adapter");  <BUGS> <BUGE> if (mIsShuffle) { setPagerTransformer(true, getShuffleTransformer()); } <BUGS> mViewPager.setCurrentItem(((mViewPager.getCurrentItem()) + 1), smooth); <BUGE> } 
void addToBoundIntent(android.content.Intent intent, android.app.IServiceConnection connection) { com.lody.virtual.server.am.ServiceRecord.IntentBindRecord record = peekBinding(intent); if (record == null) { record = new com.lody.virtual.server.am.ServiceRecord.IntentBindRecord(); record.intent = intent; synchronized(bindings) { <BUGS> android.content.Intent.FilterComparison filter = new android.content.Intent.FilterComparison(intent); bindings.put(filter, record); <BUGE> } } record.addConnection(connection); } 
<BUGS> private static java.util.List<com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandler> retrieveHandlers(boolean triggerOnPush, com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest triggerOpenMergeRequestOnPush, boolean skipWorkInProgressMergeRequest, boolean triggerOnPipelineEvent) { <BUGE> java.util.List<com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandler> result = new java.util.ArrayList<>(); if (triggerOnPush) { result.add(new com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandlerImpl()); } if (triggerOpenMergeRequestOnPush == (com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest.both)) { result.add(new com.dabsquared.gitlabjenkins.trigger.handler.push.OpenMergeRequestPushHookTriggerHandler(skipWorkInProgressMergeRequest)); } return result; } 
public static void registerRecipes() { de.teamhug.GlacialEpoch.Recipes.GE_ButcherRecipes.tools.add(new net.minecraft.item.ItemStack(de.teamhug.GlacialEpoch.Registry.GE_ItemRegistry.itemHidesCutter)); de.teamhug.GlacialEpoch.Recipes.GE_ButcherRecipes.tools.add(new net.minecraft.item.ItemStack(de.teamhug.GlacialEpoch.Registry.GE_ItemRegistry.itemCuttingKnife)); <BUGS> de.teamhug.GlacialEpoch.Recipes.GE_ButcherRecipes.addRecipe(new de.teamhug.GlacialEpoch.Util.GE_ButcherRecipe().setInput(new net.minecraft.item.ItemStack(de.teamhug.GlacialEpoch.Registry.GE_ItemRegistry.itemCadaverCow)).setTools(de.teamhug.GlacialEpoch.Recipes.GE_ButcherRecipes.tools).addOutput(new net.minecraft.item.ItemStack(net.minecraft.init.Items.leather)).addOutput(new net.minecraft.item.ItemStack(net.minecraft.init.Items.beef, 1, 6))); <BUGE> } 
public java.sql.ResultSet queryExecution(java.lang.String query) throws java.lang.Exception { java.sql.PreparedStatement preparedquery = db.prepareStatement((query + ";")); preparedquery.clearParameters(); java.sql.ResultSet result = null; try { result = preparedquery.executeQuery(); } catch (java.lang.Exception ex) { <BUGS> java.lang.System.err.println(ex); <BUGE> } return result; } 
private com.taskboard.main.Response addFloatingTask() { com.taskboard.main.Response responseForAddFloating = new com.taskboard.main.Response(); <BUGS> com.taskboard.main.Parameter taskNameParameter = getNameParameter(); java.lang.String taskName = getDetailFromParameter(taskNameParameter); com.taskboard.main.Parameter priorityParameter = getPriorityParameter(); java.lang.String priority = getDetailFromParameter(priorityParameter); com.taskboard.main.Parameter categoryParameter = getCategoryParameter(); java.lang.String category = getDetailFromParameter(categoryParameter); <BUGE> responseForAddFloating = processFloatingTaskForStorage(taskName, priority, category); return responseForAddFloating; } 
@java.lang.Override public boolean create(POJO.User user) throws java.sql.SQLException { stmt = connect.prepareStatement("INSERT INTO User (pseudo, password, mail) VALUES (?, ?, ?)"); stmt.setString(1, user.getPseudo()); stmt.setString(2, user.getPassword()); stmt.setString(3, user.getEmail()); stmt.executeUpdate(); stmt.close(); <BUGS> java.lang.System.out.println("ici"); <BUGE> return true; } 
@java.lang.Override public boolean onCommand(org.bukkit.command.CommandSender sender, org.bukkit.command.Command cmd, java.lang.String commandLabel, java.lang.String[] args) { java.lang.String commandName = cmd.getName().toLowerCase(); if (!(commandName.equalsIgnoreCase("bank"))) return true;  <BUGS> <BUGE> return commandUtil.handleCommand(sender, cmd, commandLabel, args, be.charybde.bank.BCC.commandDispatcher); } 
private void onGameOver(android.graphics.Canvas canvas) { <BUGS> canvas.drawText(this.getContext().getString(R.string.game_over_text), ((startP_) + ((cellSize_) * 2.5F)), ((startP_) + ((cellSize_) * 4.7F)), noticePaint_); <BUGE> } 
public static edu.ucsd.sccn.LSL.StreamInfo[] resolve_streams(double wait_time) { com.sun.jna.Pointer[] buf = new com.sun.jna.Pointer[1024]; <BUGS> int num = edu.ucsd.sccn.LSL.inst.lsl_resolve_all(buf, ((long) (buf.length)), wait_time); <BUGE> edu.ucsd.sccn.LSL.StreamInfo[] res = new edu.ucsd.sccn.LSL.StreamInfo[num]; for (int k = 0; k < num; k++) res[k] = new edu.ucsd.sccn.LSL.StreamInfo(buf[k]);  return res; } 
@org.junit.Test public void test2() { com.amazon.speech.speechlet.Session session = com.amazon.speech.speechlet.Session.builder().withSessionId("session").build(); <BUGS> session.setAttribute(CricketSpeechlet.START_KEY, 21); <BUGE> com.amazon.speech.speechlet.SpeechletResponse result = new cricketskill.CricketSpeechlet(com.amazonaws.Protocol.HTTPS).getCurrentScoreResponse(session); java.lang.System.out.println(result); } 
public static javax.swing.JLabel createJLabel(java.lang.String label, int fontSize, boolean border) { javax.swing.JLabel comp = new javax.swing.JLabel(label); <BUGS> com.tri.pgs.client.surface.ui.UISystem.init(comp, border); <BUGE> comp.setFont(new java.awt.Font(java.awt.Font.SANS_SERIF, java.awt.Font.BOLD, fontSize)); return comp; } 
public void changeLane(int carIndex) { Car car = cars.get(carIndex); cars.remove(carIndex); numCars = cars.size(); java.lang.System.out.print((((("Lane " + (laneIndex)) + " has ") + (numCars)) + " cars after one left.")); <BUGS> TrafficSimulator.lanes.get(newLaneIndex).addCar(car, ((newLaneIndex) - (laneIndex))); <BUGE> } 
@java.lang.Override protected void onActivityResult(int requestCode, int resultCode, android.content.Intent data) { if (requestCode == (MUSIC_LIST_VIEW_REQUEST)) { if (resultCode == (android.app.Activity.RESULT_OK)) { <BUGS> mediaPlayer.stop(); <BUGE> currentSong = data.getIntExtra("position", 1); playSong(); } } } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); butterknife.ButterKnife.bind(this); setSupportActionBar(toolbar); <BUGS> connectionService = com.northghost.caketube.AFConnectionService.newBuilder(this).addConnectionCallbacksListener(this).addVPNConnectionStateListener(this).setName(getString(R.string.app_name)).build(); <BUGE> } 
@java.lang.Override protected void onResume() { super.onResume(); if (DEBUG) android.util.Log.d(org.pyneo.tabulae.TAG, "Tabulae.onResume");  android.app.FragmentManager fragmentManager = getFragmentManager(); <BUGS> android.app.FragmentTransaction tx = fragmentManager.beginTransaction(); <BUGE> for (org.pyneo.tabulae.Base b : fragments) { <BUGS> <BUGE> tx.add(R.id.tabulae, b, b.getClass().getSimpleName()); <BUGS> <BUGE> } <BUGS> tx.commit(); <BUGE> } 
private void sendMessage() { if (!(MessageSend.getText().equals(""))) { <BUGS> <BUGE> MessageSend.setText(""); <BUGS> java.lang.String message = MessageSend.getText().trim(); <BUGE> homebase.sendMessage(buddyName, message); addMessage(message, homebase.getClient().getCurrentUsername(), false); } } 
public void geometricSeriesApproximation(double x) { double nextApproximation = x; for (int i = 0; i < (this.steps); i++) { nextApproximation = nextApproximation * x; } this.approximation = (this.lastApproximation) + nextApproximation; <BUGS> <BUGE> if (!(isAccurate())) { geometricSeriesApproximation(x); }else { return ; } } 
@java.lang.Override public void setUser(com.silicolife.textmining.core.datastructures.dataaccess.database.dataaccess.implementation.model.core.dao.UsersLogged userLogged) throws com.silicolife.textmining.core.interfaces.core.dataaccess.exception.ANoteException { if ((this.userLogged.getCurrentUserLogged()) == null) { login(userLogged.getCurrentUserLogged().getAuUsername(), userLogged.getCurrentUserLogged().getAuPassword()); <BUGS> <BUGE> } } 
static java.util.List<org.jitsi.jicofo.ContentPacketExtension> createContents() { java.util.List<org.jitsi.jicofo.ContentPacketExtension> contents = new java.util.ArrayList<org.jitsi.jicofo.ContentPacketExtension>(); <BUGS> contents.add(org.jitsi.jicofo.JingleOfferFactory.createContentForMedia(MediaType.AUDIO, false, true)); contents.add(org.jitsi.jicofo.JingleOfferFactory.createContentForMedia(MediaType.VIDEO, false, true)); contents.add(org.jitsi.jicofo.JingleOfferFactory.createContentForMedia(MediaType.DATA, false, true)); <BUGE> return contents; } 
private void setUpMap() { com.google.android.gms.maps.model.LatLng sydney = new com.google.android.gms.maps.model.LatLng(31.793405, 34.639248); mMap.setMyLocationEnabled(true); mMap.moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom(sydney, 10)); com.google.android.gms.maps.model.MarkerOptions mMark = new com.google.android.gms.maps.model.MarkerOptions().title("Ashdod").snippet("We want to sell and rent houses here!").position(sydney); java.util.List<com.google.android.gms.maps.model.MarkerOptions> markers = new com.sce3.thirdyear.maps.data.MapData().getMarkers(); for (com.google.android.gms.maps.model.MarkerOptions marker : markers) { <BUGS> mMap.addMarker(marker).i = $missing$; <BUGE> } } 
<BUGS> public void brokenFunction() { <BUGE> if (auntEdith.getText().toString().equals("Timmy")) { java.lang.System.out.println("Timmy fixed a bug!"); } java.lang.System.out.println("If this appears in your console, you fixed a bug."); android.content.Intent intent = new android.content.Intent(this, mmbuw.com.brokenproject.AnotherBrokenActivity.class); java.lang.String message = "This string will be passed to the new activity"; startActivity(intent); } 
public boolean gelijkAan(nl.detoren.ijc.data.groepen.Speler speler) { <BUGS> return (((this.getNaam().equals(speler.getNaam())) && (this.getInitialen().equals(speler.getInitialen()))) && ((this.getGroep()) == (speler.getGroep()))) && ((this.getKNSBnummer()) == (speler.getKNSBnummer())); <BUGE> } 
public void showSearch(boolean animate) { if (isSearchOpen()) { return ; } <BUGS> searchEditText.getText().clear(); <BUGE> searchEditText.requestFocus(); shadowView.setVisibility(View.VISIBLE); setVisibility(View.VISIBLE); if (animate) { setVisibleWithAnimation(); }else { setVisibility(com.radiationpressure.mickhardins.mtgrecall.searchview.VISIBLE); <BUGS> if ((mSearchViewListener) != null) { mSearchViewListener.onSearchViewShown(); } <BUGE> } isSearchOpen = true; } 
private void cancelDueToException(java.lang.Exception e) { if (cancelled) return ;  cancelled = true; android.util.Log.w(org.floens.chan.utils.FileCache.TAG, "IOException downloading file", e); purgeOutput(); <BUGS> finish(); <BUGE> post(new java.lang.Runnable() { @java.lang.Override public void run() { callback.onProgress(0, 0, true); callback.onFail(false); } }); } 
public com.github.sylvainlaurent.maven.swaggervalidator.ValidationResult validate(final java.io.File file) { final com.github.sylvainlaurent.maven.swaggervalidator.ValidationResult validationResult = new com.github.sylvainlaurent.maven.swaggervalidator.ValidationResult(); com.fasterxml.jackson.databind.JsonNode spec; try { spec = readFileContent(file); } catch (final java.lang.Exception e) { validationResult.addMessage(((("Error while parsing file " + file) + ": ") + (e.getMessage()))); validationResult.encounteredError(); return validationResult; } <BUGS> readSwaggerSpec(spec, validationResult); <BUGE> validateSwagger(spec, validationResult); return validationResult; } 
@java.lang.Override public void onConnected(android.os.Bundle bundle) { mLocationRequest = new com.google.android.gms.location.LocationRequest(); <BUGS> mLocationRequest.setInterval(10000); mLocationRequest.setFastestInterval(10000); <BUGE> mLocationRequest.setPriority(LocationRequest.PRIORITY_BALANCED_POWER_ACCURACY); if (((android.support.v4.app.ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION)) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) && ((android.support.v4.app.ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION)) != (android.content.pm.PackageManager.PERMISSION_GRANTED))) { return ; } LocationServices.FusedLocationApi.requestLocationUpdates(mclientAPI, mLocationRequest, this); } 
<BUGS> public static com.izik.recipebook.Model instance(android.content.res.Resources res, android.content.Context context) { <BUGE> if (context instanceof com.izik.recipebook.Model.OnModelCompletedOperationListener) { com.izik.recipebook.Model.mListener = ((com.izik.recipebook.Model.OnModelCompletedOperationListener) (context)); }else { throw new java.lang.RuntimeException(((context.toString()) + " must implement OnFragmentInteractionListener")); } com.izik.recipebook.Model.mContext = context; <BUGS> com.izik.recipebook.Model.resources = res; <BUGE> return com.izik.recipebook.Model.instance; } 
public boolean removeOrder(PurchasedItem item) { if ((numItems) > 0) { for (int i = 0; i < (numItems); i++) { <BUGS> if ((items[i]) == item) { <BUGE> for (int j = i + 1; j < (numItems); j++) { items[(j - 1)] = items[j]; } (numItems)--; return true; } } } return false; } 
@java.lang.Override public boolean onOptionsItemSelected(android.view.MenuItem item) { switch (item.getItemId()) { case R.id.m_add_sample_data : addSampleData(); displayData(); return true; case R.id.m_add_book : android.content.Intent intent = new android.content.Intent(this, divyanshu.bookinventory.AddBookActivity.class); startActivity(intent); return true; case R.id.m_delete_all_data : deleteAllData(); displayData(); <BUGS> <BUGE> } return super.onOptionsItemSelected(item); } 
public void evaluate() throws java.io.IOException, java.sql.SQLException { java.util.List<edu.washington.multirframework.data.Extraction> modelExtractions = efc.getExtractions(("_results_" + (new java.io.File(modelName).getName())), writeExtractions, verbose, verboseFile); <BUGS> fillResult(modelExtractions); <BUGE> res.dumpResults(); } 
<BUGS> public void printGrid(java.lang.String[][] gridDis) { <BUGE> java.lang.System.out.println("----------"); for (java.lang.String[] i : gridDis) { for (java.lang.String x : i) { java.lang.System.out.print((x + " ")); } java.lang.System.out.println(""); } java.lang.System.out.println("----------"); } 
public int showDialog() { try { this.validate(); this.repaint(); <BUGS> javax.swing.SwingUtilities.invokeLater(new java.lang.Runnable() { @java.lang.Override public void run() { setVisible(true); } }); <BUGE> return returnValue; } catch (java.lang.Exception e) { gui.ShadyMessageDialog.LOGGER.severe("Error in showing message dialog!"); e.printStackTrace(); return -1; } } 
@java.lang.Override protected void resetGame() { super.resetGame(); <BUGS> getDeck().shuffle(); <BUGE> m_board.setInitiation(true); for (int i = 0; i < (m_board.getMaxCardsX()); i++) { for (int j = 0; j < (i + 1); j++) { m_board.addCard(m_deck.dealCard(), i); } } m_board.setInitiation(false); stats.startTimer(); } 
void update() { <BUGS> clickModel.transform.setToTranslation(control.getClickOnMap().getX(), control.getClickOnMap().getY(), de.eightbitboy.ecorealms.Highlighter.CLICK_HEIGHT); hoverModel.transform.setToTranslation(control.getHoverOverMap().getX(), control.getHoverOverMap().getY(), de.eightbitboy.ecorealms.Highlighter.HOVER_HEIGHT); <BUGE> } 
public boolean hasOrders(java.lang.String value) { <BUGS> for (int i = 0; i < (fields.size()); i++) { <BUGE> java.lang.String option = ((java.lang.String) (orderFields.elementAt(i))); if ((option.toLowerCase().compareTo(value.toLowerCase())) == 0) return true;  } return false; } 
@java.lang.Override protected void doSearch(jdepend.model.result.AnalysisResult result) throws jdepend.framework.exception.JDependException { jdepend.util.analyzer.element.helper.ServiceOrVO sov; for (jdepend.model.JavaClass javaClass : result.getClasses()) { <BUGS> if (javaClass.isInner()) { <BUGE> continue; } sov = researchServiceOrVO(javaClass); this.printTable("类名", javaClass.getName()); this.printTable("类型", ((sov.getType()) + (sov.getIndex()))); } } 
@com.squareup.otto.Subscribe public void onPriceReceived(com.radiationpressure.mickhardins.mtgrecall.ottoEvents.PriceReceivedEvent e) { if (e.getExpansion().equals(mtgCard.getSetName())) { this.prices = e.getPrices(); <BUGS> this.cardprices.setText(prices); swipeLayout.setRefreshing(false); <BUGE> } } 
<BUGS> @main.com.valkryst.VcLSM.benchmarks.AfterClass <BUGE> public static void stopBenchmark() { try { main.com.valkryst.VcLSM.benchmarks.TweetsDictBenchmarks.keyArr.clear(); <BUGS> <BUGE> org.apache.commons.io.FileUtils.deleteDirectory(new java.io.File("data/")); org.apache.commons.io.FileUtils.deleteDirectory(new java.io.File("levelDB/")); <BUGS> main.com.valkryst.VcLSM.benchmarks.TweetsDictBenchmarks.db.close(); } catch (java.io.IOException e) { <BUGE> e.printStackTrace(); } } 
@java.lang.Override public void onClick(com.eemc.aida.DialogInterface p1, int p2) { setCardView(0); symad.showing.clear(); <BUGS> for (int i = 0; i < (symnum); i++) { <BUGE> if (syms.get(i).demangledname.contains(kw.getText().toString())) { symad.showing.add(i); } } symad.notifyDataSetChanged(); } 
@java.lang.Override public void back() { if ((mPosition) == 0) mPosition = (jsData.length()) - 1; else (mPosition)--;  controller.setEndTime(0); player.stop(); player.reset(); <BUGS> if (controller.isShowing()) controller.hide();  <BUGE> } 
@java.lang.Override @javax.jws.WebMethod public java.util.List<com.softserve.tc.diary.entity.Record> getAllPublicRecordsByNickName(java.lang.String nickName) { <BUGS> com.softserve.tc.diary.entity.User user = userDAO.readByNickName(nickName); java.util.List<com.softserve.tc.diary.entity.Record> list = recordDAO.getRecordByUserId(user.getUuid()); <BUGE> java.util.Collections.sort(list, new java.util.Comparator<com.softserve.tc.diary.entity.Record>() { @java.lang.Override public int compare(com.softserve.tc.diary.entity.Record o1, com.softserve.tc.diary.entity.Record o2) { return (o2.getCreatedTime().getTime()) > (o1.getCreatedTime().getTime()) ? 1 : -1; } }); return list; } 
@cucumber.api.java.en.Then(value = "^the topology should be valid$") public void the_topology_should_be_valid() throws java.lang.Throwable { alien4cloud.rest.model.RestResponse<?> restResponse = alien4cloud.rest.utils.JsonUtil.read(alien4cloud.it.Context.getInstance().getRestResponse(), alien4cloud.it.Context.getJsonMapper()); <BUGS> org.junit.Assert.assertNotNull(restResponse.getData()); <BUGE> java.util.Map<java.lang.String, java.lang.Object> dataMap = alien4cloud.rest.utils.JsonUtil.toMap(alien4cloud.rest.utils.JsonUtil.toString(restResponse.getData())); <BUGS> org.junit.Assert.assertTrue(java.lang.Boolean.valueOf(dataMap.get("valid").toString())); <BUGE> } 
private java.util.List<java.lang.Integer> getColorsList(final java.util.List<simulator.common.graphic.Point> pointList) { <BUGS> java.util.List<java.lang.Integer> colorsList = new java.util.ArrayList(pointList.size()); <BUGE> for (simulator.common.graphic.Point point : pointList) { colorsList.add(point.getColor().getValue()); } return colorsList; } 
public int addworkout(java.lang.String name) { android.database.sqlite.SQLiteDatabase db = this.getWritableDatabase(); android.content.ContentValues values = new android.content.ContentValues(); values.put("name", name); try { db.insertOrThrow("workout", null, values); } catch (jeffdev.workingset.android e) { <BUGS> <BUGE> return 1; } db.close(); return 0; } 
private long getVideoLengthInSeconds(java.lang.String pFileName) { try { <BUGS> com.coremedia.iso.IsoFile lIsoFile = new com.coremedia.iso.IsoFile(new com.coremedia.iso.IsoBufferWrapperImpl(readFully(new java.io.FileInputStream(pFileName)))); <BUGE> lIsoFile.parse(); return (lIsoFile.getMovieBox().getMovieHeaderBox().getDuration()) / (lIsoFile.getMovieBox().getMovieHeaderBox().getTimescale()); } catch (java.io.IOException e) { android.util.Log.e("streamletService-getVideoLengthInSeconds", e.getMessage()); } return 0; } 
@java.lang.Override public void setValue(java.lang.String key, java.lang.String value) { com.google.common.base.Preconditions.checkNotNull(nodeName, "Node name cannot be null."); co.cask.cdap.internal.app.runtime.workflow.WorkflowTokenValue tokenValue = tokenValueMap.get(key); if (tokenValue == null) { tokenValue = new co.cask.cdap.internal.app.runtime.workflow.WorkflowTokenValue(); <BUGS> <BUGE> } tokenValue.putValue(nodeName, value); <BUGS> tokenValueMap.put(key, tokenValue); <BUGE> } 
public void processPages(long recordsToReadInThisPass) throws java.io.IOException { reset(); if (recordsToReadInThisPass > 0) { do { <BUGS> determineSize(recordsToReadInThisPass, 0); <BUGE> } while (((valuesReadInCurrentPass) < recordsToReadInThisPass) && (pageReader.hasPage()) ); } org.apache.drill.exec.store.parquet.columnreaders.ColumnReader.logger.trace("Column Reader: {} - Values read in this pass: {} - ", this.getColumnDescriptor().toString(), valuesReadInCurrentPass); valueVec.getMutator().setValueCount(valuesReadInCurrentPass); } 
private synchronized void setExportProperties(org.gephi.preview.api.PreviewModel m) { org.gephi.preview.api.PreviewProperties props = m.getProperties(); props.putValue(PreviewProperty.VISIBILITY_RATIO, 1.0F); props.putValue("width", width); props.putValue("height", height); oldColor = props.getColorValue(PreviewProperty.BACKGROUND_COLOR); if (transparentBackground) { <BUGS> props.putValue(PreviewProperty.BACKGROUND_COLOR, new java.awt.Color(255, 255, 255, 0)); <BUGE> } props.putValue(PreviewProperty.MARGIN, new java.lang.Float(margin)); } 
<BUGS> public java.util.Map<de.uni_freiburg.informatik.ultimate.logic.TermVariable, de.uni_freiburg.informatik.ultimate.logic.Term> constructAuxVarMapping(final java.util.Set<de.uni_freiburg.informatik.ultimate.logic.TermVariable> auxVars) { if (auxVars.isEmpty()) { return java.util.Collections.emptyMap(); }else { final java.util.Map<de.uni_freiburg.informatik.ultimate.logic.TermVariable, de.uni_freiburg.informatik.ultimate.logic.Term> result = new java.util.HashMap<>(); for (final de.uni_freiburg.informatik.ultimate.logic.TermVariable auxVar : auxVars) { final de.uni_freiburg.informatik.ultimate.logic.Term auxVarConst = getOrConstructConstForAuxVar(auxVar); result.put(auxVar, auxVarConst); } return result; <BUGE> } <BUGS> <BUGE> } 
private void logKeys(java.util.List<org.jfl110.api.auth.rolling.RollingKey> sortedKeys) { <BUGS> for (int i = 1; i < (sortedKeys.size()); i++) { <BUGE> org.jfl110.api.auth.rolling.RollingKey key = sortedKeys.get(i); java.lang.System.out.println(((((((("Key[" + i) + "] ") + (key.keyNumber())) + " ") + (key.validFrom())) + " ") + (key.validForSeconds()))); } } 
@java.lang.Override public java.util.Optional<java.lang.String> sendMessage(messages.BotTextMessage msg, java.lang.String channelTo) { java.lang.String[] messagesWithoutNewline = bots.IrcBot.COMPILE.split(msg.getText()); for (java.lang.String messageToken : messagesWithoutNewline) { <BUGS> client.sendMessage(channelTo, java.lang.String.format("%s/%s/%s: %s", msg.getBotFrom().getId(), msg.getChannelFrom(), msg.getNicknameFrom(), messageToken)); <BUGE> } return java.util.Optional.empty(); } 
@org.cba.rest.resources.PUT @org.cba.rest.resources.Path(value = "edit/{id}") @org.cba.rest.resources.Consumes(value = javax.ws.rs.core.MediaType.APPLICATION_JSON) <BUGS> public javax.ws.rs.core.Response editCompany(int id, java.lang.String content) { <BUGE> com.google.gson.Gson gson = new com.google.gson.Gson(); org.cba.entities.Company company = gson.fromJson(content, org.cba.entities.Company.class); <BUGS> if (company != null) { <BUGE> throw new org.cba.rest.resources.WebApplicationException(Response.Status.NOT_FOUND); } try { facade.editCompany(company); } catch (org.cba.exception.EntityNotFoundException e) { e.printStackTrace(); javax.ws.rs.core.Response.status(Response.Status.NOT_FOUND); } return javax.ws.rs.core.Response.status(200).build(); } 
public static java.util.ArrayList<com.app.restfulapp.models.Member> genPartKind() { java.util.ArrayList<com.app.restfulapp.models.Member> result = new java.util.ArrayList<>(); <BUGS> <BUGE> result.add(new com.app.restfulapp.models.Member("Hỗn hợp", "A")); result.add(new com.app.restfulapp.models.Member("Đậm đặc", "B")); <BUGS> result.add(new com.app.restfulapp.models.Member("Hỗn hợp & Đậm đặc", "")); <BUGE> return result; } 
public static double timeSortedInput(java.lang.String alg, int n, int trials) { double total = 0.0; java.lang.Double[] a = new java.lang.Double[n]; <BUGS> for (int t = 0; (i) < trials; t++) { <BUGE> for (int i = 0; i < n; i++) { a[i] = 1.0 * i; } total += SortCompare.time(alg, a); } return total; } 
public void editInactiveExecutionPlan(java.lang.String executionPlan, java.lang.String filename) throws org.wso2.carbon.event.processor.core.exception.ExecutionPlanConfigurationException, org.wso2.carbon.event.processor.core.exception.ExecutionPlanDependencyValidationException { <BUGS> validateFilePath(filename); <BUGE> org.wso2.carbon.event.processor.core.internal.util.helper.EventProcessorHelper.validateExecutionPlan(executionPlan); org.wso2.carbon.event.processor.core.ExecutionPlan parsedExecutionPlan = org.wso2.siddhi.query.compiler.SiddhiCompiler.parse(executionPlan); java.lang.String newExecutionPlanName = org.wso2.siddhi.query.api.util.AnnotationHelper.getAnnotationElement(EventProcessorConstants.ANNOTATION_NAME_NAME, null, parsedExecutionPlan.getAnnotations()).getValue(); org.wso2.carbon.event.processor.core.internal.util.EventProcessorConfigurationFilesystemInvoker.delete(filename); org.wso2.carbon.event.processor.core.internal.util.EventProcessorConfigurationFilesystemInvoker.save(executionPlan, newExecutionPlanName, filename); } 
@java.lang.Override public android.app.Dialog onCreateDialog(android.os.Bundle savedInstanceState) { android.app.AlertDialog.Builder builder = new android.app.AlertDialog.Builder(getActivity()); android.view.LayoutInflater inflater = getActivity().getLayoutInflater(); <BUGS> android.view.View v = inflater.inflate(R.layout.dialog_progress, null); builder.setView(v); <BUGE> return builder.create(); } 
@java.lang.Override public void render(float delta) { Gdx.gl.glClearColor(0.0F, 0.0F, 0.0F, 1.0F); Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT); <BUGS> update(delta); <BUGE> game.batch.begin(); background.updateAndRender(delta, game.batch); game.batch.end(); <BUGS> <BUGE> stage.draw(); } 
<BUGS> private java.lang.String decrypt(java.lang.String value) { <BUGE> try { return com.microsoft.aad.adal.DefaultTokenCacheStore.sHelper.decrypt(value); } catch (java.lang.Exception e) { com.microsoft.aad.adal.Logger.e(com.microsoft.aad.adal.DefaultTokenCacheStore.TAG, "Decryption failure", "", ADALError.ENCRYPTION_FAILED, e); if (!(com.microsoft.aad.adal.StringExtensions.IsNullOrBlank(value))) { <BUGS> com.microsoft.aad.adal.Logger.v(com.microsoft.aad.adal.DefaultTokenCacheStore.TAG, java.lang.String.format("Decryption error for key: '%s'. Item will be removed", value)); removeItem(value); com.microsoft.aad.adal.Logger.v(com.microsoft.aad.adal.DefaultTokenCacheStore.TAG, java.lang.String.format("Item removed for key: '%s'", value)); <BUGE> } } return null; } 
private int skip(int n_skip) throws java.io.IOException { int n_skipped = 0; skipWhiteSpace(); if ((((current) != ',') && ((current) != ']')) && ((current) != '}')) { skipInner(); <BUGS> <BUGE> } <BUGS> while ((current) == ',') { <BUGE> skipWhiteSpace(); skipInner(); <BUGS> if ((++n_skipped) == n_skip) { break; } <BUGE> } return n_skipped; } 
public java.lang.String toString() { java.lang.String save = "["; <BUGS> while ((peekFirst()) != null) { save += pollFirst(); if ((peekFirst()) != null) { save += ","; <BUGE> } } <BUGS> <BUGE> save += "]"; return save; } 
@java.lang.Override public void run() { try { if (clipCheck) com.bsc.cs.kidssoftware.Test.clip.stop();  com.bsc.cs.kidssoftware.Test.clip = javax.sound.sampled.AudioSystem.getClip(); <BUGS> javax.sound.sampled.AudioInputStream inputStream = javax.sound.sampled.AudioSystem.getAudioInputStream(com.bsc.cs.kidssoftware.Test.class.getResource(("/assets/" + (file2.getName())))); <BUGE> com.bsc.cs.kidssoftware.Test.clip.open(inputStream); com.bsc.cs.kidssoftware.Test.clip.start(); clipCheck = true; } catch (java.lang.Exception e) { e.printStackTrace(); } } 
void update(gt.Population otherPop) { java.util.Enumeration<java.lang.String> players = fractions.keys(); while (players.hasMoreElements()) { java.lang.String currentPlayer = players.nextElement(); <BUGS> double updatedFraction = updateFraction(currentPlayer, otherPop); <BUGE> fractions.put(currentPlayer, updatedFraction); } } 
@java.lang.Override @org.springframework.transaction.annotation.Transactional public org.orcid.jaxb.model.message.OrcidProfile updateOrcidBio(org.orcid.jaxb.model.message.OrcidProfile updatedOrcidProfile) { org.orcid.jaxb.model.message.OrcidProfile existingProfile = retrieveOrcidProfile(updatedOrcidProfile.getOrcidIdentifier().getPath()); if (existingProfile == null) { return null; } orcidJaxbCopyManager.copyUpdatedBioToExistingWithVisibility(existingProfile.getOrcidBio(), updatedOrcidProfile.getOrcidBio()); <BUGS> existingProfile.setOrcidBio(updatedOrcidProfile.getOrcidBio()); <BUGE> return updateOrcidProfile(existingProfile); } 
@java.lang.Override public ru.javawebinar.topjava.model.UserMeal get(int id, int userId) { java.util.List<ru.javawebinar.topjava.model.UserMeal> userMeals = em.createNamedQuery(UserMeal.GET_BY_ID, ru.javawebinar.topjava.model.UserMeal.class).setParameter(1, userId).setParameter(2, id).getResultList(); if (!(userMeals.isEmpty())) { if ((userMeals.get(0).getUser().getId()) == userId) { return userMeals.get(0); }else return null;  <BUGS> } return null; <BUGE> } 
<BUGS> @WebTests.BeforeTest(groups = "InternetExplorer") public void setUpDriverIE(java.lang.String baseUrl) throws java.lang.InterruptedException { <BUGE> logger.info("[TEST STARTED]"); logger.info(("OS: " + (operationSystem))); java.lang.System.setProperty("webdriver.ie.driver", java.lang.String.valueOf(driverIEWin)); driver = new org.openqa.selenium.ie.InternetExplorerDriver(); driver.navigate().to(Data.ConfigProperties.getProperty("baseUrl")); } 
@org.springframework.scheduling.annotation.Async private void start(java.lang.String url) { if (!(com.prapps.app.core.controller.CoreController.keepAlive)) { com.prapps.app.core.controller.CoreController.keepAlive = true; while (com.prapps.app.core.controller.CoreController.keepAlive) { try { <BUGS> java.lang.System.out.println(url); <BUGE> new java.net.URL(url).openConnection(); java.lang.Thread.sleep((((1000 * 60) * 60) * 12)); } catch (java.lang.Exception e) { e.printStackTrace(); } } } } 
@java.lang.Override <BUGS> public void preinit() { super.preinit(); <BUGE> net.minecraft.item.Item itemBlockSimple = net.minecraftforge.fml.common.registry.GameRegistry.findItem("clonesmod", "cloner"); net.minecraft.client.resources.model.ModelResourceLocation itemModelResourceLocation = new net.minecraft.client.resources.model.ModelResourceLocation("clonesmod:cloner", "inventory"); net.minecraft.client.Minecraft.getMinecraft().getRenderItem().getItemModelMesher().register(itemBlockSimple, 0, itemModelResourceLocation); } 
public void init() { registerService(); evalThread.start(); wifiReceiver.start(); addToQueue(bluetoothRestart); addToQueue(nearbyPeersChecker); <BUGS> addToQueue(nearbyPeersChecker); <BUGE> synchronized(evalThread) { evalThread.notify(); } blockedWorkersChecker.run(); } 
public static void main(java.lang.String[] args) { <BUGS> int length = java.lang.Integer.parseInt(arg[0]); int width = java.lang.Integer.parseInt(arg[1]); <BUGE> Rectangle myRectangle = new Rectangle(length, width); java.lang.String output = java.lang.String.format("*** Your Rectangle ***\n\nLength: %d\nWidth: %d/nArea: %d/nPerimeter: %d/nArea: %d/n/n", myRectangle.length, myRectangle.width, myRectangle.getPerimeter(), myRectangle.getArea()); java.lang.System.out.println(output); } 
@java.lang.Override public void onClick(android.view.View v) { mSectionsPagerAdapter.notifyDataSetChanged(); mViewPager.setAdapter(mSectionsPagerAdapter); tabLayout.setupWithViewPager(mViewPager); mViewPager.setCurrentItem(0, true); prefEditor.putInt(getString(R.string.living_room_mode), selection[0]); prefEditor.apply(); dialog.hide(); <BUGS> modeText.setText(getModeText(0, selection[0])); <BUGE> } 
public int[] getOutput(short[] pcm, int sampleRate) { if (pcm == null) return null;  double[] spectrum = getSpectrum(pcm); final int amount = 100; <BUGS> int[] s = spectrumStrategy.excute(spectrum, sampleRate); <BUGE> for (int i = 0; i < (s.length); i++) { s[i] = ((int) ((spectrum[i]) / 1000)); } return s; } 
public static org.openremote.model.syslog.SyslogLevel getLevel(int level) { if (level == 1000) { return org.openremote.model.syslog.SyslogLevel.ERROR; }else if (level == 900) { return org.openremote.model.syslog.SyslogLevel.WARN; }else if ((level == 800) || (level == 700)) { return org.openremote.model.syslog.SyslogLevel.INFO; <BUGS> }else if (level <= 500) { return org.openremote.model.syslog.SyslogLevel.DEBUG; }  <BUGE>   return null; } 
@java.lang.Override public int onStartCommand(android.content.Intent intent, int flags, int startId) { int startOption = START_NOT_STICKY; if (intent == null) { return startOption; } int mapID = intent.getIntExtra(appConstants.DOWNLOAD_INTENT_NAME, 0); <BUGS> if (activeDownloadsList[mapID]) { <BUGE> com.noveogroup.android.log.Log.d("Duplicate download request for the same map type"); return startOption; } activeDownloadsList[mapID] = true; downloadMap(mapID); return startOption; } 
@java.lang.Override public boolean retryFurther(java.lang.Long offset) { org.apache.storm.kafka.ExponentialBackoffMsgRetryManager.MessageRetryRecord record = this.records.get(offset); <BUGS> return !((((record != null) && ((this.retryLimit) > 0)) && (this.waiting.contains(record))) && ((this.retryLimit) <= (record.retryNum))); <BUGE> } 
private static java.util.Set<org.monospark.spongematchers.parser.element.StringElementParser> createBaseElementParsers() { java.util.Set<org.monospark.spongematchers.parser.element.StringElementParser> baseParsers = com.google.common.collect.Sets.newLinkedHashSet(); baseParsers.add(new org.monospark.spongematchers.parser.element.BaseElementParser(org.monospark.spongematchers.parser.base.BaseMatcherParser.STRING)); baseParsers.add(new org.monospark.spongematchers.parser.element.BaseElementParser(org.monospark.spongematchers.parser.base.BaseMatcherParser.BOOLEAN)); <BUGS> <BUGE> baseParsers.add(new org.monospark.spongematchers.parser.element.BaseElementParser(org.monospark.spongematchers.parser.base.BaseMatcherParser.INTEGER)); <BUGS> baseParsers.add(new org.monospark.spongematchers.parser.element.BaseElementParser(org.monospark.spongematchers.parser.base.BaseMatcherParser.FLOATING_POINT)); <BUGE> baseParsers.add(new org.monospark.spongematchers.parser.element.EmptyElementParser()); return baseParsers; } 
public java.lang.Object[][] toMultiArrayNumber(com.softserve.edu.atqc.data.apps.ApplicationSources applicationSources, java.util.List<?> list) { <BUGS> java.lang.System.out.println("toMultiArrayNumber Start"); <BUGE> java.lang.Object[][] array = toMultiArrayNumber(2, list); for (int i = 0; i < (list.size()); i++) { array[i][0] = applicationSources; } return array; } 
private void evaluateNotification(int idx, java.lang.String prayId, java.lang.String prayName, java.util.Date date) { cancelNotification(idx); cancelNotification((idx + 10)); long delay = (date.getTime()) - (new java.util.Date().getTime()); <BUGS> sendPrayAlarm(idx, prayId, prayName, delay); <BUGE> } 
private void stopBluetoothReader() { if ((mConnectedThread) != null) <BUGS> mConnectedThread.write("2"); <BUGE>  if (((btSocket) != null) && (btSocket.isConnected())) { try { btSocket.close(); } catch (java.io.IOException e) { } } } 
@java.lang.Override public void processReservation(commonosgi.model.TravelInfo travelInfo) { <BUGS> if (queue.isEmpty()) { <BUGE> this.travelInfo = travelInfo; commonosgi.util.NodeBehavior.processReservationBehavior(this.travelInfo); gui.notify(travelInfo, null); gui.enable(); }else { queue.add(travelInfo); } } 
@org.junit.Test public void Inequals() { java.util.List<java.lang.String> collection = new java.util.ArrayList<java.lang.String>(); collection.add("One"); collection.add("Two"); collection.add("Three"); collection.add("Four"); java.lang.String getAgenda = net.sf.memoranda.util.AgendaGenerator.getAgenda(net.sf.memoranda.date.CalendarDate.yesterday(), collection); net.sf.memoranda.date.CalendarDate cd = net.sf.memoranda.date.CalendarDate.tomorrow(); <BUGS> assertTrue((!(net.sf.memoranda.util.AgendaGenerator.getAgenda(cd, collection).equals(getAgenda)))); <BUGE> } 
public static com.sb.elsinore.Temp findTemp(final java.lang.String name) { <BUGS> synchronized(com.sb.elsinore.LaunchControl.tempList) { java.util.Iterator<com.sb.elsinore.Temp> iterator = com.sb.elsinore.LaunchControl.tempList.iterator(); com.sb.elsinore.Temp tTemp; while (iterator.hasNext()) { tTemp = iterator.next(); if ((tTemp.getName().equalsIgnoreCase(name)) || (tTemp.getProbe().equalsIgnoreCase(name))) { return tTemp; } } } <BUGE> return null; } 
private javax.persistence.TypedQuery<testJpa.simple.parentChild.domain.ParentTable> createDataQuery(final java.lang.String data) { final javax.persistence.criteria.CriteriaBuilder cb = em.getCriteriaBuilder(); final javax.persistence.criteria.CriteriaQuery<testJpa.simple.parentChild.domain.ParentTable> cq = cb.createQuery(testJpa.simple.parentChild.domain.ParentTable.class); final javax.persistence.criteria.Root<testJpa.simple.parentChild.domain.ParentTable> root = cq.from(testJpa.simple.parentChild.domain.ParentTable.class); cq.where(cb.equal(root.get("data"), data)); <BUGS> final javax.persistence.TypedQuery<testJpa.simple.parentChild.domain.ParentTable> tq = em.createQuery(cq); return tq; <BUGE> } 
private void loadUrl(java.lang.String url) { <BUGS> if (Patterns.WEB_URL.matcher(url).matches()) { <BUGE> webView.getSettings().setJavaScriptEnabled(true); webView.setWebViewClient(new in.mobileappdev.news.ui.NewsDetailWebActivity.CustomWebViewclient(this)); webView.loadUrl(url); }else { android.widget.Toast.makeText(this, "Url not valid, Navigating to Home screen", Toast.LENGTH_LONG).show(); startActivity(new android.content.Intent(this, in.mobileappdev.news.ui.SplashScreenActivity.class)); finish(); } } 
@java.lang.Override protected void saveContext() { org.talend.dataquality.analysis.Analysis analysis = getAnalysis(); <BUGS> analysis.getContextType().clear(); <BUGE> org.talend.core.model.process.IContextManager contextManager = currentEditor.getContextManager(); contextManager.saveToEmf(analysis.getContextType()); analysis.setDefaultContext(getDefaultContextGroupName(((org.talend.dataprofiler.core.ui.editor.SupportContextEditor) (currentEditor)))); org.talend.dataquality.helpers.AnalysisHelper.setLastRunContext(currentEditor.getLastRunContextGroupName(), analysis); } 
@java.lang.Override public void done(java.util.List<com.example.user.simpleui.Order> objects, com.parse.ParseException e) { if (e == null) { com.example.user.simpleui.Order.pinAllInBackground("Order", objects); <BUGS> <BUGE> }else { com.example.user.simpleui.Order.getQuery().fromLocalDatastore().findInBackground(callback); } <BUGS> callback.done(objects, e); <BUGE> } 
@java.lang.Override public void actionPerformed(java.awt.event.ActionEvent e) { java.util.Random rand = new java.util.Random(); vehicleTypePrivacyField.setValue(rand.nextDouble()); emergencyTypePrivacyField.setValue(rand.nextDouble()); <BUGS> malfunctionTypePrivacyField.setValue(rand.nextFloat()); numOfPeoplePrivacyField.setValue(rand.nextFloat()); <BUGE> thresholdPrivacyField.setValue(rand.nextDouble()); } 
public void reset(com.studiau.amazinggravity.Ship ship) { float randomFloat = random.nextFloat(); radius = (com.studiau.amazinggravity.ExhaustParticle.BASE_RADIUS) + (randomFloat * (com.studiau.amazinggravity.ExhaustParticle.MAX_ADDITIONAL_RADIUS)); locationX = ship.getExhaustLocationX(); locationY = ship.getExhaustLocationY(); <BUGS> speedX = ((randomFloat - 0.5F) * 2) * (com.studiau.amazinggravity.ExhaustParticle.BASE_SPEEDX); <BUGE> speedY = (com.studiau.amazinggravity.ExhaustParticle.BASE_SPEEDY) + (randomFloat * (com.studiau.amazinggravity.ExhaustParticle.MAX_ADDITIONAL_SPEEDY)); } 
public void clear() throws net.continuumsecurity.proxy.ProxyException { try { <BUGS> clientApi.ascan.removeAllScans(null); <BUGE> clientApi.core.newSession(apiKey, "", ""); } catch (net.continuumsecurity.proxy.ClientApiException e) { e.printStackTrace(); throw new net.continuumsecurity.proxy.ProxyException(e); } } 
@java.lang.Override public void onConnected(@android.support.annotation.Nullable android.os.Bundle bundle) { if (((android.support.v4.app.ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION)) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) && ((android.support.v4.app.ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION)) != (android.content.pm.PackageManager.PERMISSION_GRANTED))) { android.support.v4.app.ActivityCompat.requestPermissions(this, new java.lang.String[]{ android.Manifest.permission.ACCESS_FINE_LOCATION }, LOCATION_PERMISSION_REQUEST_CODE); <BUGS> <BUGE> } <BUGS> getNewLocation(); <BUGE> } 
private void assertActualReportEqualsTo(ru.sbt.refactoring.solidhomework.MailSender fakeMailSender, java.lang.String expectedReportPath) throws java.io.IOException, javax.mail.MessagingException { org.mockito.ArgumentCaptor<java.lang.String> messageTextArgumentCaptor = org.mockito.ArgumentCaptor.forClass(java.lang.String.class); <BUGS> verify(fakeMailSender).createMessageWithHTMLCode(anyString(), messageTextArgumentCaptor.capture(), anyString()); <BUGE> java.nio.file.Path path = java.nio.file.Paths.get(expectedReportPath); java.lang.String expectedReportContent = new java.lang.String(java.nio.file.Files.readAllBytes(path)); org.junit.Assert.assertEquals(messageTextArgumentCaptor.getValue(), expectedReportContent); } 
public static java.lang.String getSetOfHandFromCombinations(java.util.Set<java.lang.Integer> indexesWereChoosen) { java.lang.StringBuilder result = new java.lang.StringBuilder(""); for (java.lang.Integer integer : indexesWereChoosen) { result.append(com.levenko.myequilator.AllCards.getSetOfHandFromCombination(com.levenko.myequilator.AllCards.allCombinationsInRecyclerOrder.get(integer))); result.append(','); } <BUGS> result.deleteCharAt(((result.length()) - 1)); <BUGE> return result.toString(); } 
public boolean endSuccess() { <BUGS> if ((getStatus()) != (XTaskBean.STATUS_DOING)) return false;  if (!(onEndSuccess())) return false;  setStatus(XTaskBean.STATUS_DONE); <BUGE> if ((mListener) != null) mListener.onComplete(getBean());  return true; } 
public java.lang.String getBestSuggestion(java.lang.String typed) { <BUGS> java.lang.System.out.println(((("matching: " + typed) + " Length: ") + (typed.length()))); <BUGE> if ((typed == null) || ((typed.length()) == 0)) return null;  for (java.lang.String keyword : keywords) { if (keyword.startsWith(typed)) return keyword;  } return null; } 
private static java.util.Set<java.lang.String> getAffiliationsFromArgs(java.lang.String affiliationArguments) throws seedu.addressbook.data.exception.IllegalValueException { if (affiliationArguments.isEmpty()) { return java.util.Collections.emptySet(); } <BUGS> final java.util.Collection<java.lang.String> affiliationStrings = java.util.Arrays.asList(affiliationArguments.replaceFirst(" f/", "").split(" t/")); <BUGE> return new java.util.HashSet<>(affiliationStrings); } 
@java.lang.Override public boolean onNavigationItemSelected(android.view.MenuItem menuItem) { mDrawerLayout.closeDrawers(); switch (menuItem.getItemId()) { case R.id.collect : openPage("collect", null, CoreAnim.slide); break; case R.id.update : <BUGS> com.umeng.update.UmengUpdateAgent.forceUpdate(getActivity()); <BUGE> break; case R.id.clear : clear(); break; case R.id.about : openPage("about", null, CoreAnim.slide); break; default : break; } return true; } 
public void removeRows(int[] indices) { java.util.Arrays.sort(indices); for (int i = (indices.length) - 1; i >= 0; i--) { <BUGS> rows.remove(i); <BUGE> } nl.gogognome.lib.swing.AbstractListTableModel.fireTableDataChanged(); } 
public void pause() { br.edu.ufabc.mobile.spacecombat.game.GameView.okToRun = false; <BUGS> while (true) { try { sensorManager.unregisterListener(this); thread.join(); } catch (java.lang.Exception e) { e.printStackTrace(); } break; } <BUGE> if (br.edu.ufabc.mobile.spacecombat.game.GameView.hasSound) { mPlayer1.pause(); mPlayer2.pause(); } thread = null; } 
public void clearCacheLocal(uk.gov.ea.datareturns.distributedtransaction.impl.Cache cache) { switch (cache) { case SITE_PERMIT_CACHES : siteDao.clearCaches(); uniqueIdentifierDao.clearCaches(); uniqueIdentifierAliasDao.clearCaches(); search.initialize(); <BUGS> uk.gov.ea.datareturns.distributedtransaction.impl.RemoteCacheDelegate.LOGGER.error(("Cleared cache group: " + cache)); <BUGE> default : uk.gov.ea.datareturns.distributedtransaction.impl.RemoteCacheDelegate.LOGGER.error(("Not implemented: " + cache)); } } 
private float[] cutArray(int index) { float[] retArr = new float[filterSize]; int j = 0; <BUGS> for (int i = index - (side); i < (index + (side)); i++) { <BUGE> retArr[j] = array[i]; j++; } return retArr; } 
private void actionApresClickCorrect(int x, int y) { try { enAttente = true; java.rmi.registry.Registry reg = java.rmi.registry.LocateRegistry.getRegistry(3212); interaction.ServeurInterface serveur = ((interaction.ServeurInterface) (reg.lookup("Serv"))); <BUGS> positionCourante = new model.Position(x, y); <BUGE> serveur.sendPosition(positionCourante); } catch (java.rmi.RemoteException | java.rmi.NotBoundException ex) { java.util.logging.Logger.getLogger(graphic.StageJeu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); } } 
private pcbuilder.controllers.Component findComponent(pcbuilder.controllers.ProductData productData) { pcbuilder.controllers.Component component = componentRepository.findByManufacturerPartNumber(productData.getMpn()); if (((component == null) && ((productData.getEan()) != null)) && (!(productData.getEan().equals("9999999999999")))) { <BUGS> component = componentRepository.findByEuropeanArticleNumber(productData.getEan()); <BUGE> } return component; } 
public int getPlayer1Score() { int score = 0; <BUGS> for (int i = (this.glasses.length) - 1; i >= ((this.glasses.length) / 2); i++) { <BUGE> if (this.glasses[i].isActive()) break; else score++;  } return score; } 
@java.lang.Override public java.io.InputStream exportDatatypeLibraryDocumentAsHtml(gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.impl.DatatypeLibraryDocument datatypeLibraryDocument, gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.impl.ExportConfig exportConfig, gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.impl.ExportFontConfig exportFontConfig) { if (datatypeLibraryDocument != null) { gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.util.ExportParameters exportParameters = exportUtil.setExportParameters(gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.impl.ExportServiceImpl.DOCUMENT_TITLE_DATATYPE_LIBRARY, true, false, gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.impl.ExportServiceImpl.EXPORT_FORMAT_HTML, exportConfig, exportFontConfig); <BUGS> return exportUtil.exportAsHtmlFromXsl(serializationService.serializeDatatypeLibrary(datatypeLibraryDocument).toXML(), gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.impl.ExportServiceImpl.GLOBAL_STYLESHEET, exportParameters, datatypeLibraryDocument.getMetaData()); <BUGE> }else { return new org.apache.commons.io.input.NullInputStream(1L); } } 
private void addNewLogicalTile() { int[][] emptyTiles = getEmptyTiles(); if ((emptyTiles.length) > 0) { java.util.Random rand = new java.util.Random(); int randNum = rand.nextInt(emptyTiles.length); <BUGS> int row = emptyTiles[randNum][1]; int column = emptyTiles[randNum][2]; <BUGE> Model.board[row][column] = newValue(); } } 
public void updateCurrentTree() { java.lang.System.out.println("updating current tree"); if (((mouseX) >= (FIRST_THIRD)) && ((mouseX) < (SECOND_THIRD))) currentTree = getInstanceTree(tree1); else if (((mouseX) >= (SECOND_THIRD)) && ((mouseX) < (LAST_THIRD))) currentTree = getInstanceTree(tree2); <BUGS>  <BUGE>  <BUGS> currentTree = getInstanceTree(tree3); java.lang.System.out.println("done updating current tree"); <BUGE> } 
protected java.lang.String getGroupRedirect(com.liferay.portal.theme.ThemeDisplay themeDisplay, long groupId) throws java.lang.Exception { <BUGS> java.util.List<com.liferay.portal.model.Layout> layouts = com.liferay.portal.service.LayoutLocalServiceUtil.getLayouts(groupId, false, LayoutConstants.DEFAULT_PARENT_LAYOUT_ID, 0, 1); <BUGE> if ((layouts.size()) > 0) { com.liferay.portal.model.Layout layout = layouts.get(0); return com.liferay.portal.util.PortalUtil.getLayoutURL(layout, themeDisplay); } return null; } 
private void setupBoard() { <BUGS> for (int xCol = 1; xCol <= (length); ++xCol) { for (int yRow = 1; yRow <= (length); ++yRow) { <BUGE> org.javatuples.Pair<java.lang.Integer, java.lang.Integer> pair = org.javatuples.Pair.with(xCol, yRow); Tile tile = new Tile(this, pair); add(tile); slaves.add(tile); } } } 
public static void main(java.lang.String[] args) { try { <BUGS> org.newdawn.slick.ApplicationGDXContainer container = new org.newdawn.slick.ApplicationGDXContainer(new bounceAnator.BounceAnator(), 480, 800, 360, 600); <BUGE> container.start(); } catch (org.newdawn.slick.SlickException e) { e.printStackTrace(); } } 
public static void paintMultiMaps(java.awt.Graphics2D g2, com.wpi.cs509.teamA.bean.Path path, com.wpi.cs509.teamA.util.LinearTransform plt) { if ((null == path) || ((path.getNodes().size()) == 0)) { return ; } com.wpi.cs509.teamA.util.PaintHelper.PaintHelperComposite.paintPath(path, g2, plt); com.wpi.cs509.teamA.util.PaintHelper.PaintHelperComposite.paintNodes(path.getNodes(), g2, PaintHelperBasics.DrawStyleEnum.BasicNode, plt); <BUGS> com.wpi.cs509.teamA.util.PaintHelper.PaintHelperComposite.paintStartEndNode(g2, plt); <BUGE> } 
@java.lang.Override public synchronized void storeUpperLimit(final long limit) { DebugLogger.logger.debug("[PUT] Storing upper limit of {}.", limit); try { cassandraTimestampStore.storeTimestampBound(currentLimit, limit); <BUGS> <BUGE> } catch (java.util.ConcurrentModificationException e) { throw new com.palantir.timestamp.MultipleRunningTimestampServiceError(("CAS unsuccessful; this may indicate that another timestamp service is running against this" + ((" cassandra keyspace, possibly caused by multiple copies of a service running without" + " a configured set of leaders, or a CLI being run with an embedded timestamp service") + " against an already running service.")), e); } } 
<BUGS> public static void main(java.lang.String[] args) throws java.lang.Exception { util.ConfigManager.loadConfig(); <BUGE> main.Files2Facts filesAMLInRDF = new main.Files2Facts(); try { filesAMLInRDF.readFiles(util.ConfigManager.getFilePath()); filesAMLInRDF.generateExtensionalDB(util.ConfigManager.getFilePath()); main.DeductiveDB deductiveDB = new main.DeductiveDB(); deductiveDB.consultKB(); } catch (java.lang.Exception e) { e.printStackTrace(); } } 
public void loadPosition(int x, int y) { ensureSafeWindowPosition(x, y); org.micromanager.internal.utils.DefaultUserProfile profile = org.micromanager.internal.utils.DefaultUserProfile.getInstance(); <BUGS> setBounds(profile.getInt(org.micromanager.internal.utils.MMFrame.class, ((prefPrefix_) + (org.micromanager.internal.utils.MMFrame.WINDOW_X)), x), profile.getInt(org.micromanager.internal.utils.MMFrame.class, ((prefPrefix_) + (org.micromanager.internal.utils.MMFrame.WINDOW_Y)), y), getWidth(), getHeight()); <BUGE> } 
public boolean judgeUserExist(java.lang.String name) { java.lang.String sql = ("select * from User where NAME='" + name) + "'"; boolean result = false; try { java.sql.PreparedStatement pstmt = conn.prepareStatement(sql); java.sql.ResultSet rs = pstmt.executeQuery(); <BUGS> pstmt.close(); <BUGE> if (rs.next()) result = true;  <BUGS> <BUGE> } catch (java.lang.Exception ex) { ex.printStackTrace(); } return result; } 
public static void main(java.lang.String[] args) throws java.lang.Exception { com.thoughtworks.xstream.XStream xs = new com.thoughtworks.xstream.XStream(); xs.processAnnotations(xstream.xstream_class_22.class); java.lang.System.out.println("Unmarshalling:"); java.lang.System.out.println(xs.fromXML(new java.io.File("in.xml"))); java.lang.System.out.println("Marshalling:"); <BUGS> java.lang.System.out.println(xs.toXML(new xstream.xstream_class_22("World", java.util.Arrays.asList(new xstream.xstream_class_22.NumberOfPersonnel(2001, 1000), new xstream.xstream_class_22.NumberOfPersonnel(2002, 500))))); <BUGE> } 
@java.lang.Override public final java.util.List<com.github.sdnwiselab.sdnwise.flowtable.FlowTableEntry> getNodeRules(final byte net, final com.github.sdnwiselab.sdnwise.util.NodeAddress dst) { java.util.List<com.github.sdnwiselab.sdnwise.flowtable.FlowTableEntry> list = new java.util.ArrayList<>(); com.github.sdnwiselab.sdnwise.flowtable.FlowTableEntry fte; int i = 0; while ((fte = getNodeRule(net, dst, i)) != null) { <BUGS> <BUGE> i++; <BUGS> list.add(i, fte); <BUGE> } return list; } 
@java.lang.Override <BUGS> public void run() { <BUGE> final magic.ai.MMAB.MMABWorker worker = new magic.ai.MMAB.MMABWorker(java.lang.Thread.currentThread().getId(), workerGame, scoreBoard, CHEAT); worker.evaluateGame(achoice, scoreRef.get(), ((java.lang.System.nanoTime()) + slice)); scoreRef.update(achoice.aiScore.getScore()); } 
void gameSetup() { twosnakes.Vector headPos = new twosnakes.Vector(100, 100); twosnakes.Vector facing = new twosnakes.Vector(1, 0); <BUGS> Vector = $missing$; size(50, 20); state.snake1 = new twosnakes.P1Snake(headPos, facing, null, null, null); <BUGE> } 
private java.lang.String getNdtDocs(java.util.List<com.lvg.weldercenter.ui.entities.report.NDTDocumentUI> ndtDocumentUIList) { if (ndtDocumentUIList == null) return constants.GENERIC_NULL_FIELD;  java.lang.StringBuilder result = new java.lang.StringBuilder(); for (com.lvg.weldercenter.ui.entities.report.NDTDocumentUI ndt : ndtDocumentUIList) { result.append(ndt.getName()); <BUGS> result.append("; "); <BUGE> } deleteLastSeparator(result, constants.GENERIC_SEMICOLON_SEPARATOR); return result.toString(); } 
@java.lang.Override public android.support.v4.app.Fragment getItem(int position) { switch (position) { case 0 : <BUGS> return com.example.arthome.newexchangeworld.ItemPage.ItemFragment.newInstance(); <BUGE> case 1 : return twoFragment.newInstance("1", "2"); case 2 : return oneFragment.newInstance("1", "2"); case 3 : return twoFragment.newInstance("1", "2"); case 4 : return oneFragment.newInstance("1", "2"); default : return null; } } 
public Objects.MapTypes.MapInterface createMap(int mapSize, int numOfPlayers, int choice) { <BUGS> switch (choice) { case 1 : Objects.MapTypes.SafeMapCreator creator = new Objects.MapTypes.SafeMapCreator(); return creator.create(mapSize, numOfPlayers); case 2 : Objects.MapTypes.HazardousMapCreator creator2 = new Objects.MapTypes.HazardousMapCreator(); return creator2.create(mapSize, numOfPlayers); <BUGE> } <BUGS> return null; <BUGE> } 
private static java.lang.String removeCommandWord(java.lang.String userInput) { java.lang.String[] inputArray = userInput.split(parser.EventParser.SYMBOL_WHITESPACE); java.lang.String remainingText = parser.EventParser.SYMBOL_EMPTY; if ((inputArray.length) >= (parser.EventParser.ARRAY_MINIMUM_LENGTH)) { <BUGS> for (java.lang.String eachWord : inputArray) { remainingText += eachWord; <BUGE> remainingText += parser.EventParser.SYMBOL_WHITESPACE; } } return remainingText; } 
@java.lang.Override public void execute(com.prey.actions.observer.ActionJob actionJob, android.content.Context ctx) { com.prey.PreyConfig preyConfig = com.prey.PreyConfig.getPreyConfig(ctx); if (preyConfig.isFroyoOrAbove()) { preyConfig.setLock(true); <BUGS> preyConfig.setUnlockPass(getConfig().get("unlock_pass")); <BUGE> com.prey.backwardcompatibility.FroyoSupport.getInstance(ctx).changePasswordAndLock(getConfig().get("unlock_pass"), true); } } 
public java.util.List<sdk.SDKMessage> get(int userId) { java.util.List<sdk.SDKMessage> result = null; try { sdk.SitchozrServices service = sdk.SitchozrSDK.getInstance().getSitchozrServices(); <BUGS> result = service.readMessages(this.userId); <BUGE> } catch (java.lang.Exception e) { android.util.Log.w(SitchozrSDK.WARNING_TAG, "An error occured while getting message"); } return result; } 
public static java.lang.String createNewExecutionId() { <BUGS> java.lang.String executionId; executionId = null; try { org.safehaus.uuid.UUIDGenerator uuidGen = org.safehaus.uuid.UUIDGenerator.getInstance(); org.safehaus.uuid.UUID uuidObj = uuidGen.generateTimeBasedUUID(); executionId = uuidObj.toString(); executionId = executionId.replaceAll("-", ""); } catch (java.lang.Throwable t) { } <BUGE> return executionId; } 
@java.lang.Override protected java.lang.Object doInBackground(java.lang.Object[] objects) { java.lang.String methodName = "insertPersonDetails"; webService = new com.idbi.app.network.SOAPWebservice(mContext); com.idbi.app.model.Output object = null; getNomineeData(); <BUGS> for (int i = 0; i < (nomineeDetailsList.size()); i++) { object = webService.insertUpdatePersonalDetails(nomineeDetailsList.get(i), methodName); <BUGE> } return object; } 
@java.lang.Override public void dragOver(java.awt.dnd.DropTargetDragEvent e) { java.awt.Point cursorLocationBis = e.getLocation(); javax.swing.tree.TreePath destinationPath = getPathForLocation(cursorLocationBis.x, cursorLocationBis.y); <BUGS> if (isDroppable(destinationPath, selectedTreePath)) { <BUGE> e.acceptDrag(java.awt.dnd.DnDConstants.ACTION_MOVE); setCursor(org.openflexo.gina.swing.view.widget.JFIBBrowserWidget.DnDJTree.dropOK); }else { e.rejectDrag(); setCursor(org.openflexo.gina.swing.view.widget.JFIBBrowserWidget.DnDJTree.dropKO); } } 
<BUGS> private void addRecord(java.lang.String newkey, T newRecord) { org.kisst.pko4j.index.MultiIndex.logger.info("adding unique key {} ", newkey); org.kisst.item4j.ImmutableSequence<T> oldList = map.get(newkey); <BUGE> if (oldList == null) <BUGS> map.put(newkey, org.kisst.item4j.ImmutableSequence.of(getRecordClass(), newRecord)); <BUGE> else if (!(oldList.contains(newRecord))) { org.kisst.item4j.ImmutableSequence<T> newList = oldList.growTail(newRecord); <BUGS> map.put(newkey, newList); <BUGE> }  } 
public void removeSelection(int pos) { android.view.View view = manager.findViewByPosition(pos); <BUGS> <BUGE> android.widget.TextView title = ((android.widget.TextView) (view.findViewById(R.id.aa_title))); android.widget.TextView subtitle = ((android.widget.TextView) (view.findViewById(R.id.subtitle))); title.setTextColor(Color.WHITE); subtitle.setTextColor(android.support.v4.content.ContextCompat.getColor(getContext(), android.R.color.darker_gray)); } 
public static void test_050() { framework.common.GalleryCommon.deleteMoreGallery(); framework.common.GalleryCommon.clickGallery(); <BUGS> check(testcase.Object_Description, testcase.Operation_WaitForExists, "更多选项", "10000"); <BUGE> excute(testcase.Object_Description, testcase.Operation_ClickWait, "更多选项"); excute(testcase.Object_Text, testcase.Operation_ClickWait, "删除"); <BUGS> check(testcase.Object_ResourceId, testcase.Operation_checkExist, "android:id/content"); <BUGE> excute(testcase.Object_Text, testcase.Operation_ClickWait, "确定"); check(testcase.Object_Text, testcase.Operation_checkExist, "相机"); } 
@java.lang.Override public void onClick(android.view.View v) { int index = 0; for (int i = 1; i < (day); i++) index += (getItinerarySizeByDay(getContext(), i)) - 1;  final int indexToAssign = index; <BUGS> mAddBtn.setOnClickListener(new android.view.View.OnClickListener() { @java.lang.Override public void onClick(android.view.View v) { uz.samtuit.samapp.helpers.ItineraryHelper.addNewItemFromItinerary(getFragmentManager(), day, indexToAssign); } }); <BUGE> } 
public void setShowOriginal(boolean b) { if (b) { <BUGS> assert (state) == (pixelitor.layers.ImageLayer.State.PREVIEW); <BUGE> setState(pixelitor.layers.ImageLayer.State.SHOW_ORIGINAL); }else { <BUGS> assert (state) == (pixelitor.layers.ImageLayer.State.SHOW_ORIGINAL); <BUGE> setState(pixelitor.layers.ImageLayer.State.PREVIEW); } comp.imageChanged(pixelitor.Composition.ImageChangeActions.REPAINT); } 
@java.lang.Override public void run() { lblLoading.setVisible(true); org.magic.api.beans.MagicEdition ed = ((org.magic.api.beans.MagicEdition) (cboEditions.getSelectedItem())); modEdition.init(ed); try { modEdition.fireTableDataChanged(); } catch (java.lang.Exception e) { } <BUGS> table.packAll(); <BUGE> table.setRowSorter(new javax.swing.table.TableRowSorter(modEdition)); save("EDITION", ed.getId()); lblLoading.setVisible(false); } 
@org.junit.Test public void testSignMultiApkWithZipalign() throws java.lang.Exception { java.util.List<java.io.File> uApks = at.favre.tools.apksigner.SignToolTest.copyToTestPath(originalFolder, unsingedApks); java.lang.String cmd = ((((((("-" + (at.favre.tools.apksigner.ui.CLIParser.ARG_APK_FILE)) + " ") + (originalFolder.getAbsolutePath())) + " -") + (at.favre.tools.apksigner.ui.CLIParser.ARG_APK_OUT)) + " ") + (outFolder.getAbsolutePath())) + " --debug"; <BUGS> at.favre.tools.apksigner.SignToolTest.testAndCheck(cmd, outFolder, uApks); <BUGE> } 
public void start() throws javax.jms.JMSException, javax.naming.NamingException { if ((namingContext) != null) { return ; } namingContext = new javax.naming.InitialContext(); javax.jms.TopicConnectionFactory tcf = ((javax.jms.TopicConnectionFactory) (namingContext.lookup(configuration.getConnectionFactoryJndiName()))); org.hawkular.bus.common.ConnectionContextFactory ccf = new org.hawkular.bus.common.ConnectionContextFactory(tcf); <BUGS> org.hawkular.bus.common.producer.ProducerConnectionContext pcc = ccf.createProducerConnectionContext(new org.hawkular.bus.common.Endpoint(Endpoint.Type.TOPIC, configuration.getInventoryChangesTopicName())); this.messageSender = new org.hawkular.inventory.bus.MessageSender(pcc); <BUGE> install(); } 
@java.lang.SuppressWarnings(value = "unchecked") @java.lang.Override public <T> T[] toArray(T[] a) { T[] result = null; if ((a.length) >= (this.size())) result = a; else result = ((T[]) (java.lang.reflect.Array.newInstance(a.getClass().getComponentType(), this.size())));  <BUGS> java.lang.System.arraycopy(this.array, 0, result, 0, result.length); <BUGE> return result; } 
@org.junit.Test public void shouldReturnSameNextDateWhenPlayersDateIsNull() { org.mockito.Mockito.when(settingsProvider.getCurrentDate()).thenReturn(navigator.TestUtil.getCalendar(2015, 10, 17, 12, 10)); java.util.Date nextDate = navigator.TestUtil.getDate(2015, 10, 17, 12, 20); <BUGS> java.util.Date nextRuntime = nextRunTimeCalculator.calculateNextRuntime(new java.util.ArrayList<model.Player>(), nextDate); <BUGE> junit.framework.TestCase.assertEquals(true, org.apache.commons.lang3.time.DateUtils.isSameInstant(nextDate, nextRuntime)); } 
public void setLongitude(java.lang.String longitude) { int[] longitudeDMS = fiskinfoo.no.sintef.fiskinfoo.Implementation.FiskInfoUtility.decimalToDMSArray(java.lang.Double.valueOf(longitude)); latitudeDegreesEditText.setText(java.lang.String.valueOf(longitudeDMS[0])); latitudeMinutesEditText.setText(java.lang.String.valueOf(longitudeDMS[1])); latitudeSecondsEditText.setText(java.lang.String.valueOf(longitudeDMS[2])); <BUGS> longitudeCardinalDirectionSwitch.setChecked(((java.lang.Double.valueOf(longitude)) < 0)); <BUGE> } 
private void processAttributes(android.content.Context context, android.util.AttributeSet attrs) { android.content.res.TypedArray a = context.obtainStyledAttributes(attrs, R.styleable.ColorButton); final int N = a.getIndexCount(); for (int i = 0; i < N; ++i) { int attr = a.getIndex(i); <BUGS> switch (attr) { case R.styleable.ColorButton_jr_color : mColor = a.getColor(attr, 0); colorify(); break; <BUGE> } } a.recycle(); } 
public java.util.Date getAsDate() { if ((isASAP()) || (isNEVER())) { return null; } <BUGS> return new java.util.Date(((((itsValue) - ((atnf.atoms.time.DUTC.get()) * 1000000L)) - 3506716800000000L) / 1000L)); <BUGE> } 
@java.lang.Override public void grab() { if (this.isClosing()) { return ; } <BUGS> if (this.captureIpl.available()) { captureIpl.read(); org.bytedeco.javacpp.opencv_core.IplImage img = captureIpl.getIplImage(); if (img != null) { updateCurrentImage(img); } }else { <BUGE> waitForNextFrame(); <BUGS> <BUGE> } } 
protected void onSaveInstanceState(android.os.Bundle outState) { super.onSaveInstanceState(outState); <BUGS> android.util.Log.v(com.gcw.sapienza.places.MainActivity.TAG, "onSaveInstanceState called!"); <BUGE> outState.putByteArray("audio", this.getShareFragment().getAudio()); outState.putByteArray("pic", this.getShareFragment().getPic()); outState.putByteArray("video", this.getShareFragment().getVideo()); } 
@java.lang.Override public void initialize(java.net.URL url, java.util.ResourceBundle rb) { DataModel = Model.Sync.getInstance(); FencerColumn.setCellValueFactory(new javafx.scene.control.cell.PropertyValueFactory<>("fullName")); FencingSchoolColumn.setCellValueFactory(new javafx.scene.control.cell.PropertyValueFactory<>("fencingSchool")); AgeColumn.setCellValueFactory(new javafx.scene.control.cell.PropertyValueFactory<>("birthday")); <BUGS> TournamentColumn.setCellFactory(new javafx.scene.control.cell.PropertyValueFactory<>("name")); DateColumn.setCellFactory(new javafx.scene.control.cell.PropertyValueFactory<>("date")); <BUGE> UpdateView(); } 
private void makeNewHeader(org.json.JSONObject transforms) { for (int x = 1; x < ((transforms.length()) + 1); x++) { java.lang.String curTransform = "transform" + x; java.lang.String newField = getCurrTransformNewField(transforms, curTransform); <BUGS> java.lang.System.out.println(("newField is: " + newField)); <BUGE> if (newField.equals("")) { }else if (checkHeaderDuplicate(newHeader, newField)) { newHeader.put(newHeader.length(), newField); }  } } 
<BUGS> public void onRequest(java.lang.String ipAddress, java.sql.Timestamp time) { synchronized(this) { (requestTotal)++; } <BUGE> com.hula.domain.Request request = new com.hula.domain.Request(ipAddress, 1, time); if (!(requests.contains(request))) { requests.add(request); }else { com.hula.domain.Request r = requests.get(requests.indexOf(request)); r.setRequestCount(((r.getRequestCount()) + 1)); r.setDateOfLastRequest(time); } } 
public void reset() { for (int i = 0; i < (numberOfDoFs); i++) regularizationMatrix.set(i, i, jointAccelerationRegularization.getDoubleValue());  solverInput_H.zero(); solverInput_f.zero(); solverInput_Aeq.reshape(0, problemSize); <BUGS> solverInput_beq.reshape(0, 0); <BUGE> if (!(firstCall.getBooleanValue())) addJointJerkRegularization();  } 
public final java.lang.String start() throws java.lang.Exception { <BUGS> javax.servlet.http.HttpServletRequest request = com.opensymphony.webwork.ServletActionContext.getRequest(); javax.servlet.http.HttpSession session = request.getSession(); chatBoxMap = chatManager.getOpenChats(session); chatManager.setOnlineStatus(getRemoteUser(), ChatStatus.NO_CHANGE); <BUGE> return SUCCESS; } 
@org.junit.jupiter.api.Test void shouldInjectCustomInstanceAsParameter(io.specto.hoverfly.junit.core.Hoverfly hoverfly) { io.specto.hoverfly.junit5.HoverflyCustomCaptureTest.hoverflyInstance = hoverfly; org.assertj.core.api.Assertions.assertThat(hoverfly.getMode()).isEqualTo(HoverflyMode.CAPTURE); <BUGS> org.assertj.core.api.Assertions.assertThat(hoverfly.getHoverflyInfo().getDestination()).isEqualTo("hoverfly.io"); <BUGE> org.assertj.core.api.Assertions.assertThat(hoverfly.getHoverflyInfo().getModeArguments().getHeadersWhitelist()).containsExactly("*"); } 
public void setFilename(java.lang.String filename) { <BUGS> if (filename.endsWith(((java.io.File.separator) + "DB"))) connField.setText(filename.substring(0, ((filename.length()) - 3))); else connField.setText(filename);  <BUGE> } 
public boolean contains(java.lang.String key) { int[] hashes = getHashes(key); for (int hash : hashes) { <BUGS> if (store.getBit((hash % (capacity)))) { return true; <BUGE> } } <BUGS> return false; <BUGE> } 
@java.lang.Override public void onDataChange(com.google.firebase.database.DataSnapshot dataSnapshot) { try { <BUGS> java.lang.Double value = ((java.lang.Double) (dataSnapshot.getValue())); <BUGE> if (value != null) { myRef.child(path).setValue((value + passedValue)); }else { myRef.child(path).setValue(passedValue); } } catch (java.lang.Exception e) { android.util.Log.d("Error catched", e.toString()); } } 
void upsertCF(com.datastax.driver.core.Session session) { <BUGS> session.execute(((((((((((((((("CREATE TABLE IF NOT EXISTS " + (TableName)) + " (\"_id\" text PRIMARY KEY, name list<text>) WITH bloom_filter_fp_chance = 0.01 ") + " AND caching = \'{\"keys\":\"ALL\", \"rows_per_partition\":\"NONE\"}\'") + " AND comment = 'Auto-created by Elassandra' ") + " AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy'} ") + " AND compression = {'sstable_compression': 'org.apache.cassandra.io.compress.LZ4Compressor'} ") + " AND dclocal_read_repair_chance = 0.1  ") + " AND default_time_to_live = 0 ") + " AND gc_grace_seconds = 864000 ") + " AND max_index_interval = 2048 ") + " AND memtable_flush_period_in_ms = 0 ") + " AND min_index_interval = 128 ") + " AND read_repair_chance = 0.0 ") + " AND speculative_retry = '99.0PERCENTILE'; ") + " \"); ")); <BUGE> session.execute("CREATE CUSTOM INDEX elastic_external_name_idx ON customer.external (name) USING 'org.elasticsearch.cassandra.index.ExtendedElasticSecondaryIndex';"); } 
public static void init(final java.lang.String keyFiles, final java.lang.String pageRankFile) throws java.io.IOException { <BUGS> if (de.citec.sc.templates.TopicSpecificPageRankTemplate.isInitialized) { <BUGE> final java.util.Set<java.lang.Integer> indicies; de.citec.sc.templates.TopicSpecificPageRankTemplate.log.info("Load topic specific page rank file..."); indicies = de.citec.sc.templates.TopicSpecificPageRankTemplate.loadTopicSpecificPageRanks(pageRankFile); de.citec.sc.templates.TopicSpecificPageRankTemplate.log.info("Done, loading topic specific page rank index mapping file"); de.citec.sc.templates.TopicSpecificPageRankTemplate.log.info("Load topic specific page rank index mapping file..."); de.citec.sc.templates.TopicSpecificPageRankTemplate.loadIndexMapping(keyFiles, indicies); de.citec.sc.templates.TopicSpecificPageRankTemplate.log.info("Done, loading topic specific page rank index mapping file"); de.citec.sc.templates.TopicSpecificPageRankTemplate.isInitialized = true; } } 
public void gameCycle(java.awt.Color color) { if (color == (chosenColor)) { gui.ColorGameGUI.finalScore = (gui.ColorGameGUI.finalScore) + 100; setWord(); setColor(); <BUGS> gui.ColorGameGUI.count = (gui.ColorGameGUI.count) + 1; <BUGE> }else { setWord(); setColor(); <BUGS> gui.ColorGameGUI.count = (gui.ColorGameGUI.count) + 1; <BUGE> } <BUGS> if ((gui.ColorGameGUI.count) == 5) { <BUGE> endGame(); } } 
private com.comcast.cdn.traffic_control.traffic_router.core.dns.ZoneKey generateZoneKey(final org.xbill.DNS.Name name, final java.util.List<org.xbill.DNS.Record> list, final boolean dynamicRequest, final boolean dnssecRequest) { if (dynamicRequest && (!dnssecRequest)) { return new com.comcast.cdn.traffic_control.traffic_router.core.dns.ZoneKey(name, list); }else <BUGS> if ((isDnssecEnabled()) && (name.subdomain(com.comcast.cdn.traffic_control.traffic_router.core.dns.ZoneManager.getTopLevelDomain()))) { <BUGE> return new com.comcast.cdn.traffic_control.traffic_router.core.dns.SignedZoneKey(name, list); }else { return new com.comcast.cdn.traffic_control.traffic_router.core.dns.ZoneKey(name, list); }  } 
@com.linkbit.beidou.controller.workOrder.RequestMapping(value = "/add2LocCart", method = RequestMethod.POST) @com.linkbit.beidou.controller.workOrder.ResponseBody public com.linkbit.beidou.domain.workOrder.WorkOrderReportCart add2LocCart(@com.linkbit.beidou.controller.workOrder.RequestParam(value = "locationId") java.lang.Long locationId, @com.linkbit.beidou.controller.workOrder.RequestParam(value = "orderDesc") java.lang.String orderDesc, @com.linkbit.beidou.controller.workOrder.RequestParam(value = "reporter") java.lang.String reporter, @com.linkbit.beidou.controller.workOrder.RequestParam(value = "eqClassId") java.lang.Long eqClassId, javax.servlet.http.HttpSession httpSession) { <BUGS> java.lang.System.out.println((("------------------------" + (new java.util.Date().getTime())) + "")); <BUGE> java.lang.String creator = ((java.lang.String) (httpSession.getAttribute("personName"))); com.linkbit.beidou.domain.workOrder.WorkOrderReportCart workOrderReportCart = workOrderReportCartService.add2LocCart(locationId, orderDesc, creator, reporter, eqClassId); return workOrderReportCart; } 
private void handleAutoImprov(int slotInPlayback) { int gap = lickgenFrame.getGap(); if ((lickgenFrame.getRecurrent()) && (slotInPlayback >= ((stopPlaybackAtSlot) - gap))) { (recurrentIteration)++; setFirstChorus(false); setStatus(("Chorus " + (recurrentIteration))); <BUGS> int start = improviseStartSlot; originalGenerate(lickgen, start, improviseEndSlot); <BUGE> } } 
public java.util.List<com.JJ.controller.invoicemanagement.vo.InvoiceVO> getAllInvoiceByIdList(java.util.List<java.lang.Integer> idList) { <BUGS> com.JJ.model.InvoiceDbObjectExample invoiceDbObjectExample = new com.JJ.model.InvoiceDbObjectExample(); invoiceDbObjectExample.createCriteria().andDeleteIndEqualTo(GeneralUtils.NOT_DELETED).andInvoiceIdIn(idList); invoiceDbObjectExample.setOrderByClause("invoice_date desc"); return convertToInvoiceVOList(invoiceDbObjectMapper.selectByExample(invoiceDbObjectExample)); <BUGE> } 
public void loadImages(java.util.List<com.albums.model.Album> albums) { <BUGS> if (albums != null) { <BUGE> waitMb.show(baseAlbumActivity); this.unprocessedAlbums = new java.util.ArrayList<com.albums.model.Album>(albums); for (int i = 0; i < (albums.size()); i++) { com.albums.util.ImageLoader imageLoader = new com.albums.util.ImageLoader(baseAlbumActivity, this); imageLoader.execute(albums.get(i)); } } } 
private void executeAlarm() { java.util.List<com.doers.wakemeapp.common.model.audio.Song> songs = mCurrentAlarm.getPlaylist().getSongs(); int randSong = new java.util.Random().nextInt(songs.size()); com.doers.wakemeapp.common.model.audio.Song selectedSong = songs.get(randSong); java.lang.String songPath = selectedSong.getPath(); startSoundService(songPath); <BUGS> displayNotification(); <BUGE> } 
private static void overrideFromSystemProperties(java.util.Properties properties) { <BUGS> properties.stringPropertyNames().stream().forEach(( key) -> { <BUGE> java.lang.String systemProperty = java.lang.System.getProperty(key); if (org.apache.commons.lang3.StringUtils.isNotBlank(systemProperty)) { properties.setProperty(key, systemProperty); } }); } 
public void insert(com.bergamin.contactlist.model.Contact contact) { android.database.sqlite.SQLiteDatabase db = getWritableDatabase(); android.content.ContentValues data = new android.content.ContentValues(); data.put("name", contact.getName()); data.put("address", contact.getAddress()); data.put("phone", contact.getPhone()); data.put("webSite", contact.getWebSite()); <BUGS> data.put("rating", contact.getRating()); <BUGE> db.insert("Contacts", null, data); } 
@java.lang.Override public void mouseWheelMoved(java.awt.event.MouseWheelEvent e) { <BUGS> int ctrlMod = (java.awt.event.MouseWheelEvent.CTRL_MASK) | (java.awt.event.MouseWheelEvent.CTRL_DOWN_MASK); int modifier = e.getModifiers(); boolean ctrlDown = (modifier & ctrlMod) != 0; if (ctrlDown) { int sign = e.getWheelRotation(); if (sign < 0) { this.cam_zoom_increase(); return ; } if (sign > 0) { this.cam_zoom_decrease(); return ; } <BUGE> } } 
public boolean insert(int newData) { Node newestNode = new Node(); <BUGS> s = $missing$; <BUGE> if (newestNode == null) { java.lang.System.out.println("Out of memory error."); return false; }else { newestNode.setData(newData); newestNode.setNext(head.getNext()); head.setNext(newestNode); return true; } } 
@java.lang.Override public boolean isDisabled(java.lang.String layerName) { uk.ac.rdg.resc.edal.catalogue.jaxb.VariableConfig xmlVariable = getXmlVariable(layerName); if (xmlVariable != null) { <BUGS> xmlVariable.isDisabled(); <BUGE> }else { uk.ac.rdg.resc.edal.ncwms.config.NcwmsDynamicService dynamicService = getDynamicServiceFromLayerName(layerName); if (dynamicService != null) { return dynamicService.isDisabled(); <BUGS> <BUGE> } } <BUGS> return true; <BUGE> } 
private void getDeviceLocation() { <BUGS> if ((android.support.v4.content.ContextCompat.checkSelfPermission(getContext(), android.Manifest.permission.ACCESS_FINE_LOCATION)) == (android.content.pm.PackageManager.PERMISSION_GRANTED)) { <BUGE> mLocationPermissionGranted = true; }else { android.support.v4.app.ActivityCompat.requestPermissions(getActivity(), new java.lang.String[]{ android.Manifest.permission.ACCESS_FINE_LOCATION }, me.kahlout.rangebuddy.DistanceFragment.PERMISSIONS_REQUEST_ACCESS_FINE_LOCATION); } if (mLocationPermissionGranted) { mCurrentLocation = LocationServices.FusedLocationApi.getLastLocation(mGoogleApiClient); LocationServices.FusedLocationApi.requestLocationUpdates(mGoogleApiClient, mLocationRequest, this); } } 
public void uploadPicture(com.pervasive.sth.network.Media mediaFile) throws java.lang.Exception { android.util.Log.d(LOG_TAG, "Uploading picture on web server."); org.json.JSONObject jsonPicture = new org.json.JSONObject(); jsonPicture.put("PIC_NAME", mediaFile.getMediaName()); <BUGS> org.json.JSONArray jArr = new org.json.JSONArray(); <BUGE> byte[] pictureData = mediaFile.getData(); java.lang.String encodedData = android.util.Base64.encodeToString(pictureData, Base64.DEFAULT); jsonPicture.put("PIC_DATA", encodedData); pictureClient.executePost(jsonPicture.toString()); } 
@java.lang.Override public void update(float delta) { com.osreboot.ridhvl.painter.HvlCamera.setX(((com.osreboot.ridhvl.painter.HvlCamera.getX()) + (((HvlInputSeriesAction.HORIZONTAL.getCurrentOutput()) * delta) * 256.0F))); com.osreboot.ridhvl.painter.HvlCamera.setY(((com.osreboot.ridhvl.painter.HvlCamera.getY()) + (((HvlInputSeriesAction.VERTICAL.getCurrentOutput()) * delta) * 256.0F))); if ((tilemaps) != null) { <BUGS> <BUGE> tilemaps.draw(delta); } } 
public static com.packt.service.BookService getInstance() { java.util.ServiceLoader<com.packt.spi.BookServiceProvider> sl = java.util.ServiceLoader.load(com.packt.spi.BookServiceProvider.class); java.util.Iterator<com.packt.spi.BookServiceProvider> iter = sl.iterator(); if (!(iter.hasNext())) throw new java.lang.RuntimeException("No service providers found!");  <BUGS> com.packt.spi.BookServiceProvider provider; <BUGE> while (iter.hasNext()) { provider = iter.next(); java.lang.System.out.println(provider.getClass()); } return provider.getBookService(); } 
public void loadAlbums(android.content.Context context, boolean hidden) { this.hidden = hidden; <BUGS> java.util.ArrayList<org.fossasia.phimpme.leafpic.data.Album> list = new java.util.ArrayList<org.fossasia.phimpme.leafpic.data.Album>(); if (SP.getBoolean(context.getString(R.string.preference_use_alternative_provider), false)) { org.fossasia.phimpme.leafpic.data.providers.StorageProvider p = new org.fossasia.phimpme.leafpic.data.providers.StorageProvider(context); list = p.getAlbums(context, hidden); }else { list.addAll(org.fossasia.phimpme.leafpic.data.providers.MediaStoreProvider.getAlbums(context, hidden)); } <BUGE> dispAlbums = list; sortAlbums(context); } 
private java.lang.String getPlaylist() { int entryCount = java.lang.Integer.parseInt(getConfiguration().getProperty("playlist.entry.count")); java.lang.StringBuilder playlist = new java.lang.StringBuilder(); for (int i = 1; i < entryCount; i++) { <BUGS> playlist.append(((i + "/ ") + (getConfiguration().getProperty(("playlist.entry.name." + i))))); <BUGE> } return playlist.toString(); } 
@java.lang.Override public org.lemurproject.galago.core.parse.Document nextDocument() throws java.io.IOException { org.lemurproject.galago.core.parse.Document doc = super.nextDocument(); if (!(doc == null)) { org.lemurproject.galago.core.parse.Document nerDoc = new org.lemurproject.galago.core.parse.Document(); nerDoc.text = doNER(doc.text); nerDoc.metadata = doc.metadata; nerDoc.name = doc.name; <BUGS> <BUGE> ciir.proteus.parse.NamedEntityRecorder ner = new ciir.proteus.parse.NamedEntityRecorder(outputPath); <BUGS> ner.record(doc); <BUGE> } return doc; } 
private static void addGenericItem(net.minecraft.item.Item item) { com.xplosivesnet.explochem.xplosivesnet_items.items[com.xplosivesnet.explochem.xplosivesnet_items.counter] = item; if ((com.xplosivesnet.explochem.xplosivesnet_items.counter) != 0) item.setContainerItem(com.xplosivesnet.explochem.xplosivesnet_items.items[0]);  <BUGS> java.lang.System.out.println((((item.getUnlocalizedName()) + " : ") + (com.xplosivesnet.explochem.xplosivesnet_items.counter))); <BUGE> (com.xplosivesnet.explochem.xplosivesnet_items.counter)++; cpw.mods.fml.common.registry.GameRegistry.registerItem(item, item.getUnlocalizedName()); } 
public void interact(Entity ent) { if (ent instanceof Player) { if ((GameStats.getPowerupState()) == 0) { ent.setHeight(((ent.getHeight()) * 2)); <BUGS> ent.setY(((getY()) - ((ent.getHeight()) / 2))); <BUGE> GameStats.setPowerupState(1); } GameStats.incrementScore(1000); remove(getGame().getControlVar()); } } 
public void remove() { if ((parent) == null) { <BUGS> assert (root) == (this); <BUGE> root = null; return ; } parent.children.remove(this); if (parent.children.isEmpty()) { parent.remove(); }else { parent.computeMBR(); } } 
@java.lang.Override public model.Cell put(model.Position key, model.Cell value) { model.Cell previousValue = get(key); <BUGS> <BUGE> if (value instanceof model.ActiveCell) { activeCells.put(key, ((model.ActiveCell) (value))); }else { staticCells.put(key, value); } return previousValue; } 
@java.lang.Override public java.lang.Object execute(org.eclipse.core.commands.ExecutionEvent event) throws org.eclipse.core.commands.ExecutionException { if (eu.modelwriter.configuration.internal.AlloyUtilities.isExists()) { this.candidateToTypeChanging = new java.util.ArrayList<org.eclipse.core.resources.IMarker>(); <BUGS> this.addRemoveType(); <BUGE> }else { org.eclipse.jface.dialogs.MessageDialog infoDialog = new org.eclipse.jface.dialogs.MessageDialog(eu.modelwriter.marker.MarkerActivator.getShell(), "System Information", null, "You dont have any registered alloy file to system.", org.eclipse.jface.dialogs.MessageDialog.INFORMATION, new java.lang.String[]{ "OK" }, 0); infoDialog.open(); } return null; } 
public boolean isPointInArea(java.awt.Point pos, int areaLeftX, int areaRightX, int areaUpY, int areaDownY) { <BUGS> boolean in = false; in = areaLeftX < (pos.x); in = (pos.x) < areaRightX; in = areaUpY < (pos.y); in = (pos.y) < areaDownY; return in; <BUGE> } 
public PokemonSpecies findCaughtSpeciesData(java.lang.String speciesName) throws PokedexException { for (int i = 0; i < (pokedex.size()); i++) { PokemonSpecies poke = pokedex.get(i); if (poke.getSpeciesName().equals(speciesName)) { <BUGS> if (!(poke.isEmpty())) { <BUGE> return poke; } <BUGS> }else { throw new PokedexException(Config.UNSEEN_POKEMON); <BUGE> } } <BUGS> throw new PokedexException(Config.UNCAUGHT_POKEMON); <BUGE> } 
public boolean isCallTime(int timeIndex) { <BUGS> return ((((double) (timeIndex + 1)) / (getProp(de.htw.berlin.polysun4diac.plugins.BatteryPreSimulatorSocket.CALL_INTERVAL_KEY).getInt())) - 1) == ((java.lang.Math.ceil((((double) (timeIndex + 1)) / (getProp(de.htw.berlin.polysun4diac.plugins.BatteryPreSimulatorSocket.CALL_INTERVAL_KEY).getInt())))) - 1); <BUGE> } 
@org.junit.Test public void test_dropTable() { org.mockito.Mockito.when(metadataMapper.apply(org.mockito.Matchers.any())).thenReturn(hiveTable); org.trustedanalytics.datasetpublisher.boundary.Metadata metadata = new org.trustedanalytics.datasetpublisher.boundary.Metadata(); metadata.setOrgUUID("cccccf34-f597-4634-8dd2-1875c06b9c4c"); <BUGS> sut.dropTable(metadata, java.util.Optional.<java.lang.String>empty()); <BUGE> org.mockito.Mockito.verify(hiveService, org.mockito.Mockito.times(1)).dropTable(org.mockito.Matchers.any(), org.mockito.Matchers.any()); } 
@java.lang.Override public void afterTextChanged(android.text.Editable s) { if ((weightPrevLength) > (s.length())) { com.kq.liftplusone.models.ExerciseSet set = mSets.get(position); <BUGS> set.setWeight(java.lang.Float.parseFloat(s.toString())); <BUGE> mSets.set(position, set); } } 
<BUGS> public static java.lang.String fetchWebpageData(java.lang.String requestUrl, android.content.Context context) { java.net.URL url = com.example.android.hashseparator.QueryUtils.createUrl(requestUrl, context); <BUGE> java.lang.String response = null; try { <BUGS> response = com.example.android.hashseparator.QueryUtils.makeHttpRequest(url, context); <BUGE> } catch (java.io.IOException e) { com.example.android.hashseparator.QueryUtils.exception = "Problem making the HTTP request."; } return response; } 
@java.lang.Override public void onFocusChange(android.view.View v, boolean hasFocus) { if (!hasFocus) { if (((mCardNumber) != null) && ((mCardNumber.length()) > 12)) { <BUGS> mCardNumberView.setText(getFormattedCardNumber(addSpaceToCardNumber())); <BUGE> if ((mType) == (com.vinaygaba.creditcardview.CardType.AUTO)) { mCardTypeView.setBackgroundResource(getLogo()); } <BUGS> <BUGE> } } } 
public void MedienBrowser(javafx.event.ActionEvent event) { javafx.stage.FileChooser fileChooser = new javafx.stage.FileChooser(); fileChooser.setTitle("Open Media File"); java.io.File file = fileChooser.showOpenDialog(this.getScene().getWindow()); <BUGS> tbxMedienBrowser.setUserData(file); tbxMedienBrowser.setText(file.getAbsolutePath()); <BUGE> } 
@java.lang.Override public boolean onCreateOptionsMenu(android.view.Menu menu) { getMenuInflater().inflate(R.menu.menu, menu); android.support.v7.widget.SearchView searchView = ((android.support.v7.widget.SearchView) (android.support.v4.view.MenuItemCompat.getActionView(menu.findItem(R.id.action_search)))); <BUGS> searchView.setQueryHint(getResources().getString(R.string.search_hint)); <BUGE> android.app.SearchManager searchManager = ((android.app.SearchManager) (getSystemService(com.example.karthik.listview.SEARCH_SERVICE))); searchView.setSearchableInfo(searchManager.getSearchableInfo(getComponentName())); searchView.setOnQueryTextListener(this); return true; } 
public boolean hasAvailableNeighbours() { <BUGS> if (!((((top) == null) && ((bottom) == null)) && (((right) == null) & ((left) == null)))) { <BUGE> return false; }else { return true; } } 
@java.lang.Override public void onConnected(@android.support.annotation.Nullable android.os.Bundle bundle) { mLocationRequest = com.google.android.gms.location.LocationRequest.create(); mLocationRequest.setPriority(LocationRequest.PRIORITY_HIGH_ACCURACY); mLocationRequest.setInterval(2000); <BUGS> if (((Build.VERSION.SDK_INT) >= 23) && ((android.support.v4.content.ContextCompat.checkSelfPermission(getApplicationContext(), android.Manifest.permission.ACCESS_FINE_LOCATION)) == (android.content.pm.PackageManager.PERMISSION_GRANTED))) { <BUGE> LocationServices.FusedLocationApi.requestLocationUpdates(mGoogleApiClient, mLocationRequest, this); } } 
public void onClick(android.content.DialogInterface dialog, int id) { int newActionId = com.ha81dn.webausleser.backend.DatabaseHandler.getNewId(db, "actions"); <BUGS> copyAction(db, a.getId(), newActionId, sortNr, com.ha81dn.webausleser.backend.DatabaseHandler.getUniqueCopiedActionName(activity, db, input.getText().toString().trim(), com.ha81dn.webausleser.MainActivity.sourceId), idShow, true); <BUGE> com.ha81dn.webausleser.MainActivity.appActionMode.finish(); db.close(); com.ha81dn.webausleser.MainActivity.displaySection(activity, "SOURCE", idShow, null, newActionId); } 
public void testRetrieveTodoByDate() { java.util.ArrayList<object.Todo> expectedList = new java.util.ArrayList<object.Todo>(); expectedList.add(todo3); expectedList.add(todo7); expectedList.add(todo5); java.util.ArrayList<object.Todo> actualList = storagetest.FileHandlerTest.fh.retrieveTodoByDate("20 oct 2000"); <BUGS> org.junit.Assert.assertEquals("Test retrieval of todo by date", true, storagetest.PreparationCleanUp.compareTodoArrayList(expectedList, actualList)); <BUGE> } 
@org.junit.jupiter.api.Test @org.junit.jupiter.api.DisplayName(value = "Standard headers") void standardHeaders() { java.lang.String headers = new jbs.response.HeadersBuilder(this.requestData, 200).toString(); <BUGS> org.junit.jupiter.api.Assertions.assertEquals((((((((("HTTP/1.1 200 \n" + "Date: ") + (this.getDate())) + "\n") + "X-XSS-Protection: 1; mode=block\n") + "X-Frame-Options: DENY\n") + "Content-Type: text/plain\n") + "\n") + ""), headers); <BUGE> } 
@java.lang.Override public void mouseDragged(int oldx, int oldy, int newx, int newy) { if (!(active)) return ;  consumeEvent(); <BUGS> if ((state) == (itdelatrisu.opsu.user.UserSelectOverlay.State.CREATE_USER)) return ;  <BUGE> int diff = newy - oldy; if (diff != 0) scrolling.dragged((-diff));  } 
public int compareTo(java.lang.Object t) { <BUGS> if ((votes) > (((Translator) (t)).votes)) <BUGE> return 1; else <BUGS> if ((votes) < (((Translator) (t)).votes)) <BUGE> return -1; else return 0;   } 
@javafx.fxml.FXML private void apriCorpiOrb() { dati.spazio.CorpoCeleste corpoSel = tabCor.getSelectionModel().getSelectedItem(); if (corpoSel != null) { java.util.List<? extends dati.spazio.CorpoCeleste> corpi = corpoSel.getListaCorpiOrbitanti(); <BUGS> for (dati.spazio.CorpoCeleste bril : corpi) java.lang.System.out.println(((bril.getNome()) + "\n"));  <BUGE> java.lang.String nomeCorpoFuoco = tabCor.getSelectionModel().getSelectedItem().getNome(); simulazionesistemaplanetario.gui.tabelle.TabellaController.launchTabellaController(nomeCorpoFuoco, corpi); } } 
@java.lang.Override protected void controlUpdate(float tpf) { <BUGS> if (!(com.nx.util.jme3.base.SpatialUtil.hasControl(spatial, skeletonControl))) { <BUGE> cachedControls.remove(skeletonControl); removeFromDebug(originalSpatial, skeletonDebugger); return ; } if (!(skeletonDebugger.getLocalTransform().equals(originalSpatial.getWorldTransform()))) { skeletonDebugger.setLocalTransform(originalSpatial.getWorldTransform()); } } 
@java.lang.Override public void kill() { <BUGS> if ((key) != (-1)) { java.util.ArrayList<com.watabou.pixeldungeon.effects.SystemFloatingText> stack = com.watabou.pixeldungeon.effects.SystemFloatingText.stacks.get(key); <BUGE> stack.remove(this); if (stack.isEmpty()) { com.watabou.pixeldungeon.effects.SystemFloatingText.stacks.remove(key); } <BUGS> key = -1; <BUGE> } super.kill(); } 
public T dequeue() { if (isEmpty()) return null;  T x = queueArray[front]; <BUGS> queueArray[front] = null; (front)++; <BUGE> if ((front) == (n)) front = 0;  return x; } 
private void checkBounds() { if ((position.x) < 0) position.x = 0;  if ((position.x) > 1000) <BUGS> position.x = 0; <BUGE>  if ((position.y) < 10) position.y = 10;  if ((position.z) > 0) position.z = 0;  if ((position.z) < (-1000)) position.z = -1000;  } 
public com.youcruit.billogram.objects.response.billogram.BillogramResponse commandCredit(java.lang.String billogramId, java.math.BigDecimal amount, com.youcruit.billogram.client.BillogramClient.CreditMode creditMode) throws java.io.IOException { java.util.Map<java.lang.String, java.lang.Object> creditRequest = new java.util.HashMap<>(); creditRequest.put("mode", creditMode); creditRequest.put("amount", amount); <BUGS> final java.net.URI uri = httpClient.pathToUri(("billogram" + billogramId), "command", "credit"); <BUGE> return httpClient.sync(uri, creditRequest, com.youcruit.billogram.client.http.HttpClient.Method.POST, com.youcruit.billogram.objects.response.billogram.BillogramResponse.class); } 
public bufmgr.PageId newPage(bufmgr.Page firstpage, int howmany) throws chainexception.ChainException { bufmgr.PageId id = new bufmgr.PageId(); <BUGS> if (isFull()) return null;  <BUGE> try { Minibase.DiskManager.allocate_page(id, howmany); } catch (java.lang.Exception e) { throw new bufmgr.DiskMgrException(e, (("Unable to allocate " + howmany) + " pages.")); } pinPage(id, firstpage, false); return id; } 
public boolean regConsumer(com.seveniu.consumer.Consumer consumer) { if (this.consumerMap.containsKey(consumer.getName())) { logger.warn("consumer '{}' has reg", consumer.getName()); return false; }else { <BUGS> this.consumerMap.put(consumer.getUuid(), consumer); <BUGE> logger.info("reg consumer : {}", consumer); consumer.start(); return true; } } 
public void modulo(pl.kryptografia.rabin.bignum.BigNum modulus) { while (absGreaterOrEqualTo(modulus)) { pl.kryptografia.rabin.bignum.BigNum x = new pl.kryptografia.rabin.bignum.BigNum(modulus); int shift = findMaximumLeftShift(x); x.shiftLeft(shift); absSubtract(x); } if ((sign) == (-1)) { <BUGS> <BUGE> sign = 1; <BUGS> add(modulus); <BUGE> } } 
public cn.com.hellowood.rocketmq.util.SendResult sendOneWayMessage(cn.com.hellowood.rocketmq.util.Message message) { cn.com.hellowood.rocketmq.util.ProducerHelper.logger.info("MQ start send ONE_WAY message "); long startTimestamp = java.lang.System.currentTimeMillis(); <BUGS> message.setTopic(java.lang.String.valueOf(configProperties.getTopic())); <BUGE> producer.sendOneway(message); long costTime = (java.lang.System.currentTimeMillis()) - startTimestamp; cn.com.hellowood.rocketmq.util.ProducerHelper.logger.info((("MQ completed send ONE_WAY message in " + costTime) + " ms")); return null; } 
@java.lang.Override protected void listItemClicked(int position) { <BUGS> edu.mit.mitmobile2.shuttles.model.MITShuttleStopWrapper stop = adapter.getItem((position - 1)); android.content.Intent intent = new android.content.Intent(getActivity(), edu.mit.mitmobile2.shuttles.activities.ShuttleStopActivity.class); intent.putExtra(Constants.ROUTE_ID_KEY, routeId); intent.putExtra(Constants.STOP_ID_KEY, stop.getId()); startActivity(intent); <BUGE> } 
@java.lang.Override public boolean onMarkerClick(com.google.android.gms.maps.model.Marker marker) { if ((LocationUtil.mMarkers.get(marker)) != null) { mMarkerId = LocationUtil.mMarkers.get(marker); android.util.Log.i("Position of arraylist", ((mMarkerId) + "")); <BUGS> android.widget.Toast.makeText(this, ("ID" + (mMarkerId)), Toast.LENGTH_SHORT).show(); <BUGE> } return false; } 
<BUGS> private void addText(java.awt.Graphics2D g2d, java.lang.String text, int x, int y, java.awt.Color color) { g2d.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 20)); <BUGE> g2d.setColor(color); g2d.drawString(text, (x * (se.liu.ida.henan076.tddd78.tetris.TetrisComponent.BLOCK_SIZE)), (y * (se.liu.ida.henan076.tddd78.tetris.TetrisComponent.BLOCK_SIZE))); } 
private java.lang.String cleanupDedicatoryPrayer(java.lang.String originalDed) { <BUGS> java.lang.String removeCommaEscapes = originalDed.replaceAll("\\\\\"", "\""); <BUGE> try { <BUGS> <BUGE> return org.apache.commons.lang3.StringEscapeUtils.unescapeJava(removeCommaEscapes); } catch (java.lang.Exception ex) { assert false; ex.printStackTrace(); } return ""; } 
private org.embulk.input.kafka.data.Record getRecord(byte[] message) throws org.embulk.input.kafka.exception.DataTypeNotFoundException { org.embulk.input.kafka.data.Record record = null; switch (format) { case Csv : record = org.embulk.input.kafka.data.DataConverter.convert(message, ",", enclosedChar); break; case Tsv : record = org.embulk.input.kafka.data.DataConverter.convert(message, "\t", enclosedChar); break; case Ltsv : <BUGS> record = org.embulk.input.kafka.data.DataConverter.convertFromLtsv(message); <BUGE> break; case Json : record = org.embulk.input.kafka.data.DataConverter.convertFromJson(message); break; case MessagePack : break; } return record; } 
@java.lang.Override public void delete(java.lang.String id) { for (int i = 0; i < (arraySize); i++) { if ((simpleArray.get(i).getId().equals(id)) && ((simpleArray.get(i)) != null)) { this.simpleArray.delete(java.lang.Integer.parseInt(simpleArray.get(i).getId())); <BUGS> <BUGE> } } } 
@auth.AuthenticationEndpoint.Secured(value = config.Permission.USER_READ) @module.POST @module.Path(value = config.Routes.MODULE_USER_GETUSER) @module.Produces(value = javax.ws.rs.core.MediaType.APPLICATION_JSON) <BUGS> public dto.User getUser(@module.PathParam(value = config.Routes.MODULE_USER_GETUSER) <BUGE> int id) { <BUGS> jdbclib.IConnector db = null; <BUGE> dto.User user = null; try { db = new jdbclib.DBConnector(new jdbclib.DatabaseConnection()); dao.UserDAO userDAO = new dao.UserDAO(db); user = userDAO.getFullUser(id); } catch (java.lang.Exception e) { java.lang.System.out.println(("Error: " + (e.getMessage()))); javax.ws.rs.core.Response.temporaryRedirect(java.net.URI.create("/auth/user/error")); } return user; } 
private java.awt.image.BufferedImage resizeImage(java.awt.image.BufferedImage originalImage, com.images3.data.impl.ResizingConfig resizingConfig) { java.awt.image.BufferedImage resizedImage = null; if (resizingConfig.isKeepProportions()) { <BUGS> resizedImage = org.imgscalr.Scalr.resize(originalImage, Scalr.Method.SPEED, Scalr.Mode.AUTOMATIC, resizingConfig.getWidth(), resizingConfig.getHeight(), Scalr.OP_ANTIALIAS); <BUGE> }else { <BUGS> resizedImage = org.imgscalr.Scalr.resize(originalImage, Scalr.Method.SPEED, Scalr.Mode.FIT_EXACT, resizingConfig.getWidth(), resizingConfig.getHeight(), Scalr.OP_ANTIALIAS); <BUGE> } return resizedImage; } 
public void save() { int bugTrackerCount = bugTrackers.length; for (int i = 0; i < bugTrackerCount; i++) { if (bugTrackers[i].equals("github")) { githubIssue.raise(this); }else if (bugTrackers[i].equals("bugzilla")) { <BUGS> }else if (bugTrackers[i].equals("jira")) { }else if (bugTrackers[i].equals("atlassan")) { }   <BUGE>  } } 
@java.lang.Override public void onStart() { super.onStart(); menuButtons.collapse(); android.content.SharedPreferences settings = getActivity().getSharedPreferences(getString(R.string.PREFERENCE_FILE_KEY), 0); <BUGS> isToSum = settings.getBoolean("isToSum", true); <BUGE> updateFieldActivity(); } 
@java.lang.Override protected void onFinishInflate() { super.onFinishInflate(); <BUGS> mFrame = new android.widget.FrameLayout(mContext); <BUGE> mFrame.setLayoutParams(new android.view.ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT)); for (int i = 0; i < (getChildCount()); ++i) { android.view.View child = getChildAt(i); removeView(child); mFrame.addView(child); } addView(mFrame); } 
@java.lang.Override protected void onSaveInstanceState(android.os.Bundle outState) { outState.putShort(slapshotapp.game.tictactoe.SetUpGame.GAME_BOARD_DIMENSION_KEY, _GameBoardDimensions); outState.putCharSequence(slapshotapp.game.tictactoe.SetUpGame.PLAYER_ONE_NAME_KEY, _PlayerOne.GetName()); outState.putCharSequence(slapshotapp.game.tictactoe.SetUpGame.PLAYER_ONE_ICON_KEY, _PlayerOne.GetSymbolValue()); outState.putCharSequence(slapshotapp.game.tictactoe.SetUpGame.PLAYER_TWO_NAME_KEY, _PlayerTwo.GetName()); outState.putCharSequence(slapshotapp.game.tictactoe.SetUpGame.PLAYER_TWO_ICON_KEY, _PlayerTwo.GetSymbolValue()); <BUGS> <BUGE> } 
@java.lang.Override public void onErrorResponse(com.android.volley.VolleyError error) { java.util.HashMap<java.lang.String, java.lang.String> errorProperties = new java.util.HashMap<>(); errorProperties.put(org.wordpress.android.ui.accounts.login.MagicLinkRequestFragment.ERROR_KEY, error.getMessage()); org.wordpress.android.analytics.AnalyticsTracker.track(AnalyticsTracker.Stat.LOGIN_MAGIC_LINK_FAILED, errorProperties); <BUGS> android.support.design.widget.Snackbar.make(getView(), R.string.magic_link_unavailable_error_message, Snackbar.LENGTH_SHORT); <BUGE> if ((mListener) != null) { mListener.onEnterPasswordRequested(); } } 
public static int readInt(java.util.Scanner scanner, java.lang.String message) { java.lang.Integer res = null; do { java.lang.System.out.print((message + " ")); try { res = scanner.nextInt(); scanner.nextLine(); } catch (java.util.InputMismatchException e) { java.lang.System.out.println("Invalid value"); <BUGS> <BUGE> } } while (res == null ); return res; } 
public static int updateWhitelist() { java.util.HashMap<java.lang.String, java.util.Set<java.lang.String>> cachedWhitelist = net.quetzi.whitelister.Whitelister.whitelist; int successCount = 0; <BUGS> Whitelister.whitelist.clear(); <BUGE> for (java.lang.String url : net.quetzi.whitelister.Whitelister.urlList) { if (net.quetzi.whitelister.util.WhitelistFetcher.getRemoteWhitelist(url)) { successCount++; }else { Whitelister.log.warn((("Failed to fetch whitelist from " + url) + " using cached list for this source")); Whitelister.whitelist.put(url, cachedWhitelist.get(url)); } } return successCount; } 
public int compare(java.lang.Object o1, java.lang.Object o2) { com.sun.messaging.jmq.jmsserver.multibroker.raptor.TakingoverEntry.XidEntry x1 = ((com.sun.messaging.jmq.jmsserver.multibroker.raptor.TakingoverEntry.XidEntry) (o1)); com.sun.messaging.jmq.jmsserver.multibroker.raptor.TakingoverEntry.XidEntry x2 = ((com.sun.messaging.jmq.jmsserver.multibroker.raptor.TakingoverEntry.XidEntry) (o2)); <BUGS> return java.lang.Long.valueOf(x1.brokerSession.getTimestamp()).compareTo(java.lang.Long.valueOf(x2.brokerSession.getTimestamp())); <BUGE> } 
public static org.openqa.selenium.WebDriver remoteDriver() { org.openqa.selenium.remote.DesiredCapabilities caps = org.openqa.selenium.remote.DesiredCapabilities.chrome(); caps.setCapability("platform", "Windows 10"); caps.setCapability("version", "57.0"); caps.setCapability("screenResolution", "1280x1024"); <BUGS> org.openqa.selenium.remote.RemoteWebDriver driver = new org.openqa.selenium.remote.RemoteWebDriver(com.epam.jdi.uitests.web.selenium.driver.SauceLabRunner.getSauceUrl(), null); <BUGE> driver.executeScript((("sauce:job-name= Autotest from travis job #" + (java.lang.System.getenv("TRAVIS_JOB_NUMBER"))) + "\"")); return driver; } 
public Key delMax() { Key max = pq[1]; pq[1] = pq[N]; pq[N] = null; <BUGS> <BUGE> sink(); <BUGS> utils.Utils.resizeArray(pq, (--(N))); <BUGE> return max; } 
public void modifyautosmssms(int id, java.lang.String number, java.lang.String message) { android.content.ContentValues values = new android.content.ContentValues(); values.put(com.abezukor.abezukor.autosms.DBHandler.COLUMN_NUMBER, number); values.put(com.abezukor.abezukor.autosms.DBHandler.COLUMN_MESSAGE, message); android.database.sqlite.SQLiteDatabase db = getWritableDatabase(); <BUGS> db.update(com.abezukor.abezukor.autosms.DBHandler.TABLE_AUTOSMSTABLE, values, ("_id=" + (id - 1)), null); <BUGE> db.close(); } 
private java.lang.String calculateStatus(org.traccar.model.Position position) { <BUGS> if ((position.getAttributes().containsKey(Event.KEY_ALARM)) && ((java.lang.Boolean) (position.getAttributes().get(Event.KEY_ALARM)))) { <BUGE> return "0xF841"; }else if ((position.getSpeed()) < 1.0) { return "0xF020"; }else { return "0xF11C"; }  } 
public java.util.Iterator<E> minimumSpanningTree() { java.util.Set<E> set = new java.util.HashSet<E>(); <BUGS> for (E e = pq.poll(); !(pg.isEmpty()); e = pq.poll()) { <BUGE> set.add(e); <BUGS> if (checkForCycle(e, e.getSource(), e.getDest())) { <BUGE> set.remove(e); } } return set.iterator(); } 
public void Promote() { chessgame.Queen Promotion; if ((player) == 1) { <BUGS> Promotion = new chessgame.Queen("BlackPromotedPawn"); Promotion.setIcon(BlackQueenImg); <BUGE> current.removePiece(); current.setPiece(Promotion); }else { <BUGS> Promotion = new chessgame.Queen("WhitePromotedPawn"); Promotion.setIcon(WhiteQueenImg); <BUGE> current.removePiece(); current.setPiece(Promotion); } current.repaint(); current.validate(); } 
protected void wasShoot() { <BUGS> updateAim(); <BUGE> wasJustShoot = true; armLengt -= BACK_FIRE; explostions.add(new float[]{ aimAtX , aimAtY , (se.BaseUlterior.Aim.AimBulletWeapon.SMOKE_LENGTH) / 2 }); rays.add(new float[]{ gunFireStartAtX , gunFireStartAtY , aimAtX , aimAtY , se.BaseUlterior.Aim.AimBulletWeapon.SMOKE_LENGTH }); } 
@java.lang.Override public com.drmattyg.nanokaraoke.TrackEvent next() { com.drmattyg.nanokaraoke.TrackEvent evt = com.drmattyg.nanokaraoke.TrackEvent.getInstance(tc, iteratorOffset); if (evt.hasStatusbyte()) { setLastStatusByte(evt.getStatusByte()); }else { evt.setStatusByte(((getLastStatusByte()) & 255)); } iteratorOffset += evt.getTotalLength(); <BUGS> for (com.drmattyg.nanokaraoke.MidiEventHandler evtHandler : getParent().midiEventHandlers) { evtHandler.handleEvent(evt); } <BUGE> return evt; } 
public static com.oasisfeng.android.ui.Dialogs.Builder buildAlert(final android.content.Context context, final java.lang.CharSequence title, final java.lang.CharSequence message) { final com.oasisfeng.android.ui.Dialogs.Builder builder = new com.oasisfeng.android.ui.Dialogs.Builder(context); <BUGS> builder.setCancelable(false); <BUGE> if (title != null) builder.setTitle(title);  if (message != null) builder.setMessage(message);  return builder; } 
private static int whereToGo(int situation, boolean findUpper) { switch (situation) { case 1 : if (findUpper) return 0; else <BUGS> return 2; <BUGE>  case 2 : if (findUpper) <BUGS> return 1; <BUGE> else return 0;  case 3 : if (findUpper) <BUGS> <BUGE> return 1; else return 2;  <BUGS> default : if (findUpper) return 2; else return 1;  <BUGE> } } 
@android.support.annotation.Nullable public static java.io.File createImageFile(final long orderNumber) { <BUGS> final java.lang.String imageFileName = (((com.bionic.kvt.serviceapp.GlobalConstants.LMRA_PHOTO_FILE_NAME) + orderNumber) + "_") + (com.bionic.kvt.serviceapp.utils.Utils.imageTimeStamp.format(new java.util.Date())); <BUGE> try { return java.io.File.createTempFile(imageFileName, ".jpg", com.bionic.kvt.serviceapp.utils.Utils.getOrderDir(orderNumber)); } catch (java.io.IOException e) { com.bionic.kvt.serviceapp.Session.addToSessionLog(("Error on creating LMRA file: " + (e.toString()))); return null; } } 
private void connect(java.lang.String server, java.lang.Integer port) throws java.io.IOException { try { socket = new java.net.Socket(server, port); <BUGS> socket.setKeepAlive(true); <BUGE> in = new java.io.BufferedReader(new java.io.InputStreamReader(socket.getInputStream(), "UTF-8")); out = new java.io.OutputStreamWriter(socket.getOutputStream(), "UTF-8"); } catch (java.io.IOException e) { reconnect(); } } 
public synchronized void syncNewDriver(java.lang.String name, java.lang.String street, java.lang.String city, java.lang.String state, java.lang.String zip) { <BUGS> java.lang.String newID = "-400"; <BUGE> com.example.android.rowanparkingpass.Networking.SendInfo.SendInfoDriver sendInfoDriver = new com.example.android.rowanparkingpass.Networking.SendInfo.SendInfoDriver(); org.json.JSONObject json; int oldID = db.addDriver(name, street, city, arrayOfStates[java.lang.Integer.parseInt(state)].valueOf(arrayOfStates[java.lang.Integer.parseInt(state)].name()).toString(), zip); sendInfoDriver.addDriver(oldID, name, street, city, state, zip); return ; } 
protected void onActivityResult(int requestCode, int resultCode, android.content.Intent data) { if (requestCode == (CAMERA_PIC_REQUEST)) { <BUGS> android.graphics.Bitmap image = ((android.graphics.Bitmap) (data.getExtras().get("data"))); android.widget.ImageView imageview = ((android.widget.ImageView) (findViewById(R.id.imglogo))); imageview.setImageBitmap(image); new com.example.audi.uaspenir.Main.PostTask().execute(imageToString(image), "test"); buatsnackbar("Uploading image . . ."); <BUGE> } } 
public void increaseWorkSpaceLevel(de.dfki.vsm.editor.Node node) { mIgnoreMouseInput = true; clearCurrentWorkspace(); de.dfki.vsm.model.sceneflow.SuperNode superNode = ((de.dfki.vsm.model.sceneflow.SuperNode) (node.getDataNode())); getSceneFlowManager().addActiveSuperNode(superNode); mSceneFlowEditor.addPathComponent(superNode); <BUGS> mGridManager.update(); <BUGE> showCurrentWorkSpace(); } 
public static void registerSingleThreadVirtualTarget(java.lang.Thread thread, java.lang.String targetName) { pj.pr.target.VirtualTarget virtualTarget = pj.PjRuntime.targetExecutorMap.get(targetName); if (null == virtualTarget) { virtualTarget = new pj.pr.target.SingleThreadVirtualTarget(targetName, thread); pj.PjRuntime.targetExecutorMap.put(targetName, virtualTarget); }else { <BUGS> throw new java.lang.RuntimeException((("Virtual target " + targetName) + " has been registered before")); <BUGE> } } 
public static com.badlogic.gdx.scenes.scene2d.ui.CheckBox addCheckBox(java.lang.String labelText, com.badlogic.gdx.scenes.scene2d.ui.Table parent, com.badlogic.gdx.scenes.scene2d.ui.Skin skin) { com.badlogic.gdx.scenes.scene2d.ui.CheckBox info = new com.badlogic.gdx.scenes.scene2d.ui.CheckBox(labelText, skin); <BUGS> parent.add(info).right().row().fillX().expandX(); <BUGE> return info; } 
<BUGS> protected static java.lang.String escapeAndConvertToSQLWildcards(java.lang.String value, boolean alwaysWildcard) { <BUGE> java.lang.String ret = value.replaceAll("\\\\", "\\\\\\\\").replaceAll("_", "\\\\_").replaceAll("%", "\\\\%").replaceAll("\\*", "%").replaceAll("\\?", "_"); return alwaysWildcard ? ("%" + ret) + "%" : ret; } 
private com.github.com.ricardobaumann.jankenpon.Player.MOVE getMove(int index) { com.github.com.ricardobaumann.jankenpon.Player.MOVE[] moves = com.github.com.ricardobaumann.jankenpon.Player.MOVE.values(); int movesAmount = moves.length; <BUGS> int moveIndex = (index > movesAmount) ? index - movesAmount : index; <BUGE> return moves[(moveIndex - 1)]; } 
public void nextSlide() { (slide)++; <BUGS> if ((slide) == 1) { <BUGE> Objectives(); }else <BUGS> if ((slide) == 2) { <BUGE> Turn(); }else <BUGS> if ((slide) == 3) { <BUGE> unitTable(); }else <BUGS> if ((slide) == 4) { <BUGE> shortcuts(); }    } 
@java.lang.Override public void run() { try { javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName()); ui.CalculatorPanel panel = new ui.CalculatorPanel(); panel.setPreferredSize(new java.awt.Dimension(450, 300)); javax.swing.JFrame frame = new javax.swing.JFrame(message.Message.TITLE); frame.add(panel); <BUGS> <BUGE> frame.setLocationRelativeTo(null); <BUGS> frame.pack(); <BUGE> frame.setVisible(true); frame.setResizable(false); } catch (java.lang.Exception ex) { ex.printStackTrace(); } } 
@java.lang.Override @java.lang.SuppressWarnings(value = "unchecked") public java.util.List<org.n52.series.api.v1.db.da.beans.ProcedureEntity> getAllInstances(org.n52.series.api.v1.db.da.DbQuery parameters) throws org.n52.series.api.v1.db.da.DataAccessException { <BUGS> org.hibernate.Criteria criteria = getDefaultCriteria("procedure").add(org.hibernate.criterion.Restrictions.eq(org.n52.series.api.v1.db.da.dao.ProcedureDao.COLUMN_REFERENCE, java.lang.Boolean.FALSE)); <BUGE> if (hasTranslation(parameters, org.n52.series.api.v1.db.da.beans.I18nProcedureEntity.class)) { parameters.addLocaleTo(criteria, org.n52.series.api.v1.db.da.beans.I18nProcedureEntity.class); } criteria = parameters.addDetachedFilters("procedure", criteria); parameters.addPagingTo(criteria); return ((java.util.List<org.n52.series.api.v1.db.da.beans.ProcedureEntity>) (criteria.list())); } 
public static java.lang.String formatQueryString(java.lang.String url, java.lang.String field, java.lang.Enum value) { if (null == value) { return url; } <BUGS> return url.contains("?") ? (("&" + field) + "=") + value : (("?" + field) + "=") + value; <BUGE> } 
@java.lang.Override public void run() { while (true) { while (!(isSearching())) { try { java.lang.Thread.sleep(50); } catch (java.lang.InterruptedException ire) { } if (mExit) return ;  } mSearcherDone = false; mSearcher.go(); <BUGS> <BUGE> de.htwsaar.chessbot.engine.search.SearchWorker.infoHash(mSearcher.getHashTable().usage()); <BUGS> de.htwsaar.chessbot.engine.search.SearchWorker.infoBestmove(mSearcher.getBestMove(), mSearcher.getPonderMove()); mSearcherDone = true; <BUGE> stopSearching(); } } 
void onScanFilterEnableDisabled(int action, int status, int clientIf) { <BUGS> android.util.Log.d(com.android.bluetooth.gatt.GattService.TAG, "called"); <BUGE> if (com.android.bluetooth.gatt.GattService.DBG) { android.util.Log.d(com.android.bluetooth.gatt.GattService.TAG, ((((("onScanFilterEnableDisabled() - clientIf=" + clientIf) + ", status=") + status) + ", action=") + action)); } if (status != 0) { } mStateMachine.callbackDone(); } 
@java.lang.Override public void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_sub_category_layout); mMainCategoryItem = ((com.accessbox.category.MainCategoryItem) (getIntent().getSerializableExtra("Category"))); position = getIntent().getIntExtra("position", 0); <BUGS> setCoverPhoto(); <BUGE> setupFab(); setUpAdapter(); } 
public synchronized void getService() { java.util.Random rand = new java.util.Random(); try { java.lang.Thread.sleep((50 + (rand.nextInt(500)))); } catch (java.lang.InterruptedException e) { return ; } <BUGS> if (_numbers.isEmpty()) _numberOnDisplay = -1; else { java.lang.System.out.print(("Display:" + (_numbers.getFirst()))); java.lang.System.out.println(); _numberOnDisplay = _numbers.poll(); <BUGE> } } 
public static boolean pressed(java.lang.String key) { <BUGS> if (key == null) <BUGE> return false; else if (apcs.Window.keyMap.containsKey(key)) return apcs.Window.getInstanceFromThread().isVirtualKeyPressed(apcs.Window.keyMap.get(key)); else if ((key.length()) > 0) return apcs.Window.key.pressed(key.charAt(0));    return false; } 
public boolean addEdge(boolean isAnySymbol, java.lang.String transition, int sourceVertex, int sinkVertex) { <BUGS> if ((sourceVertex <= (graphStructure.size())) && (sinkVertex <= (graphStructure.size()))) { <BUGE> graphStructure.get(sourceVertex).getValue().add(new com.sonechka.graph.Edge(isAnySymbol, transition, sourceVertex, sinkVertex)); return true; } return false; } 
public com.squareup.okhttp.HttpUrl.Builder newBuilder() { com.squareup.okhttp.HttpUrl.Builder result = new com.squareup.okhttp.HttpUrl.Builder(); result.scheme = scheme; result.encodedUsername = encodedUsername(); result.encodedPassword = encodedPassword(); result.host = host; <BUGS> if ((port) == (com.squareup.okhttp.HttpUrl.defaultPort(scheme))) { result.port = -1; }else { result.port = port; } <BUGE> result.encodedPathSegments.clear(); result.encodedPathSegments.addAll(encodedPathSegments()); result.encodedQuery(encodedQuery()); result.encodedFragment = encodedFragment(); return result; } 
@org.testng.annotations.Test(description = "Test the client connection establishment and broadcast.") public void testClientConnected() { java.lang.String expectedText = "new client connected"; <BUGS> org.wso2.carbon.messaging.CarbonMessage client1Message = org.ballerinalang.testutils.MessageUtils.generateWebSocketOnOpenMessage(session1, uri, new java.util.HashMap<>()); org.wso2.carbon.messaging.CarbonMessage client2Message = org.ballerinalang.testutils.MessageUtils.generateWebSocketOnOpenMessage(session2, uri, new java.util.HashMap<>()); <BUGE> org.ballerinalang.testutils.Services.invoke(client1Message); org.ballerinalang.testutils.Services.invoke(client2Message); org.testng.Assert.assertEquals(session1.getTextReceived(), expectedText); } 
private void UpdatePlayerTable() { playerTable.clearChildren(); playerTable.add(new io.github.teamfractal.actors.Label("List of Players for the Game", this.game.skin)); playerTable.row(); for (int i = 0; i < (newPlayerNames.size()); i++) { <BUGS> java.lang.System.out.print(((newPlayerNames.get(i)) + "\n")); <BUGE> playerTable.add(new io.github.teamfractal.actors.Label(newPlayerNames.get(i), this.game.skin)); playerTable.row(); } } 
public void setConsumptionValue(int value, com.freedomotic.model.ds.Config params, boolean fireCommand) { if (fireCommand) { com.freedomotic.things.impl.ElectricDevice.LOG.log(java.util.logging.Level.WARNING, ("Power consumption behavior of thing ''{0}''" + (" is supposed to be a read only value. " + "No command is executed!")), this.getPojo().getName()); <BUGS> }else { consumption.setValue(value); setChanged(true); <BUGE> } <BUGS> <BUGE> } 
@java.lang.Override public org.apache.jmeter.report.processor.ResultData customizeResult(org.apache.jmeter.report.processor.ResultData result) { org.apache.jmeter.report.processor.MapResultData customizedResult = new org.apache.jmeter.report.processor.MapResultData(); customizedResult.setResult(org.apache.jmeter.report.dashboard.HtmlTemplateExporter.DATA_CTX_RESULT, result); <BUGS> if (extraOptions != null) { <BUGE> org.apache.jmeter.report.processor.MapResultData extraResult = new org.apache.jmeter.report.processor.MapResultData(); for (java.util.Map.Entry<java.lang.String, java.lang.String> extraEntry : extraOptions.getProperties().entrySet()) { extraResult.setResult(extraEntry.getKey(), new org.apache.jmeter.report.processor.ValueResultData(extraEntry.getValue())); } customizedResult.setResult(org.apache.jmeter.report.dashboard.HtmlTemplateExporter.DATA_CTX_EXTRA_OPTIONS, extraResult); } return customizedResult; } 
@java.lang.Override protected void registerArgumentValueAnalyses(edu.psu.cse.siis.ic3.Ic3CommandLineArguments commandLineArguments) { edu.psu.cse.siis.coal.arguments.ArgumentValueManager.v().registerDefaultArgumentValueAnalyses(); <BUGS> edu.psu.cse.siis.coal.arguments.ArgumentValueManager.v().registerArgumentValueAnalysis("context", new edu.psu.cse.siis.ic3.ContextValueAnalysis(commandLineArguments.getAppName())); <BUGE> edu.psu.cse.siis.coal.arguments.ArgumentValueManager.v().registerArgumentValueAnalysis("classType", new edu.psu.cse.siis.ic3.ClassTypeValueAnalysis()); edu.psu.cse.siis.coal.arguments.ArgumentValueManager.v().registerArgumentValueAnalysis("authority", new edu.psu.cse.siis.ic3.AuthorityValueAnalysis()); edu.psu.cse.siis.coal.arguments.ArgumentValueManager.v().registerArgumentValueAnalysis("path", new edu.psu.cse.siis.ic3.PathValueAnalysis()); } 
private void writeToFile(java.lang.String stringToFile) throws tasknote.shared.TaskListIOException { try { byte[] bufferMemory = stringToFile.getBytes(); int totalNumberOfBytesToWrite = bufferMemory.length; int maxWriteLength = magicValuesRetriever.getBufferSize(); <BUGS> java.io.BufferedOutputStream fileWriter = new java.io.BufferedOutputStream(new java.io.FileOutputStream(tasknote.storage.FileManipulation.textFile, true)); <BUGE> loopWriteOneObjectToFile(bufferMemory, totalNumberOfBytesToWrite, maxWriteLength, fileWriter); fileWriter.close(); } catch (java.io.IOException ioe) { throw new tasknote.shared.TaskListIOException(); } } 
public void setDataTermino(java.lang.String dataTermino) { int dia = java.lang.Integer.parseInt(dataTermino.substring(0, 2)); <BUGS> int mes = java.lang.Integer.parseInt(dataTermino.substring(3, 5)); <BUGE> int ano = java.lang.Integer.parseInt(dataTermino.substring(6)); java.util.Calendar c = java.util.Calendar.getInstance(); c.set(ano, mes, dia); this.dataTermino = c; } 
<BUGS> private void writeImports(java.io.Writer writer, java.lang.String className, java.lang.Class baseClazz) throws java.io.IOException { <BUGE> final java.lang.String currentPackageName = ru.spbau.mit.SimpleImplementor.getPackageName(className); if (!(currentPackageName.isEmpty())) { writer.append("package ").append(currentPackageName).append(";").append(ru.spbau.mit.SimpleImplementor.NEW_LINE); } } 
@java.lang.Override public void removeChildGui(org.eclipse.e4.ui.model.application.ui.MUIElement child, org.eclipse.e4.ui.model.application.ui.MElementContainer<org.eclipse.e4.ui.model.application.ui.MUIElement> element) { org.eclipse.e4.ui.model.application.ui.advanced.MPerspectiveStack stack = ((org.eclipse.e4.ui.model.application.ui.advanced.MPerspectiveStack) ((org.eclipse.e4.ui.model.application.ui.MElementContainer<?>) (element))); org.eclipse.e4.ui.model.application.ui.advanced.MPerspective p = ((org.eclipse.e4.ui.model.application.ui.advanced.MPerspective) (child)); com.vaadin.ui.Button button = perspective_button.remove(p); <BUGS> perspectiveSwitcherPanel.removeComponent(button); button2ContextMenu.remove(button); <BUGE> refreshPerspectiveStackVisibility(stack); } 
<BUGS> public void updateStorageLocation(android.content.Context ctx, java.lang.String mount) { <BUGE> if ((mount == null) || (mount.equals(""))) { <BUGS> updateStorageLocation(ctx); return ; <BUGE> } java.lang.String currentLocation = this.getStorageLocation(ctx); if (currentLocation.startsWith(mount)) { <BUGS> return ; <BUGE> } java.lang.String location = mount + (org.digitalcampus.oppia.utils.storage.ExternalStorageStrategy.getInternalBasePath(ctx)); updateLocationPreference(ctx, location); <BUGS> <BUGE> } 
@java.lang.SuppressWarnings(value = "deprecation") @java.lang.Override protected void onResume() { super.onResume(); android.util.Log.i("GameActivity", "onResume"); if (!(mIsResumed)) { <BUGS> <BUGE> tryRunning(); if ((mSensorController) != null) { mSensorController.onResume(); } mGameSidebar.setBackgroundDrawable(new paulscode.android.mupen64plusae.DrawerDrawable(mGlobalPrefs.displayActionBarTransparency)); mMogaController.onResume(); <BUGS> mIsResumed = true; <BUGE> } } 
<BUGS> private boolean canDelete(org.eclipse.core.resources.IResource[] resources) { <BUGE> if (!((containsOnlyProjects(resources)) || (containsOnlyNonProjects(resources)))) { return false; } <BUGS> if ((resources.length) == 0) { <BUGE> return false; } <BUGS> for (int i = 0; i < (resources.length); i++) { org.eclipse.core.resources.IResource resource = resources[i]; <BUGE> if (resource.isPhantom()) { return false; } } return true; } 
private me.ihaq.pacman.menu.Game.FACING newDirection() { me.ihaq.pacman.utils.Intersection i = getCollidingIntersection(); int newMove = new java.util.Random().nextInt(((i.getDirections().size()) - 1)); <BUGS> <BUGE> return i.getDirections().get(newMove); } 
public static void main(java.lang.String[] args) { xaurora.ChromeServer chromeSvr = new xaurora.ChromeServer(6789); xaurora.WordServer wordSvr = new xaurora.WordServer(23333); java.lang.Thread chromeSvrThread = new java.lang.Thread(chromeSvr); java.lang.Thread wordSvrThread = new java.lang.Thread(wordSvr); chromeSvrThread.start(); wordSvrThread.start(); <BUGS> xaurora.ui.LoginUI.main(); <BUGE> } 
public void draw(java.awt.Graphics g, boolean showEdges, boolean showDelaunay, boolean showSites, boolean showData) { this.g = g; g2 = ((java.awt.Graphics2D) (g)); g2.setRenderingHint(java.awt.RenderingHints.KEY_ANTIALIASING, java.awt.RenderingHints.VALUE_ANTIALIAS_ON); checkMovement(); drawVoronoiArea(); drawBounding(); drawVoronoiCluster(); drawClusterNodes(showSites, showData); drawDelaunay(showDelaunay); <BUGS> drawLabels(); <BUGE> drawEdges(showEdges); drawTestEdge(); drawNodes(); <BUGS> drawCircleTest(); drawRadiusTest(); <BUGE> } 
@java.lang.Override protected boolean onBalloonTap(int index, com.google.android.maps.OverlayItem item) { <BUGS> android.content.Intent startAnnotation = new android.content.Intent(activity, nu.placebo.whatsup.activity.AnnotationActivity.class); android.os.Bundle bundle = new android.os.Bundle(); bundle.putInt("nid", ((nu.placebo.whatsup.model.ExtendedOverlayItem) (item)).getId()); startAnnotation.putExtras(bundle); activity.startActivity(startAnnotation); <BUGE> return true; } 
@java.lang.Override public <T extends com.vmware.xenon.common.ServiceDocument> com.vmware.xenon.common.ServiceDocumentQueryResult queryDocuments(java.lang.Class<T> documentType, com.google.common.collect.ImmutableMap<java.lang.String, java.lang.String> terms, com.google.common.base.Optional<java.lang.Integer> pageSize, boolean expandContent, boolean broadCast) throws com.vmware.photon.controller.common.xenon.exceptions.BadRequestException, com.vmware.photon.controller.common.xenon.exceptions.DocumentNotFoundException, java.lang.InterruptedException, java.util.concurrent.TimeoutException { <BUGS> return queryDocuments(documentType, terms, null, pageSize, expandContent, true); <BUGE> } 
@java.lang.Override public boolean onCreateOptionsMenu(android.view.Menu menu) { if (!(mNavigationDrawerFragment.isDrawerOpen())) { switch (internal_layout) { case LAYOUT_LIST : <BUGS> case LAYOUT_SEARCH : <BUGE> getMenuInflater().inflate(R.menu.main, menu); break; case LAYOUT_TRACKING : <BUGS> <BUGE> case LAYOUT_ABOUT : default : getMenuInflater().inflate(R.menu.main_reduced, menu); break; } restoreActionBar(); return true; } return super.onCreateOptionsMenu(menu); } 
public static java.lang.String getProductPathFile(java.lang.String productId, java.lang.String productName) { <BUGS> java.lang.String path = (((((com.tana.utilities.VariableUtility.getCurrentDir()) + (com.tana.utilities.VariableUtility.IMG_PATH_PRODUCTS)) + productId) + "_") + productName) + "/"; <BUGE> com.tana.utilities.VariableUtility.LOGGER.info(("Get product path file : " + path)); return path; } 
public void normatizarComponentes() { this.corredor.setTransform(this.corredor.getPosition(), ((this.normatizador.normatizar(getAnguloCorredor_Graus())) * (com.badlogic.gdx.math.MathUtils.degreesToRadians))); this.anguloCalculado = this.normatizador.normatizar(this.anguloCalculado); <BUGS> printagemDbg("COMPONENTES NORMATIZADOS"); <BUGE> } 
@java.lang.Override public void call(com.moac.android.refuge.activity.MainActivity.CirclesViewModel circlesViewModel) { mapFragment.clear(); if ((circlesViewModel.maxFlow) > 0) { com.moac.android.refuge.util.Visualizer.drawCountries(refugeeDataStore, mapFragment, circlesViewModel.countries, circlesViewModel.maxFlow); <BUGS> }else { android.widget.Toast.makeText(this, "No refugee flows found", Toast.LENGTH_LONG).show(); } <BUGE> } 
@java.lang.Override public java.lang.String image() { <BUGS> if ((top.has(Trait.strapped)) || (nightgames.global.Global.checkFlag(Flag.isFuta))) { <BUGE> return "doggy_ff_strapped.jpg"; } if (top.useFemalePronouns()) { if (bottom.hasDick()) { return "futa_futa_doggy.jpg"; } return "futa_doggy.jpg"; } return "doggy.jpg"; } 
@org.junit.Test public void testRead() throws org.pentaho.metastore.api.exceptions.MetaStoreException { java.lang.String testName = "testName"; org.pentaho.big.data.impl.cluster.NamedClusterImpl namedCluster = new org.pentaho.big.data.impl.cluster.NamedClusterImpl(); <BUGS> org.mockito.Mockito.when(metaStoreFactory.loadElement(testName)).thenReturn(namedCluster); org.junit.Assert.assertTrue((namedCluster == (namedClusterManager.read(testName, metaStore)))); <BUGE> } 
@java.lang.Override public void visitMethodInsn(int opcode, java.lang.String owner, java.lang.String name, java.lang.String desc) { if (((done) || (opcode != (org.objectweb.asm.Opcodes.INVOKESPECIAL))) || (!(org.caesarj.runtime.mixer.ConstructorMixer.isConstructor(name)))) { super.visitMethodInsn(opcode, owner, name, desc); return ; } done = true; <BUGS> super.visitMethodInsn(opcode, superClassName, name, this.desc); <BUGE> } 
@org.junit.Test public void createObservableSuccess() { rx.observers.TestSubscriber<io.techery.janet.model.TestAction> subscriber = new rx.observers.TestSubscriber<io.techery.janet.model.TestAction>(); io.techery.janet.model.TestAction action = new io.techery.janet.model.TestAction(); actionPipe.createObservableSuccess(action).subscribe(subscriber); <BUGS> subscriber.unsubscribe(); <BUGE> io.techery.janet.AssertUtil.assertSubscriberWithSingleValue(subscriber); subscriber.assertValue(action); } 
<BUGS> private boolean better(java.util.Set<de.htw.fb4.imi.master.ws15_16.foellmer_feldmann.ip.Vector2D> newPolygon, java.util.Set<de.htw.fb4.imi.master.ws15_16.foellmer_feldmann.ip.Vector2D> bestPolygon) { <BUGE> return ((bestPolygon.size()) == 0) || (((newPolygon.size()) < (bestPolygon.size())) && ((newPolygon.size()) != 0)); } 
private boolean projectHasItestsDependency() { java.util.List<org.apache.maven.model.Dependency> deps = project.getDependencies(); boolean containsItests = false; <BUGS> while ((deps.iterator().hasNext()) && (!containsItests)) { org.apache.maven.model.Dependency d = ((org.apache.maven.model.Dependency) (deps.iterator().next())); <BUGE> containsItests |= (d.getArtifactId().equals("itests")) && (d.getGroupId().equals("org.universAAL.support")); } return containsItests; } 
@java.lang.Override protected void onActivityResult(int requestCode, int resultCode, android.content.Intent data) { if (resultCode == (RESULT_OK)) { io.emqtt.emqandroidtoolkit.model.Connection connection = data.getParcelableExtra(ConnectionActivity.EXTRA_CONNECTION); if (null != connection) { switch (requestCode) { case io.emqtt.emqandroidtoolkit.ui.activity.MainActivity.REQUEST_ADD : mConnectionAdapter.notifyItemInserted(((mConnectionResults.size()) - 1)); break; case io.emqtt.emqandroidtoolkit.ui.activity.MainActivity.REQUEST_EDIT : mConnectionAdapter.notifyItemChanged(mPosition); break; <BUGS> <BUGE> } } } } 
private void init(com.jaspersoft.jasperserver.jaxrs.client.core.SessionStorage sessionStorage) { com.jaspersoft.jasperserver.jaxrs.client.core.RestClientConfiguration configuration = sessionStorage.getConfiguration(); contentType = ((configuration.getContentMimeType()) == (com.jaspersoft.jasperserver.jaxrs.client.core.enums.MimeType.JSON)) ? javax.ws.rs.core.MediaType.APPLICATION_JSON : javax.ws.rs.core.MediaType.APPLICATION_XML; acceptType = ((configuration.getAcceptMimeType()) == (com.jaspersoft.jasperserver.jaxrs.client.core.enums.MimeType.JSON)) ? javax.ws.rs.core.MediaType.APPLICATION_JSON : javax.ws.rs.core.MediaType.APPLICATION_XML; headers = new javax.ws.rs.core.MultivaluedHashMap<java.lang.String, java.lang.String>(); <BUGS> usersWebTarget = sessionStorage.getRootTarget().path("/rest_v2").register(com.jaspersoft.jasperserver.jaxrs.client.providers.CustomRepresentationTypeProvider.class).register(org.glassfish.jersey.media.multipart.internal.MultiPartWriter.class); <BUGE> } 
@java.lang.Override public void onClick(android.view.View v) { if ((duringDetail.getVisibility()) == (android.view.View.GONE)) { duringDetail.setVisibility(View.VISIBLE); <BUGS> beforeDetail.startAnimation(fadeIn); <BUGE> }else { duringDetail.setVisibility(View.GONE); <BUGS> beforeDetail.startAnimation(fadeOut); <BUGE> } } 
@java.lang.Override public void onClick(android.view.View view) { switch (view.getId()) { case R.id.btn_start : startLevel(0); break; case R.id.btn_level_easy : startLevel(1); break; <BUGS> case R.id.btn_level_difficult : <BUGE> startLevel(2); break; <BUGS> case R.id.btn_level_medium : <BUGE> startLevel(3); break; } } 
private void checkMinutesSinceLastAction() { <BUGS> if ((stateMachine.getCurrent().getPomosDone()) > 0) { int localMinutesSinceLastAction = getMinutesSinceLastAction(); if (localMinutesSinceLastAction > (minutesSinceLastAction)) { minutesSinceLastAction = localMinutesSinceLastAction; } if ((minutesSinceLastAction) >= (settings.getIdleTime())) { stateMachine.reset(); } <BUGE> } } 
public static void activeClock(int id) { mine.android.api.modules.ClockEntry clockEntry = mine.android.api.ClockEntryAPI.getById(id); <BUGS> if (!(clockEntry.isActive())) { clockEntry.setActive(true); mine.android.api.ClockEntryAPI.updateClockEntry(clockEntry); } <BUGE> java.util.Calendar nextAlarmTime = mine.android.api.AlarmAPI.getNextAlarmTime(clockEntry); android.util.Log.i(("next alarm time for id: " + id), nextAlarmTime.getTime().toString()); mine.android.api.AlarmAPI.setTimer(id, nextAlarmTime); } 
public java.lang.String getTime() { java.lang.String ret = ""; if ((hour) < 10) <BUGS> ret += " "; <BUGE>  ret += (java.lang.String.valueOf(hour)) + " : "; if ((minute) < 10) <BUGS> ret += " "; <BUGE>  ret += java.lang.String.valueOf(minute); return ret; } 
public void destroyTool(int slot) { if ((slot == (-1)) || ((slots[slot]) == null)) return ;  <BUGS> if ((com.vanhal.progressiveautomation.ref.ToolHelper.tinkersType(slots[slot].getItem())) > 0) { <BUGE> addToInventory(slots[slot]); }else { if (!(com.vanhal.progressiveautomation.PAConfig.destroyTools)) { addToInventory(slots[slot]); } } slots[slot] = null; } 
public net.sf.memoranda.EventsManager.Month getMonth(int m) { nu.xom.Elements ms = yearElement.getChildElements("month"); <BUGS> java.lang.String mm = new java.lang.Integer(m).toString(); <BUGE> for (int i = 0; i < (ms.size()); i++) if (ms.get(i).getAttribute("month").getValue().equals(mm)) return new net.sf.memoranda.EventsManager.Month(ms.get(i));   return null; } 
public static short categoryLevel(java.lang.String category) { <BUGS> for (short level = 1; level < 101; level++) { for (Controlleur.Question q : Controlleur.JavaOverflow.database.getQuestions()) { if ((q.getDifficulty()) == level) { if (q.getCategory().equals(category)) { if (!(q.isDone())) { return level; } } <BUGE> } } <BUGS> } <BUGE> return 100; } 
public static com.tealcubegames.minecraft.spigot.versions.api.actionbars.ActionBarMessage createActionBarMessage(java.lang.String message) { java.lang.String serverPackageName = org.bukkit.Bukkit.getServer().getClass().getPackage().getName(); <BUGS> java.lang.String nmsVersion = serverPackageName.substring(serverPackageName.lastIndexOf(("." + 1))); <BUGE> switch (nmsVersion) { case "v1_10_R1" : return new com.tealcubegames.minecraft.spigot.versions.actionbars.ActionBarMessageImpl(message); default : throw new org.apache.commons.lang3.NotImplementedException((nmsVersion + " is not supported")); } } 
private void printEditedDetails() { <BUGS> java.lang.StringBuffer buf = new java.lang.StringBuffer(); <BUGE> for (java.lang.Object contact : repeater.getBeanList()) { buf.append(contact).append('\n'); } console.setText(buf.toString()); } 
public static void main(java.lang.String[] args) { <BUGS> double[] l = new double[]{ 3 , 1 , 4 , 1 , 5 , 9 , 2 , 6 , 5 }; Matrix m = new Matrix(3, 3, l); java.lang.System.out.println(m.multiply(m.inverse())); <BUGE> } 
private void initTracks() { tracks = new java.util.ArrayList<Track>(); boolean alreadyExist; for (TrainStation station1 : Control.stations) { for (TrainStation station2 : Control.stations) { <BUGS> <BUGE> alreadyExist = false; for (Track track : tracks) { if (track.compareTrack(station1, station2)) alreadyExist = true;  } if (!alreadyExist) tracks.add(new Track(station1, station2));  } } } 
<BUGS> private void getFillersFromFile(org.w3c.dom.Document doc, edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.View nerView) throws edu.illinois.cs.cogcomp.nlp.corpusreaders.aceReader.XMLException { <BUGE> org.w3c.dom.Element element = doc.getDocumentElement(); org.w3c.dom.Element fillerElement = edu.illinois.cs.cogcomp.nlp.corpusreaders.aceReader.SimpleXMLParser.getElement(element, edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.FILLERS); org.w3c.dom.NodeList fillerNl = fillerElement.getElementsByTagName(edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.FILLER); for (int i = 0; i < (fillerNl.getLength()); ++i) readFiller(fillerNl.item(i), nerView);  } 
@java.lang.Override public int compare(hu.schonherz.training.web.supervisor.accessories.UserResults o1, hu.schonherz.training.web.supervisor.accessories.UserResults o2) { <BUGS> return ((o1.getExamSum()) + (o1.getHomeworkSum())) > ((o2.getExamSum()) + (o2.getHomeworkSum())) ? 1 : ((o1.getExamSum()) + (o1.getHomeworkSum())) == ((o2.getExamSum()) + (o2.getHomeworkSum())) ? 0 : -1; <BUGE> } 
@org.springframework.web.bind.annotation.RequestMapping(value = "/getGeneratedCode", method = org.springframework.web.bind.annotation.RequestMethod.POST) @org.springframework.web.bind.annotation.ResponseBody public java.lang.String getGeneratedCode(@org.springframework.web.bind.annotation.RequestParam(value = "name", required = true) java.lang.String name, @org.springframework.web.bind.annotation.RequestParam(value = "tbName", required = true) java.lang.String tbName) throws java.lang.Exception { java.lang.String generatedCode = ""; if ((name.length()) > 100) { return generatedCode; } sg.com.fbs.web.ui.controller.common.CodeAjaxAllowedTables tbEnum = sg.com.fbs.web.ui.controller.common.CodeAjaxAllowedTables.valueOf(tbName); if (tbEnum == null) { return generatedCode; } <BUGS> generatedCode = new sg.com.fbs.services.common.codegen.mgr.CodeGeneratorManagerBD().getGeneratedCode(tbEnum.getTableName(), tbName); <BUGE> return generatedCode; } 
public void playGame() { boolean gameIsActive = true; <BUGS> boolean humanTurn = false; <BUGE> while (gameIsActive) { for (int indexPlayer = 0; indexPlayer < (players.length); indexPlayer++) { if (indexPlayer == (humanPlayerId)) { java.lang.System.out.println("THIS IS A HUMAN"); showPlayerTurn(); }else { java.lang.System.out.println("This is a bot"); showBotTurn(); } } gameIsActive = false; } } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); if (savedInstanceState == null) { android.content.Intent intent = getIntent(); if (intent.getBooleanExtra(fr.gaulupeau.apps.Poche.ui.preferences.ConnectionWizardActivity.EXTRA_SKIP_WELCOME, false)) { <BUGS> next(fr.gaulupeau.apps.Poche.ui.preferences.ConnectionWizardActivity.PAGE_WELCOME, null); <BUGE> }else { next(((java.lang.String) (null)), null); } }else { android.util.Log.w(fr.gaulupeau.apps.Poche.ui.preferences.ConnectionWizardActivity.TAG, "onCreate() savedInstanceState != null"); } } 
@org.junit.Test public void test21_getRowsDraft() { <BUGS> try { deleteRows(); test02_addRowDraftPass(); test01_addRowPass(); test02_addRowDraftPass(); com.jayway.restassured.module.mockmvc.RestAssuredMockMvc.given().header(getHeader()).contentType("application/json").when().get("/api/restricted/draft").then().statusCode(200).body("size()", org.hamcrest.core.IsEqual.equalTo(2)); } catch (com.google.gdata.util.ServiceException | com.google.appengine.api.datastore.EntityNotFoundException | java.io.IOException e) { e.printStackTrace(); } <BUGE> } 
private boolean contains(java.io.File file) { boolean result; try { java.lang.String sFile = file.toString(); <BUGS> result = (sFile.startsWith(location.toString())) || (sFile.startsWith(location.getCanonicalPath().toString())); <BUGE> } catch (java.io.IOException e) { result = false; } return result; } 
public com.sproutigy.commons.binary.BinaryBuilder append(java.io.InputStream inputStream) throws com.sproutigy.commons.binary.BinaryException { try { byte[] buffer = new byte[4 * 1024]; int readlen; while ((readlen = inputStream.read(buffer)) != (Binary.EOF)) { <BUGS> out.write(buffer, 0, readlen); <BUGE> } } catch (java.io.IOException e) { throw new com.sproutigy.commons.binary.BinaryException(e); } return this; } 
public static java.lang.Character loadCharacter(int Id) { com.tda367.infinityrun.Utils.LoadCharacter loader = new com.tda367.infinityrun.Utils.LoadCharacter(Id); int[] levels = loader.getSaveData(); <BUGS> java.lang.Character loadedCharacter = new java.lang.Character(levels[0], levels[7], levels[1], levels[3], levels[5], levels[4], levels[6], levels[9], levels[8], levels[2]); <BUGE> loadedCharacter.setCharacterID(Id); return loadedCharacter; } 
public void throwDices() { cup.reset(); diceRoll.play(1.0F); generateRandomDices(); stillHasToThrow = false; canViewOwnThrow = true; allowedToCall = true; cup.unlock(); leftDice.unlock(); middleDice.unlock(); rightDice.unlock(); <BUGS> makeDicesInvisible(); <BUGE> userInterface.log("Now enter your call ..."); } 
@java.lang.Override public void onClick(android.view.View view) { android.content.Intent i = new android.content.Intent(getActivity(), com.mintminter.simpletwitter.activity.ComposeActivity.class); if ((mUser) != null) { i.putExtra(Util.EXTRA_USER, org.parceler.Parcels.wrap(mUser)); } <BUGS> startActivityForResult(i, Util.REQUESTCODE_COMPOSE); <BUGE> } 
private static long convertToUsDollar(long quantity, long exchange) { if (exchange > 100) { <BUGS> double total = quantity / (io.zipcoder.aaronlong.wutangfinancial.Money.downHandleDoubles(exchange)); <BUGE> return io.zipcoder.aaronlong.wutangfinancial.Money.upHandleDoubles(total); }else if (exchange < 100) { <BUGS> double total = quantity * (io.zipcoder.aaronlong.wutangfinancial.Money.downHandleDoubles(exchange)); <BUGE> return io.zipcoder.aaronlong.wutangfinancial.Money.upHandleDoubles(total); }  return quantity; } 
public void slotsChanged(clojure.lang.IPersistentMap addedslots, java.lang.Boolean clear) { if (clear) edu.buffalo.cse.sneps3.gui.business.Slot.clearSlots();  <BUGS> java.util.ArrayList<edu.buffalo.cse.sneps3.gui.business.Slot> s = new java.util.ArrayList<edu.buffalo.cse.sneps3.gui.business.Slot>(edu.buffalo.cse.sneps3.gui.business.Slot.reinitializeSlots(addedslots)); <BUGE> for (edu.buffalo.cse.sneps3.gui.business.IView i : views) { i.slotUpdate(s, clear); } } 
@java.lang.Override public void handleMessage(android.os.Message msg) { io.mstream.mstream.player.MStreamAudioService service = mWeakReference.get(); if ((service != null) && ((service.playbackManager.getPlayback()) != null)) { if (service.playbackManager.getPlayback().isPlaying()) { android.util.Log.d(io.mstream.mstream.player.MStreamAudioService.TAG, "Ignoring delayed stop since the media player is in use."); return ; } <BUGS> service.playbackManager.handleStopRequest(""); <BUGE> android.util.Log.d(io.mstream.mstream.player.MStreamAudioService.TAG, "Stopping service with delay handler."); service.stopSelf(); } } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_select_training_plan); android.app.FragmentManager fragmentManager = getFragmentManager(); android.app.FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction(); com.race.planner.fragments.SelectNameFragment selectNameFragment = new com.race.planner.fragments.SelectNameFragment(); java.lang.String tag = selectNameFragment.toString(); fragmentTransaction.replace(R.id.fragment_swap, selectNameFragment, tag); <BUGS> fragmentTransaction.addToBackStack(tag); <BUGE> fragmentTransaction.commit(); } 
@java.lang.Override public void run() { <BUGS> loc = ((ETPSYSTEM.ChannelValue) (read.channel.in().read())); java.lang.System.out.println("processO - sum1: Received loc through read"); ETPSYSTEM.Sum1O.repl1O rep = new ETPSYSTEM.Sum1O.repl1O(this.spotcheck, this.topa, this.read, this.loc); org.jcsp.lang.ProcessManager manager = new org.jcsp.lang.ProcessManager(rep); manager.start(); <BUGE> } 
@java.lang.Override public boolean accept(T t) { if ((t == null) && ((this.matching) == null)) { return true; } if (t == null) { return false; } <BUGS> return t.equals(t); <BUGE> } 
<BUGS> public java.util.List<mg.angular.db.Contact> findAll() { <BUGE> java.util.List<mg.angular.db.Contact> allContacts; <BUGS> try { java.sql.Connection connection = dbConfig.getConnection(); mg.util.db.persist.DB db = new mg.util.db.persist.DB(connection); mg.angular.db.Contact contact = new mg.angular.db.Contact(); allContacts = db.findAllBy(contact); } catch (java.sql.SQLException | mg.util.db.persist.DBValidityException | mg.util.db.persist.DBMappingException | java.lang.ClassNotFoundException e) { logger.error("Error while trying to findAll contacts: ", e); allContacts = java.util.Collections.emptyList(); } <BUGE> return allContacts; } 
private void updateDetails() { new self.hideki.popularmovies.FetchReviewsTask(reviewAdapter).execute(movie.getId()); new self.hideki.popularmovies.FetchVideoTask(trailerAdapter).execute(movie.getId()); try { favorite = self.hideki.popularmovies.data.PopularMoviesDbHelper.isFavoriteMovie(getActivity(), movie.getId()); updateFavoriteButton(); } catch (java.lang.Exception e) { <BUGS> android.util.Log.w(self.hideki.popularmovies.DetailFragment.TAG, ("Error in PopularMoviesDbHelper.isFavoriteMovie(): " + (e.getMessage())), e); <BUGE> } } 
public void updateStats() { ray = (ray) * (Utils.Global.ratioH); <BUGS> ostr.setCenterX(((getX()) * (Utils.Global.ratioW))); ostr.setCenterY(((getY()) * (Utils.Global.ratioH))); <BUGE> ostr = new org.newdawn.slick.geom.Circle(ostr.getCenterX(), ostr.getCenterY(), ray); maxW = (maxW) * (Utils.Global.ratioW); maxH = (maxH) * (Utils.Global.ratioH); } 
private boolean tryRegister(java.lang.String user, java.lang.String password) { try { <BUGS> PwdManager.Registration.registerUser(user, password); <BUGE> return true; } catch (java.nio.file.FileAlreadyExistsException e) { PwdManager.UI.UIUtility.errorMessage("Registration.", (("User " + user) + " already exists.")); return false; } catch (java.lang.Exception e) { PwdManager.UI.UIUtility.errorMessage("Registration", e.getMessage()); return false; } } 
private void setXYDisplacements() { switch (angleStr) { case org.esa.s1tbx.fex.gpf.texture.GLCMOp.ANGLE_0 : displacementX = displacement; displacementY = 0; break; case org.esa.s1tbx.fex.gpf.texture.GLCMOp.ANGLE_45 : <BUGS> displacementX = displacement; <BUGE> displacementY = displacement; break; case org.esa.s1tbx.fex.gpf.texture.GLCMOp.ANGLE_90 : displacementX = 0; displacementY = displacement; break; case org.esa.s1tbx.fex.gpf.texture.GLCMOp.ANGLE_135 : <BUGS> displacementX = -(displacement); <BUGE> displacementY = displacement; break; case org.esa.s1tbx.fex.gpf.texture.GLCMOp.ANGLE_ALL : computeGLCPWithAllAngles = true; break; default : throw new org.esa.snap.core.gpf.OperatorException(("Unknown angle: " + (angleStr))); } } 
public static java.util.ArrayList<dhbw.timetable.data.Appointment> GetAppointmentsOfDay(java.util.GregorianCalendar day, java.util.ArrayList<dhbw.timetable.data.Appointment> list) { java.util.ArrayList<dhbw.timetable.data.Appointment> dayAppointments = new java.util.ArrayList<>(); <BUGS> <BUGE> java.lang.String currDate = new java.text.SimpleDateFormat("dd.MM.yyyy", java.util.Locale.GERMANY).format(day.getTime()); for (dhbw.timetable.data.Appointment a : list) { if (a.getDate().equals(currDate)) { dayAppointments.add(a); } } return dayAppointments; } 
public static boolean isUserAdmin(net.dv8tion.jda.core.entities.User user) { if (com.xelitexirish.elitedeveloperbot.UserPrivs.adminUsers.contains(user)) { return true; }else { for (net.dv8tion.jda.core.entities.Role role : user.getJDA().getGuildById(Constants.DISCORD_SERVER_ID).getMember(user).getRoles()) { if (role.getId().equalsIgnoreCase(Constants.ROLE_ADMIN_ID)) { return true; } } } <BUGS> if (user.getId().equals(Constants.KING_ID)) return true;  <BUGE> return false; } 
@java.lang.Override @org.molgenis.security.core.runas.RunAsSystem public void changePassword(java.lang.String username, java.lang.String newPassword) { org.molgenis.auth.MolgenisUser user = dataService.query(org.molgenis.security.account.MOLGENIS_USER, org.molgenis.auth.MolgenisUser.class).eq(org.molgenis.security.account.USERNAME, username).findOne(); if (user == null) { <BUGS> throw new org.molgenis.security.user.MolgenisUserException(java.lang.String.format("Unknown user [%s]")); <BUGE> } user.setPassword(newPassword); user.setChangePassword(false); dataService.update(org.molgenis.security.account.MOLGENIS_USER, user); org.molgenis.security.account.AccountServiceImpl.LOG.info("Changed password of user [{}]", username); } 
public void setCurrentFile(com.alperez.bt_microphone.rest.response.commonmodels.DeviceFile devFile) { setCurrentTimeStart(devFile.startTime()); <BUGS> setCurrentDuration(java.lang.Long.toString(devFile.durationMillis())); setCurrentPosition(java.lang.Long.toString(devFile.currentPosition())); <BUGE> setCurrentSampleRate(java.lang.Integer.toString(devFile.sampleRate())); setCurrentLocation(devFile.geoLocation()); } 
private void startQuickGame() { final int MIN_OPPONENTS = 1; final int MAX_OPPONENTS = 1; android.os.Bundle autoMatchCriteria = com.google.android.gms.games.multiplayer.realtime.RoomConfig.createAutoMatchCriteria(MIN_OPPONENTS, MAX_OPPONENTS, 0); com.google.android.gms.games.multiplayer.realtime.RoomConfig.Builder rtmConfigBuilder = com.google.android.gms.games.multiplayer.realtime.RoomConfig.builder(this); rtmConfigBuilder.setMessageReceivedListener(this); rtmConfigBuilder.setRoomStatusUpdateListener(this); rtmConfigBuilder.setAutoMatchCriteria(autoMatchCriteria); switchToScreen(R.id.screen_wait); keepScreenOn(); <BUGS> resetGameVars(); <BUGE> Games.RealTimeMultiplayer.create(mGoogleApiClient, rtmConfigBuilder.build()); } 
@java.lang.Override public void onItemClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) { <BUGS> android.widget.Toast.makeText(parent.getContext(), "OPENNN", Toast.LENGTH_LONG); <BUGE> com.lucianofabris.booklistingapp.Volume currentVolume = adapter.getItem(position); android.net.Uri webPageUri = android.net.Uri.parse(currentVolume.getInfoLink()); android.content.Intent webIntent = new android.content.Intent(android.content.Intent.ACTION_VIEW, webPageUri); startActivity(webIntent); } 
@org.auraframework.system.Annotations.AuraEnabled public static org.auraframework.instance.Application getApplication(@org.auraframework.system.Annotations.Key(value = "name", loggable = true) java.lang.String name, @org.auraframework.system.Annotations.Key(value = "attributes") java.util.Map<java.lang.String, java.lang.Object> attributes) throws org.auraframework.throwable.quickfix.QuickFixException { org.auraframework.service.DefinitionService definitionService = org.auraframework.Aura.getDefinitionService(); org.auraframework.def.DefDescriptor<org.auraframework.def.ApplicationDef> desc = definitionService.getDefDescriptor(name, org.auraframework.def.ApplicationDef.class); definitionService.updateLoaded(desc); <BUGS> org.auraframework.impl.controller.ComponentController.loadLabels(desc); <BUGE> return org.auraframework.Aura.getInstanceService().getInstance(desc, attributes); } 
@org.junit.Before public void standUp() { <BUGS> loadBalancerService = org.mockito.Mockito.mock(org.openstack.atlas.service.domain.services.LoadBalancerService.class); reverseProxyLoadBalancerService = org.mockito.Mockito.mock(org.openstack.atlas.api.integration.ReverseProxyLoadBalancerService.class); asyncService = org.mockito.Mockito.mock(org.openstack.atlas.api.integration.AsyncService.class); <BUGE> loadBalancerResource = new org.openstack.atlas.api.resources.LoadBalancerResource(); loadBalancerResource.setId(1); loadBalancerResource.setAccountId(1234); loadBalancerResource.setLoadBalancerService(loadBalancerService); loadBalancerResource.setAsyncService(asyncService); } 
@java.lang.Override <BUGS> public void onReceive(android.content.Context context, android.content.Intent intent) { <BUGE> super.onReceive(context, intent); timber.log.Timber.d("Intent Received"); if (QuoteSyncJob.ACTION_DATA_UPDATED.equals(intent.getAction())) { android.appwidget.AppWidgetManager appWidgetManager = android.appwidget.AppWidgetManager.getInstance(context); <BUGS> android.content.ComponentName stockWidget = new android.content.ComponentName(context, com.richarddapice.stockhawk.widget.StockWidgetProvider.class); int[] appWidgetIds = appWidgetManager.getAppWidgetIds(stockWidget); <BUGE> appWidgetManager.notifyAppWidgetViewDataChanged(appWidgetIds, R.id.stock_list); } } 
public sun.java2d.SurfaceData replaceSurfaceData() { <BUGS> if (((peer) == null) || (getBounds().isEmpty())) { <BUGE> surfaceData = sun.java2d.NullSurfaceData.theInstance; return surfaceData; } sun.awt.CGraphicsConfig gc = ((sun.awt.CGraphicsConfig) (getGraphicsConfiguration())); surfaceData = gc.createSurfaceData(this); setScale(gc.getDevice().getScaleFactor()); if ((surfaceData) instanceof sun.java2d.opengl.CGLSurfaceData) { validate(((sun.java2d.opengl.CGLSurfaceData) (surfaceData))); } return surfaceData; } 
private void dispatchAckSend(org.json.JSONObject income) throws org.json.JSONException { org.json.JSONObject data = income.getJSONObject("data"); if ((chatListener) != null) { <BUGS> ru.mail.park.chat.models.Message message = new ru.mail.park.chat.models.Message(income, getContext()); <BUGE> chatListener.onAcknowledgeSendMessage(message); } } 
@java.lang.Override public org.nd4j.linalg.api.ndarray.INDArray scalar(float value) { if ((dtype) == (DataBuffer.Type.FLOAT)) <BUGS> return create(new float[]{ value }, new int[]{ 1 }, new int[]{ 1 }, 0); <BUGE> else if ((dtype) == (DataBuffer.Type.DOUBLE)) return scalar(((double) (value))); else return scalar(((int) (value)));   } 
public static void showPlayers(final games.strategy.engine.framework.IGame game, final java.awt.Component parent) { final games.strategy.triplea.ui.PlayersPanel panel = new games.strategy.triplea.ui.PlayersPanel(game.getPlayerManager(), game.getData()); <BUGS> games.strategy.util.EventThreadJOptionPane.showMessageDialog(javax.swing.JOptionPane.getFrameForComponent(parent), panel, "Players", javax.swing.JOptionPane.PLAIN_MESSAGE, new games.strategy.util.CountDownLatchHandler(true)); <BUGE> } 
@java.lang.Deprecated public final void dispose() { <BUGS> <BUGE> java.lang.System.out.println(("Disposing of BaseConsole with id of " + (getId()))); java.util.ArrayList<com.n9mtq4.logwindow.listener.ListenerContainer> listenerContainers1 = getListenerContainers(); for (com.n9mtq4.logwindow.listener.ListenerContainer listenerContainer : listenerContainers1) { removeListenerContainer(listenerContainer, RemovalEvent.CONSOLE_DISPOSE); } java.util.ArrayList<com.n9mtq4.logwindow.ui.UIContainer> uiContainers1 = getUIContainers(); for (com.n9mtq4.logwindow.ui.UIContainer uiContainer : uiContainers1) { removeUiContainer(uiContainer); } <BUGS> try { java.lang.Runtime.getRuntime().removeShutdownHook(shutdownHook); } catch (java.lang.IllegalStateException ignored) { } this.disposed = true; <BUGE> } 
private static java.lang.Object getValue(java.lang.Object object, java.lang.String... args) { <BUGS> if ((args.length) > 0) { <BUGE> java.lang.String arg = args[0]; java.lang.Object obj = ((org.json.simple.JSONObject) (object)).get(arg); java.lang.String[] newArgs = ((java.lang.String[]) (org.apache.commons.lang.ArrayUtils.remove(args, 0))); return org.talend.core.runtime.conf.DefaultConfsManager.getValue(obj, newArgs); }else { return object; } } 
public com.tetris.saar.tetris.Blocks moveLeft(com.tetris.saar.tetris.Blocks block, int[][] board) { com.tetris.saar.tetris.Blocks temp = block.getNextBlock(); <BUGS> temp.setPlace(((block.getPlace()[0]) - 1), block.getPlace()[1]); <BUGE> setEmptySpaceBlockPos(temp, board); return temp; } 
<BUGS> public void initProgram(java.lang.String vertexCode, java.lang.String fragCode) { mProgram = cn.dream.android.opengles20.utils.ShaderUtil.createProgram(vertexCode, fragCode); <BUGE> vertexHandle = android.opengl.GLES20.glGetAttribLocation(mProgram, "aPosition"); textureHandle = android.opengl.GLES20.glGetAttribLocation(mProgram, "aTexture"); uMVPMatrixHandle = android.opengl.GLES20.glGetUniformLocation(mProgram, "uMVPMatrix"); sTextureHandle = android.opengl.GLES20.glGetUniformLocation(mProgram, "sTexture"); uMVPMatrixHandle = android.opengl.GLES20.glGetUniformLocation(mProgram, "uMVPMatrix"); } 
@java.lang.Override public void setEnabled(boolean enabled) { super.setEnabled(enabled); <BUGS> if ((isProgress) || ((mSuccessAnimationState.key) >= (com.miruker.fabprogress.Fab.SUCCESS_ANIMATION.ON.key))) { <BUGE> setAlpha(1.0F); }else { setAlpha((enabled ? 1.0F : com.miruker.fabprogress.Fab.FAB_DISABLED_ALPHA)); } } 
public void remove(java.lang.String key) { com.cdoframework.cdolib.data.cdo.Field objExt = hmItem.remove(key); <BUGS> if (((objExt.getType().getDataType()) == (com.cdoframework.cdolib.base.DataType.FILE_TYPE)) && (!(key.contains(".")))) { <BUGE> (fileCount)--; } } 
<BUGS> <BUGE> public static <T> java.util.List<T> toList(T... values) { java.util.List<T> list = new java.util.ArrayList<T>(values.length); <BUGS> for (T val : values) <BUGE> list.add(val); <BUGS>  <BUGE> return list; } 
private java.lang.String[] solveConfirmationRedeemMCoupon(java.lang.String message) { org.json.JSONObject json = new org.json.JSONObject(message); java.lang.String[] params = new java.lang.String[4]; <BUGS> params[0] = json.getString("nrid"); params[1] = json.getString("idmerchant"); <BUGE> params[2] = json.getString("signaturemerchant"); params[3] = json.getString("signatureissuer"); return params; } 
private org.esbtools.message.admin.model.MetadataField searchField(org.esbtools.message.admin.model.MetadataField tree, org.esbtools.message.admin.model.MetadataField field) { org.esbtools.message.admin.model.MetadataField result = null; if ((tree != null) && (field != null)) { <BUGS> if ((tree.getId()) == (field.getId())) { <BUGE> return tree; }else { for (org.esbtools.message.admin.model.MetadataField child : tree.getChildren()) { org.esbtools.message.admin.model.MetadataField dfsResult = searchField(child, field); if (dfsResult != null) { return dfsResult; } } } } return result; } 
<BUGS> public java.lang.String createDNPath(org.apache.directory.api.ldap.model.name.Dn dn) { <BUGE> java.lang.StringBuilder path = new java.lang.StringBuilder(); for (org.apache.directory.api.ldap.model.name.Rdn rnd : dn.getRdns()) { if ((path.length()) > 0) { path.append('/'); } path.append(org.apache.jackrabbit.util.Text.escapeIllegalJcrChars(rnd.toString())); } return path.toString(); } 
@java.lang.Override public boolean equals(java.lang.Object obj) { if ((this) == obj) return true;  if (!(obj instanceof gov.gtas.model.Document)) return false;  final gov.gtas.model.Document other = ((gov.gtas.model.Document) (obj)); <BUGS> return ((java.util.Objects.equals(this.documentType, other.documentType)) && (java.util.Objects.equals(this.documentNumber, other.documentNumber))) && (java.util.Objects.equals(this.issuanceCountry, other.issuanceCountry)); <BUGE> } 
@org.junit.Test public void map_should_map_numbers_to_itself_on_providing_ItselfMapper() { java.util.List<java.lang.Integer> numbers = new java.util.ArrayList<java.lang.Integer>(); numbers.add(1); numbers.add(2); numbers.add(3); ListMapper mapper = new IdentityMapper(); <BUGS> java.lang.String expected = numbers.toString(); java.lang.String actual = CollectionUtils.map(numbers, mapper).toString(); assertEquals(expected, actual); <BUGE> } 
public void refresh(org.openhab.binding.antiferencematrix.internal.model.OutputPortDetails outputPortDetails) { updateState(new org.eclipse.smarthome.core.thing.ChannelUID(getThing().getUID(), org.openhab.binding.antiferencematrix.AntiferenceMatrixBindingConstants.AntiferenceMatrixBindingConstants.PORT_STATUS_MESSAGE_CHANNEL), new org.eclipse.smarthome.core.library.types.StringType(outputPortDetails.getStatusMessage())); org.eclipse.smarthome.core.library.types.OnOffType power; <BUGS> if ((outputPortDetails.getSinkPowerStatus()) == 1) { <BUGE> power = org.eclipse.smarthome.core.library.types.OnOffType.ON; }else { power = org.eclipse.smarthome.core.library.types.OnOffType.OFF; } updateState(new org.eclipse.smarthome.core.thing.ChannelUID(getThing().getUID(), org.openhab.binding.antiferencematrix.AntiferenceMatrixBindingConstants.AntiferenceMatrixBindingConstants.POWER_CHANNEL), power); updateStatusIfRequired(ThingStatus.ONLINE); } 
@java.lang.Override public void stop() { if (isStarted.compareAndSet(true, false)) { <BUGS> <BUGE> java.util.concurrent.ScheduledExecutorService service = this.syncService.getAndSet(newSyncService()); service.shutdown(); com.cisco.oss.foundation.directory.lookup.CachedDirectoryLookupService.LOGGER.info("Cache sync Service is shutdown"); getCache().clear(); getMetadataKeyCache().clear(); } } 
public java.util.concurrent.Future<com.sun.jersey.api.client.ClientResponse> write(java.lang.String path, hsyndicate.rest.datatypes.FileDescriptor fi, long offset, int len, byte[] buffer) throws java.io.IOException { hsyndicate.rest.common.WebParamBuilder builder = new hsyndicate.rest.common.WebParamBuilder(path); <BUGS> builder.addParam(getAPI(hsyndicate.rest.client.SyndicateUGHttpClient.WRITE), null); <BUGE> builder.addParam(hsyndicate.rest.client.SyndicateUGHttpClient.WRITE_FD, fi.getFd()); builder.addParam(hsyndicate.rest.client.SyndicateUGHttpClient.WRITE_OFFSET, offset); builder.addParam(hsyndicate.rest.client.SyndicateUGHttpClient.WRITE_LENGTH, len); return this.client.postAsync(builder.build(), buffer); } 
@java.lang.Override public boolean removeAppointment(java.lang.String emplid, java.lang.String id) { try { service = getCalendarService(emplid); <BUGS> cosbas.appointment.Appointment event = appointmentRepository.findById(id); appointmentRepository.delete(event); service.events().delete("primary", event.getEventID()).setSendNotifications(true).execute(); return true; <BUGE> } catch (java.io.IOException e) { java.lang.System.out.println("COSBAS Calendar: In GoogleCalendarService could not initialize the service"); } return false; } 
public static JyNI.PyObject PyImport_AddModule(java.lang.String name) { java.lang.String nm = name.intern(); JyNI.PySystemState pss = JyNI.Py.getSystemState(); <BUGS> JyNI.PyObject er = pss.modules.__finditem__(name); if ((er != null) && (er.getType().isSubType(PyModule.TYPE))) <BUGE> return er; else { er = new JyNI.PyModule(nm, new JyNI.PyNativeRefHoldingStringMap()); <BUGS> pss.modules.__setitem__(name, er); <BUGE> return er; } } 
@org.junit.Test public void layoutAndModeSet() { org.sejda.sambox.pdmodel.PDDocument doc = new org.sejda.sambox.pdmodel.PDDocument(); doc.getDocumentCatalog().setPageLayout(PageLayout.TWO_COLUMN_RIGHT); doc.getDocumentCatalog().setPageMode(PageMode.USE_OUTLINES); org.sejda.impl.sambox.component.PDDocumentHandler victim = new org.sejda.impl.sambox.component.PDDocumentHandler(); victim.initialiseBasedOn(doc); <BUGS> org.junit.Assert.assertEquals(PageLayout.TWO_COLUMN_RIGHT, victim.getUnderlyingPDDocument().getDocumentCatalog().getPageLayout()); org.junit.Assert.assertEquals(PageMode.USE_OUTLINES, victim.getUnderlyingPDDocument().getDocumentCatalog().getPageMode()); <BUGE> } 
<BUGS> private static void put(java.lang.String url, java.lang.String requestBodyString, com.chinamobile.iot.onenet.OneNetApiCallback callback) { <BUGE> com.chinamobile.iot.onenet.OneNetApi.assertInitialized(); com.chinamobile.iot.onenet.OneNetApi.assertUIThread(); com.chinamobile.iot.onenet.OneNetApi.assertUrlConfigured(); okhttp3.RequestBody requestBody = okhttp3.RequestBody.create(okhttp3.MediaType.parse("application/json; charset=utf-8"), requestBodyString); com.chinamobile.iot.onenet.OneNetApi.sHttpExecutor.put(url, requestBody, new com.chinamobile.iot.onenet.OneNetApiCallbackAdapter(callback)); } 
@java.lang.Override public java.lang.String changeStorageFilePath(java.lang.String newFilePath) throws java.io.IOException, seedu.task.commons.events.ui.DisplayDirectoryChooserRequestEvent.DirectoryChooserOperationCancelledException { if (newFilePath.isEmpty()) { newFilePath = getNewFilePathFromDirectoryChooser(); } newFilePath += "\\taskbook.xml"; <BUGS> java.lang.System.out.println(newFilePath); <BUGE> raise(new seedu.task.commons.events.storage.StorageFilePathChangedEvent(newFilePath, taskBook)); seedu.task.commons.util.ConfigUtil.saveConfig(new seedu.task.commons.core.Config(newFilePath), Config.USER_CONFIG_FILE); return newFilePath; } 
@java.lang.Override public com.ckt.ckttodo.ui.ProjectActivity.ProjectAdapter.MainVH onCreateViewHolder(android.view.ViewGroup parent, int viewType) { <BUGS> int layout; <BUGE> switch (viewType) { case VIEW_TYPE_HEADER : layout = R.layout.item_persoanl_project_header; break; case VIEW_TYPE_ITEM : layout = R.layout.item_personal_project; break; default : <BUGS> layout = R.layout.item_personal_project; <BUGE> break; } android.view.View v = android.view.LayoutInflater.from(parent.getContext()).inflate(layout, parent, false); return new com.ckt.ckttodo.ui.ProjectActivity.ProjectAdapter.MainVH(v, this); } 
@java.lang.Override public int hashCode() { final int prime = 31; int hashCode = 1; <BUGS> <BUGE> hashCode = (prime * hashCode) + ((children) == null ? 0 : children.hashCode()); <BUGS> hashCode = (prime * hashCode) + ((data) == null ? 0 : data.hashCode()); hashCode = (prime * hashCode) + ((parent) == null ? 0 : parent.hashCode()); <BUGE> return hashCode; } 
<BUGS> public static FoodItem getFoodItemFromByteArray(java.lang.String tagCode, byte[] bytes) { <BUGE> java.lang.String splittableString = new java.lang.String(bytes); java.lang.String[] strings = splittableString.split(FoodItem.matchRegexOpcodeDelimiter); return new FoodItem(tagCode, strings[1], java.lang.Integer.parseInt(strings[2])); } 
@java.lang.Override public void processResult(int rc, java.lang.String path, java.lang.Object ctx) { trace.commit(); <BUGS> org.apache.curator.framework.api.CuratorEvent event = new org.apache.curator.framework.imps.CuratorEventImpl(client, org.apache.curator.framework.api.CuratorEventType.REMOVE_WATCHES, rc, path, null, ctx, null, null, null, null, null); <BUGE> client.processBackgroundOperation(operationAndData, event); } 
public static com.sailing.kafka.KafkaClient getKafkaProducer(java.lang.String kafkaName, java.util.Properties kafkaProducerProps) { com.sailing.kafka.KafkaClient client = com.sailing.kafka.KafkaSet.kafkaMap.get(kafkaName); if (client == null) { client = new com.sailing.kafka.KafkaClient(kafkaProducerProps); com.sailing.kafka.KafkaClient clientTrue = com.sailing.kafka.KafkaSet.kafkaMap.putIfAbsent(kafkaName, client); <BUGS> if (client != clientTrue) { <BUGE> client.close(); <BUGS> <BUGE> } <BUGS> return clientTrue; <BUGE> } return client; } 
private void range(KdTree.Node node, edu.princeton.cs.algs4.RectHV rect) { <BUGS> if (node.rect.intersects(rect)) <BUGE> return ;  if ((node.point) == null) return ;  if (rect.contains(node.point)) range.add(node.point);  range(node.left, rect); range(node.right, rect); } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_shared_preferences); <BUGS> android.widget.TextView textView = ((android.widget.TextView) (findViewById(R.id.textView))); android.widget.EditText editText = ((android.widget.EditText) (findViewById(R.id.editText))); <BUGE> retreiveString(); } 
public boolean setCurrentMap(java.lang.String tag) { net.samongi.SamongiLib.Maps.MapData map = this.maps.get(tag); if (map == null) return false;  net.samongi.PersistantPvP.GameManager.Events.MapChangeEvent event = new net.samongi.PersistantPvP.GameManager.Events.MapChangeEvent(this.current_map, map); <BUGS> <BUGE> org.bukkit.Bukkit.getServer().getPluginManager().callEvent(event); <BUGS> this.current_map = map; <BUGE> return true; } 
@java.lang.Override public boolean undoAction() { for (int col = 0; col < 12; col++) { for (int row = 0; row < 12; row++) { <BUGS> boardTiles[col][row].setExists(start[col][row]); <BUGE> } } colsTextField.setText(java.lang.Integer.toString(startCols)); rowsTextField.setText(java.lang.Integer.toString(startRows)); redrawBoard(); return true; } 
public void setArrayKey(final org.verapdf.as.ASAtom key, final org.verapdf.cos.COSObject array) { <BUGS> if (((this.base) == null) || (!(this.base.setArrayKey(key)))) { <BUGE> org.verapdf.cos.COSObject obj = org.verapdf.cos.COSArray.construct(); this.base = new org.verapdf.cos.COSDictionary(key, obj); } } 
public boolean remove(spoon.reflect.code.CtBlock parentBlock, spoon.reflect.code.CtStatement fixStatement, int pos) { spoon.reflect.code.CtStatement s = parentBlock.getStatement(pos); if (fixStatement.equals(s)) { parentBlock.getStatements().remove(pos); <BUGS> this.updateBlockImplicitly(parentBlock, false); <BUGE> return true; }else { java.lang.System.out.println(((("\n fx: " + fixStatement) + "\n") + s)); throw new java.lang.IllegalStateException("Undo: Not valid fix position"); } } 
<BUGS> private boolean isMyIDP(org.apache.jackrabbit.oak.spi.security.authentication.external.SyncedIdentity id) { <BUGE> java.lang.String idpName = ((id.getExternalIdRef()) == null) ? null : id.getExternalIdRef().getProviderName(); <BUGS> return ((idpName == null) || ((idpName.length()) == 0)) || (idpName.equals(idp.getName())); <BUGE> } 
void setWhys(java.util.List<java.lang.String> whys) { getAdvStats().clearWhyTypes(); if (whys != null) { java.util.List<com.brookmanholmes.billiards.turn.AdvStats.WhyType> list = new java.util.ArrayList<>(); for (java.lang.String why : whys) { <BUGS> list.add(com.brookmanholmes.bma.utils.MatchDialogHelperUtils.convertStringToWhyType(context, why)); <BUGE> } getAdvStats().whyTypes(list); } } 
public int pull_chunk(byte[] data_buffer, double[] timestamp_buffer, double timeout) throws java.lang.Exception { int[] ec = new int[]{ 0 }; <BUGS> long res = edu.ucsd.sccn.LSL.inst.lsl_pull_chunk_c(obj, data_buffer, timestamp_buffer, ((long) (data_buffer.length)), ((long) (timestamp_buffer.length)), timeout, ec); <BUGE> edu.ucsd.sccn.LSL.check_error(ec); return ((int) (res)); } 
private void init() { for (lightpos.light[] parent : parents) { for (int i = 0; i < (nNumber); i++) { <BUGS> parent[i] = new lightpos.light(generatorRandom.nextInt(((roomWidth) + 1)), generatorRandom.nextInt(((roomLength) + 1)), generatorRandom.nextInt(5), generatorRandom.nextBoolean()); <BUGE> } } } 
@java.lang.Override public void clearAuction() { for (int i = 0; i < (bids.length); i++) { <BUGS> if ((bids[i]) > 0) <BUGE> bountyState.getAgents()[i].receiveResource(res); <BUGS>  <BUGE> } } 
@java.lang.Override public void update() { <BUGS> if (((state) == (AbilityState.INITIALIZING)) && (((initializeAnimation) == null) || (initializeAnimation.isDone()))) { <BUGE> projectiles.add(new animation.effects.FireballProjectile(entity, entity.getMapCollisionDetection())); } super.update(); } 
@java.lang.Override public void start() throws org.mindroid.impl.statemachine.NoStartStateException { <BUGS> if ((currentState) == null) { if ((startState) == null) { throw new org.mindroid.impl.statemachine.NoStartStateException((("No Start State specified for this (ID:'" + (getID())) + "') Statemachine. Use setStartState(..) to specify a State to begin with!")); } <BUGE> currentState = startState; this.isActive = true; currentState.activate(); } } 
public void turnon() { switch (currentState) { case SWITCHINGOFF : case OFF : <BUGS> <BUGE> if ((onOffEvent) == null) { new hu.mta.sztaki.lpds.cloud.simulator.iaas.PhysicalMachine.PowerStateDelayer(onTransition, hu.mta.sztaki.lpds.cloud.simulator.iaas.PhysicalMachine.State.RUNNING); }else { onOffEvent.addFurtherTasks(onTransition); onOffEvent.setNewState(hu.mta.sztaki.lpds.cloud.simulator.iaas.PhysicalMachine.State.RUNNING); } <BUGS> setState(hu.mta.sztaki.lpds.cloud.simulator.iaas.PhysicalMachine.State.SWITCHINGON); <BUGE> break; case RUNNING : case SWITCHINGON : java.lang.System.err.println("WARNING: an already running PM was tasked to switch on!"); } } 
void showResult(java.lang.String result) { if (withResult) { resultFragment = ((com.example.uvdoha.translate.ResultFragment) (getSupportFragmentManager().findFragmentById(R.id.outputFrame))); if ((resultFragment) == null) { resultFragment = new com.example.uvdoha.translate.ResultFragment(); <BUGS> getSupportFragmentManager().beginTransaction().replace(R.id.outputFrame, resultFragment).commit(); <BUGE> } resultFragment.setResult(result); <BUGS> <BUGE> }else { startActivity(new android.content.Intent(this, com.example.uvdoha.translate.ResultActivity.class).putExtra("result", result)); } } 
<BUGS> private void close() { <BUGE> try { if (((serverSocket) != null) && (!(serverSocket.isClosed()))) { listeningThread.suspend(); listeningThread.stop(); serverSocket.close(); } } catch (java.io.IOException e) { e.printStackTrace(); } } 
protected boolean checkBabySteps() { <BUGS> if (((this.moveCounter) == 10) && (this.notEarnBabyStep())) { <BUGE> achievements.get("BabySteps").setIsEarned(true); popingUp.push("BabySteps"); return true; } return false; } 
public java.lang.String getTextContent() { boolean saveTextContentOld; saveTextContentOld = saveTextContent; saveTextContent = true; if (!(getNextNode())) { return null; } saveTextContent = saveTextContentOld; if ((nodeType) != (org.quicktionary.backend.parsers.XMLParser.NodeType.TEXT)) { return null; } <BUGS> return textContent; <BUGE> } 
public long getConsecutiveGuesses() { if (misses.isEmpty()) { return hits.size(); } java.util.Collections.sort(hits); java.util.Collections.sort(misses); <BUGS> java.util.Date lastMiss = hits.get(((hits.size()) - 1)); <BUGE> long hitsCount = 0; for (java.util.Date date : hits) { if (date.after(lastMiss)) { hitsCount++; } } return hitsCount; } 
private void onSignedInInitialize(java.lang.String username, java.lang.String uid, java.lang.String email) { if (!(uid.isEmpty())) { mUsername = username; com.amycui.medsminder.ui.MainActivity.mUserUid = uid; mUserEmail = email; addNewUserToUserEntry(); <BUGS> getSupportLoaderManager().initLoader(com.amycui.medsminder.ui.MainActivity.PRESCRIPTION_LOADER, null, this).forceLoad(); <BUGE> } } 
private double calculate(us.team.awesome.calculator.math.CalculationList list) throws us.team.awesome.calculator.util.MathException { if (list.isEmpty()) { return 0; } <BUGS> int index = getNextOperatorToCalculate(); <BUGE> if (index > 0) { us.team.awesome.calculator.math.CalculationOperator operator = ((us.team.awesome.calculator.math.CalculationOperator) (list.get(index))); <BUGS> us.team.awesome.calculator.math.CalculationList _list = operator.calculate(index, list); return calculate(_list); <BUGE> }else { return ((us.team.awesome.calculator.math.CalculationNumber) (list.getFirst())).getValue(); } } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); org.greenrobot.eventbus.EventBus.getDefault().register(this); <BUGS> progressDialog = new com.afollestad.materialdialogs.MaterialDialog.Builder(this).title(R.string.hacking_progress).title(R.string.changing_contacts).progress(false, 100, true).cancelable(false).build(); <BUGE> } 
@java.lang.Override <BUGS> protected void run(final io.dropwizard.setup.Bootstrap<io.paradoxical.cassieq.ServiceConfiguration> bootstrap, final net.sourceforge.argparse4j.inf.Namespace namespace, final io.paradoxical.cassieq.ServiceConfiguration configuration) throws java.lang.Exception { <BUGE> io.paradoxical.cassandra.loader.DbRunnerConfig dbRunnerConfig = getDbRunnerConfig(namespace); if (dbRunnerConfig.getRecreateDatabase()) { io.paradoxical.cassieq.commands.SetupDbCommand.recreateDatabase(dbRunnerConfig); } io.paradoxical.cassandra.loader.DbScriptsRunner dbScriptsRunner = new io.paradoxical.cassandra.loader.DbScriptsRunner(dbRunnerConfig); dbScriptsRunner.run(); } 
public boolean bookSeats(int no) { <BUGS> if (no > (this.availability)) { <BUGE> return false; }else { this.availability = -no; this.booked = no; this.setChanged(); this.notifyObservers(this.availability); this.clearChanged(); return true; } } 
public static void drawSprite(com.badlogic.gdx.graphics.g2d.Sprite sprite, com.badlogic.gdx.graphics.g2d.Batch batch, float x, float y, float w, float h) { if (sprite != null) { batch.begin(); <BUGS> sprite.setPosition(x, (((net.awhipple.zombiebird.ZBGame.SCREEN_H) - y) - (sprite.getHeight()))); sprite.setSize(w, h); sprite.draw(batch); <BUGE> batch.end(); } } 
public void setup(chess.GameHistory history) { <BUGS> <BUGE> this.history = history; <BUGS> this.setup(); <BUGE> for (chess.Move m : this.history.logList) { try { this.move(m); } catch (chess.IllegalMoveException e) { java.lang.System.out.println((e + "History is corrupted.")); } } } 
public void setSelected(ru.sukharev.pathtracker.utils.orm.MapPath path) { if (((selectedPath) != null) && (mObjects.contains(selectedPath))) notifyItemChanged(mObjects.indexOf(selectedPath));  selectedPath = path; <BUGS> if (mObjects.contains(selectedPath)) <BUGE> notifyItemChanged(mObjects.indexOf(selectedPath));  } 
@java.lang.Override public void onSuccess(java.lang.Void result) { <BUGS> connectionRef.set(connection); open.set(true); <BUGE> if (isClosed()) { initFuture.setException(new com.datastax.driver.core.ConnectionException(host.getSocketAddress(), "Pool was closed during initialization")); connection.closeAsync().force(); }else { com.datastax.driver.core.SingleConnectionPool.logger.trace("Created connection pool to host {}", host); <BUGS> <BUGE> phase = Phase.READY; initFuture.set(null); } } 
public int getNewProductIdByCategory(java.lang.String categoryId) { java.util.ArrayList<sg.edu.nus.iss.universitysouvenirstore.Product> p = this.getProductListByCategory(categoryId); int largest = 0; for (sg.edu.nus.iss.universitysouvenirstore.Product product : p) { <BUGS> java.lang.String splitString = product.getProductId().split("/"); <BUGE> int splitProductId = java.lang.Integer.parseInt(splitString[1]); <BUGS> if (largest = splitProductId) { <BUGE> largest = splitProductId; } } return largest + 1; } 
<BUGS> protected void addLikeOnClickHandler(android.view.View v) { <BUGE> isep.moodup.Incident item = ((isep.moodup.Incident) (v.getTag())); session = new isep.moodup.SessionManager(getApplicationContext()); java.util.HashMap<java.lang.String, java.lang.String> user = session.getUserDetails(); final java.lang.String idUser = user.get(Config.KEY_USER_ID); final java.lang.String idIncident = item.getId(); addLike(idIncident, idUser); } 
public void addPost(android.internest.com.internest.Post post) { android.content.ContentValues values = new android.content.ContentValues(); values.put(android.internest.com.internest.MyDBHandler.POST_COLUMN_TITLE, java.lang.String.valueOf(post.getPtitle())); values.put(android.internest.com.internest.MyDBHandler.POST_COLUMN_BODY, java.lang.String.valueOf(post.getPbody())); values.put(android.internest.com.internest.MyDBHandler.POST_COLUMN_URL, java.lang.String.valueOf(post.getPurl())); <BUGS> android.database.sqlite.SQLiteDatabase db = getWritableDatabase(); <BUGE> db.insert(android.internest.com.internest.MyDBHandler.TABLE_POST, null, values); <BUGS> db.close(); <BUGE> } 
public void setIsAI(boolean isAI) { if ((this.isAI) && (!isAI)) { com.dyllongagnier.triad.gui.controller.Players.resetAI(); } <BUGS> boolean isDiff = isAI; <BUGE> this.isAI = isAI; <BUGS> if (isDiff && (this.gameInProgress())) <BUGE> this.takeTurn(this.currentGame); <BUGS>  <BUGE> } 
protected java.util.List<java.lang.String> splitQueryString(java.lang.String query) { <BUGS> int index = 0; <BUGE> final int qLen = query.length(); java.util.List<java.lang.String> blocks = new java.util.ArrayList<java.lang.String>(); <BUGS> while ((index + (seqSize)) < qLen) { <BUGE> blocks.add(query.substring(index, (index + (seqSize)))); <BUGS> index += window; } <BUGE> return blocks; } 
private double vectorNorm(java.util.HashMap<java.lang.String, java.lang.Double> inputVector) { double result = 0.0; for (java.lang.String key : inputVector.keySet()) { double temp = inputVector.get(key); result += temp * temp; } <BUGS> return java.lang.Math.sqrt((result / (inputVector.keySet().size()))); <BUGE> } 
private void changes(java.util.List<org.jasr.currentcy.domain.Sample> changes, java.util.List<org.jasr.currentcy.domain.Sample> samples, org.jasr.currentcy.domain.Currencies currency) { java.util.List<org.jasr.currentcy.domain.Sample> snapshots = samplerDAO.getSnapshot(currency); <BUGS> for (org.jasr.currentcy.domain.Sample sample1 : snapshots) { <BUGE> boolean result = false; <BUGS> for (org.jasr.currentcy.domain.Sample sample2 : samples) { <BUGE> result = result || (sample1.equals(sample2)); } <BUGS> if (!result) <BUGE> changes.add(sample1); <BUGS>  <BUGE> } } 
public void EntityDeathHelper(org.bukkit.event.entity.EntityDeathEvent event, int damage, java.lang.Double droprate) { java.lang.Double dropchance = prng.nextDouble(); org.bukkit.entity.Player killer = event.getEntity().getKiller(); if (dropchance >= droprate) { return ; } <BUGS> if ((plugin.configFile.getBoolean("mobpkonly", true)) && ((killer == null) || (!(killer.hasPermission("playerheads.canbeheadmob"))))) { <BUGE> return ; } event.getDrops().add(org.shininet.bukkit.playerheads.Skull.getItemStack(damage)); } 
<BUGS> public Iterator<Item> iterator() { Item[] itarray = new Item[size]; <BUGE> RandomizedQueue throwaway = new RandomizedQueue(rq); <BUGS> i = 0; <BUGE> while (!(throwaway.isEmpty())) { <BUGS> itarray[((i)++)] = throwaway.dequeue(); <BUGE> } <BUGS> return new RandomizedQueueIterator<Item>(itarray); <BUGE> } 
private void executeInThread(final java.lang.String query) { <BUGS> executorService.execute(new java.lang.Runnable() { @java.lang.Override public void run() { org.neo4j.graphdb.Result execute = db.execute(query); try { execute.resultAsString(); } catch (java.lang.Exception e) { e.printStackTrace(); hasFailed.set(true); } <BUGE> } }); } 
public T get(javax.servlet.ServletRequest request, java.util.Map<java.lang.String, java.lang.Object> expandContext) { <BUGS> org.apache.ofbiz.base.util.collections.FlexibleServletAccessor.AttributeAccessor<T> aa = new org.apache.ofbiz.base.util.collections.FlexibleServletAccessor.AttributeAccessor<T>(name, expandContext, this.attributeName, this.fma, this.needsExpand); <BUGE> return aa.get(request); } 
private void sendStateRequest(java.lang.Integer transactionId, java.util.Collection<java.lang.Integer> processes) { for (java.util.Iterator<java.lang.Integer> i = processes.iterator(); i.hasNext();) { <BUGS> send(new StateRequest(transactionId, this.id, i.next(), "", null)); <BUGE> } } 
public void checkForLevelFinished() { if (objDim.collisionCheck(player, door)) { c.resetLevel(); runTimer = false; leftPressed = false; rightPressed = false; spacePressed = false; <BUGS> settings.Settings.beatLevel(level, java.lang.Double.parseDouble(time.getText())); <BUGE> this.add(beatLevelPanel); beatLevelPanel.repaint(); beatLevelPanel.revalidate(); } } 
<BUGS> private final void drawGrid(android.graphics.Canvas canvas, int offset, int min) { <BUGE> for (int i = 0; i < ((com.gmail.wazappdotgithub.ships.common.Constants.DEFAULT_BOARD_SIZE) + 1); i++) { <BUGS> int itimeso = i * offset; <BUGE> canvas.drawLine(0, itimeso, min, itimeso, com.gmail.wazappdotgithub.ships.model.views.BoardView.foregroundPaint); canvas.drawLine(itimeso, 0, itimeso, min, com.gmail.wazappdotgithub.ships.model.views.BoardView.foregroundPaint); } <BUGS> <BUGE> } 
private static final java.lang.String computeMD5SumFile(java.io.File file) throws java.io.IOException { java.security.MessageDigest md5Digest; try { md5Digest = java.security.MessageDigest.getInstance("MD5"); } catch (java.security.NoSuchAlgorithmException e) { <BUGS> md5Digest = null; <BUGE> } try (java.io.InputStream is = new java.io.FileInputStream(file)) { new java.security.DigestInputStream(is, md5Digest); } return new java.math.BigInteger(1, md5Digest.digest()).toString(16); } 
static boofcv.alg.feature.detect.squares.SquareNode pickNot(boofcv.alg.feature.detect.squares.SquareNode target, boofcv.alg.feature.detect.squares.SquareNode child0, boofcv.alg.feature.detect.squares.SquareNode child1) { for (int i = 0; i < 4; i++) { boofcv.alg.feature.detect.squares.SquareEdge e = target.edges[i]; <BUGS> <BUGE> boofcv.alg.feature.detect.squares.SquareNode c = e.destination(target); if ((c != child0) && (c != child1)) return c;  } throw new java.lang.RuntimeException("There was no odd one out some how"); } 
public void onCraftMatrixChanged(net.minecraft.inventory.IInventory inv) { for (int i = 0; i < (inv.getSizeInventory()); i++) { <BUGS> this.te.setStackInSlot(inv.getStackInSlot(i), i); <BUGE> } <BUGS> this.craftResult.setInventorySlotContents(0, net.minecraft.item.crafting.CraftingManager.getInstance().findMatchingRecipe(this.craftMatrix, this.te.getWorldObj())); <BUGE> } 
public void markCompleted() { this.completed = true; <BUGS> int pointsToAdd = ((((int) (10)) * (Task.POINT_RANGE[((this.importance) - 1)])) * (Task.POINT_RANGE[((this.difficulty) - 1)])) * (calculateEstimatedTimeMultiplier(this.estimated_time)); <BUGE> User currentUser = User.findUser(this.user_id); int oldExp = currentUser.getUserExperience(); currentUser.updateUserExperience((oldExp + pointsToAdd)); } 
@java.lang.Override public void onClick(android.view.View v) { switch (v.getId()) { case R.id.manual : break; case R.id.parking : break; case R.id.auto : android.content.Intent changeToCamera = new android.content.Intent(getApplicationContext(), pegasus.bluetootharduino.CameraActivity.class); startActivity(changeToCamera); <BUGS> <BUGE> case R.id.advanced : android.content.Intent changeToSettings = new android.content.Intent(getApplicationContext(), pegasus.bluetootharduino.AdvSettingsActivity.class); startActivity(changeToSettings); <BUGS> <BUGE> } } 
private org.nesty.core.httpserver.rest.controller.URLController findController() { org.nesty.core.httpserver.rest.URLResource resource = org.nesty.core.httpserver.rest.URLResource.fromHttp(httpContext.getUri(), httpContext.getRequestMethod()); org.nesty.core.httpserver.rest.controller.URLController controller; if ((controller = controllerRouter.findURLController(resource)) == null) { <BUGS> sendResponse(org.nesty.core.httpserver.rest.response.HttpResponseBuilder.create(HttpResponseStatus.NOT_FOUND)); <BUGE> org.nesty.core.httpserver.HttpServerStats.incrRequestMiss(); return null; } if (!(controller.isInternal())) { org.nesty.core.httpserver.HttpServerStats.incrRequestHit(); controller.hit(); } return controller; } 
public boolean removeLine(int index) { java.util.List lines = readFromFile(); try { java.nio.file.Files.delete(path); } catch (java.io.IOException ex) { java.util.logging.Logger.getLogger(Wallet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); return false; } <BUGS> java.lang.System.out.print((("Linea a eliminar" + index) + " ")); java.lang.System.out.println(("Linea: " + (lines.get(index)))); <BUGE> lines.remove(index); writeToFile(lines); return true; } 
private void setupSandbox() { org.commcare.util.mocks.MockUserDataSandbox sandbox = new org.commcare.util.mocks.MockUserDataSandbox(mPrototypeFactory); sandbox.setAppFixtureStorageLocation(((org.javarosa.core.services.storage.IStorageUtilityIndexed<org.javarosa.core.model.instance.FormInstance>) (org.javarosa.core.services.storage.StorageManager.getStorage(FormInstance.STORAGE_KEY)))); mSandbox = sandbox; if ((mLocalUserCredentials) != null) { <BUGS> org.commcare.util.cli.ApplicationHost.restoreUserToSandbox(mSandbox, mLocalUserCredentials[0], mLocalUserCredentials[1]); <BUGE> }else if ((mRestoreFile) != null) { restoreFileToSandbox(mSandbox, mRestoreFile); }else { restoreDemoUserToSandbox(mSandbox); }  } 
public int getProgress() { <BUGS> if ((link.getSize()) > 0) { return isComplete() ? 100 : ((int) (((bytesReceived) * 100) / (link.getSize()))); <BUGE> }else { return 0; } } 
@java.lang.Override protected void onResume() { super.onResume(); if ((com.facebook.AccessToken.getCurrentAccessToken()) != null) { android.content.Intent intent = new android.content.Intent(this, map.minimap.MainActivity.class); startActivity(intent); } com.facebook.appevents.AppEventsLogger.activateApp(this); <BUGS> updateUI(); <BUGE> } 
public java.util.Set<D> computeTargets(D source) { <BUGS> if (source == (fromValue)) { <BUGE> return heros.flowfunc.Transfer.twoElementSet(source, toValue); }else <BUGS> if (source == (toValue)) { <BUGE> return java.util.Collections.emptySet(); }else { return java.util.Collections.singleton(source); }  } 
public eta.runtime.thunk.UpdateInfo push(eta.runtime.thunk.Thunk updatee, boolean marked) { eta.runtime.thunk.UpdateInfo ui; if ((free) != null) { ui = free; free = free.prev; ui.updatee = updatee; }else { ui = new eta.runtime.thunk.UpdateInfo(updatee, marked); } if ((bottom) == null) { bottom = top = ui; ui.prev = null; ui.next = null; }else { ui.prev = top; ui.next = null; top.next = ui; <BUGS> <BUGE> } return ui; } 
private void resize() { java.lang.Integer[] result = new java.lang.Integer[(stack.length) * 2]; int i; for (i = 0; i < (stack.length); i++) { result[i] = stack[i]; } while (i < (result.length)) { result[i] = null; <BUGS> <BUGE> } stack = result; } 
<BUGS> public int charCode(char c) { <BUGE> if (java.lang.Character.isLetter(c)) { return (c - 'A') + 1; } if (c == '[') return 27;  if (c == '\\') return 28;  if (c == ']') return 29;  if (c == '^') return 30;  if (c == '_') return 31;  throw new java.lang.RuntimeException(("error char: " + c)); } 
<BUGS> private static void initializeRoom(double leftDoorWidth, double rightDoorWidth, boolean hasObstacle) { <BUGE> if ((swarms.SwarmSim.roomType) == (swarms.SwarmSim.RoomType.GATES8)) { swarms.SwarmSim.buildGates8(hasObstacle); }else if ((swarms.SwarmSim.roomType) == (swarms.SwarmSim.RoomType.BASIC)) { <BUGS> swarms.SwarmSim.buildBasic(leftDoorWidth, rightDoorWidth, hasObstacle); <BUGE> }  } 
private android.view.View getViewReview(int position, android.view.View convertView) { review.ReviewCell view; <BUGS> if (convertView == null) { <BUGE> view = new review.ReviewCell(context, null); }else <BUGS> if ((convertView instanceof memorization.MemoryCell) || (convertView instanceof recall.RecallCell)) view = new review.ReviewCell(context, null); else view = ((review.ReviewCell) (convertView));  <BUGE>  view.setModel(memoryData.getText(position), recallData.getText(position)); return view; } 
public void showImage(boolean idolized, android.widget.ImageView view) { android.util.Log.d("im", ((("ID: " + (id)) + "\n URL showImage:") + (card_image))); if (idolized || (is_promo)) <BUGS> new lu.schoolido.sukutomo.sukutomo.Card.LoadImage(view).execute(card_idolized_image, card_image); <BUGE> else <BUGS> new lu.schoolido.sukutomo.sukutomo.Card.LoadImage(view).execute(card_image, card_idolized_image); <BUGE>  } 
@java.lang.Override public java.lang.String getPath(org.eclipse.debug.core.model.IBreakpoint breakpoint) throws org.eclipse.core.runtime.CoreException { org.eclipse.jdt.debug.core.IJavaBreakpoint bp = ((org.eclipse.jdt.debug.core.IJavaBreakpoint) (breakpoint)); java.lang.String type = bp.getTypeName(); <BUGS> int innerClassIndex = type.indexOf('$'); if (innerClassIndex > 0) { type = type.substring(0, innerClassIndex); <BUGE> } <BUGS> return (type.replace('.', '/')) + ".java"; <BUGE> } 
<BUGS> protected javafx.scene.shape.Shape calcBoundingBox(int size) { <BUGE> javafx.scene.shape.Circle circleBBox = new javafx.scene.shape.Circle(((this.getTranslateX()) + (size / 2)), ((this.getTranslateY()) + (size / 2)), ((size / 2) + 4)); <BUGS> circleBBox.setOpacity(100); <BUGE> return circleBBox; } 
public static boolean isTaskNameMatching(java.io.File file, java.lang.String taskName) throws edu.brandeis.cs.nlp.mae.io.MaeIOException { try { edu.brandeis.cs.nlp.mae.io.MaeXMLParser loader = new edu.brandeis.cs.nlp.mae.io.MaeXMLParser(); return loader.isTaskNameMatching(file, taskName); } catch (java.io.IOException e) { edu.brandeis.cs.nlp.mae.io.AnnotationLoader.catchIOError(file, e); } catch (org.xml.sax.SAXParseException e) { <BUGS> edu.brandeis.cs.nlp.mae.io.AnnotationLoader.catchSAXParseError(file, e); <BUGE> } catch (org.xml.sax.SAXException e) { edu.brandeis.cs.nlp.mae.io.AnnotationLoader.catchSAXError(file, e); } return false; } 
boolean styleBarCanHide() { <BUGS> if ((!(app.has(Feature.NEW_TOOLBAR))) && (!(getAlgebraDockPanel().isStyleBarPanelShown()))) { <BUGE> return false; } int itemTop = (this.isInputTreeItem()) ? main.getElement().getAbsoluteTop() : getElement().getAbsoluteTop(); return (itemTop - (getAlgebraDockPanel().getAbsoluteTop())) < 35; } 
@org.junit.Test public void findetTeilnehmerNachName() throws java.lang.Exception { final de.triology.trioexperts.teilnehmerverwaltung.domain.services.TeilnehmerlisteService teilnehmerenlisteService = new de.triology.trioexperts.teilnehmerverwaltung.domain.services.TeilnehmerlisteService(new de.triology.trioexperts.teilnehmerverwaltung.domain.services.RepositoriesFuerTests()); de.triology.trioexperts.teilnehmerverwaltung.domain.entity.Teilnehmer teilnehmer = new de.triology.trioexperts.teilnehmerverwaltung.domain.entity.Teilnehmer("Testteilnehmer"); <BUGS> assertTrue(teilnehmerenlisteService.teilnehmerHinzufuegen(teilnehmer)); <BUGE> assertEquals(teilnehmer, teilnehmerenlisteService.teilnehmerNachNameAusgeben("Testteilnehmer")); } 
public static void main(java.lang.String[] args) { <BUGS> if ((args[0]) == null) { <BUGE> java.lang.System.out.println("Usage: java -jar MSM.jar FILE_NAME"); java.lang.System.exit(1); } java.lang.String csvPath = args[0]; java.util.ArrayList<seng3011.msm.TradeRec> tradeRecs = seng3011.msm.CSVParser.CSVParse(csvPath); seng3011.msm.GenerateOrder strategy = new seng3011.msm.GenerateOrder(); java.util.ArrayList<seng3011.msm.SellOrder> sellOrders = strategy.generate(tradeRecs); java.lang.System.out.println("Proceess finished. Please check output files."); } 
public void write(java.nio.ByteBuffer ip) { try { <BUGS> android.util.Log.d(trikita.capture.VPNThread.TAG, trikita.capture.IPUtils.hexdump("INCOMING IP PACKET:", ip)); <BUGE> mVpnOut.write(ip); if (ip.hasRemaining()) { trikita.capture.IPUtils.panic("incomplete write to VPN fd"); } } catch (java.io.IOException e) { trikita.capture.IPUtils.panic(("exception in write to VPN fd" + (e.getMessage()))); } } 
<BUGS> public int getByIndex(build.games.wraithaven.gui.MenuComponentHeirarchy root, int index, int pos, build.games.wraithaven.gui.MenuComponentHeirarchy[] out) { <BUGE> if (index == pos) { out[0] = root; return -1; } pos++; if (!(root.isCollapsed())) { for (build.games.wraithaven.gui.MenuComponentHeirarchy c : root.getChildren()) { pos = getByIndex(c, index, pos, out); if (pos == (-1)) { return -1; } } } return pos; } 
public void makeHeader() { file.writeIndent("local lpeg = require \"lpeg\""); nez.util.UList<nez.expr.Rule> list = peg.getDefinedRuleList(); for (nez.expr.Rule r : list) { <BUGS> java.lang.String localName = r.getLocalName(); file.writeIndent((((("local " + localName) + " = lpeg.V\"") + localName) + "\"")); <BUGE> } } 
private java.lang.String arrayToString(char[][] array) { java.lang.StringBuilder sb = new java.lang.StringBuilder(); for (int i = 0; i < (array.length); i++) { for (int j = 0; j < (array[0].length); j++) { sb.append(array[i][j]); } <BUGS> sb.append("/n"); <BUGE> } return sb.toString(); } 
private void broadcastUpdate(final java.lang.String action, final android.bluetooth.BluetoothGattCharacteristic characteristic) { final android.content.Intent intent = new android.content.Intent(action); if (characteristic == null) { <BUGS> sendBroadcast(intent); <BUGE> return ; } android.util.Log.d(DEBUG_TAG, characteristic.getStringValue(0)); if (com.example.mobile.smartcycledemo.bluetooth.BluetoothLeService.HEART_BEAT_UUID.equals(characteristic.getUuid())) { java.lang.String value = characteristic.getStringValue(0); intent.putExtra(com.example.mobile.smartcycledemo.bluetooth.BluetoothLeService.EXTRA_DATA, value); <BUGS> sendBroadcast(intent); <BUGE> } } 
@java.lang.Override protected void initEvent() { mHistoryContactRecyclerView.setLayoutManager(new android.support.v7.widget.LinearLayoutManager(getActivity())); mHistoryContactRecyclerView.setAdapter(mAdapter); mSwipeRefreshLayout.setColorSchemeColors(android.support.v4.content.ContextCompat.getColor(getActivity(), R.color.colorPrimary), android.support.v4.content.ContextCompat.getColor(getActivity(), R.color.colorAccent), android.support.v4.content.ContextCompat.getColor(getActivity(), R.color.colorPrimaryDark)); mSwipeRefreshLayout.setOnRefreshListener(new android.support.v4.widget.SwipeRefreshLayout.OnRefreshListener() { @java.lang.Override public void onRefresh() { mPresenter.loadHistoryContact(); } }); <BUGS> <BUGE> } 
public org.infobip.mobile.messaging.MobileMessagingCore build() { <BUGS> if (!(org.infobip.mobile.messaging.MobileMessagingCore.getApplicationCode(context).equals(applicationCode))) { <BUGE> org.infobip.mobile.messaging.MobileMessagingCore.cleanupSettings(context); } org.infobip.mobile.messaging.MobileMessagingCore mobileMessagingCore = new org.infobip.mobile.messaging.MobileMessagingCore(context); mobileMessagingCore.setNotificationSettings(notificationSettings); mobileMessagingCore.setApplicationCode(applicationCode); org.infobip.mobile.messaging.MobileMessagingCore.instance = mobileMessagingCore; mobileMessagingCore.playServicesSupport.checkPlayServices(context); return mobileMessagingCore; } 
private void reloadAll() { <BUGS> loadStudent(); <BUGE> switch (selectedNav) { case ZConstants.NAV_DASHBOARD : execDashboard(); break; case ZConstants.NAV_ALL_BOOKS : execAllBooks(); break; case ZConstants.NAV_READ_BOOK : break; case ZConstants.NAV_DISCOVER_BOOK : break; case ZConstants.NAV_FAVORITES : execFavorite(); break; } } 
@java.lang.Override public boolean hasNext() { <BUGS> <BUGE> if ((lastPolled) != null) { <BUGS> if (isEmpty()) { return false; } <BUGE> if ((((lastPolled) == (second)) && ((second.plug) == null)) && ((third.plug) == null)) { return false; } return !(((lastPolled) == (third)) && ((third.plug) == null)); }else { return false; } } 
@java.lang.Override protected void startRefresh() { if ((((mRefreshStatus) != (RefreshStatus.REFRESHING)) && ((mRefreshDelegate) != null)) && ((mHTViewHolder) != null)) { mRefreshStatus = RefreshStatus.REFRESHING; processRefreshStatusChanged(); mRefreshDelegate.onRefresh(); <BUGS> changeRefreshViewPositionWithAnimation(0, null); <BUGE> } } 
@java.lang.Override public void actionPerformed(java.awt.event.ActionEvent e) { name.kion.twipstr.gui.LinkLabel info = new name.kion.twipstr.gui.LinkLabel(name.kion.twipstr.Constants.APP_INFO_NAME_AND_VERSION, name.kion.twipstr.Constants.APP_INFO_URL); name.kion.twipstr.gui.LinkLabel author = new name.kion.twipstr.gui.LinkLabel(name.kion.twipstr.Constants.APP_INFO_AUTHOR, name.kion.twipstr.Constants.APP_INFO_AUTHOR_URL); <BUGS> javax.swing.JLabel help = new javax.swing.JLabel(name.kion.twipstr.Constants.APP_INFO_HELP); javax.swing.JOptionPane.showMessageDialog(frameTwipstr, new java.awt.Component[]{ info , author , help }, "Twipstr :: About & Help", javax.swing.JOptionPane.PLAIN_MESSAGE, infoIcon); <BUGE> statusTextArea.requestFocusInWindow(); } 
@org.springframework.web.bind.annotation.RequestMapping(value = "/storeProducts") <BUGS> public org.springframework.web.servlet.ModelAndView listtabUsers(com.fh.entity.Page page) throws java.lang.Exception { <BUGE> org.springframework.web.servlet.ModelAndView mv = this.getModelAndView(); com.fh.util.PageData pd = this.getPageData(); pd.put("Dept_ID", getDepId()); java.util.List<com.fh.util.PageData> productsList = clientsService.listStock(pd); mv.setViewName("warehouse/stock/stockpileList"); mv.addObject("productsList", productsList); java.lang.System.out.println(("testlist:================" + (productsList.size()))); mv.addObject("pd", pd); return mv; } 
@java.lang.Override public void onActivityCreated(android.os.Bundle savedInstanceState) { super.onActivityCreated(savedInstanceState); android.widget.ListView myListView = ((android.widget.ListView) (getActivity().findViewById(R.id.equipmentList))); <BUGS> <BUGE> int layoutID = R.layout.list_item; <BUGS> connectToJSON("?sort_by=it_no"); <BUGE> myAdapterInstance = new com.example.jim.myapplication.EquipmentAdapter(getActivity(), layoutID, equipmentList); myListView.setAdapter(myAdapterInstance); } 
static java.util.List<com.myjeeva.digitalocean.pojo.Key> getAvailableKeys(java.lang.String authToken) throws com.myjeeva.digitalocean.exception.DigitalOceanException, com.myjeeva.digitalocean.exception.RequestUnsuccessfulException { com.myjeeva.digitalocean.impl.DigitalOceanClient client = new com.myjeeva.digitalocean.impl.DigitalOceanClient(authToken); java.util.List<com.myjeeva.digitalocean.pojo.Key> availableKeys = new java.util.ArrayList<com.myjeeva.digitalocean.pojo.Key>(); com.myjeeva.digitalocean.pojo.Keys keys; <BUGS> int page = 1; <BUGE> do { <BUGS> <BUGE> keys = client.getAvailableKeys(page); availableKeys.addAll(keys.getKeys()); <BUGS> page += 1; } while ((keys.getMeta().getTotal()) > page ); <BUGE> return availableKeys; } 
@java.lang.Override public java.lang.String toString() { final java.lang.StringBuilder builder = new java.lang.StringBuilder(); <BUGS> for (final com.rider.jbencode.types.BencodingString string : this.keySet()) { <BUGE> builder.append(string).append(" : ").append(get(string)).append('\n'); } return builder.toString(); } 
@javax.ws.rs.POST @javax.ws.rs.Path(value = "/getUserFromToken") @javax.ws.rs.Consumes(value = MediaType.APPLICATION_JSON) public list.nice.ajax.Response getUserFromToken(javax.xml.bind.JAXBElement<list.nice.dal.dto.Token> token) throws java.io.UnsupportedEncodingException, java.security.GeneralSecurityException { list.nice.dal.dto.Token tokenReal = token.getValue(); <BUGS> return list.nice.ajax.Response.status(Response.Status.OK).header("Access-Control-Allow-Origin", "*").entity(list.nice.bll.UserBLL.wipeSensitiveFields(list.nice.bll.UserBLL.getUser(tokenReal.selector, tokenReal.validator))).build(); <BUGE> } 
@java.lang.Override public void startEdit() { super.startEdit(); selected = treeView.getSelectionModel().getSelectedItem(); graphic = selected.getGraphic(); beforePath = selected.getValue(); <BUGS> if ((editable) == null) { createTextField(); } <BUGE> selected.setValue(java.nio.file.Paths.get("")); selected.setGraphic(editable); editable.selectAll(); } 
public void onClick(android.view.View view) { java.lang.String newYaxis = ((java.lang.String) (yAxisSpinner.getSelectedItem())); histogram.removeAllSeries(); <BUGS> if (newYaxis == "Virus") { <BUGE> }else { } java.lang.String titleToShow = ((reportYear + " ") + newYaxis) + " Histogram"; histogramTitle.setText(titleToShow); } 
private static int addArguments(java.lang.String[] args) { int sum = 0; if ((args.length) < 1) return 0; else if (args[0].equals("-")) <BUGS> <BUGE> for (java.lang.String arg : args) sum += java.lang.Integer.valueOf(arg);    return sum; } 
<BUGS> private void presentNotificationsList(java.lang.String url, final org.apache.cordova.CallbackContext callbackContext) { <BUGE> if (0 == (com.vidinoti.android.vdarsdk.VDARSDKController.getInstance().getPendingNotifications().size())) { callbackContext.error("empty"); }else { callbackContext.success(); com.vidinoti.android.vdarsdk.VDARSDKController.getInstance().presentNotificationsList(); } } 
<BUGS> public void sendEmail(java.util.List<java.lang.String> institutionCodes, java.lang.Integer totalRecordCount, java.lang.Integer failedRecordCount, java.lang.String requestingInstitutionCode, java.lang.String transmissionType, java.lang.String dateTimeStringForFolder, java.lang.String toEmailAddress) { <BUGE> org.recap.camel.EmailPayLoad emailPayLoad = new org.recap.camel.EmailPayLoad(); emailPayLoad.setInstitutions(institutionCodes); <BUGS> emailPayLoad.setLocation(getLocation(transmissionType, requestingInstitutionCode, dateTimeStringForFolder)); <BUGE> emailPayLoad.setCount(totalRecordCount); emailPayLoad.setFailedCount(failedRecordCount); emailPayLoad.setTo(toEmailAddress); producer.sendBody(ReCAPConstants.EMAIL_Q, emailPayLoad); } 
@java.lang.Override public void createHaver(@android.support.annotation.NonNull long desireId, @android.support.annotation.NonNull de.fau.cs.mad.wanthavers.common.Haver haver, @android.support.annotation.NonNull wanthavers.mad.cs.fau.de.wanthavers_android.data.source.haver.CreateHaverCallback callback) { try { <BUGS> de.fau.cs.mad.wanthavers.common.Haver ret = haverEndpoint.createHaver(desireId, haver, null); <BUGE> callback.onHaverCreated(ret); } catch (java.lang.Throwable t) { callback.onCreateFailed(); } } 
public java.lang.String getSlice(int startLine, int endLine) { <BUGS> java.util.List<java.lang.String> lines = cl.getCodeSlice((startLine - 1), endLine); <BUGE> java.lang.StringBuilder sb = new java.lang.StringBuilder(); for (java.lang.String line : lines) { if ((sb.length()) != 0) { sb.append(PMD.EOL); } sb.append(line); } return sb.toString(); } 
@java.lang.SuppressWarnings(value = "unchecked") @javax.annotation.Nullable @java.lang.Override public <T extends com.github.rinde.rinsim.core.model.Model<?>> T tryGetModel(java.lang.Class<T> clazz) { for (final com.github.rinde.rinsim.core.model.Model<?> model : registry.values()) { if (clazz.isInstance(model)) { return ((T) (model)); } } <BUGS> throw new java.lang.IllegalArgumentException(("There is no model of type: " + clazz)); <BUGE> } 
@org.junit.Test public void testBasic4_BigString_CaseInsensitive_ExpectsTrue() { java.lang.String s1 = "ABCDEFGhijkLMNOpqrstuvwxyz1234567890!"; java.lang.String s2 = "hijkLMNOPQrstuvwxyZ1234567890!abcdeFG"; boolean areRotated = p8.isRotation(s1, s2); assertTrue(areRotated); areRotated = p8.isRotation(s2, s1); <BUGS> assertTrue(output); <BUGE> } 
public void onUriChange(android.net.Uri locationWithDateUri) { android.util.Log.v(LOG_TAG, "onUriChange"); if (locationWithDateUri != null) { _locationWithDateUri = locationWithDateUri; if ((getLoaderManager()) == null) { android.util.Log.v(LOG_TAG, "onUriChange: null"); }else { android.util.Log.v(LOG_TAG, "onUriChange: !null"); <BUGS> <BUGE> } <BUGS> getLoaderManager().restartLoader(LOADER_ID, null, this); <BUGE> } } 
public java.lang.String getShortLogMessage() { <BUGS> int args = method.getParameterTypes().length; <BUGE> return (((((getBeanType().getName()) + "#") + (this.method.getName())) + "[") + args) + " args]"; } 
@java.lang.Override public java.util.ArrayList<cg.group4.rewards.collectibles.Collectible> sortCollectibles(final java.util.HashSet<cg.group4.rewards.collectibles.Collectible> set) { java.util.ArrayList<cg.group4.rewards.collectibles.Collectible> sortedList = new java.util.ArrayList<cg.group4.rewards.collectibles.Collectible>(set.size()); for (cg.group4.rewards.collectibles.Collectible c : set) { if (sortedList.isEmpty()) { sortedList.add(c); <BUGS> <BUGE> } <BUGS> sortedList.add(findPosition(c, sortedList), c); <BUGE> } return sortedList; } 
public static void main(java.lang.String[] args) { Interpolation interpolation = new Interpolation(); double second = interpolation.secondOrder(); double third = interpolation.thirdOrder(); <BUGS> double error = third - second; <BUGE> java.lang.System.out.println(("Second order value : " + second)); java.lang.System.out.println(("Third order value : " + third)); <BUGS> <BUGE> java.lang.System.out.println(("Error : " + error)); } 
public static void test_044() { framework.common.GalleryCommon.deleteMoreGallery(); framework.common.GalleryCommon.clickGallery(); <BUGS> check(testcase.Object_ResourceId, testcase.Operation_WaitForExists, "android:id/image", "20000"); <BUGE> excute(testcase.Object_ResourceId, testcase.Operation_ClickWait, "android:id/image"); if (!((java.lang.Boolean) (excute(testcase.Object_Text, testcase.Operation_Exists, "蓝牙")))) { excute(testcase.Object_Device, testcase.Operation_PressBack); excute(testcase.Object_ResIdIndex, testcase.Operation_ClickWait, "android:id/default_activity_button", "1"); }else { excute(testcase.Object_Text, testcase.Operation_ClickWait, "蓝牙"); } check(testcase.Object_Text, testcase.Operation_checkExist, "开启"); } 
private java.util.Calendar mergeDate(java.util.Date d, java.sql.Time t) { java.util.Calendar dCal = java.util.Calendar.getInstance(); dCal.setTime(d); <BUGS> <BUGE> java.util.Calendar tCal = java.util.Calendar.getInstance(); tCal.setTime(t); dCal.set(java.util.Calendar.HOUR_OF_DAY, tCal.get(java.util.Calendar.HOUR_OF_DAY)); dCal.set(java.util.Calendar.MINUTE, tCal.get(java.util.Calendar.MINUTE)); dCal.set(java.util.Calendar.SECOND, tCal.get(java.util.Calendar.SECOND)); return dCal; } 
@java.lang.Override protected void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity http) throws java.lang.Exception { <BUGS> http.authorizeRequests().anyRequest().authenticated().and().formLogin().loginPage("/login").failureUrl("/login?error").permitAll().and().logout().permitAll(); <BUGE> http.addFilterBefore(myFilterSecurityInterceptor, org.springframework.security.web.access.intercept.FilterSecurityInterceptor.class); } 
@java.lang.Override public javax.jms.Session createSession(boolean transacted, int ackMode) throws javax.jms.JMSException { <BUGS> org.apache.activemq.jms.pool.PooledSession result; result = ((org.apache.activemq.jms.pool.PooledSession) (pool.createSession(transacted, ackMode))); <BUGE> loanedSessions.add(result); result.addSessionEventListener(this); return result; } 
@java.lang.Override public boolean equals(java.lang.Object obj) { if (!(obj instanceof org.eclipse.equinox.http.servlet.internal.registration.ListenerRegistration)) { return false; } org.eclipse.equinox.http.servlet.internal.registration.ListenerRegistration listenerRegistration = ((org.eclipse.equinox.http.servlet.internal.registration.ListenerRegistration) (obj)); <BUGS> return super.getT().equals(listenerRegistration.getT()); <BUGE> } 
public void parseAdd(java.lang.String command) throws java.lang.Exception { CO.setCommandType(parser.Parser.ADD_INDEX); parser.CommandParser AP = new parser.AddParser(); command = command.replaceFirst(Constants.REGEX_ADD, "").trim(); TO = AP.process(command); TO.setTaskId(_taskId); <BUGS> <BUGE> CO.setTaskObject(TO); <BUGS> setCategory(); <BUGE> AP.reset(); } 
@org.springframework.web.bind.annotation.CrossOrigin(origins = coursemanager.configuration.Configuration.CORS_DOMAIN) @org.springframework.web.bind.annotation.RequestMapping(value = "/count", method = org.springframework.web.bind.annotation.RequestMethod.GET) public java.util.HashMap<java.lang.String, java.lang.Object> count() { coursemanager.services.CourseService courseService = new coursemanager.services.CourseService(); java.lang.Integer numberOfCourses = courseService.getNumberOfCourses(); java.util.HashMap<java.lang.String, java.lang.Object> response = new java.util.HashMap<>(); response.put("pageSize", CourseService.PAGE_SIZE); response.put("numberOfCourses", numberOfCourses); <BUGS> response.put("numberOfPages", ((int) (java.lang.Math.ceil((numberOfCourses / (coursemanager.services.CourseService.PAGE_SIZE)))))); <BUGE> return response; } 
public static void writeDatasetToFile(java.lang.String fileName, int n) throws java.io.IOException { java.io.File file = new java.io.File(fileName); java.io.FileOutputStream fos = new java.io.FileOutputStream(file); java.io.BufferedWriter bw = new java.io.BufferedWriter(new java.io.OutputStreamWriter(fos)); <BUGS> for (int i = 0; i <= n; i++) { <BUGE> bw.write(generator.PuzzleGenerator.encode(generator.PuzzleGenerator.generate())); bw.newLine(); } bw.close(); } 
@java.lang.Override protected java.util.List<com.jojo.googlenewsreader.pojo.Article> doInBackground(java.lang.Void... params) { java.util.List<com.jojo.googlenewsreader.pojo.Article> articles = new java.util.ArrayList<>(); try { <BUGS> if (!(query.equals(com.jojo.googlenewsreader.asyncTasks.LoadArticleAsyncTask.DEFAULT_RESEARCH_ARGUMENT))) { <BUGE> articles = searchFromQuery(com.jojo.googlenewsreader.asyncTasks.LoadArticleAsyncTask.DEFAULT_RESEARCH); }else { query = java.net.URLEncoder.encode(query, "UTF-8"); articles = searchFromQuery(((com.jojo.googlenewsreader.asyncTasks.LoadArticleAsyncTask.API_URL) + (query))); } } catch (java.io.UnsupportedEncodingException e) { e.printStackTrace(); } return articles; } 
public int getRangePixelCount(android.graphics.Rect range) { int top = range.top; int bottom = range.bottom; int left = range.left; int right = range.right; <BUGS> return (pixelCount[top][left]) - (pixelCount[bottom][right]); <BUGE> } 
@java.lang.Override public java.lang.Boolean necesitaAutorizacion(java.lang.Integer idPractica, java.lang.Integer idPlan) throws ar.edu.ungs.commons.exception.BusinessException { try { ar.edu.ungs.persistence.entities.practica.CoberturaID id = new ar.edu.ungs.persistence.entities.practica.CoberturaID(); id.setPlan(idPlan); id.setPractica(idPractica); ar.edu.ungs.persistence.entities.practica.Cobertura cobertura = coberturaDao.findById(id); <BUGS> return cobertura.getRequiereAutorizacion(); <BUGE> } catch (ar.edu.ungs.commons.exception.DaoException e) { throw new ar.edu.ungs.commons.exception.BusinessException(e); } } 
public static void putObjectWrapper$$PHOSPHORTAGGED(sun.misc.Unsafe unsafe, java.lang.Object o, int key_tag, long key, java.lang.Object val, java.lang.Class c) { <BUGS> if ((val != null) && (!(c.isAssignableFrom(val.getClass())))) { <BUGE> val = ((edu.columbia.cs.psl.phosphor.instrumenter.LazyArrayIntTags) (val)).getVal(); } unsafe.putObject(o, key, val); } 
@java.lang.Override protected java.util.List<com.dotmarketing.business.Permission> getInheritablePermissions(com.dotmarketing.business.Permissionable permissionable, boolean bitPermissions) throws com.dotmarketing.exception.DotDataException { java.util.List<com.dotmarketing.business.Permission> bitPermissionsList = permissionCache.getPermissionsFromCache(permissionable.getPermissionId()); <BUGS> if ((bitPermissionsList == null) || (bitPermissionsList.isEmpty())) { <BUGE> bitPermissionsList = loadPermissions(permissionable); } if (!bitPermissions) return convertToNonBitPermissions(filterOnlyInheritablePermissions(bitPermissionsList, permissionable.getPermissionId())); else return filterOnlyInheritablePermissions(bitPermissionsList, permissionable.getPermissionId());  } 
public void hideFragment(android.support.v4.app.Fragment fragment, android.support.v4.app.Fragment fragment1) { if ((null != fragment) && (null != fragment1)) { fragmentTransaction = getSupportFragmentManager().beginTransaction(); fragmentTransaction.hide(fragment).hide(fragment1); <BUGS> <BUGE> } } 
public static java.util.List<com.davidbalazs.chess.model.FriendlyPiecePosition> dummyChessPosition3() { <BUGS> return java.util.Arrays.asList(new com.davidbalazs.chess.model.FriendlyPiecePosition(com.davidbalazs.chess.model.FriendlyPieceType.BLACK_KING, 7, 3), new com.davidbalazs.chess.model.FriendlyPiecePosition(com.davidbalazs.chess.model.FriendlyPieceType.WHITE_KING, 2, 1), new com.davidbalazs.chess.model.FriendlyPiecePosition(com.davidbalazs.chess.model.FriendlyPieceType.WHITE_QUEEN, 3, 7), new com.davidbalazs.chess.model.FriendlyPiecePosition(com.davidbalazs.chess.model.FriendlyPieceType.WHITE_PAWN, 4, 6)); <BUGE> } 
private int maxIndex(int[] arr) { int maxIndex = 0; <BUGS> for (int i = 1; i < (arr.length); i++) { if ((arr[i]) > (arr[maxIndex])) { <BUGE> maxIndex = i; } } return maxIndex; } 
boolean compareArray(int[] A, int[] B) { <BUGS> if ((A.length) != (B.length)) { <BUGE> return false; } <BUGS> for (int i = 0; i < (A.length); i++) { <BUGE> if ((A[i]) != (B[i])) { return false; } } return true; } 
private void onEmojiconsPressed() { <BUGS> android.view.View view = this.getCurrentFocus(); if (view != null) { android.view.inputmethod.InputMethodManager imm = ((android.view.inputmethod.InputMethodManager) (getSystemService(Context.INPUT_METHOD_SERVICE))); imm.hideSoftInputFromWindow(view.getWindowToken(), 0); } <BUGE> if ((emojiconsViewGroup.getVisibility()) == (android.view.View.VISIBLE)) { emojiconsViewGroup.setVisibility(View.GONE); }else { <BUGS> <BUGE> emojiconsViewGroup.setVisibility(View.VISIBLE); } } 
public void gpsDisconnected() { android.util.Log.d("MainActivity", ((this.toString()) + " gps disconnect signal")); <BUGS> com.example.jonathan.myapplication.Configuration.setLocationHandler(null); if ((com.example.jonathan.myapplication.Configuration.getLockService()) != null) com.example.jonathan.myapplication.Configuration.getLockService().onDestroy();  <BUGE> if (!(com.example.jonathan.myapplication.Configuration.getTerminate())) { android.widget.Toast.makeText(this, "GPS Location Service has Disconnected.  Please re-login.", Toast.LENGTH_LONG).show(); android.content.Intent intent = new android.content.Intent(this, com.example.jonathan.myapplication.MainActivity.class); startActivity(intent); } } 
private boolean canAttack(final me.NoChance.PvPManager.PvPlayer attacker, final me.NoChance.PvPManager.PvPlayer defender) { <BUGS> if (!((attacker.isInCombat()) && (defender.isInCombat()))) return false; <BUGE>  <BUGS> return dependencyManager.canAttack(attacker.getPlayer(), defender.getPlayer()); <BUGE> } 
public java.lang.Object deserialize(java.io.InputStream input) { java.lang.Object result = null; try { com.caucho.hessian.io.Hessian2Input hi = new com.caucho.hessian.io.Hessian2Input(input); hi.startMessage(); result = hi.readObject(); hi.completeMessage(); hi.close(); <BUGS> <BUGE> } catch (java.io.IOException e) { e.printStackTrace(); } return result; } 
private void comboBoxFieldActionPerformed(java.awt.event.ActionEvent evt) { java.lang.System.out.println(("here" + (comboBoxStartToSearch))); <BUGS> java.lang.String searchColName = comboBoxField.getSelectedItem().toString(); <BUGE> searchValue = comboBoxValue.getSelectedItem().toString(); java.lang.String tabName = getSelectedTabName(); updateComboList(searchColName, tabName); comboBoxValue.setSelectedItem(searchValue); comboBoxStartToSearch = true; } 
public void run() { while (true) { try { java.net.Socket cs = ServerChat.accept(); chat.Server.FirUtilizator t = new chat.Server.FirUtilizator(cs); t.start(); threads.add(t); } catch (java.io.IOException ex) { java.lang.System.out.println("Oops"); <BUGS> <BUGE> } } } 
@java.lang.Override public void loadEmails(java.util.List<me.jamiethompson.forgeaccount.Data.EmailMessage> emails) { if (!(emails.isEmpty())) { emailList.setAdapter(null); this.emailMessages = emails; } hideEmailsProgress(); <BUGS> me.jamiethompson.forgeaccount.ListView.EmailListAdapter adapter = new me.jamiethompson.forgeaccount.ListView.EmailListAdapter(getContext(), R.layout.item_email, this.emailMessages); <BUGE> emailList.setAdapter(adapter); me.jamiethompson.forgeaccount.TabActivity.GeneratorFragment.setListViewHeightBasedOnChildren(emailList); } 
public void error(org.slf4j.Logger destLogger, java.lang.String message, java.lang.Object... args) { long nowMs = (java.lang.System.nanoTime()) / 1000000L; long elapsed = nowMs - (lastLoggedTime); if (elapsed > (minDelay)) { <BUGS> destLogger.warn(message, args); <BUGE> lastLoggedTime = nowMs; } } 
public static org.sosy_lab.cpachecker.cpa.policyiteration.PolicyAbstractedState empty(org.sosy_lab.cpachecker.cfa.model.CFANode node, org.sosy_lab.java_smt.api.BooleanFormula pPredicate, org.sosy_lab.cpachecker.cpa.policyiteration.StateFormulaConversionManager pManager) { <BUGS> return new org.sosy_lab.cpachecker.cpa.policyiteration.PolicyAbstractedState(node, com.google.common.collect.ImmutableMap.of(), (-1), pManager, org.sosy_lab.cpachecker.util.predicates.pathformula.SSAMap.emptySSAMap(), org.sosy_lab.cpachecker.util.predicates.pathformula.pointeraliasing.PointerTargetSet.emptyPointerTargetSet(), pPredicate, null, null); <BUGE> } 
@java.lang.Override public void onBackPressed() { android.support.v4.app.Fragment fm = getSupportFragmentManager().findFragmentById(R.id.frame_container); if (fm instanceof com.lucazanrosso.anguriara.CalendarFragment) finish(); else if (!(fm instanceof com.lucazanrosso.anguriara.DayFragment)) getSupportFragmentManager().popBackStack("secondary", FragmentManager.POP_BACK_STACK_INCLUSIVE); else getSupportFragmentManager().popBackStack();   <BUGS> com.lucazanrosso.anguriara.MainActivity.toolbar.setTitle(getResources().getString(R.string.calendar)); <BUGE> } 
@java.lang.Override protected void onStop() { org.acra.ACRA.getErrorReporter().putCustomData("MainActivity.onStop()", "callback method was invoked"); android.util.Log.i(ro.pub.acs.mobiway.gui.main.MainActivity.TAG, "onStop() callback method was invoked"); <BUGS> stopLocationUpdates(); <BUGE> if (((googleApiClient) != null) && (googleApiClient.isConnected())) { <BUGS> <BUGE> googleApiClient.disconnect(); } super.onStop(); } 
<BUGS> public void putAll(java.util.HashMap<java.lang.String, K> add) { java.util.Iterator<java.util.Map.Entry<java.lang.String, K>> entryIt = add.entrySet().iterator(); while (entryIt.hasNext()) { java.util.Map.Entry<java.lang.String, K> entry = entryIt.next(); <BUGE> put(entry.getKey(), entry.getValue()); <BUGS> } <BUGE> } 
public void injectCacheName(java.lang.Object obj, java.lang.String cacheName) throws org.apache.ignite.IgniteCheckedException { assert obj != null; if (log.isDebugEnabled()) log.debug(("Injecting cache name: " + obj));  obj = unwrapTarget(obj); <BUGS> inject(obj, GridResourceIoc.ResourceAnnotation.CACHE_NAME, null, null, null); <BUGE> } 
public final BinaryNum shiftLeft() { final boolean[] newBits = new boolean[bits.length]; for (int i = 1; i < (bits.length); i++) { newBits[(i - 1)] = bits[i]; } <BUGS> newBits[bits.length] = false; <BUGE> return new BinaryNum(newBits); } 
@java.lang.Override public com.spanish_inquisition.battleship.server.game_states.GameState transform() { com.spanish_inquisition.battleship.server.Player currentPlayer = getCurrentPlayer(); if (!(shootIfPlayerSentValidMessage(currentPlayer))) { <BUGS> return this; <BUGE> } return !(didPlayerWon(currentPlayer)) ? new com.spanish_inquisition.battleship.server.game_states.PlayerActionState(players, requestBus) : new com.spanish_inquisition.battleship.server.game_states.ResultState(players, requestBus); } 
public void playSong() { if ((mState) == (org.williamwong.spotifystreamer.services.MusicService.State.PAUSED)) { mMediaPlayer.start(); <BUGS> <BUGE> return ; } if ((mState) == (org.williamwong.spotifystreamer.services.MusicService.State.PLAYING)) { stopSong(); } try { mMediaPlayer.setDataSource(mTrackModels.get(mCurrentTrack).getPreviewUrl()); } catch (java.io.IOException e) { e.printStackTrace(); } mMediaPlayer.prepareAsync(); mState = org.williamwong.spotifystreamer.services.MusicService.State.PREPARING; } 
@java.lang.Override <BUGS> public io.netty.channel.ChannelHandler call(final io.netty.channel.Channel channel, java.lang.Integer allIdleTimeout) { <BUGE> return new io.netty.handler.timeout.IdleStateHandler(0, 0, allIdleTimeout) { @java.lang.Override protected void channelIdle(io.netty.channel.ChannelHandlerContext ctx, io.netty.handler.timeout.IdleStateEvent evt) throws java.lang.Exception { if (org.jocean.http.util.Nettys.LOG.isInfoEnabled()) { org.jocean.http.util.Nettys.LOG.info("channelIdle:{} , close channel[{}]", evt.state().name(), ctx.channel()); } ctx.channel().close(); } }; } 
public byte[] downloadTMDToByteArray(long titleID, int version) throws java.io.IOException { java.lang.String version_suf = ""; if (version > 0) version_suf = "." + version;  java.lang.String URL = ((((de.mas.jnustool.util.Downloader.URL_BASE) + "/") + (java.lang.String.format("%016X", titleID))) + "/tmd") + version_suf; <BUGS> java.lang.System.out.println(URL); <BUGE> return downloadFileToByteArray(URL); } 
public java.util.ArrayList<java.lang.String> getModulePoolPaths() { java.util.ArrayList<java.lang.String> output = new java.util.ArrayList<java.lang.String>(); if ((listofPredecessors.size()) == 0) { return this.getCurrentFilePath(); }else { for (Runner.ModulePool mp : listofPredecessors) { <BUGS> output.addAll(mp.getCurrentFilePath()); <BUGE> } } return output; } 
protected void appendCgroupsCmds(java.lang.StringBuilder cmdLine) { if (cfg.getFrameworkSuperUser().isPresent()) { cmdLine.append(" export TASK_DIR=`basename $PWD`&&"); <BUGS> appendSudo(cmdLine); <BUGE> appendSudo(cmdLine); cmdLine.append((("chown " + (cfg.getFrameworkUser().get())) + " ")); cmdLine.append(cfg.getCGroupPath()); cmdLine.append("/cpu/mesos/$TASK_DIR &&"); }else { org.apache.myriad.scheduler.NMExecutorCLGenImpl.LOGGER.info("frameworkSuperUser not enabled ignoring cgroup configuration"); } } 
public java.awt.Component prepareRenderer(javax.swing.table.TableCellRenderer renderer, int row, int column) { java.awt.Component c = super.prepareRenderer(renderer, row, column); if (!(isRowSelected(row))) <BUGS> c.setBackground(((row % 2) == 0 ? getBackground() : java.awt.Color.LIGHT_GRAY)); <BUGE>  return c; } 
@org.junit.BeforeClass public static void initialize() { Testing.Hub.start(); <BUGS> <BUGE> Hub.logger.info("Begin Controller Unit Tests... \n"); try { <BUGS> Testing.DeleteController.run("500"); <BUGE> Testing.DeleteController.run("1000"); <BUGS> java.lang.String[] fields = new java.lang.String[]{ "id" , "blade_size" , "start_date" , "hours_used" }; java.lang.String[] values = new java.lang.String[]{ "1000" , "11" , "2012-08-06 08:11:12" , "30" }; <BUGE> Testing.AddController.run(fields, values); } catch (java.sql.SQLException e) { } } 
@java.lang.Override protected org.eclipse.emf.ecore.EObject getEObjectByID(java.lang.String id) { org.eclipse.emf.ecore.EObject idObject = super.getEObjectByID(id); if (idObject == null) { for (org.eclipse.emf.ecore.EObject eObject : getContents()) { if (eObject instanceof no.hal.pgo.osm.OSM) { no.hal.pgo.osm.Tagged tagged = no.hal.pgo.osm.util.OsmResourceImpl.getTagged(id, eObject, OsmPackage.eINSTANCE.getOSM_Nodes(), OsmPackage.eINSTANCE.getOSM_Relations()); if (tagged != null) { return tagged; } } } } <BUGS> return null; <BUGE> } 
public void addBatch(java.lang.String batchId) { net.smartcosmos.android.ProfilesTransactionRequest.ObjectEntity[] batchObjects = new net.smartcosmos.android.ProfilesTransactionRequest.ObjectEntity[1]; <BUGS> <BUGE> batchObjects[0].objectUrn = (net.smartcosmos.android.ProfilesTransactionRequest.PREFIX_BATCH) + batchId; batchObjects[0].type = net.smartcosmos.android.ProfilesTransactionRequest.TYPE_BATCH; batchObjects[0].name = batchId; addObjects(batchObjects); } 
private <T> T getValue(java.lang.String model, java.lang.String propertyName, java.lang.String subPropertyName, T defaultValue) { com.dd.plist.NSDictionary dictionary = getValue(model, propertyName, null); if ((dictionary != null) && (dictionary.containsKey(subPropertyName))) { <BUGS> return ((T) (dictionary.get(subPropertyName))); <BUGE> } return defaultValue; } 
public void updateBoardContent(char[][] board) { <BUGS> <BUGE> for (int i = 0; i < (boardContent.length); i++) { for (int j = 0; j < (boardContent[0].length); j++) { boardContent[i][j] = board[i][j]; } } } 
public void testIterFilterLimitOffset() { <BUGS> siena.core.async.SienaFuture<java.lang.Iterable<siena.base.test.model.PersonUUID>> future = pm.createQuery(siena.base.test.model.PersonUUID.class).filter("n>", 1).order("n").iter(2, 1); java.lang.Iterable<siena.base.test.model.PersonUUID> people = future.get(); <BUGE> assertNotNull(people); siena.base.test.model.PersonUUID[] array = new siena.base.test.model.PersonUUID[]{ siena.base.test.BaseAsyncTest.UUID_EINSTEIN }; int i = 0; for (siena.base.test.model.PersonUUID PersonIntKey : people) { assertEquals(array[i], PersonIntKey); i++; } } 
public int countEventsAtLocation(java.lang.String id) { int counter = -1; java.lang.String request = handlers.HttpHandler.eventCounter(id); try { <BUGS> counter = java.lang.Integer.parseInt(new handlers.HttpTask().execute("GET", request).get()); <BUGE> } catch (java.lang.InterruptedException e) { e.printStackTrace(); } catch (java.util.concurrent.ExecutionException e) { e.printStackTrace(); } return counter; } 
protected void installPropertyChangeListener(java.lang.Object element) { org.eclipse.tcf.te.ui.interfaces.IViewerInput viewerInput = org.eclipse.tcf.te.ui.trees.ViewerStateManager.getViewerInput(element); if ((viewerInput != null) && (!(viewerInputs.contains(viewerInput)))) { <BUGS> if ((commonViewerListener) != null) { viewerInput.addPropertyChangeListener(commonViewerListener); } <BUGE> viewerInputs.add(viewerInput); } } 
@java.lang.Override <BUGS> public void onBindViewHolder(android.support.v7.widget.RecyclerView.ViewHolder holder, int position) { <BUGE> a1.a2017.iff.seriesanimes.Adapter.SerieAdapter.SerieViewHolder holder_series = ((a1.a2017.iff.seriesanimes.Adapter.SerieAdapter.SerieViewHolder) (viewHolder)); a1.a2017.iff.seriesanimes.Model.Serie serie = series.get(position); holder_series.tituloSerie.setText(serie.getTitulo()); holder_series.ano_lancamentoSerie.setText(serie.getAno_lancamento()); holder_series.descricaoSerie.setText(serie.getDescricao()); holder_series.tipoSerie.setText(serie.getTipo()); android.util.Log.i("------XXXXXXXXX------", serie.getDescricao()); } 
@java.lang.Override public boolean equals(java.lang.Object object) { if (object instanceof qora.assets.Trade) { qora.assets.Trade trade = ((qora.assets.Trade) (object)); <BUGS> return ((trade.getInitiator().compareTo(this.getInitiator())) == 0) && ((trade.getTarget().compareTo(this.getTarget())) == 0); <BUGE> } return false; } 
@java.lang.Override public android.view.View getView(int position, android.view.View convertView, android.view.ViewGroup parent) { final org.unicef.rapidreg.forms.childcase.CaseField field = getItem(position); org.unicef.rapidreg.widgets.helper.WidgetHelper widgetHelper = org.unicef.rapidreg.widgets.helper.WidgetHelperFactory.getWidgetHelper(getContext(), field); <BUGS> if (convertView == null) { convertView = widgetHelper.getConvertView(); } <BUGE> widgetHelper.setValue(); widgetHelper.setOnClickListener(); <BUGS> return convertView; <BUGE> } 
@java.lang.Override public void onStop() { <BUGS> super.onStop(); org.chromium.chrome.browser.customtabs.CustomTabsConnection.getInstance(getApplication()).dontKeepAliveForSession(mIntentDataProvider.getSession()); <BUGE> if (mIntentDataProvider.isOpenedByBrowser()) { createHerbResultIntent(org.chromium.chrome.browser.customtabs.CustomTabActivity.RESULT_STOPPED); finish(); } <BUGS> <BUGE> } 
public emerald.portal.JourneyBuilder clickMessageBoxActionMenu() { boolean open = false; if (core.Actions.find(common.DriverManager.getDriver(DriverType.LOOP), emerald.portal.JourneyBuilder.mbActionMenu)) { open = true; } core.Actions.click(common.DriverManager.getDriver(DriverType.LOOP), emerald.portal.JourneyBuilder.btnMessageActionMenu); <BUGS> core.Wait.waitFor(common.DriverManager.getDriver(DriverType.LOOP), emerald.portal.JourneyBuilder.inspectorPanel, (!open)); <BUGE> return this; } 
@java.lang.Override public org.apache.tajo.datum.Datum terminate(org.apache.tajo.plan.function.FunctionContext ctx) { org.apache.tajo.engine.function.builtin.StdDevContext StdDevCtx = ((org.apache.tajo.engine.function.builtin.StdDevContext) (ctx)); <BUGS> if ((StdDevCtx.count) == 0) { <BUGE> return org.apache.tajo.datum.NullDatum.get(); <BUGS> }else if ((StdDevCtx.count) == 1) { return org.apache.tajo.datum.DatumFactory.createFloat8(0); }  <BUGE> return org.apache.tajo.datum.DatumFactory.createFloat8(java.lang.Math.sqrt(((StdDevCtx.squareSumOfDiff) / ((StdDevCtx.count) - 1)))); } 
@org.junit.Test public void testCoreRowTypeSet() { org.gbif.ipt.model.Resource resource = new org.gbif.ipt.model.Resource(); org.gbif.ipt.model.ExtensionMapping mapping = new org.gbif.ipt.model.ExtensionMapping(); org.gbif.ipt.model.Extension ext = new org.gbif.ipt.model.Extension(); ext.setRowType(Constants.DWC_ROWTYPE_TAXON); mapping.setExtension(ext); resource.addMapping(mapping); <BUGS> org.junit.Assert.assertEquals(Constants.DWC_ROWTYPE_TAXON, resource.getCoreRowType()); <BUGE> } 
public java.io.BufferedWriter getWriter() throws java.io.IOException { if ((this.lines) >= (org.crossref.eventdata.twitter.RotatingFileWriter.MAX_LINES)) { <BUGS> this.rotateCallback.invoke(this.file); this.writer.close(); <BUGE> this.lines = 0; this.file = this.newFile(); this.writer = new java.io.BufferedWriter(new java.io.FileWriter(this.file)); } (this.lines)++; return this.writer; } 
public void writePlans(final java.lang.String outputDir) { <BUGS> new org.matsim.core.population.PopulationWriter(scenario.getPopulation()).write((((outputDir + "/initial_urban_plans_") + (2 * (cloningFactor))) + "pct.xml.gz")); new org.matsim.utils.objectattributes.ObjectAttributesXmlWriter(scenario.getPopulation().getPersonAttributes()).writeFile((((outputDir + "/initial_urban_persionAttributes_") + (2 * (cloningFactor))) + "pct.xml.gz")); <BUGE> playground.agarwalamit.mixedTraffic.patnaIndia.input.urban.PatnaUrbanDemandGenerator.LOG.info("Writing Plan and person attributes files are finished."); } 
@java.lang.Override public void onError(com.iflytek.cloud.SpeechError error) { if (error != null) { showTip(((("error:" + (error.getErrorCode())) + ",") + (error.getErrorDescription()))); }else { android.util.Log.d(com.lixl.waveform.WaveformViewModule.TAG, "evaluator over"); <BUGS> showTip("evaluator over"); <BUGE> } } 
@java.lang.Override public void positionModifierChange(int[] oldP, int[] newP, boolean topDown, int positiv, boolean gameWon) { this.gameWon = gameWon; <BUGS> positionChanged = true; playerOld = oldP; playerNew = newP; this.topDown = topDown; this.positiv = positiv; <BUGE> } 
@java.lang.Override public void run() { com.marketo.MarketoConfig.Notification config = marketo.getNotificationConfig(); org.json.JSONArray object = new org.json.JSONArray(); <BUGS> object.put(BitMapPath(config.getNotificationLargeIcon())); <BUGE> object.put(getResourseName(config.getNotificationSmallIcon())); callbackContext.success(object); } 
<BUGS> public java.util.List<org.smartdata.model.SystemInfo> getByProperty(java.lang.String property) { <BUGE> org.springframework.jdbc.core.JdbcTemplate jdbcTemplate = new org.springframework.jdbc.core.JdbcTemplate(dataSource); <BUGS> return jdbcTemplate.query((("select * from " + (TABLE_NAME)) + " where property = ?"), new java.lang.Object[]{ property }, new org.smartdata.metastore.dao.SystemInfoDao.SystemInfoRowMapper()); <BUGE> } 
@java.lang.Override public void onFinishedWithResult(java.lang.String monthName, int day, int year, long time) { if (setDateFromTime) { if (time < (dateToTime)) dateFromTime = time;  }else { if (time > (dateFromTime)) dateToTime = time;  } <BUGS> updateDateRangeLabels(); <BUGE> } 
@java.lang.Override public void onRegisterStatus(final android.content.Context context, final com.meizu.cloud.pushsdk.platform.message.RegisterStatus registerStatus) { if ((com.jiang.android.push.flyme.FlymeReceiver.mPushInterface) != null) { com.jiang.android.push.utils.JHandler.handler().post(new java.lang.Runnable() { @java.lang.Override public void run() { com.jiang.android.push.flyme.FlymeReceiver.mPushInterface.onRegister(context, registerStatus.getPushId()); } }); <BUGS> }else { com.jiang.android.push.utils.L.i("callback is null"); <BUGE> } } 
@java.lang.Override public void render(gov.nasa.worldwind.render.DrawContext dc) { try { super.render(dc); } catch (java.lang.NullPointerException e) { boolean followTerrain = isFollowTerrain(); <BUGS> setFollowTerrain(false); super.render(dc); setFollowTerrain(followTerrain); <BUGE> } } 
@java.lang.Override protected void onResume() { super.onResume(); if ((!(iconsPicker)) && (!(wallsPicker))) { setupToolbarHeader(); } jahirfiquitiva.iconshowcase.utilities.color.ToolbarColorizer.setupToolbarIconsAndTextsColors(this, cAppBarLayout, cToolbar); <BUGS> jahirfiquitiva.iconshowcase.utilities.utils.Utils.runLicenseChecker(this, jahirfiquitiva.iconshowcase.activities.WITH_LICENSE_CHECKER, jahirfiquitiva.iconshowcase.activities.GOOGLE_PUBKEY, jahirfiquitiva.iconshowcase.activities.WITH_INSTALLED_FROM_AMAZON, jahirfiquitiva.iconshowcase.activities.ALLOW_APT_USE); <BUGE> } 
<BUGS> public double distance(geogebra.common.kernel.geos.GeoPoint2 p) { <BUGE> double distance = java.lang.Double.POSITIVE_INFINITY; for (int i = 0; i < (geoList.size()); i++) { <BUGS> geogebra.common.kernel.geos.GeoElement geo = ((geogebra.common.kernel.geos.GeoElement) (geoList.get(i))); double d = geo.distance(p); <BUGE> if (d < distance) { distance = d; } } return distance; } 
@java.lang.Override public void removeTable(final java.lang.String tableName) throws java.sql.SQLException { <BUGS> logger.info(java.lang.String.format("Removing table for sid %d and tablename %s", getSid(), tableName)); java.lang.String sql = java.lang.String.format("DROP TABLE IF EXISTS %s", wrapName(tableName)); <BUGE> try { executeUpdate(sql); <BUGS> } catch (java.sql.SQLException e) { logger.error(java.lang.String.format("Removing table for sid %d and tablename %s FAILED", getSid(), tableName), e); <BUGE> throw e; } } 
public void add(int index, long element) { <BUGS> boundsCheck(index); enlargeIfNeeded(1); java.lang.System.arraycopy(array, index, array, (index + 1), ((end) - index)); array[index] = element; <BUGE> } 
private java.lang.String readStream(java.io.InputStream in) throws java.io.IOException { java.lang.StringBuilder sb = new java.lang.StringBuilder(); try (java.io.BufferedReader reader = new java.io.BufferedReader(new java.io.InputStreamReader(in, "utf-8"))) { java.lang.String line = reader.readLine(); while (line != null) { <BUGS> sb.append(line); <BUGE> line = reader.readLine(); } } return sb.toString(); } 
private <F extends com.evolveum.midpoint.xml.ns._public.common.common_3.FocusType> void checkExclusion(com.evolveum.midpoint.model.impl.lens.projector.EvaluatedAssignmentImpl<F> assignmentA, com.evolveum.midpoint.model.impl.lens.projector.EvaluatedAssignmentImpl<F> assignmentB, com.evolveum.midpoint.model.impl.lens.projector.EvaluatedAssignmentTargetImpl roleA, com.evolveum.midpoint.model.impl.lens.projector.EvaluatedAssignmentTargetImpl roleB) throws com.evolveum.midpoint.util.exception.PolicyViolationException { checkExclusionOneWayLegacy(assignmentA, assignmentB, roleA, roleB); <BUGS> checkExclusionOneWayLegacy(assignmentA, assignmentB, roleB, roleA); <BUGE> checkExclusionOneWayRuleBased(assignmentA, assignmentB, roleA, roleB); <BUGS> checkExclusionOneWayRuleBased(assignmentA, assignmentB, roleB, roleA); <BUGE> } 
@java.lang.Override public java.lang.String getNString(int ref) { android.util.Log.v(tk.thebrightstuff.blindtale.view.SceneActivity.TAG, (((("Removing accents from " + (getIString(ref))) + " (") + ref) + ")")); <BUGS> return tk.thebrightstuff.blindtale.utils.StringUtils.removeAccents(getIString(ref)); <BUGE> } 
static void modifyUser() throws java.lang.Exception { java.text.SimpleDateFormat simpleDateFormat = new java.text.SimpleDateFormat("yyyy-mm-dd"); java.lang.String time; java.util.Date date = simpleDateFormat.parse("1996-9-30"); time = simpleDateFormat.format(date); java.io.File image = new java.io.File("/home/alex/Pictures/test.jpg"); <BUGS> po.UserPO userPOTest = new po.UserPO(2, model.UserType.Customer, "alex2097", "151250187", "Alex Yu", "15951923079", image, 800, model.MemberType.Person, time, 0, null, 3); <BUGE> dao.UserDao userDao = new daoImpl.UserDaoImpl(); message.ResultMessage message = userDao.modifyUser(userPOTest); } 
<BUGS> public static java.util.Date getLatestDate(java.lang.Class articleClass) { if ((com.cse10.database.DatabaseHandler.getRowCount(articleClass)) == 0) { return null; } <BUGE> org.hibernate.Session session = com.cse10.database.HibernateUtil.getSessionFactory().openSession(); java.sql.Date latestDate = ((java.sql.Date) (session.createCriteria(articleClass).setProjection(org.hibernate.criterion.Projections.max("createdDate")).uniqueResult())); session.close(); return new java.util.Date(latestDate.getTime()); } 
@org.glowroot.markers.OnlyUsedByTests public void close() throws java.lang.Exception { <BUGS> scheduledExecutor.shutdownNow(); <BUGE> uiModule.close(); collectorModule.close(); transactionModule.close(); storageModule.close(); <BUGS> <BUGE> if (org.glowroot.GlowrootModule.shouldOverrideLogging()) { ((ch.qos.logback.classic.LoggerContext) (org.slf4j.LoggerFactory.getILoggerFactory())).reset(); } dataDirFileLock.release(); dataDirLockFile.close(); } 
public java.lang.String parseTicketID(java.lang.String subject) { java.lang.String[] full_subject = subject.split("#"); <BUGS> java.lang.String second_part_subject = full_subject[1]; <BUGE> if ((full_subject[1]) != "") { <BUGS> <BUGE> java.lang.String trimmed_subject = second_part_subject.trim(); java.lang.String[] id = trimmed_subject.split(" "); return id[0]; }else { return subject.trim(); } } 
@java.lang.Override public java.lang.String toString() { <BUGS> return java.lang.String.format("%s %s %.6f %.6f %d %d %d %d %d %d %d %d", getFromId().getHeader(), getToId().getHeader(), ((1.0 - (getScore())) * 100.0), this.rawScore, (getFromId().isForward() ? 0 : 1), this.a1, this.a2, this.fromLength, (getToId().isForward() ? 0 : 1), this.b1, this.b2, this.toLength); <BUGE> } 
private void startDrivingActors() { <BUGS> this.trackRecognizerActor = getContext().actorOf(akka.actor.Props.create(ch.hsr.whitespace.javapilot.akka.TrackRecognizerActor.class, getSelf(), alreadyCheckedPatterns)); <BUGE> this.drivingCoordinatorActor = getContext().actorOf(akka.actor.Props.create(ch.hsr.whitespace.javapilot.akka.DrivingCoordinatorActor.class, getSelf(), properties.getInitialPower())); } 
@butterknife.OnClick(value = R.id.music_search_btn) public void onSearch() { xyf.com.appframe.recycleviewtools.SoftInputUtils.hideSoftInput(this); adapter.clear(); <BUGS> <BUGE> xyf.com.appframe.recycleviewtools.ProgressDialogUtils.showProgress(this); xyf.com.appframe.MusicSearchActivity.searchkey = input.getText().toString().trim(); setTitle(xyf.com.appframe.MusicSearchActivity.searchkey); load(xyf.com.appframe.MusicSearchActivity.searchkey, ("" + (xyf.com.appframe.MusicSearchActivity.pageno))); } 
@org.junit.Ignore @org.junit.Test public void performanceTest() throws java.lang.Exception { java.lang.String hdfsStoreName = "org.apache.kylin.storage.hdfs.HDFSResourceStore"; <BUGS> org.apache.kylin.common.persistence.ResourceStoreTest.testPerformance(hdfsStoreName, org.apache.kylin.common.persistence.ResourceStoreTest.mockUrl("hdfs", kylinConfig), kylinConfig); <BUGE> java.lang.String hbaseStoreName = "org.apache.kylin.storage.hbase.HBaseResourceStore.HBaseResourceStore"; <BUGS> org.apache.kylin.common.persistence.ResourceStoreTest.testPerformance(hbaseStoreName, org.apache.kylin.common.persistence.ResourceStoreTest.mockUrl("hbase", kylinConfig), kylinConfig); <BUGE> } 
public java.lang.String getUnlocalizedName(net.minecraft.item.ItemStack stack) { net.minecraft.nbt.NBTTagCompound tag = stack.getTagCompound(); if (tag != null) { return ((super.getUnlocalizedName(stack)) + ".") + (tag.getString("name")); }else { <BUGS> k4unl.minecraft.Hydraulicraft.lib.Log.error("Tag of a trolley itemstack was null??"); <BUGE> return super.getUnlocalizedName(stack); } } 
@java.lang.Override public java.lang.CharSequence getPageTitle(int position) { if (position < (data.getCount())) { java.lang.Object item = data.getItem(position); if (item instanceof itkach.aard2.BlobDescriptor) { return ((itkach.aard2.BlobDescriptor) (item)).key; } if (item instanceof itkach.slob.Slob.Blob) { return ((itkach.slob.Slob.Blob) (item)).key; } <BUGS> return "???"; <BUGE> } <BUGS> <BUGE> } 
@java.lang.Override <BUGS> protected java.lang.Boolean doInBackground(java.lang.String... params) { <BUGE> try { mobop.booklist.app.data.api.ApiBook book = mapper.readValue(params[0], mobop.booklist.app.data.api.ApiBook.class); android.util.Log.d("Api", book.toString()); <BUGS> mListBook.add(book); return true; <BUGE> } catch (java.io.IOException e) { e.printStackTrace(); <BUGS> return false; <BUGE> } } 
@java.lang.Override public void setStyleType(final org.openflexo.fge.shapes.ShapeSpecification.ShapeType shapeType) { final org.openflexo.fge.shapes.ShapeSpecification.ShapeType oldShapeType = this.getStyleType(); if (oldShapeType == shapeType) { return ; } final org.openflexo.fge.shapes.ShapeSpecification oldSS = this.getShapeSpecification(); this.shapeType = shapeType; this.pcSupport.firePropertyChange(org.openflexo.fge.control.tools.STYLE_CLASS_CHANGED, oldShapeType, this.getStyleType()); <BUGS> <BUGE> this.pcSupport.firePropertyChange("shapeSpecification", oldSS, this.getShapeSpecification()); <BUGS> this.pcSupport.firePropertyChange("styleType", oldShapeType, this.getStyleType()); <BUGE> } 
private void startActivity(int i) { android.os.Bundle bundle; android.content.Intent intent; bundle = new android.os.Bundle(); <BUGS> bundle.putInt("room", 0); <BUGE> intent = new android.content.Intent(this, hevs.project.SketchAgenda.class); intent.putExtras(bundle); this.startActivity(intent); finish(); } 
public java.util.List<bb.tokenizer.Token> tokenize(java.lang.String str) { java.util.ArrayList<bb.tokenizer.Token> tokens = new java.util.ArrayList<bb.tokenizer.Token>(); while ((str.length()) > 0) { str = addNextToken(str, tokens); } <BUGS> line = 0; column = 0; <BUGE> return tokens; } 
@java.lang.Override <BUGS> public void onSuccess(java.lang.Void result) { <BUGE> formDesignerPanel.getSaveButton().setText(I18N.CONSTANTS.save()); formDesignerPanel.getSaveButton().setEnabled(true); formDesignerPanel.getStatusMessage().setHTML(I18N.CONSTANTS.saved()); formDesigner.getSavedGuard().setSaved(true); <BUGS> <BUGE> } 
public void run() { while (true) { try { java.lang.String message; int length = input.readInt(); if (length > 0) { byte[] b = new byte[length]; input.readFully(b); message = new java.lang.String(b, "UTF-8"); <BUGS> java.lang.System.out.println(message); <BUGE> this.sendMessage(network.AppWorker.handleMessage(message)); } } catch (java.io.IOException e) { e.printStackTrace(); break; } } } 
public void GameOver(MyPanel myPanelB, int ClickedInX, int ClickedInY) { if (HasBomb(myPanelB, ClickedInX, ClickedInY)) { for (int posArray = 0; posArray < (posXBomb.length); posArray++) { <BUGS> <BUGE> myPanelB.colorArray[posXBomb[posArray]][posYBomb[posArray]] = bombs; myPanelB.repaint(); } } } 
public final void cvttpd2dq(jdk.vm.ci.code.Register dst, jdk.vm.ci.code.Register src) { assert (dst.getRegisterCategory().equals(AMD64.XMM)) && (src.getRegisterCategory().equals(AMD64.XMM)); <BUGS> com.oracle.graal.asm.amd64.AMD64InstructionAttr attributes = new com.oracle.graal.asm.amd64.AMD64InstructionAttr(com.oracle.graal.asm.amd64.AMD64Assembler.AvxVectorLen.AVX_128bit, true, false, false, false, target); <BUGE> int encode = simdPrefixAndEncode(dst, Register.None, src, com.oracle.graal.asm.amd64.AMD64Assembler.VexSimdPrefix.VEX_SIMD_66, com.oracle.graal.asm.amd64.AMD64Assembler.VexOpcode.VEX_OPCODE_0F, attributes); emitByte(230); emitByte((192 | encode)); } 
@java.lang.Override public boolean onFetchFirstPage(org.wordpress.android.models.PeopleListFilter filter) { org.wordpress.android.models.Blog blog = org.wordpress.android.WordPress.getCurrentBlog(); if ((filter == (org.wordpress.android.models.PeopleListFilter.TEAM)) && (mCanRefreshUsers)) { <BUGS> fetchUsersList(blog.getDotComBlogId(), blog.getLocalTableBlogId(), 0); return true; <BUGE> }else if ((filter == (org.wordpress.android.models.PeopleListFilter.FOLLOWERS)) && (mCanRefreshFollowers)) { <BUGS> fetchFollowersList(blog.getDotComBlogId(), blog.getLocalTableBlogId(), 1); return true; <BUGE> }  return false; } 
private void createHandleForActiveNode() { nodebox.client.Node activeNode = getActiveNode(); if (activeNode != null) { <BUGS> <BUGE> nodebox.client.HandleRepository repository = nodebox.client.HandleRepository.of(); if (repository.hasHandleClass(activeNode.getHandle())) { <BUGS> nodebox.client.Handle handle = repository.constructHandle(activeNode.getHandle()); if (handle != null) { handle.setHandleDelegate(this); viewerPane.setHandle(handle); }else { viewerPane.setHandle(null); } <BUGE> } } } 
public java.lang.Integer getNextDate() { <BUGS> len = datesStream.readRecord(buffer2, ((numDecrypted) + 4), 4); <BUGE> if ((len) != 1) { throw new java.lang.IllegalArgumentException("Error: Could not read in another byte."); }else { numDecrypted += 1; return (firstDate) + (java.nio.ByteBuffer.wrap(buffer2).getInt()); } } 
@org.springframework.web.bind.annotation.ExceptionHandler(value = com.carser.viamais.exception.LogException.class) public void handleException(final com.carser.viamais.exception.LogException e) { org.slf4j.Logger logger = org.slf4j.LoggerFactory.getLogger(e.getSource()); logger.error(e.getMessage()); <BUGS> com.carser.viamais.entity.MailConfiguration config = mailConfigurationRepository.findByEvent(MailConfiguration.Event.ERROR_MESSAGE.name()); <BUGE> mailService.sendHtmlEmail(adminMail, config.getDefaultSender(), config.getDefaultSubject(), e.getMessage()); } 
private void getFieldsInformation() { java.lang.Long tsLong = (java.lang.System.currentTimeMillis()) / 1000; timestamp = tsLong.toString(); <BUGS> testingDate = ((((java.lang.String.valueOf(datepicker.getYear())) + ",") + (java.lang.String.valueOf(datepicker.getMonth()))) + ",") + (java.lang.String.valueOf(datepicker.getDayOfMonth())); <BUGE> } 
public static java.lang.String convertToGroupString(java.lang.String[] group) { java.lang.String str = ""; for (int i = 0; i < ((group.length) - 1); i++) { <BUGS> str.concat(group[i]); str.concat(":"); <BUGE> } <BUGS> str.concat(group[((group.length) - 1)]); <BUGE> return str; } 
@org.junit.Test @com.hp.autonomy.frontend.selenium.framework.logging.ResolvedBug(value = "FIND-93") public void testNoResults() { final com.autonomy.abc.selenium.find.results.ListView results = findService.search("thissearchwillalmostcertainlyreturnnoresults"); new org.openqa.selenium.support.ui.WebDriverWait(getDriver(), 60L).withMessage("No results message should appear").until(org.openqa.selenium.support.ui.ExpectedConditions.textToBePresentInElement(results.resultsDiv(), "No results found")); findPage.scrollToBottom(); final int occurrences = org.apache.commons.lang3.StringUtils.countMatches(results.resultsDiv().getText(), "results found"); <BUGS> com.hp.autonomy.frontend.selenium.framework.state.TestStateAssert.verifyThat("Only one message showing at the bottom of search results", occurrences, org.hamcrest.core.Is.is(1)); <BUGE> } 
@java.lang.Override void replaceDefunctConnection(final com.datastax.driver.core.Connection connection) { if (connection.state.compareAndSet(com.datastax.driver.core.OPEN, com.datastax.driver.core.GONE)) open.decrementAndGet();  if (connections.remove(connection)) manager.blockingExecutor().submit(new java.lang.Runnable() { @java.lang.Override public void run() { addConnectionIfUnderMaximum(); } });  <BUGS> connection.closeAsync(); <BUGE> } 
public static boolean isRosterPath(java.lang.String path) { path = path.trim().toLowerCase(); <BUGS> if (((path.endsWith(DataConstants.ROSTER_FILE_EXTENSION)) || (path.endsWith(DataConstants.ROSTER_COMPRESSED_FILE_EXTENSION))) || (path.endsWith(DataConstants.ROSTER_COMPRESSED_FILE_EXTENSION_OLD))) { return true; } return false; <BUGE> } 
public java.util.Set<com.example.lachlan.myfirstapp.code.SubDistrict> subdistricts() { java.util.Set<com.example.lachlan.myfirstapp.code.SubDistrict> subs = new java.util.HashSet<com.example.lachlan.myfirstapp.code.SubDistrict>(); for (com.example.lachlan.myfirstapp.code.Location loc : locations()) { if (loc.municipality.equals(name)) { <BUGS> subs.add(new com.example.lachlan.myfirstapp.code.SubDistrict(context, this, loc.subdistrict)); <BUGE> } } return subs; } 
public void putLongArray(final long[] data, boolean length) { <BUGS> int l = (data.length) * (com.heerbann.unsafe.UnsafeBuffer.sizeOfLong); <BUGE> if (length) putInt(l);  <BUGS> <BUGE> ensure(((position) + l)); com.heerbann.unsafe.UnsafeBuffer.unsafe.copyMemory(data, com.heerbann.unsafe.UnsafeBuffer.longArrayOffset, null, ((pointer) + (position)), l); position += l; end = ((position) > (end)) ? position : end; } 
public void renderSegment(lemon.engine.render.Renderable renderable) { org.lwjgl.opengl.GL11.glEnable(GL11.GL_BLEND); org.lwjgl.opengl.GL11.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA); org.lwjgl.opengl.GL11.glEnable(GL11.GL_DEPTH_TEST); org.lwjgl.opengl.GL20.glUseProgram(program.getId()); <BUGS> uniform_modelMatrix.loadMatrix(lemon.engine.math.Matrix.getIdentity(4)); <BUGE> lineRenderer.render(renderable); org.lwjgl.opengl.GL20.glUseProgram(0); org.lwjgl.opengl.GL11.glDisable(GL11.GL_DEPTH_TEST); org.lwjgl.opengl.GL11.glDisable(GL11.GL_BLEND); } 
static java.io.File constructFile(java.lang.String basePath, java.lang.String fileName) { java.io.File file; <BUGS> java.io.File absolute = null; if (fileName != null) { absolute = new java.io.File(fileName); } if ((org.apache.commons.lang3.StringUtils.isEmpty(basePath)) || ((absolute != null) && (absolute.isAbsolute()))) { file = new java.io.File(fileName); <BUGE> }else { file = new java.io.File(org.apache.commons.configuration2.io.FileLocatorUtils.appendPath(basePath, fileName)); } return file; } 
public void connectionLost(java.lang.Throwable cause) { <BUGS> log(("Connection to lost! " + cause)); <BUGE> com.facebook.react.bridge.WritableMap params = com.facebook.react.bridge.Arguments.createMap(); params.putString("event", "closed"); params.putString("message", "Connection to lost!"); sendEvent(_reactContext, "mqtt_events", params); } 
public void doIt(javax.servlet.http.HttpServletRequest request, javax.servlet.http.HttpServletResponse response) throws java.io.IOException, javax.servlet.ServletException { <BUGS> java.lang.String name = request.getParameter("name"); java.lang.String args = request.getParameter("args"); <BUGE> java.lang.String error = null; if (error != null) { response.sendRedirect(("home.do?error=" + error)); }else { response.sendRedirect("home.do"); } } 
public void onClick(com.google.gwt.event.dom.client.ClickEvent event) { if (actorConfigTab.currentEditSite.getName().equals(actorConfigTab.newSiteName)) { new gov.nist.toolkit.xdstools2.client.PopupMessage("You must give site a real name before saving"); return ; } if (gov.nist.toolkit.xdstools2.client.PasswordManagement.isSignedIn) { actorConfigTab.saveSignedInCallback.onSuccess(true); <BUGS> ((gov.nist.toolkit.xdstools2.client.event.Xdstools2EventBus) (ClientUtils.INSTANCE.getEventBus())).fireActorsConfigUpdatedEvent(); <BUGE> }else { gov.nist.toolkit.xdstools2.client.PasswordManagement.addSignInCallback(actorConfigTab.saveSignedInCallback); new gov.nist.toolkit.xdstools2.client.AdminPasswordDialogBox(actorConfigTab.getTabTopPanel()); } } 
private java.lang.String getLine(int number) throws java.lang.Exception { java.lang.String value = null; java.lang.String pageContent = FitnesseFixtureContext.page.getHtml(); java.lang.String lineizedContent = fitnesse.fixtures.ResponseExaminer.convertBreaksToLineSeparators(pageContent); java.util.StringTokenizer tokenizedLines = tokenizeLines(lineizedContent); for (int i = number; i != 0; i--) value = tokenizedLines.nextToken();  <BUGS> return value.trim(); <BUGE> } 
<BUGS> public void assertEquals(java.lang.Object actual, java.lang.Object expected) { <BUGE> if ((expected == null) && (actual == null)) return ;  if ((expected != null) && (expected.equals(actual))) return ;  fail(format(expected, actual)); } 
private void updateLine() { <BUGS> java.lang.String creditsEarned = client.getServer().getCreditEarnedOnCurrentSession(); <BUGE> int charToRemove = line.length(); java.lang.System.out.print("\r"); <BUGS> line = java.lang.String.format("Frames rendered: %d remaining: %d credits earned: %s | %s", rendered, remaining, (creditsEarned != null ? creditsEarned : "unknown"), ((status) + (exiting ? " (Exiting after this frame)" : ""))); <BUGE> java.lang.System.out.print(line); for (int i = line.length(); i <= charToRemove; i++) { java.lang.System.out.print(" "); } } 
public int lookup(int index, short remainder) { int currentIndex = index; org.bucaojit.filter.Slot currentSlot = set.get(currentIndex); <BUGS> int foundIndex = -1; <BUGE> int runStart = 0; if (currentSlot.getMetadata().isClear()) return -1;  runStart = findRunStart(currentIndex); return checkQuotient(runStart, remainder); } 
@java.lang.Override <BUGS> public void placeInPortal(net.minecraft.entity.Entity entity, double motionX, double motionY, double motionZ, float rotation) { <BUGE> worldServer.theChunkProviderServer.loadChunk(((int) (x)), ((int) (z))); entity.setPosition(x, y, z); <BUGS> entity.motionX = motionX; entity.motionY = motionY; entity.motionZ = motionZ; <BUGE> } 
private void setPositionsOfPlayers(java.util.List<game.db.GameResultEntity> gameResults, java.util.List<java.lang.Integer> points) { java.util.Collections.sort(points); for (int i = 0; i < (points.size()); i++) { for (game.db.GameResultEntity gameResult : gameResults) { <BUGS> if ((gameResult.getPoints()) == (points.get(i))) { <BUGE> gameResult.setPosition((i + 1)); } } } } 
@java.lang.Override public void setHumidWarn(boolean HumidWarn) { <BUGS> int mask = 1 << 7; <BUGE> int tempRegister = getPanelStatus(room); int tempBackRegister = getPanelBackupStatus(room); if (HumidWarn) { tempRegister |= mask; tempBackRegister |= mask; }else { <BUGS> mask = ~mask; mask &= 255; tempRegister &= mask; tempBackRegister &= mask; <BUGE> } modbusSlave.setRegister(((edu.ncku.uscc.util.DataStoreManager.ADDR_STATUS) + (offset)), tempRegister); setPanelBackup(tempBackRegister, room, edu.ncku.uscc.util.DataStoreManager.ADDR_STATUS); } 
protected static java.lang.String _gen(final org.eclipse.ocl.pivot.TypeExp e) { org.eclipse.xtend2.lib.StringConcatenation _builder = new org.eclipse.xtend2.lib.StringConcatenation(); <BUGS> org.eclipse.ocl.pivot.Type _referredType = e.getReferredType(); java.lang.String _string = _referredType.toString(); java.lang.String _replace = _string.replace("::", "!"); _builder.append(_replace, ""); <BUGE> return _builder.toString(); } 
public void updateCallback(java.util.Map<java.lang.String, ?> properties) { this.lexevsRemoteApiUrl = ((java.lang.String) (properties.get("lexevsRemoteApiUrl"))); this.lgConfigFile = ((java.lang.String) (properties.get(edu.mayo.cts2.framework.plugin.service.lexevs.LexBigServiceFactory.LG_CONFIG_FILE_ENV))); <BUGS> this.useRemoteApi = org.apache.commons.lang.BooleanUtils.toBoolean(properties.get("useRemoteApi").toString()); <BUGE> this.hasBeenConfigured = true; } 
public java.lang.String addDate(java.lang.String date, char typeRepeat) { <BUGS> br.com.inmypocket.controllers.DateCTR dateCTR = new br.com.inmypocket.controllers.DateCTR(); <BUGE> switch (typeRepeat) { case 'D' : <BUGS> return dateCTR.addDayInDate(date); <BUGE> case 'M' : <BUGS> return dateCTR.addMonthInDate(date); <BUGE> case 'A' : <BUGS> return dateCTR.addYearInDate(date); <BUGE> default : return date; } } 
long exceptsPerCycle(int cycle) { net.openhft.chronicle.queue.impl.single.SingleChronicleQueueExcerpts.StoreTailer tailer = acquireTailer(); try { long index = rollCycle.toIndex(cycle, 0); if (tailer.moveToIndex(index)) { <BUGS> assert (tailer.store.refCount()) > 1; <BUGE> return (tailer.store.lastSequenceNumber(tailer)) + 1; }else { return -1; } } catch (java.io.StreamCorruptedException e) { throw new java.lang.IllegalStateException(e); } finally { tailer.release(); } } 
private java.lang.String getBaseUri(final org.apache.olingo.odata2.api.processor.ODataRequest request) { java.lang.String baseUri = request.getPathInfo().getServiceRoot().toASCIIString(); if (baseUri.endsWith("/")) { baseUri = baseUri.substring(0, ((baseUri.length()) - 1)); } <BUGS> for (org.apache.olingo.odata2.api.uri.PathSegment segment : request.getPathInfo().getPrecedingSegments()) { baseUri += "/" + (segment.getPath()); } <BUGE> return baseUri; } 
public void remGroup(java.lang.String uname, java.lang.String gID) { for (de.jattyv.jcapi.server.virtual.dataController.data.User user : users) { if (user.getUserName().equals(uname)) { for (de.jattyv.jcapi.client.gui.cell.FG fg : user.getFgs()) { <BUGS> if (fg.getTitle().equals(uname)) { <BUGE> if ((fg.getType()) == (de.jattyv.jcapi.client.gui.cell.FG.FG_TYPE_GROUP)) { user.getFgs().remove(fg); return ; } } } } } } 
@java.lang.Override public void done(java.io.File file, com.parse.ParseException e) { com.clothapp.resources.Image toAdd = new com.clothapp.resources.Image(file, object.getObjectId(), object.getString("user"), object.getList("like"), object.getInt("nLike"), object.getList("hashtag"), object.getList("vestiti"), object.getList("tipo")); <BUGS> com.clothapp.ImageFragment.lista.add(toAdd); mPagerAdapter.notifyDataSetChanged(); <BUGE> } 
public void test_getFormats() { java.lang.String[] orgFormats = ((java.lang.String[]) (formats.clone())); java.lang.String[] f = ((java.lang.String[]) (f1.getFormats())); <BUGS> assertTrue("Wrong formats", f.equals(formats)); <BUGE> f[0] = "Modified"; <BUGS> assertTrue("Formats copied", (!(f.equals(orgFormats)))); <BUGE> } 
@java.lang.Override public void updatePlayerMoveState() { net.minecraft.client.entity.EntityPlayerSP player = net.minecraft.client.Minecraft.getMinecraft().thePlayer; <BUGS> if (player.onGround) { super.updatePlayerMoveState(); <BUGE> }else <BUGS> if ((ClientHookHandler.hook) == null) { original.updatePlayerMoveState(); player.movementInput = original; <BUGE> }else { this.jump = net.minecraft.client.Minecraft.getMinecraft().gameSettings.keyBindJump.getIsKeyPressed(); this.sneak = net.minecraft.client.Minecraft.getMinecraft().gameSettings.keyBindSneak.getIsKeyPressed(); }  } 
@com.google.gwt.uibinder.client.UiHandler(value = "browseCentury") public void onClickOfBrowseCentury(com.google.gwt.event.dom.client.ClickEvent e) { centuryPopup.clear(); <BUGS> if (((centurySelectedValues) != null) && ((centurySelectedValues.size()) > 0)) { centuryPresenterWidget.setAddResourceData(centurySelectedValues); } <BUGE> centuryPopup.add(centuryPresenterWidget.getWidget()); centuryPopup.show(); centuryPopup.center(); centuryPopup.getElement().getStyle().setZIndex(999999); } 
@java.lang.Override public interfaces.Problem hcSteepestAscent(interfaces.Problem prob) { puzzle.PuzzleProblem current = ((puzzle.PuzzleProblem) (prob)); puzzle.PuzzleState neighbor; while (true) { neighbor = ((puzzle.PuzzleState) (current.getBestNeighbor())); if ((neighbor.getValue()) >= (current.getState().getValue())) return current;  <BUGS> <BUGE> current.setState(neighbor); <BUGS> current.addAction(neighbor.actstr); <BUGE> } } 
@java.lang.Override public void onClick(android.view.View v) { switch (v.getId()) { case R.id.btnTimerPlay : <BUGS> java.lang.System.out.println(("Mohseen " + (android.os.SystemClock.elapsedRealtime()))); <BUGE> com.mkhan.myapplication.TimerActivity.isTimerOn = true; togglePlayButtontext(((android.widget.Button) (v))); break; case R.id.btnTimerReset : com.mkhan.myapplication.TimerActivity.isTimerOn = false; togglePlayButtontext(((android.widget.Button) (v))); break; } } 
private static java.lang.Class<? extends java.lang.Object> getContentType(jade.lang.acl.ACLMessage msg) { try { java.lang.Object content = msg.getContentObject(); <BUGS> return content.getClass(); <BUGE> } catch (jade.lang.acl.UnreadableException e) { e.printStackTrace(); } return null; } 
@org.springframework.context.annotation.Bean public javax.persistence.EntityManagerFactory entityManagerFactory() { java.util.logging.Logger.getLogger("org.hibernate").setLevel(java.util.logging.Level.INFO); org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter vendorAdapter = new org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter(); <BUGS> vendorAdapter.setShowSql(false); <BUGE> vendorAdapter.setGenerateDdl(false); vendorAdapter.setDatabasePlatform("org.hibernate.dialect.PostgreSQLDialect"); org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean factory = new org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean(); factory.setJpaVendorAdapter(vendorAdapter); factory.setPackagesToScan("com.teamd.taxi.entity"); factory.setDataSource(dataSource()); factory.afterPropertiesSet(); return factory.getObject(); } 
public int getScrollHeight() { <BUGS> return ((int) (((float) ((dragged) / ((float) ((height) - (BAR_HEIGHT))))) * ((height) - (viewportHeight)))); <BUGE> } 
private void shopDetection(com.mygdx.runrunrun.sprites.MoveableObject firstObj) { shop = ((com.mygdx.runrunrun.sprites.Shop) (firstObj)); if ((firstObj.contains(hero.getPosition())) && ((firstObj.getHide()) == false)) { stopForShop = true; if ((flyCount) <= 0) exitShopTimer = 100;  }else { stopForShop = false; enteredShop = false; if (hero.getStop()) { <BUGS> hero.toggleStop(false); <BUGE> } } } 
@org.junit.Test public void successfulGet() throws java.lang.Exception { com.springernature.watermark.api.WatermarkApiIntegrationTest.LOG.info("Testing successfulGet"); com.springernature.watermark.model.Book book = com.springernature.watermark.model.ModelTestUtil.createDummyBook(); java.lang.Long id = postRequest(book); <BUGS> java.lang.Thread.yield(); <BUGE> com.springernature.watermark.api.RequestEntity entity = com.springernature.watermark.api.RequestEntity.get(new java.net.URI((((baseUrl) + "/") + id))).build(); com.springernature.watermark.api.ResponseEntity<java.util.Map> response = this.testRestTemplate.exchange(entity, java.util.Map.class); assertEquals(HttpStatus.OK, response.getStatusCode()); } 
private void addWorkers(int count) { workerCount = count; workers = new java.util.ArrayList<>(); for (int i = 0; i < count; i++) { <BUGS> com.astedt.robin.concurrentobjecthandler.ConcurrentObjectWorker worker = new com.astedt.robin.concurrentobjecthandler.ConcurrentObjectWorker(i); <BUGE> workers.add(worker); } } 
@java.lang.Override protected void onPostExecute(java.lang.Object resultObject) { if (resultObject == null) { }else <BUGS> if (resultObject instanceof java.lang.Exception) { mImageBytesConsumer.onAssetError(mAsset, ((java.lang.Exception) (resultObject))); <BUGE> }else <BUGS> if (resultObject instanceof byte[]) { mImageBytesConsumer.onAssetBytes(mAsset, ((byte[]) (resultObject))); <BUGE> }   } 
@java.lang.Override public void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); tcBaseDelegate.setOverWriteTitle(false); <BUGS> tcBaseDelegate.onCreate(this, savedInstanceState); <BUGE> try { app = getBaseApplicationInterface(); } catch (java.lang.Exception e) { e.printStackTrace(); } <BUGS> <BUGE> } 
public void showPuzzleLayout() { try { javafx.fxml.FXMLLoader loader = new javafx.fxml.FXMLLoader(); loader.setLocation(controller.MainApp.class.getResource("../view/PuzzleLayout.fxml")); javafx.scene.layout.AnchorPane anchorPane = loader.load(); rootLayout.setCenter(anchorPane); <BUGS> controller.PuzzleController puzzleController = loader.getController(); puzzleController.setTilesList(this.tilesList); <BUGE> } catch (java.lang.Exception e) { e.printStackTrace(); } } 
public java.util.ArrayList<java.lang.String> getCategoryEndList() { java.util.ArrayList<java.lang.String> categoryEndList = new java.util.ArrayList<java.lang.String>(); <BUGS> for (com.nusclimb.live.crimp.common.json.CategoriesResponseBody.Category c : categoriesInfo.getCategories()) { categoryEndList.add(c.getTimeEnd()); <BUGE> } return categoryEndList; } 
@java.lang.SuppressWarnings(value = "unchecked") @java.lang.Override public void onViewCreated(android.view.View view, android.os.Bundle savedInstanceState) { super.onViewCreated(view, savedInstanceState); final P presenter = getPresenter(); if (presenter != null) { butterknife.ButterKnife.bind(presenter, view); } <BUGS> ready(); <BUGE> if (presenter != null) { presenter.setView(this); } <BUGS> <BUGE> } 
@java.lang.Override public void onEndpointPoolConfigurationSet(org.openhab.io.transport.modbus.endpoint.ModbusSlaveEndpoint endpoint, org.openhab.io.transport.modbus.endpoint.EndpointPoolConfiguration otherConfig) { synchronized(this) { <BUGS> if ((((this.configuration) != null) && (endpoint.equals(this.endpoint))) && (!(this.configuration.equals(configuration)))) { <BUGE> updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.CONFIGURATION_ERROR, java.lang.String.format("Endpoint '%s' has conflicting parameters: parameters of this thing (%s) {} are different from {}", endpoint, this.thing, this.configuration, otherConfig)); } } } 
@java.lang.Override public void onTimeChanged(android.widget.TimePicker timePicker, int hourOfDay, int minute) { super.onTimeChanged(timePicker, hourOfDay, minute); if (!(mIgnoreEvent)) { <BUGS> minute = com.plugin.datepicker.DatePickerPlugin.CustomTimePickerDialog.getRoundedMinute(minute); <BUGE> mIgnoreEvent = true; timePicker.setCurrentMinute(minute); mIgnoreEvent = false; } } 
public java.lang.String[] getPacket() throws java.io.IOException { while (input.ready()) { char c = ((char) (input.read())); if (c == '\n') { <BUGS> java.lang.String output = buffer; buffer = ""; <BUGE> return output.split("\t"); }else <BUGS> buffer += c; <BUGE>  } return null; } 
@java.lang.Override public void start() { android.util.Log.d(org.example.xwalkembedded.XWalkExoMediaPlayer.TAG, "==== in start "); if ((mSystemMediaPlayer) && ((mMediaPlayer) != null)) { mMediaPlayer.start(); }else if ((player) != null) { player.setPlayWhenReady(true); }  <BUGS> onShowCustomView(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE); <BUGE> } 
@java.lang.Override public void onItemSelected(android.widget.AdapterView<?> parentView, android.view.View selectedItemView, int position, long id) { java.lang.String[] userName = userSpinner.getSelectedItem().toString().split(" "); <BUGS> com.iutbmteprow.shootingarchery.dbman.Utilisateur curUser = db.getUtilisateurFromName(userName[0], userName[1]); <BUGE> idUserSelected = curUser.getId(); ListArcFragments(curUser.getId()); } 
public java.lang.String getFormattedDuration() { <BUGS> int seconds = ((int) ((mDuration) / 1000)); <BUGE> int minutes = ((int) (((mDuration) / (1000 * 60)) % 60)); int hours = ((int) (((mDuration) / ((1000 * 60) * 60)) % 24)); return java.lang.String.format("%02d:%02d:%02d", hours, minutes, seconds); } 
@java.lang.Override <BUGS> public void onBackPressed() { <BUGE> int currentPos = mViewPager.getCurrentItem(); java.lang.String tag = mSectionsPagerAdapter.getFragmentTag(currentPos); if (tag != null) { android.support.v4.app.Fragment currentFragment = getChildFragmentManager().findFragmentByTag(tag); if (currentFragment instanceof tw.edu.ntust.et.mit.jonkermalacca.MainActivity.OnBackPressedListener) { <BUGS> ((tw.edu.ntust.et.mit.jonkermalacca.MainActivity.OnBackPressedListener) (currentFragment)).onBackPressed(); <BUGE> } } <BUGS> <BUGE> } 
public java.lang.String getFormattedDate(java.lang.String str) { com.github.TimeParser tp = new com.github.TimeParser(); long[] time = tp.GetInput(str); <BUGS> java.lang.System.out.println(time[0]); <BUGE> java.util.Date date0 = new java.util.Date(time[0]); java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat("yyyy-MM-dd HH:mm:ss z"); sdf.setTimeZone(java.util.TimeZone.getTimeZone("GMT-4")); java.lang.String formattedDate = sdf.format(date0); return formattedDate; } 
<BUGS> private static java.lang.String toSystemPath(java.lang.String rawpath) { <BUGE> java.nio.file.Path path = java.nio.file.FileSystems.getDefault().getPath(rawpath); if (java.nio.file.Files.exists(path)) { try { path = path.toRealPath(); } catch (java.io.IOException e) { path = path.toAbsolutePath(); e.printStackTrace(); } }else { path = path.toAbsolutePath(); } return path.toString(); } 
public void setThumbnailBitmap(android.graphics.Bitmap bm, java.lang.String thumbPath) { <BUGS> android.util.Log.e(com.terrydr.eyeScope.CameraActivity.TAG, ("---thumbPath:" + thumbPath)); <BUGE> photos_iv.setEnabled(true); android.graphics.Bitmap thumbnail = android.media.ThumbnailUtils.extractThumbnail(bm, 213, 213); btn_thumbnail.setImageBitmap(thumbnail); this.thumbPath = thumbPath; btn_thumbnail.setVisibility(View.VISIBLE); } 
private boolean hasUnknownTokenAt(org.languagetool.AnalyzedTokenReadings[] tokens, int startPos, int endPos) { <BUGS> if (endPos < startPos) { throw new java.lang.RuntimeException(((("endPos < startPos: " + endPos) + " < ") + startPos)); } <BUGE> for (int i = startPos; i < endPos; i++) { org.languagetool.AnalyzedTokenReadings token = tokens[i]; for (org.languagetool.AnalyzedToken analyzedToken : token.getReadings()) { if (analyzedToken.hasNoTag()) { return true; } } } return false; } 
public void fadeIn(com.badlogic.gdx.math.Matrix4 cameraCombined, float delta) { fadeOutLight.setActive(false); fadeInLight.setActive(true); if ((timePassedDuringFadeIn) < (timeToFadeIn)) { fadeInAlpha = 1 - ((timePassedDuringFadeIn) / (timeToFadeIn)); fadeInLight.setColor(new com.badlogic.gdx.graphics.Color(0, 0, 0, (1 - (fadeInAlpha)))); rayHandler.setCombinedMatrix(cameraCombined); <BUGS> rayHandler.updateAndRender(); <BUGE> timePassedDuringFadeIn += delta; }else { isNewLevel = false; } <BUGS> <BUGE> } 
public boolean intiateDBConnection() { try { java.lang.Class.forName("org.sqlite.JDBC"); con = java.sql.DriverManager.getConnection((("jdbc:sqlite:" + (property)) + "/ProjectTest.db"), "", ""); <BUGS> insertUser(new chatboxserver.User("ehab", "jgfg", "23", "23232", "ehab", "jgfg", "23", "23232", "3434")); chatboxserver.User user = getUser("ajkshkajshfjkah"); <BUGE> return true; } catch (java.lang.Exception ex) { ex.printStackTrace(); java.lang.System.out.println("exception caught"); return false; } } 
private void jButtonCrowdMouseClicked(java.awt.event.MouseEvent evt) { arenatojava.SQL sql = new arenatojava.SQL(); currentCrowd = sql.getCrowdInfo(); try { <BUGS> currentImage = converter.Resize(((java.awt.image.BufferedImage) (currentImage)), currentCrowd.getWidth(), currentCrowd.getHeight()); <BUGE> } catch (java.io.IOException ex) { java.util.logging.Logger.getLogger(arenatojava.MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); } UpdateImageView(); } 
@java.lang.Override public void onAttach(android.content.Context context) { super.onAttach(context); try { mCallBack = ((com.example.user.onceuponatime.fragment.SignInFragment.SignInFragmentCallBack) (context)); } catch (java.lang.ClassCastException e) { throw new java.lang.ClassCastException(((context.toString()) + " must implements SignInCallaback")); } <BUGS> android.widget.Toast.makeText(context, mCallBack.toString(), Toast.LENGTH_LONG).show(); <BUGE> } 
private void initializeModel() throws java.io.IOException { java.util.List<edu.mtu.parser.ChemicalDto> chemicals = edu.mtu.parser.Parser.parseChemicals(properties.getChemicalsFileName()); edu.mtu.catalog.ReactionRegistry registry = edu.mtu.catalog.ReactionRegistry.getInstance(); edu.mtu.Reactor.Reactor reactor = edu.mtu.Reactor.Reactor.getInstance(); for (edu.mtu.parser.ChemicalDto chemical : chemicals) { edu.mtu.compound.Species species = registry.getSpecies(chemical.formula); <BUGS> int quantity = ((int) ((chemical.mols) * (properties.getMoleculesPerMole()))); reactor.createEntities(species, quantity); <BUGE> } } 
private boolean isFloat(java.lang.String str) { if (str.contains("$")) { <BUGS> str = str.replaceAll("\\$", ""); int registerNumber = java.lang.Integer.parseInt(str); return isRegisterFloat[registerNumber]; <BUGE> }else { return ((str.contains(".")) || (str.startsWith("_f"))) || (str.endsWith("_float")); } } 
public boolean clustersMatch(double[] cluster1, double[] cluster2, Emat emat) { <BUGS> <BUGE> for (int i = 0; i < (cluster1.length); i++) { if ((java.lang.Math.abs(((cluster1[i]) - (cluster2[i])))) > 2) return false;  } return true; } 
public void handlePremiumAPI(final jd.plugins.DownloadLink downloadLink, final jd.plugins.Account account) throws java.lang.Exception, jd.plugins.PluginException { loginAPI(account); if ((account.getType()) == (jd.plugins.Account.AccountType.FREE)) { <BUGS> handleDownloadAPI(downloadLink, true, 0, false, "directlink_freeaccount"); <BUGE> }else { handleDownloadAPI(downloadLink, true, (-4), true, "directlink_premiumaccount"); } } 
private static java.util.Properties loadSettings(data.Element p_element) { java.util.Properties x_settings = new java.util.Properties(); <BUGS> java.util.List x_properties = p_element.getChildren(); for (java.lang.Object x_property : x_properties) { data.Element x_propertyElem = ((data.Element) (x_property)); x_settings.setProperty(x_propertyElem.getAttributeValue(XmlConstants.s_PROPERTY_NAME), x_propertyElem.getAttributeValue(XmlConstants.s_PROPERTY_VALUE)); <BUGE> } return x_settings; } 
public void actionPerformed(java.awt.event.ActionEvent event) { int hold = 0; <BUGS> newEmployee = new workSQL.Employee(hold, "", "", ""); <BUGE> workSQL.EmployeeDetailDialog addD = new workSQL.EmployeeDetailDialog(thisFrame, thisFrame, "Add a new employee", true, newEmployee); addD.updateButton.setEnabled(false); addD.deleteButton.setEnabled(false); addD.employeeNumberField.setEnabled(false); addD.setVisible(true); } 
public void clear() { de.baleipzig.iris.common.Dimension dim = this.dim(); <BUGS> <BUGE> for (int i = 0; i < (dim.getY()); i++) { java.util.Vector<de.baleipzig.iris.model.neuralnet.node.INode> row = new java.util.Vector<>(); for (int j = 0; j < (dim.getX()); j++) row.add(null);  layer.add(row); } } 
@java.lang.Override public void getTooltip(binnie.core.craftgui.Tooltip tooltip) { if ((species) == null) { return ; } switch (discovered) { case SHOW : <BUGS> <BUGE> tooltip.add(species.getName()); <BUGS> break; case DISCOVERED : tooltip.add(binnie.core.util.I18N.localise("binniecore.gui.database.discovered.discovered")); <BUGE> break; case UNDISCOVERED : tooltip.add(binnie.core.util.I18N.localise("binniecore.gui.database.discovered.undiscovered")); break; } } 
@java.lang.Override public void onDestroyView() { <BUGS> super.onDestroyView(); <BUGE> try { releasePlayer(); cg.stevendende.deliciousrecipes.ui.StepDetailsFragment.mMediaSession.setActive(false); } catch (java.lang.NullPointerException exception) { exception.printStackTrace(); } catch (java.lang.Exception ex) { android.util.Log.e("BALog", ("exolayer unlnown bug --- " + (ex.getMessage()))); } <BUGS> <BUGE> } 
public it.musichub.server.library.model.Folder getFolder(it.musichub.server.library.model.Folder folder) { if ((folders) != null) { for (it.musichub.server.library.model.Folder f : folders) { try { if (java.nio.file.Files.isSameFile(f.getFile().toPath(), folder.getFile().toPath())) return f;  } catch (java.io.IOException e) { <BUGS> e.printStackTrace(); <BUGE> } } } return null; } 
public final java.lang.Object callDirect(java.lang.Object... args) { <BUGS> getCompilationProfile().profileDirectCall(this, args); <BUGE> try { <BUGS> <BUGE> java.lang.Object result = doInvoke(args); if (com.oracle.truffle.api.CompilerDirectives.inCompiledCode()) { <BUGS> result = this.compilationProfile.injectReturnValueProfile(result); <BUGE> } return result; } catch (java.lang.Throwable t) { throw com.oracle.graal.truffle.OptimizedCallTarget.rethrow(compilationProfile.profileExceptionType(t)); } } 
public com.ibm.watson.developer_cloud.discovery.v1.model.document.CreateDocumentRequest.Builder file(java.io.File inputFile, java.lang.String mediaType) { java.io.InputStream file; try { file = new java.io.FileInputStream(inputFile); this.mediaType = mediaType; <BUGS> <BUGE> } catch (java.io.FileNotFoundException e) { file = null; } this.file = file; return this; } 
public ch.puzzle.itc.mobiliar.business.resourcegroup.control.CopyResourceResult doCopyResource(java.lang.Integer targetResourceId, java.lang.Integer originResourceId, ch.puzzle.itc.mobiliar.business.foreignable.entity.ForeignableOwner actingOwner) throws ch.puzzle.itc.mobiliar.business.foreignable.entity.ForeignableOwnerViolationException, ch.puzzle.itc.mobiliar.common.exception.AMWException { ch.puzzle.itc.mobiliar.business.resourcegroup.entity.ResourceEntity targetResource = commonDomainService.getResourceEntityById(targetResourceId); ch.puzzle.itc.mobiliar.business.resourcegroup.entity.ResourceEntity originResource = commonDomainService.getResourceEntityById(originResourceId); <BUGS> if (!(permissionBoundary.canCopyFromSpecificResource(originResource, originResource.getResourceGroup()))) { <BUGE> throw new ch.puzzle.itc.mobiliar.common.exception.NotAuthorizedException("Permission Denied"); } return copyResourceDomainService.copyFromOriginToTargetResource(originResource, targetResource, actingOwner); } 
@java.lang.Override public void done(com.parse.ParseUser user, com.parse.ParseException e) { if (e != null) { android.util.Log.e(com.codepath.timeline.network.TimelineClient.TAG, ((("Exception from getUser(" + userObjectId) + "): ") + (e.getMessage()))); return ; } if (user != null) { android.util.Log.d(com.codepath.timeline.network.TimelineClient.TAG, "Success getUser"); <BUGS> if (timelineClientGetUserListener != null) { timelineClientGetUserListener.onGetUser(user); <BUGE> } } } 
public boolean isStarBaseDeployed() { <BUGS> if ((ships.size()) <= 7) { <BUGE> org.openRealmOfStars.player.ship.Ship ship = ships.get(0); if ((ship.isStarBase()) && (ship.getFlag(Ship.FLAG_STARBASE_DEPLOYED))) { return true; } } return false; } 
private void determineUploadTime(java.util.List<com.example.plpa.utils.ExpApplyJson.Policy> policies) { android.content.IntentFilter filter = new android.content.IntentFilter(); <BUGS> <BUGE> for (com.example.plpa.utils.ExpApplyJson.Policy policy : policies) { <BUGS> if ((policy.Id) == (com.example.plpa.utils.UploadPolicy.CONNECTPOWER)) filter.addAction(Intent.ACTION_POWER_CONNECTED); else if ((policy.Id) == (com.example.plpa.utils.UploadPolicy.CONNECTWIFI)) filter.addAction(WifiManager.WIFI_STATE_CHANGED_ACTION);  <BUGE>  } registerBroadcastReciever(filter); } 
public java.lang.String textReturnResultOfSpecialFunctions(int line, int pos) { java.lang.StringBuilder s = new java.lang.StringBuilder(); <BUGS> if ((this.stackOfSpecialFunctionsCalledRecursively.size()) > 0) { this.stackOfSpecialFunctionsCalledRecursively.removeLast(); } <BUGE> java.lang.String res = nextFreeRegister(); s.append(textMove("$v0", res, line, pos)); return s.toString(); } 
@org.junit.Test public void testUsePlatformDefaultIfNoCharset() throws java.lang.Exception { final org.apache.logging.log4j.core.layout.PatternLayout layout = org.apache.logging.log4j.core.layout.PatternLayout.newBuilder().withPattern("%m").withConfiguration(ctx.getConfiguration()).build(); <BUGS> org.junit.Assert.assertEquals(java.nio.charset.Charset.defaultCharset(), layout.getCharset()); <BUGE> } 
@java.lang.Override protected void onStart() { android.util.Log.v("Testing Print", "onStart"); com.google.android.gms.auth.api.signin.GoogleSignInOptions gso = new com.google.android.gms.auth.api.signin.GoogleSignInOptions.Builder(com.google.android.gms.auth.api.signin.GoogleSignInOptions.DEFAULT_SIGN_IN).requestEmail().build(); mGoogleApiClient = new com.google.android.gms.common.api.GoogleApiClient.Builder(this).addApi(Auth.GOOGLE_SIGN_IN_API, gso).build(); mGoogleApiClient.connect(); super.onStart(); <BUGS> mDatabase = com.example.becomebeacon.beaconlocker.DataStoreActivity.getDatabase(); <BUGE> } 
private java.lang.String getTrailerID(org.verapdf.model.impl.pb.cos.COSArray ids) { <BUGS> java.lang.StringBuilder builder = new java.lang.StringBuilder(); for (org.verapdf.model.impl.pb.cos.COSBase id : ids) { builder.append(((org.verapdf.model.impl.pb.cos.COSString) (id)).getASCII()).append(' '); <BUGE> } <BUGS> return builder.toString().substring(0, ((builder.length()) - 2)); <BUGE> } 
public static com.coast.model.ResultMSG doSell(java.lang.String shopinFilePath, java.lang.String outPutFilePath) { com.coast.model.ResultMSG resultMSG = new com.coast.model.ResultMSG(); resultMSG.setErrorMessage(""); com.coast.service.SellService sellService = new com.coast.service.impl.SellServiceImpl(); java.util.List<com.coast.model.Product> products = sellService.getProductsFromShopinSellExcel(shopinFilePath, resultMSG); <BUGS> sellService.write(products, outPutFilePath, resultMSG); <BUGE> return resultMSG; } 
<BUGS> public void respondAccepted_whenCreateARefund(long amount, java.lang.String gatewayAccountId, java.lang.String chargeId, java.lang.String refundId, java.lang.String status, java.lang.String createdDate) { <BUGE> whenCreateRefund(amount, gatewayAccountId, chargeId).respond(org.mockserver.model.HttpResponse.response().withStatusCode(uk.gov.pay.api.utils.ACCEPTED_202).withHeader(uk.gov.pay.api.utils.CONTENT_TYPE, javax.ws.rs.core.MediaType.APPLICATION_JSON).withBody(buildGetRefundResponse(refundId, amount, status, createdDate))); } 
public static org.gitlab4j.api.GitLabApi login(org.gitlab4j.api.GitLabApi.ApiVersion apiVersion, java.lang.String url, java.lang.String username, java.lang.String password) throws org.gitlab4j.api.GitLabApiException { org.gitlab4j.api.SessionApi sessionApi = new org.gitlab4j.api.SessionApi(new org.gitlab4j.api.GitLabApi(apiVersion, url, ((java.lang.String) (null)))); org.gitlab4j.api.models.Session session = sessionApi.login(username, null, password); <BUGS> return new org.gitlab4j.api.GitLabApi(url, session); <BUGE> } 
private javax.swing.JTextField createText(java.lang.String text, int width, int height, boolean editable) { javax.swing.JTextField textfield = new javax.swing.JTextField(text); <BUGS> gui.GUI.setfinalSize(textfield, new java.awt.Dimension(width, height)); <BUGE> textfield.setEditable(editable); if (!editable) { textfield.setBackground(null); } <BUGS> <BUGE> return textfield; } 
private java.util.Set<java.security.Principal> collectPrincipals(final javax.jcr.Credentials credentials) { <BUGS> final java.util.HashSet<java.security.Principal> principals = new java.util.HashSet<>(); <BUGE> for (final org.fcrepo.auth.common.PrincipalProvider p : this.getPrincipalProviders()) { final java.util.Set<java.security.Principal> ps = p.getPrincipals(credentials); if (ps != null) { principals.addAll(p.getPrincipals(credentials)); } } return principals; } 
public void add(com.google.gson.JsonArray cardsJson) { for (int i = 0; i < (cardsJson.size()); i++) { <BUGS> cards.add(new org.leanpoker.player.Card(cardsJson.getAsJsonObject().get("suit").getAsString(), cardsJson.getAsJsonObject().get("rank").getAsString())); <BUGE> } } 
<BUGS> public void startService(final int target) { <BUGE> new java.lang.Thread(new java.lang.Runnable() { @java.lang.Override public void run() { if (checkAccess()) { startActivity(new android.content.Intent(com.example.hjk.testing.MainActivity.this, com.example.hjk.testing.Info.class).putExtra("id", id).putExtra("driver", driv).putExtra("target", target)); }else { android.os.Looper.prepare(); accessError(); android.os.Looper.loop(); } } }).start(); } 
public void shuffle() { for (int i = 51; i > 0; i--) { int shuf = ((int) ((java.lang.Math.random()) * (i + 1))); Card temp = deck[i]; <BUGS> deck[i] = deck[rand]; <BUGE> deck[shuf] = temp; } cardsUsed = 0; } 
private static void startWorker(ru.bigspawn.parser.bot.Bot bot, java.lang.String url) throws java.io.UnsupportedEncodingException { <BUGS> ru.bigspawn.parser.parser.AlterPortalParser parser = new ru.bigspawn.parser.parser.AlterPortalParser(new com.gargoylesoftware.htmlunit.WebClient(), url); <BUGE> java.lang.String loggerName = ru.bigspawn.parser.Utils.getLoggerNameFromUrl(url); ru.bigspawn.parser.Worker worker = new ru.bigspawn.parser.Worker(parser, bot, loggerName); ru.bigspawn.parser.Main.logger.debug(("Create " + worker)); java.lang.Thread thread = new java.lang.Thread(worker, ("Thread: " + loggerName)); thread.start(); ru.bigspawn.parser.Main.logger.debug(("Start " + thread)); } 
private void refreshLoc() { locations.clear(); <BUGS> for (org.Point p : selectedHP.getLocations()) { javafx.scene.control.ChoiceBox<org.Point> cb = new javafx.scene.control.ChoiceBox<>(); cb.setItems(javafx.collections.FXCollections.observableList(rooms)); cb.setValue(p); locations.add(cb); <BUGE> } } 
@java.lang.Override public void lock() { if (((reentrant) != null) && (reentrant.isSame())) { reentrant.acquire(); <BUGS> java.lang.System.out.println("Rentrant acquire!"); <BUGE> }else { while (!(cas.compareAndSet(false, true))) { waitForSignal(); } reentrant = new org.arivu.utils.lock.Reentrant(); <BUGS> java.lang.System.out.println("Rentrant created!"); <BUGE> } } 
public byte[] readPacket() { <BUGS> <BUGE> byte[] buffer = this.socket.readPacket(); <BUGS> byte buff = buffer[((buffer.length) - 1)]; byte[] bytes = new byte[]{ ((byte) (buff)) }; <BUGE> if (bytes == (org.itxtech.synapseapi.network.synlib.ServerConnection.MAGIC_BYTES)) { if ((buffer.length) > 4) { } } <BUGS> return buffer; <BUGE> } 
@java.lang.Override public boolean decode(@org.jetbrains.annotations.NotNull final com.intellij.openapi.util.TextRange rangeInsideHost, @org.jetbrains.annotations.NotNull final java.lang.StringBuilder outChars) { com.intellij.openapi.util.TextRange.assertProperRange(rangeInsideHost); java.lang.String subText = rangeInsideHost.substring(myHost.getText()); if ((myHost.getRawString()) != null) { outChars.append(subText); <BUGS> }else { com.intellij.openapi.util.Ref<int[]> sourceOffsetsRef = new com.intellij.openapi.util.Ref<int[]>(); com.goide.util.GoStringLiteralEscaper.parseStringCharacters(subText, outChars, sourceOffsetsRef); outSourceOffsets = sourceOffsetsRef.get(); <BUGE> } <BUGS> return true; <BUGE> } 
@org.springframework.web.bind.annotation.RequestMapping(value = "getSchoolById", method = org.springframework.web.bind.annotation.RequestMethod.POST) public org.springframework.web.servlet.ModelAndView getSchoolById(@org.springframework.web.bind.annotation.RequestParam int schId) { org.springframework.web.servlet.ModelAndView mv = new org.springframework.web.servlet.ModelAndView("school_update"); java.util.List<bean.School> schoolList = schoolService.getSchoolbyId(schId); if (!(schoolList.isEmpty())) { bean.School school = schoolList.get(0); <BUGS> schoolTimeHelper.Date2String_School(school); java.lang.System.out.println(school.getIOdeadLine()); <BUGE> mv.addObject("school", school); }else { java.lang.System.out.println(" no such school"); } return mv; } 
@java.lang.Override public void onClick(android.view.View view) { if (((txt_speech) != null) && (!(txt_speech.isSpeaking()))) { <BUGS> if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { <BUGE> txt_speech.speak(wordsEN[wordsIndex], TextToSpeech.QUEUE_FLUSH, null, null); <BUGS> }else { txt_speech.speak(wordsEN[wordsIndex], TextToSpeech.QUEUE_FLUSH, null); } <BUGE> } } 
private org.quicktionary.backend.TextNode generateNotFound(java.lang.String string) { org.quicktionary.backend.TextNode root; org.quicktionary.backend.TextNode paragraph; org.quicktionary.backend.TextNode header; <BUGS> org.quicktionary.backend.TextNode link; <BUGE> org.quicktionary.backend.TextNode text; root = new org.quicktionary.backend.TextNode(org.quicktionary.backend.TextNode.ROOT_TYPE); header = root.appendChild(new org.quicktionary.backend.TextNode(org.quicktionary.backend.TextNode.HEADER_TYPE)); paragraph = root.appendChild(new org.quicktionary.backend.TextNode(org.quicktionary.backend.TextNode.PARAGRAPH_TYPE)); header.setContent("Sorry!"); text = paragraph.appendChild(new org.quicktionary.backend.TextNode(org.quicktionary.backend.TextNode.PLAIN_TYPE)); text.setContent((("We couldn't find the page for the word " + string) + ".")); return root; } 
@javafx.fxml.FXML public void save(javafx.event.ActionEvent event) throws java.io.IOException { <BUGS> <BUGE> javafx.scene.Parent root = javafx.fxml.FXMLLoader.load(getClass().getResource("/views/home.fxml")); javafx.stage.Stage stage = ((javafx.stage.Stage) (budget.getScene().getWindow())); <BUGS> season.save("save1.json"); <BUGE> stage.getScene().setRoot(root); } 
@java.lang.Override public void onClick(android.view.View v) { <BUGS> int characterId = ((java.lang.Integer) (v.getTag())); <BUGE> me.colinhowes.rollinitiative.CombatAdapter.CombatClickListener.EventType eventType; if ((v.getId()) == (R.id.ib_hp_minus_select)) { eventType = me.colinhowes.rollinitiative.CombatAdapter.CombatClickListener.EventType.DECREASE_HEALTH; }else if ((v.getId()) == (R.id.ib_hp_add_select)) { eventType = me.colinhowes.rollinitiative.CombatAdapter.CombatClickListener.EventType.INCREASE_HEALTH; }else { eventType = me.colinhowes.rollinitiative.CombatAdapter.CombatClickListener.EventType.ITEM_CLICK; }  <BUGS> clickListener.onCombatClick(characterId, eventType); <BUGE> } 
public double getprice(java.lang.String symbol) throws java.io.IOException { yahoofinance.Stock stock = yahoofinance.YahooFinance.get(symbol); <BUGS> <BUGE> java.lang.String name = stock.getName(); if ((name.compareTo("N/A")) == 0) return -1;  java.math.BigDecimal price_dec = stock.getQuote().getPrice(); java.lang.Double price_dub = price_dec.doubleValue(); return price_dub; } 
@java.lang.Override public void readFromNBT(@org.jetbrains.annotations.NotNull final net.minecraft.nbt.NBTTagCompound compound) { <BUGS> <BUGE> final net.minecraft.nbt.NBTTagList furnaceTagList = compound.getTagList(com.minecolonies.coremod.colony.buildings.BuildingCook.TAG_FURNACES, Constants.NBT.TAG_COMPOUND); for (int i = 0; i < (furnaceTagList.tagCount()); ++i) { furnaces.add(net.minecraft.nbt.NBTUtil.getPosFromTag(furnaceTagList.getCompoundTagAt(i).getCompoundTag(com.minecolonies.coremod.colony.buildings.BuildingCook.TAG_POS))); } isSomethingInOven = compound.getBoolean(com.minecolonies.coremod.colony.buildings.BuildingCook.TAG_COOKING); } 
<BUGS> private org.bitcoinj.core.Transaction loadTransactionFromDisk(java.lang.String txHash) throws com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantLoadTransactionFromFileException { <BUGE> try { com.bitdubai.fermat_api.layer.osa_android.file_system.PluginTextFile pluginTextFile = pluginFileSystem.getTextFile(this.pluginId, TRANSACTION_DIRECTORY, txHash, FilePrivacy.PRIVATE, FileLifeSpan.PERMANENT); java.lang.String transactionContent = pluginTextFile.getContent(); org.bitcoinj.core.Transaction transaction = ((org.bitcoinj.core.Transaction) (com.bitdubai.fermat_api.layer.all_definition.util.XMLParser.parseXML(transactionContent, new org.bitcoinj.core.Transaction(NETWORK_PARAMETERS)))); return transaction; } catch (java.lang.Exception e) { throw new com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantLoadTransactionFromFileException(com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantLoadTransactionFromFileException.CONTEXT_CONTENT_SEPARATOR, e, (("Error loading transaction " + txHash) + " from disk."), "IO Error"); } } 
public static boolean hasSpace(proto.game.scene.Scene scene, proto.game.scene.PropType type, int x, int y, int facing) { <BUGS> for (proto.game.scene.Tile under : proto.game.scene.Prop.tilesUnder(type, scene, x, y, facing)) { <BUGE> if (under == null) return false;  for (proto.game.scene.Element e : under.inside()) if (e.wouldBlock(type)) return false;   } return true; } 
@java.lang.Override protected void onPostExecute(kz.mukhamedissa.exchangerates.data.response.ExchangeRateResponse response) { super.onPostExecute(response); if ((response.isSuccess()) && ((response.result) != null)) { <BUGS> <BUGE> kz.mukhamedissa.exchangerates.util.db.orm.ORMFactory.getArticleORM().insert(getBaseContext(), response.result); } } 
public void actionPerformed(java.awt.event.ActionEvent event) { if ((movieIdChosen) != null) { int id = java.lang.Integer.parseInt(movieIdChosen); <BUGS> <BUGE> movieController.returnMovie(id, panel, scroll); <BUGS> rentalInfoController.returnMovie(id, clientSelected.getId()); <BUGE> } } 
int getParallelism() { <BUGS> com.google.common.base.Preconditions.checkArgument(((null == (parallelism)) || ((parallelism) > 0)), "invalid parallelism %s; must be greater than zero"); <BUGE> java.lang.Integer value = parallelism; if (null == value) { value = java.lang.Runtime.getRuntime().availableProcessors(); } return value; } 
public void draw() { <BUGS> <BUGE> applet.translate(20, ((CONTROL_HEIGHT) - 100)); if ((game.tasks.size()) > 0) { applet.text(game.tasks.get(taskPosition).getName(), 0, 0); }else { applet.text("No tasks available", 0, 0); } } 
@java.lang.Override public void onItemClick(android.widget.AdapterView<?> adapterView, android.view.View view, int i, long l) { com.example.sayli.nchs.getset.Logs point = listLogs.get(i); android.content.Intent startCallReport = new android.content.Intent(this, com.example.sayli.nchs.ReportCallStatus.class); <BUGS> <BUGE> startCallReport.putExtra("crn", point.getCrn()); startCallReport.putExtra("mob", point.getCustNo()); startActivity(startCallReport); } 
<BUGS> public java.util.List<java.io.File> addUpperItem(java.util.List<java.io.File> oldList) { <BUGE> if (android.text.TextUtils.isEmpty(mCurrentPath)) { throw new java.lang.RuntimeException("mCurrentPath is null!"); } java.io.File upperFile = new java.io.File(mCurrentPath).getParentFile(); oldList.add(0, upperFile); return oldList; } 
public int pull_chunk(double[] data_buffer, double[] timestamp_buffer, double timeout) throws java.lang.Exception { int[] ec = new int[]{ 0 }; <BUGS> long res = edu.ucsd.sccn.LSL.inst.lsl_pull_chunk_d(obj, data_buffer, timestamp_buffer, ((long) (data_buffer.length)), ((long) (timestamp_buffer.length)), timeout, ec); <BUGE> edu.ucsd.sccn.LSL.check_error(ec); return ((int) (res)); } 
private boolean isPrime(int p) { if (p == 2) return true;  if (p < 3) return false;  if ((p % 2) == 0) return false;  <BUGS> for (int i = 3; (i * i) < p; i += 2) <BUGE> if ((p % i) == 0) return false;   return true; } 
public com.ma.schiffeversenken.android.model.Field.ShipsDescriptor newShipsDescriptor(com.ma.schiffeversenken.android.model.Ship[] placedShips) { com.ma.schiffeversenken.android.model.Field.ShipsDescriptor desc = new com.ma.schiffeversenken.android.model.Field.ShipsDescriptor(); <BUGS> desc.numberOfShips = placedShips.length; <BUGE> desc.shipsPlaced = new java.util.ArrayList<com.ma.schiffeversenken.android.model.Field.ShipDescriptor>(placedShips.length); for (com.ma.schiffeversenken.android.model.Ship ship : placedShips) { com.ma.schiffeversenken.android.model.Field.ShipDescriptor shipDesc = new com.ma.schiffeversenken.android.model.Field.ShipDescriptor().newShipDescriptor(ship); desc.shipsPlaced.add(shipDesc); } return desc; } 
@org.springframework.web.bind.annotation.RequestMapping(value = "/list", method = org.springframework.web.bind.annotation.RequestMethod.GET) <BUGS> public java.util.ArrayList<be.ehb.restservermetdatabase.model.Avatar> list(@org.springframework.web.bind.annotation.RequestParam(value = "user_id", defaultValue = "") int user_id, @org.springframework.web.bind.annotation.RequestParam(value = "user_id", defaultValue = "") <BUGE> java.lang.String user_mail) { if ((user_id == 0) && (user_mail.equals(""))) { return be.ehb.restservermetdatabase.dao.AvatarDao.getAvatars(); <BUGS> }else <BUGE> if (!(user_mail.equals(""))) { user_id = be.ehb.restservermetdatabase.dao.UserDao.getUserByEmail(user_mail).getUser_id(); <BUGS> return be.ehb.restservermetdatabase.dao.AvatarDao.getAvatarsByUser(user_id); }else { return null; <BUGE> } <BUGS>  <BUGE> } 
<BUGS> @pt.webdetails.cfr.GET @pt.webdetails.cfr.Path(value = "/createFolder") public void createFolder(@javax.ws.rs.core.Context javax.servlet.http.HttpServletRequest request, @javax.ws.rs.core.Context javax.servlet.http.HttpServletResponse response) throws java.lang.Exception { java.lang.String path = pt.webdetails.cfr.CfrApi.checkRelativePathSanity(getParameter("path", request)); <BUGE> if ((path == null) || (org.apache.commons.lang.StringUtils.isBlank(path))) { throw new java.lang.Exception("path is null or empty"); } boolean createResult = getRepository().createFolder(path); <BUGS> writeMessage(new org.json.JSONObject().put("result", createResult).toString(), response.getOutputStream()); <BUGE> } 
@java.lang.Override public java.lang.Object call(java.lang.Object target) throws java.lang.Exception { java.lang.String[] bashArgs = ((bb.mbaas.api.elements.SDKBashButton) (runBtn)).getBashArgs(); bb.mbaas.api.GlobalProperties globalProperties = new bb.mbaas.api.GlobalProperties(); <BUGS> java.lang.String testSuitePath = ((projPathTF.getText()) + (globalProperties.properties.get("TestSuiteRelativePathToProject"))) + "/../temp/test_suite"; <BUGE> bashArgs[2] = testSuitePath; ((bb.mbaas.api.elements.SDKBashButton) (runBtn)).refreshBashArgs(bashArgs); return null; } 
private void readVersion() throws java.lang.Exception { <BUGS> java.io.InputStream verStream = getClass().getClassLoader().getResourceAsStream(com.mobilehelix.appserver.system.VersionManager.versionProperties); java.util.Properties verProps = new java.util.Properties(); verProps.load(verStream); majorVer = verProps.getProperty("Major"); minorVer = verProps.getProperty("Minor"); revisionVer = verProps.getProperty("Revision"); versionString = ((((majorVer) + ".") + (minorVer)) + ".") + (revisionVer); <BUGE> } 
@java.lang.Override public N next() { <BUGS> if ((((data.size()) - 1) < (i)) || ((data.get(i)) == null)) <BUGE> data.add(getRandomValue());  return data.get(((i)++)); } 
protected void setBannerVisible() { com.kiroule.jpetstore.vaadinspring.domain.Account account = com.kiroule.jpetstore.vaadinspring.ui.util.CurrentAccount.get(); <BUGS> if (((account != null) && (account.isBannerOption())) && (!(com.google.common.base.Strings.isNullOrEmpty(account.getBannerName())))) { bannerImage.setValue(account.getBannerName()); bannerLayout.setVisible(true); bannerLayout.setStyleName(getBannerStyleName(account.getBannerName())); } <BUGE> } 
@java.lang.Override protected void onCreate(@android.support.annotation.Nullable android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); <BUGS> rustelefonen.no.drikkevett_android.information.DBSeeder.seed(this); <BUGE> android.content.Intent intent; if (hasUser()) intent = new android.content.Intent(this, rustelefonen.no.drikkevett_android.MainActivity.class); else intent = new android.content.Intent(this, rustelefonen.no.drikkevett_android.intro.WelcomeActivity.class);  startActivity(intent); finish(); } 
@java.lang.Override public void setHtmltopdf(java.lang.String htmlString, java.lang.String collectionTitle) { <BUGS> this.analyticService.setHTMLtoPDF(htmlString, collectionTitle, new com.google.gwt.user.client.rpc.AsyncCallback<java.lang.String>() { <BUGE> @java.lang.Override public void onSuccess(java.lang.String result) { getView().getFrame().setUrl(result); }  @java.lang.Override public void onFailure(java.lang.Throwable caught) { } }); } 
<BUGS> public static org.kentuni.WeatherStation.Drivers.MCP3427 getDriver() throws java.io.IOException { <BUGE> if ((org.kentuni.WeatherStation.Drivers.ADC.instance) == null) { synchronized(org.kentuni.WeatherStation.Drivers.ADC.class) { if ((org.kentuni.WeatherStation.Drivers.ADC.instance) == null) { <BUGS> org.kentuni.WeatherStation.Drivers.ADC.instance = new org.kentuni.WeatherStation.Drivers.MCP3427(com.pi4j.io.i2c.I2CFactory.getInstance(I2CBus.BUS_1, 105)); <BUGE> } } } return org.kentuni.WeatherStation.Drivers.ADC.instance; } 
private static java.nio.ByteBuffer setUpBuffer(java.nio.ByteBuffer sector, int value) { sector.clear(); <BUGS> java.lang.Byte byteValue = ((byte) (value & 255)); <BUGE> while (sector.hasRemaining()) { sector.put(byteValue); } sector.flip(); return sector; } 
public Graph[] getConnectedComponents() { int nc = flagConnectedComponents(); Graph[] comps = new Graph[nc]; <BUGS> <BUGE> for (Graph.Node n : nodes) { comps[((int) (n.flag))].nodes.add(n); } return comps; } 
public static boolean isEmpty(java.lang.Object payload) { <BUGS> if (org.springframework.util.StringUtils.isEmpty(payload)) { return true; <BUGE> }else if (payload instanceof org.w3c.dom.Node) { return !(((org.w3c.dom.Node) (payload)).hasChildNodes()); }else { throw new java.lang.RuntimeException(no.difi.meldingsutveksling.noarkexchange.PayloadUtil.PAYLOAD_UNKNOWN_TYPE); }  } 
public void backupPortfolio(android.content.Context context, java.lang.String fileName) { persist(); this.mAppStorage.putString(nitezh.ministock.domain.PortfolioStockRepository.PORTFOLIO_JSON, getStocksJson().toString()).apply(); java.lang.String rawJson = this.mAppStorage.getString(nitezh.ministock.domain.PortfolioStockRepository.PORTFOLIO_JSON, ""); <BUGS> nitezh.ministock.UserData.writeExternalStorage(context, rawJson, (fileName + ".txt"), "portfoliobackups/"); nitezh.ministock.DialogTools.showSimpleDialog(context, "PortfolioActivity backed up", ("Your portfolio settings have been backed up to ministocks/portfoliobackups/" + fileName)); <BUGE> } 
private static int findValue(int needle, java.lang.Integer[] haystack) { int start = 0; <BUGS> int end = (haystack.length) - 1; while (start <= end) { <BUGE> int midpoint = (start + end) / 2; int test = haystack[midpoint]; if (test == needle) { return midpoint; }else if (test < needle) { start = midpoint + 1; }else { <BUGS> end = midpoint - 1; <BUGE> }  } return -1; } 
public void run() { try { org.apache.commons.io.FileUtils.touch(temporaryFileDownloadLocation); <BUGS> edu.pitt.apollo.filestoreservice.threads.FileDownloadMonitor fileDownloadMonitor = new edu.pitt.apollo.filestoreservice.threads.FileDownloadMonitor(temporaryFileDownloadLocation); fileDownloadMonitor.start(); <BUGE> org.apache.commons.io.FileUtils.copyURLToFile(urlToFile, temporaryFileDownloadLocation); org.apache.commons.io.FileUtils.copyFile(temporaryFileDownloadLocation, finalFileDownloadFileLocation); org.apache.commons.io.FileUtils.forceDelete(temporaryFileDownloadLocation); } catch (java.io.IOException e) { e.printStackTrace(); } } 
protected void initializeOrdinal(final int defaultOrdinal) { this.ordinal = defaultOrdinal; java.lang.String ordinal = get(PropertySource.TAMAYA_ORDINAL); if (ordinal != null) { try { <BUGS> this.ordinal = java.lang.Integer.valueOf(ordinal); <BUGE> } catch (java.lang.NumberFormatException e) { org.apache.tamaya.core.propertysource.BasePropertySource.LOG.log(java.util.logging.Level.WARNING, "Specified {0} is not a valid Integer value: {1} - using defaultOrdinal {2}", new java.lang.Object[]{ org.apache.tamaya.spi.PropertySource.TAMAYA_ORDINAL , ordinal , defaultOrdinal }); } } } 
@java.lang.Override public final void unregisterRpcNotificationListener(com.smartdevicelink.protocol.enums.FunctionID functionID, com.smartdevicelink.proxy.rpc.listeners.OnRPCNotificationListener rpcNotificationListener) { int id = functionID.getId(); java.util.HashSet<com.smartdevicelink.proxy.rpc.listeners.OnRPCNotificationListener> listenerSet = mNotificationListeners.get(id); if (listenerSet != null) { listenerSet.remove(rpcNotificationListener); if ((listenerSet.isEmpty()) && ((mSdlProxyALM) != null)) { mSdlProxyALM.removeOnRPCNotificationListener(functionID); <BUGS> <BUGE> } } } 
protected java.lang.Long doInBackground(com.androidexpansion.filedownloader.DownloadExtraAssets[] remoteLocalResources) { int count = remoteLocalResources.length; long totalSize = 0; <BUGS> for (int i = count - 1; i >= 0; i--) { <BUGE> totalSize += downloadExtraAssets.downloadFile(remoteLocalResources[i]); <BUGS> java.lang.Integer progress = ((int) ((i / ((float) (count))) * 100)); <BUGE> publishProgress(progress); if (isCancelled()) break;  } return totalSize; } 
public void loadPost(edu.ycp.cs320.groupProject.model.Post p, java.sql.ResultSet resultSet, int index) throws java.sql.SQLException { <BUGS> <BUGE> p.setRoomID(resultSet.getInt((index++))); <BUGS> p.setSenderName(resultSet.getString((index++))); p.setText(resultSet.getString((index++))); <BUGE> } 
@java.lang.Override protected void onResume() { if ((hasCameraPermissions()) && ((mCamera) != null)) { mCamera.start(); <BUGS> showCameraPreview(); mTakePictureButton.setEnabled(true); <BUGE> mProgressBar.setVisibility(View.GONE); } final net.gini.switchsdk.Image selectedImage = getIntent().getParcelableExtra(net.gini.switchsdk.TakePictureActivity.STATE_KEY_SELECTED_IMAGE); if (selectedImage != null) { mPresenter.onImageSelected(selectedImage); }else { mPresenter.onTakePictureSelected(); } super.onResume(); } 
@org.junit.Test public void testHGapVGapAccessors() { com.github.bordertech.wcomponents.layout.FlowLayout flow; boolean isVertical; for (com.github.bordertech.wcomponents.layout.FlowLayout.Alignment a : FlowLayout.Alignment.values()) { <BUGS> isVertical = a == (FlowLayout.VERTICAL); <BUGE> flow = new com.github.bordertech.wcomponents.layout.FlowLayout(a, com.github.bordertech.wcomponents.layout.FlowLayout_Test.GAP); org.junit.Assert.assertEquals("Incorrect vertical gap", (isVertical ? com.github.bordertech.wcomponents.layout.FlowLayout_Test.GAP : 0), flow.getVgap()); org.junit.Assert.assertEquals("incorrect horizontal gap", (isVertical ? 0 : com.github.bordertech.wcomponents.layout.FlowLayout_Test.GAP), flow.getHgap()); } } 
<BUGS> private java.lang.String absentDirectory() { <BUGE> try { <BUGS> java.lang.String result = ((existingDirectory()) + (xyz.enhorse.commons.HandyPathTest.name)) + (HandyPath.PATH_SEPARATOR); <BUGE> java.nio.file.Files.deleteIfExists(java.nio.file.Paths.get(result)); <BUGS> return result; <BUGE> } catch (java.io.IOException ex) { throw new java.lang.IllegalStateException(); } } 
private guiPacket.Card removeCardFromHand(guiPacket.Card cardToRemove) { for (int i = 0; i < (hand.size()); i++) { if ((cardToRemove.compareTo(hand.get(i))) == 0) { hand.remove(i); <BUGS> if ((cardToRemove instanceof cards.Tech) || (cardToRemove instanceof cards.ResourceCard)) { addCardToScrapYard(cardToRemove); } <BUGE> return cardToRemove; } } java.lang.System.out.println("RemoveCardFromHand: Something went wrong"); return null; } 
<BUGS> public void generateBottomEdge() { <BUGE> if (!(this.done)) { this.hue = 1.0F / 3.0F; this.cancelled = false; drawKochEdge(((1 - ((java.lang.Math.sqrt(3.0)) / 2.0)) / 2), 0.75, ((1 + ((java.lang.Math.sqrt(3.0)) / 2.0)) / 2), 0.75, this.level); } } 
@java.lang.Override protected void onPostExecute(java.lang.Void aVoid) { myEvents.clear(); <BUGS> <BUGE> myEvents.addAll(eventbriteEvents); <BUGS> <BUGE> myEvents.addAll(eventfulEvents); <BUGS> sortData(); <BUGE> mAdapter = new com.festivent.hardeep.festivent.ListAdapter(this, myEvents, sEvents, true); mRecyclerView.setAdapter(mAdapter); pBar.setVisibility(View.GONE); super.onPostExecute(aVoid); } 
private boolean hasKeepAliveForConnection() { java.lang.String keepAlive = assertion.getKeepAlive(); if (gov.hhs.fha.nhinc.nhinclib.NullChecker.isNullish(keepAlive)) { keepAlive = getKeepAliveProperty(); } <BUGS> return (gov.hhs.fha.nhinc.nhinclib.NullChecker.isNotNullish(keepAlive)) && ((keepAlive.equalsIgnoreCase("TRUE")) || (keepAlive.equalsIgnoreCase("T"))); <BUGE> } 
private <T extends com.librato.metrics.reporter.Metric> T register(java.lang.Class<T> klass, com.librato.metrics.reporter.Supplier<T> metric) { com.librato.metrics.reporter.Signal signal = createSignal(); if (signal == null) { return register(registry, name, metric, klass); } <BUGS> java.lang.String encodedName = encodeName(name, signal); <BUGE> return register(registry, encodedName, metric, klass); } 
public static void chunk(java.awt.image.Raster target, psiborg.fractal.Viewport view, int times, java.lang.Runnable callback) { for (psiborg.fractal.Viewport fragment : new psiborg.fractal.Viewport(0, 0, target.getWidth(), target.getHeight()).tesselate(times)) { <BUGS> psiborg.fractal.jobs.JobQueue.addJob(new psiborg.fractal.jobs.RenderJob(fragment, view, callback)); <BUGE> } } 
public boolean updateProduction(double diff) { _simStat.currentElectricity += diff; if ((_connect._simStat) != null) { _connect._simStat.currentElectricity += diff; } if (((_simStat.currentElectricity) > (_maxProduction)) || ((_simStat.currentElectricity) < (_minProduction))) { _simStat.isOk = false; }else { <BUGS> _simStat.isOk = false; <BUGE> } return _simStat.isOk; } 
private void addPorts(java.lang.StringBuilder b) { if ((ports.size()) > 0) { java.lang.String[] portsS = new java.lang.String[ports.size()]; int i = 0; <BUGS> for (java.lang.String port : portsS) { <BUGE> portsS[(i++)] = validatePortExposure(port); } DockerFileKeyword.EXPOSE.addTo(b, portsS); } } 
@java.lang.Override public boolean onTouchEvent(android.view.MotionEvent ev) { super.onTouchEvent(ev); dragHelper.processTouchEvent(ev); final android.view.ViewGroup parent = ((android.view.ViewGroup) (findBottomView(this, x, y).getParent())); <BUGS> return false || (parent == (this)); <BUGE> } 
@java.lang.Override public void enter() { android.telecom.Log.i(com.android.server.telecom.CallAudioModeStateMachine.LOG_TAG, "Audio focus entering RINGING state"); if (mCallAudioManager.startRinging()) { mAudioManager.requestAudioFocusForCall(AudioManager.STREAM_RING, AudioManager.AUDIOFOCUS_GAIN_TRANSIENT); <BUGS> if ((mMostRecentMode) == (android.media.AudioManager.MODE_IN_CALL)) { android.telecom.Log.i(com.android.server.telecom.CallAudioModeStateMachine.LOG_TAG, ("Transition from IN_CALL -> RINGTONE." + "  Resetting to NORMAL first.")); mAudioManager.setMode(AudioManager.MODE_NORMAL); } <BUGE> mAudioManager.setMode(AudioManager.MODE_RINGTONE); mCallAudioManager.setCallAudioRouteFocusState(CallAudioRouteStateMachine.RINGING_FOCUS); }else { android.telecom.Log.i(com.android.server.telecom.CallAudioModeStateMachine.LOG_TAG, "Entering RINGING but not acquiring focus -- silent ringtone"); } mCallAudioManager.stopCallWaiting(); } 
public boolean hasGameEnded() { int countOfAliveWolves = 0; int countOfAliveCitizens = 0; for (com.raibaz.lupus.game.Player p : g.getPlayers()) { if (p.isAlive()) { if ((p.getRole()) == (PlayerRole.WOLF)) { countOfAliveWolves++; }else { countOfAliveCitizens++; } } } <BUGS> return (countOfAliveWolves == 0) || (countOfAliveWolves >= (countOfAliveCitizens - 1)); <BUGE> } 
public boolean checkData(int HDice, int HRoll, int DDice, int DRoll, int DDealt) { if ((HRoll < HDice) || (HRoll > (HDice * (MAX_DIE_ROLL)))) return false;  if ((DRoll < DDice) || (DRoll > (DDice * (MAX_DIE_ROLL)))) return false;  <BUGS> if (DDealt > DRoll) return false;  <BUGE> return true; } 
@java.lang.Override public void run() { if ((countDownCountainer) != null) { if ((counter) >= 0) { countDownCountainer.setVisibility(View.VISIBLE); countDownTextView.setText(java.lang.String.format(getResources().getString(R.string.count_down_text), counter)); <BUGS> countDownProgressBar.setProgress(((com.wb.nextgen.fragment.ECVideoViewFragment.COUNT_DOWN_SECONDS) - (counter))); <BUGE> }else { countDownTextView.setText(""); countDownCountainer.setVisibility(View.GONE); } } } 
@java.lang.Override protected org.eclipse.draw2d.geometry.Rectangle getFrameArea(org.eclipse.draw2d.geometry.Rectangle origin) { if (!(model.isMinimizedView())) { <BUGS> return new org.eclipse.draw2d.geometry.Rectangle(((origin.x) + ((GRID_SIZE) / 2)), origin.y, ((origin.width) - (GRID_SIZE)), origin.height); <BUGE> } return super.getFrameArea(origin); } 
int convertSImeiToID(java.lang.String text) { <BUGS> <BUGE> int sum = 0; char[] imei = text.toCharArray(); for (int i = 0; i < (text.length()); i++) sum = sum + (imei[i]);  return 16384 + sum; } 
private void initHeaderViewToRefresh(int deltaY) { int topDistance = UpdateHeadViewMarginTop(deltaY); if ((topDistance < 0) && (topDistance > (-(headViewHeight)))) { <BUGS> mBaseHeaderAdapter.pullViewToRefresh(); <BUGE> mHeaderState = com.sak.ultilviewlib.UltimateRefreshView.PULL_TO_REFRESH; }else if ((topDistance > 0) && ((mHeaderState) != (com.sak.ultilviewlib.UltimateRefreshView.RELEASE_TO_REFRESH))) { <BUGS> mBaseHeaderAdapter.releaseViewToRefresh(); <BUGE> mHeaderState = com.sak.ultilviewlib.UltimateRefreshView.RELEASE_TO_REFRESH; }  } 
public void setVideoMode() { this.indicator.setSliderState((+1)); this.worm.stretchTo((-1), (-1)); this.bgGray.setBackgroundOpacity(0.5F); this.state = com.jfixby.telecam.ui.input.slider.Slider.VIDEO; <BUGS> this.switchCameraButton.hide(); <BUGE> } 
void merge(hivemall.fm.FMPredictUDAF.PartialResult other) { this.ret += other.ret; if ((this.sumVjXj) == null) { this.sumVjXj = other.sumVjXj; this.sumV2X2 = other.sumV2X2; }else { hivemall.fm.FMPredictUDAF.PartialResult.add(other.sumVjXj, sumVjXj); <BUGS> <BUGE> hivemall.fm.FMPredictUDAF.PartialResult.add(other.sumV2X2, sumV2X2); } } 
@java.lang.Override public void done(com.parse.ParseException e) { if (e == null) { <BUGS> mOriginal.remove(getItems().remove(position)); <BUGE> getItems().remove(position); getBaseAdapter().notifyItemRemoved(position); android.widget.Toast.makeText(getContext(), "Sent request!", Toast.LENGTH_LONG).show(); }else { android.widget.Toast.makeText(getContext(), e.getMessage(), Toast.LENGTH_LONG).show(); } } 
<BUGS> public java.util.Map<java.lang.String, java.lang.Object> getArticleDetailById(long id) { java.util.Map<java.lang.String, java.lang.Object> article = aDao.getArticleDetailById(id); article.put("tags", aDao.getArticleTagsById(java.lang.Integer.parseInt(article.get("id").toString()))); <BUGE> return article; } 
private void fail(final java.lang.Throwable t) { <BUGS> com.barchart.netty.server.util.TimeoutPromiseGroup.log.debug("fail"); <BUGE> synchronized(this) { <BUGS> com.barchart.netty.server.util.TimeoutPromiseGroup.log.debug("fail sync"); <BUGE> if (!(done)) { done = true; if ((timeoutFuture) != null) { timeoutFuture.cancel(true); } setFailure(t); } } <BUGS> com.barchart.netty.server.util.TimeoutPromiseGroup.log.debug("fail out"); <BUGE> } 
private void freezeValues(net.ssehub.easy.varModel.model.AbstractVariable var, net.ssehub.easy.varModel.confModel.IFreezeSelector selector) { if ((var.isTopLevel()) || ((var.getParent()) instanceof net.ssehub.easy.varModel.model.AttributeAssignment)) { net.ssehub.easy.varModel.confModel.IDecisionVariable frozenVariable = getDecision(var); <BUGS> frozenVariable.freeze(selector); <BUGE> }else { net.ssehub.easy.varModel.model.IModelElement parent = var.getParent(); java.lang.System.out.println(("Config freeze for nested variable not implemented: " + parent)); } } 
private void processMethod(final java.lang.reflect.Method method) { method.setAccessible(true); if ((com.matthewtamlin.spyglass.library.util.AnnotationUtil.getValueHandlerAnnotation(method)) != null) { <BUGS> processMethodWithCallHandler(method); <BUGE> }else if ((com.matthewtamlin.spyglass.library.util.AnnotationUtil.getCallHandlerAnnotation(method)) != null) { <BUGS> processMethodWithValueHandler(method); <BUGE> }  } 
private void loadDefaultData() { presentation.gui.CreditCard paymentInfo = CheckoutData.INSTANCE.getDefaultPaymentInfo(); nameOnCardField.setText(paymentInfo.getNameOnCard()); <BUGS> cardNumberField.setText(paymentInfo.getCardNum()); cardTypeField.setValue(paymentInfo.getCardType()); <BUGE> expirationField.setText(paymentInfo.getExpirationDate()); } 
public static void main(java.lang.String[] args) { RunningMedian x = new RunningMedian(); for (int i = 0; i < (args.length); i++) { x.add(java.lang.Integer.parseInt(args[i])); <BUGS> x.debug(); <BUGE> } java.lang.System.out.println(x.getMedian()); } 
private void startVPN(de.blinkt.openvpn.VpnProfile profile) { mSelectedProfile = profile; <BUGS> mSelectedProfile.mAllowLocalLAN = mLanCheck.isChecked(); <BUGE> profileManager.saveProfile(this, profile); prefs.setLastProfile(profile.getName()); prefs.setLastUuid(profile.getUUIDString()); prefs.setLan(mSelectedProfile.mAllowLocalLAN); launchVPN(); } 
@java.lang.Override <BUGS> public java.util.List<uk.co.olimor.BMBTApi_boot.model.TestResult> getResultHistory(final int userId) throws uk.co.olimor.BMBTApi_boot.exception.ApiException { <BUGE> log.entry(userId); final java.util.List<uk.co.olimor.BMBTApi_boot.model.TestResult> results = query(java.lang.String.format(uk.co.olimor.BMBTApi_boot.dao.impl.ResultsHistoryQueryImpl.QUERY, userId)); if ((results.size()) == 0) throw new uk.co.olimor.BMBTApi_boot.exception.ApiException("No results found for user id", org.springframework.http.HttpStatus.NOT_FOUND);  return log.traceExit(results); } 
@java.lang.Override public void propertyChange(java.beans.PropertyChangeEvent event) { if ((document) != null) { <BUGS> document.getLineManager().removeLineListener(this); <BUGE> } document = ((kkckkc.syntaxpane.model.SourceDocument) (event.getNewValue())); document.getLineManager().addLineListener(this); document.addFoldListener(new kkckkc.syntaxpane.model.MutableFoldManager.FoldListener() { public void foldUpdated() { repaint(); } }); } 
public void test_getLimits() { double[] orgLimits = ((double[]) (limits.clone())); double[] l = f1.getLimits(); <BUGS> assertTrue("Wrong limits", l.equals(limits)); <BUGE> l[0] = 3.14527; <BUGS> assertTrue("Limits copied", (!(l.equals(orgLimits)))); <BUGE> } 
public boolean elementIsDisplayed(final net.serenitybdd.core.pages.By byElementCriteria) { try { waitFor(net.serenitybdd.core.pages.ExpectedConditions.visibilityOfAllElementsLocatedBy(byElementCriteria)); return true; } catch (net.serenitybdd.core.pages.NoSuchElementException noSuchElement) { <BUGS> net.serenitybdd.core.pages.RenderedPageObjectView.LOGGER.trace(("No such element " + noSuchElement)); <BUGE> return false; } catch (net.serenitybdd.core.pages.StaleElementReferenceException se) { <BUGS> net.serenitybdd.core.pages.RenderedPageObjectView.LOGGER.trace(("Element no longer attached to the DOM " + se)); <BUGE> return false; } catch (net.serenitybdd.core.pages.TimeoutException iGuessItsNotThere) { return false; } } 
@java.lang.Override public void getAllOperationIssuesByMedicoId(java.util.List<com.artursworld.reactiontest.model.entity.OperationIssue> operationIssuesList) { addItemsOnOperationIssueSpinner(operationIssuesList, spinner); com.artursworld.reactiontest.controller.util.UtilsRG.info(((("Operation issues loaded for user(" + (getSelectedMedicalUser())) + ")=") + (operationIssuesList.toString()))); if (spinner != null) { com.artursworld.reactiontest.controller.util.UtilsRG.putString(UtilsRG.OPERATION_ISSUE, spinner.getSelectedItem().toString(), getActivity()); <BUGS> setAvarageReactionTime(spinner.getSelectedItem().toString()); <BUGE> } } 
private pl.sdacaemy.data.structures.impl.ForwardList.Node getItemNode(int index) throws java.lang.IndexOutOfBoundsException { <BUGS> <BUGE> int currentIndex = 0; pl.sdacaemy.data.structures.impl.ForwardList.Node currentNode = head; while (((currentNode.next) != null) && (currentIndex < index)) { ++currentIndex; currentNode = currentNode.next; } if (currentNode == null) { throw new java.lang.IndexOutOfBoundsException(("Sorry no such element: " + index)); } return currentNode; } 
protected org.openl.rules.lang.xls.binding.XlsModuleOpenClass createModuleOpenClass(org.openl.rules.lang.xls.syntax.XlsModuleSyntaxNode moduleNode, org.openl.OpenL openl, org.openl.rules.data.IDataBase dbase, java.util.Set<org.openl.dependency.CompiledDependency> moduleDependencies, org.openl.binding.IBindingContext bindingContext) { <BUGS> org.openl.rules.lang.xls.binding.XlsModuleOpenClass module = new org.openl.rules.lang.xls.binding.XlsModuleOpenClass(null, org.openl.rules.lang.xls.XlsHelper.getModuleName(moduleNode), new org.openl.rules.lang.xls.binding.XlsMetaInfo(moduleNode), openl, dbase, moduleDependencies, org.openl.engine.OpenLSystemProperties.isDTDispatchingMode(bindingContext.getExternalParams()), org.openl.engine.OpenLSystemProperties.isDispatchingValidationEnabled(bindingContext.getExternalParams())); processErrors(module.getErrors(), bindingContext); return module; <BUGE> } 
public void sendLoggedIn(org.bukkit.plugin.Plugin plugin, org.bukkit.entity.Player p) { com.mengcraft.account.bungee.BungeeMessage message = new com.mengcraft.account.bungee.BungeeMessage(); message.setType(BungeeMain.DISTRIBUTE); message.setName(p.getName()); message.setIp(p.getAddress().getAddress().getHostAddress()); <BUGS> map.put(message.getName(), message.getIp()); <BUGE> p.sendPluginMessage(plugin, com.mengcraft.account.bungee.BungeeMain.CHANNEL, message.toByteArray()); } 
@java.lang.Override public void doIfFailed() { if (((socket) == null) || (!(connectedToSocket))) { <BUGS> if ((act) != null) <BUGE> if ((((ru.racoondeveloper.contactchat.MainActivity) (act)).splScreen) != null) ((ru.racoondeveloper.contactchat.MainActivity) (act)).splScreen.setButtonActive(); <BUGS> else reconnect(); <BUGE>  <BUGS> <BUGE>  } } 
public void run() { <BUGS> if ((mRequestingUpdates) == (mSharedPreferences.getBoolean(edu.cornell.jjl.info4120final.MainActivity.REQUESTING_LOCATION_UPDATES_KEY, false))) { }else { mRequestingUpdates = mSharedPreferences.getBoolean(edu.cornell.jjl.info4120final.MainActivity.REQUESTING_LOCATION_UPDATES_KEY, false); if ((mRequestingUpdates) && (mGoogleApiClient.isConnected())) { startLocationUpdates(); mAccelLogger = new edu.cornell.jjl.info4120final.DataLogger("accel"); mLocationLogger = new edu.cornell.jjl.info4120final.DataLogger("location"); mActivityLogger = new edu.cornell.jjl.info4120final.DataLogger("activity_recognition"); <BUGE> }else { <BUGS> <BUGE> } } handler.postDelayed(this, 1000); } 
public void startUpdates() { if (servicesConnected(mContext)) { if (com.gmail.vanyadubik.managerplus.service.gps.GoogleLocationService.locationEnabled(mContext)) { <BUGS> locationUpdateListener.canReceiveLocationUpdates(); <BUGE> startLocationUpdates(); }else { <BUGS> locationUpdateListener.cannotReceiveLocationUpdates(); <BUGE> android.util.Log.e(com.gmail.vanyadubik.managerplus.common.Consts.TAGLOG_GPS, "Unable to get your location.Please turn on your device Gps"); } }else { <BUGS> locationUpdateListener.cannotReceiveLocationUpdates(); <BUGE> android.util.Log.e(com.gmail.vanyadubik.managerplus.common.Consts.TAGLOG_GPS, "Google play service not available"); } } 
private void addFixedAttributes(com.orhanobut.tracklytics.FixedAttributes fixedAttributes, java.util.Map<java.lang.String, java.lang.Object> values) { <BUGS> if (fixedAttributes != null) { com.orhanobut.tracklytics.FixedAttribute[] attributes = fixedAttributes.value(); for (com.orhanobut.tracklytics.FixedAttribute attribute : attributes) { values.put(attribute.key(), attribute.value()); if (attribute.isSuper()) { superAttributes.put(attribute.key(), attribute.value()); } <BUGE> } } } 
@java.lang.Override public void readConfiguration(java.io.InputStream ins) throws java.io.IOException, java.lang.SecurityException { java.util.Properties properties = new java.util.Properties(); properties.load(ins); properties.forEach(( k, v) -> { java.lang.String val = substituteVariables(((java.lang.String) (v))); properties.setProperty(((java.lang.String) (k)), val); }); super.readConfiguration(propertiesToInputStream(properties)); <BUGS> httpTraceLogger = java.util.logging.Logger.getLogger("wirelog.http"); <BUGE> } 
protected java.lang.String getDisplayNameForAccountID(int accountID) throws com.starbattle.accounts.manager.AccountException { com.starbattle.accounts.manager.impl.sql.SqlSelectStatement select = new com.starbattle.accounts.manager.impl.sql.SqlSelectStatement(); try { select.select(PlayerTable.NAME); select.from(com.starbattle.accounts.manager.impl.tables.PlayerTable.class); select.where(PlayerTable.ACCOUNT_ID); select.values(accountID); java.sql.ResultSet rs = select.execute(databaseControl); rs.next(); return rs.getNString(1); } catch (java.sql.SQLException e) { <BUGS> e.printStackTrace(); <BUGE> throw new com.starbattle.accounts.manager.AccountException("Failed to get Displayname for AccountId."); } } 
@java.lang.Override public void onClick(android.view.View view) { <BUGS> android.content.ContentValues historyValues = new android.content.ContentValues(); historyValues.put(DataContract.HistoryEntry.COLUMN_RESTAURANT_ID, mSearchResult.getRestID()); historyValues.put(DataContract.HistoryEntry.COLUMN_RESTAURANT_NAME, mSearchResult.getRestName()); android.net.Uri uri = getActivity().getContentResolver().insert(DataContract.HistoryEntry.CONTENT_URI, historyValues); android.util.Log.d("history check", uri.toString()); onLocationChaged(curLatitude, curLongitude); <BUGE> } 
public static demo.kolorob.kolorobdemoversion.model.FInancial.FinancialServiceDetailsItem parseFinancialServiceDetailsItem(org.json.JSONObject jo) throws org.json.JSONException { <BUGS> java.lang.String _finId = jo.getString("id"); <BUGE> java.lang.String _servicecost = jo.getString("financial_cost"); java.lang.String _serviceremark = jo.getString("financial_remarks"); java.lang.String _servicetype = jo.getJSONObject("financial_services").getString("type"); java.lang.String _servicesubtype = jo.getJSONObject("financial_services").getString("sub_type"); return new demo.kolorob.kolorobdemoversion.model.FInancial.FinancialServiceDetailsItem(_finId, _servicecost, _serviceremark, _servicetype, _servicesubtype); } 
public static java.lang.ClassLoader createClassLoader(final java.net.URL[] urls, final java.lang.ClassLoader parentClassLoader) { java.lang.System.setSecurityManager(null); <BUGS> final java.net.URLClassLoader newClassLoader = java.security.AccessController.doPrivileged(new java.security.PrivilegedAction<java.net.URLClassLoader>() { @java.lang.Override public java.net.URLClassLoader run() { return new java.net.URLClassLoader(urls, parentClassLoader); } }); return newClassLoader; <BUGE> } 
public void clear() { LinkedList<E>.LinkedListNode<E> current; LinkedList<E>.LinkedListNode<E> next; next = head; while (next != null) { current = next; next = current.next; current.destroy(); } head = tail = null; <BUGS> <BUGE> } 
public void setStallProtection(double stallMinPower, double stallTimeout, double resetTimeout) { final java.lang.String funcName = "setStallProtection"; if (trclib.TrcPidMotor.debugEnabled) { dbgTrace.traceEnter(funcName, TrcDbgTrace.TraceLevel.API, "stallMinPower=%f,stallTimeout=%f,resetTimeout=%f", stallMinPower, stallTimeout, resetTimeout); dbgTrace.traceExit(funcName, TrcDbgTrace.TraceLevel.API); } <BUGS> this.stallMinPower = stallMinPower; this.stallTimeout = stallTimeout; this.resetTimeout = resetTimeout; <BUGE> } 
@java.lang.Override public void onClick(android.view.View v) { android.widget.Toast.makeText(this, "Pedido cancelado", Toast.LENGTH_SHORT).show(); if (readOnly) { firebaseRealtimeDatabaseHelperOrders.delete(order); <BUGS> <BUGE> }else { previousOrder = new com.cynerds.cyburger.models.orders.Order(); } badge.setBadgeCount(0); order = new com.cynerds.cyburger.models.orders.Order(); dialogManager.closeDialog(); <BUGS> removeNotification(com.cynerds.cyburger.activities.MainActivity.ORDERS_TAB, 1); <BUGE> } 
@java.lang.Override public void onAttach(android.content.Context context) { super.onAttach(context); try { <BUGS> mImageUrlInterface = ((com.example.randomlocks.gamesnote.DialogFragment.ImageUrlFragment.ImageUrlInterface) (getTargetFragment())); <BUGE> } catch (java.lang.Exception e) { com.example.randomlocks.gamesnote.HelperClass.Toaster.make(getContext(), "interface cast exception"); } } 
public org.opencb.opencga.catalog.managers.QueryResult<org.opencb.opencga.catalog.managers.File> createFolder(long studyId, java.nio.file.Path folderPath, org.opencb.opencga.catalog.managers.File.FileStatus status, boolean parents, java.lang.String description, org.opencb.opencga.catalog.managers.QueryOptions options, java.lang.String sessionId) throws org.opencb.opencga.catalog.exceptions.CatalogException { org.opencb.opencga.catalog.utils.ParamUtils.checkPath(folderPath, "folderPath"); <BUGS> return fileManager.createFolder(studyId, ((folderPath.toString()) + "/"), status, parents, description, options, sessionId); <BUGE> } 
@java.lang.Override protected com.rastating.droidbeard.entities.TVShow doInBackground(java.lang.Long... longs) { long tvdbid = longs[0]; com.rastating.droidbeard.entities.TVShow show = getTVShow(tvdbid); if (show != null) { <BUGS> android.graphics.Bitmap banner = getBanner(tvdbid); show.setBanner(banner); <BUGE> java.util.List<com.rastating.droidbeard.entities.Season> seasons = getSeasons(tvdbid); if (seasons != null) { java.util.Collections.sort(seasons, new com.rastating.droidbeard.comparators.SeasonComparator()); java.util.Collections.reverse(seasons); show.setSeasons(seasons); } } return show; } 
private void nextTurn() { <BUGS> try { java.lang.Thread.sleep(10000, 0); } catch (java.lang.InterruptedException e) { e.printStackTrace(); } <BUGE> if ((turn) == (players_turn)) { java.lang.System.out.println("NonPlayer ist am Zug"); turn = nonplayers_turn; nonplayersTurn(); actionKI(); }else if ((turn) == (nonplayers_turn)) { java.lang.System.out.println("Player ist am Zug"); turn = players_turn; playersTurn(); }  } 
private java.lang.String getValue(int i, int j) { if (i == j) { return "x"; }else { <BUGS> return getValue(i, j, countMap.get(new context.healthinformatics.graphs.ConnectionSet(codes.get(i), codes.get(j)))); <BUGE> } } 
public static void showAlert(android.app.Activity activity, java.lang.String title, java.lang.String msg) { <BUGS> com.extenprise.mapp.util.Utility.showAlert(activity, title, msg, new android.content.DialogInterface.OnClickListener() { <BUGE> @java.lang.Override public void onClick(android.content.DialogInterface dialog, int which) { dialog.dismiss(); } }); } 
@java.lang.Override protected int getZWithOffset(int x, int z) { net.minecraft.util.EnumFacing enumfacing = this.getCoordBaseMode(); if (enumfacing == null) { return z; }else { switch (enumfacing) { <BUGS> case NORTH : return (this.boundingBox.maxZ) - z; <BUGE> case SOUTH : return (this.boundingBox.minZ) + z; case WEST : <BUGS> <BUGE> case EAST : <BUGS> return (this.boundingBox.minZ) + x; <BUGE> default : return z; } } } 
public void instamojoResponse(java.lang.String status, java.lang.String orderId, java.lang.String transactionId, java.lang.String paymentId) { loaderView.setVisibility(View.GONE); if (status.equals("ok")) { <BUGS> checkPaymentStatus(transactionId); <BUGE> }else if (status.equals("error")) { setScreen("retry"); }  } 
private static void aggregate(java.util.Map<cc.blynk.server.storage.reporting.average.AggregationKey, cc.blynk.server.storage.reporting.average.AggregationValue> map, cc.blynk.server.storage.reporting.average.AggregationKey key, double value) { cc.blynk.server.storage.reporting.average.AggregationValue aggregationValue = map.get(key); if (aggregationValue == null) { <BUGS> final cc.blynk.server.storage.reporting.average.AggregationValue aggregationValueTmp = new cc.blynk.server.storage.reporting.average.AggregationValue(value); <BUGE> aggregationValue = map.putIfAbsent(key, aggregationValueTmp); if (aggregationValue == null) { aggregationValue = aggregationValueTmp; } } aggregationValue.update(value); } 
@java.lang.Override public void setToDefault() { setMapEdgeScrollSpeed(java.lang.String.valueOf(games.strategy.triplea.settings.scrolling.ScrollSettings.DEFAULT_MAP_EDGE_SCROLL_SPEED)); setMapEdgeScrollZoneSize(java.lang.String.valueOf(games.strategy.triplea.settings.scrolling.ScrollSettings.DEFAULT_MAP_EDGE_SCROLL_ZONE_SIZE)); <BUGS> setMapEdgeFasterScrollMultiplier(java.lang.String.valueOf(games.strategy.triplea.settings.scrolling.ScrollSettings.DEFAULT_MAP_EDGE_FASTER_SCROLL_MULTIPLIER)); setMapEdgeFasterScrollZoneSize(java.lang.String.valueOf(games.strategy.triplea.settings.scrolling.ScrollSettings.DEFAULT_MAP_EDGE_FASTER_SCROLL_ZONE_SIZE)); <BUGE> setArrowKeyScrollSpeed(java.lang.String.valueOf(games.strategy.triplea.settings.scrolling.ScrollSettings.DEFAULT_ARROW_KEY_SCROLL_SPEED)); setFasterArrowKeyScrollMultiplier(java.lang.String.valueOf(games.strategy.triplea.settings.scrolling.ScrollSettings.DEFAULT_FASTER_ARROW_KEY_SCROLL_MULTIPLIER)); setWheelScrollAmount(java.lang.String.valueOf(games.strategy.triplea.settings.scrolling.ScrollSettings.DEFAULT_WHEEL_SCROLL_AMOUNT)); } 
public java.lang.String convertCalendarToString(java.util.GregorianCalendar toBeConverted) { java.lang.String result = new java.lang.String(); <BUGS> java.text.DateFormat df = new java.text.SimpleDateFormat("MM dd yyyy HHmm"); result = df.format(toBeConverted); <BUGE> java.lang.System.out.println(((toBeConverted + " was converted to ") + result)); return result; } 
<BUGS> private beans.Utente transform(org.telegram.telegrambots.api.objects.User utente, long chatId) { <BUGE> beans.Utente utenteCustom = new beans.Utente(); utenteCustom.setChatId(chatId); utenteCustom.setId(utente.getId()); utenteCustom.setCognome(utente.getLastName()); utenteCustom.setName(utente.getFirstName()); utenteCustom.setUsername(utente.getUserName()); return utenteCustom; } 
@java.lang.Override public void onApiConnected() { final com.o3dr.services.android.lib.drone.property.Parameters droneParams = getDrone().getAttribute(AttributeType.PARAMETERS); if ((adapter.isEmpty()) && (droneParams != null)) { java.util.List<com.o3dr.services.android.lib.drone.property.Parameter> parametersList = droneParams.getParameters(); if (!(parametersList.isEmpty())) loadAdapter(parametersList, false);  } <BUGS> toggleParameterFilter(isParameterFilterVisible(), false); <BUGE> getBroadcastManager().registerReceiver(broadcastReceiver, org.droidplanner.android.fragments.ParamsFragment.intentFilter); } 
<BUGS> private static boolean isAllASCII(java.lang.String input) { <BUGE> boolean isASCII = true; for (int i = 0; i < (input.length()); i++) { int c = input.charAt(i); if (c > 127) { isASCII = false; break; } } return isASCII; } 
public OL getItem(int position) { if ((mList) != null) { <BUGS> if ((position > 0) && (position < (mList.size()))) { <BUGE> return mList.get(position); } com.openarena.util.L.e(com.openarena.model.AbstractRecyclerAdapter.class, (("no item[" + position) + "]")); } com.openarena.util.L.e(com.openarena.model.AbstractRecyclerAdapter.class, "error to get item"); return null; } 
@java.lang.Override public void joinGame(shared.definitions.CatanColor color) { if (state.joinGame(color)) { stopTimer(); if (getSelectColorView().isModalShowing()) getSelectColorView().closeModal();  model.ModelFacade.getInstance().updateGameModel(); <BUGS> <BUGE> model.ModelFacade.getInstance().getPoller().start(); <BUGS> joinAction.execute(); <BUGE> } } 
private com.alamkanak.weekview.WeekViewEvent getEvent(long start, long end, java.lang.String title) { java.util.Calendar startTime = java.util.Calendar.getInstance(); java.util.Calendar endTime = java.util.Calendar.getInstance(); startTime.setTimeInMillis(start); endTime.setTimeInMillis(end); <BUGS> com.alamkanak.weekview.WeekViewEvent event = new com.alamkanak.weekview.WeekViewEvent(1, getEventTitle(startTime, title), startTime, endTime); <BUGE> event.setColor(getResources().getColor(R.color.primary)); mWeekView.notifyDatasetChanged(); return event; } 
<BUGS> public java.lang.Iterable<org.matsim.api.core.v01.Id<org.matsim.api.core.v01.population.Person>> cat(final org.matsim.api.core.v01.Id ego, final java.util.Set<org.matsim.api.core.v01.Id<org.matsim.api.core.v01.population.Person>> alters) { final java.util.Set<org.matsim.api.core.v01.Id<org.matsim.api.core.v01.population.Person>> ids = new java.util.HashSet(alters); <BUGE> ids.add(ego); return ids; } 
private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) { java.lang.String name = jTextField1.getText(); java.lang.System.out.println(name); <BUGS> Zipper.AktuellesDatumJava8.main(null); <BUGE> Zipper.Zip a = new Zipper.Zip(); a.modpack = name; a.archiveDir(null); Modpacktxt.name = name; try { Zipper.Modpacktxt.main(null); } catch (java.io.IOException ex) { java.util.logging.Logger.getLogger(Zipper.frage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); } this.dispose(); } 
public void onRequestPermissionResult(int requestCode, java.lang.String[] permissions, int[] grantResults) throws org.json.JSONException { for (int r : grantResults) { if (r == (android.content.pm.PackageManager.PERMISSION_DENIED)) { this.callback.sendPluginResult(new org.apache.cordova.PluginResult(PluginResult.Status.ERROR, de.martinreinhardt.cordova.plugins.hotspot.HotSpotPlugin.PERMISSION_DENIED_ERROR)); return ; } } <BUGS> if (!(executeInternal(this.action, this.rawArgs, this.callback))) { this.callback.sendPluginResult(new org.apache.cordova.PluginResult(PluginResult.Status.ERROR, de.martinreinhardt.cordova.plugins.hotspot.HotSpotPlugin.PERMISSION_GENERAL_ERROR)); } <BUGE> } 
<BUGS> public void addCover(org.ernest.applications.dmc.report.builders.Document document, org.ernest.applications.dmc.domain.Region region) throws java.io.IOException, org.ernest.applications.dmc.report.builders.DocumentException { <BUGE> buildImage(document); <BUGS> org.ernest.applications.dmc.report.builders.Paragraph paragraph = new org.ernest.applications.dmc.report.builders.Paragraph(region.getName(), org.ernest.applications.dmc.report.builders.BuilderUtils.getTitleFont()); <BUGE> paragraph.setSpacingBefore(100); paragraph.setAlignment(Element.ALIGN_CENTER); document.add(paragraph); document.newPage(); } 
@org.testng.annotations.Test @com.automation.remarks.video.annotations.Video public void shouldNotBeRecordingForSuccessfulTestAndSaveModeFailOnly() { com.automation.remarks.video.recorder.monte.MonteRecorder.conf().withVideoSaveMode(VideoSaveMode.FAILED_ONLY); org.testng.ITestResult result = prepareMock(testMethod); com.automation.remarks.testng.VideoListener listener = new com.automation.remarks.testng.VideoListener(); listener.onTestStart(result); listener.onTestSuccess(result); java.io.File file = com.automation.remarks.video.recorder.monte.MonteRecorder.getLastRecording(); <BUGS> org.testng.Assert.assertFalse(file.exists()); <BUGE> } 
public static void main(java.lang.String[] args) { try { java.rmi.registry.LocateRegistry.createRegistry(1099); DA_MessageHandler obj1 = new DA_MessageHandler(1); DA_MessageHandler obj2 = new DA_MessageHandler(2); <BUGS> obj2.sendMessageDelayed("first message", 1, 1000); obj2.sendMessageDelayed("second message", 1, 10); <BUGE> } catch (java.rmi.RemoteException | java.rmi.AlreadyBoundException | java.net.MalformedURLException e) { e.printStackTrace(); } } 
@java.lang.Override public void processCommand(net.minecraft.command.ICommandSender p_71515_1_, java.lang.String[] p_71515_2_) { <BUGS> if ((p_71515_2_.length) > 1) { <BUGE> if (p_71515_2_[0].equalsIgnoreCase("help")) { mainserverjt.piratemod.command.commands.HelpCommand.processCommand(p_71515_1_, removeIndexUntil(1, p_71515_2_)); } }else { mainserverjt.piratemod.command.ChatColor.sendPrivateMessage(p_71515_1_, (((ChatColor.prefix) + (ChatColor.rood)) + "Use /pm help")); } } 
private void extractAgentGroupAvailability(com.genesys.workspace.models.targets.Target target) { com.google.gson.internal.LinkedTreeMap availabilityData = ((com.google.gson.internal.LinkedTreeMap) (target.getAvailability())); if (availabilityData == null) { return ; } <BUGS> java.lang.Integer readyAgents = ((java.lang.Integer) (availabilityData.get("readyAgents"))); <BUGE> this.availability = new com.genesys.workspace.models.targets.AgentGroupAvailability(readyAgents); } 
private java.lang.String buildSongIdFromGenreSelect(java.lang.String genreId) { <BUGS> final java.lang.String query = (((((((("SELECT " + (MediaLibrary.GenreSongColumns.SONG_ID)) + " FROM ") + (MediaLibrary.TABLE_GENRES_SONGS)) + " WHERE ") + (MediaLibrary.GenreSongColumns._GENRE_ID)) + "=") + genreId) + " GROUP BY ") + (MediaLibrary.GenreSongColumns.SONG_ID); return query; <BUGE> } 
public synchronized boolean canMove(level.action.MoveAction action) { <BUGS> <BUGE> level.Location agLoc = action.getAgentLocation(); <BUGS> level.Direction dir = action.getDirection(); <BUGE> if (agLoc == null) { return false; } level.Location nAgLoc = level.Location.newLocation(dir, agLoc); if (nAgLoc == null) { return false; } if (!(isFree(nAgLoc))) { return false; } return true; } 
public boolean isState(java.lang.String input) { boolean matchFound = false; int i = 0; <BUGS> while ((matchFound = false) && (i < (states.length))) { <BUGE> if (states[i].equalsIgnoreCase(input)) { matchFound = true; } i++; } return matchFound; } 
public void onCredentialsValidated() { com.gabdeg.generalissimo.InputFragment firstFragment = new com.gabdeg.generalissimo.InputFragment(); firstFragment.setArguments(getIntent().getExtras()); <BUGS> getSupportFragmentManager().beginTransaction().add(R.id.fragment_container, firstFragment).commit(); <BUGE> getSupportActionBar().setTitle("Home"); } 
protected void onActivityResult(int requestCode, int resultCode, android.content.Intent intent) { if (requestCode == (com.jeffreychan.yutnori.TitleScreenActivity.RC_SIGN_IN)) { mSignInClicked = false; mResolvingConnectionFailure = false; if (resultCode == (RESULT_OK)) { client.connect(); }else { <BUGS> android.widget.Toast savedToast = android.widget.Toast.makeText(getApplicationContext(), "Unable to sign in to Google", Toast.LENGTH_SHORT); <BUGE> savedToast.show(); } } } 
@java.lang.Override public void setParams(long frequency, long bandwidthHz, @android.support.annotation.NonNull info.martinmarinov.drivers.DeliverySystem deliverySystem) throws info.martinmarinov.drivers.DvbException { enableMaster(true); enableSlave(false); if (rtl2832Capabilities.getSupportedDeliverySystems().contains(deliverySystem)) { <BUGS> activeFrontend = (info.martinmarinov.drivers.usb.rtl28xx.Rtl2832pFrontend.FORCE_ONLY_SLAVE) ? slave : rtl2832Frontend; <BUGE> }else { enableMaster(false); enableSlave(true); activeFrontend = slave; } activeFrontend.setParams(frequency, bandwidthHz, deliverySystem); } 
@java.lang.Override <BUGS> public com.buginc.java.math.geometry.Vector cnt() { com.buginc.java.math.geometry.Vector center = new com.buginc.java.math.geometry.Vector(0, 0); <BUGE> int i = outline.size(); <BUGS> for (com.buginc.java.math.geometry.Vector vector : outline) { <BUGE> center = center.add(vector.inc(i)); --i; } return center.dec(outline.size()); } 
<BUGS> private logic.Piece turnCPU() { <BUGE> depth = DEPTH; logic.Heur bestMove = miniMax(); bestMoveMessages.addFirst((((((((("Melhor jogada para o jogador " + (util.Utility.itop(activeplayer))) + " no turno ") + (turnId)) + ": (") + ((bestMove.row) + 1)) + ",") + (util.Utility.itoc(bestMove.col))) + "). ")); return new logic.Piece(bestMove, activeplayer); } 
private static synchronized void startVibrate() { <BUGS> android.util.Log.d(org.catrobat.catroid.utils.VibratorUtil.TAG, "startVibrate()"); org.catrobat.catroid.utils.VibratorUtil.startTime = android.os.SystemClock.uptimeMillis(); org.catrobat.catroid.utils.VibratorUtil.vibrator.vibrate(org.catrobat.catroid.utils.VibratorUtil.MAX_TIME_TO_VIBRATE); android.util.Log.d(org.catrobat.catroid.utils.VibratorUtil.TAG, ("start time was: " + (java.lang.Long.toString(org.catrobat.catroid.utils.VibratorUtil.startTime)))); <BUGE> } 
public static java.util.Map<java.nio.file.Path, com.google.common.hash.HashCode> createHashCodeMap(java.nio.file.Path file) { java.util.Map<java.nio.file.Path, com.google.common.hash.HashCode> lastModifiedMap = new java.util.concurrent.ConcurrentHashMap<java.nio.file.Path, com.google.common.hash.HashCode>(); for (java.nio.file.Path child : io.takari.watcher.PathUtils.recursiveListFiles(file)) { com.google.common.hash.HashCode hash = io.takari.watcher.PathUtils.hash(child); <BUGS> lastModifiedMap.put(child, hash); <BUGE> } return lastModifiedMap; } 
@org.junit.Test public void assertUserScorePropertyIsAddedToUserThatDoesNotHaveIt() throws java.lang.Exception { hudson.model.AbstractBuild build = mock(hudson.model.AbstractBuild.class); hudson.model.User userWithoutProperty = createUser(null); mockChangeSetInBuild(build, userWithoutProperty); <BUGS> org.junit.Assert.assertThat(new hudson.plugins.cigame.GamePublisher().perform(build, createRuleBook(5.0), true, null, null), org.hamcrest.CoreMatchers.is(true)); <BUGE> verify(userWithoutProperty).addProperty(new hudson.plugins.cigame.UserScoreProperty(5, true, anyList())); } 
@org.junit.Test public void cityAdm() throws java.io.IOException, java.lang.InterruptedException { if ((countryTest.contains("FR")) || (countryTest.contains("ALL"))) { java.lang.String rawAddress = "saint omer normandie"; com.gisgraphy.addressparser.AddressResultsDto addressResultsDto = doGeocodingOnCountry(rawAddress, "FR"); net.sf.jstester.util.Assert.assertNotNull(addressResultsDto); <BUGS> isCorrectByAtLeastOneIds(new java.lang.Long[]{ 4039279022L , 94401L }, addressResultsDto.getResult(), rawAddress); <BUGE> } } 
<BUGS> public static org.opendaylight.genius.mdsalutil.packet.Ethernet createEthernetPacket(byte[] sourceMAC, byte[] targetMAC, org.opendaylight.genius.mdsalutil.packet.ARP arp) throws org.opendaylight.controller.liblldp.PacketException { <BUGE> org.opendaylight.genius.mdsalutil.packet.Ethernet ethernet = new org.opendaylight.genius.mdsalutil.packet.Ethernet(); ethernet.setSourceMACAddress(sourceMAC); ethernet.setDestinationMACAddress(targetMAC); ethernet.setEtherType(EtherTypes.ARP.shortValue()); ethernet.setPayload(arp); return ethernet; } 
public void cancel() { status = com.github.mob41.osumer.updater.Downloader.CANCELLED; reportState(); <BUGS> java.io.File file = new java.io.File(((((folder) + "\\") + (com.github.mob41.osumer.updater.Downloader.toFilename(url))) + ".osz")); <BUGE> file.delete(); downloaded = 0; } 
@com.rafikzebdi.epargnator.rest.GET @com.rafikzebdi.epargnator.rest.Path(value = "/{reference}") @com.rafikzebdi.epargnator.rest.Produces(value = javax.ws.rs.core.MediaType.APPLICATION_JSON) public javax.ws.rs.core.Response getSpecificPersonne(@com.rafikzebdi.epargnator.rest.PathParam(value = "reference") <BUGS> final java.lang.String referenceToFind) { <BUGE> javax.ws.rs.core.Response.ResponseBuilder builder = null; try { final java.util.List<com.rafikzebdi.epargnator.domain.personne.Personne> personnesSpecificFound = personneService.getSpecificPersonne(referenceToFind); builder = javax.ws.rs.core.Response.ok(personnesSpecificFound); } catch (java.lang.Exception e) { e.printStackTrace(); builder = javax.ws.rs.core.Response.status(Response.Status.BAD_REQUEST); } return builder.build(); } 
private int getProgressForAngle(double angle) { int touchProgress = ((int) (java.lang.Math.round(((valuePerDegree()) * angle)))); <BUGS> touchProgress = (touchProgress < 0) ? com.triggertrap.seekarc.SeekArc.INVALID_PROGRESS_VALUE : touchProgress; touchProgress = (touchProgress > (mMax)) ? com.triggertrap.seekarc.SeekArc.INVALID_PROGRESS_VALUE : touchProgress; if (!(mDragging)) touchProgress = (touchProgress == (com.triggertrap.seekarc.SeekArc.INVALID_PROGRESS_VALUE)) ? 0 : touchProgress; <BUGE>  <BUGS> return touchProgress; <BUGE> } 
private void updatePacketInWindow(int sequence, WebApplication.HTTPConnection.AcknowledgementCode code) { <BUGS> for (int i = Window_Position; (i < (Window_Size)) && (i < ((Packet_Buffer.size()) - 1)); ++i) { <BUGE> if (sequence == ((Packet_Buffer.get(i).getSequenceNumber()) % (Sequence_Modulus))) { Packet_Buffer.get(i).updateAcknowledgementCode(code); break; } } } 
private int menorDentreAs(double[] razoes) { double menor = razoes[0]; int indice = 0; <BUGS> for (int i = 0; i < (razoes.length); i++) { <BUGE> if ((razoes[i]) > 0) { <BUGS> if ((java.lang.Double.compare(razoes[i], menor)) > 1) { <BUGE> menor = razoes[i]; indice = i; } } } return indice; } 
public void onDragDropped(javafx.scene.input.DragEvent e) { javafx.scene.input.Dragboard db = e.getDragboard(); catuml.shapes.Shapes shapes = ((catuml.shapes.Shapes) (db.getContent(javafx.scene.input.DataFormat.lookupMimeType("catuml/shapetype")))); <BUGS> putShape(shapes.newShape(), e.getX(), e.getY()); <BUGE> e.consume(); } 
public void secondOrderPositionUpdate(double dt, Vector3D force) { <BUGS> position = Vector3D.vectorAddition(position, velocity.scalarMultiply(dt)); position = Vector3D.vectorAddition(position, force.scalarMultiply(((java.lang.Math.pow(dt, 2)) / (2 * (mass))))); <BUGE> } 
@java.lang.Override public java.util.List<java.lang.Integer> emit(java.lang.String streamId, java.util.List<java.lang.Object> tuple, java.lang.Object messageId) { <BUGS> <BUGE> java.util.List<java.lang.Integer> emitResult = super.emit(streamId, tuple, messageId); <BUGS> monitor.startExecute(messageId, null, spoutService); <BUGE> return emitResult; } 
<BUGS> public static java.io.File findExe(java.io.File root, java.lang.String exe) { <BUGE> for (java.io.File file : org.apache.commons.io.FileUtils.listFiles(root, null, true)) if ((file.getName().equalsIgnoreCase(exe)) && ((file.length()) >= 1)) return file;   <BUGS> <BUGE> throw new java.lang.UnsupportedOperationException((("Couldn't find '" + exe) + "'!")); } 
public boolean isSafe(int row, int col) { <BUGS> if ((((row < ((rows) - 3)) && (col < ((cols) - 3))) && (row >= 0)) && (col >= 0)) { <BUGE> return true; } return false; } 
public static void main(java.lang.String[] args) { lejos.robotics.subsumption.Behavior b1 = new MoveForward(); lejos.robotics.subsumption.Behavior b2 = new SenseUltrasonic(); lejos.robotics.subsumption.Behavior b3 = new SenseLight(); <BUGS> lejos.robotics.subsumption.Behavior[] bArray = new lejos.robotics.subsumption.Behavior[]{ b3 , b2 , b1 }; <BUGE> lejos.robotics.subsumption.Arbitrator arby = new lejos.robotics.subsumption.Arbitrator(bArray); arby.start(); } 
public void test2() { org.apache.lucene.search.BHeap heap = new org.apache.lucene.search.BHeap(20, 2); heap.insert(100); heap.insert(99); <BUGS> org.apache.lucene.search.TestBHeap.assertHeap(heap, new long[][]{ new long[]{ 100 , 99 } }); <BUGE> } 
@org.junit.Test public void testGetLocationOfClass() throws java.lang.Exception { <BUGS> org.junit.Assert.assertThat(com.firefly.utils.lang.TypeUtils.getLocationOfClass(org.junit.Assert.class).toASCIIString(), org.hamcrest.Matchers.containsString("repository")); <BUGE> org.junit.Assert.assertThat(com.firefly.utils.lang.TypeUtils.getLocationOfClass(com.firefly.utils.lang.TypeUtils.class).toASCIIString(), org.hamcrest.Matchers.containsString("/classes/")); java.lang.String expectedJavaBase = "/rt.jar"; if (com.firefly.utils.lang.JDK.IS_9) expectedJavaBase = "/java.base/";  org.junit.Assert.assertThat(com.firefly.utils.lang.TypeUtils.getLocationOfClass(java.lang.String.class).toASCIIString(), org.hamcrest.Matchers.containsString(expectedJavaBase)); } 
private java.lang.String loadShader(java.lang.String name) { cub3d.file.main.FileAPI api = new cub3d.file.main.FileAPI(name); java.lang.String s = ""; try { cub3d.file.reader.BasicReader br = new cub3d.file.reader.BasicReader(api.getReader()); java.lang.String line; while ((line = br.readLine()) != null) <BUGS> s += line; <BUGE>  } catch (java.lang.Exception e) { e.printStackTrace(); } return s; } 
@java.lang.Override public void run(io.katharsis.example.dropwizardSimple.DropwizardConfiguration dropwizardConfiguration, io.dropwizard.setup.Environment environment) throws java.lang.Exception { <BUGS> environment.jersey().property(io.katharsis.rs.KatharsisProperties.RESOURCE_DEFAULT_DOMAIN, dropwizardConfiguration.katharsis.host); <BUGE> environment.jersey().property(io.katharsis.rs.KatharsisProperties.RESOURCE_SEARCH_PACKAGE, dropwizardConfiguration.katharsis.searchPackage); io.katharsis.rs.KatharsisFeature katharsisFeature = new io.katharsis.rs.KatharsisFeature(environment.getObjectMapper(), new io.katharsis.queryParams.QueryParamsBuilder(new io.katharsis.queryParams.DefaultQueryParamsParser()), new io.katharsis.locator.SampleJsonServiceLocator()); environment.jersey().register(katharsisFeature); } 
private int getManhattan(int row, int col, int point) { if (point == 0) return 0;  int rowP = point / (dim); <BUGS> int colP = point - (rowP * (dim)); <BUGE> return (java.lang.Math.abs((row - rowP))) + (java.lang.Math.abs((col - colP))); } 
@org.junit.Test(expected = org.corpus_tools.salt.exceptions.SaltResourceException.class) public void testAbsentSaltResource() throws java.io.IOException { java.lang.String inputFilePath = ((((((org.corpus_tools.salt.util.tests.VisJsVisualizerTest.INPUT_FOLDER) + (org.corpus_tools.salt.util.tests.VisJsVisualizerTest.FSEP)) + "pcc2_absent_resource") + (org.corpus_tools.salt.util.tests.VisJsVisualizerTest.FSEP)) + "pcc2") + (org.corpus_tools.salt.util.tests.VisJsVisualizerTest.FSEP)) + "11299.salt"; org.eclipse.emf.common.util.URI uri = org.eclipse.emf.common.util.URI.createFileURI(inputFilePath); <BUGS> @java.lang.SuppressWarnings(value = "unused") org.corpus_tools.salt.util.VisJsVisualizer visJsVisualizer = new org.corpus_tools.salt.util.VisJsVisualizer(uri); <BUGE> } 
public static double[] rexp(int count, double lambda) { double[] result = new double[count]; double current = 0; for (int i = 0; i < count; i++) { <BUGS> current = ((-1) * lambda) * (java.lang.Math.log((1 - (java.lang.Math.random())))); <BUGE> result[i] = current; } return result; } 
private void displayNumberOfProcessedLearningContents(java.util.Map<de.saschafeldmann.adesso.master.thesis.elearningimport.model.LearningContent, java.util.List<de.saschafeldmann.adesso.master.thesis.detection.model.api.Concept>> learningContents) { setFinishedLabel(); finishedLabel.setCaption(((((finishedLabel.getCaption()) + " (") + (learningContents.size())) + ")")); <BUGS> reset(); <BUGE> } 
@java.lang.Override @android.support.annotation.UiThread public void downloadHasFinished() { visibleBanner.updateBannerInProgress(); for (java.lang.ref.WeakReference<android.support.v4.app.Fragment> ref : fragSet) { android.support.v4.app.Fragment f = ref.get(); <BUGS> if (f.isAdded()) { if (f instanceof net.osmand.plus.download.DownloadIndexesThread.DownloadEvents) { ((net.osmand.plus.download.DownloadIndexesThread.DownloadEvents) (f)).downloadHasFinished(); } <BUGE> } } } 
@java.lang.Override protected void done() { try { get(); } catch (java.lang.InterruptedException ignore) { } catch (java.util.concurrent.ExecutionException e) { e.printStackTrace(); } _modelSelection.put(selected, 0); <BUGS> if ((_titleList.getSelectedValue()) == selected) <BUGE> _recordingTable.getSelectionModel().setSelectionInterval(0, _modelSelection.get(selected)); <BUGS>  _recordingTable.setColumnSelectionInterval(0, 0); <BUGE> } 
private kalang.compiler.CompilationUnit createCompilationUnit(java.lang.String className, java.lang.String src) { kalang.compiler.CompilationUnit unit = new kalang.compiler.CompilationUnit(className, src, this); <BUGS> <BUGE> unit.setParsingErrorHandler(sourceParsingErrorhandler); unit.setSemanticErrorHandler(astSemanticErrorHandler); unit.compile(compilingPhase); <BUGS> compilationUnits.put(className, unit); <BUGE> return unit; } 
@java.lang.Override public co.cask.cdap.data2.queue.DequeueResult<byte[]> dequeue(int maxBatchSize) throws java.io.IOException { co.cask.cdap.data2.queue.DequeueResult<byte[]> result = performDequeue(maxBatchSize); <BUGS> if ((scanStartRow) != null) { if (!(consumingEntries.isEmpty())) { byte[] floorKey = consumingEntries.floorKey(scanStartRow); if (floorKey != null) { updateStartRow(floorKey); } }else { updateStartRow(scanStartRow); } } <BUGE> return result; } 
private void initializeSubnetsFromInner() { this.subnets = new java.util.TreeMap<>(); <BUGS> for (com.microsoft.azure.management.network.implementation.SubnetInner subnetInner : this.inner().subnets()) { com.microsoft.azure.management.network.implementation.SubnetImpl subnet = new com.microsoft.azure.management.network.implementation.SubnetImpl(subnetInner.name(), subnetInner, this); this.subnets.put(subnetInner.name(), subnet); <BUGE> } } 
public java.util.List<T> subList(int startIndex, int numberOfItems) { java.util.List<T> idList = this.toImmutableList(); <BUGS> return idList.subList((startIndex - (offset)), java.lang.Math.min(numberOfItems, maxValidIndex)); <BUGE> } 
public void computeSegments() { int maxX = (graph.dimX()) - 1; int maxY = (graph.dimY()) - 1; <BUGS> for (int currentY = maxY - 1; currentY >= 0; currentY--) { <BUGE> currentWindow = sbr.Range.TwoDimensionalRange(0, maxX, currentY, maxY); computeSegmentsInRange(); for (sbr.Segment seg : segments) assert !(seg.getLinks().isEmpty());  } } 
public java.lang.String EscCommand() { java.lang.String esccmd = java.lang.String.format("{\"a\":%d,\"b\":%d,\"c\":%d,\"d\":%d}", this.motorA.Speed(), this.motorB.Speed(), this.motorC.Speed(), this.motorD.Speed()); <BUGS> java.lang.System.out.println(esccmd); <BUGE> return esccmd; } 
@java.lang.Override public boolean compareAndSwapValue(long expected, long value) { return withLock(() -> { if ((bytes.parseLong(((offset) + (net.openhft.chronicle.wire.LongTextReference.VALUE)))) == expected) { <BUGS> bytes.append(((offset) + (net.openhft.chronicle.wire.LongTextReference.VALUE)), value, 20); <BUGE> return true; } return false; }); } 
private void sendAck() { android.util.Log.v(com.theshopatvsp.levelandroidsdk.ble.BleManager.TAG, "sending ACK for record"); <BUGS> ackSent = true; <BUGE> byte[] packet = new byte[]{ ((byte) (deviceId.getPacketIdOut())) , ((byte) (DeviceCommand.ACK.getCommand())) , ((byte) (deviceId.getPacketIdIn())) }; deviceId.incPacketIdOut(); addCommand(new com.theshopatvsp.levelandroidsdk.ble.model.LevelCommand(com.theshopatvsp.levelandroidsdk.ble.model.constants.ReadWriteEnum.WRITE, com.theshopatvsp.levelandroidsdk.ble.model.constants.CharacteristicEnum.UART_TX, packet)); } 
boolean hasTournamentBeenUpdated(@android.support.annotation.NonNull final net.erikkarlsson.smashapp.common.data.Lce<net.erikkarlsson.smashapp.common.data.entities.tournament.Tournament> tournamentLce) { <BUGS> net.erikkarlsson.smashapp.common.data.entities.tournament.Tournament tournament = (tournamentLce.hasData()) ? com.google.common.base.Preconditions.checkNotNull(tournamentLce.data()) : net.erikkarlsson.smashapp.common.data.entities.tournament.Tournament.NO_TOURNAMENT; <BUGE> return !(tournament().updatedAt().equals(tournament.updatedAt())); } 
public static void main(java.lang.String[] args) { try { <BUGS> com.celestia.csc155.IFn require = clojure.java.api.Clojure.var("clojure.core", "require"); <BUGE> com.celestia.csc155.RT.loadResourceScript("src/main/clojure/main.clj"); com.celestia.csc155.RT.loadResourceScript("src/main/clojure/util.clj"); com.celestia.csc155.RT.loadResourceScript("src/main/clojure/models.clj"); require.invoke(clojure.java.api.Clojure.read("main-ns")); com.celestia.csc155.IFn function = clojure.java.api.Clojure.var("main-ns", "main"); function.invoke(); } catch (java.lang.Exception e) { e.printStackTrace(); } } 
public static void main(java.lang.String[] args) { de.huberlin.wbi.hiway.common.Worker worker = new de.huberlin.wbi.hiway.common.Worker(); try { worker.init(args); worker.run(); } catch (org.apache.commons.cli.ParseException | java.io.IOException | org.json.JSONException e) { e.printStackTrace(); java.lang.System.exit((-1)); } <BUGS> <BUGE> } 
private void processProject(com.ctrip.platform.dal.daogen.entity.Project entity) throws java.sql.SQLException { <BUGS> java.sql.Date date = new java.sql.Date(entity.getUpdate_time().getTime()); entity.setStr_update_time(new java.text.SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(date)); <BUGE> entity.setText(entity.getName()); entity.setChildren(false); entity.setIcon("glyphicon glyphicon-tasks"); <BUGS> <BUGE> } 
@java.lang.Override public void reset() { this.target = null; this.inputType = null; this.argument = 0; this.timestamp = -1; <BUGS> <BUGE> this.unprojectedPosition.x = 0; this.unprojectedPosition.y = 0; <BUGS> this.projectedPosition.x = 0; this.projectedPosition.y = 0; <BUGE> } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); mContext = this; counterTextView = ((android.widget.TextView) (findViewById(R.id.textView))); relativeLayout = ((android.widget.RelativeLayout) (findViewById(R.id.MainLayoutID))); <BUGS> localPreferences = getSharedPreferences(com.example.rogith.deltaappdevtask1.MainActivity.MyPREFERENCES, Context.MODE_PRIVATE); localPreferences.registerOnSharedPreferenceChangeListener(this); counter = getFromFile(); counterTextView.setText(java.lang.String.valueOf(counter)); <BUGE> } 
@java.lang.Override public boolean onQueryTextSubmit(java.lang.String query) { android.util.Log.d("NotesFragment", ("Submitted query" + query)); java.lang.String searchQuery = ((((("SELECT *  FROM " + (HandbookContract.NotificationEntry.TABLE_NAME)) + " where ") + (HandbookContract.NotificationEntry.COLUMN_DETAIL)) + " like \'%") + query) + "%\'"; cursor = db.rawQuery(searchQuery, null); <BUGS> mAdapter = new com.myapp.handbook.adapter.MyRecyclerAdapter(getContext(), cursor); <BUGE> mRecyclerView.setAdapter(mAdapter); searchView.clearFocus(); return true; } 
public void onClick(android.view.View view) { if ((AnswerABoolean) == true) { AnswerAButton.setBackgroundColor(getResources().getColor(R.color.goodAnswer)); <BUGS> android.os.SystemClock.sleep(4000); <BUGE> incrementResultForGoodAnswer(); }else { AnswerAButton.setBackgroundColor(getResources().getColor(R.color.badAnswer)); findTHeRightAnswer(); } } 
private java.lang.String correctDate(java.lang.String uncDate) { java.lang.String[] splitDate = uncDate.split("/"); <BUGS> java.lang.String year = splitDate[0]; <BUGE> java.lang.String month = splitDate[1]; <BUGS> java.lang.String day = splitDate[2]; <BUGE> return (((year + "-") + month) + "-") + day; } 
<BUGS> private boolean contains(KdTree.Node node, edu.princeton.cs.algs4.Point2D p, boolean orientX) { <BUGE> if (node == null) return false;  <BUGS> int cmp = KdTree.compare(p, node.p, orientX); <BUGE> if (cmp < 0) <BUGS> return contains(node.lb, p, (!orientX)); <BUGE> else if (cmp > 0) <BUGS> return contains(node.rt, p, (!orientX)); <BUGE> else return node.p.equals(p);   } 
@java.lang.Override public boolean isTrue(burlap.oomdp.core.states.State s, java.lang.String[] params) { commands.amdp.tools.parse.CleanupL2Parser parser = new commands.amdp.tools.parse.CleanupL2Parser(this.domain); burlap.oomdp.core.objects.ObjectInstance o = s.getObject(params[0]); burlap.oomdp.core.objects.ObjectInstance currRegion = s.getObject(o.getStringValForAttribute(CleanupL1AMDPDomain.ATT_IN_REGION)); burlap.oomdp.core.objects.ObjectInstance region = s.getObject(params[1]); <BUGS> return currRegion.valueEquals(region); <BUGE> } 
<BUGS> public java.util.Map<java.lang.String, double[]> fetchTrace(int channelNumber) { <BUGE> this.fetchChannel(channelNumber); <BUGS> java.util.Map<java.lang.String, double[]> retData = new java.util.HashMap<>(); <BUGE> retData.put("x", this.aChannels.get((channelNumber - 1)).getXAxis()); retData.put("y", this.aChannels.get((channelNumber - 1)).getYAxis()); return retData; } 
@org.junit.Test public void test_isLeapYear() throws java.lang.Exception { <BUGS> org.junit.Assert.assertEquals(false, dint.Dint.isLeapYear(2014)); org.junit.Assert.assertEquals(false, dint.Dint.isLeapYear(2015)); org.junit.Assert.assertEquals(true, dint.Dint.isLeapYear(2016)); org.junit.Assert.assertEquals(false, dint.Dint.isLeapYear(2017)); <BUGE> } 
public java.lang.String deleteAccount() { if (statusMessage.isEmpty()) { int user_id = ((int) (javax.faces.context.FacesContext.getCurrentInstance().getExternalContext().getSessionMap().get("user_id"))); try { userFacade.deleteUser(user_id); } catch (javax.ejb.EJBException e) { username = ""; statusMessage = "Something went wrong while deleting your account!"; return ""; } return "/index.xhtml?faces-redirect=true"; } <BUGS> return ""; <BUGE> } 
public boolean isEndNode(RaceAI.AI.Node node) { <BUGS> if (((this.endNode.x) == (node.x)) && ((this.endNode.y) <= (node.y))) <BUGE> return true; else return false;  } 
@java.lang.Override public com.google.gson.JsonElement serialize(final net.onrc.openvirtex.elements.port.OVXPort port, final java.lang.reflect.Type portType, final com.google.gson.JsonSerializationContext context) { final com.google.gson.JsonObject result = new com.google.gson.JsonObject(); result.addProperty("dpid", port.getParentSwitch().getSwitchName()); <BUGS> result.addProperty("port", java.lang.String.valueOf(port.getPortNumber())); <BUGE> return result; } 
public void printAllCustomerInformation() { <BUGS> java.lang.System.out.println(((((((((((((this.CUSTOMER_ID) + " ") + (this.PASSWORD)) + " ") + (this.NAME)) + " ") + (this.getAge())) + " ") + (this.getCreditScore())) + " ") + (this.getChexSystemsScore())) + " ")); <BUGE> this.printAccountInformation(); } 
@java.lang.SuppressWarnings(value = "unchecked") public com.datastax.driver.core.TypeCodec getSerializer(java.lang.Class<? extends com.datastax.driver.core.TypeCodec> serializerClass, java.lang.Class valueClass) { <BUGS> if ((valueClass != null) && (valueClass.getClass().isEnum())) { return new com.appmetr.hercules.serializers.EnumSerializer(valueClass.getClass()); <BUGE> } if (serializerClass != null) { return tryToCreateObject(serializerClass, valueClass); }else { return getSerializer(valueClass); } } 
public java.lang.String executeCommand(main.Constants.COMMAND_TYPE command, java.lang.String[] task) { try { Handler.Command cmd = createCommand(command, task); <BUGS> taskID = mainStorage.getTaskID(); <BUGE> return cmd.execute(task, taskID); } catch (java.lang.IllegalArgumentException invalidCommandFormat) { return Constants.MESSAGE_INVALID_FORMAT; } catch (java.lang.IllegalStateException unrecognizedCommand) { return Constants.MESSAGE_UNRECOGN = ZED_COMMAND; } } 
@java.lang.Override public void mouseReleased(java.awt.event.MouseEvent e) { r.setDrawBoundingBox(false); if ((r.getConfig().getShape()) == (cs132.instructions.Shape.PENCIL)) { prevMouseLocation = mouseLocation; r.setDrawShape(false); <BUGS> dragStart = true; <BUGE> }else { r.setDrawShape(true); } <BUGS> <BUGE> r.repaint(); } 
private static long scan_isbn(java.lang.String prompt) { boolean got = false; long isbn = 0; while (!got) { try { java.lang.System.out.print(prompt); java.lang.String x = Main.scanner.nextLine(); <BUGS> java.lang.System.out.println(); <BUGE> isbn = Main.normalizeISBN(x); got = true; } catch (java.lang.NumberFormatException e) { java.lang.System.out.println("ERROR: ISBN must contain some numbers(e.g. 143-2334-12)\n"); got = false; } } return isbn; } 
@java.lang.Override protected void onStop() { mGoogleApiClient.disconnect(); <BUGS> lineShape.add(mPolyline); <BUGE> if (((lineShape) != null) && ((lineShape.size()) > 1)) { <BUGS> <BUGE> java.lang.String geoJsonString = edu.uw.longt8.geopaint.GeoJsonConverter.convertToGeoJson(lineShape); new edu.uw.longt8.geopaint.MapsActivity.SaveState().execute(geoJsonString); } super.onStop(); } 
@java.lang.Override public void run() { <BUGS> engine.Server.getLock(); try { game.run(); } catch (java.lang.Exception e) { e.printStackTrace(); } finally { engine.Server.releaseLock(); } try { java.lang.Thread.sleep(game.delayBetweenRuns()); } catch (java.lang.Exception e) { e.printStackTrace(); } <BUGE> } 
@java.lang.Override public void actOnBuildingChange(buildings.Building building, boolean remove, boolean clickedOn) { if ((!remove) && (!clickedOn)) { addToView(building); removePlaceTexture(); }else if (!clickedOn) removeFromView(building.getSpriteAdapter()); else if (remove && clickedOn) { <BUGS> removeFromView(building.getSpriteAdapter()); <BUGE> removePlaceTexture(); }   } 
<BUGS> private java.util.Map<java.lang.String, java.util.List<org.apache.kafka.common.TopicPartition>> deepCopy(java.util.Map<java.lang.String, java.util.List<org.apache.kafka.common.TopicPartition>> assignment) { <BUGE> java.util.Map<java.lang.String, java.util.List<org.apache.kafka.common.TopicPartition>> copy = new java.util.HashMap<>(); deepCopy(assignment, copy); return copy; } 
<BUGS> public org.apollo.game.model.Position fromDeltas(int deltaX, int deltaY, int deltaZ) { <BUGE> return new org.apollo.game.model.Position(((getX()) + deltaX), ((getY()) + deltaY), ((getHeight()) + deltaZ)); } 
private void setupEnvironment() { org.arquillian.cube.kubernetes.api.Logger log = session.getLogger(); log.info(("Executing environment setup script from:" + (configuration.getEnvironmentSetupScriptUrl()))); try { <BUGS> org.arquillian.cube.kubernetes.impl.utils.ProcessUtil.runCommand(log, configuration.getEnvironmentSetupScriptUrl(), java.util.Collections.emptyList(), true); <BUGE> } catch (java.io.IOException ex) { throw new java.lang.RuntimeException(ex); } } 
@java.lang.Override public boolean onTouchEvent(android.view.MotionEvent ev) { if (isExpanded()) { return false; } android.util.Log.e(com.example.tt.fragments.widget.CurveLayout.TAG, ("BottomSheet onTouchEvent: " + (currentX))); currentX = ev.getRawX(); sheetDragHelper.processTouchEvent(ev); <BUGS> if ((sheetDragHelper.getCapturedView()) != null) { return true; } return super.onTouchEvent(ev); <BUGE> } 
@java.lang.Override public boolean equals(final java.lang.Object object) { if ((this) == object) { return true; } <BUGS> if ((object != null) && ((getClass()) != (object.getClass()))) { <BUGE> @java.lang.SuppressWarnings(value = "rawtypes") final com.javacreed.api.domain.objects.DomainObject other = ((com.javacreed.api.domain.objects.DomainObject) (object)); return value.equals(other.value); } return false; } 
@java.lang.Override public org.elasticsearch.common.xcontent.XContentBuilder toXContent(org.elasticsearch.common.xcontent.XContentBuilder builder, org.elasticsearch.monitor.os.Params params) throws java.io.IOException { builder.startObject(org.elasticsearch.monitor.os.OsStats.Fields.OS); builder.field(org.elasticsearch.monitor.os.OsStats.Fields.TIMESTAMP, getTimestamp()); cpu.toXContent(builder, params); mem.toXContent(builder, params); swap.toXContent(builder, params); <BUGS> cgroup.toXContent(builder, params); <BUGE> builder.endObject(); return builder; } 
private int getAnimatedAmount() { if ((this.tickRemaining) <= (com.mcgame.scdiary.gui.ScreenshotOverlayHandler.ANIMATION_TICK)) return this.tickRemaining; else if ((this.tickRemaining) >= ((com.mcgame.scdiary.gui.ScreenshotOverlayHandler.OPEN_DURATION) - (com.mcgame.scdiary.gui.ScreenshotOverlayHandler.ANIMATION_TICK))) <BUGS> return (com.mcgame.scdiary.gui.ScreenshotOverlayHandler.ANIMATION_TICK) - (this.tickRemaining); <BUGE> else return com.mcgame.scdiary.gui.ScreenshotOverlayHandler.ANIMATION_TICK;   } 
public void xor(int mask) { int res = (value) ^ (mask & 8388607); <BUGS> if ((((mask & 8388608) != 0) && (((value) & -2147483648) == 0)) || (((mask & 8388608) == 0) && (((value) & -2147483648) != 0))) { <BUGE> res = -res; } value = res; } 
@java.lang.Override protected void onActivityResult(int requestCode, int resultCode, android.content.Intent data) { if ((requestCode == (MyGlobalVars.REQUEST_IMAGE_CAPTURE)) && (resultCode == (RESULT_OK))) { android.os.Bundle extras = data.getExtras(); android.graphics.Bitmap imageBitmap = ((android.graphics.Bitmap) (extras.get("data"))); addImageToView(imageBitmap); <BUGS> MediaStore.Images.Media.insertImage(getContentResolver(), imageBitmap, "", "Starcraft II"); <BUGE> } } 
<BUGS> public int colContains(int col, int num) { <BUGE> int count = 0; for (int o = 0; o < 9; o++) { <BUGS> if ((this.grid[o][col].value) == num) <BUGE> count++;  } return count; } 
@java.lang.Override public void keyPressed(java.awt.event.KeyEvent e) { if ((e.getKeyCode()) == (java.awt.event.KeyEvent.VK_ESCAPE)) { if ((promptMsg) != null) { promptMsg = null; repaint(); return ; } hasFinished = canceled = true; org.sikuli.basics.Debug.log(3, "CapturePrompt: aborted using key ESC"); setVisible(false); <BUGS> notifyObserver(); <BUGE> } } 
@java.lang.Override public void processAction(javax.portlet.PortletConfig portletConfig, javax.portlet.ActionRequest actionRequest, javax.portlet.ActionResponse actionResponse) throws java.lang.Exception { <BUGS> int status = com.liferay.portal.kernel.util.ParamUtil.getInteger(actionRequest, "status"); <BUGE> java.lang.String portletResource = com.liferay.portal.kernel.util.ParamUtil.getString(actionRequest, "portletResource"); javax.portlet.PortletPreferences preferences = com.liferay.portlet.PortletPreferencesFactoryUtil.getPortletSetup(actionRequest, portletResource); <BUGS> preferences.setValue("status", java.lang.String.valueOf(status)); <BUGE> preferences.store(); com.liferay.portal.kernel.servlet.SessionMessages.add(actionRequest, "potlet-config-saved"); } 
public void unlockScreen() { android.util.Log.v("LOCK_TEST", "unlockScreen()"); android.util.Log.v("LOCK_TEST", ("unlockScreen() " + (this.masterActivity.getLocalClassName()))); <BUGS> this.pinView.setVisibility(8); <BUGE> this.mZipperLock.DestroyBitmaps(); this.masterActivity.finish(); } 
@java.lang.SuppressWarnings(value = "deprecation") public void checkOfflineRewards() { java.util.ArrayList<java.lang.String> copy = getOfflineRewards(); setOfflineRewards(new java.util.ArrayList<java.lang.String>()); for (java.lang.String str : com.Ben12345rocks.AdvancedCore.Util.Misc.ArrayUtils.getInstance().convert(copy)) { <BUGS> com.Ben12345rocks.AdvancedCore.Objects.RewardHandler.getInstance().giveReward(this, str, false); <BUGE> } } 
public static <T extends net.minecraft.item.Item> T getItemAs(net.minecraft.item.ItemStack itemStack, java.lang.Class<T> itemClass) { <BUGS> return (itemStack.getItem()) != null ? itemClass.isInstance(itemStack.getItem()) ? itemClass.cast(itemStack.getItem()) : null : null; <BUGE> } 
public boolean isUpToDate(fr.mvanbesien.yws.core.WeatherData weatherData) { if (weatherData == null) { return false; } <BUGS> if (((weatherData.getPubDate().getTime()) + (weatherData.getTtl())) < (java.lang.System.currentTimeMillis())) { if (((weatherData.getLastBuildDate().getTime()) + ((15 * 60) * 1000)) < (java.lang.System.currentTimeMillis())) { <BUGE> return true; } } return false; } 
private double calculateHeight(double alpha, double betta, double a) { <BUGS> double h = roundNumber((a / (java.lang.Math.tan(java.lang.Math.toRadians(alpha)))), 2); <BUGE> double h1 = roundNumber((a * (java.lang.Math.tan(java.lang.Math.toRadians(betta)))), 2); return h + h1; } 
private static void noEL(java.lang.String nm, java.lang.String val, org.zkoss.idom.Item item) throws org.zkoss.zk.ui.UiException { <BUGS> if ((val != null) && ((val.indexOf("${")) >= 0)) <BUGE> throw new org.zkoss.zk.ui.UiException(org.zkoss.zk.ui.metainfo.Parser.message((nm + " does not support EL expressions"), item));  } 
@java.lang.Override public java.lang.Void call() throws java.io.IOException { try { while (!(java.lang.Thread.currentThread().isInterrupted())) { try { readEntireFile(); } catch (java.nio.file.NoSuchFileException | java.nio.file.AccessDeniedException exception) { <BUGS> invokeListenersWithReset(); <BUGE> java.lang.Thread.sleep(100); } <BUGS> <BUGE> } } catch (final java.lang.InterruptedException e) { } catch (final java.nio.channels.ClosedByInterruptException e) { } return null; } 
@java.lang.Override public java.lang.Object getAsObject(javax.faces.context.FacesContext context, javax.faces.component.UIComponent component, java.lang.String submittedValue) { javax.el.ELContext elContext = javax.faces.context.FacesContext.getCurrentInstance().getELContext(); br.com.fiap.tsis.bookstore.controller.AtualizarController atualizarController = ((br.com.fiap.tsis.bookstore.controller.AtualizarController) (javax.faces.context.FacesContext.getCurrentInstance().getApplication().getELResolver().getValue(elContext, null, "atualizarController"))); for (br.com.fiap.tsis.bookstore.model.to.Categoria categoria : atualizarController.getCategorias()) { <BUGS> if ((categoria.getId()) == (java.lang.Integer.parseInt(submittedValue))) <BUGE> return categoria; <BUGS>  <BUGE> } return null; } 
public static void addPlayerToQueue(java.util.UUID uuid, java.lang.String server, int pos) { synchronized(vg.civcraft.mc.bettershards.bungee.QueueHandler.lockingObject) { if (!(vg.civcraft.mc.bettershards.bungee.QueueHandler.queue.containsKey(server))) vg.civcraft.mc.bettershards.bungee.QueueHandler.queue.put(server, new java.util.ArrayList<java.util.UUID>());  <BUGS> vg.civcraft.mc.bettershards.bungee.QueueHandler.queue.get(server).set(pos, uuid); <BUGE> vg.civcraft.mc.bettershards.bungee.QueueHandler.uuidToServerMap.put(uuid, server); } } 
@java.lang.Override public java.lang.String toString(final boolean csv) { try { <BUGS> java.lang.String ret = uri.toString().replaceAll("&amp;", "&"); ret = ret.replaceAll("&", "&amp;"); return ret; <BUGE> } catch (final java.lang.NullPointerException e) { } return null; } 
public void selectCategory(com.sammyer.yahtzee.RollCategory category, com.sammyer.yahtzee.DiceRoll dice) { <BUGS> <BUGE> if ((category == (RollTypes.yahtzee)) && (category.matches(dice))) hasYahtzee = true;  if (isNumberRoll(category)) numberRollScore += category.getPointsScored(dice);  <BUGS> totalScore += getPointsScored(category, dice); <BUGE> categoriesLeft.remove(category); curStrategy = new com.sammyer.yahtzee.RollStrategy(database, categoriesLeft); } 
private java.lang.Boolean validatePartB(java.lang.Boolean error, java.lang.Double partB, java.lang.Integer totalPartCount, java.lang.Integer partBMax, org.ums.services.academic.CourseRegType regType) { if ((totalPartCount == 2) && (partB > partBMax)) { error = java.lang.Boolean.TRUE; } <BUGS> if ((totalPartCount == 1) && (partB > 0)) { <BUGE> error = java.lang.Boolean.TRUE; } return error; } 
@org.junit.Test public void testOf_path() throws java.lang.Exception { io.inkstand.scribble.pdf.PDF pdf = io.inkstand.scribble.pdf.PDF.of(this.file.toPath()); org.junit.Assert.assertNotNull(pdf); org.junit.Assert.assertNotNull(pdf.toDataSource()); <BUGS> <BUGE> try (java.io.InputStream is = pdf.openStream()) { org.junit.Assert.assertNotNull(is); } } 
@org.junit.Before public void setUp() throws java.lang.Exception { <BUGS> formWorkflowAPIImpl = org.mockito.Mockito.spy(new org.bonitasoft.forms.server.api.impl.FormWorkflowAPIImpl()); <BUGE> expressions = new java.util.ArrayList<org.bonitasoft.forms.client.model.Expression>(); <BUGS> org.mockito.Mockito.doReturn(bpmEngineAPIUtil).when(formWorkflowAPIImpl).getBpmEngineAPIUtil(); org.mockito.Mockito.doReturn(processApi).when(bpmEngineAPIUtil).getProcessAPI(session); <BUGE> } 
private void gotLSAUpdateMsg(socs.network.message.Packet packet) { java.lang.System.out.println(("received LSUPDATE from " + (packet.simulatedSrcIP))); socs.network.node.LinkStateDatabase db = this.linkStateDatabase; for (socs.network.message.LSA lsa : packet.lsaArray) { try { boolean newLSA = db.updateLSA(lsa); if (!newLSA) { continue; }else { socs.network.node.Link linkOverWhichWeReceivedLSA = mapIpLink.get(packet.simulatedSrcIP); forwardToNeighbors(linkOverWhichWeReceivedLSA, lsa); } } catch (java.lang.Exception e) { java.lang.System.err.println("could not update LinkStateDatabase"); <BUGS> e.printStackTrace(); <BUGE> } } } 
@java.lang.Override public void paintComponent(java.awt.Graphics g) { <BUGS> <BUGE> g.fillRect(0, 0, 300, 3); g.fillRect(0, 45, 300, 3); g.fillRect(100, 3, 3, 7); g.fillRect(100, 38, 3, 7); } 
private static int upSituation() { <BUGS> if ((com.hedspi.hoangviet.eslrecom.helpers.TestHelper.currentTestDifficulty.equals(Preference.ADVANCE)) || ((com.hedspi.hoangviet.eslrecom.helpers.TestHelper.lowerAchivedDifficulty) != null)) { <BUGE> com.hedspi.hoangviet.eslrecom.helpers.TestHelper.currentUserProficiency = com.hedspi.hoangviet.eslrecom.helpers.TestHelper.currentTestDifficulty; return com.hedspi.hoangviet.eslrecom.helpers.TestHelper.STATUS_END; }else { <BUGS> com.hedspi.hoangviet.eslrecom.helpers.TestHelper.upperAchivedDifficulty = com.hedspi.hoangviet.eslrecom.helpers.TestHelper.currentTestDifficulty; <BUGE> com.hedspi.hoangviet.eslrecom.helpers.TestHelper.upgradeLevel(); com.hedspi.hoangviet.eslrecom.helpers.TestHelper.resetProperties(); return com.hedspi.hoangviet.eslrecom.helpers.TestHelper.STATUS_CONTINUE; } } 
private java.lang.String exportPointsAsJSON() { org.json.JSONArray arr = new org.json.JSONArray(); for (fusorvis.Point p : points) { org.json.JSONObject obj = new org.json.JSONObject(); <BUGS> obj.append("x", p.x); obj.append("y", p.y); obj.append("z", p.z); obj.append("charge", p.charge); <BUGE> arr.put(obj); } return arr.toString(); } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_plan_journey); java.util.Calendar calendar = java.util.Calendar.getInstance(); datePickerDialog = new android.app.DatePickerDialog(this, this, calendar.get(java.util.Calendar.YEAR), calendar.get(java.util.Calendar.MONTH), calendar.get(java.util.Calendar.DAY_OF_MONTH)); initDrawer(); <BUGS> initSubmitButton(); <BUGE> initSearchBar(); initAddressFields(); initRemoveButtons(); initViewJourney(); initFirebase(); clearUI(); } 
@java.lang.Override public boolean exists() { boolean exists = super.exists(); if (!exists) { org.eclipse.emf.ecore.EObject input = getInput(false); if (input != null) { org.eclipse.emf.ecore.resource.Resource resource = input.eResource(); <BUGS> if (resource != null) { <BUGE> exists = resource.getResourceSet().getURIConverter().exists(resource.getURI(), null); } } } return exists; } 
public void printTree(DataStructure.RBTNode<T> node) { <BUGS> if (node == (nil)) { return ; <BUGE> } <BUGS> printTree(node.left); java.lang.System.out.print((((((((node.color) == (RBTNode.RED) ? "Color: Red " : "Color: Black ") + "Key: ") + (node.key)) + " Parent: ") + (node.parent.key)) + "\n")); printTree(node.right); <BUGE> } 
@java.lang.Override public void run() { while (true) { <BUGS> if (((activePlaneList.size()) > 0) && ((freeLaneList = domain.dao.HibernateGeneric.getFreeLanes(1)) != null)) { <BUGE> simulator.PlaneThread plane = activePlaneList.get(0); plane.setLane(freeLaneList.get(0)); activePlaneList.remove(plane); plane.givePermission(); } } } 
@org.junit.Test public void testRegexInstanceChangeRegexWithInstances() { ai.grakn.concept.Resource<java.lang.String> thing = resourceType.putResource("1"); expectedException.expect(ai.grakn.exception.InvalidConceptValueException.class); <BUGS> expectedException.expectMessage(ErrorMessage.REGEX_INSTANCE_FAILURE.getMessage("[abc]", thing.toString())); <BUGE> resourceType.setRegex("[abc]"); } 
public void confirmSeat(int confirmationTime, int departureTime) throws asgn2Passengers.PassengerException { if (((((this.isConfirmed()) || (this.isRefused())) || (this.isFlown())) || (confirmationTime < 0)) || (departureTime < confirmationTime)) { throw new asgn2Passengers.PassengerException("Can't confirm seat for passenger."); <BUGS> <BUGE> } <BUGS> this.newState = false; this.inQueue = false; this.confirmed = true; this.confirmationTime = confirmationTime; this.departureTime = departureTime; <BUGE> } 
public synchronized void remove(final java.lang.String pathname) { <BUGS> it.grid.storm.filesystem.AclLockPoolElement e = ((it.grid.storm.filesystem.AclLockPoolElement) (__map.get(pathname))); <BUGE> if (null != e) { int count = e.decrementUsageCountAndGetIt(); if (0 >= count) __map.remove(pathname);  } } 
<BUGS> private static java.util.Collection<java.lang.String> getToolString() { <BUGE> java.util.Collection<java.lang.String> toolStr = Main.pref.getCollection("toolbar", java.util.Arrays.asList(org.openstreetmap.josm.gui.preferences.ToolbarPreferences.deftoolbar)); if ((toolStr == null) || ((toolStr.size()) == 0)) { toolStr = java.util.Arrays.asList(org.openstreetmap.josm.gui.preferences.ToolbarPreferences.deftoolbar); } return toolStr; } 
public void enqueue(Item item) { <BUGS> queues.RandomizedQueue<Item>.Node oldLast = last; last = new Node(); last.item = item; last.next = null; <BUGE> if (isEmpty()) <BUGS> first = last; else <BUGE> oldLast.next = last; <BUGS>  <BUGE> } 
@java.lang.Override public void onServiceConnected(android.content.ComponentName name, android.os.IBinder service) { localBinder = ((org.stuartresearch.radio91x.RadioService.LocalBinder) (service)); bound = true; localBinder.getService().songStack.setOnInsertListener(this); cardAdapter.setSongInfoStack(localBinder.getService().songStack); <BUGS> if (!(localBinder.getService().isPreparing())) { progressBar.setIndeterminate(false); progressBar.setVisibility(View.GONE); } <BUGE> onInsert(localBinder.getService().getCurrentSong()); } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_searchable); actionbar = getSupportActionBar(); <BUGS> actionbar.setTitle("搜尋"); actionbar.setDisplayHomeAsUpEnabled(true); <BUGE> if ((getIntent()) != null) { handleIntent(getIntent()); } } 
private void validate() { java.lang.String valueAsString = dateBox.getTextBox().getValue(); <BUGS> if (!(com.google.common.base.Strings.isNullOrEmpty(valueAsString))) { <BUGE> valueUpdater.update(null); }else { java.util.Date dateValue = this.dateBox.getFormat().parse(dateBox, valueAsString, false); if (dateValue == null) { valueUpdater.onInvalid(I18N.MESSAGES.dateFieldInvalidValue(org.activityinfo.ui.client.component.form.field.DateFieldWidget.FORMAT)); }else { valueUpdater.update(new org.activityinfo.model.type.time.LocalDate(dateValue)); } } } 
<BUGS> public float getDesiredZoomLevel(int level) { <BUGE> float zoom = 13.0F; switch (level) { case 1 : zoom = 13.0F; break; case 2 : zoom = 13.5F; break; case 3 : zoom = 14.0F; break; case 4 : zoom = 14.5F; break; case 5 : zoom = 15.0F; break; } return zoom; } 
@java.lang.Override public void onClick(android.view.View v) { <BUGS> <BUGE> mShowCaseView.dismiss(); mShowCaseView = null; info.run(); if ((v.getId()) == (R.id.btn_end)) { showNext(singleShot); }else if ((v.getId()) == (R.id.btn_finalize)) { mShotStateStore.finished(); mShowcaseInfos.clear(); }  <BUGS> if (singleShot) mShotStateStore.storeShot();  <BUGE> } 
@java.lang.Override protected void onResume() { if (onCreate) { onCreate = false; }else { <BUGS> if ((mPlayer) != null) mPlayer.getMediaControl().start();  mPlayer.resumePlayer(); <BUGE> com.kaltura.playersdk.utils.LogUtils.LOGD(com.kaltura.adplayerdemo.MainActivity.TAG, "on Resume called for player"); if ((mAdPlayer) != null) { mAdPlayer.moveSurfaceToForeground(); mAdPlayer.play(); } } super.onResume(); com.kaltura.adplayerdemo.NetworkChangeReceiver.getObservable().addObserver(this); } 
private void createPages() { if ((moviesView) == null) { moviesView = new husaynhakeem.io.popularmovies.features.movies.MoviesView(); husaynhakeem.io.popularmovies.features.movies.MoviesPresenter moviesPresenter = new husaynhakeem.io.popularmovies.features.movies.MoviesPresenter(); moviesView.setPresenter(moviesPresenter); <BUGS> moviesPresenter.setView(moviesView); <BUGE> } if ((favoritesView) == null) { favoritesView = new husaynhakeem.io.popularmovies.features.favorites.FavoritesView(); husaynhakeem.io.popularmovies.features.favorites.FavoritesPresenter favoritesPresenter = new husaynhakeem.io.popularmovies.features.favorites.FavoritesPresenter(); favoritesView.setPresenter(favoritesPresenter); <BUGS> favoritesPresenter.setView(favoritesView); <BUGE> } } 
public static boolean isInteger(java.lang.String str) { <BUGS> <BUGE> int i = -1; while ((++i) < (str.length())) { char c = str.charAt(i); if ((c < '0') || (c > '9')) { return false; } } return true; } 
public void task(android.database.sqlite.SQLiteDatabase db) { <BUGS> if (edit != null) <BUGE> dbh.routes.insert(r, db); <BUGS> else <BUGE> dbh.routes.update(r, (((transcend.rockeeper.data.RouteContract._ID) + "=") + (edit.get(RouteContract._ID))), null, db); <BUGS>  <BUGE> } 
protected java.lang.String makeRequest(java.lang.String endpoint, java.lang.String queryString) throws java.lang.Exception { <BUGS> java.net.URI uri = org.apache.http.client.utils.URIUtils.createURI(uk.ac.jorum.integration.RestApiBaseTest.apiProtocol, uk.ac.jorum.integration.RestApiBaseTest.apiHost, uk.ac.jorum.integration.RestApiBaseTest.apiPort, ((uk.ac.jorum.integration.RestApiBaseTest.apiMountPoint) + endpoint), queryString, ""); <BUGE> org.apache.http.client.methods.HttpGet httpget = new org.apache.http.client.methods.HttpGet(uri); httpget.addHeader("Accept", "application/json"); org.apache.http.client.ResponseHandler<java.lang.String> responseHandler = new org.apache.http.impl.client.BasicResponseHandler(); return client.execute(httpget, responseHandler); } 
@org.junit.Test public void checkUpperBoundMessageCount() { java.lang.String msgcnt = "128"; us.dot.its.jpo.ode.j2735.dsrc.TravelerInformation travelerInfo = new us.dot.its.jpo.ode.j2735.dsrc.TravelerInformation(); try { travelerInfo.setMsgCnt(new us.dot.its.jpo.ode.j2735.dsrc.MsgCount(java.lang.Integer.parseInt(msgcnt))); <BUGS> fail("Expected IllegalArgumentException"); <BUGE> } catch (java.lang.RuntimeException e) { assertEquals(java.lang.IllegalArgumentException.class, e.getClass()); } } 
@java.lang.Override public twitter4j.IDs getFollowersIDs(long arg0, long arg1) throws twitter4j.TwitterException { if ((limits[2]) == 14) { SocialNetworkAnalysis.TwitterWrapper.timelimited[0] = new java.util.Date(); limit.reached(); limits[2] = 0; } <BUGS> java.lang.System.out.println("limits in getFollowersIDs: "); <BUGE> for (int limit : limits) { java.lang.System.out.print((limit + " ")); } java.lang.System.out.println(); (limits[2])++; return t.getFollowersIDs(arg0, arg1); } 
public void read(com.jme3.math.JmeImporter e) throws java.io.IOException { com.jme3.math.InputCapsule capsule = e.getCapsule(this); rot = ((com.jme3.math.Quaternion) (capsule.readSavable("rot", new com.jme3.math.Quaternion()))); <BUGS> translation = ((com.jme3.math.Vector3f) (capsule.readSavable("translation", Vector3f.ZERO))); <BUGE> scale = ((com.jme3.math.Vector3f) (capsule.readSavable("scale", Vector3f.UNIT_XYZ))); } 
private com.emc.storageos.isilon.restapi.IsilonExport getIsilonExport(com.emc.storageos.isilon.restapi.IsilonApi isilonApi, java.lang.Integer expId, java.lang.String zoneName) { com.emc.storageos.isilon.restapi.IsilonExport exp = null; try { _log.debug("call getIsilonExport for {} ", expId); if (expId != null) { <BUGS> exp = isilonApi.getExport(expId.toString()); <BUGE> _log.debug("call getIsilonExport {}", exp.toString()); } } catch (java.lang.Exception e) { _log.error("Exception while getting Export for {}", expId); } return exp; } 
public void draw(java.awt.Graphics2D g2, boolean filled) { <BUGS> java.awt.geom.Rectangle2D.Double rec = new java.awt.geom.Rectangle2D.Double(((getRadius()) * 2), ((getRadius()) * 2), getCenter().getX(), getCenter().getY()); g2.setColor(java.awt.Color.BLACK); <BUGE> if (filled == true) { g2.draw(rec); g2.fill(rec); }else { g2.draw(rec); } } 
public void addToFavorites(java.lang.String name, int id) throws java.sql.SQLException { <BUGS> java.lang.String query = ((("INSERT INTO favorites VALUES('" + name) + "',") + id) + ")"; <BUGE> try (java.sql.Connection con = dataSource.getConnection()) { java.sql.PreparedStatement ps = con.prepareStatement("INSERT INTO favorites (name, plan_id) VALUES (?,?)"); ps.setString(1, name); ps.setInt(2, id); ps.executeUpdate(); } } 
private void stopRecording() { recorder.stop(); broadcastIntent.putExtra("time", ""); sendBroadcast(broadcastIntent); <BUGS> timeSwapBuff += timeInMilliseconds; <BUGE> customHandler.removeCallbacks(updateTimerThread); <BUGS> <BUGE> recorder.reset(); recorder.release(); recorder = null; } 
<BUGS> public java.util.List<java.lang.Object[]> find(java.lang.String nativeQuery, java.util.List<java.lang.String> relations, java.lang.Class clazz) { <BUGE> if ((s) == null) { s = sf.openStatelessSession(); s.beginTransaction(); } org.hibernate.SQLQuery q = s.createSQLQuery(nativeQuery).addEntity(clazz); for (java.lang.String r : relations) { q.addScalar(r); } return q.list(); } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_detail); if (savedInstanceState == null) { android.os.Bundle args = new android.os.Bundle(); args.putParcelable(DetailFragment.DETAIL_URI, getIntent().getData()); com.odytrice.popularmovies.fragments.DetailFragment fragment = new com.odytrice.popularmovies.fragments.DetailFragment(); fragment.setArguments(args); <BUGS> getSupportFragmentManager().beginTransaction().replace(R.id.movie_detail_container, new com.odytrice.popularmovies.fragments.DetailFragment()).commit(); <BUGE> } } 
<BUGS> private void updateTimeTaken() { <BUGE> this.experienceTime = (this.BASE_TIME) / (((this.level) / 10) + 1); this.repairTime = (this.experienceTime) * 2; if ((this.experienceTime) < 0.5) { this.experienceTime = ((float) (0.5)); } if ((this.repairTime) < 1.0) { this.repairTime = ((float) (1.0)); } } 
private void loginToFacebookIfNeeded(java.util.List<amai.org.conventions.model.Update> updates) { initializeFacebookLoginButton(); <BUGS> <BUGE> com.facebook.AccessToken accessToken = com.facebook.AccessToken.getCurrentAccessToken(); if ((accessToken != null) && (!(accessToken.isExpired()))) { <BUGS> loginLayout.setVisibility(View.GONE); <BUGE> retrieveUpdatesListFromFacebookApi(accessToken); }else { <BUGS> loginLayout.setVisibility(View.GONE); <BUGE> com.facebook.login.LoginManager.getInstance().logInWithReadPermissions(this, java.util.Collections.singletonList("public_profile")); } } 
@java.lang.Override protected com.rezoleo.zer0data.object.AllInformation doInBackground(java.lang.String... params) { java.lang.String mode = params[0]; java.lang.String attribute = params[1]; allInformation = new com.rezoleo.zer0data.object.AllInformation(); apiException = null; switch (mode) { case "login" : break; case "card" : try { allInformation.setCard(httpClient.getOneCardByCode(attribute)); } catch (fr.applicationcore.object.APIException e) { e.printStackTrace(); apiException = e; } break; default : break; } <BUGS> return null; <BUGE> } 
public static java.lang.String compress(java.lang.String input, net.minidev.json.JSONStyle style) { try { java.lang.StringBuilder sb = new java.lang.StringBuilder(); new net.minidev.json.parser.JSONParser(net.minidev.json.parser.JSONParser.DEFAULT_PERMISSIVE_MODE).parse(input, new net.minidev.json.writer.CompessorMapper(net.minidev.json.JSONValue.defaultReader, sb, style)); return sb.toString(); } catch (java.lang.Exception e) { <BUGS> e.printStackTrace(); <BUGE> return input; } } 
public static de.zib.vold.common.Key buildkey(java.util.List<java.lang.String> key) throws java.lang.IllegalArgumentException { if ((key.size()) < 3) { throw new java.lang.IllegalArgumentException((("Tried to build a key out of " + (key.size())) + " arguments. At leest three (scope, type, keyname) of them are necessary.")); } <BUGS> return new de.zib.vold.common.Key(key.get(0), key.get(2), key.get(1)); <BUGE> } 
public void run(android.accounts.AccountManagerFuture<android.accounts.Account[]> future) { try { _googleAccounts = future.getResult(); <BUGS> this.setListAdapter(new com.axelby.podax.ImportSubscriptionActivity.ImportSubscriptionAdapter()); <BUGE> } catch (android.accounts.OperationCanceledException e) { android.util.Log.e("Podax", "Operation Canceled", e); } catch (java.io.IOException e) { android.util.Log.e("Podax", "IOException", e); } catch (android.accounts.AuthenticatorException e) { <BUGS> android.util.Log.e("Podax", "Authentication Failed", e); <BUGE> } } 
private static java.lang.String executeMarkAsComplete(java.lang.String userCommand) { <BUGS> int taskId = tasknote.parser.Parser.getUpdateTaskId(userCommand); <BUGE> tasknote.shared.TaskObject taskObject; if (tasknote.logic.TaskNoteControl.taskNote.isValidTaskId(taskId)) { java.util.ArrayList<tasknote.shared.TaskObject> displayList = tasknote.logic.TaskNoteControl.taskNote.getDisplayList(); taskObject = displayList.get(taskId); }else { taskObject = null; } tasknote.logic.TaskNoteControl.command = new tasknote.logic.Commands.CompleteCommand(tasknote.logic.TaskNoteControl.taskNote, taskObject); tasknote.logic.TaskNoteControl.command.execute(); tasknote.logic.TaskNoteControl.command.refreshDisplay(); java.lang.String response = tasknote.logic.TaskNoteControl.command.getFeedBack(); return response; } 
<BUGS> public boolean monsterExist(game.zork.Monster monster) { java.util.Map<game.zork.GameMap.Coordination, java.util.ArrayList<java.lang.Object>> mapLevel = getLevelMap(); <BUGE> game.zork.GameMap.Coordination currentPosition = getCurrentPosition(); for (java.lang.Object i : mapLevel.get(currentPosition)) { if ((i instanceof game.zork.Monster) && ((((game.zork.Monster) (i)).getName()) == (monster.getName()))) { return true; } } return false; } 
@org.junit.Test public void testGetRenewsEntry() { <BUGS> c.set(1, 1); c.set(2, 4); <BUGE> assertEquals(c.get(1), 1); <BUGS> c.set(3, 9); <BUGE> assertEquals(c.get(1), 1); assertEquals(c.get(2), null); assertEquals(c.get(3), 9); } 
@org.junit.Test public void whenModuleHasDescription_thenCorrespondingFitnessFeatureShouldBeTrue() { org.corpus_tools.pepper.modules.PepperModule module = org.mockito.Mockito.mock(org.corpus_tools.pepper.modules.PepperModule.class); org.mockito.Mockito.when(module.getDesc()).thenReturn("any description"); <BUGS> org.assertj.core.api.Assertions.assertThat(new org.corpus_tools.pepper.core.ModuleFitnessChecker(null).checkFitness(module).getFitness(FitnessFeature.HAS_DESCRIPTION)).isEqualTo(true); <BUGE> } 
@java.lang.Override public void readFromNBT(net.minecraft.nbt.NBTTagCompound tag) { super.readFromNBT(tag); this.isDouble = tag.getBoolean("isDouble"); this.isTop = tag.getBoolean("isTop"); if (isDouble) { capacity = 2 * (originalCapacity); <BUGS> } <BUGE> this.tank.setCapacity(capacity); } 
public void onAdminJoin(org.bukkit.entity.Player player, boolean fromEvent) { staff.add(player); if (fromEvent) { final java.util.ArrayList<java.lang.String> lines = latestToLines(); if (lines != null) for (java.lang.String line : lines) <BUGS> player.sendMessage(ru.simsonic.rscMinecraftLibrary.Bukkit.GenericChatCodes.processStringStatic(((ru.simsonic.rscFirstJoinDemo.API.Settings.chatPrefix) + line))); <BUGE>   } } 
@java.lang.Override public int compare(ge.edu.freeuni.sdp.xo.achiev.FakeDBObject arg0, ge.edu.freeuni.sdp.xo.achiev.FakeDBObject arg1) { int scoreFirst = arg0.getScore(); int scoreSecond = arg1.getScore(); if (scoreFirst == scoreSecond) return 0; else if (scoreFirst > scoreSecond) <BUGS> return 1; <BUGE>   <BUGS> return -1; <BUGE> } 
@java.lang.Override public void handleStatement(com.marklogic.semantics.rdf4j.Statement st) throws org.eclipse.rdf4j.rio.RDFHandlerException { out.add(st.getSubject().stringValue()); out.add(st.getPredicate().stringValue()); out.add(st.getObject().stringValue()); <BUGS> <BUGE> } 
private void clearTheCurrentGame() { for (int i = 0; i < 3; i++) { for (int j = 0; j < 3; j++) { application.TicTacToeApp.board[i][j].clear(); <BUGS> java.lang.System.out.println("clear"); <BUGE> } } application.TicTacToeApp.neadNewGame = false; application.TicTacToeApp.playable = true; } 
public void focusOut(org.sbolstandard.core2.ComponentDefinition comp) throws org.sbolstandard.core2.SBOLValidationException { if ((canvasCD) == comp) { return ; } updateCanvasCD(); org.sbolstandard.core2.ComponentDefinition parentComponent = parentCDs.pop(); <BUGS> while (parentComponent != comp) { <BUGE> parentComponent = parentCDs.pop(); } load(parentComponent); eventBus.publish(new com.clarkparsia.sbol.editor.event.FocusOutEvent(this, parentComponent)); } 
public static int differenceInDays(java.util.Date firstDate, java.util.Date secondDate) { long difference = (firstDate.getTime()) - (secondDate.getTime()); <BUGS> int diffDays = ((int) (difference)) / (((24 * 60) * 60) * 1000); return diffDays; <BUGE> } 
public int getUuidIndex(java.lang.String uuid) { if (uuid.equals("0")) return 0;  for (int i = 0; i < (list.size()); i++) { try { java.lang.String itemuuid = list.get(i).getString("uuid"); if (uuid.equals(itemuuid)) <BUGS> return i; <BUGE>  } catch (org.json.JSONException e) { e.printStackTrace(); } } return 0; } 
@java.lang.Override public int hashCode() { <BUGS> return new org.apache.commons.lang.builder.HashCodeBuilder().append(username).append(firstName).append(lastName).append(email).append(active).append(country).append(sendReminder).append(lastLoginTime).append(lastPasswordChangeTime).toHashCode(); <BUGE> } 
private void showNotificationMessageWithBigImage(android.content.Context context, java.lang.String title, java.lang.String message, java.lang.String timeStamp, android.content.Intent intent, java.lang.String imageUrl) { notificationUtils = new android.stalwartgroup.residentguardo.Util.NotificationUtils(context); intent.setFlags(((android.content.Intent.FLAG_ACTIVITY_NEW_TASK) | (android.content.Intent.FLAG_ACTIVITY_CLEAR_TASK))); notificationUtils.showNotificationMessage(title, message, timeStamp, intent, imageUrl); <BUGS> android.stalwartgroup.residentguardo.Util.NotificationUtils notificationUtils = new android.stalwartgroup.residentguardo.Util.NotificationUtils(getApplicationContext()); notificationUtils.playNotificationSound(); <BUGE> } 
public java.io.InputStream openStream() { try { java.lang.Process process = startProcess(); <BUGS> java.lang.System.out.println("start reading"); <BUGE> java.io.BufferedInputStream in = new java.io.BufferedInputStream(process.getInputStream()); return in; } catch (java.lang.Exception e) { e.printStackTrace(); throw new java.lang.RuntimeException(e); } } 
@java.lang.Override <BUGS> public boolean equals(java.lang.Object obj) { <BUGE> boolean isEqual = false; <BUGS> try { <BUGE> isEqual = ((obj.getClass()) != (dss.lingvo.hflts.TTHFLTS.class)) && (java.util.Arrays.equals(this.terms, ((dss.lingvo.hflts.TTHFLTS) (obj)).getTerms())); <BUGS> } catch (java.lang.Exception e) { e.printStackTrace(); <BUGE> } return isEqual; } 
@java.lang.Override public void onItemSelected(java.lang.String ean) { android.os.Bundle args = new android.os.Bundle(); args.putString(BookDetail.EAN_KEY, ean); it.jaschke.alexandria.BookDetail fragment = new it.jaschke.alexandria.BookDetail(); fragment.setArguments(args); int id = R.id.container; if ((findViewById(R.id.right_container)) != null) { id = R.id.right_container; } <BUGS> getSupportFragmentManager().beginTransaction().replace(id, fragment).addToBackStack("Book Detail").commit(); <BUGE> } 
@java.lang.Override void appendOp(java.lang.String op, boolean binOp) { <BUGS> if (((getLastChar()) != ' ') && ((op.charAt(0)) != ',')) { <BUGE> append(" "); <BUGS> } append(op); if (binOp) { append(" "); <BUGE> } } 
private static double getScoreForDocumentId(int documentId, org.terrier.querying.SearchRequest srq) { org.terrier.matching.ResultSet rs = srq.getResultSet(); <BUGS> <BUGE> int[] docIds = rs.getDocids(); double[] scores = rs.getScores(); for (int i = 0; i < (docIds.length); i++) { if ((docIds[i]) == documentId) { return scores[i]; } } return 0; } 
private void updateUI() { if ((mAdapter) == null) { <BUGS> android.util.Log.d(TAG, "A"); <BUGE> mAdapter = new com.payforward.androidapp.post.CategoryActivity.CustomAdapter(this, com.payforward.androidapp.R.layout.category, categoryList); mCategoryList.setAdapter(mAdapter); }else { <BUGS> android.util.Log.d(TAG, "B"); <BUGE> mAdapter.clear(); mAdapter.addAll(categoryList); mAdapter.notifyDataSetChanged(); } } 
<BUGS> public static java.util.Optional<com.hartwig.healthchecks.boggs.healthcheck.prestasts.PrestatsCheck> getByDescription(java.lang.String description) { <BUGE> java.util.List<com.hartwig.healthchecks.boggs.healthcheck.prestasts.PrestatsCheck> types = java.util.Arrays.asList(com.hartwig.healthchecks.boggs.healthcheck.prestasts.PrestatsCheck.values()); return types.stream().filter(( t) -> t.description.equalsIgnoreCase(description)).findFirst(); } 
public static int fastRecursiveExponentiationModulo(int base, int exponent, int mod) { if (exponent == 0) return 1;  if (exponent == 1) return base;  <BUGS> final int resultOnHalfExponent = com.jwetherell.algorithms.mathematics.Exponentiation.fastRecursiveExponentiation(base, (exponent / 2)); <BUGE> if ((exponent % 2) == 0) return (resultOnHalfExponent * resultOnHalfExponent) % mod; else return (((resultOnHalfExponent * resultOnHalfExponent) % mod) * base) % mod;  } 
@org.junit.Test public void testCreateListener() { org.robolectric.shadows.ShadowMediaPlayer.CreateListener createListener = org.mockito.Mockito.mock(ShadowMediaPlayer.CreateListener.class); org.robolectric.shadows.ShadowMediaPlayer.setCreateListener(createListener); android.media.MediaPlayer newPlayer = new android.media.MediaPlayer(); org.robolectric.shadows.ShadowMediaPlayer shadow = org.robolectric.Shadows.shadowOf(newPlayer); org.mockito.Mockito.verify(createListener).onCreate(newPlayer, shadow); <BUGS> org.robolectric.shadows.ShadowMediaPlayer.setCreateListener(null); <BUGE> } 
@java.lang.Override public boolean onMarkerClick(com.google.android.gms.maps.model.Marker marker) { int markerPosition = markers.indexOf(marker); <BUGS> if (markerPosition == (selectedPosition)) return true;  <BUGE> selectMarker(markerPosition); if ((listener) != null) { if (isZoomed()) { listener.onActivityMarkerPressedAtIndex(markerPosition); }else { listener.onLegMarkerPressedAtIndex(markerPosition); } } return true; } 
public void visit(compiler.phase.seman.FunCall funCall) { for (int a = 0; a < (funCall.numArgs()); a++) funCall.arg(a).accept(this);  compiler.phase.seman.Decl decl = attrs.declAttr.get(funCall); compiler.phase.seman.Typ typ = attrs.typAttr.get(decl); <BUGS> if (typ != null) attrs.typAttr.set(funCall, ((compiler.phase.seman.FunTyp) (typ)).resultTyp);  <BUGE> } 
private java.lang.String buildProvisioningAddress() { java.lang.String mnc = java.lang.String.format("%03d", mRcsSettings.getMobileNetworkCode()); java.lang.String mcc = java.lang.String.format("%03d", mRcsSettings.getMobileCountryCode()); <BUGS> return new java.lang.StringBuilder("config.rcs.mnc").append(mnc).append(".mcc").append(mcc).append(".pub.3gppnetwork.org").toString(); <BUGE> } 
private rx.Observable<java.util.List<java.lang.String>> movieGenres(com.akobylianskiy.movies.data.entity.MovieEntity movieEntity) { return db.createQuery(MovieGenreDb.TABLE_NAME, MovieGenreDb.SELECT_MOVIE_GENRES, movieEntity.getId()).mapToList(new rx.functions.Func1<android.database.Cursor, java.lang.String>() { @java.lang.Override public java.lang.String call(android.database.Cursor cursor) { return com.akobylianskiy.movies.data.cache.table.MovieGenreDb.map(cursor).genreId(); } <BUGS> }); <BUGE> } 
public void act() { if ((Play.dif) != 4) { checkDif(); if (((lose) == false) && ((getX()) != 533)) { <BUGS> i = (i) + 1; setImage((("st" + ((i) % 4)) + ".png")); <BUGE> } (cd)++; losing(); } } 
public static void knockbackPlayer() { switch (game.Player.lastDir) { case 1 : game.Player.y += game.Player.size; <BUGS> <BUGE> break; case 2 : game.Player.x += game.Player.size; <BUGS> <BUGE> break; case 3 : game.Player.y -= game.Player.size; <BUGS> <BUGE> break; case 4 : game.Player.x -= game.Player.size; <BUGS> <BUGE> break; default : break; } } 
public void analyze() { boolean error = false; for (nez.lang.Production p : this.peg.getProductionList()) { if (!(this.analizeConsumption(p.getExpression()))) { <BUGS> if (!(this.analizeConsumption(p.getExpression()))) { error = true; } <BUGE> } } if (error) { nez.util.ConsoleUtils.exit(1, "Grammar Error"); } } 
public void removeLink(com.aleksey.castlegates.types.GearLink link) { if (link == null) return ;  link.setRemoved(); <BUGS> link.getGear1().setLink(null); link.getGear2().setLink(null); <BUGE> this.dataWorker.addChangedLink(link); } 
@java.lang.Override public com.lukgru.galgo.runner.GenerationResult<T> generate() { com.lukgru.galgo.model.Population<T> population = initialPopulation; int iteration = 0; do { com.lukgru.galgo.model.Population<T> selectedForReproduction = selection(population, fitnessFunction); com.lukgru.galgo.model.Population<T> newPopulation = reproduce(selectedForReproduction, crossoverFunction); <BUGS> mutate(newPopulation); <BUGE> population = newPopulation; iteration++; } while (!(solutionFound(population, fitnessFunction)) ); return new com.lukgru.galgo.runner.GenerationResult(population, iteration); } 
public java.lang.String getReps(android.widget.LinearLayout layout) { java.lang.String toReturn = ""; for (int i = 1; i < 6; i++) { android.widget.EditText editText = ((android.widget.EditText) (layout.getChildAt(i))); java.lang.String text = editText.getText().toString(); <BUGS> if (text.trim().equals("")) { <BUGE> toReturn += text + " "; } } return toReturn; } 
public void updateDeploymentPolicyInInformationModel(org.apache.stratos.autoscaler.pojo.policy.deployment.DeploymentPolicy deploymentPolicy) throws org.apache.stratos.autoscaler.exception.policy.InvalidPolicyException { <BUGS> if (org.apache.stratos.autoscaler.pojo.policy.PolicyManager.autoscalePolicyListMap.containsKey(deploymentPolicy.getDeploymentPolicyID())) { <BUGE> if (org.apache.stratos.autoscaler.pojo.policy.PolicyManager.log.isDebugEnabled()) { org.apache.stratos.autoscaler.pojo.policy.PolicyManager.log.debug(("Updating deployment policy: " + (deploymentPolicy.getDeploymentPolicyID()))); } org.apache.stratos.autoscaler.pojo.policy.PolicyManager.deploymentPolicyListMap.put(deploymentPolicy.getDeploymentPolicyID(), deploymentPolicy); } } 
private void display_responds(java.lang.String s) { switch (s) { case "text" : instruction.setText(hints[counter]); <BUGS> <BUGE> break; case "audio" : break; case "flash" : break; case "show" : show(counter); break; case "next" : show(counter); <BUGS> (counter)++; <BUGE> instruction.setText(instructions[counter]); step_number.setText(steps[counter]); break; } } 
public void setListName(java.lang.String listName) { if (!(listNameEditSupported)) { throw new java.lang.RuntimeException(("Error: Attempted to edit Channel List name for " + "group that does not support it.")); } java.lang.String oldListName = this.listName; this.listName = listName; <BUGS> propSupport.firePropertyChange("listName", oldListName, listName); <BUGE> } 
public <T extends com.jaeksoft.searchlib.webservice.CommonResult> T checkCommonResult(javax.ws.rs.core.Response response, java.lang.Class<T> commonResultClass, int httpCode) { org.junit.Assert.assertNotNull(response); <BUGS> org.junit.Assert.assertEquals(((int) (httpCode)), response.getStatus()); java.lang.String json = response.getEntity().toString(); <BUGE> T commonResult = response.readEntity(commonResultClass); org.junit.Assert.assertNotNull(commonResult.successful); org.junit.Assert.assertEquals(true, commonResult.successful); return commonResult; } 
private synchronized void await(org.opendaylight.vtn.manager.it.ofmock.impl.FlowTable.TableCond cond, long timeout) throws java.lang.InterruptedException, java.util.concurrent.TimeoutException { if (!(cond.check())) { long msec = timeout; long deadline = (java.lang.System.currentTimeMillis()) + timeout; do { wait(msec); if (cond.check()) { return ; } msec = deadline - (java.lang.System.currentTimeMillis()); <BUGS> } while (timeout > 0 ); <BUGE> throw new java.util.concurrent.TimeoutException(cond.getTimeoutError()); } } 
@java.lang.Override public void onCameraIdle() { <BUGS> if (!(flagLoading)) { handler.removeCallbacksAndMessages(null); handler.postDelayed(new java.lang.Runnable() { @java.lang.Override public void run() { executeTask(); } }, 500); } <BUGE> bounds = map.getProjection().getVisibleRegion().latLngBounds; io.tjeubaoit.pokeradar.ui.MainActivity.LOGGER.debug("Camera idle"); } 
@java.lang.Override public void onDataChange(com.google.firebase.database.DataSnapshot dataSnapshot) { <BUGS> <BUGE> for (com.google.firebase.database.DataSnapshot d : dataSnapshot.child("Private User Data").child(mUserId).getChildren()) { <BUGS> userName.setText("aa"); userEmail.setText("bb"); com.example.saathi.Student c = d.getValue(com.example.saathi.Student.class); java.lang.String nameVal = c.getName(); java.lang.String emailVal = mFirebaseAuth.getCurrentUser().getEmail(); userName.setText(nameVal); userEmail.setText(emailVal); <BUGE> } } 
public void setup(final java.util.Map<java.net.URI, java.net.URI> conflictTable) { for (final java.util.Map.Entry<java.net.URI, java.net.URI> e : changeTable.entrySet()) { <BUGS> assert new java.io.File(e.getKey()).isAbsolute(); assert new java.io.File(e.getValue()).isAbsolute(); <BUGE> } this.conflictTable = conflictTable; } 
public void saveJobInfo(com.emc.sa.api.utils.OrderJobStatus status) throws java.lang.Exception { <BUGS> com.emc.sa.api.OrderService.log.info("lbyx0: persist type={}", status); <BUGE> org.apache.curator.framework.recipes.locks.InterProcessLock lock = coordinatorClient.getLock(com.emc.sa.api.OrderService.ORDER_JOB_LOCK); lock.acquire(); coordinatorClient.persistRuntimeState(status.getType().name(), status); lock.release(); } 
<BUGS> private java.math.BigInteger getNum(int k, cz.tomkren.fishtron.types.Type t_NF) { <BUGE> if (opts.isCachingUsed()) { return cache.getNum(k, t_NF); }else { java.math.BigInteger sum = java.math.BigInteger.ZERO; for (cz.tomkren.fishtron.ugen.data.SubsRes subsRes : subs_compute(k, t_NF, 0)) { sum = sum.add(subsRes.getNum()); } return sum; } } 
<BUGS> private java.lang.String getAccountsUrl(java.lang.String deploymentUrl, java.lang.String username) { <BUGE> if (deploymentUrl.endsWith("/")) { deploymentUrl = deploymentUrl.substring(0, ((deploymentUrl.length()) - 1)); } java.lang.String accountsUrl = ((deploymentUrl + "/2012-04-24/Accounts/") + username) + "/Supervisor.json"; return accountsUrl; } 
@java.lang.Override public void onClick(android.view.View v) { java.lang.String toAdd = commenting.getText().toString(); <BUGS> if ((toAdd != null) && (toAdd != "")) { <BUGE> adapter.add(toAdd); } commenting.setText(""); } 
@java.lang.Override protected void onResume() { super.onResume(); <BUGS> <BUGE> if (com.example.maaus.template.org.opencv.android.OpenCVLoader.initDebug()) { android.util.Log.d(com.example.maaus.template.ActivityFour.TAG, "OpenCv Loaded Successfully"); mLoaderCallback.onManagerConnected(org.opencv.android.LoaderCallbackInterface.SUCCESS); }else { android.util.Log.d(com.example.maaus.template.ActivityFour.TAG, "OpenCV not Loaded"); com.example.maaus.template.org.opencv.android.OpenCVLoader.initAsync(org.opencv.android.OpenCVLoader.OPENCV_VERSION_3_3_0, this, mLoaderCallback); } } 
private void saveToInternalStorage(android.graphics.Bitmap bitmapImage, java.lang.String filename) { android.content.ContextWrapper cw = new android.content.ContextWrapper(getApplicationContext()); java.io.File directory = cw.getFilesDir(); <BUGS> android.util.Log.e(rocks.athrow.android_inventory_app.ItemDetailDataEntry.LOG_TAG, ("nameField " + directory)); <BUGE> java.io.File mypath = new java.io.File(directory, filename); java.io.FileOutputStream fos; try { fos = new java.io.FileOutputStream(mypath); bitmapImage.compress(Bitmap.CompressFormat.PNG, 100, fos); } catch (java.lang.Exception e) { e.printStackTrace(); } } 
public static void playMenuSound() { com.game.Audio.Sounds.sound = Gdx.audio.newSound(Gdx.files.internal("Game_Sound/Sound.mp3")); com.game.Audio.Sounds.sound.setLooping(0, true); <BUGS> com.game.Audio.Sounds.Menu_Music = com.game.Audio.Sounds.sound.play(0.0F); <BUGE> com.game.Audio.Sounds.sound.setLooping(com.game.Audio.Sounds.Menu_Music, true); com.game.Audio.Sounds.sound.setVolume(com.game.Audio.Sounds.Menu_Music, com.game.Audio.Sounds.Menu_Volume); com.game.Audio.Sounds.sound.play(com.game.Audio.Sounds.Menu_Volume); } 
private java.util.List<java.lang.Runnable> getTasks(de.bananaco.bpermissions.imp.loadmanager.TaskRunnable.TaskType type) { if (type == (de.bananaco.bpermissions.imp.loadmanager.TaskRunnable.TaskType.LOAD)) { return load; } if (type == (de.bananaco.bpermissions.imp.loadmanager.TaskRunnable.TaskType.SAVE)) { return save; } if (type == (de.bananaco.bpermissions.imp.loadmanager.TaskRunnable.TaskType.PLAYER_SETUP)) { return playerSetup; } if (type == (de.bananaco.bpermissions.imp.loadmanager.TaskRunnable.TaskType.SERVER)) { return server; } <BUGS> return new java.util.ArrayList<java.lang.Runnable>(); <BUGE> } 
private boolean checkHorizontal(int row, int col) { <BUGS> if (col <= ((board.length) - 3)) { <BUGE> if (((board[row][col]) == (board[row][(col + 1)])) && ((board[row][col]) == (board[row][(col + 2)]))) { java.lang.System.out.println("There is a win there"); return true; } } return false; } 
@java.lang.Override public synchronized boolean open() { if (isOpen()) return true;  <BUGS> boolean open; open = camera.open(cameraIndex); <BUGE> if (open) { camera.set(5, 60); com.shootoff.camera.CameraFactory.openCamerasAdd(this); } return open; } 
public java.lang.String newAccountNumber() { java.lang.String newAccountNum = java.lang.Integer.toString(java.util.concurrent.ThreadLocalRandom.current().nextInt(100000, 999999)); java.io.File f = new java.io.File((newAccountNum + ".csv")); if (f.exists()) { <BUGS> newAccountNumber(); <BUGE> } return newAccountNum; } 
@java.lang.Override public gregtech.api.interfaces.ITexture[] getTexture(gregtech.api.interfaces.tileentity.IGregTechTileEntity aBaseMetaTileEntity, byte aSide, byte aFacing, byte aColorIndex, boolean aActive, boolean aRedstone) { <BUGS> return new gregtech.api.interfaces.ITexture[]{ Textures.BlockIcons.MACHINE_CASINGS[mTier][(aColorIndex + 1)] , aSide != (this.getBaseMetaTileEntity().getFrontFacing()) ? new gregtech.api.objects.GT_RenderedTexture(Textures.BlockIcons.OVERLAY_TELEPORTER_ACTIVE) : new gregtech.api.objects.GT_RenderedTexture(com.github.technus.tectech.thing.metaTileEntity.single.GT_MetaTileEntity_DebugStructureWriter.MARK) }; <BUGE> } 
@java.lang.Override public void enterStmt(com.github.simpleregex.parser.SRLParser.StmtContext ctx) { visit(ctx.flag(), this::enterFlag); visit(ctx.anchor(), this::enterAnchor); if ((ctx.if_stmt()) != null) <BUGS> enterConditionalStmt(ctx.if_stmt(), ctx.stmt()); <BUGE>  visit(ctx.quantifiable_stmt(), this::enterQuantifiable_stmt); visit(ctx.quantifier(), this::enterQuantifier); } 
@tailminuseff.Test public void lineWrittenAfterDeleteGeneratesLineEvent() throws java.lang.Exception { this.completionService.submit(target); java.nio.file.Files.write(file.toPath(), "".getBytes(), java.nio.file.StandardOpenOption.APPEND); java.nio.file.Files.delete(file.toPath()); testListener.getNextEventAsReset(); java.nio.file.Files.write(file.toPath(), "ThirdLine\n".getBytes(), java.nio.file.StandardOpenOption.CREATE_NEW); <BUGS> org.junit.Assert.assertEquals("ThirdLine", testListener.getNextEventAsLine().getLine()); <BUGE> } 
private java.lang.Iterable<gameoflife.Cell> allCells() { java.util.List<gameoflife.Cell> allCells = new java.util.ArrayList<>(); <BUGS> for (int y = 0; y < (matrix.getWidth()); y++) { for (int x = 0; x < (matrix.getHeight()); x++) { <BUGE> allCells.add(new gameoflife.Cell(y, x, (-1))); } } return allCells; } 
public java.io.InputStream getInput(java.lang.String pathname) throws java.io.FileNotFoundException { org.infinispan.io.GridFile file = ((org.infinispan.io.GridFile) (getFile(pathname))); if (!(file.exists())) throw new java.io.FileNotFoundException(pathname);  if (file.isDirectory()) { throw new java.io.FileNotFoundException((("Cannot read from directory (" + file) + ")")); } <BUGS> return new org.infinispan.io.GridInputStream(file, data, default_chunk_size); <BUGE> } 
protected static void isTotpConfigurationRequired(org.keycloak.models.RealmModel realm, org.keycloak.models.UserModel user) { for (org.keycloak.models.RequiredCredentialModel c : realm.getRequiredCredentials()) { if ((c.getType().equals(CredentialRepresentation.TOTP)) && (!(user.isTotp()))) { <BUGS> user.addRequiredAction(UserModel.RequiredAction.CONFIGURE_TOTP); <BUGE> org.keycloak.services.managers.AuthenticationManager.logger.debug("User is required to configure totp"); } } } 
private java.util.List<java.net.URI> parseLocationsFromBody(java.lang.String body) throws cz.cesnet.cloud.occi.exception.ParsingException { cz.cesnet.cloud.occi.parser.TextParser.LOGGER.debug("Reading response body."); <BUGS> <BUGE> java.lang.String replaced = body.replaceAll("X-OCCI-Location:\\s*", ""); java.lang.String[] lines = replaced.split("[\\r\\n]+"); return makeURIList(lines); } 
public java.io.File getBackupDir(java.lang.String backupName, boolean isLocal) { <BUGS> <BUGE> if (backupName.endsWith(BackupConstants.COMPRESS_SUFFIX)) { <BUGS> backupName = org.apache.commons.io.FilenameUtils.removeExtension(backupName); <BUGE> } <BUGS> java.io.File backupDir = (isLocal) ? new java.io.File(getBackupDir(), backupName) : new java.io.File(BackupConstants.RESTORE_DIR, backupName); return backupDir; <BUGE> } 
public static boolean can_paste(int x, int y, mudmap2.backend.Layer layer) { <BUGS> if ((((mudmap2.Mudmap2.copy_places) != null) && ((mudmap2.Mudmap2.copy_place_locations) != null)) && (layer != null)) { <BUGE> for (mudmap2.Pair<java.lang.Integer, java.lang.Integer> coordinate : mudmap2.Mudmap2.copy_place_locations) if (layer.exist((x + (coordinate.first)), (y + (coordinate.second)))) return false;   } return true; } 
@org.junit.Test public void testEqualsEqual() { <BUGS> com.github.fishio.logging.TxtFileHandler handler2 = new com.github.fishio.logging.TxtFileHandler(new com.github.fishio.logging.TimeStampFormat(), new java.io.File(folder.getRoot(), "test.txt")); <BUGE> com.github.fishio.logging.DefaultFormat df = new com.github.fishio.logging.DefaultFormat(); handler.setFormat(df); handler2.setFormat(df); <BUGS> org.junit.Assert.assertTrue(handler.equals(handler2)); <BUGE> try { handler2.close(); } catch (java.io.IOException e) { e.printStackTrace(); } } 
private void init(android.content.Context context) { mScaleTouchSlop = android.view.ViewConfiguration.get(context).getScaledTouchSlop(); <BUGS> <BUGE> mScreenW = getResources().getDisplayMetrics().widthPixels; <BUGS> mMaxVelocity = android.view.ViewConfiguration.get(context).getScaledMaximumFlingVelocity(); <BUGE> mLastPoint = new android.graphics.PointF(); } 
@java.lang.Override public void onClick(android.view.View v) { <BUGS> mAddFAB.setVisibility(View.INVISIBLE); <BUGE> mAddDialog = new org.jasey.unforgetit.fragment.AddTaskDialogFragment(); getSupportFragmentManager().beginTransaction().setTransition(FragmentTransaction.TRANSIT_FRAGMENT_OPEN).replace(R.id.unforget_it_activity, mAddDialog).addToBackStack(null).commit(); mPagerAdapter.notifyDataSetChanged(); } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_search); android.support.v7.widget.Toolbar toolbar = ((android.support.v7.widget.Toolbar) (findViewById(R.id.toolbar))); setSupportActionBar(toolbar); setupViews(); actionBar = getSupportActionBar(); getSupportActionBar().setTitle("News Search"); <BUGS> <BUGE> client2 = new com.google.android.gms.common.api.GoogleApiClient.Builder(this).addApi(AppIndex.API).build(); } 
@java.lang.Override public int CreateFriendship(int friendid1, int friendid2) { org.ejdb.bson.BSONObject friendRecord = new org.ejdb.bson.BSONObject("userid1", java.lang.String.valueOf(friendid1)); friendRecord.append("userid2", java.lang.String.valueOf(friendid2)).append("status", EJDBClientProperties.FRIEND_CONFIRMED); org.ejdb.bson.types.ObjectId recordID = src.EJDBClient.friends.save(friendRecord); <BUGS> src.EJDBClient.friends.commitTransaction(); <BUGE> return 0; } 
protected void autoLoad() { <BUGS> if ((((_articleId) != null) || ((_classPK) != null)) && (com.liferay.mobile.screens.context.SessionContext.isLoggedIn())) { <BUGE> try { load(); } catch (java.lang.Exception e) { onWebContentFailure(this, e); } } } 
public static void main(java.lang.String[] args) { <BUGS> java.lang.System.out.println(easy.SearchA2DMatrix.searchMatrix(new int[][]{ new int[]{ 1 , 3 , 5 , 7 } , new int[]{ 10 , 11 , 16 , 20 } , new int[]{ 23 , 30 , 34 , 50 } }, 11)); <BUGE> } 
@java.lang.Override public void onClick(android.view.View v) { com.addressbook.thorrism.addressbook.Contact contact = createContact(); if (contact == null) android.util.Log.e(DroidBook.TAG, "Null"); else { <BUGS> com.addressbook.thorrism.addressbook.DroidBook.getInstance().hideKeyboard(mCurrentEdit, getApplicationContext()); <BUGE> mBook.addEntry(contact); new com.addressbook.thorrism.addressbook.CreateContactScreen.SaveTask().execute(); } } 
<BUGS> private java.lang.String getMultiVector() { <BUGE> if (this.multicast) { java.lang.String ans = ""; for (int i = 0; i < (groupSize); i++) ans += (multicastVector[i]) + " ";  return ans; }else return "no multi";  } 
private void hidePickersIfNeeded() { if (calendarMode.equals(AbstractDateWidget.CalendarMode.MONTH_YEAR)) { dayPicker.setVisibility(View.GONE); <BUGS> dayPicker.setValue(0); <BUGE> }else if (calendarMode.equals(AbstractDateWidget.CalendarMode.YEAR)) { dayPicker.setVisibility(View.GONE); monthPicker.setVisibility(View.GONE); <BUGS> dayPicker.setValue(0); yearPicker.setValue(0); <BUGE> }  } 
private org.terasology.math.Region3i createAABB(org.terasology.math.geom.Vector3i mainLocation, java.util.Collection<org.terasology.math.geom.Vector3i> memberLocations) { org.terasology.math.Region3i aabb = org.terasology.math.Region3i.createFromMinAndSize(mainLocation, new org.terasology.math.geom.Vector3i(1, 1, 1)); for (org.terasology.math.geom.Vector3i memberLocation : memberLocations) { <BUGS> aabb.expandToContain(memberLocation); <BUGE> } return aabb; } 
public static org.newdawn.slick.SpriteSheet makeSpriteSheet() { org.newdawn.slick.SpriteSheet spriteSheet = mock(org.newdawn.slick.SpriteSheet.class); <BUGS> org.newdawn.slick.Image image = org.mockito.Mockito.mock(org.newdawn.slick.Image.class); <BUGE> when(spriteSheet.getSprite(org.mockito.Matchers.anyInt(), org.mockito.Matchers.anyInt())).thenReturn(image); return spriteSheet; } 
@java.lang.Override public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) { android.view.View view = inflater.inflate(R.layout.fragment_movie_item_details, container, false); com.example.inspired.inspiredvideo.utils.MovieViewHolder movieViewHolder = new com.example.inspired.inspiredvideo.utils.MovieViewHolder(view); <BUGS> java.lang.System.out.println("here"); <BUGE> movieViewHolder.getmImageView().setImageResource(mMovieItem.getImageRes()); movieViewHolder.getmNameView().setText(mMovieItem.getName()); movieViewHolder.getmTextDescription().setText(mMovieItem.getDescription()); <BUGS> <BUGE> return view; } 
public long getTripStartDateOnSharedPreferences() { mSharedPreferences = this.getPreferences(Context.MODE_PRIVATE); long value_long = mSharedPreferences.getLong(getString(R.string.trip_start_date_tag), 0); if (value_long > 0) { mSPEditor = mSharedPreferences.edit(); <BUGS> mSPEditor.remove(this.gameStatus.trip_start_date_tag); <BUGE> mSPEditor.commit(); } return value_long; } 
public int nextInt(int max_exclusive) { seed ^= (seed) << 21; seed ^= (seed) >>> 35; seed ^= (seed) << 4; <BUGS> return ((int) ((java.lang.Math.abs(((seed) % max_exclusive))) + 1)); <BUGE> } 
public void jsonEquals(com.jayway.restassured.response.Response actual, org.json.JSONObject[] expected) { <BUGS> com.mbi.EqualityAsserter asserter = new com.mbi.EqualityAsserter(); asserter.assertEquals(new org.json.JSONArray(actual.asString()), asserter.objectsToArray(expected), mode, ignore); setDefault(); <BUGE> } 
public static void launch(info.papdt.express.helper.ui.AbsActivity mActivity, android.view.View fab) { android.content.Intent intent = new android.content.Intent(mActivity, info.papdt.express.helper.ui.AddActivity.class); intent.setFlags(Intent.FLAG_ACTIVITY_MULTIPLE_TASK); if (!(mActivity.mSets.getBoolean(Settings.KEY_DISABLE_ANIMATION, false))) { android.support.v4.app.ActivityOptionsCompat options = android.support.v4.app.ActivityOptionsCompat.makeSceneTransitionAnimation(mActivity, fab, info.papdt.express.helper.ui.AddActivity.TRANSITION_NAME_FAB); android.support.v4.app.ActivityCompat.startActivityForResult(mActivity, intent, MainActivity.REQUEST_ADD, options.toBundle()); }else { <BUGS> mActivity.startActivity(intent); <BUGE> } } 
private void showHullAndCentroid(java.util.ArrayList<ij.ImagePlus> channels, Roi roi) { for (ij.ImagePlus channel : channels) { Overlay overlay = new Overlay(); PointRoi pointRoi = new PointRoi(xCentroid, yCentroid); pointRoi.setPosition(roiPosition); overlay.add(pointRoi); <BUGS> PolygonRoi convexHull = new PolygonRoi(roi.getConvexHull(), Roi.POLYGON); convexHull.setPosition(roiPosition); overlay.add(convexHull); <BUGE> channel.setOverlay(overlay); channel.show(); } } 
public static java.lang.String getProperty(java.lang.String s) { java.lang.String value; switch (s) { <BUGS> case "user.home" : value = org.parabot.core.Directories.getCachePath().getAbsolutePath(); break; <BUGE> case "java.class.path" : value = "."; break; default : value = java.lang.System.getProperty(s); <BUGS> <BUGE> } java.lang.System.out.printf("GetSystemProp %s = %s\n", s, value); return value; } 
@java.lang.Override public void onClick(android.view.View view) { <BUGS> mAudioService.executeAction(Constants.Action.ACTION_PLAY); <BUGE> if (isNetworkAvailable()) { if ((mAudioService) != null) { <BUGS> <BUGE> mAudioService.doStartForeground(); btnPlay.startAnimation(playClickAnimation); btnPlay.setImageResource((showPlayButton ? android.R.drawable.ic_media_play : android.R.drawable.ic_media_pause)); <BUGS> showPlayButton = !(showPlayButton); <BUGE> } }else { android.widget.Toast.makeText(this, getString(R.string.no_network), Toast.LENGTH_SHORT).show(); } } 
public void deleteSchedule(java.sql.Date date) { java.sql.Connection conn = null; java.sql.PreparedStatement prepStmt = null; java.sql.ResultSet rs = null; try { java.lang.String statement = "DELETE FROM Schedule WHERE date = ?"; conn = establishConnection(); prepStmt = conn.prepareStatement(statement); prepStmt.setDate(1, date); prepStmt.execute(); java.lang.System.out.println("Success removed"); <BUGS> conn.close(); <BUGE> } catch (java.lang.Exception e) { java.lang.System.out.println("error. Not delete."); } } 
@java.lang.Override public boolean onTouchEvent(android.view.MotionEvent event) { mX = ((int) (event.getX())); mY = ((int) (event.getY())); logTouchEvent(); <BUGS> setPlacing(true); <BUGE> return super.onTouchEvent(event); } 
private void dispatchEventHandler(EventHandler handler, MouseInfo mouse, boolean isFront) { assert handler != null; <BUGS> assert mouse != null; <BUGE> if (handler instanceof BaseActor) { handler.onMouseIn(); handler.onMouseOut(); } handler.onMouseDown(); handler.onMouseUp(); handler.onMouseClicked(); handler.onMouseMoved(); handler.onMouseDragged(); handler.onMouseDragging(); } 
@java.lang.Override public void run() { while (threadRun) { <BUGS> if (queue.isEmpty()) { <BUGE> try { storeTripMessage(queue.take()); } catch (java.lang.InterruptedException e) { android.util.Log.e(AppLog.LOG_TAG_DB, "Exception while reading msg from queue!", e); } }else { try { cz.meteocar.unit.engine.storage.DatabaseService.sleep(200); } catch (java.lang.Exception e) { android.util.Log.e(AppLog.LOG_TAG_DB, "Error when sleep.", e); } } } android.util.Log.d(AppLog.LOG_TAG_DB, "Database Service exited LOOP"); } 
public void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch batch) { <BUGS> batch.draw(cannonTextureRegion, (((xpos) - ((width) / 2.0F)) - 3), (((ypos) - ((height) / 2.0F)) + 23), ((width) / 2.0F), ((height) / 2.0F), width, height, (5 / 2), 1, angle, true); <BUGE> } 
public static void main(java.lang.String... args) { org.apache.tamaya.builder.ConfigurationBuilder builder = new org.apache.tamaya.builder.ConfigurationBuilder(); org.apache.tamaya.Configuration config = builder.addPropertySources(org.apache.tamaya.resource.ConfigResources.getResourceResolver().getResources("META-INF/boot/*.ini")).addPropertySources(org.apache.tamaya.resource.ConfigResources.getResourceResolver().getResources("META-INF/config/*.properties")).enableProvidedPropertyConverters().enabledProvidedPropertyFilters().build(); <BUGS> <BUGE> } 
@java.lang.Override public void run() { <BUGS> if (com.studygoal.jisc.Managers.NetworkManager.getInstance().updateProfileImage(imagePath)) { <BUGE> this.runOnUiThread(new java.lang.Runnable() { @java.lang.Override public void run() { settings_fragment.refresh_image(); hideProgressBar(); } }); } this.runOnUiThread(new java.lang.Runnable() { @java.lang.Override public void run() { hideProgressBar(); } }); } 
public void removeProgress() { <BUGS> if ((getItem(((getItemCount()) - 1))) == null) { this.listMovies.remove(((getItemCount()) - 1)); notifyItemRemoved(getItemCount()); <BUGE> } } 
<BUGS> public calendar.EventProvider newEventProvider(java.lang.String group_name, java.lang.String group_id, db.Site site, db.DBConnection db) { <BUGE> calendar.EventProvider event_provider = new calendar.EventProvider(group_name).setAccessPolicy(new mosaic.GroupAccessPolicy(group_id, true, true, true, false)).setEventsAreOwned(true).setEventsCanRepeat(true).setEventsHaveColor(true).setEventsHaveEndTime(true).setEventsHaveStartTime(true).setEventsTable((("group_" + group_id) + "_events")).setSupportReminders(site); site.addModule(event_provider, db); return event_provider; } 
@java.lang.Override public void exitReturn_stmt(MiniCParser.Return_stmtContext ctx) { java.lang.String s1; if (hasReturnExpr(ctx)) { s1 = newTexts.get(ctx.expr()); <BUGS> newTexts.put(ctx, (((((blank) + s1) + "\n") + (blank)) + "retv")); <BUGE> }else { newTexts.put(ctx, ((blank) + "ret")); } } 
private static void setTableFeatureProperty(org.opendaylight.yang.gen.v1.urn.opendaylight.table.types.rev131026.table.feature.prop.type.table.feature.prop.type.Wildcards propType, org.opendaylight.yang.gen.v1.urn.opendaylight.openflow.protocol.rev130731.table.features.properties.grouping.TableFeaturePropertiesBuilder propBuilder) { java.util.List<org.opendaylight.openflowplugin.openflow.md.core.sal.convertor.SetFieldMatch> setFieldMatch = null; <BUGS> org.opendaylight.yang.gen.v1.urn.opendaylight.table.types.rev131026.table.feature.prop.type.table.feature.prop.type.wildcards.WildcardSetfield wildcardSetField = ((org.opendaylight.yang.gen.v1.urn.opendaylight.table.types.rev131026.table.feature.prop.type.table.feature.prop.type.Wildcards) (propType)).getWildcardSetfield(); <BUGE> if (null != wildcardSetField) { setFieldMatch = wildcardSetField.getSetFieldMatch(); } org.opendaylight.openflowplugin.openflow.md.core.sal.convertor.TableFeaturesConvertor.setSetFieldTableFeatureProperty(propBuilder, TableFeaturesPropType.OFPTFPTWILDCARDS, (setFieldMatch == null ? new java.util.ArrayList<org.opendaylight.openflowplugin.openflow.md.core.sal.convertor.SetFieldMatch>() : setFieldMatch)); } 
private void initComponent() { chatList = new java.util.ArrayList<com.app.lifeshare.Model.GetChatListResponse>(); SetToolbarTitle("CHAT"); showBackArrow(true); getBundleData(); imgNotification.setImageResource(R.drawable.info); imgNotification.setOnClickListener(clickListener); lvChat = ((android.widget.ListView) (findViewById(R.id.lvChatDetails))); btnSendMessage = ((android.widget.Button) (findViewById(R.id.btnSendMessage))); edEnterMessage = ((android.widget.EditText) (findViewById(R.id.edEnterChat))); <BUGS> setAdapter(); <BUGE> } 
private void showExercises() { <BUGS> if ((allWorkoutDates) != null) { allWorkoutDates.close(); } if ((allEercises) != null) { allEercises.close(); } <BUGE> allEercises = adapter.getAlExerciseOn(selected_date_long); startManagingCursor(allEercises); setListAdapter(new android.widget.SimpleCursorAdapter(this, R.layout.workout_summary_exercises_list_item, allEercises, new java.lang.String[]{ com.alexrothberg.afitness.DbAdapter.Exercises.KEY_NAME , "activity_count" }, new int[]{ R.id.workout_summary_exercises_name_txt , R.id.workout_summary_exercises_activities_txt })); } 
public boolean touched(testagent.Agent agent) { if (pick) return false;  double distance = java.lang.Math.sqrt(((java.lang.Math.pow(((agent.x) - (x)), 2)) + (java.lang.Math.pow(((agent.y) - (y)), 2)))); <BUGS> return distance <= ((size) / (agentIsSized ? 2 : 1)); <BUGE> } 
void setActionNameBox(int itemType) { if ((_selectionMode) != (SelectionMode.USECOMBO)) { return ; } _comboNameBox = createNameBox(itemType); if ((_comboNameBox) == null) { return ; } <BUGS> java.lang.String newName = _curAction.getDeviceName(); _comboNameBox.setSelectedBeanByName(newName); <BUGE> _comboNameBox.addItemListener(new jmri.jmrit.conditional.NameBoxListener(_actionNameField)); <BUGS> <BUGE> _namePanel.setVisible(false); _actionComboNamePanel.setVisible(true); } 
<BUGS> private boolean getKeepEditorOnClickDisabledRows(org.json.JSONObject gridElem) { <BUGE> java.lang.String keepEditor = gridElem.optString("keepEditorOnClickDisabledRows"); if ((keepEditor != null) && ((keepEditor.trim().length()) > 0)) { return java.lang.Boolean.parseBoolean(keepEditor); } return false; } 
private java.util.List<edu.clemson.resolve.AnnotatedModule> parseAndReturnRootModules() { java.util.List<edu.clemson.resolve.AnnotatedModule> modules = new java.util.ArrayList<>(); for (java.lang.String e : targetFiles) { edu.clemson.resolve.AnnotatedModule m = parseModule(e); if (m != null) { <BUGS> modules.add(parseModule(e)); <BUGE> } } return modules; } 
@java.lang.Override public boolean onCreateOptionsMenu(android.view.Menu menu) { getMenuInflater().inflate(R.menu.menu_gastro_activity, menu); android.view.MenuItem item = menu.findItem(R.id.action_add_favorite); boolean isFavorite = org.berlin_vegan.bvapp.GastroLocations.containsFavorite(mGastroLocation.getId()); if (isFavorite) { <BUGS> item.setIcon(getResources().getDrawable(R.mipmap.ic_star_white_24dp, null)); <BUGE> }else { <BUGS> item.setIcon(getResources().getDrawable(R.mipmap.ic_star_outline_white_24dp, null)); <BUGE> } return true; } 
@java.lang.Override public java.util.List<de.dhbw.persistence.Match> getMatches() { java.util.List<de.dhbw.persistence.Match> matches = new java.util.ArrayList<>(); <BUGS> <BUGE> for (java.lang.String matchId : this.matches.split(";")) { long id = java.lang.Long.parseLong(matchId); de.dhbw.persistence.Match match = DependecyKnowItAll.matchRepository.getMatchById(id); matches.add(match); } return matches; } 
private void selectItem(int position) { if (position == (OPTION_MENU_ADD_PERSON)) { android.content.Intent intent = new android.content.Intent(this, com.six.maitime.ui.flipper.ViewFlipperMainActivity.class); startActivity(intent); return ; }else { replaceFragment(new com.six.maitime.ui.PersonListFragment()); drawerList.setItemChecked(position, true); <BUGS> setTitle(optionsMenuTitles[position]); <BUGE> mDrawerLayout.closeDrawer(drawerList); } } 
public java.lang.Long getSupportId(java.lang.String literal, java.lang.Long citationId) throws org.ndexbio.model.exceptions.NdexException { org.ndexbio.common.models.object.network.RawSupport r = new org.ndexbio.common.models.object.network.RawSupport(literal, (citationId != null ? citationId.longValue() : -1)); java.lang.Long supportId = this.rawSupportMap.get(r); if (supportId != null) return supportId;  <BUGS> supportId = createSupport(literal, citationId); <BUGE> this.rawSupportMap.put(r, supportId); return supportId; } 
@java.lang.Override public void onMessageReceived(java.lang.String endpointId, byte[] payload, boolean isReliable) { android.util.Log.d(com.team2.android.proctor.ui.AttendanceFragment.TAG, ("onMessageReceived:" + (new java.lang.String(payload)))); java.lang.String message = new java.lang.String(payload); <BUGS> com.team2.android.proctor.model.input.Attendance attendance = new com.team2.android.proctor.model.input.Attendance(); <BUGE> attendance.setUserId(java.lang.Long.parseLong(message.split(":")[0])); attendance.setCourseId(java.lang.Integer.parseInt(message.split(":")[1])); new com.team2.android.proctor.ui.AttendanceFragment.TakeAttendanceTask().execute(attendance); } 
@java.lang.Override public void expandAddScreen() { mBottomSheetBehavior.setState(BottomSheetBehavior.STATE_EXPANDED); mBottomSheetTextView.setVisibility(View.INVISIBLE); switch (mBottomSheetNavigationView.getSelectedItemId()) { case R.id.main_bottom_sheet_navigation_calendar : me.kholmukhamedov.organizer.ui.fragment.calendar.CalendarFragment calendarFragment = ((me.kholmukhamedov.organizer.ui.fragment.calendar.CalendarFragment) (mFragmentsMap.get(CalendarFragment.TAG))); <BUGS> calendarFragment.hideCalendarView(); <BUGE> break; } } 
<BUGS> public java.time.LocalDate parseStringToDate(java.lang.String inputDateStr, java.lang.String inputPattern, java.time.chrono.Chronology inputChronology) { <BUGE> if ((inputDateStr != null) && (!(inputDateStr.isEmpty()))) { java.util.Locale locale = java.util.Locale.getDefault(java.util.Locale.Category.FORMAT); java.time.format.DateTimeFormatter inputDateTimeFormatter = new java.time.format.DateTimeFormatterBuilder().parseLenient().appendPattern(inputPattern).toFormatter().withChronology(inputChronology).withDecimalStyle(java.time.format.DecimalStyle.of(locale)); return parseStringToDate(inputDateStr, inputDateTimeFormatter, inputChronology); } return null; } 
@java.lang.Override public void onNext(T t) { if ((t.contentLength()) == 0) { return ; } <BUGS> if (((httpCallback) != null) && ((httpCallback.getType()) != null)) { <BUGE> try { <BUGS> httpCallback.onResolve(new com.google.gson.Gson().fromJson(t.charStream(), httpCallback.getType())); <BUGE> } catch (java.lang.Exception e) { <BUGS> httpCallback.onFailure("", "data resolve error,please check the json response"); <BUGE> e.printStackTrace(); } } } 
@java.lang.Override public boolean equals(java.lang.Object object) { <BUGS> if (!(super.equals(object))) { return false; } if (!(object instanceof org.nlamah.QL.Model.Form.Abstract.FormQuestion)) { return false; } org.nlamah.QL.Model.Form.Abstract.FormQuestion value = ((org.nlamah.QL.Model.Form.Abstract.FormQuestion) (object)); <BUGE> if (compareOnlyQuestionText) { <BUGS> <BUGE> if (this.questionText.equals(value.questionText)) { return true; } <BUGS> <BUGE> } <BUGS> return true; <BUGE> } 
@java.lang.Override public java.lang.String toString() { <BUGS> return (((((((((((((("ContactData{" + "id=") + (id)) + ", lastname='") + (lastname)) + '\'') + ", firstname='") + (firstname)) + '\'') + ", homePhone='") + (homePhone)) + '\'') + ", mobilePhone='") + (mobilePhone)) + '\'') + '}'; <BUGE> } 
@java.lang.Override public boolean onOptionsItemSelected(android.view.MenuItem item) { <BUGS> super.onOptionsItemSelected(item); <BUGE> switch (item.getItemId()) { case R.id.sort_by : java.lang.String[] items = getResources().getStringArray(R.array.sort_by); com.psincraian.gameslibrary.SortByDialog dialog = new com.psincraian.gameslibrary.SortByDialog(getActivity(), items, this); dialog.onCreateDialog(null).show(); break; } <BUGS> return true; <BUGE> } 
@java.lang.Override public void onCheckedChanged(android.widget.CompoundButton buttonView, boolean isChecked) { <BUGS> if ((currPitInfoIndex) >= 0) { <BUGE> try { boolean tempValue = pit_auto_high_goal_Button.isChecked(); if ((currTeam.getBoolean(DBContract.TablePitInfo.COLNAME_PIT_AUTO_HIGH_GOAL)) != tempValue) { currTeam.put(DBContract.TablePitInfo.COLNAME_PIT_AUTO_HIGH_GOAL, tempValue); if (!(fillingPitInfo)) { dbHelper.updatePitInfo(currTeam); } } } catch (org.json.JSONException e) { } } } 
@java.lang.Override public java.lang.Iterable<org.jenkinsci.plugins.uicontrol.TreeNode> children() { java.io.File[] children = file.listFiles(); java.util.List<org.jenkinsci.plugins.uicontrol.TreeNode> r = new java.util.ArrayList<org.jenkinsci.plugins.uicontrol.TreeNode>(); <BUGS> for (java.io.File c : children) { r.add(new FileTreeNode(c)); <BUGE> } return r; } 
public void performApply(org.eclipse.debug.core.ILaunchConfigurationWorkingCopy configuration) { configuration.setAttribute(IUML2JavaContants.ATTR_TARGET_FOLDER_PATH, targetText.getText()); java.util.Set<java.lang.String> umlModelPaths = new java.util.LinkedHashSet<java.lang.String>(); org.eclipse.swt.widgets.TableItem[] items = modelTable.getItems(); for (org.eclipse.swt.widgets.TableItem tableItem : items) { umlModelPaths.add(tableItem.getText()); } configuration.setAttribute(IUML2JavaContants.ATTR_MODEL_PATHS, umlModelPaths); <BUGS> <BUGE> } 
protected void showLocation(android.location.Location mCurrentLocation) { if (mCurrentLocation != null) { <BUGS> mMap.clear(); <BUGE> getNeabyMarkers(mCurrentLocation); mMap.moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom(new com.google.android.gms.maps.model.LatLng(mCurrentLocation.getLatitude(), mCurrentLocation.getLongitude()), com.dev.cromer.jason.whatsappening.Activities.MapActivity.CAMERA_ZOOM)); } com.google.android.gms.maps.model.LatLng center = mMap.getCameraPosition().target; mLastMarker = mMap.addMarker(new com.google.android.gms.maps.model.MarkerOptions().position(new com.google.android.gms.maps.model.LatLng(center.latitude, center.longitude)).draggable(true)); } 
public boolean removeConnection(com.flashvisions.server.red5.jsbridge.listeners.JsBridgeConnection connection) { boolean removed = false; java.util.Iterator<com.flashvisions.server.red5.jsbridge.listeners.JsBridgeConnection> iterator = connections.iterator(); while (iterator.hasNext()) { com.flashvisions.server.red5.jsbridge.listeners.JsBridgeConnection conn = iterator.next(); if (conn != null) { <BUGS> iterator.remove(); <BUGE> removed = true; break; } } return removed; } 
public static boolean canGetValue(java.lang.String line) { <BUGS> if (com.blazingkin.interpreter.variables.Variable.isInteger(line)) { return true; } if (com.blazingkin.interpreter.variables.Variable.isDouble(line)) { return true; } if (com.blazingkin.interpreter.variables.Variable.isBool(line)) { return true; } if (com.blazingkin.interpreter.variables.Variable.isString(line)) { return true; } return false; <BUGE> } 
private void handleSignInWithFacebook(io.flutter.plugin.common.MethodCall call, final io.flutter.plugin.common.MethodChannel.Result result) { @java.lang.SuppressWarnings(value = "unchecked") java.util.Map<java.lang.String, java.lang.String> arguments = ((java.util.Map<java.lang.String, java.lang.String>) (call.arguments)); <BUGS> java.lang.String tokenString = arguments.get("accessToken"); <BUGE> com.google.firebase.auth.AuthCredential credential = io.flutter.firebaseauth.FacebookAuthProvider.getCredential(accessToken); firebaseAuth.signInWithCredential(credential).addOnCompleteListener(activity, new io.flutter.firebaseauth.FirebaseAuthPlugin.SignInCompleteListener(result)); } 
public void putByteArray(final byte[] data) { int l = data.length; putInt(l); ensure(((position) + l)); com.heerbann.unsafe.UnsafeBuffer.unsafe.copyMemory(com.heerbann.unsafe.UnsafeBuffer.toAddress(data), ((pointer) + (position)), l); position += l; <BUGS> <BUGE> } 
private java.lang.String choicePick(graduationProject.Domain.Request request, int size, int serviceId, java.lang.String mode) { <BUGS> java.util.List<java.lang.Integer> targetList = generateRanNumList(size, ((int) (choiceRate))); <BUGE> java.lang.String target = "pod1"; if (mode.equals("choice1")) target = getBetterPod1(request, targetList, serviceId);  return target; } 
<BUGS> public void placeFoodBlobs() { <BUGE> int counter = 11; while (counter != 0) { java.awt.Point[] foodBlob = makeFoodBlob(); if (foodBlob != null) { for (java.awt.Point p : foodBlob) { map.getCell(p).setHasFood(5); } counter--; } } } 
@org.junit.Test public final void testGetGrid() { <BUGS> <BUGE> gamelogic.Board board = new gamelogic.Board(); <BUGS> gamelogic.Square[][] grid = new gamelogic.Square[20][20]; <BUGE> board.setGrid(grid); org.junit.Assert.assertTrue((grid == (board.getGrid()))); } 
public static void shareFileIntent(android.app.Activity activity, java.lang.String data, java.lang.String title, java.io.File attached) { <BUGS> ShareCompat.IntentBuilder.from(activity).setType("text/plain").addEmailTo("").setSubject(title).setStream(android.support.v4.content.FileProvider.getUriForFile(activity, ((org.eyeseetea.malariacare.BuildConfig.APPLICATION_ID) + ".data.database.utils.ExportData"), attached)).setText(data).setChooserTitle("test").startChooser(); <BUGE> } 
<BUGS> protected java.lang.Boolean execute(java.lang.Object... args) { <BUGE> try { client.prepareDelete(indexName, ".percolator", queryName).setRefreshPolicy(WriteRequest.RefreshPolicy.IMMEDIATE).execute().actionGet(); return true; } catch (java.lang.Exception e) { <BUGS> org.apache.unomi.persistence.elasticsearch.ElasticSearchPersistenceServiceImpl.logger.error("Cannot delete query", e); <BUGE> } <BUGS> return false; <BUGE> } 
private org.spongepowered.asm.lib.Handle transformHandle(org.spongepowered.asm.mixin.transformer.MethodNode method, java.util.Iterator<org.spongepowered.asm.mixin.transformer.AbstractInsnNode> iter, org.spongepowered.asm.lib.Handle handle) { <BUGS> this.targetClass.version = org.spongepowered.asm.util.Constants.JAVA8_CLASSFILE_VERSION; <BUGE> org.spongepowered.asm.mixin.transformer.MemberRef.HandleRef memberRef = new org.spongepowered.asm.mixin.transformer.MemberRef.HandleRef(handle); if (memberRef.isField()) { this.transformFieldRef(method, iter, memberRef); }else { this.transformMethodRef(method, iter, memberRef); } return memberRef.getMethodHandle(); } 
@entity.Transient public java.util.Map getArgMap() { <BUGS> <BUGE> com.fasterxml.jackson.core.JsonFactory factory = new com.fasterxml.jackson.core.JsonFactory(); com.fasterxml.jackson.databind.ObjectMapper mapper = new com.fasterxml.jackson.databind.ObjectMapper(factory); com.fasterxml.jackson.core.type.TypeReference<java.util.HashMap<java.lang.String, java.lang.Object>> typeRef = new com.fasterxml.jackson.core.type.TypeReference<java.util.HashMap<java.lang.String, java.lang.Object>>() {    }; try { return mapper.readValue(getArg(), typeRef); } catch (java.lang.Exception e) { e.printStackTrace(); } return null; } 
@org.junit.Test public void foo() { net.praqma.codeacademy.gildedrose.Item[] items = new net.praqma.codeacademy.gildedrose.Item[]{ new net.praqma.codeacademy.gildedrose.Item("foo", 0, 0) }; net.praqma.codeacademy.gildedrose.GildedRose app = new net.praqma.codeacademy.gildedrose.GildedRose(items); app.updateQuality(); <BUGS> assertEquals("fixme", app.items[0].name); <BUGE> } 
public boolean undo() { if (self.canUndo()) { self.getDrawingData().undo(); self.nativeClear(); self.nativeDrawData(); if ((self.getDelegate()) != null) { <BUGS> self.getDelegate().didChangeDrawing(self, self.canUndo(), self.canRedo()); <BUGE> } return true; } return false; } 
@java.lang.Override public void processFinish(java.lang.String output) { <BUGS> java.lang.System.out.println(output); <BUGE> if (output.equals("Success ")) { working.setTextColor(Color.GREEN); working.setText("Clocked in Succesfully"); sendNotification(); }else if (output.equals("Failure ")) { working.setTextColor(Color.RED); working.setText("You can't clock in again"); }  } 
public boolean convert() { java.lang.String[] otherArgs = new java.lang.String[]{ getAvroHDFSDest() , getParquetHDFSDest() }; boolean success = false; try { <BUGS> org.apache.hadoop.util.ToolRunner.run(new fr.finaxys.tutorials.utils.parquet.AvroParquetConverter(this.configuration), otherArgs); <BUGE> success = true; } catch (java.lang.Exception e) { fr.finaxys.tutorials.utils.parquet.AvroParquetConverter.LOGGER.log(java.util.logging.Level.SEVERE, "Can't run map reduce job", e); } return success; } 
@java.lang.Override public void run() { getPopupMenu().setVisible(false); <BUGS> <BUGE> net.sourceforge.processdash.team.group.UserFilter selectedItem = new net.sourceforge.processdash.team.group.ui.UserGroupSelector(javax.swing.SwingUtilities.getWindowAncestor(this), "Filter_Prompt", showIndividuals).getSelectedItem(); setSelectedItem(selectedItem); <BUGS> javax.swing.MenuSelectionManager.defaultManager().clearSelectedPath(); <BUGE> } 
public java.lang.String toString(android.content.Context context) { java.lang.String[] values = context.getResources().getStringArray(R.array.element_types_array); if ((value) == (com.freak.carnetdentretien.domain.bean.MaintenanceElement.Type.OTHER.value)) { return values[((values.length) - 1)]; }else { <BUGS> return values[value]; <BUGE> } } 
@org.junit.Test public void capabilitiesAreInitializesAndReturnCorrectly() throws org.dasein.cloud.CloudException, org.dasein.cloud.InternalException { org.dasein.cloud.azure.network.AzureLoadBalancerCapabilities capabilities = mockit.Deencapsulation.getField(lbSupport, "capabilities"); org.dasein.cloud.azure.tests.network.LoadBalancerCapabilities acutalCapabilities = lbSupport.getCapabilities(); org.dasein.cloud.CloudProvider provider = mockit.Deencapsulation.getField(capabilities, "provider"); <BUGS> org.junit.Assert.assertEquals("azure capabilities initialized with incorrect provider", azureMock, provider); org.junit.Assert.assertEquals("getCapabilities doesn't return current capabilities", capabilities, acutalCapabilities); <BUGE> } 
<BUGS> public void close() { <BUGE> android.content.Intent intent = new android.content.Intent("android.location.GPS_ENABLED_CHANGE"); intent.putExtra("enabled", false); sendBroadcast(intent); if ((service) != null) { unregisterReceiver(service); } if ((id) != (-1)) { workWithDataBase.onlineEnd(id); } finish(); startActivity(new android.content.Intent(this, com.example.hjk.testing.MainActivity.class)); } 
private io.reactivex.Observer<manoilo.catsapiandroidclient.model.Cat> getAllCatsObserver() { return new io.reactivex.Observer<manoilo.catsapiandroidclient.model.Cat>() { @java.lang.Override public void onSubscribe(io.reactivex.disposables.Disposable d) { }  @java.lang.Override public void onNext(manoilo.catsapiandroidclient.model.Cat cat) { <BUGS> getCatImgUrl(cat); cats.add(cat); <BUGE> }  @java.lang.Override public void onError(java.lang.Throwable e) { }  @java.lang.Override public void onComplete() { setCatRecyclerViewAdapter(); } }; } 
public java.lang.Double getPercentage() throws java.io.IOException, javax.xml.parsers.ParserConfigurationException { java.lang.String body = java.lang.String.valueOf(doInBackground()); java.util.regex.Pattern pattern = java.util.regex.Pattern.compile("\\d{2}.\\d{4}"); java.util.regex.Matcher matcher = pattern.matcher(body); <BUGS> return matcher.find() ? java.lang.Double.valueOf(matcher.group(0)) : 100.0; <BUGE> } 
private int compareBNode(final org.openrdf.model.BNode first, final java.lang.Object second) { if (second instanceof org.openrdf.model.BNode) { return first.getID().compareTo(((org.openrdf.model.BNode) (second)).getID()); }else if ((second instanceof org.openrdf.model.URI) || (second instanceof eu.fbk.knowledgestore.data.Record)) { return -1; }  <BUGS> return java.lang.Integer.MAX_VALUE; <BUGE> } 
private void addTitle(java.lang.String title) { android.view.View view = android.view.LayoutInflater.from(getActivity()).inflate(R.layout.item_title, null); android.widget.TextView textView = ((android.widget.TextView) (view.findViewById(R.id.title_text))); textView.setText(title); <BUGS> container.addView(view); <BUGE> } 
private void advancePlayer() { if ((game.currentplayer) == (game.player)) { game.currentplayer = game.opponent; <BUGS> handleAttack(game.opponent.choseRandomMove(game)); <BUGE> }else { game.currentplayer = game.player; menu.setVisible(true); infoText.setVisible(false); } } 
<BUGS> private java.util.List<input.ExternalEvent> readEvents(int nrof) { <BUGE> if (allEventsRead) { return new java.util.ArrayList<input.ExternalEvent>(0); } java.util.List<input.ExternalEvent> events = reader.readEvents(nrof); if ((nrof > 0) && ((events.size()) == 0)) { reader.close(); allEventsRead = true; } return events; } 
@java.lang.Override public int getUserAnswerIdByQuestionNumber(int number) { <BUGS> com.inquirer.models.Answer userAnswer = null; <BUGE> for (com.inquirer.models.Answer tmpAnswer : userAnswers) { if ((tmpAnswer.getQuestion()) == number) { userAnswer = tmpAnswer; } } if (userAnswer == null) { return 0; }else { return userAnswer.getId(); } } 
protected void processWindowEvent(java.awt.event.WindowEvent e) { if ((e.getID()) == (java.awt.event.WindowEvent.WINDOW_CLOSING)) { if (net.sf.memoranda.util.Configuration.get("ON_CLOSE").equals("exit")) doExit(); else <BUGS> doMinimize(); <BUGE>  }else if ((e.getID()) == (java.awt.event.WindowEvent.WINDOW_ICONIFIED)) { super.processWindowEvent(new java.awt.event.WindowEvent(this, java.awt.event.WindowEvent.WINDOW_ICONIFIED)); doMinimize(); }else super.processWindowEvent(e);   } 
@org.junit.Test public void test_findComponents() throws java.lang.Exception { <BUGS> java.io.File sourcePath = new java.io.File("structurizr-core/test/unit"); <BUGE> com.structurizr.componentfinder.ComponentFinder componentFinder = new com.structurizr.componentfinder.ComponentFinder(webApplication, "com.structurizr.componentfinder", new com.structurizr.componentfinder.JavadocComponentFinderStrategy(sourcePath.getCanonicalPath())); componentFinder.findComponents(); org.junit.Assert.assertEquals("A component that does something.", componentA.getDescription()); org.junit.Assert.assertEquals("A component that does something else.", componentB.getDescription()); org.junit.Assert.assertEquals("A component that does something else too.", componentC.getDescription()); } 
private void shiftCurrentPlayer() { currentPlayerPosition = ((currentPlayerPosition) + 1) % (activePlayers.size()); currentPlayer = activePlayers.get(currentPlayerPosition); <BUGS> notifyCurrentPlayerUpdated(currentPlayer); <BUGE> java.lang.System.out.println(("[TEST] Current Player: " + (currentPlayer.toString()))); } 
@java.lang.Override public boolean onOptionsItemSelected(android.view.MenuItem item) { if ((item.getItemId()) == (android.R.id.home)) { android.content.Intent homeIntent = new android.content.Intent(getApplicationContext(), com.anilicious.rigfinances.activities.MainActivity.class); homeIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP); startActivity(homeIntent); <BUGS> }else { android.content.Intent intent = new android.content.Intent(getApplicationContext(), com.anilicious.rigfinances.activities.SettingsActivity.class); startActivity(intent); <BUGE> } return super.onOptionsItemSelected(item); } 
public static void main(java.lang.String... args) throws java.lang.InterruptedException { net.hazmatrobotics.lightshow.coordinators.MainCoordinator.server = new net.hazmatrobotics.lightshow.ShowServer(80); <BUGS> net.hazmatrobotics.lightshow.coordinators.MainCoordinator.server.run(); <BUGE> java.lang.System.out.println("Version 2"); java.lang.System.out.println("Boot."); while (true) { java.lang.Thread.sleep(100); } } 
public com.eclipsesource.v8.V8Object executeObjectScript(final java.lang.String script, final java.lang.String scriptName, final int lineNumber) { checkThread(); <BUGS> java.lang.Object result = this.executeScript(script, null, 0); <BUGE> if (result instanceof com.eclipsesource.v8.V8Object) { return ((com.eclipsesource.v8.V8Object) (result)); } throw new com.eclipsesource.v8.V8ResultUndefined(); } 
@java.lang.Override public net.minecraftforge.fml.common.network.simpleimpl.IMessage onMessage(gr8pefish.ironbackpacks.network.client.ClientEquippedPackMessage message, net.minecraftforge.fml.common.network.simpleimpl.MessageContext ctx) { net.minecraft.client.Minecraft.getMinecraft().addScheduledTask(() -> { net.minecraft.entity.player.EntityPlayer player = IronBackpacks.proxy.getClientPlayer(); if (player != null) { gr8pefish.ironbackpacks.capabilities.player.PlayerWearingBackpackCapabilities.setEquippedBackpack(player, message.stack); <BUGS> gr8pefish.ironbackpacks.capabilities.player.PlayerDeathBackpackCapabilities.setEquippedBackpack(player, message.stack); <BUGE> } }); return null; } 
private static double operation(char op, double val1, double val2) { switch (op) { case '+' : return val2 + val1; case '-' : return val2 - val1; case '*' : return val2 * val1; case '/' : <BUGS> if (val2 == 0) <BUGE> throw new java.lang.UnsupportedOperationException("Cannot divide by zero");  return val2 / val1; case '^' : return java.lang.Math.pow(val2, val1); } return 0; } 
public com.chenyirun.theircraft.model.Block getBlock(com.chenyirun.theircraft.model.Point3Int pos) { com.chenyirun.theircraft.model.Chunk chunk = new com.chenyirun.theircraft.model.Chunk(pos); java.util.List<com.chenyirun.theircraft.model.Block> blocksInChunk = new java.util.ArrayList<>(); blocksInChunk.addAll(getChunkBlocks(chunk)); for (com.chenyirun.theircraft.model.Block block : blocksInChunk) { <BUGS> <BUGE> com.chenyirun.theircraft.model.Point3Int blockLocation = block.getLocation(); if (pos.equals(blockLocation)) { return block; } } return null; } 
private void sendResponse(javax.servlet.http.HttpServletRequest req, javax.servlet.http.HttpServletResponse res, java.util.List<orders.LineItem> items, java.math.BigDecimal totalPrice) { try { javax.servlet.http.HttpSession session = req.getSession(); <BUGS> session.setAttribute("items", item); <BUGE> session.setAttribute("total", totalPrice); res.sendRedirect("confirmOrder.jsp"); } catch (java.io.IOException e) { } } 
private void removeEntryMNS(java.lang.String mrn) throws java.io.IOException, java.net.UnknownHostException { java.net.Socket MNSSocket = new java.net.Socket("localhost", 1004); java.io.BufferedWriter outToMNS = new java.io.BufferedWriter(new java.io.OutputStreamWriter(MNSSocket.getOutputStream(), java.nio.charset.Charset.forName("UTF-8"))); if (kr.ac.kaist.mms_server.MMSConfiguration.LOGGING) java.lang.System.out.println(("Remove-Entry:" + mrn));  <BUGS> outToMNS.write((("Remove-Entry:" + ",") + mrn)); <BUGE> outToMNS.flush(); outToMNS.close(); MNSSocket.close(); return ; } 
public void createConnector(io.joynr.arbitration.ArbitrationResult result) { <BUGS> <BUGE> connectorStatusLock.lock(); try { <BUGS> connector = io.joynr.proxy.ConnectorFactory.create(dispatcher, messageSender, proxyParticipantId, result, qosSettings); <BUGE> connectorStatus = ConnectorStatus.ConnectorSuccesful; connectorSuccessfullyFinished.signal(); if ((connector) != null) { sendQueuedRequests(); sendQueuedSubscriptionRequests(); } <BUGS> } catch (io.joynr.exceptions.JoynrIllegalStateException e) { e.printStackTrace(); <BUGE> } finally { connectorStatusLock.unlock(); } } 
public boolean changeQuizName(java.lang.String newQuizName) { Category c = new Category(category); c.readFromFile(((c.getCategory()) + ".txt")); if (c.change(quizName, newQuizName)) { this.quizName = newQuizName; <BUGS> writeToFile(((quizName) + ".txt"), toString(), false); <BUGE> return true; } return false; } 
@java.lang.Override public cn.wisdom.lottery.service.remote.response.LotteryOpenData getCurrentPeriod(cn.wisdom.lottery.dao.constant.LotteryType lotteryType) { java.lang.String errMsg = java.text.MessageFormat.format("Failed to query {0} current period info.", lotteryType); cn.wisdom.lottery.dao.vo.PrizeLottery prizeLottery = daoHelper.queryForObject(cn.wisdom.lottery.dao.PrizeLotteryDaoImpl.GET_SSQ_CURRENT_PERIOD, cn.wisdom.lottery.dao.PrizeLotteryDaoImpl.ssqPrizeInfoMapper, errMsg); if ((prizeLottery != null) && ((prizeLottery.getOpenTime()) != null)) { <BUGS> java.sql.Timestamp openTime = prizeLottery.getOpenTime(); unifyOpenTime(openTime); prizeLottery.setOpenTime(openTime); <BUGE> } return new cn.wisdom.lottery.service.remote.response.LotteryOpenData(prizeLottery); } 
@java.lang.Override protected void onSaveInstanceState(android.os.Bundle outState) { super.onSaveInstanceState(outState); <BUGS> if (ir.blog.microc.movie.Temp.DEBUG_MODE) android.widget.Toast.makeText(this, "onSaveInstanceState", Toast.LENGTH_SHORT).show();  <BUGE> android.support.v7.widget.LinearLayoutManager linearLayoutManager = ((android.support.v7.widget.LinearLayoutManager) (mRecyclerView.getLayoutManager())); int position = linearLayoutManager.findFirstVisibleItemPosition(); outState.putInt(ir.blog.microc.movie.activities.MainActivity.FIRST_VISIBLE_ITEM_KEY, position); outState.putParcelableArrayList(ir.blog.microc.movie.activities.MainActivity.MOVIE_DATA_PARCELABLE, ((java.util.ArrayList<? extends android.os.Parcelable>) (movieList))); } 
<BUGS> public synchronized void removePlayer(CardGame.User user) { int removeID = 999; <BUGE> int index = 0; for (CardGame.GameEngine.Player player : players) { if (player.getUsername().equals(user.getUserName())) { removeID = index; } index++; } <BUGS> players.remove(removeID); <BUGE> } 
<BUGS> @org.springframework.web.bind.annotation.RequestMapping(value = "/es/saveEsData") public org.datasays.wes.demo.model.ActionResult saveEsData(@org.springframework.web.bind.annotation.RequestBody org.datasays.wes.vo.EsItem doc) { <BUGE> org.datasays.wes.demo.model.ActionResult result = new org.datasays.wes.demo.model.ActionResult(); try { <BUGS> org.datasays.wes.vo.EsItem newdoc = esService.save(doc); <BUGE> result.ok(newdoc); } catch (java.lang.Exception e) { org.datasays.wes.demo.es.actions.EsController.LOG.error(e.getMessage(), e); result.error(e); } return result; } 
<BUGS> public static org.neo4j.kernel.impl.query.TransactionalContext createTransactionalContext(java.lang.String query) { <BUGE> org.neo4j.kernel.impl.coreapi.InternalTransaction transaction = org.neo4j.cypher.javacompat.internal.DocsExecutionEngineTest.database.beginTransaction(KernelTransaction.Type.implicit, SecurityContext.AUTH_DISABLED); org.neo4j.kernel.impl.query.clientconnection.BoltConnectionInfo boltConnection = new org.neo4j.kernel.impl.query.clientconnection.BoltConnectionInfo("username", "neo4j-java-bolt-driver", new java.net.InetSocketAddress("127.0.0.1", 56789), new java.net.InetSocketAddress("127.0.0.1", 7687)); return org.neo4j.cypher.javacompat.internal.DocsExecutionEngineTest.contextFactory.newContext(boltConnection, transaction, query, java.util.Collections.emptyMap()); } 
public static void cleanIndexDirectory(java.lang.String solrHome, java.lang.String coreName) throws java.io.IOException { <BUGS> java.io.File indexDir = java.nio.file.Paths.get(solrHome, coreName, "data", "index").toFile(); <BUGE> try { if (indexDir.exists()) { org.apache.commons.io.FileUtils.cleanDirectory(indexDir); } } catch (java.io.IOException e) { uk.ac.shef.dcs.jate.app.BaseEmbeddedSolrTest.LOG.error("Failed to clean index directory! Please do it manually!"); throw e; } } 
private void loadMatrixClient() { <BUGS> java.lang.System.out.println("=============1"); <BUGE> util.PropertiesUtil parser = util.PropertiesUtil.getInstance(); <BUGS> java.lang.System.out.println("=============2"); <BUGE> java.lang.String serverUrl = parser.getValue("serverUrl"); java.lang.String appkey = parser.getValue("appkey"); java.lang.String appSecret = parser.getValue("appSecret"); java.lang.String randomNum = parser.getValue("randomNum"); securityClient = new com.taobao.api.security.SecurityClient(new com.taobao.api.DefaultTaobaoClient(serverUrl, appkey, appSecret), randomNum); } 
protected void closeFileObject(com.shesse.h2ha.FilePathHa filePath, long lastModified) throws java.io.IOException { <BUGS> java.nio.channels.FileChannel fc = openFiles.remove(filePath); if (fc != null) { fc.close(); <BUGE> } if (filePath.exists()) { filePath.lastModified(lastModified); } } 
@java.lang.Override public void updateQuality(mvc.models.Item item) { <BUGS> if ((item.getSellIn()) < 0) <BUGE> item.setQuality(((item.getQuality()) - (mvc.models.OrganicBananas.QUALITY_STEP))); else item.setQuality(((item.getQuality()) - ((mvc.models.OrganicBananas.QUALITY_STEP) * 2)));  } 
private todo.javier.mera.todolist.model.Task createTask(java.lang.String todoListId) { <BUGS> return new todo.javier.mera.todolist.model.Task(java.util.UUID.randomUUID().toString(), todoListId, "My Task", todo.javier.mera.todolist.model.TaskStatus.Created, new java.util.Date().getTime(), new java.util.Date().getTime(), new java.util.Date().getTime(), todo.javier.mera.todolist.model.Priority.None, todo.javier.mera.todolist.model.Reminder.ON); <BUGE> } 
private org.eclipse.smarthome.automation.core.internal.RuntimeRule getRuleByTemplate(org.eclipse.smarthome.automation.core.internal.RuntimeRule rule) { java.lang.String ruleTemplateUID = rule.getTemplateUID(); org.eclipse.smarthome.automation.template.RuleTemplate template = ((org.eclipse.smarthome.automation.template.RuleTemplate) (tManager.get(ruleTemplateUID))); if (template == null) { logger.debug((("Rule template '" + ruleTemplateUID) + "' does not exist.")); return null; }else { <BUGS> org.eclipse.smarthome.automation.core.internal.RuntimeRule r1 = new org.eclipse.smarthome.automation.core.internal.RuntimeRule(rule.getUID(), template, rule.getConfiguration()); <BUGE> return r1; } } 
@java.lang.Override public void onClick(android.view.View v) { <BUGS> initMessageHandler(); <BUGE> android.support.v4.app.FragmentTransaction ft = mFragmentManager.beginTransaction(); ft.setCustomAnimations(android.R.anim.fade_in, android.R.anim.fade_out); ft.replace(R.id.frame_container, new babyfon.view.fragment.BabyMonitorFragment(mContext), null).addToBackStack(null).commit(); } 
private boolean isPolicyCombinationValid(java.lang.String... policyNames) { <BUGS> boolean isValid = true; <BUGE> java.lang.String firstPolicyName = policyNames[0]; for (java.lang.String policyName : policyNames) { if (!(policyName.equals(firstPolicyName))) { <BUGS> <BUGE> break; } <BUGS> isValid = false; <BUGE> } return isValid; } 
nLista() { kassa.Kvitto k = skapaTomtK(); java.util.ArrayList<kassa.Vara> varuSamling = new java.util.ArrayList<kassa.Vara>(); for (int i = 0; i < 6; i++) { varuSamling.add(skapaTomV()); } k.l(varuSamling); <BUGS> assert k.getTotalM = (ngdVaror()) == 6; <BUGE> java.util.Set<kassa.Vara> varuSet = new java.util.HashSet<kassa.Vara>(varuSamling); assertEquals(k.getVaruSet(), varuSet); } 
public static void update() { <BUGS> synchronized(haven.GLState.Slot.class) { if (!(haven.GLState.Slot.dirty)) return ;  haven.GLState.Slot.makedeps(haven.GLState.Slot.all); haven.GLState.deplist = new haven.GLState.Slot<?>[haven.GLState.Slot.all.size()]; for (haven.GLState.Slot s : haven.GLState.Slot.all) haven.GLState.deplist[s.depid] = s;  haven.GLState.Slot.dirty = false; <BUGE> } } 
public static java.lang.String encodePath(java.lang.String path) { if ((path == null) || ((path.length()) == 0)) return path;  <BUGS> java.lang.StringBuilder buf = org.eclipse.jetty.util.URIUtil.encodePath(null, path); <BUGE> return buf == null ? path : buf.toString(); } 
@java.lang.Override public org.bds.lang.Type returnType(org.bds.scope.Scope scope) { if ((returnType) != null) return returnType;  expr.returnType(scope); if (expr.canCastInt()) returnType = Type.INT; else if (expr.canCastReal()) returnType = Type.REAL; else <BUGS> throw new java.lang.RuntimeException("Cannot cast to 'int' or 'real'. This should never happen!"); <BUGE>   return returnType; } 
pl.karol202.evolution.utils.Vector2 getVector(java.lang.String key) { org.w3c.dom.Element vectorElement = getVectorElementFromListByName(key); if (vectorElement == null) <BUGS> throw new pl.karol202.evolution.utils.SimulationParseException(("Vector element not found: " + key)); <BUGE>  <BUGS> return new pl.karol202.evolution.utils.Vector2(java.lang.Float.parseFloat(element.getAttribute("x")), java.lang.Float.parseFloat(element.getAttribute("y"))); <BUGE> } 
public void emit(T record) throws java.io.IOException, java.lang.InterruptedException { for (int targetChannel : channelSelector.selectChannels(record, numChannels)) { <BUGS> if ((random.nextInt(100)) > (targetPartition.getChannelNonDropProbability(targetChannel))) { <BUGE> sendToTarget(record, targetChannel); } } } 
@org.junit.Test public void testFind() { <BUGS> org.junit.Assert.assertEquals(null, doubleLinkedList.find(1)); <BUGE> doubleLinkedList.insertHead(1); doubleLinkedList.insertTail(3); doubleLinkedList.insertHead(2); <BUGS> org.junit.Assert.assertEquals(3, doubleLinkedList.getSize()); org.junit.Assert.assertEquals(1, doubleLinkedList.find(1).getId()); <BUGE> } 
@java.lang.Override public aljebra.data.sparse.SparseVector scale(double factor) { if (factor == 0.0) { return new aljebra.data.sparse.SparseVector(size); } aljebra.data.sparse.SparseVector result = new aljebra.data.sparse.SparseVector(size); for (int i : ids) { <BUGS> result.set(i, ((data[i]) * factor)); <BUGE> } return result; } 
public static double sumSigma(int i, double[] p, double[] q, double[] b) { double res = 0; for (int l = 0; l < (p.length); l++) { <BUGS> double power = (p[i]) * (q[l]); <BUGE> res += java.lang.Math.exp(power); } return res; } 
private org.programmatori.domotica.own.plugin.system.Value getModel() { java.lang.String model = null; try { model = org.programmatori.domotica.own.sdk.config.Config.getInstance().getNode("system.model"); } catch (java.lang.Exception e) { } if (model == null) { model = "99"; } <BUGS> org.programmatori.domotica.own.plugin.system.Value v = new org.programmatori.domotica.own.plugin.system.Value(model); return v; <BUGE> } 
public static boolean allNumbersValid(java.util.Vector<?> textFields) { for (java.lang.Object text : textFields) { java.lang.String string = ((java.awt.TextField) (text)).getText(); if ((string.length()) == 0) return false; <BUGS>  if ((string.equals("∞")) || (string.equals("-∞"))) continue; <BUGE>  try { java.lang.Double.parseDouble(string); } catch (java.lang.NumberFormatException e) { return false; } } return true; } 
protected void check() { if (host.getAutoDeploy()) { org.apache.catalina.startup.HostConfig.DeployedApplication[] apps = deployed.values().toArray(new org.apache.catalina.startup.HostConfig.DeployedApplication[0]); for (int i = 0; i < (apps.length); i++) { if (!(isServiced(apps[i].name))) <BUGS> checkResources(apps[i]); <BUGE>  } if (host.getUndeployOldVersions()) { checkUndeploy(); } deployApps(); } } 
@java.lang.Override protected java.lang.Void doInBackground(java.lang.Void... params) { if (language.equalsIgnoreCase("japanese")) japExecute(); else if (language.equalsIgnoreCase("mandarin")) { <BUGS> if (addedDict) chineseExecute(); else { addChineseDictionary(); chineseExecute(); } <BUGE> }else if (language.equalsIgnoreCase("korean")) try { koreanExecute(); } catch (java.lang.Exception e) { java.lang.System.out.println(("Error " + e)); }    return null; } 
public static void clearInitStack() { final java.lang.ThreadLocal<java.util.Deque<com.tinkerpop.blueprints.impls.orient.OrientBaseGraph>> is = com.tinkerpop.blueprints.impls.orient.OrientBaseGraph.initializationStack; if (is != null) is.get().clear();  final java.lang.ThreadLocal<com.tinkerpop.blueprints.impls.orient.OrientBaseGraph> ag = com.tinkerpop.blueprints.impls.orient.OrientBaseGraph.activeGraph; if (ag != null) <BUGS> ag.set(null);  final com.orientechnologies.orient.core.db.ODatabaseRecordThreadLocal dbtl = com.orientechnologies.orient.core.db.ODatabaseRecordThreadLocal.INSTANCE; if (dbtl != null) dbtl.set(null); <BUGE>  } 
public void kleinesUpdate() { android.content.Intent intent = new android.content.Intent(getApplicationContext(), com.example.hvs.UpdateActivity.class); intent.putExtra("liga", ligaNr); intent.putExtra("update", 1); intent.putExtra("liganame", this.getTitle()); <BUGS> <BUGE> startActivity(intent); <BUGS> this.finish(); <BUGE> } 
@org.junit.Before public void beforeEachTest() throws java.lang.Exception { <BUGS> initializeInMemoryDatabase(); <BUGE> executeDataSet("org/openmrs/module/idgen/include/TestData.xml"); <BUGS> authenticate(); <BUGE> iss = new org.openmrs.module.idgen.service.IdentifierSourceServiceTest.BaseIdentifierSourceServiceStub(); iss.setDao(dao); org.openmrs.module.idgen.processor.SequentialIdentifierGeneratorProcessor processor = new org.openmrs.module.idgen.processor.SequentialIdentifierGeneratorProcessor(); processor.setIdentifierSourceService(iss); java.util.Map<java.lang.Class<? extends org.openmrs.module.idgen.IdentifierSource>, org.openmrs.module.idgen.processor.IdentifierSourceProcessor> processors = new java.util.HashMap<java.lang.Class<? extends org.openmrs.module.idgen.IdentifierSource>, org.openmrs.module.idgen.processor.IdentifierSourceProcessor>(); processors.put(org.openmrs.module.idgen.SequentialIdentifierGenerator.class, processor); iss.setProcessors(processors); } 
<BUGS> public static java.lang.String getStringResponse(java.io.InputStream is) { <BUGE> java.io.BufferedReader reader = new java.io.BufferedReader(new java.io.InputStreamReader(is)); java.lang.StringBuilder sb = new java.lang.StringBuilder(); java.lang.String line = null; try { while ((line = reader.readLine()) != null) { sb.append((line + "")); } } catch (java.io.IOException e) { e.printStackTrace(); } return sb.toString(); } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); toolbar = ((android.support.v7.widget.Toolbar) (findViewById(R.id.app_bar))); setSupportActionBar(toolbar); getSupportActionBar().setDisplayHomeAsUpEnabled(true); <BUGS> initRecyclerView(); <BUGE> } 
private static void closeConnectionBetween(com.hazelcast.core.HazelcastInstance h1, com.hazelcast.core.HazelcastInstance h2) { if ((h1 == null) || (h2 == null)) { return ; } com.hazelcast.instance.Node n1 = com.hazelcast.examples.splitbrain.AbstractCacheSplitBrainSample.getNode(h1); com.hazelcast.instance.Node n2 = com.hazelcast.examples.splitbrain.AbstractCacheSplitBrainSample.getNode(h2); if ((n1 != null) && (n2 != null)) { <BUGS> n1.clusterService.removeAddress(n2.address); n2.clusterService.removeAddress(n1.address); <BUGE> } } 
@java.lang.Override public <T> T addFramedEdgeExplicit(final com.syncleus.ferma.VertexFrame source, final com.syncleus.ferma.VertexFrame destination, final java.lang.String label, final com.syncleus.ferma.ClassInitializer<T> initializer) { <BUGS> final T framedEdge = frameNewElementExplicit(source.getElement().addEdge(label, destination.getElement(), null), initializer); <BUGE> return framedEdge; } 
public void payForMeal(core.agent.Message message) { core.restaurant.agent.Customer customer = message.get(0); float amountPaid = message.get(1); float cost = 0; <BUGS> synchronized(m_checks) { for (core.restaurant.Check c : m_checks) { if ((c.getCustomer()) == customer) { c.setStatus(CheckStatusEnum.Received); c.setChange((amountPaid - cost)); } <BUGE> } } print(((customer.getName()) + " is paying for his/her meal.")); stateChanged(); } 
private java.util.Collection<java.lang.String> queryAllDomains() { com.dianping.cat.report.service.ModelRequest request = new com.dianping.cat.report.service.ModelRequest(com.dianping.cat.Constants.CAT, ModelPeriod.CURRENT.getStartTime()); if (m_service.isEligable(request)) { com.dianping.cat.report.service.ModelResponse<com.dianping.cat.consumer.dependency.model.entity.DependencyReport> response = m_service.invoke(request); com.dianping.cat.consumer.dependency.model.entity.DependencyReport report = response.getModel(); <BUGS> return report.getDomainNames(); <BUGE> } return new java.util.HashSet<java.lang.String>(); } 
public entities.obstacles.Entity createEntity(java.lang.String eName, org.lwjgl.util.vector.Vector3f position, float rotX, float rotY, float rotZ, float scale) { long before = java.lang.System.currentTimeMillis(); <BUGS> entities.obstacles.Entity e = new entities.obstacles.Entity(tModels.get(eName), 0, mData.get(eName), position, rotX, rotY, rotZ, scale); <BUGE> world.add(e); return e; } 
private synchronized boolean isLineAvaliable(int line) { org.zhgeaits.zgdanmaku.model.ZGDanmaku danmaku = mLinesAvaliable.get(line); if (danmaku == null) { return true; } if ((danmaku.getCurrentOffsetX()) > (danmaku.getDanmakuWidth())) { <BUGS> <BUGE> return true; } return false; } 
<BUGS> protected void initTableColumns(org.eclipse.jface.layout.TreeColumnLayout treeLayout, boolean keepColumnStatus) { <BUGE> if ((treeViewer) != null) { org.eclipse.swt.widgets.Tree tree = treeViewer.getTree(); if ((tree != null) && (!(tree.isDisposed()))) { <BUGS> initTableColumns(tree, treeLayout, keepColumnStatus); <BUGE> } } } 
private void askQuestions() { int idx = (firstaid_questions.size()) - (quesLen); if (idx < (firstaid_questions.size())) { app.speakOut(firstaid_questions.get(idx).getQues()); expect_binary = true; current_grammar = app.BINARY_RESPONSE; }else { <BUGS> app.speakOut("Sorry. This is beyond my scope."); <BUGE> conclude = true; } } 
@java.lang.Override void init(javax.servlet.http.HttpServletRequest request, javax.servlet.http.HttpServletResponse response) throws java.io.IOException, javax.servlet.ServletException { javax.servlet.RequestDispatcher dispatcher = null; java.util.List<fr.eni.expeditor.entity.Article> lstArticle = gestionArticleBean.rechercherTous(); request.setAttribute("lstArticle", lstArticle); <BUGS> fr.eni.expeditor.servlet.GestionArticleServlet.LOGGER.info("toto"); <BUGE> dispatcher = request.getRequestDispatcher("/WEB-INF/views/manager/gestionArticle.jsp"); dispatcher.forward(request, response); } 
<BUGS> @org.junit.Test <BUGE> public void testKeyByColumnIterator() { int count = 0; java.util.Iterator<java.lang.Integer> iterator = occurrenceService.getKeysByColumn(org.apache.hadoop.hbase.util.Bytes.toBytes(org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.DATASET_KEY.toString()), org.gbif.occurrence.persistence.hbase.Columns.column(GbifTerm.datasetKey)); while (iterator.hasNext()) { iterator.next(); count++; } <BUGS> org.junit.Assert.assertEquals(1, count); <BUGE> } 
void CurrentPosUpdate() { <BUGS> if (!(currentNode.nodeText.getText().equals("\n"))) { CurrentPosX = (currentNode.nodeText.getX()) + (java.lang.Math.round(currentNode.nodeText.getLayoutBounds().getWidth())); CurrentPosY = currentNode.nodeText.getY(); }else { <BUGE> CurrentPosX = sg.util.FastLinkedList.MARGIN; <BUGS> double deltaH = java.lang.Math.round(currentNode.pre.nodeText.getLayoutBounds().getHeight()); CurrentPosY += deltaH; } <BUGE> } 
@org.junit.Before public void setUp() { setUpMocks(); buySpecification = getOrderSpecification(testInstrument, OrderCommand.BUY, 0.25); buySpecification2 = getOrderSpecification(testInstrument, OrderCommand.BUY, 0.37); sellSpecification = getOrderSpecification(testInstrument, OrderCommand.SELL, 0.25); sellSpecification2 = getOrderSpecification(testInstrument, OrderCommand.SELL, 0.39); <BUGS> externalSpecification = getOrderSpecification(testInstrument2, OrderCommand.SELL, 0.775); <BUGE> buyOrder = com.jforex.programming.mock.IOrderBuilder.fromOrderSpecification(buySpecification); externalOrder = com.jforex.programming.mock.IOrderBuilder.fromOrderSpecification(externalSpecification); positionManager = new com.jforex.programming.position.JFPositionManager(orderUtilMock); } 
private double getPriorForStructure(int numParents) { double e = getStructurePrior(); int k = numParents; int vm = (data.length) - 1; <BUGS> return (java.lang.Math.log((e / vm))) + ((vm - k) * (java.lang.Math.log((1.0 - (e / vm))))); <BUGE> } 
protected java.lang.String parseNextLink(com.fasterxml.jackson.databind.JsonNode node) { <BUGS> com.fasterxml.jackson.databind.JsonNode atIotLinkPath = node.path(getNavigationLinkPath(org.n52.shared.sensorthings.decoder.AT_IOT_NEXT_LINK)); <BUGE> if (checkNode(atIotLinkPath)) { return atIotLinkPath.asText(); }else { <BUGS> com.fasterxml.jackson.databind.JsonNode linkPath = node.path(getNavigationLinkPath(org.n52.shared.sensorthings.decoder.NEXT_LINK)); <BUGE> if (checkNode(linkPath)) { return linkPath.asText(); } } return null; } 
@java.lang.Override public void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); trace.traceapp.StartDraw.appLocationManager = MainActivity.appLocationManager; <BUGS> setContentView(R.layout.activity_main); <BUGE> drawView = new trace.traceapp.DrawView(this); drawView.setBackgroundColor(Color.WHITE); setContentView(drawView); drawView.setWillNotDraw(false); arraySize = drawView.getLocArraySize(); } 
@javafx.fxml.FXML void rechercheSelonCriteres(javafx.event.ActionEvent event) { <BUGS> java.lang.System.out.println(motOuDefinietionRechercher.getText()); <BUGE> if (motOuDefinietionRechercher.getText().isEmpty()) { javafx.scene.control.Alert alert = new javafx.scene.control.Alert(javafx.scene.control.Alert.AlertType.WARNING); alert.setTitle("Avertissement"); alert.setHeaderText("Erreur"); alert.setContentText("Il n'y a aucun mot ou définition à recherche"); alert.show(); }else { recherche(false); } } 
protected static <T> T parse(java.io.Reader in, net.minidev.json.writer.JsonReaderI<T> mapper) { try { net.minidev.json.parser.JSONParser p = new net.minidev.json.parser.JSONParser(net.minidev.json.parser.JSONParser.DEFAULT_PERMISSIVE_MODE); return p.parse(in, mapper); } catch (java.lang.Exception e) { <BUGS> e.printStackTrace(); <BUGE> return null; } } 
void setTerms(java.util.List<java.lang.String> terms) { if (org.apache.commons.collections.CollectionUtils.isEmpty(terms)) return ;  java.lang.StringBuffer text = new java.lang.StringBuffer(); java.util.Iterator<java.lang.String> i = terms.iterator(); while (i.hasNext()) { text.append(i.next()); <BUGS> text.append(SearchUtil.SPACE_SEPARATOR); <BUGE> } fullTextArea.setText(text.toString()); } 
<BUGS> private void initSubviews() { <BUGE> setSupportActionBar(toolbar); getSupportActionBar().setDisplayHomeAsUpEnabled(true); <BUGS> android.support.v7.app.ActionBarDrawerToggle toggle = new android.support.v7.app.ActionBarDrawerToggle(this, drawerLayout, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close); <BUGE> drawerLayout.setDrawerListener(toggle); toggle.setDrawerIndicatorEnabled(true); toggle.syncState(); setDrawerPaneWidth(); } 
@java.lang.Override public java.util.Set<R> getAll() throws com.netflix.spinnaker.fiat.providers.ProviderException { try { return com.google.common.collect.ImmutableSet.copyOf(cache.get(com.netflix.spinnaker.fiat.providers.BaseProvider.CACHE_KEY, this::loadAll)); } catch (java.util.concurrent.ExecutionException | com.google.common.util.concurrent.UncheckedExecutionException e) { <BUGS> throw new com.netflix.spinnaker.fiat.providers.ProviderException(e.getCause()); <BUGE> } } 
<BUGS> private static int getValidLineNumber(int line, com.intellij.openapi.editor.Document document) { int lineCount = net.masterthought.dlanguage.highlighting.annotation.external.CompileCheck.getDocumentLineCount(document); <BUGE> line = line - 1; if (line <= 0) { line = 1; }else if (line >= lineCount) { line = lineCount - 1; }  return line; } 
@org.junit.Test public void testUserInitialization() { <BUGS> it.geosolutions.geostore.services.rest.model.UserList ul = geoStoreClient.getUsers(1, 100); <BUGE> org.junit.Assert.assertEquals(2, ul.getList().size()); for (it.geosolutions.geostore.services.rest.model.RESTUser u : ul.getList()) { org.junit.Assert.assertNull(u.getGroupsNames()); } } 
public void gameClick(android.view.View v) { <BUGS> if ((!(canClick)) && (((android.os.SystemClock.elapsedRealtime()) - (lastClickTime)) < 200)) <BUGE> return ;  canClick = false; lastClickTime = android.os.SystemClock.elapsedRealtime(); super.gameClick(v); this.playerHandle(v); } 
@java.lang.Override public void onClick(android.view.View view) { <BUGS> switch (view.getId()) { case R.id.tv_activity_album_info_artist_name : android.content.Intent intent = new android.content.Intent(this, com.zolotuhinartem.lastfminfo.activities.searched_artists.SearchedArtistsActivity.class); intent.putExtra(SearchedArtistsActivity.ARTIST_NAME, this.album.getArtist()); startActivity(intent); <BUGE> } } 
public void primaryTask() { <BUGS> before.addAction(com.badlogic.gdx.scenes.scene2d.actions.Actions.sequence(com.badlogic.gdx.scenes.scene2d.actions.Actions.alpha(0), com.badlogic.gdx.scenes.scene2d.actions.Actions.fadeOut(((this.duration) / 2)), com.badlogic.gdx.scenes.scene2d.actions.Actions.run(new java.lang.Runnable() { <BUGE> @java.lang.Override public void run() { secondaryTask(); } }))); } 
public void increaseValue() { java.lang.String oldValue = textBox.getValue(); if ((isChangeable()) && (isValidForType(oldValue))) { try { java.lang.String newValue = getIncreasedValue(oldValue); if (isSmallerThanMax(newValue)) { textBox.setValue(newValue); <BUGS> <BUGE> valueUpdateTimer.schedule(updateDelay); valueUpdateTimer.setValue(newValue); } } catch (java.lang.Exception e) { valueUpdateTimer.cancel(); com.google.gwt.core.client.GWT.log("Exception when increasing value", e); } } } 
<BUGS> private void openChat(android.view.View view) { <BUGE> to = chatButton.getText().toString(); android.content.Intent intent = new android.content.Intent(this, pl.edu.uksw.prir.messenger.Chat.class); intent.putExtra("from", from); intent.putExtra("id", id); intent.putExtra("to", to); startActivity(intent); } 
@java.lang.Override public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> handle(android.database.Cursor cs) { java.util.List<java.util.Map<java.lang.String, java.lang.Object>> rows = new java.util.ArrayList<java.util.Map<java.lang.String, java.lang.Object>>(); <BUGS> while (cs.isLast()) { <BUGE> rows.add(this.handleRow(cs)); } return rows; } 
private int setListBottom(java.util.List listToSetBottomOf, int listTopPos) { int listBottom = 0; if ((listToSetBottomOf.size()) > 0) { <BUGS> if ((listToSetBottomOf.size()) < 10) { <BUGE> listBottom = listToSetBottomOf.size(); }else { <BUGS> listBottom = listTopPos + 11; <BUGE> } } return listBottom; } 
private data_structures.Node findNode(int index) { <BUGS> if ((!(checkIndex(index))) || (isEmpty())) { return null; } <BUGE> if (index == ((size) - 1)) { return tail; } data_structures.Node node = head; for (int i = 0; i < index; i++) { node = node.getNext(); } return node; } 
@java.lang.Override public synchronized void close() throws com.actemium.basicTvx_sdk.restclient.RestException { com.actemium.basicTvx_sdk.GlobalObjectManager.LOGGER.info("fermeture du GOM"); com.actemium.basicTvx_sdk.GlobalObjectManager.isInit = false; if ((com.actemium.basicTvx_sdk.GlobalObjectManager.instance.persistanceManager) != null) <BUGS> ((com.actemium.basicTvx_sdk.PersistanceManagerRest) (com.actemium.basicTvx_sdk.GlobalObjectManager.instance.persistanceManager)).closeHttpClient(); <BUGE>  com.actemium.basicTvx_sdk.GlobalObjectManager.instance.idHelper = null; com.actemium.basicTvx_sdk.GlobalObjectManager.instance.factory = null; com.actemium.basicTvx_sdk.GlobalObjectManager.instance.persistanceManager = null; com.actemium.basicTvx_sdk.GlobalObjectManager.instance.gestionCache = null; com.actemium.basicTvx_sdk.GlobalObjectManager.instance.isCachePurgeAutomatiquementSiException = false; com.actemium.basicTvx_sdk.GlobalObjectManager.instance.nonRecuperableViaWebService.clear(); com.actemium.basicTvx_sdk.GlobalObjectManager.instance.lockFindOrCreate = null; } 
public void moveTailToBackOfHead() { if ((length) > 0) { com.mygdx.game.Cell tail = body.get(((length) - (length))); <BUGS> tail.setX(breadCrumbsList.get(((length) - 1)).getX()); tail.setY(breadCrumbsList.get(((length) - 1)).getY()); body.add(((length) - 1), tail); <BUGE> } } 
public java.lang.String inviteUserToBooking(java.lang.String username_to_invite, int booking_id) throws java.sql.SQLException { java.sql.PreparedStatement s1 = connection.prepareStatement("SELECT systemUserId FROM SystemUser WHERE username=?"); s1.setString(1, username_to_invite); java.sql.ResultSet result = s1.executeQuery(); if (result.next()) <BUGS> inviteUserToBooking(result.getInt(1), booking_id);  if (result.next()) <BUGE> return inviteUserToBooking(result.getInt(1), booking_id);  return ("No such user found '" + username_to_invite) + "'."; } 
@java.lang.Override public void chooseOnePokemon() { int choice = 0; <BUGS> int chosenPokemon; <BUGE> do { chosenPokemon = 0; printStarterPokemon(); chosenPokemon = getChosen(); java.lang.System.out.println("Do you choose him?"); java.lang.System.out.println("[1]Yes      [2]No"); choice = main.ConsoleRenderer.input.nextInt(); if (choice == 2) { chooseOnePokemon(); <BUGS> <BUGE> }else if (choice != 1) { java.lang.System.out.println("Choose Yes or No!"); }  } while (choice != 1 ); main.Player.choosePokemon(chosenPokemon); java.lang.System.out.println("Successufully added a pokemon"); } 
<BUGS> public int getIndexDoc(final java.lang.String fileName) { <BUGE> for (int di = 0; di < (ndocs); di++) { <BUGS> if (docs[di].getDocLoc().getPath().contains(fileName)) <BUGE> return di;  } return -1; } 
public void enter(android.view.View in, com.iodesystems.android.libs.view.transitions.TransitionPair transitionPair) { if (!(views.isEmpty())) { android.view.View out = views.peek(); if ((onPageTransitionListener) != null) { onPageTransitionListener.onPageTransition(in, out); } transitionPair.enter(out, in); <BUGS> <BUGE> } views.push(in); <BUGS> transitionPairs.push(transitionPair); <BUGE> } 
public void addCookie(org.eclipse.rdf4j.workbench.util.WorkbenchRequest req, javax.servlet.http.HttpServletResponse resp, java.lang.String name, java.lang.String value) { final javax.servlet.http.Cookie cookie = new javax.servlet.http.Cookie(name, value); <BUGS> if (null == (req.getContextPath())) { <BUGE> cookie.setPath("/"); }else { cookie.setPath(req.getContextPath()); } cookie.setMaxAge(java.lang.Integer.parseInt(config.getInitParameter(org.eclipse.rdf4j.workbench.util.CookieHandler.COOKIE_AGE_PARAM))); this.addCookie(req, resp, cookie); } 
@org.isoron.uhabits.utils.Nullable public static java.lang.String getRingtoneName(org.isoron.uhabits.utils.Context context) { try { org.isoron.uhabits.utils.Uri ringtoneUri = org.isoron.uhabits.utils.RingtoneUtils.getRingtoneUri(context); java.lang.String ringtoneName = context.getResources().getString(R.string.none); if (ringtoneUri != null) { <BUGS> org.isoron.uhabits.utils.Ringtone ringtone = org.isoron.uhabits.utils.RingtoneManager.getRingtone(context, ringtoneUri); <BUGE> if (ringtone != null) { ringtoneName = ringtone.getTitle(context); ringtone.stop(); } } return ringtoneName; } catch (java.lang.RuntimeException e) { e.printStackTrace(); return null; } } 
@java.lang.Override public org.bson.Document detect(java.util.List<org.repositoryminer.parser.IParser> parsers, java.lang.String repositoryPath) { try { org.bson.Document document = new org.bson.Document(); <BUGS> document.append("name", "duplicated_code").append("occurences", process(parsers)); <BUGE> return document; } catch (java.io.IOException e) { e.printStackTrace(); return null; } } 
<BUGS> @java.lang.Override public void removeSavedArticle(com.rocdev.guardianreader.models.Article article) { <BUGE> if ((currentSection) == (Section.SAVED.ordinal())) { for (com.rocdev.guardianreader.models.Article a : articles) { if (a.equals(article)) { articles.remove(a); break; } } if (articles.isEmpty()) { articlesFragment.showNoSavedArticlesContainer(true); } articlesFragment.notifyArticlesChanged(true, true); } } 
public static double normalizeValue(final double input, final double avg, final double std) { <BUGS> double res = 0; <BUGE> if (std != 0) { res = (input - avg) / std; }else { res = 0; } return res; } 
private void initializeData() { java.util.ArrayList<java.lang.String> listName = new java.util.ArrayList<>(); listName.add("Singer"); listName.add("Composer"); listName.add("Director"); listName.add("Actor"); <BUGS> listName.add("Lyric"); <BUGE> adapter = new com.kangladevelopers.filmfinder.Adapter.SimpleAdapter(getApplicationContext(), listName); lvListAll.setAdapter(adapter); lvListAll.setOnItemClickListener(this); } 
private static java.util.List<ru.stqa.pft.addressbook.model.GroupData> generateGroups(int count) { java.util.List<ru.stqa.pft.addressbook.model.GroupData> groups = new java.util.ArrayList<ru.stqa.pft.addressbook.model.GroupData>(); for (int i = 0; i < count; i++) { groups.add(new ru.stqa.pft.addressbook.model.GroupData().withName(java.lang.String.format("test %s", i)).withHeader(java.lang.String.format("header %s", i)).withFooter(java.lang.String.format("footer %s", i))); } <BUGS> return null; <BUGE> } 
@org.springframework.web.bind.annotation.RequestMapping(value = "/update/{code}", method = org.springframework.web.bind.annotation.RequestMethod.POST) public java.lang.String updateSubCategory(@org.springframework.web.bind.annotation.ModelAttribute @javax.validation.Valid org.egov.tl.entity.LicenseSubCategory licenseSubCategory, org.springframework.validation.BindingResult errors, org.springframework.web.servlet.mvc.support.RedirectAttributes additionalAttr, final org.springframework.ui.Model model) { if (errors.hasErrors()) { <BUGS> populateDropdownData(model); <BUGE> return "subcategory-update"; } licenseSubCategoryService.updateLicenseSubCategory(licenseSubCategory); additionalAttr.addFlashAttribute("message", "msg.success.subcategory.update"); return "redirect:/licensesubcategory/view/" + (licenseSubCategory.getCode()); } 
@java.lang.Override public void handle(javafx.event.Event evt) { java.lang.String text = ""; java.lang.String eventType = evt.getEventType().toString(); switch (eventType) { case "MOUSE_CLICKED" : text = "Mouse Clicked"; break; case "MOUSE_ENTERED" : text = "Mouse entered"; break; case "MOUSE_EXITED" : text = "Mouse exited"; break; <BUGS> <BUGE> } java.lang.System.out.println(text); rootPane.getRootFooterArea().getTextOutputLabel().setText(text); } 
public static void zipDirectory(java.io.File dir, java.io.File zipFile) throws java.io.IOException { java.io.FileOutputStream fout = new java.io.FileOutputStream(zipFile); java.util.zip.ZipOutputStream zout = new java.util.zip.ZipOutputStream(fout); org.jboss.tools.tycho.sitegenerator.FetchSourcesFromManifests.zipSubDirectory("", dir, zout); zout.flush(); zout.close(); <BUGS> <BUGE> } 
@org.springframework.web.bind.annotation.RequestMapping(value = "/login", method = org.springframework.web.bind.annotation.RequestMethod.GET) public java.lang.String login1(javax.servlet.http.HttpSession session, javax.servlet.http.HttpServletRequest request) { if ((session.getAttribute("user")) != null) { <BUGS> request.removeAttribute("notification"); <BUGE> session.setAttribute("notification", "You are already logged in."); return "index"; }else { session.removeAttribute("notification"); session.removeAttribute("notifsignup"); request.setAttribute("url", request.getParameter("url")); return "login"; } } 
public java.util.ArrayList<java.lang.Boolean> asList() { java.util.ArrayList<java.lang.Boolean> l = new java.util.ArrayList<java.lang.Boolean>(length); for (int i = 0; i < (length); i++) { <BUGS> l.set(i, get(i)); <BUGE> } return l; } 
@org.junit.Test public void shouldSuccessfullyApplyForLoan() { com.example.loan.model.LoanApplication application = new com.example.loan.model.LoanApplication(new com.example.loan.model.Client("1234567890"), 123.123); <BUGS> com.example.loan.model.LoanApplicationResult loanApplication = service.loanApplication(application); <BUGE> org.assertj.core.api.Assertions.assertThat(loanApplication.getLoanApplicationStatus()).isEqualTo(LoanApplicationStatus.LOAN_APPLIED); org.assertj.core.api.Assertions.assertThat(loanApplication.getRejectionReason()).isNull(); } 
protected synchronized java.lang.String sourceForModelledClass(spoon.reflect.declaration.CtType<?> modelledClass) { <BUGS> <BUGE> prettyPrinter.scan(modelledClass); java.lang.String sourceCode = ((("package " + (modelledClass.getPackage().toString())) + ";") + (java.lang.System.getProperty("line.separator"))) + (prettyPrinter.toString()); prettyPrinter.reset(); return sourceCode; } 
@org.junit.Test public void matchComparationTest() { final org.opendaylight.openflowplugin.applications.statistics.manager.impl.helper.SimpleComparator<org.opendaylight.yang.gen.v1.urn.opendaylight.flow.types.rev131026.Flow> simpleComparator = org.opendaylight.openflowplugin.applications.statistics.manager.impl.helper.FlowComparatorFactory.createMatch(); compareViaComparator(simpleComparator); org.junit.Assert.assertEquals(false, simpleComparator.areObjectsEqual(org.opendaylight.openflowplugin.applications.statistics.manager.impl.helper.FlowComparatorFactoryTest.nullFlow, org.opendaylight.openflowplugin.applications.statistics.manager.impl.helper.FlowComparatorFactoryTest.storedFlow)); org.junit.Assert.assertEquals(true, simpleComparator.areObjectsEqual(org.opendaylight.openflowplugin.applications.statistics.manager.impl.helper.FlowComparatorFactoryTest.statsFlow, org.opendaylight.openflowplugin.applications.statistics.manager.impl.helper.FlowComparatorFactoryTest.copyStatsFlow)); <BUGS> <BUGE> } 
public int getTileMeta(net.minecraft.world.IBlockAccess blockAccess, int x, int y, int z) { <BUGS> return (blockAccess.getTileEntity(x, y, z)) != null ? getTileMeta(blockAccess.getTileEntity(x, y, z).getWorldObj(), x, y, z) : null; <BUGE> } 
@java.lang.Override public java.lang.String toString() { <BUGS> return ((((((((((("EntitySet [entityTypeId=" + (entityTypeId)) + ", name=") + (name)) + ", type=") + (type)) + ", id=") + (id)) + ", title=") + (title)) + ", description=") + (description)) + "]"; <BUGE> } 
public void handle(javafx.scene.input.MouseEvent me) { <BUGS> java.lang.System.out.println((((me.getSceneX()) + ", ") + ((me.getSceneY()) - 55))); <BUGE> int x = ((int) (me.getSceneX())) / (main.gui.BoardPane.SPRITE_SIZE); int y = ((int) ((me.getSceneY()) - 55)) / (main.gui.BoardPane.SPRITE_SIZE); if (!(animating)) { clicked(x, y, image); } } 
@org.jetbrains.annotations.NotNull public static com.microsoftopentechnologies.intellij.helpers.azure.sdk.AzureSDKManager getManager() { if ((com.microsoftopentechnologies.intellij.helpers.azure.sdk.AzureSDKManagerImpl.apiManager) == null) { <BUGS> com.microsoftopentechnologies.intellij.helpers.azure.sdk.AzureSDKManagerImpl.apiManager = new com.microsoftopentechnologies.intellij.helpers.azure.sdk.AzureSDKManagerImpl(); com.microsoftopentechnologies.intellij.helpers.azure.sdk.AzureSDKManagerImpl.apiManagerADAuth = new com.microsoftopentechnologies.intellij.helpers.azure.sdk.AzureSDKManagerADAuthDecorator(com.microsoftopentechnologies.intellij.helpers.azure.sdk.AzureSDKManagerImpl.apiManager); <BUGE> } if ((com.microsoftopentechnologies.intellij.helpers.azure.rest.AzureRestAPIManagerImpl.getManager().getAuthenticationMode()) == (com.microsoftopentechnologies.intellij.helpers.azure.AzureAuthenticationMode.ActiveDirectory)) { return com.microsoftopentechnologies.intellij.helpers.azure.sdk.AzureSDKManagerImpl.apiManagerADAuth; }else { return com.microsoftopentechnologies.intellij.helpers.azure.sdk.AzureSDKManagerImpl.apiManager; } } 
public double subtractRange(final int firstIndex, final int secondIndex) { double result = systemCoefficients[firstIndex][secondIndex]; for (int k = 0; k <= (secondIndex - 1); k++) { <BUGS> result -= (lMatrix[firstIndex][k]) * (lMatrix[secondIndex][k]); <BUGE> } return result; } 
protected void connectSocket() { try { mSocket.connect(); } catch (java.io.IOException e) { <BUGS> android.util.Log.e(es.carlosrolindez.btcomm.btsppcomm.BtSppClientSocket.TAG, "Spp Connected - Exception Connecting socket"); android.util.Log.e(es.carlosrolindez.btcomm.btsppcomm.BtSppClientSocket.TAG, e.toString()); <BUGE> try { mSocket.close(); } catch (java.io.IOException e2) { e2.printStackTrace(); } return ; } mCommManager.setSocket(mSocket, false); } 
public void prepareLevel(org.newdawn.slick.tiled.TiledMap currentMap, int spellingtonX, int spellingtonY) throws org.newdawn.slick.SlickException { activeProjectiles = new java.util.ArrayList<>(); activeAnimations = new java.util.ArrayList<>(); spellington.setAnimState(LivingEntity.AnimState.STANDING_R); spellington.setX(spellingtonX); spellington.setY(spellingtonY); <BUGS> spellington.setAnimState(LivingEntity.AnimState.STANDING_R); <BUGE> spellington.setSpeedVector(new ca.qc.bdeb.info204.spellington.calculations.Vector2D(0, 0)); map = currentMap; } 
public int getRelativeMajor(int note) { int relativeMajor = 0; <BUGS> for (int j = 0; j < 12; j++) { <BUGE> if ((notes[j]) == note) { int index = (j + 3) % (SIZE_OF_NOTES_ARRAY); relativeMajor = notes[index]; break; } } return relativeMajor; } 
@java.lang.Override public void close() { if ((mNewtCanvasAWT) != null) { mNewtCanvasAWT = null; return ; } try { <BUGS> if ((mClearGLWindow) != null) { mClearGLWindow.close(); mClearGLWindow = null; } <BUGE> } catch (final java.lang.NullPointerException e) { } catch (final java.lang.Throwable e) { java.lang.System.err.println(e.getLocalizedMessage()); } super.close(); } 
@java.lang.Override public void connect() throws de.mickare.xserver.exceptions.NotInitializedException, java.io.IOException, java.lang.InterruptedException { <BUGS> try (de.mickare.xserver.util.concurrent.CloseableLock c = conLock.writeLock().open()) { if ((!(this.manager.isRunning())) || (!(valid()))) { return ; } manager.debugInfo((("Connecting to " + (this.name)) + " ...")); new de.mickare.xserver.net.ConnectionObj(manager.getSocketFactory(), host, port, this, manager); <BUGE> } <BUGS> <BUGE> } 
public void onClick(android.content.DialogInterface dialog, int which) { try { mAPI.revokeContactFromChain(mAPI.getBlocks(owner).get(position).getBlockOwner()); } catch (nl.tudelft.b_b_w.model.HashException e) { <BUGS> android.widget.Toast.makeText(context, retrievingHashError, Toast.LENGTH_LONG).show(); <BUGE> } catch (nl.tudelft.b_b_w.model.BlockAlreadyExistsException e) { e.printStackTrace(); } notifyDataSetChanged(); dialog.dismiss(); } 
@java.lang.Override public void onEvent(eu.dlvm.domotics.base.Block source, eu.dlvm.domotics.events.EventType event) { switch (event) { case ON : <BUGS> on(); <BUGE> break; case OFF : reallyOff(); break; case TOGGLE : toggle(); break; case DELAY_ON : delayOn(); break; case DELAY_OFF : delayOff(); break; default : eu.dlvm.domotics.actuators.Fan.logger.warn(((("Ignored event " + event) + " from ") + (source.getName()))); } } 
@java.lang.Override public java.util.Iterator<java.nio.file.Path> iterator() { <BUGS> java.lang.System.err.println("iter"); <BUGE> try { autoLoad(); } catch (java.io.IOException e) { e.printStackTrace(); } catch (org.xml.sax.SAXException e) { e.printStackTrace(); } catch (javax.xml.parsers.ParserConfigurationException e) { e.printStackTrace(); } return super.iterator(); } 
public void formatEditText(android.widget.EditText editText) { if (editText.getText().toString().equals("")) { <BUGS> editText.setText("00"); <BUGE> }else if ((editText.length()) == 1) { java.lang.String temp = 0 + (editText.getText().toString()); editText.setText(temp); }  } 
private void syncNewLinePositions() { <BUGS> for (int i = lastNewLinePositionIndex; i == 0; i--) { <BUGE> if ((position) >= (newLinePositions[lastNewLinePositionIndex])) { break; }else { newLinePositions[((lastNewLinePositionIndex)--)] = -1; } } } 
private java.lang.String inputStreamToString(java.io.InputStream inputStream) throws java.io.IOException { java.io.Reader reader = new java.io.InputStreamReader(inputStream, "gb2312"); java.io.BufferedReader bufferedReader = new java.io.BufferedReader(reader); java.lang.StringBuilder sb = new java.lang.StringBuilder(); java.lang.String buffer; while ((buffer = bufferedReader.readLine()) != null) { sb.append(buffer).append("\n"); } <BUGS> <BUGE> bufferedReader.close(); reader.close(); return sb.toString(); } 
<BUGS> private void shuffleDeck() { <BUGE> int random = 0; for (int i = 0; i < (numberOfCards); i++) { random = srk.syracuse.gameofcards.Model.Deck.getRandomCard(i); srk.syracuse.gameofcards.Model.Cards temp = cards[i]; cards[i] = cards[random]; cards[random] = temp; } } 
private boolean hideMessageByJSONSetting(org.json.JSONArray array) { <BUGS> org.json.JSONObject object = array[0]; <BUGE> try { <BUGS> <BUGE> if ((object.getJSONObject("data").getBoolean("notification")) == false) { return false; } } catch (java.lang.Exception e) { return true; } return true; } 
public static ml.shifu.shifu.container.obj.ModelConfig loadModelConfig(java.lang.String path, ml.shifu.shifu.container.obj.RawSourceData.SourceType sourceType) throws java.io.IOException { ml.shifu.shifu.container.obj.ModelConfig modelConfig = ml.shifu.shifu.util.CommonUtils.loadJSON(path, sourceType, ml.shifu.shifu.container.obj.ModelConfig.class); if ((modelConfig.getTrain().getGridConfigFile()) != null) { <BUGS> modelConfig.getTrain().setGridConfigFileContent(ml.shifu.shifu.util.CommonUtils.loadFileContent(path, sourceType)); <BUGE> } return modelConfig; } 
public void update() { android.content.ContentResolver resolver = mContext.getContentResolver(); mOneFingerQuickSettingsIntercept = (Settings.System.getInt(resolver, Settings.System.STATUS_BAR_QUICK_QS_PULLDOWN, 1)) == 1; mDoubleTapToSleepEnabled = (Settings.System.getInt(resolver, Settings.System.DOUBLE_TAP_SLEEP_GESTURE, 1)) == 1; <BUGS> mStatusBarLockedOnSecureKeyguard = (Settings.Secure.getIntForUser(resolver, Settings.Secure.STATUS_BAR_LOCKED_ON_SECURE_KEYGUARD, 1, UserHandle.USER_CURRENT)) == 1; <BUGE> } 
@java.lang.Override public void run() { if (download.needToDownload()) { fireTask((((Language.INSTANCE.localize("common.downloading")) + " ") + (download.getFilename()))); download.download(true); <BUGS> }else { download.copyFile(); <BUGE> } } 
@java.lang.Override public void onShutdownInput() { assert eventloop.inEventloopThread(); if ((callback) != null) { if (((reading) == (BODY)) && ((contentLength) == (UNKNOWN_LENGTH))) { onHttpMessage(bodyQueue.takeRemaining()); }else { closeWithError(io.datakernel.http.HttpClientConnection.CLOSED_CONNECTION); } <BUGS> <BUGE> } <BUGS> close(); <BUGE> } 
@java.lang.Override public android.support.v4.app.Fragment getItem(int position) { switch (position) { case 0 : com.midoreigh.midopicker.CameraKitFragment cameraKitFragment = new com.midoreigh.midopicker.CameraKitFragment(); <BUGS> cameraKitFragment.setConfig(com.midoreigh.midopicker.ImagePickerActivity.getConfig()); <BUGE> return cameraKitFragment; case 1 : return new com.midoreigh.midopicker.GalleryFragment(); default : return null; } } 
public boolean onPreferenceChange(android.preference.Preference preference, final java.lang.Object newValue) { final java.lang.String newPath = ((java.lang.String) (newValue)); try { com.ichi2.anki.AnkiDroidApp.initializeAnkiDroidDirectory(newPath); <BUGS> AnkiDroidApp.sStorageAccessExceptionFlag = false; <BUGE> return true; } catch (com.ichi2.anki.exception.StorageAccessException e) { timber.log.Timber.e(e, "Could not initialize directory: %s", newPath); android.widget.Toast.makeText(getApplicationContext(), R.string.dialog_collection_path_not_dir, Toast.LENGTH_LONG).show(); return false; } } 
@java.lang.Override public void onAttachedToRecyclerView(android.support.v7.widget.RecyclerView recyclerView) { <BUGS> if ((mRunnables) == null) { mRunnables = new java.util.ArrayList<>(); <BUGE> int count = getItemCount(); for (int i = 0; i < count; i++) { mRunnables.add(null); } } registerAdapterDataObserver(new com.tr4android.recyclerviewslideitem.SwipeAdapter.SwipeAdapterDataObserver()); } 
@org.junit.Test public void createPolicyWithConfigurationAndConfigurationData02() { try (java.io.InputStream is = io.gravitee.gateway.policy.PolicyConfigurationFactoryTest.class.getResourceAsStream("policy-configuration-02.json")) { java.lang.String configuration = org.apache.commons.io.IOUtils.toString(is, "UTF-8"); io.gravitee.gateway.policy.DummyPolicyConfiguration policyConfiguration = policyConfigurationFactory.create(io.gravitee.gateway.policy.DummyPolicyConfiguration.class, configuration); <BUGS> org.junit.Assert.assertNull(policyConfiguration); <BUGE> } catch (java.io.IOException e) { e.printStackTrace(); } } 
private void updateConnections() { for (Models.Location l1 : validLocations) for (Models.Location l2 : validLocations) for (Models.Location mid : validLocations) <BUGS> if ((connection.get(new Models.LocationPair(l1, mid))) && (connection.get(new Models.LocationPair(l2, mid)))) <BUGE> connection.put(new Models.LocationPair(l1, l2), true);     } 
public Person retrieve() { int iterator = (array.length) - 1; <BUGS> while ((array[iterator]) == null) { <BUGE> iterator--; } Person retrieved = array[iterator]; array[iterator] = null; return retrieved; } 
@org.springframework.scheduling.annotation.Async @org.springframework.scheduling.annotation.Scheduled(cron = "0 0 0 * * *") private void execute() { java.lang.Integer history = null; <BUGS> try { <BUGE> history = config.getInteger(ConfigProperty.EXECUTION_LOG_HISTORY); <BUGS> } finally { <BUGE> } if ((history == null) || (history <= (-1))) { return ; } java.util.Calendar pruneLine = java.util.Calendar.getInstance(); pruneLine.setTime(new java.util.Date()); pruneLine.add(java.util.Calendar.DAY_OF_YEAR, (-history)); dbLog.prune(pruneLine.getTime()); } 
public void mouseUpdate(int mx, int my, boolean pressed) { if (pressed == false) { this.destroy(); }else if (this.contains(mx, my)) { <BUGS> if ((this.fixed) == true) { <BUGE> this.bind(mx, this.fixed_y); <BUGS> }else { this.bind(mx, my); <BUGE> } }  } 
public static boolean checkLimit(net.dv8tion.jda.core.entities.Guild guild) { fredboat.audio.player.GuildPlayer guildPlayer = fredboat.audio.player.PlayerRegistry.getExisting(guild); if ((guildPlayer != null) && ((guildPlayer.getSongCount()) > 0)) return true;  <BUGS> return ((fredboat.audio.player.PlayerLimitManager.limit) > 0) || ((fredboat.audio.player.PlayerRegistry.getPlayingPlayers().size()) < (fredboat.audio.player.PlayerLimitManager.limit)); <BUGE> } 
@java.lang.Override public void onClick(android.content.DialogInterface dialog, int which) { boolean connection = mBluetoothLeService.connect(device.getAddress()); if (connection) { rootview.setVisibility(View.VISIBLE); connect_button_view.setVisibility(View.GONE); <BUGS> android.widget.Toast.makeText(this, getBaseContext().getResources().getString(R.string.toast_successfull_connection), Toast.LENGTH_SHORT).show(); <BUGE> } dialog.dismiss(); } 
@java.lang.Override public void onClick(android.view.View v) { java.lang.String x = retrieveMyPHP.deleteUserArtist(MyApplication.userName, artist.getArtistId()); <BUGS> <BUGE> android.widget.Toast.makeText(mActivity.getApplicationContext(), x, Toast.LENGTH_SHORT).show(); <BUGS> if (x.equals("Artist Deleted!")) { dbHelper.deleteUserArtist(dbHelper.getWritableDatabase(), artist.getArtistId()); mArtists.remove(position); notifyDataSetChanged(); } <BUGE> } 
public void onResponse(de.elanev.studip.android.app.backend.datamodel.ContactGroups response) { try { <BUGS> if (!(favoritesGroupExisting(response))) { createFavoritesGroup(); }else { resolver.applyBatch(AbstractContract.CONTENT_AUTHORITY, new de.elanev.studip.android.app.backend.net.sync.ContactGroupsHandler(response).parse()); } <BUGE> } catch (android.os.RemoteException e) { e.printStackTrace(); } catch (android.content.OperationApplicationException e) { e.printStackTrace(); } } 
public void removeDanceSequence(T selectedBeatElem) { java.util.UUID danceSequenceID = selectedBeatElem.getDanceSequenceId(); <BUGS> ch.ethz.asl.dancebots.danceboteditor.model.DanceSequence<T> selectedDanceSequence = mDanceSequences.get(danceSequenceID); int danceSequenceLength = selectedDanceSequence.getLength(); int startIdx = selectedDanceSequence.getStartElement().getBeatPosition(); int endIdx = startIdx + danceSequenceLength; resetElements(startIdx, endIdx); mDanceSequences.remove(danceSequenceID); <BUGE> } 
public boolean containsKey(java.lang.String key) { <BUGS> int index = (java.lang.Math.abs(key.hashCode())) % (this.valueTable.length); <BUGE> java.lang.String currentKey; while ((currentKey = this.keyTable[index]) != null) { if (key.equals(currentKey)) return true;  index = (index + 1) % (this.keyTable.length); } return false; } 
<BUGS> public void addDoctor(com.mycompany.dao.Doctor doctor) { <BUGE> org.hibernate.SessionFactory sessionFactory = com.mycompany.hibernate.HibernateUtil.getSessionFactory(); org.hibernate.Session session = sessionFactory.openSession(); session.beginTransaction(); session.save(doctor); session.getTransaction().commit(); <BUGS> <BUGE> } 
@java.lang.Override public boolean onNavigationItemSelected(android.view.MenuItem menuItem) { <BUGS> <BUGE> menuItem.setChecked(true); <BUGS> mDrawerLayout.closeDrawers(); <BUGE> switch (menuItem.getItemId()) { case R.id.nav_home : setToolbarTitle("主页"); navigationDrawerItemSelected(0); break; case R.id.nav_messages : setToolbarTitle("发现"); navigationDrawerItemSelected(1); break; } return true; } 
@java.lang.Override public twitter4j.User showUser(java.lang.String arg0) throws twitter4j.TwitterException { if ((limits[1]) == 179) { SocialNetworkAnalysis.TwitterWrapper.timelimited[0] = new java.util.Date(); limit.reached(); limits[1] = 0; } (limits[1])++; <BUGS> java.lang.System.out.println("limits in showUser: "); <BUGE> for (int limit : limits) { java.lang.System.out.print((limit + " ")); } java.lang.System.out.println(); return t.showUser(arg0); } 
private com.gamesbykevin.breakout.ball.Balls.Key getRandomKey() { if (this.keys.isEmpty()) { for (com.gamesbykevin.breakout.ball.Balls.Key key : com.gamesbykevin.breakout.ball.Balls.Key.values()) { if (key == (com.gamesbykevin.breakout.ball.Balls.Key.Red)) continue;  this.keys.add(key); } } <BUGS> final int index = GamePanel.RANDOM.nextInt(com.gamesbykevin.breakout.ball.Balls.Key.values().length); final com.gamesbykevin.breakout.ball.Balls.Key tmp = com.gamesbykevin.breakout.ball.Balls.Key.values()[index]; <BUGE> this.keys.remove(index); return tmp; } 
private boolean checkNumberAssignment(java.lang.String[] input) { <BUGS> if (input[1].matches(".*[^1-9].*")) { <BUGE> if (input[1].contains(".")) { return true; }else { java.lang.System.out.println("ERROR: Number assignment contains a non-number character."); return false; } }else { return true; } } 
private void calculateDuration() { if (locations.isEmpty()) { metaData.duration = -1; <BUGS> <BUGE> } <BUGS> metaData.duration = (locations.get(((locations.size()) - 1)).getTimestamp()) - (locations.get(0).getTimestamp()); <BUGE> } 
@org.junit.Test public void addAndRemoveTest() { java.util.Collections.addAll(mySet, 1, 2, 3); java.util.Collections.addAll(anotherSet, 1, 3, 4); mySet.add(4); mySet.remove(2); org.junit.Assert.assertTrue(anotherSet.equals(mySet)); <BUGS> org.junit.Assert.assertEquals(anotherSet, mySet.toArray()); <BUGE> } 
@java.lang.Override public org.craftercms.profile.api.VerificationToken getVerificationToken(java.lang.String tokenId) throws org.craftercms.profile.api.exceptions.ProfileException { java.lang.String url = getAbsoluteUrl(((BASE_URL_PROFILE) + (URL_PROFILE_GET_VERIFICATION_TOKEN))); <BUGS> url = org.craftercms.commons.rest.RestClientUtils.addQueryParams(url, createBaseParams(), false); <BUGE> return doGetForObject(url, org.craftercms.profile.api.VerificationToken.class, tokenId); } 
@java.lang.Override public void onStart() { super.onStart(); if ((resultDrawer) == null) { accountList = getAccounts(); if (!(accountList.isEmpty())) { selectedAccount = accountList.get(0); createDrawer(); selectAccount(selectedAccount); <BUGS> onUserEventsSelected(); <BUGE> } } } 
public void removeFromErrorsWarnings(insalmo.Parameter param) { if (this.errors.contains(param)) { this.errors.remove(param); <BUGS> <BUGE> } if (this.warnings.contains(param)) { this.warnings.remove(param); <BUGS> <BUGE> } <BUGS> this.errorWarningUpdateListener.actionPerformed(new java.awt.event.ActionEvent(this, java.awt.event.ActionEvent.ACTION_PERFORMED, null)); <BUGE> } 
@java.lang.Override public void onReceive(android.content.Context context, android.content.Intent intent) { progressBar.setVisibility(View.GONE); <BUGS> <BUGE> android.os.Bundle extras = getIntent().getExtras(); if (extras != null) { java.lang.String messageContent = extras.getString("xmpp_status"); if ((messageContent != null) && (messageContent.equals("success"))) { <BUGS> startActivity(new android.content.Intent(this, com.example.xmppchatsampleproject.ChatOptionActivity.class)); <BUGE> }else { android.widget.Toast.makeText(this, "Somthing went wrong. try again", Toast.LENGTH_SHORT).show(); } } } 
public java.util.Set<com.ctrip.framework.apollo.core.enums.Env> emailSupportedEnvs() { <BUGS> java.lang.String[] configurations = getArrayProperty("email.supported.envs", ""); <BUGE> java.util.Set<com.ctrip.framework.apollo.core.enums.Env> result = com.google.common.collect.Sets.newHashSet(); <BUGS> if (org.springframework.util.StringUtils.isEmpty(configurations)) { <BUGE> return result; } for (java.lang.String env : configurations) { result.add(com.ctrip.framework.apollo.core.enums.Env.fromString(env)); } return result; } 
public static java.net.URL makeURL() { android.net.Uri uri = android.net.Uri.parse(com.example.sanket.newsapi.NetworkUtils.GITHUB_BASE_URL).buildUpon().appendQueryParameter(com.example.sanket.newsapi.NetworkUtils.PARAM_SOURCE, com.example.sanket.newsapi.NetworkUtils.source_value).appendQueryParameter(com.example.sanket.newsapi.NetworkUtils.PARAM_SORT, com.example.sanket.newsapi.NetworkUtils.SORT).appendQueryParameter(com.example.sanket.newsapi.NetworkUtils.PARAM_APIKEY, com.example.sanket.newsapi.NetworkUtils.APIKEY).build(); java.net.URL url = null; try { url = new java.net.URL(uri.toString()); <BUGS> return url; <BUGE> } catch (java.net.MalformedURLException e) { e.printStackTrace(); } return url; } 
public void setTime(int minutes, int seconds) { <BUGS> <BUGE> this.minutes = minutes + (seconds / 60); this.seconds = seconds % 60; this.setText(java.lang.String.format("%02d:%02d", this.minutes, this.seconds)); } 
public static boolean isBF(java.lang.String word) throws java.io.IOException { if ((utils.GFBF.GFLexicon.isEmpty()) || (utils.GFBF.BFLexicon.isEmpty())) utils.GFBF.intializeLexicon();  <BUGS> if (utils.GFBF.BFLexicon.contains(word)) <BUGE> return true;  return false; } 
@org.springframework.web.bind.annotation.RequestMapping(value = "/addVolunteer", method = org.springframework.web.bind.annotation.RequestMethod.POST) public java.lang.String addVolunteer(@org.springframework.web.bind.annotation.ModelAttribute(value = "SpringWeb") us.wasatchsystems.ccs.models.Volunteer volunteer, org.springframework.ui.ModelMap model) { model.addAttribute("firstName", volunteer.getFirstName()); model.addAttribute("lastName", volunteer.getLastName()); model.addAttribute("dob", volunteer.getDob()); us.wasatchsystems.ccs.datasource.VolunteerDataSource.addVolunteer(volunteer); <BUGS> us.wasatchsystems.ccs.controllers.VolunteerController.log.info("Successfully inserted into the database"); <BUGE> return "result"; } 
private com.google.common.util.concurrent.ListenableFuture<org.atlasapi.content.IndexQueryResult> queryIndex(org.atlasapi.query.common.Query<org.atlasapi.content.Content> query) throws org.atlasapi.query.common.exceptions.QueryExecutionException { <BUGS> return index.query(query.getOperands(), query.getContext().getApplication().getConfiguration().getEnabledReadSources(), query.getContext().getSelection().or(com.metabroadcast.common.query.Selection.all()), java.util.Optional.empty()); <BUGE> } 
@java.lang.Override public java.util.EnumSet<de.uni_freiburg.informatik.ultimate.modelcheckerutils.smt.predicates.CallReturnPyramideInstanceProvider.Instance> getInstancesGlobalNonOld(final de.uni_freiburg.informatik.ultimate.modelcheckerutils.cfg.variables.IProgramNonOldVar pv) { if (isModifiableByCallee(pv)) { <BUGS> return java.util.EnumSet.of(de.uni_freiburg.informatik.ultimate.modelcheckerutils.smt.predicates.CallReturnPyramideInstanceProvider.Instance.BEFORE_RETURN); <BUGE> }else { if (isWrittenOnReturn(pv)) { return java.util.EnumSet.of(de.uni_freiburg.informatik.ultimate.modelcheckerutils.smt.predicates.CallReturnPyramideInstanceProvider.Instance.BEFORE_CALL, de.uni_freiburg.informatik.ultimate.modelcheckerutils.smt.predicates.CallReturnPyramideInstanceProvider.Instance.AFTER_CALL, de.uni_freiburg.informatik.ultimate.modelcheckerutils.smt.predicates.CallReturnPyramideInstanceProvider.Instance.BEFORE_RETURN); }else { return java.util.EnumSet.of(de.uni_freiburg.informatik.ultimate.modelcheckerutils.smt.predicates.CallReturnPyramideInstanceProvider.Instance.BEFORE_CALL, de.uni_freiburg.informatik.ultimate.modelcheckerutils.smt.predicates.CallReturnPyramideInstanceProvider.Instance.AFTER_CALL, de.uni_freiburg.informatik.ultimate.modelcheckerutils.smt.predicates.CallReturnPyramideInstanceProvider.Instance.BEFORE_RETURN, de.uni_freiburg.informatik.ultimate.modelcheckerutils.smt.predicates.CallReturnPyramideInstanceProvider.Instance.AFTER_RETURN); } } } 
@java.lang.Override public final boolean titleChanged(final xyz.algogo.core.Algorithm algorithm, final java.lang.String title, final java.lang.String newTitle) { if ((newTitle != null) && (!(newTitle.isEmpty()))) { <BUGS> algoChanged = true; <BUGE> this.setTitle(buildTitle(newTitle, algorithm.getAuthor())); <BUGS> algorithmChanged(false); <BUGE> return true; } javax.swing.JOptionPane.showMessageDialog(this, xyz.algogo.desktop.utils.LanguageManager.getString("joptionpane.invalidtitle", newTitle), xyz.algogo.desktop.utils.LanguageManager.getString("joptionpane.error"), javax.swing.JOptionPane.ERROR_MESSAGE); return false; } 
public double rand() { <BUGS> double stdv = 1.0 / (java.lang.Math.sqrt((((grads.dims[1]) * (weights.dims[2])) * (weights.dims[3])))); <BUGE> double stdv2 = stdv * 2; return ((java.lang.Math.random()) * stdv2) - stdv; } 
@java.lang.Override public java.lang.Boolean eventTreasureOpened(java.lang.Integer token, java.lang.Integer treasureID, java.lang.Integer userID) { <BUGS> assert isTokenActive(token); <BUGE> java.util.concurrent.Future<java.lang.Boolean> future = core.CoreModel.getInstance().addCommand(new frontend.Requests.OpenTreasureCommand(treasureID, userID)); try { return future.get(); } catch (java.lang.InterruptedException e) { e.printStackTrace(); } catch (java.util.concurrent.ExecutionException e) { e.printStackTrace(); } return false; } 
private void setMapPosition() { <BUGS> java.lang.System.out.println("setMapPosition()"); <BUGE> if ((googleMap) != null) { java.lang.System.out.println("googleMap != null"); if (com.syzible.loinnir.utils.LocalStorage.getBooleanPref(LocalStorage.Pref.should_share_location, getActivity())) { getWebServerLocation(); }else { googleMap.clear(); googleMap.animateCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom(LocationService.ATHLONE, LocationService.INITIAL_LOCATION_ZOOM)); } } } 
private java.lang.String makeWord() { java.lang.String word = makeSyllable(); double cutoff; switch (monosylProb) { default : case ALWAYS : return word; case MOSTLY : cutoff = 0.6; break; case FREQUENT : cutoff = 0.45; break; case LESS : cutoff = 0.3; break; case RARE : cutoff = 0.15; break; case CUSTOM : cutoff = monosylProbCustom; } double jump = rand.nextDouble(); if (jump > cutoff) { <BUGS> word += newWord(); <BUGE> } return word; } 
@java.lang.Override public java.lang.Object getMessageBlocking(long timeDuration, java.util.concurrent.TimeUnit timeUnit) throws java.lang.InterruptedException { FinalProject.communication.CommTuple receivedCommTuple = receivedObjectQueue.poll(timeDuration, timeUnit); <BUGS> if ((replyConnection) == null) <BUGE> return null;  replyConnection = receivedCommTuple.getConnection(); return receivedCommTuple.getObj(); } 
private static void set(greymerk.roguelike.worldgen.IWorldEditor editor, java.util.Random rand, greymerk.roguelike.worldgen.Coord origin) { if (!(editor.isAirBlock(origin))) return ;  greymerk.roguelike.worldgen.MetaBlock vine = greymerk.roguelike.worldgen.blocks.BlockType.get(BlockType.VINE); for (greymerk.roguelike.worldgen.Cardinal dir : greymerk.roguelike.worldgen.Cardinal.directions) { <BUGS> greymerk.roguelike.worldgen.Coord c = new greymerk.roguelike.worldgen.Coord(origin); c.add(dir); if (editor.canPlace(vine, c, dir)) { greymerk.roguelike.worldgen.blocks.Vine.setOrientation(vine, dir).set(editor, c); <BUGE> return ; } } } 
public void addUpdate(com.lagopusempire.basicupdater.Update<V, U> update) { if (update == null) { throw new java.lang.IllegalArgumentException("Update cannot be null."); } V from = update.getFrom(); if (updates.containsKey(from)) { <BUGS> updates.remove(from); throw new com.lagopusempire.basicupdater.DuplicateUpdateException(updates.get(from), update); <BUGE> } updates.put(from, update); } 
@java.lang.Override public void onResume(android.os.Bundle savedInstanceState) { <BUGS> super.onCreate(savedInstanceState); <BUGE> number = 0; sent = false; com.appbackr.android.tracker.demo.Tracker.postData(this.getApplicationContext(), "".getApplicationContext().getPackageName(), "", ""); setContentView(R.layout.main); final android.widget.TextView textViewToChange = ((android.widget.TextView) (findViewById(R.id.count))); textViewToChange.setText(number.toString()); } 
@org.junit.Test public void TestGetDbColumnInfo() { com.github.wz2cool.dynamic.mybatis.ColumnInfo result = com.github.wz2cool.dynamic.mybatis.EntityCache.getInstance().getColumnInfo(com.github.wz2cool.model.Student.class, "name"); org.junit.Assert.assertEquals("name", result.getColumnName()); org.junit.Assert.assertEquals(false, result.isUpdateIfNull()); result = com.github.wz2cool.dynamic.mybatis.EntityCache.getInstance().getColumnInfo(com.github.wz2cool.model.Student.class, "note"); <BUGS> org.junit.Assert.assertEquals("dbColumn.note", result.getColumnName()); <BUGE> org.junit.Assert.assertEquals(true, result.isUpdateIfNull()); } 
@org.junit.Test public void testFeatureGroupTypeAlternative() throws de.ovgu.featureide.fm.core.io.UnsupportedModelException, java.io.FileNotFoundException { for (de.ovgu.featureide.fm.core.base.IFeature origF : origFm.getFeatures()) { if (origF.getStructure().isAlternative()) { de.ovgu.featureide.fm.core.base.IFeature newF = newFm.getFeature(origF.getName()); <BUGS> if (newF == null) { }else { org.junit.Assert.assertTrue(failureMessage, newFm.getFeature(origF.getName()).getStructure().isAlternative()); } <BUGE> } } } 
@java.lang.Override public boolean onOptionsItemSelected(android.view.MenuItem item) { int itemClicked = item.getItemId(); if (itemClicked == (R.id.item_Setting)) { android.content.Context context = this; android.content.Intent activity_setting = new android.content.Intent(context, com.example.william.earthdayapplication.SettingActivity.class); startActivity(activity_setting); } if (itemClicked == (R.id.item_Instruction)) { } <BUGS> if ((click) == (R.id.item_Help)) { <BUGE> android.content.Intent toy = new android.content.Intent(getApplicationContext(), com.example.william.earthdayapplication.Main2Activity.class); startActivity(toy); } return super.onOptionsItemSelected(item); } 
@java.lang.SuppressWarnings(value = "static-method") @org.junit.Test public void testRotateY() { <BUGS> <BUGE> org.junit.Assert.assertEquals(Orientation16.S, Orientation16.SSE.rotate(Axis.Y, 1)); org.junit.Assert.assertEquals(Orientation16.NW, Orientation16.N.rotate(Axis.Y, (-2))); org.junit.Assert.assertEquals(Orientation16.NW, Orientation16.SSW.rotate(Axis.Y, 5)); } 
@java.lang.Override @java.lang.SuppressWarnings(value = "deprecation") public org.springframework.messaging.support.ErrorMessage buildErrorMessage(java.lang.Throwable throwable, org.springframework.core.AttributeAccessor attributes) { java.lang.Object inputMessage = attributes.getAttribute(ErrorMessageUtils.INPUT_MESSAGE_CONTEXT_KEY); <BUGS> return inputMessage instanceof org.springframework.messaging.Message ? new org.springframework.integration.support.EnhancedErrorMessage(((org.springframework.messaging.Message<?>) (inputMessage)), throwable) : new org.springframework.messaging.support.ErrorMessage(throwable); <BUGE> } 
public void updateNFCData() { <BUGS> mNfcFingerprint = org.sufficientlysecure.keychain.ui.util.KeyFormattingUtils.convertFingerprintToHex(mNfcFingerprints); byte[] fp = new byte[20]; java.nio.ByteBuffer.wrap(fp).put(mNfcFingerprints, 0, 20); mNfcFingerprint = org.sufficientlysecure.keychain.ui.util.KeyFormattingUtils.convertFingerprintToHex(fp); <BUGE> } 
public static java.net.URL fromProjectID(int projectID) { try { final java.net.URL url = com.therandomlabs.utils.network.NetworkUtils.getRedirectedURL(com.therandomlabs.curseapi.Curse.PROJECT_URL.replaceAll(com.therandomlabs.curseapi.Curse.PROJECT_ID, java.lang.Integer.toString(projectID)), 2); <BUGS> if (!(com.therandomlabs.curseapi.Curse.isCurseProjectNoRedirect(url))) { <BUGE> throw new com.therandomlabs.curseapi.InvalidProjectIDException(("Invalid project ID: " + projectID)); } return url; } catch (java.io.IOException ex) { throw new com.therandomlabs.curseapi.CurseException(ex); } } 
public static java.lang.String getParam(final org.jooq.lambda.tuple.Tuple2<java.lang.String, java.lang.String> valueNameCouple) { <BUGS> return (valueNameCouple.v2().equals("") ? "" : ((it.unibo.alchemist.boundary.gui.view.SingleRunApp.Parameter.PARAMETER_NAME_START) + (valueNameCouple.v1())) + (it.unibo.alchemist.boundary.gui.view.SingleRunApp.Parameter.PARAMETER_NAME_END)) + (valueNameCouple.v2()); <BUGE> } 
<BUGS> private void setup(org.bukkit.entity.Player p, java.lang.String id, java.lang.String name, java.lang.String option, int step, org.bukkit.block.Block b) { <BUGE> setupOp = p; setup = id; setupName = name; setupOption = option; setupStep = step; if (b != null) { blockChoices.add(b); setupStep += 1; } if ((setupStep) <= 2) p.sendMessage(lang(("region_select" + (setupStep)))); else setupComplete();  } 
public int ev12(int p) { position = p; java.lang.System.out.println("The gods are in your favor as you seem to have found a hot spring with some lovely women to match..."); java.lang.System.out.println("(1) Approach and see what happens"); java.lang.System.out.println("(2) Resist the urge"); choice = u.nextInt(); switch (choice) { case 1 : java.lang.System.out.println("You're not quite sure what happened but you feel tired and a bit... sweaty? You definitely feel like slowing down for a bit."); speed -= 1; position += speed; break; case 2 : java.lang.System.out.println("You feel like much less of a man but somehow feel like you avoided a crisis. You are hasty in your, well, haste."); speed += 2; position += speed; break; default : java.lang.System.out.println("No pity is shown to those who cannot follow the rules of the game. Die, you fiend."); <BUGS> position = 0; <BUGE> break; } <BUGS> u.close(); <BUGE> return position; } 
protected void checkAnswer(java.lang.String answer, boolean outOfTime) { <BUGS> if (answer == (members[memberNum])) { <BUGE> score += 1; refreshScoreText(); }else { java.lang.String wrongText; if (!outOfTime) { wrongText = "You suck! The correct answer was " + (members[memberNum]); }else { wrongText = "You ran out of time! The correct answer was " + (members[memberNum]); } android.widget.Toast toast = android.widget.Toast.makeText(getApplicationContext(), wrongText, Toast.LENGTH_SHORT); toast.show(); } } 
@java.lang.Override public void writeToParcel(android.os.Parcel dest, int parcelableFlags) { dest.writeLong(info.presentationTimeUs); dest.writeInt(info.flags); dest.writeByteArray(org.mozilla.gecko.media.Sample.byteArrayFromBuffer(bytes, info.offset, info.size)); <BUGS> dest.writeByteArray(crypto.iv); dest.writeByteArray(crypto.key); dest.writeInt(crypto.mode); dest.writeIntArray(crypto.numBytesOfClearData); dest.writeIntArray(crypto.numBytesOfEncryptedData); dest.writeInt(crypto.numSubSamples); <BUGE> } 
public boolean hasPendingConnectRequest(java.lang.String ipAddress) { <BUGS> logConnectReqeustList(); <BUGE> synchronized(mReconnectRequestList) { if ((mReconnectRequestList.size()) > 0) { <BUGS> <BUGE> for (com.assistant.connection.ConnectionManager.ConnectRequest request : mReconnectRequestList) { if (android.text.TextUtils.equals(ipAddress, request.ipAddress)) { com.assistant.utils.Log.d(com.assistant.connection.ConnectionManager.TAG, ("hasPendingConnectRequest, true for ip:" + ipAddress)); return true; } } } } com.assistant.utils.Log.d(com.assistant.connection.ConnectionManager.TAG, ("hasPendingConnectRequest, false for reconnecting:" + ipAddress)); return false; } 
private static boolean equals(java.util.Properties p, java.lang.String optionKey, java.lang.String optionValue, boolean caseSensitive) { java.lang.String v = p.getProperty(optionKey); if (v == null) return false;  <BUGS> if (caseSensitive) <BUGE> v = v.toLowerCase();  return v.equals(optionValue); } 
@org.junit.Test public void testSelectAppEngineApi() { <BUGS> syncExec(new java.lang.Runnable() { @java.lang.Override public void run() { appengineButton.click(); java.util.List<com.google.cloud.tools.eclipse.appengine.libraries.model.Library> selectedLibraries = getSelectedLibrariesSorted(); org.junit.Assert.assertNotNull(selectedLibraries); org.junit.Assert.assertThat(selectedLibraries.size(), org.hamcrest.CoreMatchers.is(1)); org.junit.Assert.assertThat(selectedLibraries.get(0).getId(), org.hamcrest.CoreMatchers.is("appengine-api")); } }); <BUGE> } 
public void onEvent(blueprint.com.sage.events.BackEvent event) { if ((mViewPager.getCurrentItem()) == 0) { <BUGS> blueprint.com.sage.signUp.SignUpActivity activity = ((blueprint.com.sage.signUp.SignUpActivity) (getActivity())); activity.finish(); <BUGE> }else { mViewPager.setCurrentItem(((mViewPager.getCurrentItem()) - 1), true); } } 
public org.apache.catalina.tribes.Member getMember(org.apache.catalina.tribes.Member mbr) { <BUGS> if (hasMembers()) { <BUGE> org.apache.catalina.tribes.Member result = null; <BUGS> for (int i = 0; (i < (this.members.length)) && (result == null); i++) { <BUGE> if (members[i].equals(mbr)) { result = members[i]; } } return result; }else { return null; } } 
@java.lang.Override public void onItemClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) { android.content.Intent intent; switch (position) { case 0 : intent = new android.content.Intent(this, com.coolbitx.coolwallet.ui.ExchangeRateActivity.class); startActivity(intent); break; case 1 : intent = new android.content.Intent(this, com.coolbitx.coolwallet.ui.TransactionFeeActivity.class); startActivity(intent); break; <BUGS> case 2 : intent = new android.content.Intent(this, com.coolbitx.coolwallet.ui.Fragment.ServiceProviderActivity.class); startActivity(intent); break; <BUGE> } } 
<BUGS> private java.lang.String createFullUrl(final java.lang.String url, final java.util.Map<java.lang.String, java.lang.String> params) { <BUGE> java.lang.String fullUrl = url; if (params != null) { <BUGS> for (java.util.Map.Entry<java.lang.String, java.lang.String> paramEntry : params.entrySet()) { fullUrl = addParameter(fullUrl, paramEntry.getKey(), paramEntry.getValue()); <BUGE> } } return enableRedirect(fullUrl); } 
@java.lang.SuppressWarnings(value = "unchecked") private com.strobel.decompiler.ast.Expression updateCurrent(com.strobel.decompiler.ast.Expression node) { <BUGS> while ((node != null) && (node != (Node.NULL))) { <BUGE> if (node == scope) { return null; } node = parentLookup.get(node); return node; <BUGS> } <BUGE> return null; } 
public static java.lang.String decode(java.lang.String secret) { <BUGS> if (com.joenee.web.rest.ea.EaDecrypt.isDecrypt) { <BUGE> return secret; } if (org.apache.commons.lang.StringUtils.isEmpty(secret)) { return null; } java.lang.String source = null; try { source = new java.lang.String(org.springframework.util.Base64Utils.decode(com.joenee.web.rest.ea.EaDecrypt.hexStringToBytes(secret)), "gb2312"); } catch (java.lang.Exception e) { e.printStackTrace(); } return source; } 
private com.google.gcloud.testing.LocalDnsHelper.Response handleProjectGet(com.sun.net.httpserver.HttpExchange exchange) { java.lang.String path = com.google.gcloud.testing.LocalDnsHelper.BASE_CONTEXT.relativize(exchange.getRequestURI()).getPath(); java.lang.String[] tokens = path.split("/"); <BUGS> java.lang.String projectId = tokens[1]; <BUGE> java.lang.String query = com.google.gcloud.testing.LocalDnsHelper.BASE_CONTEXT.relativize(exchange.getRequestURI()).getQuery(); java.lang.String[] fields = com.google.gcloud.testing.OptionParsersAndExtractors.parseGetOptions(query); return getProject(projectId, fields); } 
@java.lang.Override public double curve(double t) { <BUGS> double amount = (this.amount) * 1.525; <BUGE> if ((t *= 2) < 1) { <BUGS> return 0.5 * ((t * t) * (((amount + 1) * t) - amount)); <BUGE> } <BUGS> return 0.5 * ((((t -= 2) * t) * (((amount + 1) * t) + amount)) + 2); <BUGE> } 
@org.testng.annotations.Test(groups = { "browser-tests" }, expectedExceptions = { org.openqa.selenium.TimeoutException.class }) @com.paypal.selion.annotations.WebTest public void testWaitUntilElementPresentNeg() { com.paypal.selion.platform.grid.Grid.driver().get(url); java.lang.String origTimeout = com.paypal.selion.configuration.Config.getConfigProperty(Config.ConfigProperty.EXECUTION_TIMEOUT); try { com.paypal.selion.configuration.Config.setConfigProperty(Config.ConfigProperty.EXECUTION_TIMEOUT, "20000"); com.paypal.selion.platform.utilities.WebDriverWaitUtils.waitUntilElementIsPresent(badLocator); } finally { com.paypal.selion.configuration.Config.setConfigProperty(Config.ConfigProperty.EXECUTION_TIMEOUT, origTimeout); } <BUGS> org.testng.Assert.fail("Timeout Exception was not thrown."); <BUGE> } 
public static com.w9jds.marketbot.classes.models.MarketHistory map(org.devfleet.crest.model.CrestMarketHistory history) { <BUGS> return new com.w9jds.marketbot.classes.models.MarketHistory.Builder().setAveragePrice(history.getAveragePrice()).setHighPrice(history.getHighPrice()).setLowPrice(history.getLowPrice()).setOrderCount(history.getOrderCount()).setRecordDate(history.getDate()).setVolume(history.getVolume()).build(); <BUGE> } 
private static com.orientechnologies.orient.core.record.impl.ODocument getDocument(final com.orientechnologies.orient.core.db.record.OIdentifiable id, final boolean forceReload) { <BUGS> <BUGE> final com.orientechnologies.orient.core.record.impl.ODocument doc = id.getRecord(); if ((doc != null) && forceReload) { try { doc.reload(); } catch (com.orientechnologies.orient.core.exception.ORecordNotFoundException e) { } } return doc; } 
@java.lang.Override public void onResume() { super.onResume(); com.arnastofnun.idordabanki.Globals g = ((com.arnastofnun.idordabanki.Globals) (this.getActivity().getApplication())); <BUGS> if (g == null) { android.util.Log.v("Globals", "null"); }else if ((g.getGlossaryState()) == null) { android.util.Log.v("GlossaryState", "null"); }else { resumeGlossaryState(g); }  <BUGE> } 
public static void onSaveComplete() { wdl.WDL.minecraft.getSaveLoader().flushCache(); wdl.WDL.saveHandler.flush(); wdl.WDL.worldClient = null; <BUGS> wdl.WDL.minecraft.addScheduledTask(new java.lang.Runnable() { @java.lang.Override public void run() { wdl.WDL.minecraft.renderGlobal.loadRenderers(); } }); <BUGE> wdl.WDL.worldLoadingDeferred = false; if (wdl.WDL.downloading) { wdl.WDLMessages.chatMessageTranslated(WDLMessageTypes.INFO, "wdl.messages.generalInfo.saveComplete.startingAgain"); wdl.WDL.loadWorld(); return ; } wdl.WDLMessages.chatMessageTranslated(WDLMessageTypes.INFO, "wdl.messages.generalInfo.saveComplete.done"); } 
private static float[] toEffectiveTableColumnWidth(float[] tableColumnWidth) { <BUGS> float[] result = tableColumnWidth.clone(); <BUGE> for (int i = 0; i < (result.length); ++i) { <BUGS> result[i] += com.itextpdf.layout.minmaxwidth.MinMaxWidthUtils.getEps(); <BUGE> } return result; } 
@java.lang.Override public java.lang.String onPlaceholderRequest(org.bukkit.entity.Player pPlayer, java.lang.String pIdentifier) { if (pPlayer == null) return "";  switch (pIdentifier) { case "clantag" : <BUGS> return clanTagProvider.getClanTag(pPlayer.getUniqueId()); <BUGE> case "clantag_custom_design" : <BUGS> java.lang.String clanTag = clanTagProvider.getClanTag(pPlayer.getUniqueId()); <BUGE> if (!(clanTag.isEmpty())) return CLAN_MATCHER.replaceFirst(clanTag);  return clanTag; default : return null; } } 
<BUGS> private static org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter[] createParameters(int numberOfParameters) { <BUGE> org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter[] params = new org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter[numberOfParameters]; for (int i = 0; i < numberOfParameters; i++) { params[i] = new uk.ac.diamond.scisoft.analysis.fitting.functions.Parameter(); } return params; } 
@java.lang.Override public org.spongepowered.api.command.args.CommandElement[] getArguments() { <BUGS> return new org.spongepowered.api.command.args.CommandElement[]{ org.spongepowered.api.command.args.GenericArguments.requiringPermission(org.spongepowered.api.command.args.GenericArguments.optionalWeak(org.spongepowered.api.command.args.GenericArguments.onlyOne(org.spongepowered.api.command.args.GenericArguments.player(org.spongepowered.api.text.Text.of(playerKey)))), permissions.getPermissionWithSuffix("other")) , org.spongepowered.api.command.args.GenericArguments.optional(org.spongepowered.api.command.args.GenericArguments.onlyOne(org.spongepowered.api.command.args.GenericArguments.bool(org.spongepowered.api.text.Text.of(b)))) }; <BUGE> } 
public void removeIfDeadStone(goGame.Index i) { java.util.Set<goGame.Index> checkedStones = new java.util.HashSet<>(); if (isDead(i, checkedStones)) { checkedStones.add(i); if (!(checkedStones.isEmpty())) { deadStone = true; } for (goGame.Index deadStones : checkedStones) { stones.put(deadStones, goGame.Board.Status.NONE); <BUGS> GUI.removeStone(i.getX(), i.getY()); <BUGE> } } } 
@java.lang.Override public models.Account getByEmailAndPassword(models.Account account) { models.Account acc = ((models.Account) (getBaseCriteria().add(org.hibernate.criterion.Restrictions.eq("email", account.getEmail())).uniqueResult())); <BUGS> if ((acc != null) && (repositories.BCrypt.checkpw("password", account.getPassword()))) { <BUGE> return account; } return null; } 
private static void getEmailRecursive(java.io.File emailFile, java.util.List<java.io.File> emailFiles) { <BUGS> if ((!(emailFile.isDirectory())) && (!(emailFile.isHidden()))) { emailFiles.add(emailFile); <BUGE> }else { for (java.io.File subFile : emailFile.listFiles()) { com.expee.ml.ExtractEmails.getEmailRecursive(subFile, emailFiles); } } } 
@java.lang.Override protected void onPostExecute(java.lang.String result) { switch (status) { case userRecoverableError : activity.startActivityForResult(userException.getIntent(), BaseActivity.REQUEST_PERMISSION); <BUGS> break; <BUGE> case requestFailed : reactToError(); break; case okay : break; default : throw new java.lang.UnsupportedOperationException("Not implemented this case"); } } 
public static void clearNotification() { android.content.Intent intent = new android.content.Intent(com.project.nghicv.readingbook.RBApp.getInstance(), com.project.nghicv.readingbook.receiver.NotificationPublisher.class); <BUGS> android.app.PendingIntent sender = android.app.PendingIntent.getBroadcast(com.project.nghicv.readingbook.RBApp.getInstance(), com.project.nghicv.readingbook.util.PreferenceUtil.getNotificationId(com.project.nghicv.readingbook.RBApp.getInstance()), intent, PendingIntent.FLAG_CANCEL_CURRENT); <BUGE> android.app.AlarmManager alarmManager = ((android.app.AlarmManager) (com.project.nghicv.readingbook.RBApp.getInstance().getSystemService(android.content.Context.ALARM_SERVICE))); alarmManager.cancel(sender); } 
<BUGS> public static java.lang.String getAddPropertyDetailsData(java.lang.String address, java.lang.String propertyAge, int PropertyResidentialOrCommercial, int typeOfProperty, java.lang.String postCode) { <BUGE> org.json.JSONObject object = new org.json.JSONObject(); try { object.put("address", address); object.put("age", propertyAge); object.put("category_primary", PropertyResidentialOrCommercial); object.put("category_secondary", typeOfProperty); object.put("postcode", postCode); } catch (org.json.JSONException var8) { var8.printStackTrace(); } return object.toString(); } 
private se.plilja.imcollect.WeightBalancedTree<K>.Node<K> doubleLeft(se.plilja.imcollect.WeightBalancedTree<K>.Node<K> node) { se.plilja.imcollect.WeightBalancedTree<K>.Node<K> L = node.left; se.plilja.imcollect.WeightBalancedTree<K>.Node<K> R = node.right; se.plilja.imcollect.WeightBalancedTree<K>.Node<K> RL = R.left; <BUGS> return node(RL.left.key, node(node.key, L, RL.left), node(R.key, RL.right, R.right)); <BUGE> } 
<BUGS> private void setStyle(int style) { <BUGE> try { boolean success = mMap.setMapStyle(com.google.android.gms.maps.model.MapStyleOptions.loadRawResourceStyle(this, style)); if (!success) { android.util.Log.e(com.task.vasskob.googlemapsrealm.MapsActivity.TAG, "Style parsing failed."); } } catch (android.content.res.Resources e) { android.util.Log.e(com.task.vasskob.googlemapsrealm.MapsActivity.TAG, "Can't find style. Error: ", e); } } 
public void marcarAsistencia(android.view.View v) { progressBar.setVisibility(View.VISIBLE); arqrifa.org.arquitecturarifamobile.layout.AsistenciaActivity.mCommandService = DeviceListActivity.mCommandService; arqrifa.org.arquitecturarifamobile.layout.AsistenciaActivity.mCommandService.write(java.lang.String.valueOf(usuario.getCi())); accionMarcar = true; <BUGS> android.os.SystemClock.sleep(2000); <BUGE> android.content.Intent intent = new android.content.Intent(this, arqrifa.org.arquitecturarifamobile.layout.SplashAsistenciaActivity.class); startActivity(intent); new arqrifa.org.arquitecturarifamobile.layout.AsistenciaActivity.ReunionActualTask(this).execute(usuario.getGeneracion()); } 
public void timedActions() { <BUGS> if ((timer.getTick()) > 1) { <BUGE> timer.tick(); currentTick = timer.getTick(); java.lang.System.out.println(currentTick); } if ((currentTick) == 5) { java.lang.System.out.println("Resetting..."); relay.set(Value.kOff); barrelMotor.set(0.25); } if ((currentTick) == 53) { barrelMotor.set(0); timer.reset(); } } 
private void sendBtnActionPerformed(java.awt.event.ActionEvent evt) { java.lang.String user = userName.getText(); java.lang.String pass1 = new java.lang.String(password1.getPassword()); java.lang.String pass2 = new java.lang.String(password2.getPassword()); boolean success = validateData(user, pass1, pass2); if (!success) { success = validateData(user, pass1, pass2); <BUGS> <BUGE> } <BUGS> java.lang.String newAcctData = (user + " ") + pass1; connectNewUser(newAcctData); <BUGE> } 
public java.lang.String authenticate(java.lang.String input, java.util.List<pekl.gasqueue.com.gasqueue.model.Authenticator> authenticatorList) { clientType = "empty"; for (pekl.gasqueue.com.gasqueue.model.Authenticator authPassword : authenticatorList) { if (input.equals(authPassword.getBarPassword())) { clientType = "bar"; <BUGS> <BUGE> }else if (input.equals(authPassword.getCustomerPassword())) { clientType = "customer"; <BUGS> }else clientType = "empty";  <BUGE>  } return clientType; } 
@java.lang.Override protected void onImageResult(java.lang.String mediaType, android.net.Uri imageUri, java.lang.String imagePath) { simpleDraweeView.setImageURI(imageUri); this.mediaType = mediaType; this.imagePath = imagePath; <BUGS> <BUGE> org.gem.indo.dooit.helpers.crashlytics.CrashlyticsHelper.log(this.getClass().getSimpleName(), "onImageResult", "a successful image result (onboarding)"); } 
@java.lang.Override public martell.com.vice.ArticleAdapter.ViewHolder onCreateViewHolder(android.view.ViewGroup parent, int viewType) { <BUGS> android.content.Context context = parent.getContext(); <BUGE> android.view.LayoutInflater inflater = android.view.LayoutInflater.from(context); config = new com.nostra13.universalimageloader.core.ImageLoaderConfiguration.Builder(parent.getContext()).build(); android.view.View articleView = inflater.inflate(R.layout.recycler_item, parent, false); martell.com.vice.ArticleAdapter.ViewHolder viewHolder = new martell.com.vice.ArticleAdapter.ViewHolder(articleView); android.util.Log.d(martell.com.vice.ArticleAdapter.TAG, "onCreateViewHolder: "); return viewHolder; } 
@java.lang.Override public void onSuccess(int i, cz.msebera.android.httpclient.Header[] headers, byte[] reponseBody) { userS.setAvatar(android.graphics.BitmapFactory.decodeByteArray(reponseBody, 0, reponseBody.length)); <BUGS> (is_finish[0])++; <BUGE> if ((is_finish[0]) == ((userSearch.size()) / 3)) { completeTextView.setAdapter(new com.example.thanhvu.adsfacebook.model.UserSearchAdaper(getContext(), R.id.list_view_status, userSearch)); completeTextView.showDropDown(); } <BUGS> <BUGE> } 
public void loginGoogle(android.view.View view) { showActivityIndicator(); if (!(com.isawabird.Utils.isNetworkAvailable(getApplicationContext()))) { android.widget.Toast.makeText(getApplicationContext(), "Network not available", Toast.LENGTH_SHORT).show(); hideActivityIndicator(); <BUGS> return ; <BUGE> } } 
@javax.annotation.Nullable @java.lang.Override public io.grpc.NameResolver newNameResolver(java.net.URI targetUri, io.grpc.Attributes params) { final io.grpc.NameResolver resolver = delegate.newNameResolver(targetUri, params); <BUGS> <BUGE> return new io.grpc.NameResolver() { @java.lang.Override public java.lang.String getServiceAuthority() { return authorityOverride; }  @java.lang.Override public void start(io.grpc.internal.Listener listener) { resolver.start(listener); }  @java.lang.Override public void shutdown() { resolver.shutdown(); } }; } 
private int getUsersRights() { com.google.firebase.auth.FirebaseUser user = com.google.firebase.auth.FirebaseAuth.getInstance().getCurrentUser(); <BUGS> if (user == null) { <BUGE> return 0; } java.lang.String email = user.getEmail(); com.sunshinator.sharedchecklist.objects.UserRights rights = mCheckList.getAuthorizedUsers().get(email); if (rights == null) { return 0; } return rights.getRights(); } 
@java.lang.Override public void actionPerformed(java.awt.event.ActionEvent e) { if ((passcodeEntered.length()) == 4) resetEntered();  passcodeEntered += e.getActionCommand(); setEntered(passcodeEntered); if ((temporal) != null) { temporal.repaint(); } <BUGS> java.lang.System.out.println(passcodeEntered); <BUGE> } 
@java.lang.Override public com.iouseph.model.User userParse(org.json.JSONObject json) { com.iouseph.model.User user = null; if (json != null) { user = new com.iouseph.model.User(); user.setId(json.getString("id")); user.setPassword(json.getString("password")); user.setUsername(json.getString("username")); <BUGS> user.setPlaylists(this.playlistsParse(json.getJSONArray("playlists"))); <BUGE> } return user; } 
private void endTable() throws java.io.IOException { <BUGS> be.quodlibet.boxable.Table.LOGGER.info("Ending Table"); <BUGE> if (drawLines) { drawLine("Row Bottom Border ", this.margin, this.yStart, (((this.margin) + (width)) + (be.quodlibet.boxable.Table.xSpacing)), this.yStart); } this.tableContentStream.close(); } 
public ontario.accounts.Account removeAccount(java.lang.String numAccTemp) { if (numAccTemp == null) { return null; }else { boolean temp; ontario.accounts.Account temp2; for (int i = 0; i < (acc.size()); i++) { temp = acc.get(i).getAccountNumber().equals(numAccTemp); <BUGS> if (temp == true) { <BUGE> temp2 = acc.get(i); acc.remove(i); return temp2; } } } return null; } 
public void createIngredient(java.lang.String name) throws java.sql.SQLException { connection = myDatabase.getDatabaseConn(); java.sql.PreparedStatement statement = connection.prepareStatement("INSERT INTO ingredient (name) VALUES(?)"); statement.setString(1, name); <BUGS> <BUGE> statement.executeUpdate(); connection.close(); getIngredientByName(name); } 
@org.junit.Test public void getNoMachines() throws java.rmi.RemoteException { com.elastisys.scale.cloudpool.vsphere.client.impl.ManagedEntity[] vms = null; doReturn(vms).when(com.elastisys.scale.cloudpool.vsphere.client.impl.TestStandardVsphereClient.mockInventoryNavigator).searchManagedEntities(anyString()); com.elastisys.scale.cloudpool.vsphere.client.impl.TestStandardVsphereClient.vsphereClient.configure(com.elastisys.scale.cloudpool.vsphere.client.impl.TestStandardVsphereClient.vsphereApiSettings, com.elastisys.scale.cloudpool.vsphere.client.impl.TestStandardVsphereClient.vsphereProvisioningTemplate); java.util.List<com.elastisys.scale.cloudpool.vsphere.client.impl.VirtualMachine> virtualMachines = com.elastisys.scale.cloudpool.vsphere.client.impl.TestStandardVsphereClient.vsphereClient.getVirtualMachines(com.google.common.collect.Lists.newArrayList()); <BUGS> org.junit.Assert.assertEquals(virtualMachines.size(), 0); <BUGE> } 
private org.medipi.medication.Schedule getExistingSchedule(java.time.LocalDate date, org.medipi.medication.Medication medication, java.lang.String patientUuid) { java.util.List<org.medipi.medication.Schedule> existing_schedules = scheduleDAOimpl.findByMedicationAndPatient(medication, patientUuid); for (org.medipi.medication.Schedule schedule : existing_schedules) { <BUGS> if (((schedule.getAssignedEndDate()) == null) || (schedule.getAssignedEndDate().toLocalDate().isAfter(date.plusDays(1)))) { <BUGE> return schedule; } } return null; } 
@java.lang.Override public void run() { org.json.JSONObject data = ((org.json.JSONObject) (args[0])); java.lang.String message; try { message = data.getString("message"); } catch (org.json.JSONException e) { return ; } repository.addMessage(new com.homeservice.mickeycj.chatwithbot.model.Message(com.homeservice.mickeycj.chatwithbot.ChatFragment.IS_BOT, com.homeservice.mickeycj.chatwithbot.ChatFragment.BOT_NAME, message)); <BUGS> updateChat(); <BUGE> } 
@java.lang.Override public void close() throws java.sql.SQLException { if ((connection) != null) { if (com.intrack.transaction.jdbc.JdbcTransaction.log.isDebugEnabled()) { com.intrack.transaction.jdbc.JdbcTransaction.log.debug((("Closing JDBC Connection [" + (connection)) + "]")); } <BUGS> connectionPool.release(connection); <BUGE> } } 
private void removeFromGrid() { markForRegen(); for (net.minecraftforge.common.util.ForgeDirection d : net.minecraftforge.common.util.ForgeDirection.VALID_DIRECTIONS) <BUGS> _network.removeNode(new cofh.lib.util.position.BlockPosition(xCoord, yCoord, zCoord, d).step(d)); <BUGE>  _network.removeConduit(this); _network = null; } 
@org.springframework.web.bind.annotation.RequestMapping(value = "/filterExercise", method = org.springframework.web.bind.annotation.RequestMethod.GET) public java.lang.String filterExercise(org.springframework.ui.Model model, java.lang.String title, java.lang.String label) { if ((title.equals("0")) || (title.equals("1"))) { <BUGS> model.addAttribute("exercises", em.filterExercise(label, label, title, label)); <BUGE> }else { <BUGS> model.addAttribute("exercises", em.filterExercise(label, label, label, title)); <BUGE> } return "listExercises"; } 
@java.lang.Override public void elevate(com.sshtools.forker.client.ForkerBuilder builder, java.lang.Process process, com.sshtools.forker.common.Command command) { builder.command().add(0, "sudo"); <BUGS> if (org.apache.commons.lang.SystemUtils.IS_OS_MAC_OSX) builder.command().add(1, "-A");  <BUGE> builder.environment().put("SUDO_ASKPASS", tempScript.getAbsolutePath()); } 
static boolean cypher(com.intellij.lang.PsiBuilder b, int l) { <BUGS> if (!(com.intellij.lang.parser.GeneratedParserUtilBase.recursion_guard_(b, l, "cypher"))) <BUGE> return false;  <BUGS> int c = com.intellij.lang.parser.GeneratedParserUtilBase.current_position_(b); <BUGE> while (true) { if (!(com.neueda.jetbrains.plugin.graphdb.language.cypher.parser.CypherParser.StatementItem(b, (l + 1)))) break;  <BUGS> if (!(com.intellij.lang.parser.GeneratedParserUtilBase.empty_element_parsed_guard_(b, "cypher", c))) <BUGE> break;  <BUGS> c = com.intellij.lang.parser.GeneratedParserUtilBase.current_position_(b); <BUGE> } return true; } 
private void init() { display = new com.codeclan.display.Display(title, width, height); display.getJFrame().addKeyListener(keyManager); com.codeclan.gfx.Assets.init(); <BUGS> gameCamera = new com.codeclan.gfx.GameCamera(this, 100, 200); <BUGE> handler = new com.codeclan.Handler(this); <BUGS> <BUGE> gameStates = new com.codeclan.state.GameState(handler); menuState = new com.codeclan.state.MenuState(handler); settingsState = new com.codeclan.state.SettingsState(handler); com.codeclan.state.State.setState(gameStates); } 
@java.lang.Override <BUGS> public void add(com.ivstuart.tmud.person.carried.Money money) { <BUGE> java.util.ListIterator<com.ivstuart.tmud.person.carried.SomeMoney> moneyItr = list.listIterator(); while (moneyItr.hasNext()) { com.ivstuart.tmud.person.carried.Money aMoney = ((com.ivstuart.tmud.person.carried.Money) (moneyItr.next())); if (aMoney.isSameType(money)) { aMoney.add(money); if (aMoney.isEmpty()) { moneyItr.remove(); } <BUGS> return ; <BUGE> } } <BUGS> moneyItr.add(money); <BUGE> } 
@java.lang.Override public void render(java.awt.Graphics g) { <BUGS> g.drawImage(com.townrpg.core.tile.Tiles.getSprites().crop(0, 0, 0, 0), ((int) (x)), ((int) (y)), null); <BUGE> } 
public static java.util.Set<java.lang.String> getArtifactNamesFromProject(final java.util.List<com.amazonaws.codepipeline.jenkinsplugin.OutputArtifact> outputArtifacts) { java.util.Set<java.lang.String> artifactNames = new java.util.HashSet<>(); for (final com.amazonaws.codepipeline.jenkinsplugin.OutputArtifact outputArtifact : outputArtifacts) { <BUGS> if (!(outputArtifact.getArtifactName().isEmpty())) { <BUGE> artifactNames.add(outputArtifact.getArtifactName()); } } return artifactNames; } 
public void put(java.lang.String column, java.lang.Object value) { if (value == null) { currentState.put(column, new org.hibernate.ogm.datastore.spi.TupleOperation(column, null, PUT_NULL)); <BUGS> <BUGE> } <BUGS> currentState.put(column, new org.hibernate.ogm.datastore.spi.TupleOperation(column, value, PUT)); <BUGE> } 
private de.be4.classicalb.core.parser.rules.PSubstitution createConditionalFailAssignment(de.be4.classicalb.core.parser.rules.TIdentifierLiteral ruleLiteral) { final java.lang.String ctName = (ruleLiteral.getText()) + (de.be4.classicalb.core.parser.rules.RulesTransformation.RULE_COUNTER_EXAMPLE_VARIABLE_SUFFIX); <BUGS> de.be4.classicalb.core.parser.rules.PPredicate ifCondition = new de.be4.classicalb.core.parser.rules.ANotEqualPredicate(de.be4.classicalb.core.parser.rules.RulesTransformation.createIdentifier(ctName), new de.be4.classicalb.core.parser.rules.AEmptySetExpression()); <BUGE> return new de.be4.classicalb.core.parser.rules.AIfSubstitution(ifCondition, createRuleFailAssignment(currentRule.getNameLiteral()), new java.util.ArrayList<de.be4.classicalb.core.parser.rules.PSubstitution>(), null); } 
public static float variance(final float[] array, final int offset, final int length) { final float mean = com.tagtraum.jipes.math.Floats.arithmeticMean(array, offset, length); double sum = 0; for (int i = offset; i < (offset + length); i++) { final float diff = (array[i]) - mean; <BUGS> sum += (diff * diff) / (array.length); <BUGE> } return ((float) (sum)); } 
public void drawImage2(final java.lang.String url, final java.lang.Double offsetX, final java.lang.Double offsetY, final java.lang.Double imageWidth, final java.lang.Double imageHeight) { <BUGS> runCommand(new com.google.gwt.user.client.Command() { @java.lang.Override public void execute() { ctx.drawImage(com.google.gwt.dom.client.ImageElement.as(new com.google.gwt.user.client.ui.Image(url).getElement()), offsetX, offsetY, imageWidth, imageHeight); } }); <BUGE> } 
public com.sedmelluq.discord.lavaplayer.track.AudioTrack getNext() { if ((_playingSong) == null) { <BUGS> <BUGE> _playingSong = _activePlaylist.get(0); return _playingSong; } replacePlayingSong(); _playingSong = _activePlaylist.get(((_activePlaylist.indexOf(_playingSong)) + 1)); return _playingSong; } 
private java.util.Set<java.lang.String> getSystemPropertiesFromTask(io.cloudslang.lang.compiler.modeller.model.Task task) { java.util.Set<java.lang.String> result = new java.util.HashSet<>(); java.util.List<io.cloudslang.lang.compiler.modeller.transformers.Transformer> relevantTransformers = new java.util.ArrayList<>(); relevantTransformers.add(publishTransformer); relevantTransformers.add(aggregateTransformer); result.addAll(getSystemPropertiesFromInOutParam(task.getArguments())); <BUGS> result.addAll(getSystemPropertiesFromPostTaskActionData(task.getPostTaskActionData(), relevantTransformers)); <BUGE> return result; } 
@cucumber.api.java.en.Given(value = "^I am viewing the visual verification activity$") public void iHaveAVisualVerificationActivity() { <BUGS> android.support.test.espresso.Espresso.onView(android.support.test.espresso.matcher.ViewMatchers.withId(R.id.password)).perform(android.support.test.espresso.action.ViewActions.closeSoftKeyboard()); <BUGE> android.content.Intent intent = new android.content.Intent(getActivity(), com.nervousfish.nervousfish.activities.VisualVerificationActivity.class); intent.putExtra(ConstantKeywords.SERVICE_LOCATOR, getCurrentActivity().getIntent().getSerializableExtra(ConstantKeywords.SERVICE_LOCATOR)); getActivity().startActivity(intent); <BUGS> assertEquals(getCurrentActivity().getClass(), com.nervousfish.nervousfish.activities.VisualVerificationActivity.class); <BUGE> } 
public void logOut(java.lang.String username, java.lang.String pwd) { <BUGS> final com.carlocation.comm.messaging.AuthMessage authMsg = new com.carlocation.comm.messaging.AuthMessage(username, pwd); authMsg.mAuthType = AuthMessage.AuthMsgType.AUTH_LOGOUT_MSG; <BUGE> mNativeService.sendMessage(authMsg, new com.carlocation.comm.ResponseListener() { @java.lang.Override public void onResponse(com.carlocation.comm.messaging.Notification noti) { authMsg.onResponseHandler(noti); } }); } 
private java.util.ArrayList<java.lang.Double> userInputToValues(java.util.ArrayList<android.widget.TextView> input) { java.util.ArrayList<java.lang.Double> values = new java.util.ArrayList<java.lang.Double>(); for (android.widget.TextView t : input) { <BUGS> values.add(java.lang.Double.parseDouble(t.getText().toString())); <BUGE> } return values; } 
@java.lang.Override protected java.lang.Void doInBackground(java.lang.Integer... params) { <BUGS> int time = params[0]; <BUGE> while (time > 0) { try { java.lang.Thread.sleep(1000); } catch (java.lang.InterruptedException e) { } time--; <BUGS> android.util.Log.d("asdf", (" " + time)); <BUGE> } publishProgress(); return null; } 
private void showSavedProfilePicture() { byte[] array = dbHandler.retrieveByteArrayFromDb(); <BUGS> android.graphics.Bitmap bitmap = convertByteArrayToBitmap(array); if (bitmap == null) { <BUGE> profilePic.setImageResource(defaultPic); }else { <BUGS> profilePic.setImageBitmap(bitmap); bitmap.recycle(); <BUGE> } } 
public void update(int x, int y, double r, java.util.ArrayList<zombienado_v1.server.serverUnits.ServerZombie> zombies, java.util.ArrayList<java.awt.Point> walls) { if ((health) <= 0) { isDead = true; } int xOld = this.x; int yOld = this.y; this.x += x; this.y += y; <BUGS> this.r += r; <BUGE> checkWallsCollisions(xOld, yOld, walls); checkDamageTaking(zombies); } 
public boolean outsideBoard(int boardRows) { for (tetris.Point loc : tetris.Grids.allPointsOf(this)) { if (((piece.cellAt(loc)) != (EMPTY)) && ((asAbs(loc).row) >= boardRows)) { return true; } } <BUGS> <BUGE> } 
@java.lang.Override public void onCreate(android.os.Bundle savedInstanceState) { <BUGS> <BUGE> super.onCreate(savedInstanceState); <BUGS> io.fabric.sdk.android.Fabric.with(this, new com.crashlytics.android.Crashlytics()); <BUGE> handler = new android.os.Handler(); runnable = new java.lang.Runnable() { public void run() { android.content.Intent intent = new android.content.Intent(com.cmmakerclub.iot.cmmciotswitch.activity.SplashActivity.this, com.cmmakerclub.iot.cmmciotswitch.activity.MainActivity.class); startActivity(intent); finish(); } }; } 
protected void addNearbyDevice(android.bluetooth.BluetoothDevice device) { if (!(hasPeer(device.getName()))) { <BUGS> <BUGE> nearbyDevices.add(device); registerRemoteDevice(device); <BUGS> android.util.Log.d(interdroid.swan.crossdevice.swanplus.bluetooth.BTManager.TAG, ("added new device " + (device.getName()))); <BUGE> }else { android.util.Log.d(interdroid.swan.crossdevice.swanplus.bluetooth.BTManager.TAG, (("device " + (device.getName())) + " already present, won't add")); } } 
@java.lang.Override public void stateChanged(javax.swing.event.ChangeEvent e) { int alphaValue = sliderAlpha.getValue(); java.lang.String hexColor = textFieldHexColor.getText(); if ((hexColor.length()) > 6) { hexColor = (convertAlphaValue2HexStr(alphaValue)) + (hexColor.substring(((hexColor.length()) - 6))); }else { hexColor = (convertAlphaValue2HexStr(alphaValue)) + hexColor; } <BUGS> invalidateUI(alphaValue, hexColor); <BUGE> } 
public void addNode(controllers.Node node) { int floor = node.getFloor(); allNodes.get((floor - 1)).put(node.getKey(), node); if (!(allNodes.get((floor - 1)).containsKey(node.getKey()))) { java.lang.System.out.println("COLLECTIONOFNODES: addNode(): added node but then couldn't find in hashmap"); }else { <BUGS> java.lang.System.out.println("COLLECTIONOFNODES: addNode(): successfully added node to hashmap"); <BUGE> } } 
@java.lang.Override protected void showInformationControl(org.eclipse.swt.graphics.Rectangle subjectArea) { super.showInformationControl(subjectArea); org.eclipse.jface.internal.text.InternalAccessor accessor = getInternalAccessor(); org.eclipse.jface.text.IInformationControl iControl = accessor.getCurrentInformationControl(); if ((iControl != null) && ((fInformationControlCloser) != null)) { <BUGS> ControlInformationSupport.DISPLAY_EVENT_HANDLER.stop(previousManager); ControlInformationSupport.DISPLAY_EVENT_HANDLER.start(this); <BUGE> } } 
private java.util.List<java.lang.Integer> getFPtypeCorrespondence(cz.fidentis.comparison.procrustes.ProcrustesAnalysis pa) { java.util.List<java.lang.Integer> correspondence = new java.util.ArrayList<>(); for (java.lang.Integer ft : config.keySet()) { <BUGS> if (!(config.get(ft).isActive())) <BUGE> continue;  <BUGS> if (pa.isPointActive(ft)) { correspondence.add(ft); } <BUGE> } return correspondence; } 
public static java.lang.String escape(java.lang.String html, boolean encode) { if (!encode) { html = html.replaceAll("&(?!#?\\w+;)", "&amp;"); }else { <BUGS> html = html.replace("&", "&amp"); <BUGE> } return html.replace("<", "&lt;").replace(">", "&gt;").replace("\"", "&quot;").replace("'", "&#39;"); } 
private void _undoRemoveInconsistentValues(java.util.Map<solver.csp.Variable, java.util.List<java.lang.Integer>> map) { <BUGS> <BUGE> for (java.util.Map.Entry<solver.csp.Variable, java.util.List<java.lang.Integer>> neighbor : map.entrySet()) { for (java.lang.Integer value : neighbor.getValue()) { neighbor.getKey().addLegalValue(value); } } } 
public static void main(java.lang.String[] args) { java.lang.String s; if ((args.length) > 0) { s = args[0]; }else { s = "etc/server.properties"; } org.alicebot.server.net.AliceServer aliceserver = new org.alicebot.server.net.AliceServer(s); java.lang.Runtime.getRuntime().addShutdownHook(new java.lang.Thread("Shutdown Thread") { public void run() { org.alicebot.server.net.AliceServer.shutdown(); } }); <BUGS> aliceserver.startup(); <BUGE> } 
public void disconnect(boolean expected) { <BUGS> sendToClient(pixyel_backend.xml.XML.createNewXML("disconnected").toString()); <BUGE> lookingForInput = false; listener.shutdown(); clientAliveTimer.cancel(); pixyel_backend.connection.socket.SocketServer.disconnect(this, socket.hashCode()); try { socket.shutdownInput(); socket.shutdownOutput(); socket.close(); } catch (java.lang.Exception e) { pixyel_backend.Log.logError(("Could not close the socket of the client " + (getName())), pixyel_backend.connection.socket.SocketClient.class); } } 
@org.junit.Test public void testGenerateName_withThreeToTwentyLength() { for (int i = 3; i < 20; i++) { <BUGS> final java.lang.String result = grammarNameGenerator.generateName(0); org.junit.Assert.assertTrue(((result.length()) >= 1)); <BUGE> } } 
public void removeStatistic(com.frdfsnlght.inquisitor.Statistic statistic) { synchronized(statistics) { if (!(statistics.containsKey(statistic.getName()))) { return ; } <BUGS> statistic.setGroup(null); <BUGE> statistics.remove(statistic.getName()); } for (com.frdfsnlght.inquisitor.Statistics s : stats.values()) { s.removeStatistic(statistic); } } 
@java.lang.Override public void mouseClicked(java.awt.event.MouseEvent e) { hu.gehorvath.lampsv.core.Preset selectedPres = jlUsedPresets.getSelectedValue(); int currentIndex = usedListModel.indexOf(selectedPres); <BUGS> if (currentIndex < (usedListModel.size())) { <BUGE> usedListModel.removeElement(selectedPres); usedListModel.add((currentIndex + 1), selectedPres); } } 
@java.lang.Override public void onClick(android.view.View view) { <BUGS> if ((!(description.equals(""))) && ((selection) == 1)) { <BUGE> uploadImage(); }else android.widget.Toast.makeText(getApplicationContext(), "Please fill the form", Toast.LENGTH_SHORT).show();  } 
<BUGS> boolean conditionIsTrue(utilties.models.Game game) { int data1 = getData(this.data1, game); int data2 = getData(this.data2, game); <BUGE> switch (this.operator) { case LESS_THAN : return data1 < data2; case GREATER_THAN : return data1 > data2; case LESS_THAN_OR_EQUAL_TO : return data1 <= data2; case GREATER_THAN_OR_EQUAL_TO : return data1 >= data2; case EQUALS : return data1 == data2; default : return false; } } 
@java.lang.Override public void execute() throws java.lang.Exception { java.lang.System.out.print(""); java.lang.System.out.flush(); java.lang.System.out.print(prompt); <BUGS> try (java.io.BufferedReader reader = new java.io.BufferedReader(new java.io.InputStreamReader(java.lang.System.in))) { while (!(isReady(reader.readLine()))) { java.lang.System.out.print(prompt); } } <BUGE> } 
public java.lang.String mapPath(java.lang.String path) { if ((mapList) == null) { return path; } for (int i = 0; i < (mapList.length); i++) { <BUGS> if ((mapList[i][0].equals(path)) || (new java.lang.String(((mapList[i][0]) + "/")).equals(path))) { <BUGE> return mapList[i][1]; } } return path; } 
@org.junit.Test public void testAsUTCTimeInTimeZone() { slash.common.type.CompactCalendar calendar = slash.common.type.CompactCalendar.fromMillis(1000000); slash.common.type.CompactCalendar inTimeZone = calendar.asUTCTimeInTimeZone(java.util.TimeZone.getTimeZone("GMT+2")); assertEquals(calendar.getCalendar().getTimeInMillis(), 1000000); <BUGS> assertEquals(inTimeZone.getCalendar().getTimeInMillis(), (1000000 + (((2 * 60) * 60) * 1000))); <BUGE> assertEquals("UTC", inTimeZone.getTimeZoneId()); } 
<BUGS> public Item[] toArray() { <BUGE> @java.lang.SuppressWarnings(value = "unchecked") Item[] items = ((Item[]) (new java.lang.Object[size])); Deque<Item>.Node n = first; for (int i = 0; i < (items.length); i++) { items[i] = n.item; n = n.next; } return items; } 
public void writeData(java.lang.String data) { android.content.SharedPreferences sharedPref = getActivity().getPreferences(Context.MODE_PRIVATE); java.lang.String contents = sharedPref.getString(day, ""); <BUGS> <BUGE> android.content.SharedPreferences.Editor editor = sharedPref.edit(); <BUGS> editor.putString(day, ((contents + "\n") + (data.substring(0, ((data.length()) - 13))))); <BUGE> editor.commit(); } 
@java.lang.Override public java.util.List<com.pilotproject.entity.User> findUsers(java.lang.String username, java.lang.String email, java.util.Date fromDate, java.util.Date toDate) { if (com.pilotproject.utils.PilotUtils.isEmpty(fromDate)) { <BUGS> fromDate = new java.util.Date(); <BUGE> } if (com.pilotproject.utils.PilotUtils.isEmpty(toDate)) { <BUGS> toDate = new java.util.Date(); <BUGE> } java.lang.String userLogged = com.pilotproject.utils.PilotUtils.getUserNameLogeed(); return this.userRepository.findUsersAndUsernameNot(userLogged, username, email, fromDate, toDate); } 
public void setTable(javafx.scene.control.TableView<com.eiko.back.table.CellValue> content) { this.table = content; this.setContent(content); <BUGS> <BUGE> int l = ((table.getItems().size()) + 1) * 40; this.setMinHeight(l); this.setMaxHeight(l); this.setPrefHeight(l); } 
@org.springframework.context.annotation.Bean public org.springframework.cache.guava.GuavaCacheManager getCacheManager() { <BUGS> org.springframework.cache.guava.GuavaCacheManager gcm = new org.springframework.cache.guava.GuavaCacheManager(); <BUGE> gcm.setAllowNullValues(false); <BUGS> com.google.common.cache.CacheBuilder<java.lang.Object, java.lang.Object> builder = com.google.common.cache.CacheBuilder.newBuilder(); <BUGE> builder.concurrencyLevel(16); builder.expireAfterAccess(15, java.util.concurrent.TimeUnit.MINUTES); builder.initialCapacity(256); builder.maximumWeight(getMaxMemory()); builder.weigher(new fi.phz.cib.WebApplicationConfiguration.ByteSizeWeight()); gcm.setCacheBuilder(builder); return gcm; } 
@java.lang.Override public void onRequestPermissionsResult(int requestCode, @android.support.annotation.NonNull java.lang.String[] permissions, @android.support.annotation.NonNull int[] grantResults) { <BUGS> super.onRequestPermissionsResult(requestCode, permissions, grantResults); if (requestCode == (me.esca.fragments.CookFragment.REQUEST_EXTERNAL_STORAGE)) { if ((grantResults[0]) == (android.content.pm.PackageManager.PERMISSION_GRANTED)) { android.content.Intent photoPickerIntent = new android.content.Intent(android.content.Intent.ACTION_PICK); photoPickerIntent.setType("image/*"); startActivityForResult(photoPickerIntent, RESULT_LOAD_IMG); }else { android.widget.Toast.makeText(getActivity(), "PERMISSION_DENIED", Toast.LENGTH_SHORT).show(); } <BUGE> } } 
public void reset() { <BUGS> <BUGE> android.util.Log.d(app.park.com.vr.VrVideoActivity.TAG, "[TEST] ========== RESET =============="); mVrVideoView.seekTo(0); app.park.com.vr.VrVideoActivity.currTime = 0; android.util.Log.d(app.park.com.vr.VrVideoActivity.TAG, ("[TEST] current position = " + (mVrVideoView.getCurrentPosition()))); resetScore(); <BUGS> app.park.com.vr.VrVideoActivity.isGameOver = false; <BUGE> } 
@java.lang.Override public void run() { while (proc.isAlive()) { } java.lang.System.out.println("end"); java.util.List<main.Tuple<?, ?>> recorded = sessionController.end(); startFrame.setState(java.awt.Frame.NORMAL); isRecording = false; gui.StartScreen.RCDRFileSelect fileSelect = new gui.StartScreen.RCDRFileSelect(this); fileSelect.save(recorded); java.lang.System.out.println("ended"); <BUGS> <BUGE> } 
@java.lang.Override public void addSettingsStateListener(@org.jetbrains.annotations.NotNull com.intellij.platform.WebProjectGenerator.SettingsStateListener stateListener) { final javax.swing.text.JTextComponent editorComponent = ((javax.swing.text.JTextComponent) (sdkPathComboWithBrowse.getComboBox().getEditor().getEditorComponent())); editorComponent.getDocument().addDocumentListener(new com.intellij.ui.DocumentAdapter() { protected void textChanged(javax.swing.event.DocumentEvent e) { stateListener.stateChanged(((validate()) == null)); } }); <BUGS> <BUGE> } 
private void locate() { mLocationOption = new com.amap.api.location.AMapLocationClientOption(); mLocationOption.setLocationMode(AMapLocationMode.Hight_Accuracy); mLocationOption.setNeedAddress(true); <BUGS> mLocationOption.setOnceLocation(false); <BUGE> mLocationOption.setWifiActiveScan(true); mLocationOption.setMockEnable(false); <BUGS> mLocationOption.setInterval(2000); <BUGE> mLocationClient.setLocationOption(mLocationOption); mLocationClient.startLocation(); } 
@com.google.common.eventbus.Subscribe public void attemptToMatchSubmissionWithStudent(edu.pdx.cs410J.grader.poa.POASubmissionSelected selected) { for (int i = 0; i < (students.size()); i++) { edu.pdx.cs410J.grader.Student student = students.get(i); if (submitterMatchesStudent(selected.getSubmission(), student)) { <BUGS> this.view.setSelectedStudentIndex(i); <BUGE> fireStudentSelectedEvent(student); return ; } } <BUGS> <BUGE> } 
@java.lang.Override public void removeRange(int fromPosition, int itemCount) { <BUGS> indi.yume.tools.adapter_renderer.recycler.RendererAdapter.notifyItemRangeRemoved(fromPosition, itemCount); <BUGE> for (int i = 0; i < itemCount; i++) if (fromPosition < (contentList.size())) contentList.remove(fromPosition);   <BUGS> <BUGE> indi.yume.tools.adapter_renderer.recycler.RendererAdapter.notifyItemRangeChanged(0, getItemCount()); } 
private void invokeFCMService() { android.util.Log.d(com.lognsys.kalrav.LoginActivity.TAG, "Rest invokeFCMService "); <BUGS> android.util.Log.d(com.lognsys.kalrav.LoginActivity.TAG, ("Rest invokeFCMService KalravApplication.getInstance().getPrefs().getDevice_token() " + (com.lognsys.kalrav.util.KalravApplication.getInstance().getPrefs().getDevice_token()))); <BUGE> if ((com.lognsys.kalrav.util.KalravApplication.getInstance().getPrefs().getDevice_token()) == null) { android.content.Intent i = new android.content.Intent(this, com.lognsys.kalrav.FCM.FCMInstanceIdService.class); startService(i); } <BUGS> <BUGE> } 
public void addPiece(org.casestudy.target.chess.pieces.Piece piece) { java.util.List<org.casestudy.target.chess.pieces.Piece> typePieces = this.pieces.get(piece.getPieceType()); if (typePieces == null) { typePieces = new java.util.ArrayList<org.casestudy.target.chess.pieces.Piece>(); <BUGS> <BUGE> } typePieces.add(piece); } 
public org.giiwa.core.bean.Helper.V copy(java.util.Map<java.lang.String, java.lang.Object> jo, java.lang.String... names) { if ((jo == null) || (names == null)) return this;  for (java.lang.String s : names) { if (jo.containsKey(s)) { java.lang.Object o = jo.get(s); <BUGS> if (org.giiwa.core.bean.X.isEmpty(o)) { set(s, X.EMPTY); }else { <BUGE> set(s, o); } } } return this; } 
public void onBackStackChanged() { if (!(approvalWarned)) { android.widget.RelativeLayout container = ((android.widget.RelativeLayout) (findViewById(R.id.approvalLay))); android.widget.RelativeLayout.LayoutParams parameters = new android.widget.RelativeLayout.LayoutParams(RelativeLayout.LayoutParams.MATCH_PARENT, RelativeLayout.LayoutParams.WRAP_CONTENT); android.widget.TextView warning = new android.widget.TextView(container.getContext()); warning.setText("You cannot disapprove after approving!"); parameters.addRule(RelativeLayout.BELOW, R.id.approvalText); container.addView(warning, parameters); <BUGS> approvalWarned = !(approvalWarned); <BUGE> } } 
@java.lang.SuppressWarnings(value = "unchecked") <BUGS> private void takeFromInternalBuffer(long startTS, backtype.storm.tuple.Tuple input) { <BUGE> operator.merger.MergerEntry nextReady = sharedChannels.getNextReadyObj(("" + (thisTask)), channelID); while (nextReady != null) { <BUGS> process(startTS, new backtype.storm.tuple.TupleImpl(context, ((java.util.List<java.lang.Object>) (nextReady.getO())), input.getSourceTask(), input.getSourceStreamId())); <BUGE> nextReady = sharedChannels.getNextReadyObj(("" + (thisTask)), channelID); } } 
@java.lang.Override public void onChildChanged(com.google.firebase.database.DataSnapshot dataSnapshot, java.lang.String s) { java.lang.System.out.println(("key of order firebase ----> " + key)); java.lang.String key1 = dataSnapshot.getRef().getKey(); <BUGS> java.lang.String valid = dataSnapshot.getRef().child("validation").toString(); java.lang.System.out.println(("key of order changed in database " + valid)); <BUGE> if (key.equals(key1)) { progressWheel.setVisibility(View.INVISIBLE); textView.setText("Your order is ready !!! "); } } 
public void run() { try { while (true) { ms.sem.acquire(1); ms.mutex.acquire(); <BUGS> java.lang.String a = ms.list.removeFirst().toString(); gf.GenFile(a); <BUGE> java.lang.System.out.println("Consumer read"); ms.mutex.release(); } } catch (java.lang.Exception x) { x.printStackTrace(); } } 
@java.lang.Override public void run() { try (java.io.OutputStream obuf = java.nio.channels.Channels.newOutputStream(pipe.sink())) { <BUGS> t.transform(source, new javax.xml.transform.stream.StreamResult(java.lang.System.out)); <BUGE> obuf.flush(); } catch (java.lang.Exception ex) { ex.printStackTrace(); } } 
public java.util.List<java.lang.String> getText() { java.util.List<java.lang.String> list; if (pl.betoncraft.betonquest.config.Config.getString("config.journal.reversed_order").equalsIgnoreCase("true")) { list = com.google.common.collect.Lists.reverse(texts); }else { <BUGS> list = texts; <BUGE> } <BUGS> list = new java.util.ArrayList<>(list); if ((mainPage) != null) list.add(0, mainPage);  <BUGE> return list; } 
@java.lang.Override void initNeo(org.gbif.checklistbank.nub.source.NeoUsageWriter writer) throws java.lang.Exception { <BUGS> try (java.sql.Connection c = clb.connect()) { final org.postgresql.copy.CopyManager cm = new org.postgresql.copy.CopyManager(((org.postgresql.core.BaseConnection) (c))); <BUGE> cm.copyOut((((("COPY (" + (("SELECT usage.id, usage.parent_fk, usage.basionym_fk, usage.rank, usage.is_synonym, usage.status, usage.nom_status, node.scientific_name" + " FROM name_usage usage join name node ON name_fk=node.id") + " WHERE dataset_key = '")) + (source.key)) + "')") + " TO STDOUT WITH NULL ''"), writer); org.gbif.checklistbank.nub.source.ClbUsageIteratorNeo.LOG.info("Loaded nub source data {} with {} usages into neo4j", source.name, writer.getCounter()); } } 
private void addChip(java.lang.String communication) { if ((mNachoTextView) != null) { mNachoTextView.append(communication); <BUGS> int start = mNachoTextView.getText().toString().indexOf(communication); <BUGE> int last = mNachoTextView.getText().length(); mNachoTextView.chipify(start, last); }else android.util.Log.e(mx.com.quiin.contactpicker.ui.ContactPickerFragment.TAG, "mNachoTextView is null");  } 
public void setUserName(java.lang.String userName) { if (userName == null) throw new java.lang.IllegalArgumentException("UserName must not be null.");  if ((userName.length()) > 50) throw new java.lang.IllegalArgumentException("UserName is too long.");  if ((userName.length()) < 3) throw new java.lang.IllegalArgumentException("UserName is too short.");  <BUGS> if (userExist()) { throw new java.lang.IllegalArgumentException("UserName already exists"); } <BUGE> this.userName = userName; } 
@java.lang.Override public boolean equals(final java.lang.Object obj) { if ((this) == obj) return true;  if (obj == null) return false;  if ((getClass()) != (obj.getClass())) return false;  org.sqlproc.sample.simple.model.BillingDetails other = ((org.sqlproc.sample.simple.model.BillingDetails) (obj)); <BUGS> if (((id) == null) || (!(id.equals(other.id)))) <BUGE> return false;  return true; } 
@java.lang.Override public void setSelectedIndex(final int index) { programmaticTextChange = true; if (index > (-1)) { getUiReference().select(index); }else { getUiReference().deselect(getUiReference().getSelectionIndex()); } programmaticTextChange = false; if (!(getUiReference().isFocusControl())) { <BUGS> fireInputChanged(getUiReference().getText()); <BUGE> } } 
public void generateDispText(java.lang.CharSequence c) { <BUGS> if (((currValue) == null) || ((currValue) == "0")) { <BUGE> currValue = ((java.lang.CharSequence) (c)); }else if (c == "C") { currValue = "0"; }else { currValue = (currValue.toString()) + c; }  } 
@java.lang.Override public void run() { int counter = 0; while (counter < (this.num)) { <BUGS> java.lang.System.out.println(((("Get: " + (java.lang.Thread.currentThread().getName())) + " From ") + (bucket)), getToken()); <BUGE> counter++; } } 
public modelo.Jogada movimentaMonstro(modelo.Monstro aMonstro, modelo.Posicao posicao) { modelo.Posicao antiga = this.getPosicao(aMonstro.getPosicao().getLinha(), aMonstro.getPosicao().getColuna()); antiga.setOcupante(null); <BUGS> aMonstro.getPosicao().setOcupante(null); <BUGE> posicao.setOcupante(aMonstro); aMonstro.setPosicao(posicao); return new modelo.Jogada(posicao.getLinha(), posicao.getColuna(), TipoJogada._moverMonstro, aMonstro, null, null); } 
public void start() { new java.lang.Thread(() -> { while (true) { final java.net.Socket socket; try { socket = accept(); <BUGS> <BUGE> } catch (java.io.IOException ex) { ex.printStackTrace(); return ; } <BUGS> new java.lang.Thread(() -> workWithSocket(socket)).start(); <BUGE> } }).start(); } 
private void makePay(int vendorID, java.lang.String vendorSecretKey, java.lang.String accountID, java.lang.String amount) { uz.agr.agrsdk.AGRBilling agr = new uz.agr.agrsdk.AGRBilling(); if (amount.equals("")) { agr.preparePayment(this, vendorID, vendorSecretKey, accountID); }else { <BUGS> agr.preparePayment(this, vendorID, accountID, vendorSecretKey, java.lang.Integer.parseInt(amount)); <BUGE> } } 
public void delLabel(int label) { for (java.util.Map<java.util.List<org.projectfloodlight.openflow.protocol.instruction.OFInstruction>, java.lang.Integer> m : switchLabelMap.values()) { <BUGS> for (java.util.List<org.projectfloodlight.openflow.protocol.instruction.OFInstruction> list : m.keySet()) { java.lang.Integer i = m.get(list); if (i == null) { java.lang.System.out.println("111111"); } if ((i.intValue()) == label) { m.remove(list); break; <BUGE> } } } net.floodlightcontroller.savi.forwarding.mpls.MPLSLabelManager.labelQueue.add(label); } 
@org.junit.Test public void return_coins_inserted() { org.junit.Assert.assertEquals("INSERT COINS", vendingMachine.check_display()); vendingMachine.insert_coin("Dime"); org.junit.Assert.assertEquals("$0.10", vendingMachine.check_display()); vendingMachine.return_coins(); <BUGS> org.junit.Assert.assertEquals("$0.00", vendingMachine.check_coin_return()); <BUGE> } 
public java.lang.String getFreemakerTemplate(java.util.HashMap<java.lang.String, java.lang.Object> model) { java.lang.StringBuffer buf = new java.lang.StringBuffer(); try { <BUGS> buf.append(org.springframework.ui.freemarker.FreeMarkerTemplateUtils.processTemplateIntoString(freemarkerConfiguration.getTemplate("fm_template.txt"), buf)); <BUGE> return buf.toString(); } catch (java.lang.Exception e) { java.lang.System.err.println(("Exception occured while processing fmtemplate: " + (e.getMessage()))); } return ""; } 
protected void move(int x) { moving = true; moveLocation = x; <BUGS> if (x < (this.getx())) { <BUGE> facingRight = false; left = true; right = false; }else <BUGS> if (x > (this.getx())) { <BUGE> facingRight = true; left = false; right = true; }  } 
@java.lang.Override public void onActivityResult(int requestCode, int resultCode, android.content.Intent resultIntent) { super.onActivityResult(requestCode, resultCode, resultIntent); switch (requestCode) { case diy.uigeneric.sample.SampleListActivity.REQUEST_ADD : <BUGS> <BUGE> case diy.uigeneric.sample.SampleListActivity.REQUEST_VIEW : if (resultCode == (android.app.Activity.RESULT_OK)) { loadData(); listView.getAdapter().notifyDataSetChanged(); } break; } } 
public boolean equals(java.lang.Object o) { if (o instanceof FoodItem) { FoodItem i = ((FoodItem) (o)); return (this.itemName.equals(i.itemName)) && (this.tagCode.equals(i.tagCode)); }else <BUGS> if (o instanceof java.lang.String) { return this.tagCode.equals(((java.lang.String) (o))); <BUGE> }  return false; } 
@java.lang.Override public void onItemClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) { <BUGS> android.util.Log.i("debug", "I'm here"); <BUGE> android.content.Intent intent = new android.content.Intent(this, com.example.leo.projet.Activities.MovieActivity.class); intent.putExtra("movie", ((java.io.Serializable) (aa.getItem(position)))); startActivity(intent); } 
public void ignoreBlank() { if (!(Settings.ignoreBlanks)) return ;  <BUGS> javafx.scene.control.Label current = ((javafx.scene.control.Label) (application.VirtualCursor.getCurrentElement(application.VirtualCursor.gridPane))); while ((current != null) && ((current.getText().charAt(0)) == ' ')) { <BUGE> moveCursor(); } } 
public static int[] barcodeToIntArray(java.lang.String barcode) { <BUGS> <BUGE> java.lang.String[] barcodeArray = barcode.trim().split("(?!^)"); int[] barcodeToInt = new int[barcodeArray.length]; for (int i = 0; i < (barcodeArray.length); i++) { barcodeToInt[i] = java.lang.Integer.parseInt(barcodeArray[i]); } return barcodeToInt; } 
private void initPuzzleOrGetFromExtras() { android.os.Bundle bundle = getIntent().getExtras(); <BUGS> if ((bundle.get("Puzzle")) != null) { <BUGE> puzzle = new com.sudoku.puzzlesolver.Puzzle(((java.lang.Integer[][]) (bundle.get("Puzzle")))); }else { puzzle = new com.sudoku.puzzlesolver.Puzzle(); } } 
@org.junit.Test public void getFileSystem() { java.nio.file.FileSystem fileSystem = s3fsProvider.newFileSystem(S3EndpointConstant.S3_GLOBAL_URI_TEST, com.google.common.collect.ImmutableMap.<java.lang.String, java.lang.Object>of()); org.junit.Assert.assertNotNull(fileSystem); fileSystem = s3fsProvider.getFileSystem(S3EndpointConstant.S3_GLOBAL_URI_TEST, com.google.common.collect.ImmutableMap.<java.lang.String, java.lang.Object>of()); org.junit.Assert.assertNotNull(fileSystem); java.nio.file.FileSystem other = s3fsProvider.getFileSystem(S3EndpointConstant.S3_GLOBAL_URI_TEST); <BUGS> assertSame(fileSystem, other); <BUGE> } 
public engine.network.packet.Packet getContentPacket() { engine.network.packet.Packet out = engine.network.packet.Packet.getNewContentPacket(Packet.MAX_PACKET_SIZE); out.iterator.putNextShortUnsigned(buff.getID()); out.iterator.putNextInt(getDurationLeft()); int mapSize = gndData.getMapSize(); <BUGS> engine.network.packet.Packet gndContent = gndData.getContentPacket(); out.iterator.putNextShortUnsigned((mapSize == 0 ? 0 : gndContent.getSize())); if (mapSize > 0) out.iterator.putNextContentPacket(gndData.getContentPacket());  <BUGE> out.iterator.trimPacket(); return out; } 
public void done(ca.winnipegtrails.winnipegtrails.UserEggLinks object, com.parse.ParseException e) { if (e != null) { if (WinnipegTrailsApplication.APPDEBUG) { android.util.Log.d(WinnipegTrailsApplication.APPTAG, "An error occurred while querying for user eggs", e); } <BUGS> <BUGE> } android.content.Intent intent = new android.content.Intent(this, ca.winnipegtrails.winnipegtrails.EggActivity.class); intent.putExtra("id", egg.getObjectId()); startActivity(intent); } 
private void addItemsToQueue() { for (int i = 0; i < (_numIterations); i++) { java.lang.String message = (("Producer # " + (_id)) + " message # ") + i; <BUGS> _queue.AddToQueue(message); <BUGE> nachos.threads.KThread.yield(); } <BUGS> _listener.ProducerComplete(); <BUGE> } 
public boolean isCollidingRect(pro.Sprite s) { if (isCollideable()) { if (((((getRight()) > (s.getLeft())) && ((getLeft()) < (s.getRight()))) && ((getBottom()) > (s.getTop()))) && ((getTop()) < (s.getBottom()))) { <BUGS> <BUGE> return true; } } return false; } 
<BUGS> public static lv.ailab.lvtb.universalizer.conllu.UDv2Relations advSitToUD(org.w3c.dom.Node aNode) throws javax.xml.xpath.XPathExpressionException { <BUGE> java.lang.String tag = lv.ailab.lvtb.universalizer.transformator.syntax.Utils.getTag(aNode); if (tag.matches("n.*|xn.*|p.*|.*\\[(pre|post|rel).*|mc.*|y.*")) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.OBL;  java.lang.String lemma = lv.ailab.lvtb.universalizer.transformator.syntax.Utils.getLemma(aNode); if ((tag.matches("r.*")) || (lemma.equals("%"))) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.ADVMOD;  if (tag.matches("q.*")) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.DISCOURSE;  <BUGS> lv.ailab.lvtb.universalizer.transformator.syntax.DepRelLogic.warn(aNode); <BUGE> return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.DEP; } 
@javax.annotation.PostConstruct public void initMap() { org.springframework.util.Assert.notEmpty(channels); for (java.lang.String value : channels) { java.lang.String[] v = value.split("-"); <BUGS> channelMap.put(v[0], java.lang.Integer.valueOf(v[0])); <BUGE> } subChannelMap.put(com.city.beijing.config.properties.processConfig.ElementSubChannel.ANDROID_SUBCHANNEL, androidSubChanenl); subChannelMap.put(com.city.beijing.config.properties.processConfig.ElementSubChannel.IOS_SUBCHANNEL, iosSubChannel); subChannelMap.put(com.city.beijing.config.properties.processConfig.ElementSubChannel.WECHAT_SUBCHANNEL, wechatSubChannel); } 
@org.springframework.web.bind.annotation.RequestMapping(value = "sendMessage", produces = "application/json") public java.lang.String sendMessage(@org.springframework.web.bind.annotation.RequestParam(value = "to") java.lang.String to, @org.springframework.web.bind.annotation.RequestParam(value = "from") java.lang.String from, @org.springframework.web.bind.annotation.RequestParam(value = "message") java.lang.String msg) { com.jkchat.models.ChatMessage cm = new com.jkchat.models.ChatMessage(); <BUGS> cm.setFrom(from.trim()); <BUGE> cm.setMessage(msg); <BUGS> userService.putMessage(to, cm); <BUGE> return "success"; } 
private void writeFile(java.io.BufferedWriter fw, java.util.List<java.lang.String> corpus) throws java.io.IOException { for (java.lang.String str : corpus) { <BUGS> fw.write((str + "\n\n")); <BUGE> } fw.write("\n"); fw.flush(); } 
<BUGS> public final void testPreLoadClasses_classNotFound() throws java.lang.Exception { <BUGE> mFrameworkClassLoader.preLoadClasses("not.a.package.", null, null); java.util.HashMap<java.lang.String, java.lang.Class<?>> map = getPrivateClassCache(); assertEquals(0, map.size()); java.util.HashMap<java.lang.String, byte[]> data = getPrivateEntryCache(); assertEquals(0, data.size()); } 
@java.lang.Override public void run() { try { this.keywordsTable.clear(); this.nanorcFile = getClass().getResource(ijfx.ui.display.code.NanorcParser.findFileLanguage(language)).getFile(); nanoRcParseV2(this.nanorcFile); <BUGS> java.lang.System.out.println(this.keywordsTable); <BUGE> } catch (java.lang.NullPointerException e) { java.lang.System.out.println("No nanorc file for this language"); this.keywordsTable = new java.util.Hashtable(); } } 
@java.lang.Override public void setThreadCount(int numThreads) { if ((this.hessian) instanceof org.encog.util.concurrency.MultiThreadable) { ((org.encog.util.concurrency.MultiThreadable) (this.hessian)).setThreadCount(numThreads); <BUGS> }else { throw new org.encog.neural.networks.training.TrainingError((("The Hessian object in use(" + (this.hessian.getClass().toString())) + ") does not support multi-threaded mode.")); } <BUGE> } 
public static void run(Game game, AvalonBot bot) { for (int i = 0; i < (game.pendingMissionPlayers.size()); i++) { <BUGS> bot.sendMessage((((("Type /" + (game.gameId)) + " success or /") + (game.gameId)) + " fail"), game.pendingMissionPlayers.get(i).id); <BUGE> } (game.state)++; game.pmMissionCount = 0; game.missionFailCount = 0; } 
public java.lang.String copy(com.google.auto.value.processor.AutoValueProcessor.Property property) { if ((copyOf) == null) { return property.toString(); } java.lang.String copy = java.lang.String.format(copyOf, property); <BUGS> if ((property.isNullable()) || ((nullableAnnotation) != null)) { <BUGE> copy = java.lang.String.format("(%s == null ? null : %s)", property, copy); } return copy; } 
public void reorderToolbarContainer() { <BUGS> <BUGE> java.util.Collections.sort(com.example.root.myalarmclock.MainActivity.mAlarmList, new java.util.Comparator<com.example.root.myalarmclock.Alarm>() { @java.lang.Override public int compare(com.example.root.myalarmclock.Alarm r1, com.example.root.myalarmclock.Alarm r2) { return r1.getAlarmDate().compareTo(r2.getAlarmDate()); } }); <BUGS> toolbarsContainer.removeAllViews(); <BUGE> for (int x = 0; x < (com.example.root.myalarmclock.MainActivity.mAlarmList.size()); x++) { toolbarsContainer.addView(com.example.root.myalarmclock.MainActivity.mAlarmList.get(x).getToolbar()); } } 
void disconnected(int number) { clientHandlers[number] = null; (connections)--; <BUGS> send(new Message(Message.TYPE_DISCONNECT, number, ((users[(number + 1)]) + " disconnected"), users[(number + 1)])); <BUGE> waitForConnection(number); } 
<BUGS> private static boolean waitNotification() { <BUGE> synchronized(arces.unibo.SEPA.client.tools.SEPATest.sync) { if (arces.unibo.SEPA.client.tools.SEPATest.notificationReceived) return true;  try { arces.unibo.SEPA.client.tools.SEPATest.sync.wait(arces.unibo.SEPA.client.tools.SEPATest.subscribeConfirmDelay); } catch (java.lang.InterruptedException e) { arces.unibo.SEPA.client.tools.SEPATest.logger.info(e.getMessage()); } } return arces.unibo.SEPA.client.tools.SEPATest.notificationReceived; } 
@org.junit.Test public void testArrayPutShort() { <BUGS> gnu.trove.map.TIntObjectMap<java.lang.Object> initial = org.cf.smalivm.VMTester.buildRegisterState(0, new short[1], 1, 0, 2, 66); <BUGE> gnu.trove.map.TIntObjectMap<java.lang.Object> expected = org.cf.smalivm.VMTester.buildRegisterState(0, new short[]{ 66 }); org.cf.smalivm.VMTester.testMethodState(org.cf.smalivm.opcode.TestAPutOp.CLASS_NAME, "TestArrayPutShort()V", initial, expected); } 
public static void addTable(br.com.mvbos.mymer.el.TableElement te, java.lang.StringBuilder sb) { br.com.mvbos.mymer.sync.Differ.entityToScript.setMode(IEntityToScript.Mode.PLAIN); br.com.mvbos.mymer.sync.Differ.entityToScript.addTable(te, sb); <BUGS> short ct = 1; <BUGE> for (br.com.mvbos.mymer.xml.field.Field f : te.getFields()) { br.com.mvbos.mymer.sync.Differ.entityToScript.addField(te, f, (ct++), sb); } } 
public net.anyflow.lannister.message.OutboundMessageStatus setOutboundMessageStatus(int messageId, net.anyflow.lannister.message.OutboundMessageStatus.Status targetStatus) { <BUGS> net.anyflow.lannister.message.OutboundMessageStatus status = outboundMessageStatuses.get(net.anyflow.lannister.message.MessageStatus.key(clientId, messageId)); <BUGE> if (status == null) { return null; } status.targetStatus(targetStatus); return outboundMessageStatuses.put(status.messageId(), status); } 
@java.lang.Override public void onDataChange(com.firebase.client.DataSnapshot snapshot) { com.firebase.client.GenericTypeIndicator<java.util.HashMap<java.lang.String, com.firebase.androidchat.bean.Channel>> t = new com.firebase.client.GenericTypeIndicator<java.util.HashMap<java.lang.String, com.firebase.androidchat.bean.Channel>>() {    }; java.util.HashMap<java.lang.String, com.firebase.androidchat.bean.Channel> map = snapshot.getValue(t); <BUGS> <BUGE> for (com.firebase.androidchat.bean.Channel c : map.values()) { channelList.add(c.getName()); } } 
@cpw.mods.fml.relauncher.SideOnly(value = cpw.mods.fml.relauncher.Side.CLIENT) public void addInformation(net.minecraft.item.ItemStack par1ItemStack, net.minecraft.entity.player.EntityPlayer par2EntityPlayer, java.util.List par3List, boolean par4) { <BUGS> if ((par1ItemStack.getItemDamage()) == 3) { <BUGE> if ((par1ItemStack.stackTagCompound) == null) { par1ItemStack.stackTagCompound = new net.minecraft.nbt.NBTTagCompound(); par1ItemStack.stackTagCompound.setInteger("Uses", 5); } par3List.add(("Uses remaining: " + (par1ItemStack.stackTagCompound.getInteger("Uses")))); } } 
public int aggiungi_puntata_reale() { <BUGS> fiches = (fiches) - (2 * (puntata)); <BUGE> if ((fiches) < 0) { int buf = fiches; fiches = 0; return (puntata) + (buf + (puntata)); } return (puntata) * 2; } 
@org.springframework.web.bind.annotation.RequestMapping(value = "/customer", method = org.springframework.web.bind.annotation.RequestMethod.POST) public java.lang.String postNewCustomer(@javax.websocket.server.PathParam(value = "fullname") java.lang.String fullname, @javax.websocket.server.PathParam(value = "address") java.lang.String address, @javax.websocket.server.PathParam(value = "age") int age, org.springframework.ui.ModelMap modelMap) { <BUGS> <BUGE> customerModel.addNewCustomer(fullname, address, age); java.util.List<bankapp.entity.Customer> customersList = customerService.findAll(); modelMap.addAttribute("customersList", customersList); return "customers"; } 
public void CreateOnClick(android.view.View view) { android.os.Bundle bundle = new android.os.Bundle(); bundle.putString("ID", java.lang.String.valueOf(ID)); <BUGS> switch (view.getId()) { case R.id.createItemBtn : android.content.Intent create = new android.content.Intent(this, com.example.csanders.getfit.Views.Create.class); create.putExtras(bundle); startActivity(create); break; } <BUGE> } 
private org.jruby.runtime.DynamicScope getBlockScope(org.jruby.runtime.ThreadContext context, org.jruby.runtime.Block block, org.jruby.ir.interpreter.InterpreterContext interpreterContext) { org.jruby.runtime.DynamicScope newScope = block.getBinding().getDynamicScope(); if (interpreterContext.pushNewDynScope()) { <BUGS> context.pushScope(block.allocScope(newScope)); <BUGE> }else if (interpreterContext.reuseParentDynScope()) { context.pushScope(newScope); }  return newScope; } 
public void uiautomator_switcher(java.lang.String action, edu.wm.translationengine.classes.StepTestCase s) throws java.lang.Exception { if (action.equals("CLICK")) { tap(s); } if (action.equals("LONG_CLICK")) { longTap(s); } if (action.equals("TYPE")) { <BUGS> <BUGE> } } 
public com.hgames.rhogue.generation.map.DungeonGenerator setGrassObjectives(int percent, int nbPools) { if (100 < percent) throw new java.lang.IllegalStateException(("Percentage of grass must be negative or in [0, 100]. Received: " + percent));  if (0 <= percent) this.grassPercentage = percent;  <BUGS> if (0 <= (grassPatches)) <BUGE> this.grassPatches = nbPools;  return this; } 
private long getNextBuildNumber(@javax.annotation.Nonnull <BUGS> T entry) { <BUGE> if (entry instanceof hudson.model.Queue.Item) { hudson.model.Queue.Task task = ((hudson.model.Queue.Item) (entry)).task; if (task instanceof hudson.model.Job) { return ((hudson.model.Job) (task)).getNextBuildNumber(); } }else if (entry instanceof hudson.model.Run) { return ((hudson.model.Run) (entry)).getParent().getNextBuildNumber(); }  return (jenkins.widgets.HistoryPageEntry.getEntryId(entry)) + 1; } 
<BUGS> private org.apache.commons.math3.linear.RealMatrix getCovariance(java.util.List<? extends macrobase.datamodel.HasMetrics> data) { <BUGE> org.apache.commons.math3.linear.RealMatrix ret = new org.apache.commons.math3.linear.Array2DRowRealMatrix(data.size(), p); int idx = 0; for (macrobase.datamodel.HasMetrics d : data) { ret.setRow(idx, d.getMetrics().toArray()); idx += 1; } <BUGS> return new org.apache.commons.math3.stat.correlation.Covariance(ret).getCovarianceMatrix(); <BUGE> } 
@com.trainingSystem.controller.RequestMapping(value = RestURIConstains.EXPORT_EXCEL, method = RequestMethod.GET) public org.springframework.web.servlet.ModelAndView getExcel(@com.trainingSystem.controller.RequestParam <BUGS> java.lang.Long idExcel) throws java.lang.Exception { java.util.List<com.trainingSystem.controller.ExcelModel> excelModels = ((java.util.List<com.trainingSystem.controller.ExcelModel>) (test.get(idExcel.toString()))); <BUGE> org.springframework.web.servlet.ModelAndView mav = new org.springframework.web.servlet.ModelAndView("excelSender", "excelModels", excelModels); return mav; } 
public void voteThreshold(int downVotedTrack) { <BUGS> if (((((threshold) + (mQueueElementList.get(downVotedTrack).upvoteList.size())) - (mQueueElementList.get(downVotedTrack).downvoteList.size())) <= 0) || (((MainActivity.mWifiDirectActivity.ipsOnNetwork.size()) + 1) == 1)) { deleteTrack(downVotedTrack); <BUGE> } } 
@java.lang.Override public java.lang.String toString() { java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream(); <BUGS> java.io.ObjectOutputStream oos = null; <BUGE> try { oos = new java.io.ObjectOutputStream(baos); oos.writeObject(this); oos.close(); return new java.lang.String(com.infmme.readily.util.Base64Coder.encode(baos.toByteArray())); } catch (java.io.IOException e) { e.printStackTrace(); } return null; } 
private javax.swing.JButton createDeleteAlbumButton() { <BUGS> javax.swing.ImageIcon deleteAlbumIcon = new javax.swing.ImageIcon("icons/folder_delete_32.png"); <BUGE> javax.swing.JButton deleteAlbumButton = new javax.swing.JButton("Remove Album"); deleteAlbumButton.setToolTipText("Delete Selected Album"); deleteAlbumButton.addActionListener(new java.awt.event.ActionListener() { public void actionPerformed(java.awt.event.ActionEvent e) { controller.deleteAlbum(); } }); return deleteAlbumButton; } 
protected static java.lang.String singleSearch(java.lang.String keyword, java.lang.String text, boolean i) { java.lang.String returnString = ""; for (java.lang.String s : poormansgrep.BonusProject.Search.search(keyword, text, i)) { if (s != null) <BUGS> returnString += s + "\n"; <BUGE>  } return returnString; } 
private static float findMax(java.util.ArrayList<java.lang.Float> list, int targetIndex) { float max = -1.0F; <BUGS> for (int a = targetIndex; a < (list.size()); a++) { <BUGE> if ((list.get(a)) > max) { max = list.get(a); } } return max; } 
public static boolean cancel(int index) { if ((index == (-1)) || ((co.theengine.loomdemo.LoomHTTP.clients[index]) == null)) { return false; } co.theengine.loomdemo.LoomHTTP.clients[index].cancelRequests(co.theengine.loomdemo.LoomHTTP._context, true); <BUGS> co.theengine.loomdemo.LoomHTTP.removeClient(index); <BUGE> return true; } 
private void setMessage(final org.apache.logging.log4j.message.Message msg) { if (msg instanceof org.apache.logging.log4j.message.ReusableMessage) { org.apache.logging.log4j.message.ReusableMessage reusable = ((org.apache.logging.log4j.message.ReusableMessage) (msg)); reusable.formatTo(getMessageTextForWriting()); <BUGS> parameters = reusable.swapParameters(parameters); parameterCount = reusable.getParameterCount(); <BUGE> }else { if ((!(org.apache.logging.log4j.core.util.Constants.FORMAT_MESSAGES_IN_BACKGROUND)) && (msg != null)) { msg.getFormattedMessage(); } this.message = msg; } } 
private com.parse.ParseFile downloadImageFromUrl(java.lang.String str, int i) { try { java.net.URL url = new java.net.URL(str); java.io.File facebookImage = UrlToFile(url); return changeBitmapToByteAndSaveInParseFIle(i, facebookImage.getPath()); } catch (java.net.MalformedURLException e) { e.printStackTrace(); <BUGS> } catch (java.io.IOException e) { e.printStackTrace(); <BUGE> } return null; } 
private void init() { for (int i = 1; i <= (levelCount); i++) { levels.add(new world.Level(i)); } backgroundX = java.lang.Integer.parseInt(currentLevel.getWallData(0)); backgroundY = java.lang.Integer.parseInt(currentLevel.getWallData(1)); <BUGS> background = new renderer.Background(0, 0, this, world.Level.getImageData(0)); <BUGE> inventory = new renderer.Texture("Assets/Pictures/Textures/Inventory_l1.png"); c = new vault1.CharacterFolder.Controller(this); } 
public void reduce(org.apache.hadoop.io.Text key, java.lang.Iterable<org.apache.hadoop.io.DoubleWritable> values, cloudCompu.PageRankMr.Context context) throws java.io.IOException, java.lang.InterruptedException { double tmppr = 0.0; <BUGS> double alpha = context.getConfiguration().getDouble("alpha", 0.85); <BUGE> for (org.apache.hadoop.io.DoubleWritable val : values) { tmppr += val.get(); } title.set("Sum"); <BUGS> pr.set(java.lang.String.valueOf((tmppr * alpha))); <BUGE> context.write(title, pr); } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); injectDependencies(savedInstanceState); mBinding = android.databinding.DataBindingUtil.setContentView(this, R.layout.activity_my_stocks); mBinding.setViewModel(mViewModel); checkPlayServicesAvailable(); setupRecyclerView(); <BUGS> checkRefreshing(); <BUGE> checkAddIntent(getIntent()); getSupportLoaderManager().initLoader(com.sam_chordas.android.stockhawk.presentation.mystocks.MyStocksActivity.CURSOR_LOADER_ID, null, this); } 
public void update(long timeElapsed, long nanosPerSecond, double xForces, double yForces) { double secondsElapsed = timeElapsed / nanosPerSecond; x += (velX) * secondsElapsed; y += (velY) * secondsElapsed; velX += (acelX) * secondsElapsed; velY += (acelY) * secondsElapsed; acelX = xForces / (mass); <BUGS> acelY = xForces / (mass); <BUGE> } 
@java.lang.Override public void call(java.lang.Object... args) { java.lang.String receivedMessage = ((java.lang.String) (args[0])); if (receivedMessage.equals("fail")) { }else { <BUGS> mSocket.emit("add_user", receivedMessage, ownerId); <BUGE> mSocket.on(receivedMessage, messageReceiver); mSocket.emit("get_recent_group_messages", ownerId, 20); } android.util.Log.d("GROUPFUNCTION", receivedMessage); } 
public static void loadDefaultSettignsFile() { try { java.io.File xmlFile = new java.io.File(util.Settings.defaultFile); javax.xml.parsers.DocumentBuilderFactory dbFactory = javax.xml.parsers.DocumentBuilderFactory.newInstance(); javax.xml.parsers.DocumentBuilder dBuilder = dbFactory.newDocumentBuilder(); util.Settings.doc = dBuilder.parse(xmlFile); util.Settings.doc.getDocumentElement().normalize(); } catch (java.lang.Exception e) { <BUGS> e.printStackTrace(); <BUGE> } } 
public void putCharArray(final char[] data) { int l = (data.length) * (com.heerbann.unsafe.UnsafeBuffer.sizeOfChar); putInt(l); ensure(((position) + l)); com.heerbann.unsafe.UnsafeBuffer.unsafe.copyMemory(com.heerbann.unsafe.UnsafeBuffer.toAddress(data), ((pointer) + (position)), l); position += l; <BUGS> <BUGE> } 
public java.util.ArrayList<lexer.Token> tokenize(java.lang.String input) { java.util.ArrayList<lexer.Token> resultingTokens = new java.util.ArrayList<lexer.Token>(); lexer.Token newToken; if (input == null) { java.lang.System.out.println("Input not set!"); return null; } java.util.Collections.sort(token); while ((input.length()) > 0) { newToken = testTokens(input); input = input.substring(newToken.getCompleteLength()); <BUGS> token.add(newToken); <BUGE> } return resultingTokens; } 
@java.lang.Override public nez.parser.vm.MozInst exec(nez.parser.vm.ParserMachineContext sc) throws nez.parser.TerminationException { if ((sc.prefetch()) == (this.byteChar)) { <BUGS> if (((nez.parser.vm.Moz86.BinaryMachine) && ((this.byteChar) == 0)) && (sc.eof())) { <BUGE> return this.next; } sc.move(1); } return this.next; } 
private void showWarning() { if (((toastWidget) == null) && ((getContext()) != null)) { toastWidget = new bei.m3c.widgets.ToastWidget(getContext(), getContext().getString(R.string.tv_warning), getActivity().findViewById(android.R.id.content)); } <BUGS> toastWidget.flash(); <BUGE> } 
public void closeUDP() { if ((mMulticastSocket) != null) { <BUGS> java.net.MulticastSocket s = mMulticastSocket; mMulticastSocket = null; <BUGE> try { <BUGS> s.leaveGroup(mMulticastAddress); <BUGE> } catch (java.io.IOException e) { e.printStackTrace(); } <BUGS> s.close(); <BUGE> } } 
@org.junit.Test public void testRemoveThing_IsCalled_Once() throws java.lang.Exception { tvao.mmad.itu.tingle.Model.Thing thing = new tvao.mmad.itu.tingle.Model.Thing(); org.mockito.Mockito.when(_sut.removeThing(thing.getId())).thenReturn(true); <BUGS> _sut.removeThing(thing); <BUGE> org.mockito.Mockito.verify(_sut, org.mockito.Mockito.atLeastOnce()).removeThing(thing.getId()); } 
public final void start(final android.view.View v) { ((com.github.mrm1st3r.cards.Cards) (getApplication())).setConnections(playerList); <BUGS> <BUGE> for (com.github.mrm1st3r.connection.bluetooth.SimpleBluetoothConnection conn : playerList.keySet()) { conn.write("start"); conn.pause(); } serv.close(); android.content.Intent intent = new android.content.Intent(this, com.github.mrm1st3r.cards.ingame.Gamemaster.class); startActivity(intent); } 
public void init() { this.body.setLinearVelocity(0.0F, 0.0F); <BUGS> this.body.setTransform((((spawnPosition.x) - ((getWidth()) / 2.0F)) / (com.greenbatgames.rubyred.util.Constants.PTM)), (((spawnPosition.y) - ((getHeight()) / 2.0F)) / (com.greenbatgames.rubyred.util.Constants.PTM)), 0.0F); <BUGE> jumped = true; facingRight = true; grounded = false; crouched = false; disableCollisionFor = 0.0F; } 
@java.lang.Override public java.util.List<com.lftechnology.vyaguta.resource.entity.Contract> list(java.lang.String[] dates) { java.time.LocalDate pointOne = java.time.LocalDate.parse(dates[0], Constant.DATE_FORMAT_DB); java.time.LocalDate pointTwo = java.time.LocalDate.parse(dates[1], Constant.DATE_FORMAT_DB); <BUGS> java.util.List<com.lftechnology.vyaguta.resource.entity.Contract> contracts = em.createQuery("SELECT c from Contract c WHERE c.endDate BETWEEN :pointOne AND :pointTwo order by c.endDate desc", com.lftechnology.vyaguta.resource.entity.Contract.class).setParameter("pointOne", pointOne).setParameter("pointTwo", pointTwo).getResultList(); return contracts; <BUGE> } 
private void findJourneyPics(com.xiangyou.product.Product.Day day, int index, java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.String>> journeyPicsMap) { java.util.Map<java.lang.String, java.lang.String> pictures = journeyPicsMap.get(((com.xiangyou.product.ProductRepository.PREFIX_DAY) + index)); <BUGS> day.addAllPictures(pictures); for (java.util.Map.Entry<java.lang.String, java.lang.String> entry : pictures.entrySet()) { day.addPicture(entry.getKey(), entry.getValue()); <BUGE> } } 
@java.lang.SuppressWarnings(value = "unchecked") <BUGS> protected java.lang.Class<T>[] getParameterTypes(java.lang.Object... propertyValues) { <BUGE> java.lang.Class<T>[] parameterTypes = ((java.lang.Class<T>[]) (java.lang.reflect.Array.newInstance(java.lang.Class.class, propertyValues.length))); for (int i = 0; i < (propertyValues.length); i++) { parameterTypes[i] = ((java.lang.Class<T>) (propertyValues[i].getClass())); } return parameterTypes; } 
@java.lang.Override public void onClick(android.content.DialogInterface dialog, int which) { progressDialog.show(); java.lang.String imageUrl = fbUser.getPhotoUrl().toString(); updateImageInDatabase(imageUrl); <BUGS> com.bumptech.glide.Glide.with(this).load(imageUrl).bitmapTransform(new com.example.mjokic.quizapp.utils.GlideCircleTransformation(this)).diskCacheStrategy(DiskCacheStrategy.ALL).into(((android.widget.ImageView) (findViewById(R.id.navDrawerAvatar)))); <BUGE> progressDialog.hide(); } 
boolean setMapSize(int x, int y) { if ((x < 2) || (x > 8)) { return false; }else { if ((x > 4) && (y < 8)) { return false; }else if ((y > 50) || (y < 5)) { return false; }  } <BUGS> size = x; <BUGE> return true; } 
public void replace(int position, java.lang.Object content) { <BUGS> <BUGE> if (position > (nodes)) return ;  Node replace = start; for (int i = 0; i < (position - 1); i++) { replace = replace.getNextNode(); } replace.setContent(content); } 
public <T> T execute(uk.ac.diamond.ispyb.test.IntegrationTestHelper.CheckedFunction<T, S> f) throws java.io.IOException, java.sql.SQLException { uk.ac.diamond.ispyb.api.ConnectionData data = new uk.ac.diamond.ispyb.api.ConnectionData(); S api = factory.buildIspybApi(data.getUrl(), data.getUser(), data.getPassword(), java.util.Optional.of(data.getSchema())); <BUGS> T result = f.apply(api); api.close(); return result; <BUGE> } 
private void initViewPager() { ua.te.hackathon.smartcity2015.ui.intro.IntroActivity.ViewPagerAdapter adapter = new ua.te.hackathon.smartcity2015.ui.intro.IntroActivity.ViewPagerAdapter(getSupportFragmentManager()); adapter.addFragment(ua.te.hackathon.smartcity2015.ui.intro.IntroFragment.newInstance(R.color.blue)); adapter.addFragment(ua.te.hackathon.smartcity2015.ui.intro.IntroFragment.newInstance(R.color.red)); <BUGS> adapter.addFragment(ua.te.hackathon.smartcity2015.ui.intro.IntroFinishFragment.newInstance(R.color.green)); <BUGE> viewPagerInto.setAdapter(adapter); indicatordots.setViewPager(viewPagerInto); } 
public static geogebra.common.awt.Shape getGawtShape(geogebra.common.awt.Shape shape) { <BUGS> geogebra.common.awt.Shape shapeCommon = null; if (shape instanceof geogebra.common.euclidian.GeneralPathClipped) { shapeCommon = ((geogebra.common.euclidian.GeneralPathClipped) (shape)).getGeneralPath(); }else shapeCommon = shape;  if (!(shapeCommon instanceof geogebra.common.awt.geogebra.web.awt.Shape)) <BUGE> return null; <BUGS>  <BUGE> return ((geogebra.common.awt.geogebra.web.awt.Shape) (shapeCommon)).getGawtShape(); } 
private gov.anl.ipns.ViewTools.Components.ViewControls.CompositeContourControl generateContourControls(float minValue, float maxValue, int numLevels, float[] levels, boolean showManualControls) { <BUGS> contourControl = new gov.anl.ipns.ViewTools.Components.ViewControls.CompositeContourControl(getContourPanel(), minValue, maxValue, numLevels, levels, false); <BUGE> contourControl.addActionListener(new java.awt.event.ActionListener() { public void actionPerformed(java.awt.event.ActionEvent event) { if (event.getActionCommand().equals(CompositeContourControl.CONTOURS_CHANGED)) displayChanged();  } }); return contourControl; } 
private java.lang.String getChargeRangeAsString() { java.lang.String charges = ""; <BUGS> for (int i = minCharge; i < (maxCharge); i++) { <BUGE> if (!(charges.isEmpty())) { charges += ","; } charges += i + "+"; } return charges; } 
private void turnOffFlash() { <BUGS> if (isFlashOn) { if (((camera) == null) || ((params) == null)) { return ; } params = camera.getParameters(); params.setFlashMode(Camera.Parameters.FLASH_MODE_OFF); camera.setParameters(params); camera.stopPreview(); isFlashOn = false; imgButtonOnOff.setImageResource(R.drawable.ic_flash_off); <BUGE> } <BUGS> <BUGE> } 
@java.lang.Override public org.talend.core.model.process.IProcess getProcessFromItem(org.talend.core.model.properties.Item item, boolean loadScreenshots) { <BUGS> if (((org.talend.core.model.properties.impl.ProcessItemImpl.class) == (item.getClass())) || ((org.talend.core.model.properties.impl.ProcessItemImpl.class) == (item.getClass().getSuperclass()))) { <BUGE> java.lang.Process process = null; process = new java.lang.Process(item.getProperty()); process.loadXmlFile(loadScreenshots); return process; } return null; } 
private boolean validateTimeRequirement() { util.Util.clearError(lblTimeRequirementError); if (txtTimeRequirement.isMessageDefault()) { return true; } try { int timeRequirement = java.lang.Integer.parseInt(txtTimeRequirement.getText()); <BUGS> if (timeRequirement <= 0) { <BUGE> util.Util.setError(lblTimeRequirementError, "Invalid value, must be positive whole numbers only"); return false; } } catch (java.lang.NumberFormatException e) { util.Util.setError(lblTimeRequirementError, "Invalid value, whole numbers only"); return false; } return true; } 
public static org.jocean.http.Feature[] union(final org.jocean.http.Feature[] features1, final org.jocean.http.Feature... features2) { <BUGS> final java.util.Set<org.jocean.http.Feature> unioned = new java.util.HashSet<>((null != features1 ? java.util.Arrays.asList(features1) : java.util.Collections.<org.jocean.http.Feature>emptyList())); <BUGE> if (null != features2) { for (org.jocean.http.Feature toadd : features2) { <BUGS> unioned.add(toadd); <BUGE> } } return unioned.toArray(org.jocean.http.Feature.EMPTY_FEATURES); } 
private java.lang.String getWordEndingAtPosition(int startingPosition, int atPosition) { java.lang.String startingText = text.substring(startingPosition, atPosition); int lastIndex = startingText.lastIndexOf(" "); if (lastIndex == (-1)) { <BUGS> return ""; <BUGE> }else { return startingText.substring(lastIndex, ((startingText.length()) - 1)).trim(); } } 
<BUGS> public java.util.List<lt.ru.lexio.db.Word> build(int wordCount, int page, java.util.Date toDate, lt.ru.lexio.ui.training.TrainingWordOrder[] wordOrder, lt.ru.lexio.ui.training.TrainingType trainingType) { <BUGE> java.util.List<lt.ru.lexio.db.Word> words = new java.util.ArrayList<>(wordCount); build(wordCount, page, toDate, trainingType, wordOrder, words); return words; } 
lab9.ULLMap<K, V>.Entry get(K k) { if ((k != null) && (k.equals(key))) { return this; } if ((next) == null) { return null; } <BUGS> return next.get(key); <BUGE> } 
@java.lang.Override public void onRouteFound(java.util.List<com.mybus.model.BusRouteResult> results) { cancelProgressDialog(); mMyBusMap.removeChargingPointMarkers(); if ((results == null) || (results.isEmpty())) { showBottomSheetResults(false); mViewPagerAdapter = null; android.widget.Toast.makeText(this, R.string.toast_no_result_found, Toast.LENGTH_LONG).show(); return ; }else { <BUGS> startResultsActivity(((java.util.ArrayList<com.mybus.model.BusRouteResult>) (results))); <BUGE> } } 
<BUGS> public static com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandler newMergeRequestHookTriggerHandler(boolean triggerOnMergeRequest, com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest triggerOpenMergeRequest, boolean skipWorkInProgressMergeRequest, boolean triggerOnPipelineEvent) { <BUGE> if (triggerOnMergeRequest || (triggerOpenMergeRequest != (com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest.never))) { <BUGS> return new com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandlerImpl(com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandlerFactory.retrieveAllowedStates(triggerOnMergeRequest, triggerOpenMergeRequest, triggerOnPipelineEvent), skipWorkInProgressMergeRequest); <BUGE> }else { return new com.dabsquared.gitlabjenkins.trigger.handler.merge.NopMergeRequestHookTriggerHandler(); } } 
public boolean setActiveInstIdx(int instIdx) { programming.Program prog = getActiveProg(); if (((prog != null) && (instIdx >= 0)) && (instIdx <= (prog.getInstructions().size()))) { activeInstIdx = instIdx; return true; <BUGS> <BUGE> } <BUGS> return false; <BUGE> } 
@java.lang.Override public void onClick(android.view.View view) { ar.com.tzulberti.archerytraining.model.tournament.TournamentSerie tournamentSerie = self.tournamentDAO.createNewSerie(self.tournament); if (tournamentSerie == null) { java.lang.System.err.println("TODO XXX PENDING: el usuario no deberia ver el boton en este caso"); return ; } <BUGS> ar.com.tzulberti.archerytraining.fragments.tournament.ViewSerieInformationFragment practiceTestingFragment = ar.com.tzulberti.archerytraining.fragments.tournament.ViewSerieInformationFragment.createInstance(tournamentSerie, true); <BUGE> android.support.v4.app.FragmentManager fragmentManager = activity.getSupportFragmentManager(); fragmentManager.beginTransaction().replace(R.id.container, practiceTestingFragment).commit(); } 
@java.lang.Override public void onClick(android.content.DialogInterface dialog, int which) { android.content.SharedPreferences prefs = mContext.getSharedPreferences("apprater", Context.MODE_PRIVATE); <BUGS> java.lang.Long date_firstLaunch = prefs.getLong("date_firstlaunch", 0); if (date_firstLaunch == 0) { date_firstLaunch = java.lang.System.currentTimeMillis(); } <BUGE> if (editor != null) { editor.putLong("launch_count", 0); editor.putLong("date_firstlaunch", date_firstLaunch); editor.commit(); } dialog.dismiss(); } 
@java.lang.Override public void processResults(org.json.JSONObject result) { int minutes = getTime(result); if (minutes <= (oter.getTime())) { com.joebruzek.oter.utilities.SmsSender.sendText(oter); oterLayer.removeOter(oter); }else { com.joebruzek.oter.utilities.AlarmScheduler.scheduleWakeUp(this, oter, (minutes - (oter.getTime()))); <BUGS> android.util.Log.e("Wakeup", ((minutes - (oter.getTime())) + "")); <BUGE> } this.stopSelf(); } 
private void setupListeners() { queryButton.addActionListener(new java.awt.event.ActionListener() { public void actionPerformed(java.awt.event.ActionEvent click) { javax.swing.JFrame popFrame = new javax.swing.JFrame(); popFrame.setSize(250, 250); popFrame.setContentPane(new data.view.DynamicDataPanel(baseController, "books")); popFrame.setVisible(true); } }); <BUGS> samplePassword.addKeyListener(new data.view.KeyListener() { private boolean isPasting; }); <BUGE> } 
private void requestAd(org.json.JSONArray args, org.apache.cordova.CallbackContext callbackContext) throws org.json.JSONException { <BUGS> android.util.Log.e("tapsell", "requestAd called"); <BUGE> final java.lang.String zoneId = args.getString(0); <BUGS> android.util.Log.e("tapsell", ("requestAd zoneId=" + zoneId)); <BUGE> if (zoneId != null) { zoneCallbacks.put(zoneId, callbackContext); }else { defaultZoneCallback = callbackContext; } ir.tapsell.sdk.TapsellExtraPlatforms.requestAd(cordova.getActivity(), zoneId); } 
@java.lang.Override public void onClick(android.view.View v) { customView.setErase(false); brushDialog = new android.app.Dialog(context); brushDialog.setContentView(R.layout.brush_size_picker); <BUGS> colorDialog.getWindow().setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT)); <BUGE> brushDialog.setCanceledOnTouchOutside(true); brushDialog.show(); } 
public final hu.akarnokd.rxjava2.basetypes.Solo<T> doAfterTerminate(hu.akarnokd.rxjava2.basetypes.Action onAfterTerminate) { hu.akarnokd.rxjava2.basetypes.ObjectHelper.requireNonNull(onAfterTerminate, "onAfterTerminate is null"); <BUGS> return hu.akarnokd.rxjava2.basetypes.Solo.onAssembly(new hu.akarnokd.rxjava2.basetypes.SoloDoOnLifecycle<T>(this, hu.akarnokd.rxjava2.basetypes.Functions.emptyConsumer(), hu.akarnokd.rxjava2.basetypes.Functions.emptyConsumer(), Functions.ERROR_CONSUMER, Functions.EMPTY_ACTION, onAfterTerminate, hu.akarnokd.rxjava2.basetypes.Functions.emptyConsumer(), Functions.EMPTY_LONG_CONSUMER, Functions.EMPTY_ACTION)); <BUGE> } 
@org.junit.Test public void whenModuleHasNoSupplierContact_thenCorrespondingFitnessFeatureShouldBeTrue() { org.corpus_tools.pepper.modules.PepperModule module = org.mockito.Mockito.mock(org.corpus_tools.pepper.modules.PepperModule.class); org.mockito.Mockito.when(module.getSupplierContact()).thenReturn(null); <BUGS> org.assertj.core.api.Assertions.assertThat(new org.corpus_tools.pepper.core.ModuleFitnessChecker(null).checkFitness(module).getFitness(FitnessFeature.HAS_SUPPLIER_CONTACT)).isEqualTo(false); <BUGE> } 
@org.springframework.web.bind.annotation.RequestMapping(value = "/results/test/{testRunId}", method = org.springframework.web.bind.annotation.RequestMethod.GET) public org.springframework.http.ResponseEntity<java.util.List<pl.cloudy.models.ActionResult>> getTestFromAGivenDay(@org.springframework.web.bind.annotation.PathVariable(value = "testRunId") int testRunId) { java.util.List<pl.cloudy.models.ActionResult> testRunResults = actionObjectService.findTestRunResults(testRunId); if (testRunResults.isEmpty()) { return new org.springframework.http.ResponseEntity(org.springframework.http.HttpStatus.NO_CONTENT); } <BUGS> org.springframework.http.HttpHeaders responseHeaders = new org.springframework.http.HttpHeaders(); responseHeaders.set("Access-Control-Allow-Origin", "*"); return new org.springframework.http.ResponseEntity(testRunResults, responseHeaders, org.springframework.http.HttpStatus.OK); <BUGE> } 
private boolean eventTargetsStandardPopup(com.google.gwt.dom.client.NativeEvent event) { com.google.gwt.dom.client.EventTarget target = event.getEventTarget(); if (com.google.gwt.dom.client.Element.is(target)) { <BUGS> return (standardsDropListValues.getElement().isOrHasChild(com.google.gwt.dom.client.Element.as(target))) || (btnStandardsBrowse.getElement().isOrHasChild(com.google.gwt.dom.client.Element.as(target))); <BUGE> } return false; } 
public void showNotificationPopUp(java.lang.String from, java.lang.String msg) { <BUGS> android.content.Intent dialogIntent = new android.content.Intent(ctx, com.android.anurag.notesapp.AlertDialog.class).setFlags(Intent.FLAG_ACTIVITY_NEW_TASK); <BUGE> dialogIntent.putExtra("sender_name", from); dialogIntent.putExtra("msg", msg); dialogIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK); startActivity(dialogIntent); } 
<BUGS> private boolean isDuplicateInCurrCategory(java.util.TreeSet<com.transformuk.bdt.domain.CrawledContent> currContentSet, com.transformuk.bdt.domain.CrawledContent newContent) { <BUGE> boolean isDuplicate = false; java.util.Iterator<com.transformuk.bdt.domain.CrawledContent> iterator = currContentSet.iterator(); while (iterator.hasNext()) { com.transformuk.bdt.domain.CrawledContent existingContent = iterator.next(); if (((newContent.getTitle()) != null) && (existingContent.getTitle().equals(newContent.getTitle()))) { isDuplicate = true; break; } } return isDuplicate; } 
public static com.sl.algorithms.traversal.Node reverseList(com.sl.algorithms.traversal.Node head) { com.sl.algorithms.traversal.Node prev; com.sl.algorithms.traversal.Node curr; com.sl.algorithms.traversal.Node next; prev = null; curr = head; <BUGS> next = null; <BUGE> while (curr != null) { next = curr.next; curr.next = prev; prev = curr; curr = next; } head = prev; return head; } 
private static void deleteValues(java.lang.String tableName, java.lang.Integer ID) { <BUGS> for (java.lang.String s : JSQL.table.get(tableName).get((ID - 1)).keySet()) { JSQL.table.get(tableName).get((ID - 1)).put(s, null); <BUGE> } } 
@java.lang.Override public boolean shouldOverrideUrlLoading(android.webkit.WebView view, java.lang.String url) { android.util.Log.d(com.gsma.mobileconnect.helpers.AuthorizationService.TAG, ("shouldOverrideUrlLoading url=" + url)); boolean status = false; if ((url != null) && (url.startsWith(redirectUri))) { <BUGS> status = true; <BUGE> handleCompletion(view, url); }else { view.loadUrl(url); } return status; } 
private java.util.List<com.google.android.gms.maps.model.LatLng> getWaypoints(java.util.List<com.itis.practice1.model.Place> places) { <BUGS> android.util.Log.d("tag", ((("current: " + (mLatitude)) + "; ") + (mLongitude))); <BUGE> java.util.List<com.google.android.gms.maps.model.LatLng> waypoints = new java.util.ArrayList<>(); waypoints.add(new com.google.android.gms.maps.model.LatLng(mLatitude, mLongitude)); for (com.itis.practice1.model.Place place : places) { waypoints.add(new com.google.android.gms.maps.model.LatLng(place.getLatitude(), place.getLongitute())); } return waypoints; } 
@java.lang.Override public boolean onOptionsItemSelected(android.view.MenuItem item) { switch (item.getItemId()) { case android.R.id.home : <BUGS> this.finish(); <BUGE> return true; case R.id.action_done : saveList(); <BUGS> <BUGE> return true; default : return super.onOptionsItemSelected(item); } } 
<BUGS> public java.util.List<com.example.alex.androidclient.models.DailyStatistics> getDailyStatisticsForSite(int siteId, java.util.Date startDate, java.util.Date finishDate) throws org.json.JSONException { java.util.List<com.example.alex.androidclient.models.DailyStatistics> dailyStatsForSite = new java.util.ArrayList<>(); <BUGE> java.util.List<com.example.alex.androidclient.models.DailyStatistics> dailyStats = new java.util.ArrayList<>(); <BUGS> <BUGE> if (jHelper.getDailyStats().isEmpty()) { com.example.alex.androidclient.helpers.JSONHelper jHelperDailyStats = new com.example.alex.androidclient.helpers.JSONHelper(startDate, finishDate); dailyStats = jHelperDailyStats.getDailyStats(startDate, finishDate); } return dailyStatsForSite; } 
@java.lang.Override public void onClick(android.view.View v) { com.wewow.utils.ShareUtils su = new com.wewow.utils.ShareUtils(this); su.setContent(subject.getTitle()); su.setUrl(subject.getShare_link()); if ((shareBitmap) != null) { <BUGS> su.setPicture(((android.graphics.drawable.BitmapDrawable) (shareBitmap)).getBitmap()); <BUGE> } su.share(); } 
@java.lang.Override @java.lang.SuppressWarnings(value = "unchecked") public V get() throws java.io.IOException { <BUGS> synchronized(monkey) { long ai = MapStore.INSTANCE.get(filer, monkey, keyBytes); if (ai > (-1)) { return ((V) (values[((int) (ai))])); <BUGE> } <BUGS> return null; <BUGE> } <BUGS> <BUGE> } 
<BUGS> public long[] getMembersList() { <BUGE> java.lang.String[] list = this.members.split(","); <BUGS> long[] memberLists = new long[list.length]; for (int i = 0; i < (memberLists.length); i++) memberLists[i] = java.lang.Long.parseLong(list[i]); <BUGE>  return memberLists; } 
public double variance(double[] dataset) { <BUGS> double degreeOfFreedom = (dataset.length) - 1; <BUGE> double var = 0; double mean = mean(dataset); for (int i = 0; i < (dataset.length); i++) { var += java.lang.Math.pow(((dataset[i]) - mean), 2); } var /= degreeOfFreedom; return var; } 
public static void main(java.lang.String[] args) { <BUGS> Map apple2 = new Map("2apples.txt"); Map apple10 = new Map("10apples.txt"); <BUGE> NearestNeighbor solve2 = new NearestNeighbor(apple2); NearestNeighbor solve10 = new NearestNeighbor(apple10); solve2.solve(); solve10.solve(); <BUGS> java.lang.System.out.println(sovle2.getDist()); java.lang.System.out.println(sovle10.getDist()); <BUGE> } 
static int randNum(int min, int max) { java.util.Random rand = new java.util.Random(); <BUGS> <BUGE> int top = (max - min) + 1; if (top <= 0) { top = 1; } int randomInt = (rand.nextInt(top)) + min; return randomInt; } 
@org.junit.Test public void testGenerateOption() { for (int i = 0; i < 10000; i++) { testQuestion1.generateQuestion(4); tests.Fraction answer = testQuestion1.generateAnswer(4); <BUGS> assertFalse(testQuestion1.generateOption(4, answer).checkEquals(testQuestion1.getCorrectAnswer())); <BUGE> } } 
@org.junit.Test public void testOnSelectApproveUserAccess() { controller.configure(mockActionMenu, entityBundle, true, wikiPageId, mockEntityUpdatedHandler); controller.onAction(Action.APPROVE_USER_ACCESS); <BUGS> org.mockito.Mockito.verify(mockApproveUserAccessModal).configure(new java.util.LinkedList<org.sagebionetworks.repo.model.ACTAccessRequirement>(), entityBundle); <BUGE> org.mockito.Mockito.verify(mockApproveUserAccessModal).show(); } 
void onMouseReleased() { <BUGS> java.lang.System.out.println("mouse released"); <BUGE> for (com.dreamteam.villageTycoon.framework.GameObject g : getScene().getObjects()) { if (g instanceof java.lang.Character) { ((java.lang.Character) (g)).setSelected(((java.lang.Character) (g)).getHitbox().collision(selectionRectangle)); } } } 
@java.lang.Override public void onInitializationFailure(com.google.android.youtube.player.YouTubePlayer.Provider provider, com.google.android.youtube.player.YouTubeInitializationResult youTubeInitializationResult) { <BUGS> youtubePlayer = null; <BUGE> if (youTubeInitializationResult.isUserRecoverableError()) { youTubeInitializationResult.getErrorDialog(getActivity(), app.vedicnerd.ytwua.fragment.YoutubePlayerFragment.RECOVERY_DIALOG_REQUEST).show(); }else { if (isAdded()) { android.widget.Toast.makeText(getActivity().getApplicationContext(), getString(R.string.error_init_failure_msg), Toast.LENGTH_SHORT).show(); } } } 
@java.lang.Override public void onSuccess(java.util.ArrayList<com.givekesh.baboon.Utils.Feeds> result) { if (result != null) { if ((result.size()) < 10) { recyclerView.disableLoadMore(); isLoadingMore = false; }else recyclerView.enableLoadMore();  if (isSwipeRefresh) { mFeedsArrayList.clear(); mWaveSwipeRefreshLayout.setRefreshing(false); <BUGS> <BUGE> } if (isFirstLoad) { mFeedsArrayList = result; isFirstLoad = false; }else mFeedsArrayList.addAll(result);  refreshRecycler(); } } 
private boolean needToCheck(android.content.Context context) { <BUGS> java.lang.String date = owo.npc.taipeitechrefined.utility.Utility.getDateString("yyyy-MM-dd", java.util.Calendar.getInstance().getTime()); <BUGE> android.content.SharedPreferences settings = context.getSharedPreferences(MainApplication.SETTING_NAME, Context.MODE_PRIVATE); java.lang.String date_flag = settings.getString(owo.npc.taipeitechrefined.ActivityCheckReceiver.CHECK_FLAG, null); settings.edit().putString(owo.npc.taipeitechrefined.ActivityCheckReceiver.CHECK_FLAG, date).apply(); return !(date.equals(date_flag)); } 
@java.lang.Override public boolean contains(final java.lang.Object o) { if (!(o instanceof java.util.Map.Entry)) return false;  final java.util.Map.Entry<?, ?> e = ((java.util.Map.Entry<?, ?>) (o)); TypeV v = get(e.getKey()); <BUGS> return v.equals(e.getValue()); <BUGE> } 
public boolean collidesWith(cz.cvut.fel.syrovkar.rpgEngine.archetypes.CollisionBox other) { <BUGS> return ((((this.x) < ((other.x) + (other.sizeX))) && (((this.x) + (this.sizeX)) > (other.x))) && ((this.y) < ((other.y) + (other.sizeY)))) && (((this.y) + (this.sizeY)) > (other.y)); <BUGE> } 
public static void main(java.lang.String[] args) { <BUGS> int[] n = new int[]{ 100 , 101 , 22 , 1 , 56 , 5 }; <BUGE> java.lang.System.out.println(java.util.Arrays.toString(n)); HeapSort.heapsort(n); java.lang.System.out.println(java.util.Arrays.toString(n)); } 
public com.radoslav.microclimate.service.entities.User getUserByEmailAndPassword(java.lang.String email, java.lang.String password) throws com.radoslav.microclimate.service.exceptions.MicroclimateException { <BUGS> javax.persistence.EntityManager entityManager = null; <BUGE> try { com.radoslav.microclimate.service.helpers.ValidationUtil.validateEmail(email); com.radoslav.microclimate.service.helpers.ValidationUtil.validatePassword(password); return com.radoslav.microclimate.service.entities.User.findUserByEmailAndPassword(entityManager, email, password); } catch (javax.persistence.NoResultException exception) { throw new com.radoslav.microclimate.service.exceptions.UnauthorizedException("User does not exists."); } catch (javax.persistence.NonUniqueResultException exception) { throw new com.radoslav.microclimate.service.exceptions.InternalServerErrorException("Illegal database content."); } } 
public static void main(java.lang.String[] args) { classifiers.NaiveBayesClassifier classifier = new classifiers.NaiveBayesClassifierImplementation(); try { classifier.train(project.LoadFromSQL.loadFromSQL(new java.io.File("./data/funny_jokes.sql"))); classifier.saveKnowledgeToFile(new java.io.File("./jokes.csv")); } catch (java.io.FileNotFoundException e) { e.printStackTrace(); <BUGS> <BUGE> } } 
private void acceptPhone() { java.net.ServerSocket serverSocket; try { serverSocket = new java.net.ServerSocket(10085); while (true) { java.net.Socket socket = serverSocket.accept(); threads.PhoneServerThread thread = new threads.PhoneServerThread(socket); thread.start(); <BUGS> java.lang.System.out.println(((("Get a Phone Socket ip:" + (socket.getInetAddress())) + "\tport:") + (socket.getPort()))); <BUGE> } } catch (java.io.IOException e) { e.printStackTrace(); } } 
@org.springframework.transaction.annotation.Transactional @java.lang.Override public void saveAbout(java.lang.String projectId, java.lang.String title, java.lang.String description) { edu.asu.spring.quadriga.dto.AboutTextDTO aboutTextDTO = aboutTextDAO.getDTOByProjectId(projectId); <BUGS> <BUGE> aboutTextDTO.setProjectId(projectId); aboutTextDTO.setTitle(title); aboutTextDTO.setDescription(description); aboutTextDAO.saveNewDTO(aboutTextDTO); } 
private ch.bfh.bti7535.w2016.data.Document test(ch.bfh.bti7535.w2016.data.Document document) { <BUGS> int classifiedPositive = 0; int classifiedNegative = 0; <BUGE> for (ch.bfh.bti7535.w2016.algorithm.features.AbstractFeature feature : featurePipeline) { classifiedPositive += calcProbabilityTimesOccurrence(feature, Classification.SENTIMENT_POSITIVE); classifiedNegative += calcProbabilityTimesOccurrence(feature, Classification.SENTIMENT_NEGATIVE); } document.setTestResult((classifiedPositive > classifiedNegative ? ch.bfh.bti7535.w2016.data.Classification.SENTIMENT_POSITIVE : ch.bfh.bti7535.w2016.data.Classification.SENTIMENT_NEGATIVE)); return document; } 
public boolean startAnimation(int radius) { if ((mThumbCurrentRadius) == radius) return false;  mRadius = radius; if ((getHandler()) != null) { resetAnimation(); mRunning = true; getHandler().postAtTime(this, ((android.os.SystemClock.uptimeMillis()) + (com.rey.material.util.ViewUtil.FRAME_DURATION))); <BUGS> }else <BUGE> mThumbCurrentRadius = mRadius; <BUGS>  invalidate(); return true; <BUGE> } 
@javax.annotation.Nonnull private byte[] loadFromServerFirst(java.lang.String id) { try { return loadFromServer(id); } catch (java.lang.Exception serverException) { if ((serverException.getCause()) instanceof org.sonar.api.utils.HttpDownloader.HttpException) { throw serverException; } byte[] cached = loadFromCache(id); if (cached != null) { return cached; } <BUGS> <BUGE> } <BUGS> throw new java.lang.IllegalStateException(org.sonar.batch.bootstrap.WSLoader.FAIL_MSG); <BUGE> } 
@org.junit.Before public void setup() throws java.lang.Exception { java.lang.String admin = java.lang.System.getProperty("is.admin.user"); java.lang.String password = java.lang.System.getProperty("is.admin.passwd"); am = new eu.supersede.integration.api.security.IFAuthenticationManager(admin, password); <BUGS> token = am.getAuthorizationToken("yosu", "yosupass", ""); <BUGE> } 
private void getInitialData() { com.home.pete.aquarium.MessagePayload msg = new com.home.pete.aquarium.MessagePayload(); msg.getHeaterState(); msg.getPumpState(); msg.getTemps(); <BUGS> msg.getWaterLevel(); <BUGE> msg.makeFinal(); com.home.pete.aquarium.Intent i = new com.home.pete.aquarium.Intent("settings-event"); i.putExtra("ACTION", msg.getMessage()); android.support.v4.content.LocalBroadcastManager.getInstance(this).sendBroadcast(i); } 
@java.lang.Override public javax.el.ExpressionFactory getExpressionFactory() { <BUGS> init(); <BUGE> if ((expressionFactory) == null) { <BUGS> <BUGE> synchronized(this) { if ((expressionFactory) == null) { javax.enterprise.inject.spi.BeanManager bm = beanManager(); if (bm == null) { expressionFactory = application.getExpressionFactory(); }else { expressionFactory = bm.wrapExpressionFactory(application.getExpressionFactory()); } } } } return expressionFactory; } 
public boolean check() { <BUGS> java.util.Set<java.lang.Integer> set = new java.util.HashSet<>(); <BUGE> for (java.lang.String cellAsString : cellsAsString) { <BUGS> <BUGE> for (ar.fiuba.tdd.tp1.cell.Cell cellValue : calculateCellList(cellAsString)) { if (!(set.add(java.lang.Integer.parseInt(cellValue.getData())))) { return false; } } } return true; } 
public void valueChanged(javax.swing.event.ListSelectionEvent event) { if (event.getValueIsAdjusting()) { return ; } int[] selectedRows = table.getSelectedRows(); <BUGS> <BUGE> java.lang.String id = ((java.lang.String) (table.getValueAt(selectedRows[0], 0))); java.lang.Double xPosition = eventDataIDPositionMap.get(id.trim()); mainFrame.getGraph().showEventVerticalPosition(xPosition); } 
@java.lang.Override public void service(final javax.servlet.ServletRequest req, final javax.servlet.ServletResponse res) throws java.io.IOException, javax.servlet.ServletException { <BUGS> javax.servlet.http.HttpServletRequest request; javax.servlet.http.HttpServletResponse response; <BUGE> if (!((req instanceof javax.servlet.http.HttpServletRequest) && (res instanceof javax.servlet.http.HttpServletResponse))) { throw new javax.servlet.ServletException("non-HTTP request or response"); } <BUGS> request = ((javax.servlet.http.HttpServletRequest) (req)); response = ((javax.servlet.http.HttpServletResponse) (res)); <BUGE> doGet(request, response); } 
@java.lang.Override public void toggleFullScreen() { try { if (mClearGLWindow.isFullscreen()) { <BUGS> <BUGE> if (((mLastWindowWidth) > 0) && ((mLastWindowHeight) > 0)) mClearGLWindow.setSize(mLastWindowWidth, mLastWindowHeight);  <BUGS> mClearGLWindow.setFullscreen(false); <BUGE> }else { <BUGS> mLastWindowWidth = getWindowWidth(); mLastWindowHeight = getWindowHeight(); <BUGE> mClearGLWindow.setFullscreen(true); } requestDisplay(); } catch (final java.lang.Exception e) { e.printStackTrace(); } } 
@dataClasses.Test public void testCalculateFare() { double pricePerFifthMile = 0.5; double totalFare = 0.0; double overTwoPassengerCharge = 2.0; double dropOffCharge = 2.5; double distance = 10.5; int numberOfPassengers = 5; if (numberOfPassengers > 2) { totalFare = overTwoPassengerCharge * (numberOfPassengers - 2); } <BUGS> totalFare += dropOffCharge + (distance * pricePerFifthMile); <BUGE> assertEquals(13.75, totalFare, 0.1); } 
@java.lang.Override public void onRemoteVideoTrackReceive(com.quickblox.videochat.webrtc.QBRTCSession session, com.quickblox.videochat.webrtc.view.QBRTCVideoTrack videoTrack, java.lang.Integer userID) { remoteVideoView = ((com.quickblox.videochat.webrtc.view.QBGLVideoView) (findViewById(R.id.remoteVideoView))); android.util.Log.d("Track", ("remoteVideoView is " + (remoteVideoView))); <BUGS> org.webrtc.VideoRenderer remouteRenderer = new org.webrtc.VideoRenderer(new com.quickblox.videochat.webrtc.view.VideoCallBacks(remoteVideoView, QBGLVideoView.Endpoint.REMOTE)); videoTrack.addRenderer(remouteRenderer); remoteVideoView.setVideoTrack(videoTrack, QBGLVideoView.Endpoint.REMOTE); android.util.Log.d("Track", "onRemoteVideoTrackReceive() is raned"); <BUGE> } 
@cz.muni.fi.pa165.controller.RequestMapping(value = "/new", method = RequestMethod.GET) <BUGS> public java.lang.String newLoan(@cz.muni.fi.pa165.controller.RequestParam(defaultValue = "0") long bookId, @cz.muni.fi.pa165.controller.RequestParam(defaultValue = "0") long memberId, org.springframework.ui.Model model) { if (bookId > 0) { <BUGE> cz.muni.fi.pa165.controller.BookDTO book = bookFacade.findById(bookId); model.addAttribute("book", book); } <BUGS> if (memberId > 0) { <BUGE> cz.muni.fi.pa165.controller.MemberDTO member = memberFacade.findById(memberId); model.addAttribute("member", member); } model.addAttribute("createLoan", new cz.muni.fi.pa165.controller.CreateLoanDTO()); return "loan/new"; } 
public void onPostExecute(java.lang.String result) { if ((result != null) && (!(result.equals("")))) { java.lang.String campusChar = com.ihwapp.android.model.Curriculum.getCampusChar(campus); android.content.SharedPreferences prefs = com.ihwapp.android.model.Curriculum.ctx.getSharedPreferences(((year) + campusChar), Context.MODE_PRIVATE); prefs.edit().putString("scheduleJSON", result).commit(); <BUGS> boolean success = parseScheduleJSON(); <BUGE> } } 
public java.util.List<core.moves.Move> getLastNMoves(int n) { java.util.List<core.moves.Move> moves = new java.util.ArrayList(this.moveHistory); java.util.Collections.reverse(moves); if ((n > 0) && (n < (this.moveHistory.size()))) <BUGS> moves.subList(0, n); <BUGE>  return moves; } 
private boolean isInTriggerZone(int x, int y) { <BUGS> java.lang.System.out.println("here"); return (((x > (main.SessionController.HITBOX_X.getFirst())) && (x < (main.SessionController.HITBOX_X.getSecond()))) && (y < (main.SessionController.HITBOX_Y.getFirst()))) && (y > (main.SessionController.HITBOX_Y.getSecond())); <BUGE> } 
public Model.Grupa dohvatiGrupuPoIDu(int idGrupa) { org.hibernate.Query query; otvoriSession(); query = hibernateSession.createQuery((("from Grupa as K where K.IDGrupa = '" + idGrupa) + "'")); <BUGS> Model.Grupa odabranaGrupa = ((Model.Grupa) (query.list().get(0))); <BUGE> zatvoriSession(); return odabranaGrupa; } 
@java.lang.Override public void resetPassword(org.envirocar.server.core.entities.User user, java.lang.String verificationCode) throws org.envirocar.server.core.exception.BadRequestException { <BUGS> org.envirocar.server.mongo.entity.MongoPasswordReset status = this.passwordResetDao.getPasswordResetStatus(user); <BUGE> if ((status != null) && (!(status.isExpired()))) { if (status.getCode().equals(verificationCode)) { save(user); }else { throw new org.envirocar.server.core.exception.BadRequestException("Wrong verification code."); } }else { throw new org.envirocar.server.core.exception.BadRequestException("Verification code already expired."); } this.passwordResetDao.remove(status); } 
@java.lang.Override public int compare(com.jwetherell.algorithms.data_structures.IntervalTree.IntervalData<?> arg0, com.jwetherell.algorithms.data_structures.IntervalTree.IntervalData<?> arg1) { <BUGS> if ((arg0.end) < (arg1.end)) <BUGE> return -1;  <BUGS> if ((arg1.end) < (arg0.end)) <BUGE> return 1;  return 0; } 
@java.lang.Override public net.minecraft.item.ItemStack removeStackFromSlot(int i) { if (i >= (inventoryContents.length)) return net.minecraft.item.ItemStack.EMPTY;  <BUGS> if ((inventoryContents[i]) != (net.minecraft.item.ItemStack.EMPTY)) { <BUGE> net.minecraft.item.ItemStack itemstack = inventoryContents[i]; inventoryContents[i] = net.minecraft.item.ItemStack.EMPTY; return itemstack; } return net.minecraft.item.ItemStack.EMPTY; } 
private void showProgressDialog() { if (!(isUserLocationEnabled())) { <BUGS> toggleUserLocation(); <BUGE> } gpsCountdownDialog = new android.app.Dialog(this); gpsCountdownDialog.setContentView(R.layout.dialog_gps_countdown); gpsCountdownDialog.setTitle(getResources().getString(R.string.getting_gps_fix)); gpsCountdownDialog.setCancelable(false); gpsCountdownDialog.show(); mTimer = new java.util.Timer(); doCountDown(); } 
<BUGS> private void fillCart(int elementPosition, int commandCount) { fr.upmc.ihm.restmenu.ImageItem item = getData(commandCount).get(elementPosition); <BUGE> data.add(item); gridAdapterMyCommand = new fr.upmc.ihm.restmenu.GridViewMyCommandAdapter(this, R.layout.grid_mycommand_element, data); <BUGS> if (inCart(elementPosition, commandCount)) { <BUGE> gridAdapterMyCommand.dataGetter().remove(POS); } gridViewMyCommand.setAdapter(gridAdapterMyCommand); } 
public static void main(java.lang.String[] args) { MainInterface.init(); int choice = MainInterface.prompt(); while (true) { MainInterface.performChoice(choice); if (choice == 0) break;  choice = MainInterface.prompt(); } <BUGS> MainInterface.sc.close(); <BUGE> } 
public double getExploit() { if ((context.getActivePlayerId()) == 0) { return (player1Value) / ((numVisits) + (epsilon)); }else { <BUGS> return (1 - (player1Value)) / ((numVisits) + (epsilon)); <BUGE> } } 
@java.lang.Override public void onUpgrade(android.database.sqlite.SQLiteDatabase db, int oldVersion, int newVersion) { android.util.Log.i(at.pardus.android.webview.gm.store.ScriptStoreSQLite.TAG, ((((("Upgrading database " + (at.pardus.android.webview.gm.store.ScriptStoreSQLite.ScriptDbHelper.DB)) + " from version ") + oldVersion) + " to ") + newVersion)); <BUGS> switch (newVersion) { case at.pardus.android.webview.gm.store.ScriptStoreSQLite.ScriptDbHelper.DB_SCHEMA_VERSION_2 : db.execSQL(at.pardus.android.webview.gm.store.ScriptStoreSQLite.ScriptDbHelper.TBL_REQUIRE_CREATE); db.execSQL(at.pardus.android.webview.gm.store.ScriptStoreSQLite.ScriptDbHelper.TBL_RESOURCE_CREATE); break; default : android.util.Log.e(at.pardus.android.webview.gm.store.ScriptStoreSQLite.TAG, (((("Unexpected database upgrade from version" + oldVersion) + " to ") + newVersion) + ". No known upgrade path")); break; <BUGE> } } 
private void fillDefaultAttack() { <BUGS> java.lang.String skillName = "Tackle"; <BUGE> skillPower[0] = 1; skillAgility[0] = 1; skillSpeed[0] = 1; android.widget.Button defaultSkill = ((android.widget.Button) (findViewById(R.id.skill0))); <BUGS> setButtonText(skillName, skillPower[0], skillAgility[0], skillSpeed[0], defaultSkill); <BUGE> } 
private boolean canGenerateRangeQuery(boolean isUniqueIndex, java.util.List<net.royqh.easypersist.generator.SingleProperty> indexProperties) { if (isUniqueIndex) { for (net.royqh.easypersist.generator.SingleProperty singleProperty : indexProperties) { <BUGS> if ((!(net.royqh.easypersist.utils.TypeUtils.isRangeTypeProperty(singleProperty))) && (!(net.royqh.easypersist.utils.TypeUtils.isStringType(singleProperty)))) { return false; <BUGE> } } <BUGS> <BUGE> } return true; } 
@java.lang.Override public void doDetection(java.util.Collection<? extends de.leifaktor.robbie.api.controllers.collision.Collideable> collideables) { <BUGS> collideables.stream().flatMap(( c1) -> collideables.stream().map(( c2) -> makePair(c1, c2))).filter(( pair) -> (pair.distance()) <= (limit)).forEach(( pair) -> pair.collide(provider)); <BUGE> } 
public void caseframesChanged(clojure.lang.APersistentSet addedcfs, java.lang.Boolean clear) { if (clear) { edu.buffalo.cse.sneps3.gui.business.Caseframe.clearCaseframes(); <BUGS> for (edu.buffalo.cse.sneps3.gui.business.IView i : views) { i.cfUpdate(new java.util.ArrayList<edu.buffalo.cse.sneps3.gui.business.Caseframe>(), true); } return ; <BUGE> } java.util.ArrayList<edu.buffalo.cse.sneps3.gui.business.Caseframe> c = edu.buffalo.cse.sneps3.gui.business.Caseframe.createCaseframes(addedcfs); for (edu.buffalo.cse.sneps3.gui.business.IView i : views) { <BUGS> i.cfUpdate(c, false); <BUGE> } } 
<BUGS> void execute(final java.util.Collection<org.sleuthkit.autopsy.ingest.IngestServiceAbstract> services, final org.sleuthkit.datamodel.Image image) { java.util.Collection<org.sleuthkit.datamodel.Image> images = new java.util.ArrayList<org.sleuthkit.datamodel.Image>(); <BUGE> images.add(image); org.sleuthkit.autopsy.ingest.IngestManager.logger.log(java.util.logging.Level.INFO, ("Will enqueue image: " + (image.getName()))); execute(services, images); } 
public static models.Account authenticate(java.lang.String email, java.lang.String password) { models.Account account = models.Account.find.where().eq("email", email).findUnique(); <BUGS> <BUGE> if (org.mindrot.jbcrypt.BCrypt.checkpw(password, account.password)) { return account; } return null; } 
public void addAvailableLevel(int i, int numStars, app.Game g) { view.AvailableLevelView av = new view.AvailableLevelView(i); if (numStars != (-1)) { <BUGS> java.lang.System.out.println(numStars); <BUGE> av.unlockLevel(numStars); addListenerToButton(i, g); } levels.add(av); scrollablePanel.add(av); } 
private void initBlocks(android.content.Context context) { <BUGS> for (int i = 0; i < ((com.waterfall.thomaswatson.theprovider.PlayerArea.blockXAmount) * (com.waterfall.thomaswatson.theprovider.PlayerArea.blockYAmount)); i++) { com.waterfall.thomaswatson.theprovider.Block block = new com.waterfall.thomaswatson.theprovider.Block(context); int yPos = 0; if ((i % (com.waterfall.thomaswatson.theprovider.PlayerArea.blockXAmount)) == 0) { block.setYPosition((yPos++)); <BUGE> } <BUGS> block.setXPosition((i % (com.waterfall.thomaswatson.theprovider.PlayerArea.blockXAmount))); blocks.add(block); <BUGE> } } 
private static java.io.File writeHex(de.neemann.assembler.asm.Program p, java.io.File name) throws de.neemann.assembler.expression.ExpressionException, java.io.IOException { if (name != null) { java.io.File f = de.neemann.assembler.gui.Main.makeFilename(name, ".asm", ".hex"); try (java.io.PrintStream ps = new java.io.PrintStream(f, "utf-8")) { p.traverse(new de.neemann.assembler.asm.formatter.HexFormatter(ps)); } return f; } <BUGS> return name; <BUGE> } 
@java.lang.Override public boolean onNavigationItemSelected(@android.support.annotation.NonNull android.view.MenuItem item) { switch (item.getItemId()) { case R.id.navigation_home : return true; case R.id.navigation_dashboard : intent = new android.content.Intent(this, com.example.sky.environment.TinTuc.class); startActivity(intent); return true; <BUGS> case R.id.navigation_notifications : intent = new android.content.Intent(this, com.example.sky.environment.ThongTin.class); return true; <BUGE> case R.id.menu : intent = new android.content.Intent(this, com.example.sky.environment.Future.class); startActivity(intent); return true; } return false; } 
public static java.lang.String getStringFromExcelCell(org.apache.poi.ss.usermodel.Cell cell) { java.lang.String ret = ""; try { if ((org.apache.poi.ss.usermodel.Cell.CELL_TYPE_NUMERIC) == (cell.getCellType())) { ret = "" + ((long) (cell.getNumericCellValue())); }else { ret = cell.toString(); } } catch (java.lang.Exception e) { <BUGS> e.printStackTrace(); <BUGE> } return ret; } 
@java.lang.Override public void onCommandDataMessageReceived(com.tenkiv.tekdaqc.ATekdaqc tekdaqc, com.tenkiv.tekdaqc.communication.message.ABoardMessage message) { if ((mMessengerList.size()) > 0) { com.tenkiv.tekdaqc.android.application.service.Bundle dataBundle = new com.tenkiv.tekdaqc.android.application.service.Bundle(); dataBundle.putString(TekCast.DATA_MESSSAGE_TEKDAQC, tekdaqc.getSerialNumber()); dataBundle.putSerializable(TekCast.DATA_MESSSAGE, message); com.tenkiv.tekdaqc.android.application.service.Message dataMessage = com.tenkiv.tekdaqc.android.application.service.Message.obtain(); dataMessage.what = com.tenkiv.tekdaqc.android.application.util.TekCast.TEKDAQC_COMMAND_MESSAGE; dataMessage.setData(dataBundle); <BUGS> sendMessageToRegisteredListeners(dataMessage); <BUGE> } } 
public int read(java.io.InputStream in, int offset, int byteCount) throws java.io.IOException { <BUGS> if (((_bytes.length) + offset) < byteCount) { <BUGE> byte[] newBytes = new byte[byteCount + offset]; java.lang.System.arraycopy(_bytes, 0, newBytes, 0, _bytes.length); _bytes = newBytes; } _size = in.read(_bytes, offset, byteCount); return _size; } 
private void addOptionWithArg(org.apache.commons.cli.Options options, java.lang.String longOptionName, java.util.Optional<java.lang.String> shortOptionName, boolean required, java.lang.String description) { if (isChangable(longOptionName)) { <BUGS> options.addOption(org.apache.commons.cli.Option.builder(shortOptionName.orElse(null)).longOpt(com.teradata.tempto.runner.TemptoRunnerCommandLineParser.PACKAGE_OPTION).hasArg().required(required).desc(description).build()); <BUGE> } } 
public java.lang.Object createSingleValue(final java.lang.Object... param) { try { return com.orientechnologies.orient.core.metadata.schema.OType.convert(param[0], keyType.getDefaultJavaType()); } catch (java.lang.Exception e) { <BUGS> com.orientechnologies.common.exception.OException ex = com.orientechnologies.common.exception.OException.wrapException(new com.orientechnologies.orient.core.index.OIndexException(((("Invalid key for index: " + (param[0])) + " cannot be converted to ") + (keyType))), e); throw ex; <BUGE> } } 
public static java.lang.String protectAction(java.lang.String originAction) { <BUGS> <BUGE> if (originAction.startsWith("_VA_")) { return originAction; } java.lang.String newAction = com.lody.virtual.client.env.SpecialComponentList.PROTECTED_ACTION_MAP.get(originAction); if (newAction == null) { newAction = (com.lody.virtual.client.env.SpecialComponentList.PROTECT_ACTION_PREFIX) + originAction; } return newAction; } 
@java.lang.Override public zildo.fwk.script.context.LocaleVarContext clone() { try { if ((locales.size()) > 0) { zildo.fwk.script.context.LocaleVarContext cloned = ((zildo.fwk.script.context.LocaleVarContext) (super.clone())); <BUGS> cloned.involvedVariables.clear(); <BUGE> cloned.cloneLocales(this); return cloned; }else { return this; } } catch (java.lang.CloneNotSupportedException e) { throw new java.lang.RuntimeException("Unable to clone this context !"); } } 
public void dump(java.io.DataOutputStream out) throws java.io.IOException { super.dump(out); <BUGS> out.writeInt(high); <BUGE> out.writeInt(low); <BUGS> <BUGE> for (int i = 0; i < (switchAddresses.length); i++) { out.writeShort(switchAddresses[i]); out.writeShort(switchBranchTargetIndexes[i]); } } 
public void reduce(org.apache.hadoop.io.Text inputKey, java.util.Iterator<org.apache.hadoop.io.Text> inputVals, org.apache.hadoop.mapred.OutputCollector<org.apache.hadoop.io.Text, slmt.courses.cp.hw3.step1.PageInfo> outputCollector, org.apache.hadoop.mapred.Reporter reporter) throws java.io.IOException { slmt.courses.cp.hw3.step1.PageInfo info = new slmt.courses.cp.hw3.step1.PageInfo(); <BUGS> long nodeCount = reporter.getCounter(NodeCounters.NODE_COUNTER).getValue(); info.setRank((1.0 / ((double) (nodeCount)))); <BUGE> while (inputVals.hasNext()) info.addOutLink(inputVals.next().toString());  outputCollector.collect(inputKey, info); } 
private void takeScreenshotFor(java.lang.String logLine) { com.android.ddmlib.RawImage rawImage; try { rawImage = device.getScreenshot(); } catch (java.lang.Exception e) { return ; } if (rawImage == null) { return ; } <BUGS> java.util.Map<java.lang.String, java.lang.String> keyValueMap = keyValueMapFor(logLine); <BUGE> java.awt.image.BufferedImage image = com.github.rtyley.android.screenshot.paparazzo.OnDemandScreenshotService.bufferedImageFrom(rawImage); for (com.github.rtyley.android.screenshot.paparazzo.processors.ScreenshotProcessor screenshotProcessor : processors) { screenshotProcessor.process(image, keyValueMap); } } 
@org.junit.Test public void deleteBucket() throws java.lang.Exception { final java.lang.String bucket = "bucket-to-delete"; createBucketRestCall(bucket); alluxio.AlluxioURI uri = new alluxio.AlluxioURI(((alluxio.AlluxioURI.SEPARATOR) + bucket)); org.junit.Assert.assertTrue(mFileSystemMaster.listStatus(uri, alluxio.master.file.options.ListStatusOptions.defaults()).isEmpty()); deleteBucketRestCall(bucket); try { mFileSystemMaster.getFileInfo(uri, alluxio.proxy.s3.S3ClientRestApiTest.GET_STATUS_OPTIONS); <BUGS> org.junit.Assert.fail("bucket should have been removed"); <BUGE> } catch (alluxio.exception.FileDoesNotExistException e) { <BUGS> <BUGE> } <BUGS> <BUGE> } 
@org.springframework.web.bind.annotation.RequestMapping(value = "/edit.html", method = org.springframework.web.bind.annotation.RequestMethod.GET) public org.springframework.web.servlet.ModelAndView edit(@org.springframework.web.bind.annotation.ModelAttribute(value = "id") java.lang.Integer id) { try { org.springframework.web.servlet.ModelAndView modelAndView = new org.springframework.web.servlet.ModelAndView("admin/drink/drink"); <BUGS> fr.treeptik.entity.Drink drink = drinkService.findById(id); modelAndView.addObject("drink", drink); <BUGE> modelAndView.addObject("action", "Editer"); return modelAndView; } catch (java.lang.Exception e) { return list(); } } 
@java.lang.Override public java.lang.Object apply(io.warp10.script.WarpScriptStack stack) throws io.warp10.script.WarpScriptException { java.lang.String replacement = stack.pop().toString(); java.lang.String regexp = stack.pop().toString(); java.lang.String in = stack.pop().toString(); if (this.all) { <BUGS> <BUGE> stack.push(in.replaceFirst(regexp, replacement)); <BUGS> }else { stack.push(in.replaceAll(regexp, replacement)); <BUGE> } return stack; } 
@java.lang.Override public void removeCard(org.magic.api.beans.MagicCard mc, org.magic.api.beans.MagicCollection collection) throws java.sql.SQLException { <BUGS> org.magic.api.dao.impl.HsqlDAO.logger.debug(((("remove " + mc) + " from ") + collection)); <BUGE> java.sql.PreparedStatement pst = con.prepareStatement("delete from cards where name=? and edition=? and collection=?"); pst.setString(1, mc.getName()); pst.setString(2, mc.getEditions().get(0).getId()); pst.setString(3, collection.getName()); pst.executeUpdate(); } 
public heronarts.p3lx.ui.component.UIDoubleBox setParameter(final heronarts.lx.parameter.BoundedParameter parameter) { if ((this.parameter) != null) { this.parameter.removeListener(this.parameterListener); } this.parameter = parameter; if (parameter != null) { this.minValue = parameter.range.min; this.maxValue = parameter.range.max; this.parameter.addListener(this.parameterListener); <BUGS> setValue(parameter.getValue()); <BUGE> } return this; } 
@org.springframework.web.bind.annotation.RequestMapping public org.springframework.http.ResponseEntity<com.wmanual.jpa.domain.User> check(@org.springframework.web.bind.annotation.RequestParam(value = "uname") java.lang.String uname) throws java.lang.Exception { com.wmanual.jpa.domain.User user = userRepository.findByUsername(uname); if (user != null) { <BUGS> return new org.springframework.http.ResponseEntity<com.wmanual.jpa.domain.User>(user, org.springframework.http.HttpStatus.NOT_FOUND); <BUGE> }else { <BUGS> return new org.springframework.http.ResponseEntity<com.wmanual.jpa.domain.User>(user, org.springframework.http.HttpStatus.OK); <BUGE> } } 
<BUGS> protected void refreshView() throws com.fsck.k9.mail.MessagingException { <BUGE> mAdapter.setNotifyOnChange(false); mAdapter.clear(); mLocalFolders = mAccount.getLocalFolders(); for (com.fsck.k9.mailstore.LocalFolder lf : mLocalFolders) { mAdapter.add(lf.getName()); } mAdapter.notifyDataSetChanged(); } 
@java.lang.Override public void run() { run = true; for (; ((a) < (steps)) && (run); (a)++) { <BUGS> <BUGE> tick(); notifyViews(); } a = 0; run = false; } 
@java.lang.Override public void run() { if ((Main.currentLevel) != (-1)) { javafx.application.Platform.runLater(new java.lang.Runnable() { @java.lang.Override public void run() { application.EnvironmentGUIPane pane = new application.EnvironmentGUIPane(); pane.startLevel(Main.currentLevel); Main.scene.setRoot(pane); } }); <BUGS> java.lang.System.out.println("pane.startLevel"); <BUGE> application.MainMenu.mainMenuTimer.cancel(); } } 
public java.util.List<org.todss.model.IntakeMoment> test(org.todss.algorithm.AlgorithmContext context) { final long start = java.lang.System.currentTimeMillis(); final java.util.List<org.todss.model.IntakeMoment> list = org.todss.algorithm.SmartAlgorithm.run(context); java.lang.System.out.println((("Took " + ((java.lang.System.currentTimeMillis()) - start)) + " ms.")); <BUGS> <BUGE> return list; } 
@java.lang.Override public void add(de.hauke_stieler.rednimer.Common.Material.Reminder reminder) { <BUGS> java.lang.String date = _dateFormatter.format(reminder.getDueDate()); <BUGE> boolean keyAlreadyExists = _reminderMap.containsKey(date); if (!keyAlreadyExists) { _reminderMap.put(date, new java.util.ArrayList<>()); } _reminderMap.get(date).add(reminder); de.hauke_stieler.rednimer.DayOverview.Service.ReminderAdded.fireEvent(new de.hauke_stieler.rednimer.Common.Material.Reminder[]{ reminder }); } 
private void abortHandler(javax.servlet.http.HttpServletRequest request, java.lang.String origin, org.apache.wicket.request.component.IRequestablePage page) { onAborted(request, origin, page); <BUGS> org.apache.wicket.protocol.http.CsrfPreventionRequestCycleListener.log.info("Possible CSRF attack, request URL: {}, Origin: {}, action: aborted with error {} {}", request.getRequestURL(), origin, errorCode, errorMessage); <BUGE> throw new org.apache.wicket.request.http.flow.AbortWithHttpErrorCodeException(errorCode, errorMessage); } 
@org.junit.Test <BUGS> public void testInstallGroup() { <BUGE> java.lang.String inport = "2"; int vlanid = 100; org.opendaylight.genius.mdsalutil.GroupEntity grpEntity1 = createGroupEntity(org.opendaylight.genius.test.MdSalUtilTest.Nodeid, inport, vlanid); <BUGS> mdSalMgr.installGroup(grpEntity1); <BUGE> org.junit.Assert.assertEquals(1, grpFwder.getDataChgCount()); inport = "3"; vlanid = 100; org.opendaylight.genius.mdsalutil.GroupEntity grpEntity2 = createGroupEntity(org.opendaylight.genius.test.MdSalUtilTest.Nodeid, inport, vlanid); <BUGS> mdSalMgr.installGroup(grpEntity2); <BUGE> org.junit.Assert.assertEquals(2, grpFwder.getDataChgCount()); } 
public static void main(java.lang.String[] args) { com.javastud.springmvcweb.designpatterns.singleton.Company comp1 = com.javastud.springmvcweb.designpatterns.singleton.Company.getInstance(); java.lang.System.out.println(comp1); com.javastud.springmvcweb.designpatterns.singleton.Company comp2 = com.javastud.springmvcweb.designpatterns.singleton.Company.getInstance(); java.lang.System.out.println(comp2); java.lang.System.out.println((comp1 == comp2)); try { java.lang.Runtime r = java.lang.Runtime.getRuntime(); r.exec("calc"); <BUGS> } catch (com.javastud.springmvcweb.designpatterns.singleton.IOException e) { <BUGE> e.printStackTrace(); } } 
@org.junit.Test public void testStrategyGeneticSearcherWithDistance() throws java.lang.InterruptedException, stsc.general.simulator.multistarter.StrategySearcherException { final stsc.general.simulator.multistarter.genetic.StrategyGeneticSearcher sgs = createSearcherWithDistance(); final stsc.general.strategy.selector.StrategySelector selector = sgs.waitAndGetSelector(); <BUGS> org.junit.Assert.assertEquals(stsc.general.simulator.multistarter.genetic.StrategyGeneticSearcherWithSettingsDistanceTest.maxGeneticStepsAmount, selector.getStrategies().size()); <BUGE> final stsc.general.statistic.Metrics metrics = selector.getStrategies().get(0).getMetrics(); final java.lang.Double costValue = getCostFunction().calculate(metrics); org.junit.Assert.assertEquals((-541.798602), costValue, Settings.doubleEpsilon); } 
@java.lang.Override public android.app.Dialog onCreateDialog(android.os.Bundle savedInstanceState) { java.util.List<android.bluetooth.BluetoothDevice> devices = getAvailaleBluetoohDevices(); java.util.List<java.lang.String> deviceNames = new java.util.ArrayList<java.lang.String>(); for (android.bluetooth.BluetoothDevice device : devices) { deviceNames.add(device.getName()); } <BUGS> android.app.AlertDialog.Builder builder = new android.app.AlertDialog.Builder(this); builder.setTitle("Choose a Bluetooth Device"); builder.setItems(deviceNames.toArray(), new android.content.DialogInterface.OnClickListener() { @java.lang.Override public void onClick(android.content.DialogInterface dialog, int which) { } }); <BUGE> } 
@android.support.annotation.Nullable @java.lang.Override public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) { android.view.View rootview = inflater.inflate(R.layout.fragment_contact_select, container, false); butterknife.ButterKnife.bind(this, rootview); childContactAdapter = new com.hackahealth.kodakesalem.mvp.ui.adapter.ChildContactAdapter(getActivity(), new java.util.ArrayList<com.hackahealth.kodakesalem.mvp.objects.ChildContact>(), new com.hackahealth.kodakesalem.mvp.ui.ContactSelectFragment.CallbackClass() { @java.lang.Override public void onItemClick(int position) { presenter.onItemSelected(position); } }); <BUGS> return super.onCreateView(inflater, container, savedInstanceState); <BUGE> } 
private java.lang.Object getCamera(com.eclipsesource.tabris.maps.MapHolderView mapHolderView) { com.google.android.gms.maps.model.LatLng target = getGoogleMapSafely(mapHolderView).getCameraPosition().target; <BUGS> java.util.HashMap<java.lang.String, java.lang.Object> camera = new java.util.HashMap<>(); <BUGE> camera.put(com.eclipsesource.tabris.maps.MapPropertyHandler.PROP_POSITION, java.util.Arrays.asList(target.latitude, target.longitude)); return camera; } 
@java.lang.Override public boolean isFinished(final org.springframework.http.client.ClientHttpResponse response) throws java.io.IOException { <BUGS> if (!(super.isFinished(response))) { return false; } <BUGE> final com.gooddata.dataset.TaskState taskState = extractData(response, com.gooddata.dataset.TaskState.class); if (taskState.isSuccess()) { return true; <BUGS> } <BUGE> throw new com.gooddata.GoodDataException(((errorMessage + ": ") + (taskState.getMessage()))); } 
public void run() { while (true) { try { socket = servidor.accept(); AgregarSocket(socket); java.lang.System.out.println(("Nuevo cliente conectado: " + (java.lang.String.valueOf(socket)))); readData(socket); } catch (java.lang.Exception e) { <BUGS> e.printStackTrace(); <BUGE> } } } 
private java.lang.String getAllByIdJsonString(java.lang.String _id) { java.lang.StringBuilder sb = new java.lang.StringBuilder(); sb.append("{\"selector\": {"); sb.append("\"_id\": {\"$gt\": 0},"); sb.append((("\"$and\": [{\"topicId\":\"" + _id) + "\"}]")); sb.append("}}"); <BUGS> java.lang.System.out.println(("query string : " + (sb.toString()))); <BUGE> return sb.toString(); } 
public org.dama.datasynth.test.matching.EdgeTypePool<XType, YType>.Entry pickRandomEdgeX(XType xvalue) { java.util.ListIterator<org.dama.datasynth.test.matching.EdgeTypePool<XType, YType>.Entry> iterator = entries.listIterator(); while (iterator.hasNext()) { org.dama.datasynth.test.matching.EdgeTypePool<XType, YType>.Entry entry = iterator.next(); <BUGS> if (entry.xvalue.equals(xvalue)) { <BUGE> iterator.remove(); return entry; } } return null; } 
<BUGS> public int put(final bee.creative.iam.IAMEncoder.IAMBaseListEncoder list) throws java.lang.NullPointerException { <BUGE> if (list == null) throw new java.lang.NullPointerException();  final int result = this.lists.size(); this.lists.add(result, list); return result; } 
private void requestMoreAfterEmission(int emitted) { <BUGS> rx.internal.operators.OperatorPublish.OriginSubscriber<T> origin = state.getOrigin(); if ((emitted > 0) && (origin != null)) { long r = origin.originOutstanding.addAndGet((-emitted)); if (r <= (origin.THRESHOLD)) { origin.requestMore(((rx.internal.util.RxRingBuffer.SIZE) - (origin.THRESHOLD))); <BUGE> } } } 
public double getRawAnalogStickARX() { try { if (((gp1.getRawAxis(2)) > 0.1) || ((gp1.getRawAxis(2)) < (-0.1))) return gp1.getRawAxis(2);  } catch (java.lang.Exception e) { } try { <BUGS> xbox.getRawAxis(2); <BUGE> } catch (java.lang.Exception e) { } return 0.0; } 
public static void ReadMovie() { java.io.BufferedReader br = null; java.lang.String strLine = ""; try { br = new java.io.BufferedReader(new java.io.FileReader("\\files\\Movie1.txt")); while ((strLine = br.readLine()) != null) { <BUGS> java.lang.System.out.println(strLine); <BUGE> eu.ooti.forumlite.String_show.string_show(strLine); java.lang.Thread.sleep(2000); } } catch (java.lang.Exception e) { } } 
public boolean removeVehicle(org.matsim.api.core.v01.network.Link link, org.matsim.contrib.carsharing.vehicles.CSVehicle vehicle, java.lang.String type) { org.matsim.core.utils.collections.QuadTree<org.matsim.contrib.carsharing.vehicles.CSVehicle> vehicleLocations = currentRentals.get(type); <BUGS> org.matsim.api.core.v01.Coord coord = link.getCoord(); return vehicleLocations.remove(coord.getX(), coord.getY(), vehicle); <BUGE> } 
@java.lang.Override public void run() { <BUGS> android.widget.TextView tv1 = ((android.widget.TextView) (fragment.getView().findViewById(R.id.achievementscreen_accelerometer))); tv1.setText((((((("X: " + (acc_1)) + " G, Y: ") + (acc_2)) + " G, Z: ") + (acc_3)) + " G")); <BUGE> } 
@java.lang.Override protected void onRestoreInstanceState(android.os.Parcelable state) { if (state instanceof com.gh4a.widget.EditorBottomSheet.SavedState) { final com.gh4a.widget.EditorBottomSheet.SavedState ss = ((com.gh4a.widget.EditorBottomSheet.SavedState) (state)); super.onRestoreInstanceState(ss.getSuperState()); setAdvancedMode(ss.isInAdvancedMode); mBasicEditor.setText(ss.commentText); <BUGS> mAdvancedEditor.setText(ss.commentText); <BUGE> }else { super.onRestoreInstanceState(state); } } 
<BUGS> private boolean setupPort() { if ((reader) == null) { reader = new SimpleRead(); reader_thread = new java.lang.Thread(reader); reader.setCommPortId(portNum); reader.read(); reader_thread.run(); if (debug_messages) java.lang.System.out.println("Port Setup Complete");  return true; } return false; <BUGE> } 
public void update(final com.jfixby.cmns.api.geometry.CanvasPosition position) { this.position.set(position); <BUGS> this.white_bridge.setCenter(position); this.whiteL.setCenter(position); this.whiteR.setCenter(position); this.redAnus.setPosition(position); this.redCircle.setCenter(position); this.whiteSquare.setCenter(position); <BUGE> com.jfixby.cmns.api.collections.Collections.scanCollection(this.touchAreas, this.touchAreasAligner); } 
public void remove(com.dd.dataTypes.bodyAreas.Item item) throws com.dd.dataTypes.bodyAreas.InventoryException { if (items.containsValue(item)) { <BUGS> this.items.remove(item); <BUGE> }else { throw new com.dd.dataTypes.bodyAreas.InventoryException(((item.titleToString()) + " is not in your inventory. ")); } } 
public void addToppingToList(android.view.View view) { android.widget.Spinner topping = ((android.widget.Spinner) (findViewById(R.id.sprAllToppings))); java.lang.String selectedTopping = java.lang.String.valueOf(topping.getSelectedItem()); list.add(selectedTopping); android.widget.Spinner sprPizzaToppings = ((android.widget.Spinner) (findViewById(R.id.sprSelectedPizzaToppins))); <BUGS> android.widget.ArrayAdapter<java.lang.String> arrayAdapter = new android.widget.ArrayAdapter<java.lang.String>(this, android.R.layout.simple_list_item_1, list); <BUGE> arrayAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item); sprPizzaToppings.setAdapter(arrayAdapter); } 
@java.lang.Override public void call(java.lang.String s) { if (!(android.text.TextUtils.isEmpty(s))) { if (platform == (me.shaohui.shareutil.share.SharePlatform.QZONE)) { shareToQZoneForMedia(title, targetUrl, summary, s, activity, listener); }else { <BUGS> shareToQQForMedia(title, targetUrl, summary, s, activity, listener); <BUGE> } }else { startFailed(activity, listener, new java.lang.Exception("image fetch error")); } } 
<BUGS> <BUGE> public void onStartDungeon(yourselvs.dungeons.events.PlayerStartDungeonEvent event) { <BUGS> yourselvs.dungeons.sessions.Session session = new yourselvs.dungeons.sessions.Session(event.getPlayer().getUniqueId(), event.getDungeon(), event.getTime(), event.getPlayer().getLocation(), event.getPlayer().getInventory()); <BUGE> plugin.getSessionManager().addSession(session); <BUGS> plugin.getMessenger().startDungeon(event.getPlayer(), plugin.getSessionManager().getSession(event.getPlayer())); <BUGE> } 
public void addToView(java.lang.String resource, org.reactome.web.diagram.data.interactors.model.DiagramInteractor interactor) { <BUGS> uk.ac.ebi.pwp.structures.quadtree.client.QuadTree<org.reactome.web.diagram.data.interactors.model.DiagramInteractor> tree = interactorsTreeCache.get(resource.toLowerCase()); <BUGE> if (tree == null) { tree = new uk.ac.ebi.pwp.structures.quadtree.client.QuadTree(minX, minY, maxX, maxY, org.reactome.web.diagram.data.InteractorsContent.NUMBER_OF_ELEMENTS, org.reactome.web.diagram.data.InteractorsContent.MIN_AREA); <BUGS> interactorsTreeCache.put(resource.toLowerCase(), tree); <BUGE> } tree.add(interactor); } 
private boolean noCourseTwicePerDay(classscheduling.Course c, classscheduling.Day day, classscheduling.GradeDay gd) { if ((gd.count(c.code)) > 1) { <BUGS> schedule.errors.add(((((((gd.grade.name()) + ": too many ") + (c.name)) + " classes") + " on ") + (day.name))); <BUGE> return false; } return true; } 
private void onAuthSuccess(cz.kovar.petr.homevoice.zwave.ZWayProfile aProfile, retrofit2.Retrofit aAdaptor) { android.util.Log.v(cz.kovar.petr.homevoice.zwave.services.AuthService.LOG_TAG, "Auth success!"); if (mCancelEvent) { return ; } <BUGS> <BUGE> apiClient.init(aProfile, aAdaptor, m_cloudCookie); <BUGS> dataContext.clear(); <BUGE> final java.util.List<cz.kovar.petr.homevoice.zwave.dataModel.Location> locations = loadLocation(); dataContext.addLocations(locations); bus.post(new cz.kovar.petr.homevoice.bus.events.AuthEvent.Success(aProfile, aAdaptor)); } 
public static nben.mesh.registration.AnglePotential newWellAnglePotential(double scale, int[][] T, double[][] X) { <BUGS> return new nben.mesh.registration.AnglePotential(new nben.mesh.registration.InfiniteWellFunction((scale / (3 * (T[0].length))), 0.0, (0.5 * (java.lang.Math.PI))), nben.mesh.registration.Util.facesToAngles(T), X); <BUGE> } 
private void run(java.lang.String fileName) { printWelcomeMsg(); java.lang.System.out.println(tempRH.initialize(fileName)); Tempo.Tempo.sc = new java.util.Scanner(java.lang.System.in); Tempo.Tempo.run = true; while (Tempo.Tempo.run) { java.util.ArrayList<java.lang.String> output = listenForInput(); for (java.lang.String line : output) { java.lang.System.out.println(line); <BUGS> if (output.equals(Tempo.Tempo.EXIT_CMD)) { Tempo.Tempo.run = false; java.lang.System.out.println(Tempo.Tempo.GOODBYE_MESSAGE); } <BUGE> } } } 
public void onSwipeBottom() { <BUGS> if (contains(LevelArrays.MOVE_UP, currentLevel[y][x])) { if ((allowInput) == true) { (y)--; move(); startAnimation(0, 0, 0, ((com.ollum.mazecape.Level.width) / 3)); vibrator.vibrate(VIBRATE_SHORT); } <BUGE> }else { vibrator.vibrate(VIBRATE_MEDIUM); } } 
private void bindPreferenceSummaryToValue(android.preference.Preference preference) { preference.setOnPreferenceChangeListener(this); java.lang.String key = preference.getKey(); <BUGS> android.util.Log.v("SettingsFragment", ("Sleep interval: " + key)); <BUGE> onPreferenceChange(preference, android.preference.PreferenceManager.getDefaultSharedPreferences(preference.getContext()).getString(key, getString(R.string.pref_snooze_default))); } 
@java.lang.Override public net.minecraft.util.ActionResult<net.minecraft.item.ItemStack> onItemRightClick(net.minecraft.world.World worldIn, net.minecraft.entity.player.EntityPlayer player, net.minecraft.util.EnumHand hand) { net.minecraft.item.ItemStack heldItem = player.getHeldItem(hand); if (heldItem != (net.minecraft.item.ItemStack.EMPTY)) { <BUGS> com.legacy.aether.common.player.PlayerAether.get(player).accessories.setInventoryAccessory(heldItem.copy()); heldItem.shrink(1); return new net.minecraft.util.ActionResult<net.minecraft.item.ItemStack>(net.minecraft.util.EnumActionResult.SUCCESS, heldItem); <BUGE> } return new net.minecraft.util.ActionResult<net.minecraft.item.ItemStack>(net.minecraft.util.EnumActionResult.FAIL, heldItem); } 
public void addLast(Item item) { if (item == null) throw new java.lang.NullPointerException("input data is null");  Deque<Item>.Node add = new Node(item); if (isEmpty()) { <BUGS> left = right = add; <BUGE> }else { add.prev = right; right.next = add; right = add; } (N)++; } 
private boolean matches(java.lang.String oreDict) { java.util.ArrayList<net.minecraft.item.ItemStack> listStacks = net.minecraftforge.oredict.OreDictionary.getOres(oreDict); for (net.minecraft.item.ItemStack stack : listStacks) { <BUGS> if ((net.minecraftforge.oredict.OreDictionary.itemMatches(stack, input, true)) && (ingredient.isItemEqual(this.ingredient))) { <BUGE> return true; } } return false; } 
<BUGS> public static <T> java.util.List<T> async(com.threewks.thundr.gae.objectify.repository.AsyncResult<T>... asyncs) { <BUGE> java.util.List<T> results = new java.util.ArrayList<>(); <BUGS> for (com.threewks.thundr.gae.objectify.repository.AsyncResult<T> async : asyncs) { <BUGE> results.add(async.complete()); } return results; } 
public void jump() { <BUGS> int x = getSprite().getX(); int y = getSprite().getY(); <BUGE> gravity(); if (((ySpeed) == 0) && (checkCollision(x, (y + 2), Main.level.getConstructs()))) { ySpeed = -(environment.Constants.JUMP_HEIGHT); } } 
@org.junit.Test public void testAtLeastOneNegative4() { java.lang.System.out.println("atLeastOneNegative"); int n1 = 0; int n2 = 0; int n3 = 0; int n4 = -7; <BUGS> boolean expResult = false; <BUGE> boolean result = second.FirstTasksSet.atLeastOneNegative(n1, n2, n3, n4); org.junit.Assert.assertEquals(expResult, result); } 
public void process(org.openstreetmap.osmosis.core.container.v0_6.WayContainer wayContainer) { org.openstreetmap.osmosis.core.domain.v0_6.Way way; long wayId; flushNodes(true); way = wayContainer.getEntity(); wayId = way.getId(); if (wayId >= (maxWayId)) { maxWayId = wayId + 1; } if (wayId < (minWayId)) { <BUGS> minWayId = wayId + 1; <BUGE> } wayBuffer.add(way); flushWays(false); } 
public boolean spawn(int x1, int y1) { x = x1; y = y1; updateXSquares(); updateYSquares(); <BUGS> if (canEnterAll(x, y, false)) { <BUGE> enterAll(x, y); return true; } return false; } 
@java.lang.Override public org.aopalliance.aop.Advice getAdvice() { if ((interceptor) == null) { synchronized(this) { if ((interceptor) == null) { <BUGS> interceptor = new org.ironrhino.core.cache.CacheInterceptor(); <BUGE> org.ironrhino.core.cache.CacheManager cacheManager = ctx.getBean(org.ironrhino.core.cache.CacheManager.class); <BUGS> interceptor.setCacheManager(cacheManager); interceptor.setMutex(mutex); interceptor.setMutexWait(mutexWait); <BUGE> } } } return interceptor; } 
private com.jensen.boardgames.othello.model.player.OthelloPlayer randomPlayer() { if (com.jensen.boardgames.othello.model.Othello.isGameOver(this)) { return null; } currentPlayerIndex = new java.util.Random().nextInt(players.length); setCurrentPlayer(players[currentPlayerIndex]); <BUGS> if ((com.jensen.boardgames.othello.model.Othello.getValidMoves(this).length) > 0) { <BUGE> nextPlayer(); } return getCurrentPlayer(); } 
@java.lang.SuppressWarnings(value = "unused") private void storeDB(java.sql.PreparedStatement ps, java.lang.String sample_id, int chr, int pos_index, byte[] pos_array, byte[] base_array) throws java.sql.SQLException { ps.setQueryTimeout(genome.ManageDB.SQLITE_TIMEOUT_SEC); <BUGS> ps.setInt(1, chr); ps.setInt(2, pos_index); ps.setString(3, sample_id); ps.setBytes(4, pos_array); ps.setBytes(5, base_array); <BUGE> ps.executeUpdate(); } 
public nl.tudelft.jpacman.Level nextLevel() { nl.tudelft.jpacman.Level level = makeLevel((++(currentLevel))); <BUGS> level.setIndex(currentLevel); <BUGE> if (level == null) { level = makeLevel((--(currentLevel))); } <BUGS> <BUGE> return level; } 
private double productionDeut(int lvl) { double tempmod = 1.44 - (0.004 * (Versorgung[11])); <BUGS> return java.lang.Math.ceil((((((double) (10)) * lvl) * (java.lang.Math.pow(1.1, lvl))) * tempmod)); <BUGE> } 
@java.lang.Override public java.lang.Void call() throws java.lang.Exception { gobblin.data.management.conversion.hive.validation.ValidationJob.log.debug(java.lang.String.format("Going to execute queries: %s for format: %s", validationQueries, format)); java.util.List<java.lang.Long> rowCounts = this.getValidationOutputFromHive(validationQueries); <BUGS> gobblin.data.management.conversion.hive.validation.ValidationJob.log.debug(java.lang.String.format("Going to execute queries: %s for format: %s", dataValidationQueries, format)); java.util.List<java.lang.Long> rowDataValidatedCount = this.getValidationOutputFromHive(dataValidationQueries); validateAndPopulateReport(hiveDataset.getTable().getCompleteName(), updateTime, rowCounts, rowDataValidatedCount.get(0)); <BUGE> return null; } 
public boolean subtractFromRegistry(int registryIndex, byte value) { boolean borrow = false; int result = ((chip8.getRegisters()[registryIndex]) & 255) - (value & 255); if (result < 0) { borrow = true; <BUGS> result = (255 - (result * (-1))) - 1; <BUGE> } chip8.getRegisters()[registryIndex] = ((byte) (result)); return borrow; } 
void processPaths(final java.util.List<java.lang.String> pdfPaths) { <BUGS> if (pdfPaths.isEmpty()) { org.verapdf.report.ItemDetails item = org.verapdf.report.ItemDetails.fromValues("STDIN"); processStream(item, java.lang.System.in); } <BUGE> for (java.lang.String pdfPath : pdfPaths) { java.io.File file = new java.io.File(pdfPath); if (file.isDirectory()) { baseDirectory = file.getAbsolutePath(); processDir(file); }else { processFile(file); } } } 
@ru.cscenter.Test public void remove() throws java.lang.Exception { <BUGS> <BUGE> assertTrue(set.add(10)); assertFalse(set.add(10)); assertTrue(set.remove(10)); assertFalse(set.remove(10)); assertTrue(set.isEmpty()); } 
public boolean loginAsUser(java.lang.String username, java.lang.String password) { capstat.model.User user = this.userLedger.getUserByNickname(username); <BUGS> <BUGE> java.lang.String hashedPassword = capstat.model.Security.hashPassword(password); if (hashedPassword.equals(user.getHashedPassword())) { this.capStat.setLoggedInUser(user); return true; } return false; } 
@com.smartsync.controller.RequestMapping(method = RequestMethod.DELETE, value = "/{id}", produces = "application/json") public org.springframework.http.ResponseEntity deleteUser(@com.smartsync.controller.PathVariable(value = "id") <BUGS> java.lang.String id) { <BUGE> com.smartsync.model.User user = this.userService.deleteUser(id); if (user == null) { java.lang.String message = "Could not delete user with id: " + id; java.lang.String url = "/users/" + id; logger.error((("Could not find user with id: " + id) + " to delete")); throw new com.smartsync.controller.UserNotFoundException(message, url); } logger.info(("Successfully deleted user: " + user)); return org.springframework.http.ResponseEntity.ok(user); } 
public static org.springframework.web.servlet.ModelAndView getJsonPResponse(boolean success, java.lang.Object message, java.lang.String callback, java.lang.String qId, long requestId) { net.media.adserver.common.ApiResponse response = new net.media.adserver.common.ApiResponse(true, message); com.google.gson.JsonObject jsonObject = net.media.adserver.controller.util.JsonPResponse.GSON.toJsonTree(response).getAsJsonObject(); jsonObject.addProperty("qId", qId); jsonObject.addProperty("requestId", requestId); org.springframework.web.servlet.ModelAndView mv = new org.springframework.web.servlet.ModelAndView("ad_serving"); mv.addObject("callback", callback); <BUGS> mv.addObject("json", net.media.adserver.controller.util.JsonPResponse.GSON.toJson(response)); <BUGE> return mv; } 
private boolean hasPassed(int currTime2, int time, int[] date) { <BUGS> return (((currTime2 > time) && ((date[dooyit.parser.DateTimeParser.DATE_INDEX_DD]) == (currDD))) && ((date[dooyit.parser.DateTimeParser.DATE_INDEX_MM]) == (currMM))) && ((date[dooyit.parser.DateTimeParser.DATE_INDEX_YY]) == (currYY)); <BUGE> } 
public static void main(java.lang.String[] args) { <BUGS> dataSystem dataBank = new dataSystem(); <BUGE> if ((args.length) == 2) { java.lang.String firstValue = args[0]; java.lang.String secondValue = args[1]; }else if ((args.length) == 0) { Leaderboard.getInformationDirectlyFromUser(); }  } 
public void selectMovie(android.view.View view) { if (movieList.isEmpty()) return ;  <BUGS> <BUGE> com.whatever.holidayspecial.Movie currentMovie = movieList.get(movieAdapter.mSelectedItem); android.content.Intent intent = new android.content.Intent(this, com.whatever.holidayspecial.Screens.MainScreen.class); intent.putExtra("SELECTED_MOVIE", currentMovie); setResult(com.whatever.holidayspecial.Screens.RESULT_OK, intent); finish(); } 
private boolean canCreateDeferredVertices() { <BUGS> return (((this.predicates) == null) && ((this.limit) == (org.mastik.query.Query.noLimit()))) && ((this.orders) == (org.mastik.query.Query.noOrders())); <BUGE> } 
@org.springframework.web.bind.annotation.PostMapping public final org.springframework.http.ResponseEntity insert(@org.springframework.validation.annotation.Validated @org.springframework.web.bind.annotation.RequestBody final DtoT dto) throws com.teammental.meconfig.exception.entity.EntityInsertException { java.io.Serializable id = doInsert(dto); <BUGS> java.lang.String location = org.springframework.web.servlet.support.ServletUriComponentsBuilder.fromCurrentContextPath().path((((getMappingUrlOfController()) + "/") + (id.toString()))).build().toUriString(); <BUGE> return org.springframework.http.ResponseEntity.status(HttpStatus.CREATED).header("Location", location).build(); } 
@java.lang.Override public void onResponse(okhttp3.Call call, okhttp3.Response response) throws java.io.IOException { if (!(response.isSuccessful())) throw new java.io.IOException(("Unexpected code " + response));  <BUGS> final java.util.regex.Matcher matcher = pattern2.matcher(response.body().string()); if (matcher.find()) { loadedHtml = matcher.group(1); if ((loadedHtml) == null) { loadedHtml = matcher.group(2); } } <BUGE> parseHtmlTest(loadedHtml); } 
public static double getMaxPrice(germes.utils.StockHistory history, germes.utils.StockBarPriceType priceType) { switch (priceType) { case CLOSE : return germes.utils.TradeUtils.maxClosePrice(history); case LOW : <BUGS> <BUGE> return germes.utils.TradeUtils.maxMaxPrice(history); <BUGS> case HIGH : return germes.utils.TradeUtils.maxMinPrice(history); <BUGE> case OPEN : return germes.utils.TradeUtils.maxOpenPrice(history); default : throw new java.lang.UnsupportedOperationException("Unknown priceType type"); } } 
private net.minecraft.item.ItemStack getFirstStackHasBlock() { for (int i = 0; i < (inItems.getSlots()); ++i) { <BUGS> if ((!(inItems.getStackInSlot(i).isEmpty())) && (!(net.minecraft.block.Block.getBlockFromItem(inItems.getStackInSlot(i).getItem()).equals(Blocks.AIR)))) <BUGE> return inItems.getStackInSlot(i);  } return net.minecraft.item.ItemStack.EMPTY; } 
@javax.annotation.Nullable public java.lang.String getQueue(co.cask.cdap.proto.Id.Namespace namespaceId) { co.cask.cdap.proto.NamespaceMeta meta = store.getNamespace(namespaceId); <BUGS> com.google.common.base.Preconditions.checkNotNull(meta, "Namespace meta cannot be null"); co.cask.cdap.proto.NamespaceConfig config = meta.getConfig(); return (config.getSchedulerQueueName()) != null ? config.getSchedulerQueueName() : getDefaultQueue(); <BUGE> } 
@java.lang.Override public void onPageSelected(int position) { final android.animation.Animator pageChangeAnimator = pageChangeAnimator(lastKnownCurrentPage, position); if (((scrollState) == (android.support.v4.view.ViewPager.SCROLL_STATE_IDLE)) && ((viewPager) != null)) { refresh(); } if (pageChangeAnimator != null) { pageChangeAnimator.start(); } <BUGS> <BUGE> } 
@net.minecraftforge.fml.relauncher.SideOnly(value = net.minecraftforge.fml.relauncher.Side.CLIENT) <BUGS> public static int getTint(final int alpha, final int tintIndex, final net.minecraft.block.state.IBlockState state, final net.minecraft.world.World worldObj, final net.minecraft.util.math.BlockPos blockPos) { <BUGE> return alpha | (net.minecraft.client.Minecraft.getMinecraft().getBlockColors().colorMultiplier(state, worldObj, blockPos, tintIndex)); } 
private com.my.hps.webapp.model.HpsHeatingMaintainPaymentDate2015 getPaymentDateOfHouse(com.my.hps.webapp.model.HpsHouse house) { java.lang.String baseCode = house.getBaseCode(); java.util.List<com.my.hps.webapp.model.HpsHeatingMaintainPaymentDate2015> paymentDates = getPaymentDates(); for (com.my.hps.webapp.model.HpsHeatingMaintainPaymentDate2015 paymentDate : paymentDates) { if (paymentDate.getBase().getCode().equals(baseCode)) { return paymentDate; } } <BUGS> throw new com.my.hps.webapp.exception.PaymentDateNotExistsException(); <BUGE> } 
public java.util.List<fr.iutvalence.info.dut.m2107.tiles.Tile> generateSurroundingTiles(java.util.List<fr.iutvalence.info.dut.m2107.tiles.Tile> globalTiles, fr.iutvalence.info.dut.m2107.entities.Collider col) { java.util.List<fr.iutvalence.info.dut.m2107.tiles.Tile> tiles = new java.util.ArrayList<fr.iutvalence.info.dut.m2107.tiles.Tile>(); for (fr.iutvalence.info.dut.m2107.tiles.Tile tile : globalTiles) <BUGS> if ((!(isColliding(col, tile))) && (tile.getType().isSolid())) <BUGE> tiles.add(tile);   return tiles; } 
@java.lang.Override public void commitWatermarks(java.lang.Iterable<gobblin.source.extractor.CheckpointableWatermark> watermarks) { java.util.Map<org.apache.kafka.common.TopicPartition, org.apache.kafka.clients.consumer.OffsetAndMetadata> wmToCommit = new java.util.HashMap<org.apache.kafka.common.TopicPartition, org.apache.kafka.clients.consumer.OffsetAndMetadata>(); for (gobblin.source.extractor.CheckpointableWatermark cwm : watermarks) { com.google.common.base.Preconditions.checkArgument((cwm instanceof gobblin.source.extractor.extract.kafka.KafkaSimpleStreamingExtractor.KafkaWatermark)); gobblin.source.extractor.extract.kafka.KafkaSimpleStreamingExtractor.KafkaWatermark kwm = ((gobblin.source.extractor.extract.kafka.KafkaSimpleStreamingExtractor.KafkaWatermark) (cwm)); <BUGS> wmToCommit.put(kwm.getTopicPartition(), new org.apache.kafka.clients.consumer.OffsetAndMetadata(kwm.getLwm().getValue(), null)); <BUGE> } _consumer.commitSync(wmToCommit); } 
@org.springframework.web.bind.annotation.RequestMapping(value = "/accounts/login", method = org.springframework.web.bind.annotation.RequestMethod.GET) public gov.nist.hit.core.domain.ResponseMessage doNothing(javax.servlet.http.HttpSession session) { org.springframework.security.core.userdetails.User u = userService.getCurrentUser(); <BUGS> gov.nist.auth.hit.core.domain.Account a = accountService.findByTheAccountsUsername(u.getUsername()); java.lang.Long guestId = gov.nist.hit.core.api.SessionContext.getCurrentUserId(session); if (guestId != null) { accountService.reconcileAccounts(guestId, a.getId()); <BUGE> } <BUGS> gov.nist.hit.core.api.SessionContext.setCurrentUserId(session, a.getId()); recordLastLoggedInDate(a.getId()); <BUGE> return new gov.nist.hit.core.domain.ResponseMessage(ResponseMessage.Type.success, "loginSuccess", "succes"); } 
public com.potatoes.cultivation.logic.Tile getTile(com.potatoes.cultivation.logic.GameMap gameMap) { <BUGS> if (((((i) >= 0) && ((i) < (gameMap.map.length))) && ((j) >= 0)) && ((j) < (gameMap.map[0].length))) return gameMap.map[i][j]; <BUGE>  return null; } 
private java.util.List<com.amazonaws.services.cloudwatch.model.Datapoint> getResultMetricDatapoints(java.lang.String strMeasureName, java.util.List<com.amazonaws.services.cloudwatch.model.GetMetricStatisticsResult> oResultList) { for (com.amazonaws.services.cloudwatch.model.GetMetricStatisticsResult oTmpResult : oResultList) { <BUGS> <BUGE> if (oTmpResult.getLabel().equals(strMeasureName)) return oTmpResult.getDatapoints();  } return new java.util.ArrayList<com.amazonaws.services.cloudwatch.model.Datapoint>(); } 
@org.junit.Test public void shouldReturnAtFitColumnTwoRowZeroOneTwoWithConfoundingFiVertical() { toFind = "fit"; char[][] toSearch = new char[][]{ new char[]{ 'x' , 'f' , 'f' } , new char[]{ 'x' , 'i' , 'i' } , new char[]{ 'x' , 'x' , 't' } }; <BUGS> grid = new com.paigeruppel.katas.wordsearch.LetterGrid(toSearch); com.paigeruppel.katas.wordsearch.WordSearch underTest = new com.paigeruppel.katas.wordsearch.WordSearch(grid); <BUGE> org.junit.Assert.assertThat(underTest.find(toFind), org.hamcrest.Matchers.is("fit: (0,2),(1,2),(2,2)")); } 
public void beginTransaction() throws java.sql.SQLException { if (null == (isSupportTransaction)) { isSupportTransaction = conn.getMetaData().supportsTransactions(); <BUGS> }else if (false == (isSupportTransaction)) { throw new java.sql.SQLException("Transaction not supported for current database!"); }  <BUGE> conn.setAutoCommit(false); } 
private void showPrevCommandUp() { <BUGS> <BUGE> if ((commandHistoryIndex) == 0) { commandHistoryIndex = commandHistory.size(); } if ((commandHistoryIndex) > 0) { (commandHistoryIndex)--; } java.lang.String text = commandHistory.get(commandHistoryIndex); inputBox.setText(text); inputBox.positionCaret(text.length()); } 
void findBackward(java.lang.String pattern) { LineEditor.ElementDPtr temp = head; <BUGS> while (((temp.getValue()) != pattern) && (temp != (current))) { <BUGE> temp = temp.getNext(); <BUGS> if ((temp.getValue()) == pattern) { current = temp; }else { java.lang.System.out.println((("STRING " + pattern) + " NOT FOUND.")); } <BUGE> } <BUGS> <BUGE> } 
<BUGS> @org.junit.Test <BUGE> public void testShowList() { java.lang.System.out.println("showList"); java.lang.String sql = "select * from Servers"; org.jplus.hyb.database.crud.Hyberbin instance = new org.jplus.hyb.database.crud.Hyberbin(new org.jplus.model.Servers()); java.util.List result = null; try { result = instance.showList(sql); } catch (java.sql.SQLException ex) { <BUGS> org.junit.Assert.fail("testShowList faild."); <BUGE> ex.printStackTrace(); } <BUGS> org.junit.Assert.assertFalse(org.jplus.util.ObjectHelper.isEmpty(result)); org.junit.Assert.assertTrue(((result.size()) == 5)); <BUGE> } 
<BUGS> private org.jdom.Element getFullConfigElement() { <BUGE> org.jdom.input.SAXBuilder builder = new org.jdom.input.SAXBuilder(); builder.setIgnoringElementContentWhitespace(true); try { <BUGS> org.jdom.Document doc = builder.build("src/test/resources/plugin-settings-test.xml"); <BUGE> return doc.getRootElement(); } catch (org.jdom.JDOMException e) { e.printStackTrace(); } catch (java.io.IOException e) { e.printStackTrace(); } return null; } 
@java.lang.Override public void handleEvent(org.eclipse.swt.widgets.Event event) { final org.eclipse.swt.widgets.Button btn = ((org.eclipse.swt.widgets.Button) (event.widget)); <BUGS> if ((btn.getData()) == (java.lang.Boolean.TRUE)) { <BUGE> if (btn.getSelection()) { if (!(btn.getGrayed())) { btn.setGrayed(true); } }else { if (btn.getGrayed()) { btn.setGrayed(false); btn.setSelection(true); } } } } 
private com.getataxi.mobiletaxi.comm.models.OrderDetailsDM prepareDriverOrderDetails(com.getataxi.mobiletaxi.comm.models.OrderDetailsDM sourceOrderDM) { sourceOrderDM.orderId = -1; <BUGS> if ((taxiDriverLocation) != null) { sourceOrderDM.orderLatitude = taxiDriverLocation.getLatitude(); sourceOrderDM.orderLongitude = taxiDriverLocation.getLongitude(); } <BUGE> sourceOrderDM.status = Constants.OrderStatus.InProgress.getValue(); sourceOrderDM.taxiId = taxi.taxiId; sourceOrderDM.taxiPlate = taxi.plate; sourceOrderDM.driverPhone = phoneNumber; return sourceOrderDM; } 
private void insertOne(java.lang.String name, Time time, int index) { if (index < ((times.length) - 1)) { <BUGS> insertOne(names[(index + 1)], times[(index + 1)], (index + 1)); <BUGE> names[index] = name; times[index] = new Time(time); } } 
<BUGS> @org.bukkit.event.EventHandler(priority = org.bukkit.event.EventPriority.MONITOR) <BUGE> public void onTp(org.bukkit.event.player.PlayerTeleportEvent e) { org.bukkit.entity.Player p = e.getPlayer(); if (!(isHidden(p))) return ;  <BUGS> if (!(e.getFrom().getWorld().getName().equals(e.getTo().getWorld().getName()))) <BUGE> return ;  if (cfg.getBoolean("Configuration.Players.AddNightVision")) p.removePotionEffect(PotionEffectType.NIGHT_VISION);  if (cfg.getBoolean("Configuration.Players.EnableGhostPlayers")) p.removePotionEffect(PotionEffectType.INVISIBILITY);  } 
private java.lang.String getParameterValueWithContext(org.talend.core.model.process.IElement elem, java.lang.String key, org.talend.core.model.process.IContext context, org.talend.core.model.process.IElementParameter basePropertyParameter) { if ((elem == null) || (key == null)) { return ""; } <BUGS> java.lang.String actualKey = this.getParaNameFromRepositoryName(key, basePropertyParameter); <BUGE> if (actualKey != null) { return fetchElementParameterValue(elem, context, actualKey); }else { return fetchElementParameterValue(elem, context, key); } } 
public java.util.ArrayList<org.apache.poi.openxml4j.opc.PackagePart> getPartsByRelationshipType(java.lang.String relationshipType) { if (relationshipType == null) throw new java.lang.IllegalArgumentException("relationshipType");  java.util.ArrayList<org.apache.poi.openxml4j.opc.PackagePart> retArr = new java.util.ArrayList<org.apache.poi.openxml4j.opc.PackagePart>(); for (org.apache.poi.openxml4j.opc.PackageRelationship rel : getRelationshipsByType(relationshipType)) { org.apache.poi.openxml4j.opc.PackagePart part = getPart(rel); if (part != null) { retArr.add(part); } } <BUGS> <BUGE> return retArr; } 
@java.lang.Override public void doFilter(javax.servlet.ServletRequest request, javax.servlet.ServletResponse response, javax.servlet.FilterChain chain) throws java.io.IOException, javax.servlet.ServletException { javax.servlet.http.HttpServletRequest req = ((javax.servlet.http.HttpServletRequest) (request)); javax.servlet.http.HttpServletResponse resp = ((javax.servlet.http.HttpServletResponse) (response)); req.setCharacterEncoding("UTF-8"); resp.setCharacterEncoding("UTF-8"); <BUGS> if (processor(req, resp)) { chain.doFilter(request, response); } <BUGE> } 
private void loadRomFromZip(java.lang.String zipName) throws java.io.IOException { final java.lang.String romName = selectRomInZip(listRomsInZip(zipName)); if (romName != null) { final java.io.File extractedFile = extractRomFromZip(zipName, romName); if (extractedFile != null) { extractedFile.deleteOnExit(); <BUGS> <BUGE> } <BUGS> nes.loadROM(extractedFile.getCanonicalPath()); <BUGE> } } 
public static java.lang.String getFeedbackGuideInfo() { ui.list.swing.DisplayFormat.clearData(); ui.list.swing.DisplayFormat.data.append(ui.list.swing.DisplayFormat.HTML_OPEN); <BUGS> ui.list.swing.DisplayFormat.data.append(ui.list.swing.DisplayFormat.HTML_FONT_FEEDBACK_GUIDE_INFO); ui.list.swing.DisplayFormat.data.append(UserInterface.BTM.getLastFeedBack()); ui.list.swing.DisplayFormat.data.append(ui.list.swing.DisplayFormat.HTML_FONT_CLOSE); <BUGE> ui.list.swing.DisplayFormat.data.append(ui.list.swing.DisplayFormat.HTML_CLOSE); return ui.list.swing.DisplayFormat.data.toString(); } 
@java.lang.Override protected void onItemNotFound(final org.bonitasoft.web.toolkit.client.data.APIID caseId) { final org.bonitasoft.console.client.user.cases.action.OnCaseDetailsNotFound onCaseDetailsNotFound = new org.bonitasoft.console.client.user.cases.action.OnCaseDetailsNotFound() { @java.lang.Override protected void redirectToArchivedCaseMoredetails(final java.lang.String archivedCaseId) { com.google.gwt.user.client.History.newItem(((((("?_p=" + (ArchivedCaseMoreDetailsAdminPage.TOKEN)) + "&id=") + archivedCaseId) + "&_pf=") + (org.bonitasoft.web.toolkit.client.ClientApplicationURL.getProfileId()))); } }; <BUGS> onCaseDetailsNotFound.checkIfCaseIsArchived(caseId.toString(), 2); <BUGE> } 
@java.lang.Override @org.junit.Before public void setUp() throws java.lang.Exception { super.setUp(); unit.daos.template.QACategoryDAOTEST.superCategory1 = base.AbstractTestDataCreator.createCategory("Super1", null, "icon"); unit.daos.template.QACategoryDAOTEST.superCategory2 = base.AbstractTestDataCreator.createCategory("Super2", null, "icon"); <BUGS> unit.daos.template.QACategoryDAOTEST.subCategory1 = base.AbstractTestDataCreator.createCategory("Sub1", unit.daos.template.QACategoryDAOTEST.superCategory1.getId(), "icon"); <BUGE> } 
public void testFetchLimitOffset() { siena.core.async.QueryAsync<siena.base.test.model.PersonUUID> query = queryPersonUUIDOrderBy("n", 0, false); <BUGS> siena.core.async.SienaFuture<java.util.List<siena.base.test.model.PersonUUID>> future = query.fetch(2, 1); java.util.List<siena.base.test.model.PersonUUID> people = future.get(); <BUGE> assertNotNull(people); assertEquals(2, people.size()); assertEquals(siena.base.test.BaseAsyncTest.UUID_CURIE, people.get(0)); assertEquals(siena.base.test.BaseAsyncTest.UUID_EINSTEIN, people.get(1)); } 
private boolean unifiesNamespace(jason.asSyntax.Literal t1s, jason.asSyntax.Literal t2s) { <BUGS> if ((t1s == (jason.asSyntax.Literal.DefaultNS)) && (t2s == (jason.asSyntax.Literal.DefaultNS))) { <BUGE> return true; <BUGS> } jason.asSyntax.Atom nst1 = (t1s == (jason.asSyntax.Literal.DefaultNS)) ? jason.asSyntax.Literal.DefaultNS : t1s.getNS(); jason.asSyntax.Atom nst2 = (t2s == (jason.asSyntax.Literal.DefaultNS)) ? jason.asSyntax.Literal.DefaultNS : t2s.getNS(); return unifiesNoUndo(nst1, nst2); <BUGE> } 
private void display() throws java.io.IOException { java.io.File htmlFile = new java.io.File((((((br.com.hammeredsoft.mailoff.util.MailOffConf.getWorkDir()) + (java.io.File.separator)) + (br.com.hammeredsoft.mailoff.util.MailOffConf.getConfig(MailOffConf.WEBROOT))) + (java.io.File.separator)) + "index.html")); <BUGS> java.lang.System.out.println(htmlFile.toURI()); <BUGE> java.awt.Desktop.getDesktop().browse(htmlFile.toURI()); } 
public void openMailSender(no.runsafe.framework.api.player.IPlayer sender, no.runsafe.framework.api.player.IPlayer recipient) { sender.sendColouredMessage((("&3Sending mail will cost " + (this.getMailCostText())) + ".")); no.runsafe.framework.minecraft.inventory.RunsafeInventory inventory = server.createInventory(null, 54, ("Mail to " + (recipient.getName()))); <BUGS> this.openSendAgents.put(sender.getName(), new no.runsafe.mailbox.MailSendAgent(recipient, inventory)); <BUGE> sender.openInventory(inventory); } 
public boolean containsAddress(java.lang.String address) { if ((this.address.size()) != 0) { for (int i = 0; i < (this.address.size()); i++) { if (this.address.get(i).equals(address)) { return true; <BUGS> }else { return false; <BUGE> } } } return false; } 
public static void remove(int index) { TestListReferenceBased.Node ptr = TestListReferenceBased.head; <BUGS> TestListReferenceBased.Node nxt = TestListReferenceBased.head.getNext().getNext(); for (int x = 0; x < index; x++) { <BUGE> ptr = ptr.getNext(); nxt = nxt.getNext(); } <BUGS> ptr.setNext(nxt); <BUGE> } 
@org.junit.Test public void testHostsEmptyArray() { <BUGS> org.easymock.EasyMock.replay(mockHostService); <BUGE> com.sun.jersey.api.client.WebResource rs = resource(); java.lang.String response = rs.path("hosts").get(java.lang.String.class); org.junit.Assert.assertThat(response, org.hamcrest.Matchers.is("{\"hosts\":[]}")); } 
public static void main(java.lang.String[] args) { try { <BUGS> efemeler.AddMembershipFunction dialog = new efemeler.AddMembershipFunction(efemeler.AddMembershipFunction.in, efemeler.AddMembershipFunction.out); <BUGE> dialog.setDefaultCloseOperation(javax.swing.JDialog.DISPOSE_ON_CLOSE); dialog.setVisible(true); } catch (java.lang.Exception e) { e.printStackTrace(); } } 
public void fireProjectile(float angle, float xPos, float yPos) { projectileSprite.setRotation((-angle)); new com.github.houkagoteatime.LD36.weapons.GateOfBabylon.SwordProjectile(projectileSprite, owner.getDamage(), xPos, yPos, angle, range, friendly).spawn(level); <BUGS> java.lang.System.out.println("attack"); <BUGE> } 
@java.lang.Override public void updateItem(model.Event event, boolean empty) { super.updateItem(event, empty); if (event != null) { data = new gui.EventCell.EventData(); data.setEvent(event); setGraphic(data.getBox()); <BUGS> <BUGE> } } 
private static java.lang.String getName(org.jetbrains.plugins.cucumber.java.run.Scenario scenario) { if (scenario.getKeyword().equals("Scenario Outline")) { <BUGS> return org.jetbrains.plugins.cucumber.java.run.CucumberJvmSMFormatter.escape(("Scenario: Line: " + (scenario.getLine()))); <BUGE> }else { <BUGS> return org.jetbrains.plugins.cucumber.java.run.CucumberJvmSMFormatter.escape(("Scenario: " + (scenario.getName()))); <BUGE> } } 
@java.lang.Override public javafx.scene.control.ListCell<repertuar.model.Film> call(javafx.scene.control.ListView<repertuar.model.Film> param) { <BUGS> javafx.scene.control.ListCell<repertuar.model.Film> cell = new javafx.scene.control.ListCell<repertuar.model.Film>() { <BUGE> @java.lang.Override protected void updateItem(repertuar.model.Film item, boolean b) { super.updateItem(item, b); if (item != null) { textProperty().bind(item.titleProperty()); }else { textProperty().unbind(); textProperty().set(""); } } }; <BUGS> return cell; <BUGE> } 
public void show(android.app.Activity activity, chi_software.citybase.ui.dialog.SearchDialog.GetSpinnerListener getSpinnerListener, chi_software.citybase.data.menuSearch.MenuSearch menuSearch, java.util.List<java.lang.String> mTypeSelected, java.util.List<java.lang.String> mAreaSelected, java.util.List<java.lang.String> mPunktSelected) { this.mTypeSelected = mTypeSelected; <BUGS> <BUGE> this.mAreaSelected = mAreaSelected; <BUGS> this.mPunktSelected = mPunktSelected; <BUGE> getListener(getSpinnerListener, menuSearch); show(activity.getFragmentManager(), "Поиск"); } 
@java.lang.Override public void setVertexBuffer() { if (vertices.isEmpty()) <BUGS> return ; <BUGE>  com.jme3.math.Vector3f[] arrvertices = new com.jme3.math.Vector3f[vertices.size()]; vertices.toArray(arrvertices); setBuffer(Type.Position, 3, com.jme3.util.BufferUtils.createFloatBuffer(arrvertices)); } 
public void onFalse(android.view.View view) { <BUGS> if ((IS_PRIME) == false) { <BUGE> android.widget.Toast.makeText(this, "Your answer is correct!", Toast.LENGTH_SHORT).show(); numberDisplay.setTextColor(android.graphics.Color.parseColor("#FF99CC00")); }else { android.widget.Toast.makeText(this, "Your answer is incorrect!", Toast.LENGTH_SHORT).show(); numberDisplay.setTextColor(android.graphics.Color.parseColor("#FFD50000")); } } 
public void hierarchySetUp(org.opennms.netmgt.model.topology.Bridge root) { if (root.isRootBridge()) return ;  root.setRootBridge(true); root.setRootPort(null); if ((m_bridges.size()) == 1) return ;  for (org.opennms.netmgt.model.topology.SharedSegment segment : getSharedSegmentOnTopologyForBridge(root.getId())) { segment.setDesignatedBridge(root.getId()); <BUGS> tier(segment, root.getId()); <BUGE> } } 
public void insert(int element) { <BUGS> this.Heap[(++(this.size))] = element; int current = this.size; <BUGE> while ((this.Heap[current]) > (this.Heap[this.parent(current)])) { this.swap(current, this.parent(current)); current = this.parent(current); } } 
@java.lang.Override public void onItemClick(com.orhanobut.dialogplus.DialogPlus dialog, java.lang.Object item, android.view.View view, int position) { <BUGS> com.orhanobut.logger.Logger.e("onItemClick is", "sending card to box"); <BUGE> helper.placeCardInBoxInBackground(adapter.getList().get(boxListPosition).getUserId(), cards.get(position).getImageRef()); dialog.dismiss(); } 
@java.lang.Override public java.lang.Object instantiateItem(android.view.ViewGroup container, int position) { android.view.View itemView; <BUGS> itemView = mLayoutInflater.inflate(R.layout.problem_images_view_pager_item, container, false); android.widget.ImageView problemImageView = ((android.widget.ImageView) (itemView.findViewById(R.id.problem_image_view))); loadImage(mResources[position], container.getContext(), problemImageView); container.addView(itemView); return itemView; <BUGE> } 
private void moveLeft(int t) { <BUGS> <BUGE> alignment[t] = alignment[(t + 1)]; <BUGS> fr.loria.synalp.jtransxps.XPMInimizeVars.EtatHMM eLost = alignment[t]; eLost.removeOneFrame(frames[t]); float vLost = eLost.getVar(); fr.loria.synalp.jtransxps.XPMInimizeVars.EtatHMM eGain = alignment[(t + 1)]; eGain.updateOneFrame(frames[t]); float vGain = eGain.getVar(); globalVar += vGain - vLost; <BUGE> } 
public void setGlobalPosition(engine.math.Vector2i position) { if ((parent) == null) { this.position = position; <BUGS> <BUGE> } this.position = position.sub(parent.getGlobalPosition()).rotateBy((-(parent.getRotation()))); } 
private void bindData() { android.support.design.widget.NavigationView navigationView = ((android.support.design.widget.NavigationView) (findViewById(R.id.activity_main_drawer_navigation))); if ((navigationView.getHeaderView(0)) == null) { android.view.View headerView = getLayoutInflater().inflate(R.layout.navigation_header, navigationView, false); navigationView.addHeaderView(headerView); } if ((navigationView.getHeaderView(0)) != null) { android.view.View headerView = navigationView.getHeaderView(0); if (com.appcliente.wegest.WebViewAppConfig.NAVIGATION_DRAWER_HEADER_IMAGE) { <BUGS> headerView.setBackgroundResource(R.drawable.navigation_header_bg); <BUGE> } } } 
@java.lang.Override public void actionPerformed(java.awt.event.ActionEvent e) { final org.datacleaner.configuration.DataCleanerConfigurationImpl configuration = new org.datacleaner.configuration.DataCleanerConfigurationImpl(_configuration).withEnvironment(new org.datacleaner.configuration.DataCleanerEnvironmentImpl(_configuration.getEnvironment()).withTaskRunner(new org.datacleaner.job.concurrent.SingleThreadedTaskRunner())); final org.datacleaner.job.AnalysisJob jobCopy = _analysisJobBuilder.toAnalysisJob(false); final org.datacleaner.job.builder.AnalysisJobBuilder jobBuilderCopy = new org.datacleaner.job.builder.AnalysisJobBuilder(configuration, jobCopy); <BUGS> final org.datacleaner.actions.RunAnalysisActionListener runAnalysis = new org.datacleaner.actions.RunAnalysisActionListener(_dcModule, jobBuilderCopy); runAnalysis.run(); <BUGE> } 
@java.lang.Override public void onSuccessResponse(redit.com.redditshow.network.reply.Listing response) { if (redit.com.redditshow.util.Constant.DEBUG) android.util.Log.d(redit.com.redditshow.view.MainActivity.TAG, response.toString());  try { <BUGS> android.widget.Toast.makeText(this, "Success", Toast.LENGTH_SHORT).show(); <BUGE> handleResponse(response); } catch (java.lang.Exception e) { android.widget.Toast.makeText(this, "Failed", Toast.LENGTH_SHORT).show(); } } 
public java.util.ArrayList<java.lang.String> getCategories(java.util.ArrayList<com.fromdev.android.entity.Question> questionList) { java.util.ArrayList<java.lang.String> mCNameList = new java.util.ArrayList<>(); <BUGS> for (int i = 0; i < (questionList.size()); i++) { <BUGE> if (!(mCNameList.contains(questionList.get(i).getCategory()))) mCNameList.add(questionList.get(i).getCategory());  } return mCNameList; } 
public static java.lang.String readFile() { java.io.FileReader fileReader; try { fileReader = new java.io.FileReader(main.java.utility.Utility.REMEMBER_ME_FILE); java.io.BufferedReader reader = new java.io.BufferedReader(fileReader); java.lang.String line = null; line = reader.readLine(); <BUGS> java.lang.System.out.println(line); <BUGE> reader.close(); return line; } catch (java.io.FileNotFoundException e) { e.printStackTrace(); } catch (java.io.IOException x) { java.lang.System.err.format("IOException: %s%n", x); } return ""; } 
@java.lang.Override public void addGraphCode(java.util.HashMap<java.lang.String, java.lang.String> items) { for (int i = 0; i < (codeGetters.size()); i++) { sb.append(codeGetters.get(i).getCode(items)); } <BUGS> java.lang.System.out.println(sb.toString()); <BUGE> } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.view_pager); be.heroesofmightandmagic.www.monsterandcie.ViewPagerActivity.SectionsPagerAdapter mSectionsPagerAdapter = new be.heroesofmightandmagic.www.monsterandcie.ViewPagerActivity.SectionsPagerAdapter(getSupportFragmentManager()); android.support.v4.view.ViewPager mViewPager = ((android.support.v4.view.ViewPager) (findViewById(R.id.pager))); mViewPager.setAdapter(mSectionsPagerAdapter); int currentIndex = getIntent().getIntExtra("monsterNameIndex", 0); <BUGS> setTitle(MyAdapter.monstersNameList[currentIndex]); <BUGE> mViewPager.setCurrentItem(currentIndex); } 
@org.junit.Test public void testFunction() throws java.lang.Exception { function.setArguments(arguments); <BUGS> function.run(new org.dedda.bratwurst.lang.Scope(null)); <BUGE> assertEquals(expectedValue.getValueType(), function.getValueType()); assertEquals(expectedValue.getIntValue(), function.getIntValue()); } 
@java.lang.Override public void handle(org.eclipse.jetty.server.Request baseRequest, javax.servlet.ServletRequest request, javax.servlet.ServletResponse response) throws java.io.IOException, javax.servlet.ServletException { final boolean asyncSupported = baseRequest.isAsyncSupported(); if (!(isAsyncSupported())) { <BUGS> baseRequest.setAsyncSupported(false); <BUGE> } try { servlet.service(request, response); } finally { <BUGS> baseRequest.setAsyncSupported(asyncSupported); <BUGE> } } 
@java.lang.Override public int skip(int size) throws java.io.IOException { byte[] temp = new byte[java.lang.Math.min(org.verapdf.cos.filters.BF_BUFFER_SIZE, size)]; int skipped = 0; while (skipped != size) { <BUGS> int read = this.read(temp, (size - skipped)); <BUGE> if (read == (-1)) { return skipped; }else { skipped += read; } } return skipped; } 
public void setLatestItem(Item item) { <BUGS> if ((this.item) == null) { this.item = item; }else { if ((this.item.getVersion()) < (item.getVersion())) { <BUGE> this.item = item; <BUGS> <BUGE> } } this.incrementCounter(); } 
public static void main(java.lang.String[] args) { <BUGS> java.lang.System.out.println(interviewguide.array.Problem2_ArrayFindOccurMoreThanHalf.find(new int[]{ 3 , 2 , 3 , 2 , 3 , 1 , 5 , 4 , 4 , 3 , 3 , 3 , 3 })); java.lang.System.out.println(interviewguide.array.Problem2_ArrayFindOccurMoreThanHalf.findByAnAlternativeWay(new int[]{ 3 , 2 , 3 , 2 , 3 , 1 , 5 , 4 , 4 , 3 , 3 , 3 , 3 })); <BUGE> } 
<BUGS> public synchronized java.util.List<java.lang.String> getJobConsole(java.lang.String jobName) { java.lang.String buildNumber = null; <BUGE> java.lang.String url = prepareUrl(jobName, buildNumber, "console"); java.lang.String jjc = sendAndGetResponse(url, HttpMethod.GET, getHttpEntityWithHeaders()).getBody(); return java.util.Arrays.asList(jjc.split("\\n")); } 
@java.lang.Override public android.graphics.Bitmap transform(android.graphics.Bitmap source) { <BUGS> int y = 35; <BUGE> int x = 0; android.graphics.Bitmap result = android.graphics.Bitmap.createBitmap(source, x, y, source.getWidth(), (((source.getHeight()) * 3) / 5)); if (result != source) { source.recycle(); } return result; } 
public void onGetLocationStatus(java.lang.Boolean status, java.lang.String message) { if (status) { org.mygeotrust.indoor.tasks.detectIndoorOutdoor.IndoorOutdoorDetectorController.getInstance().startIndoorOutdoorDetector(this, this); toggleIndoorOutdoorButtonStatus(true); }else { org.mygeotrust.indoor.utils.dialogue.Dialogs.getInstance().showInfoDialog(this, " Cannot start indoor/outdoor Detector.", (((" GPS use Status: " + status) + "\n Error: ") + message), R.drawable.ic_warning, R.color.colorRed); <BUGS> <BUGE> } } 
public static java.util.Date StrToStartDate(java.lang.String str) { java.text.SimpleDateFormat format = new java.text.SimpleDateFormat("yyyy-MM-dd"); java.util.Date date = null; try { date = format.parse(str); } catch (java.lang.Exception e) { com.abel.hwes.util.SwapDateAndStringUtil.log.error(e.getMessage()); <BUGS> date = com.abel.hwes.util.SwapDateAndStringUtil.StrToEndDate("2006-08-01"); <BUGE> } return date; } 
<BUGS> private void nextBuffer() { <BUGE> if ((buf) == null) buf = state.buffer(); else buf = state.pushBuffer();  heapArr = (buf.isDirect()) ? null : buf.array(); baseOff = (buf.isDirect()) ? ((sun.nio.ch.DirectBuffer) (buf)).address() : org.apache.ignite.internal.util.GridUnsafe.BYTE_ARR_OFF; } 
@java.lang.Override public void onClick(android.view.View v) { switch (v.getId()) { <BUGS> case R.id.bLogout : userLocalStore.clearUserData(); userLocalStore.setUserLoggedIn(false); android.content.Intent logoutIntent = new android.content.Intent(this, com.example.elazaoui.projet.Login.class); startActivity(logoutIntent); break; <BUGE> case R.id.bShare : android.content.Intent shareIntent = new android.content.Intent(this, com.example.elazaoui.projet.Share.class); startActivity(shareIntent); break; case R.id.bSearch : android.content.Intent searchIntent = new android.content.Intent(this, com.example.elazaoui.projet.Search.class); startActivity(searchIntent); break; <BUGS> <BUGE> } } 
public void run() { <BUGS> while ((thread.getState()) != (java.lang.Thread.State.TERMINATED)) { <BUGE> try { java.util.Map<java.lang.Thread, java.lang.StackTraceElement[]> stacks = java.lang.Thread.getAllStackTraces(); java.lang.System.out.println(java.util.Arrays.toString(stacks.get(inspecteeThread))); <BUGS> } catch (java.lang.InterruptedException e) { <BUGE> } } } 
@java.lang.Override public javax.json.JsonObjectBuilder toJson() { <BUGS> return org.xcolab.util.json.NullsafeJsonObjectBuilder.of(javax.json.Json.createObjectBuilder()).add("description", getDescription()).add("displayItemType", getDisplayItemType().name()).add("widgetType", getType().name()); <BUGE> } 
protected byte[] convertBytes(java.util.ArrayList<java.lang.Integer> list) { <BUGS> <BUGE> byte[] ret = new byte[list.size()]; java.util.Iterator<java.lang.Integer> iterator = list.iterator(); for (int i = 0; i < (ret.length); i++) { ret[i] = iterator.next().byteValue(); } return ret; } 
@java.lang.Override public void removeAllTask() { <BUGS> java.util.Set<java.lang.String> exeKeys = mExecutePool.getAllTask().keySet(); for (java.lang.String key : exeKeys) { <BUGE> TASK task = mExecutePool.getAllTask().get(key); if (task != null) task.cancel();  } <BUGS> java.util.Set<java.lang.String> cacheKeys = mCachePool.getAllTask().keySet(); for (java.lang.String key : cacheKeys) { mExecutePool.removeTask(key); <BUGE> } } 
public double averagePopulation() { double average; long total = 0; for (int i = 0; i < (population.size()); i++) { total += population.get(i).getEvaluation(); } <BUGS> java.lang.System.out.println(("Evalutation Total: " + total)); <BUGE> average = total / (population.size()); return average; } 
<BUGS> private gov.anl.aps.cdb.portal.model.db.entities.ItemElementRelationship findConnectionRelationship(java.util.List<gov.anl.aps.cdb.portal.model.db.entities.ItemElementRelationship> ierList) { <BUGE> java.lang.String relationshipTypeName = ItemElementRelationshipTypeNames.itemCableConnection.getValue(); for (gov.anl.aps.cdb.portal.model.db.entities.ItemElementRelationship ittrIER : ierList) { if (ittrIER.getRelationshipType().getName().equals(relationshipTypeName)) { return ittrIER; } } return null; } 
private static void getRidOfPassedCheckpointsNear(Player.Buster buster) { java.util.List<Player.Agent> tbd = new java.util.ArrayList<Player.Agent>(); for (Player.Agent point : Player.checkpoints) { if ((buster.distanceTo(point)) < (Player.RADAR_DISTANCE)) { tbd.add(point); } } Player.checkpoints.removeAll(tbd); <BUGS> java.lang.System.err.println(("checkpoints remaining " + (Player.checkpoints.size()))); <BUGE> } 
public void onResume() { if (!(didShowLoadingState)) { maximFeed.showLoadingState(); didShowLoadingState = true; } maximManager.loadMaxims(context, new com.tcolligan.maximmaker.data.MaximManager.MaximsLoadedListener() { @java.lang.Override public void onMaximsLoaded(java.util.List<com.tcolligan.maximmaker.data.Maxim> loadedMaximList) { <BUGS> if (loadedMaximList == null) { maximFeed.showLoadingError(); }else if ((loadedMaximList.size()) == 0) { maximFeed.showEmptyState(); }else { maximFeed.showMaxims(loadedMaximList); }  <BUGE> } }); } 
private void readFromDisk() throws java.io.FileNotFoundException, java.io.IOException { java.io.ObjectInputStream in = new java.io.ObjectInputStream(new java.io.FileInputStream(DEFAULT_FILE_NAME)); <BUGS> for (int i = 0; i < (_SIZE); i++) { try { this.pagesInDisk = ((java.util.HashMap<java.lang.Long, com.hit.memoryunits.Page<byte[]>>) (in.readObject())); } catch (java.lang.Exception e) { } finally { in.close(); } <BUGE> } } 
public byte[] get(java.lang.String key, boolean renew) { net.vicp.lylab.core.model.CacheValue cv = getContainer().get(key); if (cv == null) return null;  <BUGS> if (((cv.getStartTime()) + (cv.getValidateTime())) < (java.lang.System.currentTimeMillis())) { <BUGE> remove(key, cv); return null; } if (renew) cv.renewStartTime();  return cv.getValue(); } 
public void afterTextChanged(android.text.Editable editable) { switch (view.getId()) { case R.id.input_namer : validateName(); break; case R.id.input_emailr : validateEmail(); break; case R.id.input_phoner : validatePhone(); <BUGS> <BUGE> break; case R.id.input_passwordr : validatePassword(); break; } } 
private void nimmAusgewaehlteMedienZurueck() { java.util.List<de.uni_hamburg.informatik.swt.se2.mediathek.materialien.Verleihkarte> verleihkarten = getSelectedVerleihkarten(); java.util.List<de.uni_hamburg.informatik.swt.se2.mediathek.materialien.medien.Medium> medien = new java.util.ArrayList<de.uni_hamburg.informatik.swt.se2.mediathek.materialien.medien.Medium>(); for (de.uni_hamburg.informatik.swt.se2.mediathek.materialien.Verleihkarte verleihkarte : verleihkarten) { medien.add(verleihkarte.getMedium()); } try { _verleihService.nimmZurueck(medien, de.uni_hamburg.informatik.swt.se2.mediathek.fachwerte.Datum.heute()); <BUGS> _vormerkService.rueckeAuf(medien); <BUGE> } catch (de.uni_hamburg.informatik.swt.se2.mediathek.services.verleih.ProtokollierException exception) { javax.swing.JOptionPane.showMessageDialog(null, exception.getMessage(), "Fehlermeldung", javax.swing.JOptionPane.ERROR_MESSAGE); } } 
@org.junit.Test public void whenSomePlayerWinByDiagonalShouldCheckThatCheckerReturnTrue() { model.WinChecker checker = new model.WinChecker(); model.Board board = new model.Board(); model.Player player = new model.Human("X"); <BUGS> boolean expected = true; <BUGE> board.performStep(player, 0, 0); board.performStep(player, 1, 1); board.performStep(player, 2, 2); boolean actual = checker.isWinner(player, board); <BUGS> assertThat(actual, org.hamcrest.core.Is.is(expected)); <BUGE> } 
public int findNodeNumber(int key) { edu.oakland.production.ClassProject.Database.Node focusNode = this.binaryTreeDatabase.getRootNode(); int nodeCount = 0; while ((focusNode.getKey()) != key) { if (key < (focusNode.getKey())) { focusNode = focusNode.leftChild; }else { focusNode = focusNode.rightChild; } if (focusNode == null) <BUGS> return -1; <BUGE>  nodeCount++; } return nodeCount++; } 
@java.lang.Override public java.lang.Object convert(java.lang.Object source, java.lang.Class<?> targetClass, io.beanmapper.core.BeanFieldMatch beanFieldMatch) { <BUGS> if ((source == null) || (beanFieldMatch.getSourceClass().equals(targetClass))) { <BUGE> return source; } java.lang.Object sourceAsString = beanMapper.convert(source, java.lang.String.class, beanFieldMatch); return beanMapper.convert(sourceAsString, targetClass, beanFieldMatch); } 
@org.junit.Test public void multiplyStringSimpleException() throws java.lang.Exception { try { firstOperand = new cpe200.Operand("-1"); secondOperand = new cpe200.Operand("1"); binaryCalculator.setFirstOperand(firstOperand); binaryCalculator.setSecondOperand(secondOperand); } catch (java.lang.Exception ex) { fail("Not expect exception here"); } try { <BUGS> assertEquals("-1", binaryCalculator.multiply()); <BUGE> fail("Expect an exception to be thrown before here"); } catch (java.lang.RuntimeException ex) { assertTrue(true); } catch (java.lang.Exception ex) { fail("Expect runtime exception, but the other is thrown"); } } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_todo); android.preference.PreferenceManager.setDefaultValues(this, R.xml.preferences, false); if (savedInstanceState == null) { fragment = com.codepath.todoapp.fragments.TodoFragment.newInstatnce(); <BUGS> getFragmentManager().beginTransaction().add(R.id.fListContainer, fragment).addToBackStack("todo").commit(); <BUGE> } } 
public boolean needsRefresh() { boolean needsRefresh; this.refreshLock.readLock().lock(); <BUGS> if ((this.expires) == 0) { <BUGE> needsRefresh = false; }else { long now = java.lang.System.currentTimeMillis(); long tokenDuration = now - (this.lastRefresh); needsRefresh = tokenDuration >= ((this.expires) - (com.box.sdk.BoxAPIConnection.REFRESH_EPSILON)); } this.refreshLock.readLock().unlock(); return needsRefresh; } 
@org.junit.After public void tearDown() throws java.lang.Exception { <BUGS> if (org.jboss.as.test.manualmode.messaging.ha.AbstractMessagingHATestCase.container.isStarted(org.jboss.as.test.manualmode.messaging.ha.AbstractMessagingHATestCase.SERVER1)) { org.jboss.as.test.manualmode.messaging.ha.AbstractMessagingHATestCase.container.stop(org.jboss.as.test.manualmode.messaging.ha.AbstractMessagingHATestCase.SERVER1); <BUGE> } <BUGS> restoreSnapshot(snapshotForServer1); if (org.jboss.as.test.manualmode.messaging.ha.AbstractMessagingHATestCase.container.isStarted(org.jboss.as.test.manualmode.messaging.ha.AbstractMessagingHATestCase.SERVER2)) { org.jboss.as.test.manualmode.messaging.ha.AbstractMessagingHATestCase.container.stop(org.jboss.as.test.manualmode.messaging.ha.AbstractMessagingHATestCase.SERVER2); <BUGE> } <BUGS> restoreSnapshot(snapshotForServer2); <BUGE> } 
private int getAgentEncoding(com.sun.org.apache.xalan.internal.xsltc.runtime.Node node, int timeStep, int binaryIndex) { <BUGS> return ((((vertexOffset) + (edgeOffset)) + (((makespan) * (node.getIndexInGraph())) * (numBinaryPropVars))) + ((timeStep - 1) * (numBinaryPropVars))) + binaryIndex; <BUGE> } 
private java.lang.String setEndOfLevel(int numLives) { pp.startGame(level.getLevel()); bg.setBackgroundImage(bg.getBackGroundImageFileName()); <BUGS> if (this.gameOver) this.gameOver = false; else <BUGE> bg.getNextBackGroundImageFileName();  msg.setGameStart(level.getLevel(), level.getLives()); level.newLevel(numLives); return "Level Finished"; } 
public void startDownloads() { <BUGS> mLoadingProgressBar.setVisibility(View.VISIBLE); <BUGE> vandy.mooc.utils.Utils.hideKeyboard(mActivity.get(), mUrlEditText.getWindowToken()); if (mUrlList.isEmpty()) vandy.mooc.utils.Utils.showToast(mActivity.get(), "no images provided"); else { <BUGS> <BUGE> for (java.lang.String urlString : mUrlList) startDownload(android.net.Uri.parse(urlString));  } } 
private int addChildNodes(tellh.com.recyclertreeview_lib.TreeNode pNode, int startIndex) { java.util.List<tellh.com.recyclertreeview_lib.TreeNode> childList = pNode.getChildList(); int addChildCount = 0; for (tellh.com.recyclertreeview_lib.TreeNode treeNode : childList) { displayNodes.add((startIndex + (addChildCount++)), treeNode); if (treeNode.isExpand()) { addChildCount += addChildNodes(treeNode, (startIndex + addChildCount)); } } <BUGS> pNode.toggle(); <BUGE> return addChildCount; } 
@java.lang.Override public void execute(backtype.storm.tuple.Tuple tuple) { java.lang.String ChannelCode = tuple.getStringByField("channelCode"); long timeStamp = tuple.getLongByField("timeStamp"); float value = tuple.getFloatByField("value"); if (channelSet.contains(ChannelCode)) { if (isFirst) { <BUGS> java.lang.System.out.println("I'm in it"); <BUGE> getQueryMap.setFirstTimestamp(timeStamp); <BUGS> java.lang.System.out.println(((ChannelCode + '\t') + timeStamp)); <BUGE> isFirst = false; } _collector.emit(new backtype.storm.tuple.Values(ChannelCode, timeStamp, value)); } } 
public javax.json.JsonStructure getEventDistrictPoints(java.lang.String eventKey, int verboseLevel) { javax.json.JsonStructure data = get((("event/" + eventKey) + "/district_points"), header); <BUGS> if (verboseLevel < 2) { <BUGE> data = ((javax.json.JsonStructure) (((javax.json.JsonObject) (data)).get("points"))); } return data; } 
private void validateCommand(org.spine3.examples.todolist.UpdateTaskDescription cmd) { <BUGS> org.spine3.examples.todolist.Task taskState = getState(); <BUGE> java.lang.String description = cmd.getUpdatedDescription(); com.google.common.base.Preconditions.checkNotNull(description, "Description cannot be null."); if ((description.length()) < 3) { throw new java.lang.IllegalArgumentException("Description should contains at least 3 alphanumeric symbols."); } validateCommandOnDeletionAndCompletion(); } 
public static java.util.List<fr.inria.spirals.jtravis.entities.Build> getBuildsFromRepositoryWithLimitDate(fr.inria.spirals.jtravis.entities.Repository repository, java.util.Date limitDate) { java.util.List<fr.inria.spirals.jtravis.entities.Build> result = new java.util.ArrayList<fr.inria.spirals.jtravis.entities.Build>(); <BUGS> fr.inria.spirals.jtravis.helpers.BuildHelper.getBuildsFromSlugRecursively(repository.getSlug(), result, limitDate, 0, fr.inria.spirals.jtravis.helpers.BuildHelper.getEventTypes(), 0, null, (-1), false); <BUGE> for (fr.inria.spirals.jtravis.entities.Build b : result) { b.setRepository(repository); } return result; } 
@org.junit.Test(expected = io.minio.InvalidAclNameException.class) public void testSetNullAclFails() throws io.minio.MinioException, java.io.IOException, java.security.InvalidKeyException, java.security.NoSuchAlgorithmException, org.xmlpull.v1.XmlPullParserException { com.squareup.okhttp.mockwebserver.MockWebServer server = new com.squareup.okhttp.mockwebserver.MockWebServer(); com.squareup.okhttp.mockwebserver.MockResponse response = new com.squareup.okhttp.mockwebserver.MockResponse(); response.addHeader("Date", "Sun, 29 Jun 2015 22:01:10 GMT"); response.setResponseCode(200); server.enqueue(response); server.start(); <BUGS> io.minio.MinioClient client = new io.minio.MinioClient(server.getUrl("")); <BUGE> client.makeBucket("bucket"); client.setBucketAcl("bucket", null); throw new java.lang.RuntimeException("Expected exception did not fire"); } 
@org.junit.Test public void containsValueShouldFindInstance() { io.netty.util.collection.IntObjectHashMapTest.Value v = new io.netty.util.collection.IntObjectHashMapTest.Value("v1"); map.put(1, new io.netty.util.collection.IntObjectHashMapTest.Value("v2")); map.put(2, new io.netty.util.collection.IntObjectHashMapTest.Value("v3")); map.put(3, v); <BUGS> org.junit.Assert.assertTrue(map.containsValue(v)); <BUGE> } 
<BUGS> private void setObsData() { <BUGE> obsData.get(0).setYValue(javaTime); obsData.get(1).setYValue(cTime); obsData.get(2).setYValue(pythonTime); obsData.get(3).setYValue(cybobTime); } 
public void addDeadDenLocation(viperinos.MapLocation den) { viperinos.MapLocation[] temp = new viperinos.MapLocation[(deadDens.length) + 1]; java.lang.System.arraycopy(deadDens, 0, temp, 0, deadDens.length); <BUGS> temp[((deadDens.length) + 1)] = den; <BUGE> deadDens = temp; } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_map); butterknife.ButterKnife.bind(this); mMapView.onCreate(savedInstanceState); setupMap(); <BUGS> mMapHelper = new com.mredrock.cyxbs.util.MapHelper(mHandler, getExternalCacheDir()); <BUGE> mMapHelper.readMapPictureFromCache(); } 
private boolean isThreadTime1(java.lang.String strText) { <BUGS> <BUGE> java.lang.String strLevel = ((java.lang.String) (strText.substring(31, 33))); return strLevel.equals("D ") ? true : strLevel.equals("V ") ? true : strLevel.equals("I ") ? true : strLevel.equals("W ") ? true : strLevel.equals("E ") ? true : strLevel.equals("F ") ? true : false; } 
public static java.lang.String readRequestFile(java.lang.String fileName) throws java.lang.Exception { java.io.InputStream is = new java.io.FileInputStream(fileName); java.io.BufferedReader buf = new java.io.BufferedReader(new java.io.InputStreamReader(is)); java.lang.String line = buf.readLine(); java.lang.StringBuilder sb = new java.lang.StringBuilder(); while (line != null) { <BUGS> sb.append(line).append("\n"); <BUGE> line = buf.readLine(); } return sb.toString(); } 
@org.junit.Test public void selectWeek_verifyWeekAndHymnListingsAppear() { playHymnsPage.clickOnDropdown(); org.openqa.selenium.support.ui.WebDriverWait waitForWeek = new org.openqa.selenium.support.ui.WebDriverWait(driver, 1); org.openqa.selenium.WebElement week = waitForWeek.until(org.openqa.selenium.support.ui.ExpectedConditions.elementToBeClickable(org.openqa.selenium.By.className("week"))); week.click(); <BUGS> org.openqa.selenium.support.ui.WebDriverWait waitForHymn = new org.openqa.selenium.support.ui.WebDriverWait(driver, 1); org.openqa.selenium.WebElement hymn = waitForWeek.until(org.openqa.selenium.support.ui.ExpectedConditions.elementToBeClickable(org.openqa.selenium.By.className("hymn1-text"))); <BUGE> } 
public void actionPerformed(java.awt.event.ActionEvent e) { <BUGS> if ((radioButtonChan6.isSelected()) == false) { <BUGE> try { c.sendCommand("CONN 6"); } catch (java.io.IOException e1) { e1.printStackTrace(); } }else { try { c.sendCommand("DISC 6"); } catch (java.io.IOException e1) { e1.printStackTrace(); } } if ((c.connected[1][2]) == null) { radioButtonChan7.setSelected(false); } } 
@java.lang.Override public void onClick(android.view.View view) { boolean checked = ((android.widget.RadioButton) (view)).isChecked(); switch (view.getId()) { case R.id.wsgh_yes_rb : if (checked) wsghSpinnerRl.setVisibility(View.GONE);  <BUGS> loadReportingFormSelfFragment(); if ((getActivity()) instanceof com.unfpa.safepal.report.ReportingActivity) { ((com.unfpa.safepal.report.ReportingActivity) (getActivity())).updateNextButtonToSubmit(); } <BUGE> break; case R.id.wsgh_someoneelse_rb : if (checked) wsghSpinnerRl.setVisibility(View.VISIBLE);  break; } } 
private void addContents() { for (com.ihasama.ohtu.domain.Reference ref : dao.getObjects()) { javax.swing.JLabel label = new javax.swing.JLabel(ref.getId()); add(label); <BUGS> add(new javax.swing.JButton(new com.ihasama.ohtu.ui.ReferenceList.EditReferenceAction("edit", ref)), "wrap"); <BUGE> } } 
<BUGS> protected void bleCharacteristicRead(java.lang.String address, java.lang.String uuid, int status, byte[] value) { <BUGE> android.content.Intent intent = new android.content.Intent(com.hypercryptic.bleware.BLEService.BLE_CHARACTERISTIC_READ); intent.putExtra(com.hypercryptic.bleware.BLEService.EXTRA_ADDR, address); intent.putExtra(com.hypercryptic.bleware.BLEService.EXTRA_UUID, uuid); intent.putExtra(com.hypercryptic.bleware.BLEService.EXTRA_STATUS, status); intent.putExtra(com.hypercryptic.bleware.BLEService.EXTRA_VALUE, value); sendBroadcast(intent); requestProcessed(address, RequestType.READ_CHARACTERISTIC, true); } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); android.widget.TextView tvInfo = ((android.widget.TextView) (findViewById(R.id.app_info))); tvInfo.setText(getString(R.string.app_info)); mHelper = new com.bjlanza.udacity.bj_habittracker.HabitDbHelper(this); db = mHelper.getWritableDatabase(); insertData("Walking Dog", "21", "Pets"); insertData("Programming one hour per day", "15", "Study"); <BUGS> updateData("Walking", "7"); <BUGE> getData(); deleteTable(); } 
public void setCharacteristicNotification(android.bluetooth.BluetoothGattCharacteristic characteristic, boolean enabled) { com.eveningoutpost.dexdrip.Models.UserError.Log.i(com.eveningoutpost.dexdrip.Services.DexShareCollectionService.TAG, "Characteristic setting notification"); <BUGS> mBluetoothGatt.setCharacteristicNotification(characteristic, enabled); android.bluetooth.BluetoothGattDescriptor descriptor = characteristic.getDescriptor(java.util.UUID.fromString(HM10Attributes.CLIENT_CHARACTERISTIC_CONFIG)); com.eveningoutpost.dexdrip.Models.UserError.Log.i(com.eveningoutpost.dexdrip.Services.DexShareCollectionService.TAG, ("Descriptor found: " + (descriptor.getUuid()))); descriptor.setValue(BluetoothGattDescriptor.ENABLE_NOTIFICATION_VALUE); mBluetoothGatt.writeDescriptor(descriptor); <BUGE> } 
public boolean checkLastUpdate(T e) { try { java.sql.Timestamp databaseDate = this.getById(e.getId()).getLastUpdate(); if (databaseDate.before(e.getLastUpdate())) { return true; } return false; } catch (com.couchbase.client.core.BucketClosedException ex) { connect(); <BUGS> checkLastUpdate(e); <BUGE> } return false; } 
public static <K, V> java.lang.Iterable<java.util.Map.Entry<K, V>> makeIterable(final java.util.Map<K, V> map) { if ((map == null) || (map.isEmpty())) { return ovation.odata.util.CollectionUtils.makeEmptyIterable(); } <BUGS> return ovation.odata.util.CollectionUtils.makeIterable(map.entrySet().iterator()); <BUGE> } 
@org.springframework.web.bind.annotation.RequestMapping(value = "/get-menus", method = org.springframework.web.bind.annotation.RequestMethod.GET) public org.springframework.http.ResponseEntity<?> getMenus() { com.FoodCourtServer.controller.MenuController.LOGGER.info("fetching menus"); java.util.List<com.FoodCourtServer.model.Menu> menus = menuService.getMenus(); <BUGS> if (menus == null) { <BUGE> com.FoodCourtServer.controller.MenuController.LOGGER.error("menus not found"); return new org.springframework.http.ResponseEntity(new com.FoodCourtServer.util.CustomErrorType("menus not found"), org.springframework.http.HttpStatus.NOT_FOUND); } return new org.springframework.http.ResponseEntity(menus, org.springframework.http.HttpStatus.OK); } 
<BUGS> private static java.lang.String getRequiredSpaces(java.lang.String message) { <BUGE> java.lang.String res = ""; <BUGS> final java.lang.String reference = "#########################################################################"; <BUGE> int requiredSpaces = ((reference.length()) - (message.length())) - 4; for (int i = 0; i < requiredSpaces; i++) { res = res + " "; } return res; } 
public void generateEnums(final java.io.OutputStream outputStream) throws java.io.IOException { <BUGS> if (com.spectralogic.ds3autogen.utils.ConverterUtil.hasContent(spec.getTypes())) { for (final com.spectralogic.ds3autogen.api.models.Ds3Type ds3TypeEntry : spec.getTypes().values()) { final java.lang.Enum enumEntry = com.spectralogic.ds3autogen.c.converters.EnumConverter.toEnum(ds3TypeEntry); if (com.spectralogic.ds3autogen.utils.ConverterUtil.hasContent(enumEntry.getValues())) { processTemplate(enumEntry, "TypedefEnum.ftl", outputStream); } <BUGE> } } } 
public void setMaterial(org.gearvrf.GVRMaterial material, int passIndex) { if (passIndex < (mRenderPassList.size())) { mRenderPassList.get(passIndex).setMaterial(material); <BUGS> org.gearvrf.NativeRenderData.setMaterial(getNative(), material.getNative(), passIndex); <BUGE> }else { android.util.Log.e(org.gearvrf.GVRRenderData.TAG, (("Trying to set material from invalid pass. Pass " + passIndex) + " was not created.")); } } 
@java.lang.Override public void destroy() { try { <BUGS> if ((consumer) != null) { consumer.close(); } if ((session) != null) { session.close(); } if ((connection) != null) { connection.close(); } <BUGE> } catch (java.lang.Exception ex) { throw new java.lang.RuntimeException(("Exception on closing SQS connection: " + (ex.getMessage())), ex); } } 
@org.junit.Test public void lowSpecificityShouldFollowHigherSpecificity() { <BUGS> subject = new uk.ac.ebi.atlas.model.experiment.differential.DifferentialProfileComparator(true, null, allContrasts, Regulation.UP); <BUGE> org.mockito.Mockito.when(profileMock1.getSpecificity(Regulation.UP)).thenReturn(1); org.mockito.Mockito.when(profileMock2.getSpecificity(Regulation.UP)).thenReturn(2); int comparison = subject.compare(profileMock1, profileMock2); org.hamcrest.MatcherAssert.assertThat(comparison, org.hamcrest.Matchers.lessThan(0)); } 
public int getBacklogMarkerPosition() { try { <BUGS> for (int i = 0; ((data) != null) && (i < (data.size())); i++) { com.irccloud.android.data.model.Event e = data.get(i); if ((e != null) && ((e.row_type) == (com.irccloud.android.fragment.MessageViewFragment.ROW_BACKLOGMARKER))) { return i; <BUGE> } } } catch (java.lang.Exception e) { } return -1; } 
public static void updateClient(com.robrit.moofluids.common.entity.EntityFluidCow fluidCow, long worldTime) { net.minecraft.nbt.NBTTagCompound tag = fluidCow.getEntityData(); <BUGS> if ((tag.hasKey("rfc:nextUpdate")) && ((tag.getLong("rfc:nextUpdate")) < worldTime)) { com.jdlogic.ranchablefluidcows.ranchable.RanchableFC.sendPacket(fluidCow); <BUGE> } <BUGS> <BUGE> tag.setLong("rfc:nextUpdate", (worldTime + (20 * 10))); } 
@java.lang.Override public void onMessage(int instanceId, java.lang.String message) { int size = java.lang.Integer.parseInt(message); <BUGS> byte[] buffer = new byte[size + 1]; <BUGE> for (int i = 0; i < size; ++i) buffer[i] = 'p';  <BUGS> buffer[size] = 0; byte[] encodedBufer = org.apache.commons.codec.binary.Base64.encodeBase64(buffer); java.lang.String result = new java.lang.String(encodedBufer); <BUGE> postMessage(instanceId, result); } 
@java.lang.Override public void init() { telemetry.addData("OpMode", "*** AutoWheelz v1.0 ***"); runtime.reset(); <BUGS> com.qualcomm.ftcrobotcontroller.opmodes.OpState.SetCurrentState("Forward"); <BUGE> motorR = hardwareMap.dcMotor.get("motor_r"); <BUGS> motorR.setDirection(DcMotor.Direction.REVERSE); <BUGE> motorR.setChannelMode(DcMotorController.RunMode.RESET_ENCODERS); motorR.setChannelMode(DcMotorController.RunMode.RUN_USING_ENCODERS); motorL = hardwareMap.dcMotor.get("motor_l"); <BUGS> <BUGE> motorL.setChannelMode(DcMotorController.RunMode.RESET_ENCODERS); motorL.setChannelMode(DcMotorController.RunMode.RUN_USING_ENCODERS); } 
private void initSheetWidthConfig(org.apache.poi.ss.usermodel.Sheet sheet) { xgt.util.excel.Config config = getConfig(); <BUGS> sheet.setDefaultColumnWidth(((config.getDefaultWidth()) * 256)); <BUGE> sheet.setDefaultRowHeightInPoints(config.getDefaultHeight()); for (int index : config.getKeysOfWidth()) { sheet.setColumnWidth(index, ((config.getColumnWidth(index)) * 256)); } } 
<BUGS> private com.nike.cerberus.service.StaticAssetManager.AssetResourceFile create(java.nio.file.Path path, java.lang.String rootDirectoryPath) { return new com.nike.cerberus.service.StaticAssetManager.AssetResourceFile(path.getFileName().toString(), com.nike.cerberus.service.StaticAssetManager.getRelativePath(path.toAbsolutePath().toString(), rootDirectoryPath), com.nike.cerberus.service.StaticAssetManager.getMimeTypeForFileFromName(path.getFileName().toString()), com.google.common.collect.ImmutableList.<java.lang.Byte>builder().addAll(com.nike.cerberus.service.StaticAssetManager.getFileContents(path)).build()); <BUGE> } 
public boolean isGreet(Sentence s) { Greeting greet = new Greeting(); for (java.lang.String x : greet.greet1) { if (Kumar.search(x, s.sentence)) { <BUGS> java.lang.System.out.println("pardeep"); <BUGE> return true; } } for (java.lang.String x : greet.greet2) { if (Kumar.search(x, s.sentence)) { <BUGS> java.lang.System.out.println("nala"); <BUGE> return true; } } return false; } 
@org.junit.Test public void useBasicAuthorization() throws java.lang.Exception { com.clouway.chita.HttpRequest request = com.clouway.chita.HttpRequest.httpRequest(new com.clouway.chita.TargetUrl(serverUrl, com.clouway.chita.HttpClientTest.serviceUrl)).basicAuthorization("John", "pass123").post("").build(); httpClient.execute(request); <BUGS> org.junit.Assert.assertThat(server.getRequestHeaders().get("Authorization").startsWith("Basic"), org.hamcrest.Matchers.is(true)); <BUGE> } 
public void union(int p, int q) { int root_p = find(p); int root_q = find(q); if ((rank[root_p]) > (rank[root_q])) { <BUGS> set[root_q] = root_q; <BUGE> }else { set[root_p] = root_q; if ((rank[root_p]) == (rank[root_q])) { (rank[root_q])++; } } } 
public static void selectNextTableRow(javax.swing.JTable table) { int index = table.getSelectedRow(); if (index == (-1)) { index = 0; } table.clearSelection(); if ((++index) > ((table.getRowCount()) - 1)) { index = 0; } <BUGS> index = table.convertRowIndexToView(index); <BUGE> table.addRowSelectionInterval(index, index); } 
public static com.github.bijoysingh.starter.item.TimestampItem getTimestampItem(java.lang.String timestamp, org.joda.time.DateTimeZone dateTimeZone, java.lang.Integer hour, java.lang.Integer minutes) { org.joda.time.DateTime dateTime = com.github.bijoysingh.starter.util.TimestampManager.getDateTimeObject(timestamp); if (dateTime == null) { return new com.github.bijoysingh.starter.item.TimestampItem(timestamp, null, null, java.util.Calendar.getInstance()); } dateTime = dateTime.toDateTime(dateTimeZone); <BUGS> dateTime = dateTime.plusHours(5).plusMinutes(30); <BUGE> return com.github.bijoysingh.starter.util.TimestampManager.createTimestampItem(timestamp, dateTime); } 
public com.hearthsim.card.CharacterIndex convertCharIndex(com.hearthsim.card.CharacterIndex index) { switch (index) { case HERO : return com.hearthsim.card.CharacterIndex.HERO; case MINION_1 : return com.hearthsim.card.CharacterIndex.MINION_1; case MINION_2 : return com.hearthsim.card.CharacterIndex.MINION_2; case MINION_3 : return com.hearthsim.card.CharacterIndex.MINION_3; case MINION_4 : return com.hearthsim.card.CharacterIndex.MINION_4; case MINION_5 : return com.hearthsim.card.CharacterIndex.MINION_5; case MINION_6 : return com.hearthsim.card.CharacterIndex.MINION_6; case MINION_7 : return com.hearthsim.card.CharacterIndex.MINION_7; case MINION_8 : return com.hearthsim.card.CharacterIndex.MINION_8; case MINION_9 : return com.hearthsim.card.CharacterIndex.MINION_9; case UNKNOWN : return com.hearthsim.card.CharacterIndex.UNKNOWN; } <BUGS> <BUGE> } 
@java.lang.Override public void onRequestPermissionsResult(int requestCode, java.lang.String[] permissions, int[] grantResults) { <BUGS> if (requestCode == (com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.READ_PERMISSION)) { if (com.example.divyanshu.smyt.Utils.PermissionUtil.verifyPermissions(grantResults)) { com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.mCallback.onPermissionGranted(com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.PERMISSION_TYPE); <BUGE> }else { <BUGS> android.util.Log.i("BaseActivity", "permission was NOT granted."); com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.mCallback.onPermissionDenied(com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.PERMISSION_TYPE); <BUGE> } <BUGS> }else { super.onRequestPermissionsResult(requestCode, permissions, grantResults); <BUGE> } } 
public boolean setRedUpgrade() { if ((redBalls) < 5) { return false; } redBalls = (redBalls) - 5; if ((red) == null) { <BUGS> red = new uk.org.ulcompsoc.ld32.components.upgrade.Upgrade(uk.org.ulcompsoc.ld32.components.upgrade.Upgrade.UpgradeType.BALL_NUMBER_PLUS_1); <BUGE> return true; } switch (red.getUpgradeType()) { case BALL_NUMBER_PLUS_1 : { <BUGS> red = new uk.org.ulcompsoc.ld32.components.upgrade.Upgrade(uk.org.ulcompsoc.ld32.components.upgrade.Upgrade.UpgradeType.BALL_NUMBER_PLUS_2); <BUGE> break; } default : return false; } return false; } 
public void test_132_ACLCreateFields(edu.umass.cs.gnsclient.client.util.GuidEntry westyEntry) { try { edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest.client.fieldUpdate(westyEntry.getGuid(), "environment", "work", westyEntry); edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest.client.fieldUpdate(westyEntry.getGuid(), "ssn", "000-00-0000", westyEntry); edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest.client.fieldUpdate(westyEntry.getGuid(), "password", "666flapJack", westyEntry); edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest.client.fieldUpdate(westyEntry.getGuid(), "address", "100 Hinkledinkle Drive", westyEntry); } catch (java.lang.Exception e) { <BUGS> edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest.failWithStackTrace("Exception while creating fields in ACLCreateFields: ", e); <BUGE> } } 
private void writePropertyContainer(org.codehaus.jackson.JsonGenerator out, org.neo4j.graphdb.PropertyContainer value) throws java.io.IOException { out.writeStartObject(); <BUGS> for (java.lang.String key : value.getPropertyKeys()) { out.writeObjectField(key, value.getProperty(key)); <BUGE> } <BUGS> out.writeEndObject(); <BUGE> } 
@android.support.annotation.Nullable @java.lang.Override public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) { android.view.View rootView = inflater.inflate(R.layout.bundles_fragment, null); model = com.inaetics.demonstrator.model.Model.getInstance(); model.addObserver(this); adapter = new com.inaetics.demonstrator.controller.BundleItemAdapter(getActivity().getBaseContext(), R.layout.bundle_item, model.getBundles(), model); android.widget.ListView bundleList = ((android.widget.ListView) (rootView.findViewById(R.id.bundles_listview))); bundleList.setAdapter(adapter); <BUGS> setRetainInstance(true); <BUGE> return rootView; } 
public java.util.ArrayList<csv.Person> readCsv(java.io.InputStream is) throws java.io.IOException { java.io.BufferedInputStream bis = new java.io.BufferedInputStream(is); java.io.BufferedReader reader = new java.io.BufferedReader(new java.io.InputStreamReader(bis)); try { java.lang.String line; while ((line = reader.readLine()) != null) { <BUGS> parsedPersons.add(csv.Person.toPerson(line)); <BUGE> } } catch (java.lang.Exception e) { java.lang.System.out.println(e.getMessage()); } return parsedPersons; } 
@org.junit.Test public void parseCommentWithNewLines() { java.lang.String text = "\n" + ((("   * The version identifier for this Serializable class.\n" + "   * Increment only if the <i>serialized</i> form of the\n") + "   * class changes.\n") + "   "); <BUGS> org.junit.Assert.assertEquals(new com.github.javaparser.javadoc.Javadoc(com.github.javaparser.javadoc.description.JavadocDescription.parseText(("The version identifier for this Serializable class.\n" + ("Increment only if the <i>serialized</i> form of the\n" + "class changes.")))), new com.github.javaparser.JavadocParser().parse(text)); <BUGE> } 
protected org.jbrackets.TemplateEngine autodetectTemplateEngine() throws org.springframework.beans.BeansException { try { org.jbrackets.web.JBracketsConfig jBracketsConfig = org.springframework.beans.factory.BeanFactoryUtils.beanOfTypeIncludingAncestors(getApplicationContext(), org.jbrackets.web.JBracketsConfig.class, true, false); log.info("using provided jBracketConfig."); <BUGS> setEvalContext(jBracketsConfig.getEvaluationContext()); <BUGE> return jBracketsConfig.getTemplateEngine(); } catch (org.springframework.beans.factory.NoSuchBeanDefinitionException ex) { org.jbrackets.web.JBracketsConfig jBracketsConfig = new org.jbrackets.web.JBracketsConfig(); jBracketsConfig.afterPropertiesSet(); <BUGS> setEvalContext(jBracketsConfig.getEvaluationContext()); <BUGE> log.info("using default jBracketConfig."); return jBracketsConfig.getTemplateEngine(); } } 
private void putTagsInJSONObj(org.json.simple.JSONObject object, java.lang.String[] tags) { <BUGS> if (!(tags.equals(null))) { <BUGE> java.util.List<java.lang.String> tagList = new java.util.ArrayList<java.lang.String>(); for (java.lang.String string : tags) { tagList.add(string); } object.put("tags", tagList); }else { object.put("tags", null); } } 
<BUGS> private org.modeldriven.alf.fuml.mapping.expressions.ExpressionMapping mapOperand(org.modeldriven.alf.syntax.expressions.Expression operand) throws org.modeldriven.alf.mapping.MappingError { <BUGE> org.modeldriven.alf.fuml.mapping.expressions.ExpressionMapping operandMapping = null; org.modeldriven.alf.fuml.mapping.FumlMapping mapping = this.fumlMap(operand); if (!(mapping instanceof org.modeldriven.alf.fuml.mapping.expressions.ExpressionMapping)) { this.throwError(("Error mapping operand expression: " + (mapping.getErrorMessage()))); }else { operandMapping = ((org.modeldriven.alf.fuml.mapping.expressions.ExpressionMapping) (mapping)); } return operandMapping; } 
public static void main(java.lang.String[] args) { it.polimi.modaclouds.scalingrules.utils.CloudMLDaemon m = new it.polimi.modaclouds.scalingrules.utils.CloudMLDaemon(); com.beust.jcommander.JCommander jc = new com.beust.jcommander.JCommander(m, args); java.lang.System.out.println(it.polimi.modaclouds.scalingrules.utils.CloudMLDaemon.APP_TITLE); if (m.help) { jc.usage(); java.lang.System.exit(0); } it.polimi.modaclouds.scalingrules.Configuration.CLOUDML_PORT = m.cloudMLPort; it.polimi.modaclouds.scalingrules.utils.CloudMLDaemon.logger.info("Starting the CloudML daemon on port {}...", it.polimi.modaclouds.scalingrules.Configuration.CLOUDML_PORT); <BUGS> it.polimi.modaclouds.scalingrules.utils.CloudMLDaemon.start(it.polimi.modaclouds.scalingrules.Configuration.DEFAULT_CLOUDML_PORT); <BUGE> } 
public void removeOne(T item) { nodes.TreeNode<T> current = root; while (current != null) { nodes.TreeNode<T> next = current.checkNode(item); if (current == next) { current.deincrementItemCount(); return ; <BUGS> } <BUGE> } } 
@java.lang.Override public void readFromNBT(net.minecraft.nbt.NBTTagCompound nbt) { super.readFromNBT(nbt); this.burnTimeLeft = nbt.getInteger("burnTime"); this.cookTimeLeft = nbt.getInteger("cookTimeLeft"); <BUGS> this.cooking = new net.minecraft.item.ItemStack(((net.minecraft.nbt.NBTTagCompound) (nbt.getTag("cookingItem")))); <BUGE> } 
public boolean isItPossibleToShoot(de.hsbremen.battleshipextreme.model.FieldState[][] board, int startX, int startY) { boolean result = false; <BUGS> de.hsbremen.battleshipextreme.model.FieldState state = board[startX][startY]; <BUGE> if ((state == (de.hsbremen.battleshipextreme.model.FieldState.HAS_SHIP)) || (state == (de.hsbremen.battleshipextreme.model.FieldState.IS_EMPTY))) { result = true; } return result; } 
@java.lang.Override <BUGS> protected void removeInfoView(android.view.View view) { <BUGE> if ((view.getParent()) != null) ((android.view.ViewGroup) (view.getParent())).removeView(view);  ((android.widget.LinearLayout) (guiView.findViewById(R.id.infoLayout))).removeView(view); } 
public static java.lang.String fixPath(java.lang.String path) { java.lang.String prefix; java.lang.String suffix; <BUGS> prefix = path.substring(0, path.lastIndexOf("/")); suffix = path.substring(path.lastIndexOf("/")); prefix = prefix.replaceAll("%20", " "); return prefix.concat(suffix); <BUGE> } 
@org.junit.Test public void getSubTaskTest() { java.util.ArrayList<net.sf.memoranda.Task> container; container = new java.util.ArrayList<net.sf.memoranda.Task>(); net.sf.memoranda.Task child; <BUGS> child = new net.sf.memoranda.TaskImpl(task); <BUGE> child.setID("child"); container.add(child); task.setSubTasks(container); <BUGS> assertEquals(task.getSubTask("child"), child); <BUGE> } 
@java.lang.Override public void request(long n) { if ((terminated) == 1) { return ; } if (reactor.core.support.BackpressureUtils.checkRequest(n, inputSubscriber)) { <BUGS> reactor.core.support.BackpressureUtils.getAndAdd(REQUESTED, this, n); if (n == (java.lang.Long.MAX_VALUE)) { <BUGE> org.reactivestreams.Subscription subscription = this.subscription; if (subscription != null) { subscription.request(n); } }else { drainBackpressureQueue(); } } } 
protected int nearMinesCount(int line, int place) { <BUGS> int count = 1; <BUGE> for (int[] near : net.patttern.minesweeper.proto.bases.BaseArea.nears) { count += (cellMined((line + (near[0])), (place + (near[1])))) ? 1 : 0; } return count; } 
@java.lang.Override public void update(java.util.Observable o, java.lang.Object arg) { shared.game.map.Index currentTurn = ModelFacade.facace_currentgame.currentgame.getModel().getTurntracker().getCurrentTurn(); shared.game.player.Player player = ModelFacade.facace_currentgame.getMyplayers().get(currentTurn); <BUGS> if (LoginController.REALPURENAME.equals(player.getName())) { updateGameState("End Turn", true); <BUGE> } } 
@java.lang.Override public void startListening() { try { java.lang.String username = s3proftaak.Client.ClientAdministration.getInstance().getAccount().getUsername(); <BUGS> java.lang.System.out.println(s3proftaak.Client.RMIClient.getInstance()); java.lang.System.out.println(s3proftaak.Client.RMIClient.getInstance().getServerAdministration()); <BUGE> s3proftaak.Client.RMIClient.getInstance().getServerAdministration().addListener(username, this, "LobbyList"); } catch (java.rmi.RemoteException ex) { s3proftaak.Client.ClientAdministration.getInstance().connectionLost(); } } 
public void write(byte[] data) { int index = 0; while (index < (clientCount)) { <BUGS> clients[index].write(data); <BUGE> if (clients[index].active()) { <BUGS> <BUGE> index++; }else { removeIndex(index); } } } 
private void loadCouponCard() { itemSelectCoupon = 0; txtTitleName.setText(getString(R.string.stores_qrcode_coupon)); com.nct.model.CouponCategory item = coupon_category.get(0); showInfoCouponCard(item); viewPager.setAdapter(couponCardPagerAdapter); <BUGS> viewPager.setOffscreenPageLimit(coupon_category.size()); <BUGE> viewPager.setCurrentItem(0); } 
@java.lang.Override public <T> T manufacturePojoWithFullData(java.lang.Class<T> pojoClass, java.lang.reflect.Type... genericTypeArgs) { uk.co.jemos.podam.common.ManufacturingContext manufacturingCtx = new uk.co.jemos.podam.common.ManufacturingContext(); <BUGS> manufacturingCtx.getPojos().put(pojoClass, 0); <BUGE> manufacturingCtx.setConstructorOrdering(Order.HEAVY_FIRST); return doManufacturePojo(pojoClass, manufacturingCtx, genericTypeArgs); } 
public java.util.List<cn.edu.ustb.sem.order.entity.Order> listForceScheduleOrder() { <BUGS> java.lang.String hql = ((((((((((("from " + (this.tableName)) + " o where (o.status = ") + (cn.edu.ustb.sem.order.entity.OrderStatus.initial)) + " ") + "or o.processIsCheck = ") + (cn.edu.ustb.sem.order.entity.Order.PROCESS_IS_NOT_CHECKED)) + " ") + "or o.materialIsChecked = ") + (cn.edu.ustb.sem.order.entity.Order.PROCESS_IS_NOT_CHECKED)) + ") ") + "and o.status != ") + (cn.edu.ustb.sem.order.entity.OrderStatus.forced); <BUGE> return list(hql, (-1), (-1)); } 
@java.lang.Override public void setBounds(int left, int top, int right, int bottom) { super.setBounds(left, top, right, bottom); mHeight = bottom - top; mWidth = right - left; <BUGS> mWarningTextPaint.setTextSize(((mHeight) * 0.75F)); <BUGE> mWarningTextHeight = -(mWarningTextPaint.getFontMetrics().ascent); } 
public void setEnable(boolean flag) { mIsEnabled = flag; if ((getNative()) != 0) { <BUGS> org.gearvrf.NativeComponent.setEnabled(getNative(), flag); <BUGE> } if (flag) { onEnable(); }else { onDisable(); } } 
public static java.util.List<java.lang.String> getListOfAuthorizedDomainsByConsumerKey(java.lang.String consumerKey) throws org.wso2.carbon.apimgt.api.APIManagementException { java.lang.String list = org.wso2.carbon.apimgt.impl.dao.ApiMgtDAO.getAuthorizedDomainsByConsumerKey(consumerKey); <BUGS> if ((list != null) || (!(list.isEmpty()))) { <BUGE> return java.util.Arrays.asList(list.split(",")); } return null; } 
<BUGS> public void spawnSouth(int offX, int offY, int height) { <BUGE> java.awt.Graphics2D s2d = backImage.createGraphics(); s2d.drawImage(this.getSouth(), (offX - ((this.getSouth().getWidth()) / 2)), offY, this.getSouth().getWidth(), height, null); <BUGS> updateGeneratedImage(); <BUGE> } 
@java.lang.Override public void onError(java.lang.Throwable e) { super.onError(e); showLoading(false); <BUGS> java.lang.Exception ex = ((java.lang.Exception) (e)); java.lang.String errorMessage = com.nairbspace.octoandroid.exception.ErrorMessageFactory.create(mScreen.context(), ex); if (com.nairbspace.octoandroid.exception.ErrorMessageFactory.ifSslError(mScreen.context(), e.getMessage())) { <BUGE> mScreen.showAlertDialog(); }else { mScreen.showSnackbar(errorMessage); } } 
private boolean createMatchRoute() { this.matchRoute = new com.gogreen.greenmachine.parseobjects.MatchRoute(); java.util.ArrayList<com.gogreen.greenmachine.parseobjects.Hotspot> selectedHotspotsList = new java.util.ArrayList<com.gogreen.greenmachine.parseobjects.Hotspot>(selectedHotspots); boolean saved = backend.sendRiderRequest(new com.gogreen.greenmachine.parseobjects.MatchRoute[]{ this.matchRoute }, selectedHotspotsList, currentCapacity, driverCar, matchByDate, arriveByDate, destination); <BUGS> android.util.Log.i("DrivingHotspotSelect", ("createMatchRoute " + (this.matchRoute.getObjectId()))); <BUGE> return saved; } 
public double getMsg1UniqueMsgIdVariance() { <BUGS> final double variance = (((double) (m_sumOfMsg1UniqueMsgIdCountSquare)) / ((double) (m_numberOfIntervals))) - (-((getMsg1UniqueMsgIdMean()) * (getMsg1UniqueMsgIdMean()))); return variance; <BUGE> return (((double) (m_sumOfMsg1UniqueMsgIdCountSquare)) / ((double) (m_numberOfIntervals))) - (-(((double) (getMsg1UniqueMsgIdMean())) * ((double) (getMsg1UniqueMsgIdMean())))); } 
public void addHistorySearch(com.savelives.entityclasses.SearchQuery sq) { <BUGS> this.historySearch.add(sq); if ((this.historySearch.size()) > (MAX_HISTORY)) { this.historySearch = ((java.util.ArrayList<com.savelives.entityclasses.SearchQuery>) (this.historySearch.subList(((this.historySearch.size()) - (MAX_HISTORY)), ((this.historySearch.size()) - 1)))); <BUGE> } <BUGS> <BUGE> } 
public java.lang.Double[] getOrientation() { <BUGS> <BUGE> java.util.ArrayList<java.lang.Double> tmpOrientation = orientationBuffer.remove(0); java.lang.Double[] orientation = new java.lang.Double[7]; for (int i = 0; i < 7; i++) { orientation[i] = tmpOrientation.remove(0); } return orientation; } 
@org.springframework.web.bind.annotation.RequestMapping(value = "/logout", method = { org.springframework.web.bind.annotation.RequestMethod.GET }) @org.springframework.web.bind.annotation.ResponseBody public void logout(javax.servlet.http.HttpServletRequest request, javax.servlet.http.HttpServletResponse resp) throws java.io.IOException { java.lang.System.out.println("logout controller"); javax.servlet.http.HttpSession session = request.getSession(false); if (session != null) { session.invalidate(); java.lang.System.out.println("lougout success"); <BUGS> resp.sendRedirect("index.html"); <BUGE> } <BUGS> <BUGE> } 
<BUGS> private org.eclipse.jdt.core.IType findPrimaryType(java.lang.String packageName, java.lang.String typeName) throws org.eclipse.jdt.core.JavaModelException { <BUGE> org.eclipse.jdt.internal.core.JavaProject casted = ((org.eclipse.jdt.internal.core.JavaProject) (javaProject)); org.eclipse.jdt.internal.core.NameLookup nameLookup = getNameLookup(casted); org.eclipse.jdt.internal.core.NameLookup.Answer answer = nameLookup.findType(typeName, packageName, false, org.eclipse.jdt.internal.core.NameLookup.ACCEPT_ALL, false, true, false, null); return answer == null ? null : answer.type; } 
@java.lang.Override public void HandleTopNewsIds(java.lang.String data) { <BUGS> android.util.Log.i("Info", data); <BUGE> try { org.json.JSONArray jsonArray = new org.json.JSONArray(data); for (int i = 0; i < (jsonArray.length()); i++) { topNewsArray.add(jsonArray.getString(i)); } getArticleInfo(30); } catch (org.json.JSONException e) { e.printStackTrace(); } } 
@java.lang.Override public void remove(int index) { if ((index < 0) || (index >= (accommodated))) { throw new java.lang.IndexOutOfBoundsException(); } <BUGS> for (int i = index; i < (accommodated); i++) { <BUGE> array[i] = array[(i + 1)]; } (accommodated)--; } 
@com.google.inject.Provides public gov.ca.cwds.rest.api.domain.cms.SystemCodeCache provideSystemCodeCache(gov.ca.cwds.data.cms.SystemCodeDao systemCodeDao, gov.ca.cwds.data.cms.SystemMetaDao systemMetaDao) { <BUGS> final long secondsToRefreshCache = ((15 * 24) * 60) * 60; <BUGE> gov.ca.cwds.rest.api.domain.cms.SystemCodeCache systemCodeCache = new gov.ca.cwds.rest.services.cms.CachingSystemCodeService(systemCodeDao, systemMetaDao, secondsToRefreshCache, true); systemCodeCache.register(); return systemCodeCache; } 
public void setDelegate(@android.support.annotation.Nullable com.nextfaze.poweradapters.PowerAdapter delegate) { if (delegate != (mDelegate)) { int removeCount = ((mDelegate) != null) ? mDelegate.getItemCount() : 0; mDelegate = delegate; <BUGS> <BUGE> updateObservers(); <BUGS> int insertCount = ((mDelegate) != null) ? mDelegate.getItemCount() : 0; <BUGE> if (removeCount > 0) { notifyItemRangeRemoved(0, removeCount); } if (insertCount > 0) { notifyItemRangeInserted(0, insertCount); } } } 
@org.junit.Test public void shouldDisplayOnOptionsMenuCaseImmunizationData() { org.smartregister.path.activity.mocks.MenuItemTestVersion menuItem = new org.smartregister.path.activity.mocks.MenuItemTestVersion(); menuItem.setItemId(R.id.immunization_data); activity.onOptionsItemSelected(menuItem); java.util.ArrayList<android.view.View> outViews = new java.util.ArrayList<>(); activity.findViewById(R.id.immunizations).findViewsWithText(outViews, "IMMUNIZATIONS", View.FIND_VIEWS_WITH_TEXT); <BUGS> junit.framework.Assert.assertFalse(outViews.isEmpty()); <BUGE> } 
public java.lang.String getCombinationData() throws java.text.ParseException { java.lang.StringBuilder sb = new java.lang.StringBuilder(); for (dataAnalyticsModel.TestBrief test : tests) { <BUGS> sb.append("{ x:").append(test.getHealth()).append(", ").append(" y:").append(test.getTrust()).append("},"); <BUGE> } sb.setLength(((sb.length()) - 1)); return sb.toString(); } 
@org.greenrobot.eventbus.Subscribe @java.lang.Override public void onEvent(id.co.veritrans.sdk.coreflow.eventbus.events.NetworkUnavailableEvent event) { errorMessage = getString(R.string.no_network_msg); try { id.co.veritrans.sdk.uiflow.utilities.SdkUIFlowUtil.hideProgressDialog(); <BUGS> id.co.veritrans.sdk.uiflow.utilities.SdkUIFlowUtil.showSnackbar(this, ("" + (errorMessage))); <BUGE> } catch (java.lang.NullPointerException ex) { id.co.veritrans.sdk.coreflow.core.Logger.e(("transaction error is " + (errorMessage))); } } 
private void translateIfGoto(wyjc.CodeBlock.Index index, wyjc.Codes.If code, int freeSlot, java.util.ArrayList<wyjc.Bytecode> bytecodes) { <BUGS> wyjc.JvmType jt = wyjc.Wyil2JavaBuilder.convertType(code.type); <BUGE> bytecodes.add(new wyjc.Bytecode.Load(code.leftOperand, jt)); bytecodes.add(new wyjc.Bytecode.Load(code.rightOperand, jt)); translateIfGoto(index, code.type, code.op, code.target, freeSlot, bytecodes); } 
@java.lang.Override public void setCurrentToggleState(java.lang.String key) { for (int i = 0; i < (states.size()); i++) { if (states.get(i).getKey().equals(key)) { currentStateIndex = i; <BUGS> <BUGE> return ; } } throw new java.lang.IllegalArgumentException("No Toggle States match the key you have given"); } 
@java.lang.Override public boolean activate() { <BUGS> return (((ctx.inventory.select().count()) == 0) && (!(chaosTower.contains(ctx.players.local())))) || (((ctx.inventory.select().count()) == 28) && (chaosTower.contains(ctx.players.local()))); <BUGE> } 
public void makeSchedule() { <BUGS> symposium.DummyScheduler.DetermineDifficulty.setDifficulties(); <BUGE> java.util.List<symposium.Panel> pnlCollection = symposium.ScheduleData.instance().getFreePanels(); while ((pnlCollection.size()) > 0) { this.schedule(pnlCollection.get(0)); } setAssignedPanelsMessages(); } 
public static void main(java.lang.String[] args) { java.awt.EventQueue.invokeLater(() -> { try { javax.swing.UIManager.setLookAndFeel(new org.jvnet.substance.skin.SubstanceBusinessBlackSteelLookAndFeel()); <BUGS> javax.swing.JFrame.setDefaultLookAndFeelDecorated(false); <BUGE> } catch (javax.swing.UnsupportedLookAndFeelException e) { e.printStackTrace(); } org.randac.Application app = new org.randac.Application(); javax.swing.SwingUtilities.updateComponentTreeUI(app); app.setVisible(true); }); } 
private void setKi(javax.swing.JCheckBox chkbx) { optionsView.setKi(chkbx); playerIsKi = new boolean[this.player]; <BUGS> for (int i = 0; i < (this.optionsView.getKiBox().length); i++) { <BUGE> this.playerIsKi[i] = this.optionsView.getKiBox()[i].isSelected(); } } 
public static void close(java.sql.Connection connection, java.sql.PreparedStatement statement) { try { <BUGS> if ((statement != null) && (statement.isClosed())) { <BUGE> statement.close(); } br.com.devmedia.jdbc.connection.JDBCConnection.close(connection); } catch (java.sql.SQLException e) { throw new java.lang.RuntimeException(e.getMessage(), e); } } 
<BUGS> public com.softserverinc.edu.entities.WorkLog getNewWorkLog(java.lang.Long issueId) { <BUGE> if (getCurrentIssue(issueId).getAssignee().equals(workLogSecurityService.getActiveUser())) { com.softserverinc.edu.entities.WorkLog workLog = new com.softserverinc.edu.entities.WorkLog(); workLog.setIssue(getCurrentIssue(issueId)); workLog.setUser(workLogSecurityService.getActiveUser()); return workLog; } return null; } 
@java.lang.Override public eu.europeana.corelib.tools.lookuptable.EuropeanaIdRegistry retrieveEuropeanaIdFromNew(java.lang.String newId) { java.util.List<eu.europeana.corelib.tools.lookuptable.EuropeanaIdRegistry> retrList = datastore.find(eu.europeana.corelib.tools.lookuptable.EuropeanaIdRegistry.class).field(eu.europeana.corelib.lookup.impl.EuropeanaIdRegistryMongoServerImpl.EID).equal(newId).asList(); if (retrList.isEmpty()) { return null; }else { for (eu.europeana.corelib.tools.lookuptable.EuropeanaIdRegistry entry : retrList) { <BUGS> if (!(entry.isDeleted())) { return entry; } <BUGE> } return null; } } 
private static org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile createEmbeddedFile(org.apache.pdfbox.pdmodel.PDDocument doc, java.io.InputStream zugferdFile) throws java.io.IOException { java.util.Calendar now = java.util.Calendar.getInstance(); io.konik.carriage.utils.ByteCountingInputStream countingIs = new io.konik.carriage.utils.ByteCountingInputStream(zugferdFile); org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile embeddedFile = new org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile(doc, countingIs); <BUGS> <BUGE> embeddedFile.setSubtype(io.konik.carriage.pdfbox.PDFBoxInvoiceAppender.MIME_TYPE); embeddedFile.setSize(countingIs.getByteCount()); embeddedFile.setCreationDate(now); embeddedFile.setModDate(now); <BUGS> embeddedFile.addCompression(); <BUGE> return embeddedFile; } 
public static void main(java.lang.String[] args) { int n = 10; princeton.datastructures.deque.Deque<java.lang.Integer> deq = new princeton.datastructures.deque.Deque<java.lang.Integer>(); <BUGS> for (int i = 0; i < 2; i++) { <BUGE> if ((i % 2) == 0) { deq.addFirst(i); }else { deq.addLast(i); } } for (java.lang.Integer i : deq) { java.lang.System.out.println(i); } } 
private void applyAndAnimateRemovals(java.util.List<hk.ust.cse.hunkim.questionroom.BaseActivity.RoomInfo> roomInfos) { <BUGS> for (int i = (roomInfos.size()) - 1; i >= 0; i--) { <BUGE> final hk.ust.cse.hunkim.questionroom.BaseActivity.RoomInfo roomInfo = roomInfoList.get(i); if (!(roomInfos.contains(roomInfo))) { removeItem(i); } } } 
@org.testng.annotations.Test(enabled = false) public void saveTarjetaCertificado() { java.lang.String numeroTarjeta = "1000000000000118"; java.lang.String idUsuario = "certGT"; long montoCertificado = 50; java.lang.String resultado = null; try { resultado = facade.activaTarjetaCertificado(numeroTarjeta, montoCertificado, idUsuario); com.claro.gml.certificados.test.BussinesTest.logger.info("resultado [{}]", resultado); } catch (com.claro.transfer.certificados.exception.BussinesException e) { com.claro.gml.certificados.test.BussinesTest.logger.error("Error [{}]", e.getMessage(), e); } <BUGS> com.claro.gml.certificados.test.BussinesTest.logger.info("resultado : [{}]", resultado); <BUGE> } 
@java.lang.Override public com.ullink.slack.simpleslackapi.SlackMessageHandle<com.ullink.slack.simpleslackapi.replies.SlackChannelReply> joinChannel(java.lang.String channelName) { <BUGS> com.ullink.slack.simpleslackapi.impl.SlackMessageHandleImpl handle = new com.ullink.slack.simpleslackapi.impl.SlackMessageHandleImpl(getNextMessageId()); <BUGE> java.util.Map<java.lang.String, java.lang.String> arguments = new java.util.HashMap<>(); arguments.put("token", authToken); arguments.put("name", channelName); postSlackCommand(arguments, com.ullink.slack.simpleslackapi.impl.SlackWebSocketSessionImpl.CHANNELS_JOIN_COMMAND, handle); return handle; } 
@java.lang.Override public void replaceAll(java.util.List<T> elements) { <BUGS> if ((elements == null) || (elements.isEmpty())) { return ; } <BUGE> if ((mData) == null) { mData = new java.util.ArrayList<>(); } mData.clear(); <BUGS> mData.addAll(elements); <BUGE> notifyDataSetChanged(); } 
private void updateTables(java.sql.Statement statement) throws java.sql.SQLException { int version = getUserVersion(statement); <BUGS> if (version < (gui.Splash.DATABASE_VERSION)) { <BUGE> switch (version) { case 0 : statement.executeUpdate("alter table volumes add column favorite_volume tinyint(1) not null default '0';"); statement.executeUpdate(java.lang.String.format("alter table volumes add column date_add_volume text not null default '%s';", utils.DateUtils.toString(new java.util.Date()))); break; } <BUGS> setUserVersion(statement, Splash.DATABASE_VERSION); <BUGE> } <BUGS> <BUGE> } 
public static boolean deletePhSensor(final java.lang.String name) { java.lang.String realName = name.replace(" ", "_"); <BUGS> synchronized(com.sb.elsinore.LaunchControl.phSensorList) { java.util.Iterator<com.sb.elsinore.inputs.PhSensor> iterator = com.sb.elsinore.LaunchControl.phSensorList.iterator(); com.sb.elsinore.inputs.PhSensor tSensor; while (iterator.hasNext()) { tSensor = iterator.next(); if (tSensor.getName().equalsIgnoreCase(realName)) { iterator.remove(); return true; } } } <BUGE> return false; } 
@java.lang.Override public homework.hw3.DoubleStack clone() throws java.lang.CloneNotSupportedException { homework.hw3.DoubleStack stackclone = new homework.hw3.DoubleStack(); <BUGS> double m = stack.getLast(); try { for (int i = stack.indexOf(m); i >= 0; i--) { stackclone.push(stack.get(i)); } } catch (java.lang.Exception e) { throw new java.lang.CloneNotSupportedException("Cloning unsuccessful."); <BUGE> } return stackclone; } 
<BUGS> private edu.neu.ccs.pyramid.dataset.MultiLabel predictBySupport(org.apache.mahout.math.Vector vector) { <BUGE> double[] probs = cbm.predictAssignmentProbs(vector, support, piThreshold); edu.neu.ccs.pyramid.multilabel_classification.plugin_rule.GeneralF1Predictor generalF1Predictor = new edu.neu.ccs.pyramid.multilabel_classification.plugin_rule.GeneralF1Predictor(); generalF1Predictor.setMaxSize(maxSize); return generalF1Predictor.predict(cbm.getNumClasses(), support, probs); } 
void factr() { <BUGS> <BUGE> int tmp = 1; for (int i = 1; i <= ((int) ((double) (tail.data))); i++) { tmp *= i; } tail.data = ((double) (tmp)); } 
@javax.annotation.Nonnull @java.lang.Override public eiteam.esteemedinnovation.armor.exosuit.ExosuitEventHandler[] getInstalledEventHandlers(net.minecraft.item.ItemStack self) { <BUGS> java.util.List<eiteam.esteemedinnovation.armor.exosuit.ExosuitEventHandler> handlers = java.util.Arrays.asList(getUpgrades(self)); <BUGE> if ((self.hasTagCompound()) && (self.getTagCompound().hasKey("plate"))) { handlers.add(eiteam.esteemedinnovation.armor.exosuit.UtilPlates.getPlate(self.getTagCompound().getString("plate"))); } return handlers.toArray(new eiteam.esteemedinnovation.armor.exosuit.ExosuitEventHandler[handlers.size()]); } 
@java.lang.Override protected void onResume() { super.onResume(); getSupportActionBar().hide(); <BUGS> if (((!(flagMenuPictures)) && (!(flagMenuRating))) && (!(flagMenuSounds))) <BUGE> onMainMenu(); else { if (flagMenuSounds) onSoundMenu();  if (flagMenuPictures) onCameraMenu();  <BUGS> if (flagMenuRating) onRatingMenu();  <BUGE> } } 
public com.SIMRacingApps.Data setVolume(double percentage) { synchronized(m_clips) { for (int i = 0; i < (m_clips.size()); i++) { <BUGS> m_clips.get(i).setVolume((percentage / 100.0)); <BUGE> } } synchronized(m_volume) { m_volume = percentage; } return getVolume(); } 
private boolean isSorted(java.lang.Comparable[] c, int a, int b) { <BUGS> for (int i = a; i < b; i++) { if (org.magicminds.one.util.Sorter.less(c[i], c[(i + 1)])) { <BUGE> return false; } } return true; } 
public com.crossballbox.model.UserInfo saveUserInfo(com.crossballbox.model.FamilyData familyData, com.crossballbox.model.UserHealthyState userHealthyState, com.crossballbox.model.UserAdditionalInfo userAdditionalInfo, java.lang.String imagePath, com.crossballbox.model.User user) { int userId = user.getId(); com.crossballbox.model.UserInfo userInfo = user.getUserInfo(); if (userInfo == null) { userInfo = new com.crossballbox.model.UserInfo(userId); } userInfo.setFamilyData(familyData); userInfo.setUserHealthyState(userHealthyState); userInfo.setUserAdditionalInfo(userAdditionalInfo); userInfo.setUser(user); <BUGS> userInfo.setImagePath(imagePath); <BUGE> userInfoDAO.save(userInfo); return userInfo; } 
public boolean ConnectDevices(networkmodeling.core.modelgraph.NetworkGraphNode dev1, networkmodeling.core.modelgraph.NetworkGraphNode dev2) { networkmodeling.core.modelgraph.NetworkGraphEdge newEdge = new networkmodeling.core.modelgraph.NetworkGraphEdge(dev1, dev2); if (!(graphEdges.contains(newEdge))) { <BUGS> getGraphEdges().add(newEdge); <BUGE> return true; } return false; } 
public static java.util.List paserLineEnd(java.lang.String content) { java.util.List<java.lang.Integer> lines = new java.util.ArrayList<java.lang.Integer>(); int length = content.length(); for (int i = 0; i < length; i++) { if ((content.charAt(i)) == '\n') { <BUGS> java.lang.System.out.println(i); <BUGE> lines.add(i); } } return lines; } 
@java.lang.Override public synchronized void close(org.apache.hadoop.mapreduce.TaskAttemptContext context) throws java.io.IOException { try { <BUGS> this.officeWriter.finalizeWrite(); <BUGE> } catch (org.zuinnote.hadoop.office.format.mapreduce.OfficeWriterException e) { org.zuinnote.hadoop.office.format.mapreduce.AbstractSpreadSheetDocumentRecordWriter.LOG.error(e); } finally { if ((this.currentReader) != null) { this.currentReader.close(); } } } 
@org.junit.Test public void testNoAppJSCompressionErrors() throws java.lang.Exception { java.lang.String[] namespaces = new java.lang.String[]{ "aura" , "ui" , "auradev" , "auradocs" , "auraStorage" }; java.lang.StringBuilder source = new java.lang.StringBuilder(); source.append("<aura:application>"); for (java.lang.String ns : namespaces) { source.append(java.lang.String.format("<aura:dependency resource=\"%s:*\" type=\"*\" />", ns)); } source.append("</aura:application>"); <BUGS> java.lang.String js = getDefinitionsOutput(source.toString(), AuraContext.Mode.PROD); <BUGE> } 
@java.lang.Override public void onReceive(android.content.Context context, android.content.Intent intent) { android.util.Log.i("FRIDGELOG", "Broadcast has been received!"); java.lang.String action = intent.getAction(); if (action.equals(Intent.ACTION_BOOT_COMPLETED)) { android.util.Log.i("FRIDGELOG", "Broadcast was caught by ACTION_BOOT"); <BUGS> setUpAlarmManager(); <BUGE> }else { android.util.Log.i("FRIDGELOG", "Broadcast is creating notifications"); <BUGS> showNotifications(); <BUGE> } } 
public void printMessage() { try { main.Peer.reader = new java.io.BufferedReader(new java.io.InputStreamReader(socket.getInputStream())); <BUGS> java.lang.String message = main.Peer.reader.readLine(); java.lang.System.out.println(("From: " + (id))); java.lang.System.out.println(message); <BUGE> } catch (java.io.IOException e) { e.printStackTrace(); } } 
@java.lang.Override public java.util.List<dtu.cdio_final.shared.dto.MaterialDTO> getMaterials(java.lang.String token) throws dtu.cdio_final.shared.ServiceException, dtu.cdio_final.shared.TokenException { validateToken(token); <BUGS> java.util.List<dtu.cdio_final.shared.dto.MaterialDTO> result = null; <BUGE> try { result = materialDao.getMaterialList(); } catch (dtu.cdio_final.server.dal.daointerfaces.DALException e) { throw new dtu.cdio_final.shared.ServiceException(e); } return result; } 
public static void sendChat(net.minecraft.command.ICommandSender sender, java.lang.String msg, java.lang.Object... args) { <BUGS> <BUGE> java.lang.String[] lines; if (args == null) lines = msg.split("\\\\n"); else lines = java.lang.String.format(msg, args).split("\\\\n");  for (java.lang.String line : lines) { sender.addChatMessage(new net.minecraft.util.ChatComponentText(line)); } } 
private void onKeysDownloadFailed(final java.util.List<java.lang.String> userIds) { if (null != userIds) { synchronized(mUserKeyDownloadsInProgress) { java.util.Map<java.lang.String, java.lang.Integer> deviceTrackingStatuses = mCryptoStore.getDeviceTrackingStatuses(); for (java.lang.String userId : userIds) { mUserKeyDownloadsInProgress.remove(userId); deviceTrackingStatuses.put(userId, org.matrix.androidsdk.crypto.MXDeviceList.TRACKING_STATUS_PENDING_DOWNLOAD); } <BUGS> mCryptoStore.saveDeviceTrackingStatuses(); <BUGE> } } mIsDownloadingKeys = false; } 
public static void printIndexBoard() { java.lang.System.out.println(); for (int i = 0; i < 9; i++) { if (((i % 3) == 0) && (i != 0)) { java.lang.System.out.println(); java.lang.System.out.println("-------------"); } <BUGS> java.lang.System.out.println((" | " + (i + 1))); <BUGE> } java.lang.System.out.println(); } 
@java.lang.Override public void onError(int response, java.lang.Exception e) { if (response == (org.solovyev.android.checkout.ResponseCodes.ITEM_NOT_OWNED)) { inventory.load().whenLoaded(this); <BUGS> <BUGE> } <BUGS> if ((listener()) != null) listener().onConsumeFailed();  <BUGE> } 
@java.lang.Override public void onSaveInstanceState(android.os.Bundle outState) { super.onSaveInstanceState(outState); if ((songs) != null) { outState.putParcelableArrayList("songs", songs); outState.putString("bandName", bandName); outState.putInt("position", position); } <BUGS> if (((mediaPlayer) != null) && (mediaPlayer.isPlaying())) { <BUGE> outState.putDouble("songPosition", timeElapsed); } } 
@java.lang.Override public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) { if (savedInstanceState != null) { workoutId = savedInstanceState.getLong(hfad.com.workout.WorkoutDetailFragment.WORKOUT_ID); <BUGS> <BUGE> } <BUGS> android.support.v4.app.FragmentTransaction ft = getChildFragmentManager().beginTransaction(); hfad.com.workout.StopwatchFragment stopwatchFragment = new hfad.com.workout.StopwatchFragment(); ft.replace(R.id.stopwatch_container, stopwatchFragment); ft.addToBackStack(null); ft.setTransition(FragmentTransaction.TRANSIT_FRAGMENT_FADE); ft.commit(); <BUGE> return inflater.inflate(R.layout.fragment_workout_detail, container, false); } 
public void multiply(solver.Polynomial p) { <BUGS> <BUGE> solver.Term current = p.getFirst(); if ((first) == null) { first = p.getFirst(); (size)++; }else { while (current != null) { <BUGS> this.multiply(current); <BUGE> current = current.getNext(); } } } 
public void disableSessionChosing(boolean value) { sessionComboBox.setDisable(value); <BUGS> newSessionField.setDisable((((sessionComboBox.getValue()) == null) || (!(sessionComboBox.getValue().equals(com.cbapps.reversi.client.LoginLayout.ITEM_NEW_SESSION))))); <BUGE> } 
@java.lang.Override public void onDataChange(com.google.firebase.database.DataSnapshot dataSnapshot) { java.util.HashMap<java.lang.String, java.lang.Object> Data = ((java.util.HashMap<java.lang.String, java.lang.Object>) (dataSnapshot.getValue())); v6.caique.ExploreFragment.Chats.get(s).Title = ((java.lang.String) (Data.get("title"))); v6.caique.ExploreFragment.Chats.get(s).Tags = ((java.util.ArrayList<java.lang.String>) (Data.get("tags"))); <BUGS> ReloadViews(); <BUGE> } 
@java.lang.Override public void onClick(android.view.View view) { java.lang.String subreddit = viewHolder.nameInput.getText().toString(); if (subreddit.equals("")) { android.widget.Toast.makeText(this, "Please enter a subreddit name", Toast.LENGTH_SHORT).show(); return ; } performAdd(subreddit); <BUGS> <BUGE> } 
@java.lang.Override protected void doGet(javax.servlet.http.HttpServletRequest req, javax.servlet.http.HttpServletResponse resp) throws java.io.IOException, javax.servlet.ServletException { java.util.List<models.User> users = service.getUsersWithAuto(); req.setAttribute("Title", "Test java site page"); <BUGS> req.setAttribute("User", users.get(0).getName()); <BUGE> req.setAttribute("userList", users); req.getRequestDispatcher("index.jsp").forward(req, resp); } 
@java.lang.Override public int colorMultiplier(net.minecraft.block.state.IBlockState state, net.minecraft.world.IBlockAccess worldIn, net.minecraft.util.math.BlockPos pos, int tintIndex) { int meta = state.getBlock().getMetaFromState(state); <BUGS> zmaster587.libVulpes.api.material.Material mat = ((zmaster587.libVulpes.block.BlockOre) (state.getBlock())).ores[meta]; if (mat != null) return mat.getColor();  <BUGE> return 16777215; } 
public javax.sound.sampled.Clip sound(java.lang.String location) { javax.sound.sampled.Clip clip = null; java.net.URL url = getClass().getResource(location); <BUGS> javax.sound.sampled.AudioInputStream ais; <BUGE> try { <BUGS> ais = javax.sound.sampled.AudioSystem.getAudioInputStream(url); <BUGE> clip = javax.sound.sampled.AudioSystem.getClip(); clip.open(ais); } catch (javax.sound.sampled.LineUnavailableException e) { e.printStackTrace(); } catch (javax.sound.sampled.UnsupportedAudioFileException e) { e.printStackTrace(); } catch (java.io.IOException e) { e.printStackTrace(); } return clip; } 
public boolean matches(net.minecraft.world.World world, int x, int y, int z) { net.minecraft.block.Block blockOf = world.getBlock(x, y, z); <BUGS> if ((blockOf.equals(targetBlock)) && ((targetMetadata) == 0)) <BUGE> return true;  if ((blockOf.equals(targetBlock)) && ((targetMetadata) == (world.getBlockMetadata(x, y, z)))) return true;  return false; } 
<BUGS> @org.junit.Test <BUGE> public void addToIndexShouldShiftNextElementsToRightPosition() throws java.lang.Exception { list.add(10); list.add(20); list.add(30); <BUGS> list.add(40, 1); <BUGE> assertEquals(new java.lang.Integer(30), list.get(3)); } 
protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); if ((findViewById(R.id.track_container)) != null) { mTwoPane = true; if (savedInstanceState == null) { getSupportFragmentManager().beginTransaction().replace(R.id.track_container, new com.dkulon.spotifystreamer.Fragment.SearchTrackFragment(), "TrackFragment").commit(); <BUGS> }else { mTwoPane = false; <BUGE> } } } 
<BUGS> private void showLatLonPicker(final de.k3b.database.QueryParameter currentDirContentQuery) { <BUGE> if (fromGui(mFilter)) { final android.app.FragmentManager manager = getFragmentManager(); de.k3b.android.androFotoFinder.locationmap.LocationMapFragment dirDialog = new de.k3b.android.androFotoFinder.locationmap.LocationMapFragment(); dirDialog.defineNavigation(null, mFilter, ZoomUtil.NO_ZOOM, null); dirDialog.show(manager, de.k3b.android.androFotoFinder.GalleryFilterActivity.DLG_NAVIGATOR_TAG); } } 
@java.lang.Override public void handleMessage(android.os.Message msg) { switch (msg.what) { case com.virtualightning.library.simple2develop.state.MainLoopCall.MSG_STATE_UPDATE : java.lang.Object[] objects = ((java.lang.Object[]) (msg.obj)); com.virtualightning.library.simple2develop.state.StateMediator mediator = ((com.virtualightning.library.simple2develop.state.StateMediator) (objects[0])); <BUGS> <BUGE> if ((msg.arg1) == (mediator.getSequenceId())) mediator.updateObserver(((java.lang.Object[]) (objects[1])));  break; } } 
@java.lang.Override public java.lang.String toString() { <BUGS> return (((((("Plan{\n" + "relation=") + (relation.getElement().toString())) + "\n, cost=") + (cost)) + "\n, assignedProviders=") + (assignedProviders)) + "\n}"; <BUGE> } 
private void initRecyclerView(android.view.View view) { android.util.Log.d(com.example.andrew.prokhor.eyecare.ui.fragments.MainFragment.LOG_TAG, "initRecyclerView()"); <BUGS> mAdapter = new com.example.andrew.prokhor.eyecare.ui.adapters.ExpandableCursorRecyclerViewAdapter(this); <BUGE> android.support.v7.widget.RecyclerView.LayoutManager layoutManager = new android.support.v7.widget.LinearLayoutManager(getActivity()); mRecyclerView = ((android.support.v7.widget.RecyclerView) (view.findViewById(R.id.logsRecyclerView))); mRecyclerView.setAdapter(mAdapter); mRecyclerView.setLayoutManager(layoutManager); android.support.v7.widget.helper.ItemTouchHelper.Callback callback = new com.example.andrew.prokhor.eyecare.ui.adapters.ExpandableCursorItemTouchHelperCallback(mAdapter); android.support.v7.widget.helper.ItemTouchHelper touchHelper = new android.support.v7.widget.helper.ItemTouchHelper(callback); touchHelper.attachToRecyclerView(mRecyclerView); } 
@java.lang.Override public long getDateHeader(java.lang.String name) { java.lang.String v = getHeader(name); if (v == null) { <BUGS> return -1L; <BUGE> } for (java.text.DateFormat df : dateFormats) { try { java.util.Date date = df.parse(v); return date.getTime(); } catch (java.text.ParseException pe) { } } throw new java.lang.IllegalArgumentException(("Unhandled date format: " + v)); } 
void generatesDeclarations(java.lang.String expected) { java.lang.String[] parseResult = parse(); <BUGS> com.google.common.truth.Truth.assertThat(parseResult[1].isEmpty()); <BUGE> java.lang.String actual = parseResult[0]; java.lang.String stripped = DeclarationGeneratorTests.GOLDEN_FILE_COMMENTS_REGEXP.matcher(actual).replaceAll(""); if (!(stripped.equals(expected))) { failureStrategy.failComparing("compilation result doesn't match", expected, stripped); } } 
@java.lang.Override public void onShowFavorites(java.util.List<com.fireofandroid.bloggarden.StarredBlogDB.StarredBlog> favoriteBlogs) { android.util.Log.d(com.fireofandroid.bloggarden.favoriteblog.FavoritesActivity.TAG, ("onShowFavorites->total favorite blogs: " + (favoriteBlogs.size()))); if ((favoriteBlogs.size()) == 0) { android.widget.Toast.makeText(this, "无收藏文章", Toast.LENGTH_SHORT).show(); <BUGS> return ; <BUGE> } mFavoriteBlogs = favoriteBlogs; mFavoritesGV.setAdapter(new com.fireofandroid.bloggarden.favoriteblog.FavoritesAdapter(getApplicationContext(), favoriteBlogs)); } 
@java.lang.Override public void onItemClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) { java.lang.String text = forecastViewAdapter.getItem(position); <BUGS> android.content.Intent detailActivityIntent = new android.content.Intent(getContext(), com.example.sarh2o.sunshine.DetailActivity.class).putExtra(Intent.EXTRA_TEXT, text); <BUGE> startActivity(detailActivityIntent); } 
@java.lang.Override protected void initSettings(com.almasb.fxgl.settings.GameSettings settings) { settings.setWidth(800); settings.setHeight(600); settings.setTitle("ParticleTextureSample"); settings.setVersion("0.1"); settings.setFullScreen(false); settings.setIntroEnabled(false); settings.setMenuEnabled(false); settings.setCloseConfirmation(false); <BUGS> settings.setProfilingEnabled(false); <BUGE> settings.setApplicationMode(ApplicationMode.DEVELOPER); } 
private java.util.Map<us.kbase.workspace.database.ObjectIdentifier, us.kbase.workspace.database.ObjectIDResolvedWS> checkPerms(final us.kbase.workspace.database.WorkspaceUser user, final java.util.List<us.kbase.workspace.database.ObjectIdentifier> loi, final us.kbase.workspace.database.Permission perm, final java.lang.String operation) throws us.kbase.workspace.database.exceptions.CorruptWorkspaceDBException, us.kbase.workspace.database.exceptions.InaccessibleObjectException, us.kbase.workspace.database.exceptions.WorkspaceCommunicationException { <BUGS> return checkPerms(user, loi, perm, operation, false); <BUGE> } 
@java.lang.Override <BUGS> public T get(int i) { if ((size()) <= i) <BUGE> throw new java.util.NoSuchElementException("The required index isn't in the list");  lists.linkedlist.ListNode<T> current = firstNode; <BUGS> while (i > 0) { <BUGE> current = current.getNext(); <BUGS> i--; <BUGE> } <BUGS> return current.getObject(); <BUGE> } 
public void controller(org.openmrs.ui.framework.fragment.FragmentModel model, @org.openmrs.ui.framework.annotation.SpringBean org.openmrs.module.outgoingmessageexceptions.api.OutgoingMessageExceptionsService outgoingMessageExceptionsService, @org.openmrs.ui.framework.annotation.FragmentParam(value = "messageId", required = true) java.lang.Integer messageId) throws java.io.IOException { java.lang.String message = outgoingMessageExceptionsService.getMessageById(messageId); <BUGS> if (org.apache.commons.lang.StringUtils.isBlank(message)) model.addAttribute("outgoingMessage", null); else { com.fasterxml.jackson.databind.ObjectMapper mapper = new com.fasterxml.jackson.databind.ObjectMapper(); mapper.setDateFormat(new java.text.SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSSSSS")); org.openmrs.module.outgoingmessageexceptions.OutgoingMessage outgoingMessage = mapper.readValue(message, org.openmrs.module.outgoingmessageexceptions.OutgoingMessage.class); model.addAttribute("outgoingMessage", outgoingMessage); } <BUGE> } 
@java.lang.Override public void populateItem(org.apache.wicket.markup.repeater.Item item, java.lang.String componentId, org.apache.wicket.model.IModel rowModel) { com.evolveum.midpoint.xml.ns._public.common.audit_3.AuditEventRecordType auditEventRecordType = ((com.evolveum.midpoint.xml.ns._public.common.audit_3.AuditEventRecordType) (rowModel.getObject())); java.lang.String channel = auditEventRecordType.getChannel(); <BUGS> javax.xml.namespace.QName channelQName = com.evolveum.midpoint.util.QNameUtil.uriToQName(channel); java.lang.String return_ = channelQName.getLocalPart(); item.add(new org.apache.wicket.markup.html.basic.Label(componentId, return_)); <BUGE> } 
private synchronized void sendToAll(Model.Message message) { for (java.net.Socket c : connectedUsers.keySet()) { try { java.io.DataOutputStream dos = new java.io.DataOutputStream(c.getOutputStream()); dos.writeUTF(message.toString()); <BUGS> } catch (java.net.SocketException e) { <BUGE> connectedUsers.remove(c); java.lang.System.out.println("Remove a user from connectedUsers collection"); <BUGS> } catch (java.io.IOException e) { e.printStackTrace(); <BUGE> } } } 
@java.lang.Override public void done(List<com.angcyo.bmob.PasswordBmob> list, cn.bmob.v3.exception.BmobException e) { List<java.lang.String> strings = new com.angcyo.bmob.ArrayList<>(); if (e == null) { java.util.Collections.reverse(list); for (com.angcyo.bmob.PasswordBmob bmob : list) { <BUGS> strings.add(bmob.getPassword()); <BUGE> } } listener.onFind(strings); } 
protected java.lang.String buildHealthCheckString(java.lang.String path, java.lang.String host) { <BUGS> if ((path == null) || (host == null)) { <BUGE> return ""; } if ((path.startsWith("GET")) || (path.startsWith("POST"))) { return path; } return ((("GET " + path) + " HTTP/1.0\\r\\nHost: ") + host) + "\\r\\n\\r\\n"; } 
public void deleteRecursive(java.io.File path) { java.io.File[] c = path.listFiles(); <BUGS> <BUGE> for (java.io.File file : c) { if (file.isDirectory()) { deleteRecursive(file); file.delete(); }else { file.delete(); } } path.delete(); } 
@java.lang.Override void tableRowClicked(int row, int col) { o_removeLabel.setEnabled((row != (-1))); o_dismissLabel.setEnabled(((row != (-1)) && (o_item.getReminder(row).isActive()))); <BUGS> o_linkReminderLabel.setEnabled(((row != (-1)) && (o_item.getReminder(row).isActive()))); <BUGE> } 
public static void main(java.lang.String[] args) throws com.rapplogic.xbee.api.XBeeException, gnu.io.PortInUseException, gnu.io.UnsupportedCommOperationException, java.io.IOException, java.lang.NumberFormatException, java.text.ParseException, java.util.TooManyListenersException { initLog4j(); <BUGS> new com.rapplogic.aru.uploader.nordic.NordicSketchUploader().process("/Users/andrew/Documents/dev/arduino-remote-uploader/resources/RAU-328-13k.hex", "/dev/tty.usbmodemfa131", java.lang.Integer.parseInt("19200"), "????", 5, 0, 50, false, 5); <BUGE> } 
public void onClick(android.content.DialogInterface dialog, int id) { android.widget.ListView lw = ((android.app.AlertDialog) (dialog)).getListView(); <BUGS> int selected = ((java.lang.Integer) (lw.getTag())); <BUGE> exportExpensesXLS(selected); <BUGS> dialog.cancel(); <BUGE> } 
public final void setStartDate(java.util.Date startDate) { <BUGS> if (!(this.startDate.equals(startDate))) { <BUGE> if (((startDate != null) && ((endDate) != null)) && (endDate.before(startDate))) { throw new de.invation.code.toval.validate.ParameterException("The start date must be before the end date of the filter."); } this.startDate = startDate; de.uni.freiburg.iig.telematik.sewol.log.filter.TimeFilter.setChanged(); de.uni.freiburg.iig.telematik.sewol.log.filter.TimeFilter.notifyObservers(); } } 
@android.support.annotation.RequiresApi(value = android.os.Build.VERSION_CODES.JELLY_BEAN_MR1) @java.lang.Override public void sendBroadcastAsUser(final android.content.Intent intent, final android.os.UserHandle user, final java.lang.String receiverPermission) { mCondom.proceedBroadcast(intent, new com.oasisfeng.condom.CondomCore.WrappedProcedure() { @java.lang.Override <BUGS> public void run(final android.content.Intent intent) { <BUGE> com.oasisfeng.condom.CondomContext.super.sendBroadcastAsUser(intent, user, receiverPermission); } }); } 
private boolean matchRange() { <BUGS> if ((((src.charAt(((si) + 1))) == '-') && (((si) + 2) < (sn))) && ((src.charAt(((si) + 2))) != ']')) { <BUGE> si += 3; return true; }else return false;  } 
@java.lang.Override public void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); <BUGS> android.util.Log.d("onCreate", "onCreate starting"); <BUGE> if ((getArguments()) != null) { mParam1 = getArguments().getString(uw.studybuddy.Events.EventsListRecycleViewFragment.ARG_PARAM1); mParam2 = getArguments().getString(uw.studybuddy.Events.EventsListRecycleViewFragment.ARG_PARAM2); } <BUGS> android.util.Log.d("onCreate", "onCreate ended"); mDatabase = com.google.firebase.database.FirebaseDatabase.getInstance().getReference().child("EventInfo"); <BUGE> } 
public void switchState(org.usfirst.frc.team2984.robot.subsystems.DriveTrain.State state) { if (state == (this.driveState)) { return ; <BUGS> <BUGE> } switch (state) { case VOLTAGE_CONTROL : this.configureTalonsVoltage(); break; case SPEED_CONTROL : this.configureTalonsSpeed(); break; case DISTANCE_CONTROL : this.configureTalonsDistance(); } this.driveState = state; } 
public static boolean oresExist(java.lang.String... names) { for (java.lang.String name : names) { if (!(net.minecraftforge.oredict.OreDictionary.doesOreNameExist(name))) { return false; } <BUGS> if (!(net.minecraftforge.oredict.OreDictionary.getOres(name).isEmpty())) { <BUGE> return false; } } return true; } 
public float getRotation() { <BUGS> com.jme3.math.Vector2f wallDir = new com.jme3.math.Vector2f(((getStart().getX()) + (getEnd().getX())), ((getStart().getY()) + (getEnd().getY()))); <BUGE> return wallDir.angleBetween(new com.jme3.math.Vector2f(1.0F, 0.0F)); } 
private static net.sf.json.JSONObject exchangeDates(net.sf.json.JSONObject ex, net.sf.json.JSONObject inter, java.text.DateFormat format) { java.lang.String dob = "dob"; java.lang.String dod = "dod"; if (ex.containsKey(dob)) { <BUGS> inter.put("date_of_birth", org.phenotips.studies.family.internal.JsonAdapterImpl.pedigreeDateToDate(ex.getJSONObject(dob))); <BUGE> } if (ex.containsKey(dod)) { <BUGS> inter.put("date_of_death", org.phenotips.studies.family.internal.JsonAdapterImpl.pedigreeDateToDate(ex.getJSONObject(dod))); <BUGE> } return inter; } 
private double calcMaxMana(int level) { if (level < 10) { return 0; } double a = java.lang.Math.pow(1.01, (level / 10)); double b = 0.01 * ((java.lang.Math.pow(1.15, (level - 10))) - 1); <BUGS> return (java.lang.Math.log((a + b))) / (java.lang.Math.log(1.0001)); <BUGE> } 
@java.lang.Override public void visitToken(com.puppycrawl.tools.checkstyle.api.DetailAST ast) { final java.lang.String literal = ast.getText(); <BUGS> if (hasUnicodeChar(literal)) { if (!(((((allowByTailComment) && (haastrailComment(ast))) || (isAllCharactersEscaped(literal))) || ((allowEscapesForControlCharacters) && (isOnlyUnicodeValidChars(literal, com.puppycrawl.tools.checkstyle.checks.AvoidEscapedUnicodeCharactersCheck.sUnicodeControl)))) || ((allowNonPrintableEscapes) && (isOnlyUnicodeValidChars(literal, com.puppycrawl.tools.checkstyle.checks.AvoidEscapedUnicodeCharactersCheck.sNonPrintableChars))))) { log(ast.getLineNo(), "forbid.escaped.unicode.char"); } <BUGE> } } 
public void putDoubleArray(final double[] data) { int l = (data.length) * (com.heerbann.unsafe.UnsafeBuffer.sizeOfDouble); putInt(l); ensure(((position) + l)); com.heerbann.unsafe.UnsafeBuffer.unsafe.copyMemory(com.heerbann.unsafe.UnsafeBuffer.toAddress(data), ((pointer) + (position)), l); position += l; <BUGS> <BUGE> } 
@javax.ws.rs.GET @javax.ws.rs.Path(value = "{id}/stavke") @javax.ws.rs.Produces(value = { javax.ws.rs.core.MediaType.APPLICATION_XML , javax.ws.rs.core.MediaType.APPLICATION_JSON }) public java.util.List<rs.ac.uns.ftn.xws.entities.payments.InvoiceItem> findAllItems(@javax.ws.rs.PathParam(value = "PIB") java.lang.String PIB, @javax.ws.rs.PathParam(value = "id") <BUGS> java.lang.String id) { <BUGE> rs.ac.uns.ftn.xws.entities.payments.Invoice retVal = null; <BUGS> try { retVal = invoiceDao.findById(java.lang.Long.parseLong(id)); if (retVal.getSupplierTIN().equals(PIB)) return retVal.getInvoiceItems().getInvoiceItem();  } catch (java.lang.Exception e) { rs.ac.uns.ftn.xws.services.payments.InvoiceService.log.error(e.getMessage(), e); } <BUGE> return null; } 
static void updateChannelsPositionsInMember(com.hazelcast.core.Member member, java.util.Map<java.lang.Short, java.lang.Long> update) { <BUGS> java.util.Map<java.lang.Short, java.lang.Long> positions = eu.modernmt.cluster.NodeInfo.fromString(member.getStringAttribute(eu.modernmt.cluster.NodeInfo.DATA_CHANNELS_ATTRIBUTE)); <BUGE> for (java.util.Map.Entry<java.lang.Short, java.lang.Long> position : update.entrySet()) { positions.put(position.getKey(), position.getValue()); } member.setStringAttribute(eu.modernmt.cluster.NodeInfo.DATA_CHANNELS_ATTRIBUTE, eu.modernmt.cluster.NodeInfo.toString(positions)); } 
public boolean equals(java.lang.String metricName, java.lang.String queueName, int periodicity, int queueCapacity) { <BUGS> return ((((this.metricName) == metricName) && ((this.queueName) == queueName)) && ((this.periodicity) == periodicity)) && ((this.queueCapacity) == queueCapacity); <BUGE> } 
protected void deactivate() { try { <BUGS> if ((scheduler) != null) { scheduler.shutdown(); } <BUGE> stopDiscoveryFuture(); if (logger.isDebugEnabled()) { logger.debug("Deactivated ZMote discovery service."); } } catch (final java.lang.Exception e) { if (logger.isDebugEnabled()) { logger.debug("Ignored exception while deactivating ZMote discovery service.", e); } <BUGS> } finally { scheduler = null; <BUGE> } } 
<BUGS> private <Tab extends nz.ac.auckland.linsolve.Variable> boolean mergeLine(java.util.List<nz.ac.auckland.alm.EmptySpace> line, nz.ac.auckland.alm.algebra.IDirection direction) { <BUGE> while ((line.size()) > 1) { nz.ac.auckland.alm.EmptySpace area1 = line.get(0); nz.ac.auckland.alm.EmptySpace area2 = line.get(1); if (!(merge(area1, area2, direction))) return false;  line.remove(area2); } return true; } 
public static void init(android.content.Context context) { com.android.contacts.incall.InCallPluginHelper helper = com.android.contacts.incall.InCallPluginHelper.getInstance(); <BUGS> helper.expectedCallbacks = com.android.contacts.incall.InCallPluginHelper.EXPECTED_CALL_BACKS; <BUGE> helper.mContext = context; helper.mClient = AmbientConnection.CLIENT.get(context); helper.mInCallApi = com.cyanogen.ambient.incall.InCallServices.getInstance(); helper.mMainHandler = new android.os.Handler(context.getMainLooper()); com.android.contacts.incall.InCallPluginHelper.refresh(); } 
@java.lang.Override public void attachToBaseObject(final org.sablo.IChangeListener changeMonitor, org.sablo.IWebObjectContext webObjectContext) { this.changeMonitor = changeMonitor; this.webObjectContext = webObjectContext; java.util.List<WT> wrappedBaseList = getWrappedBaseList(); int i = 0; for (WT el : wrappedBaseList) { <BUGS> attachToBaseObject(i, el, false); <BUGE> i++; } if (isChanged()) changeMonitor.valueChanged();  } 
public static com.example.hotel.dto.AllocationEntityDataDTO map2DTO(com.example.hotel.models.AllocationEntity allocationEntity) { com.example.hotel.dto.AllocationEntityDataDTO allocationEntityDataDTO = new com.example.hotel.dto.AllocationEntityDataDTO(); allocationEntityDataDTO.setRoomID(allocationEntity.getId()); allocationEntityDataDTO.setNumber(allocationEntity.getNumber()); <BUGS> allocationEntityDataDTO.setType(allocationEntity.getType().getEntityType()); <BUGE> allocationEntityDataDTO.setAvailability(allocationEntity.getAvailability()); allocationEntityDataDTO.setCapacity(allocationEntity.getCapacity()); allocationEntityDataDTO.setCost(allocationEntity.getPrice()); return allocationEntityDataDTO; } 
@java.lang.Override public za.org.grassroot.services.Group saveGroup(za.org.grassroot.services.Group groupToSave, boolean createGroupLog, java.lang.String description, java.lang.Long changedByuserId) { za.org.grassroot.services.Group group = groupRepository.save(groupToSave); if (createGroupLog) { <BUGS> za.org.grassroot.services.GroupLog groupLog = groupLogRepository.save(new za.org.grassroot.services.GroupLog(groupToSave.getId(), dontKnowTheUser, za.org.grassroot.core.enums.GroupLogType.GROUP_UPDATED, changedByuserId, description)); <BUGE> } return group; } 
public static boolean logOut(java.util.UUID sId) { if (!(org.bgu.domain.facades.UserFacade.sessions.containsKey(sId))) return false;  org.bgu.domain.facades.Session session = org.bgu.domain.facades.UserFacade.sessions.get(sId); if (!(session._forum.logOut(session._member.getUserName()))) return false;  <BUGS> org.bgu.domain.facades.UserFacade.sessions.remove(sId); <BUGE> return true; } 
public static void initEmptyDastList() { <BUGS> SimpleSetPerformanceAnalyzer.dastList = new SimpleSet[5]; <BUGE> SimpleSetPerformanceAnalyzer.dastList[0] = new OpenHashSet(); SimpleSetPerformanceAnalyzer.dastList[1] = new ChainedHashSet(); SimpleSetPerformanceAnalyzer.dastList[2] = new CollectionFacadeSet(new java.util.TreeSet<java.lang.String>()); <BUGS> SimpleSetPerformanceAnalyzer.dastList[3] = new CollectionFacadeSet(new java.util.LinkedList<java.lang.String>()); SimpleSetPerformanceAnalyzer.dastList[4] = new CollectionFacadeSet(new java.util.HashSet<java.lang.String>()); <BUGE> } 
static boolean isLastWordInDirection(com.totsp.crossword.puz.Box[][] boxes, com.totsp.crossword.puz.Playboard.Word w) { if (w.across) { <BUGS> return ((w.start.down) + 1) >= (boxes[w.start.across].length); <BUGE> } <BUGS> return ((w.start.across) + 1) >= (boxes.length); <BUGE> } 
@java.lang.Override public void validate() { if (isHttpPost()) { <BUGS> if (getIsRegistered()) { <BUGE> iptValidation.validateUpdate(this, getRegisteredIpt()); }else { iptValidation.validate(this, ipt); validatedBaseURL = true; organisationValidation.validate(this, organisation); } } } 
public java.util.List<com.example.agathe.tsgtest.dto.Contact> getPrivateContacts(int numberOfContacts) { java.util.List<com.example.agathe.tsgtest.dto.Contact> contacts = null; <BUGS> com.olab.smplibrary.SMPLibrary.GetPrivateContacts(context, 10, new com.olab.smplibrary.DataResponseCallback() { <BUGE> @java.lang.Override public void OnResponse(int response_code, java.lang.String data_response) { android.util.Log.i("MainActivity:Response", ("GetPrivateContacts response code " + response_code)); android.util.Log.i("MainActivity:Response", ("GetPrivateContacts - " + data_response)); } }); return contacts; } 
public java.util.Set<java.lang.Integer> chooseCardsToTestIndexesForTest2() { setAnswerDataByStudyItemsContainer(); java.util.Set<java.lang.Integer> cardsToTestIndexes = new java.util.HashSet<java.lang.Integer>(); cardsToTestIndexes = getLatestQuestionedCardIndexes(6); <BUGS> java.util.Set<java.lang.Integer> indexesToAdd = getRandomHardestCardIndexes(0.2, 6, cardsToTestIndexes); <BUGE> cardsToTestIndexes.addAll(indexesToAdd); indexesToAdd = getRandomCardIndexes(8, cardsToTestIndexes); cardsToTestIndexes.addAll(indexesToAdd); return cardsToTestIndexes; } 
@java.lang.Override public void migrate(io.realm.DynamicRealm realm, long oldVersion, long newVersion) { io.realm.RealmSchema schema = realm.getSchema(); if (oldVersion == 0) { schema.create("User").removeField("energy").removeField("maxEnergy"); oldVersion++; } if (oldVersion == 1) { <BUGS> <BUGE> } } 
public void set(double time, us.ihmc.robotics.geometry.FrameOrientation orientation, us.ihmc.robotics.geometry.FrameVector angularVelocity) { <BUGS> setTime(time); <BUGE> checkReferenceFrameMatch(orientation); checkReferenceFrameMatch(angularVelocity); <BUGS> <BUGE> this.orientation.set(orientation.getQuaternion()); this.angularVelocity.set(angularVelocity.getVector()); } 
@play.db.jpa.Transactional public static play.mvc.Result add() { models.GoogleAnalyticsProfile object = play.libs.Json.fromJson(request().body().asJson(), models.GoogleAnalyticsProfile.class); <BUGS> if (((object.redirectUris) == null) && (play.Play.isProd())) object.redirectUris = com.ga2sa.security.ApplicationSecurity.redirectURL;  <BUGE> return controllers.settings.GoogleAnalyticsSettings.commonAction(object, new play.libs.F.Callback0() { @java.lang.Override public void invoke() throws java.lang.Throwable { models.dao.GoogleAnalyticsProfileDAO.save(object); } }); } 
public static void post(java.lang.String text, long language, long version) { <BUGS> <BUGE> models.Language lang = models.Language.findById(language); models.Version ver = models.Version.findById(version); models.Paste paste = new models.Paste(text, lang, ver); paste.save(); controllers.PasteController.view(paste.id); } 
private boolean checkIfServiceIsRunning() { android.app.ActivityManager manager = ((android.app.ActivityManager) (getSystemService(Context.ACTIVITY_SERVICE))); for (android.app.ActivityManager.RunningServiceInfo service : manager.getRunningServices(java.lang.Integer.MAX_VALUE)) { if (com.amossys.hooker.service.InstrumentationService.class.getName().equals(service.service.getClassName())) { <BUGS> serviceStarted.setText("OFF"); <BUGE> return true; } } return false; } 
protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_fragment); radioGroup = ((android.widget.RadioGroup) (findViewById(R.id.rg_tab))); fragmentManager = getFragmentManager(); <BUGS> radioGroup.check(radioGroup.getChildAt(0).getId()); <BUGE> radioGroup.setOnCheckedChangeListener(radioGroupListener); gattServiceIntent = new android.content.Intent(this, edu.nthu.nmsl.itri_app.BluetoothLeService.class); bindService(gattServiceIntent, mServiceConnection, android.content.Context.BIND_AUTO_CREATE); } 
com.google.javascript.jscomp.newtypes.FunctionType specialize(com.google.javascript.jscomp.newtypes.FunctionType other) { if ((other == null) || ((!(this.isLoose())) && (other.isLoose()))) { return this; <BUGS> }else { com.google.javascript.jscomp.newtypes.FunctionType result = com.google.javascript.jscomp.newtypes.FunctionType.meet(this, other); if ((this.isLoose) && (!(result.isLoose()))) { result = result.withLoose(); } return result; <BUGE> } <BUGS> <BUGE> } 
@java.lang.Override protected void loadFileSystem(final com.linxonline.mallet.io.filesystem.FileSystem _fileSystem) { com.linxonline.mallet.util.logger.Logger.println("Finalising filesystem.", Logger.Verbosity.MINOR); com.linxonline.mallet.io.filesystem.GlobalFileSystem.setFileSystem(_fileSystem); <BUGS> java.lang.System.out.println("Mapping Base directory."); <BUGE> if ((com.linxonline.mallet.io.filesystem.GlobalFileSystem.mapDirectory("base/")) == false) { com.linxonline.mallet.util.logger.Logger.println("Failed to map base directory.", Logger.Verbosity.MINOR); } } 
public static void drawString(java.awt.Graphics g, int x, int y, java.awt.Font font, java.awt.Color color, java.lang.String... strings) { if (font != null) <BUGS> g.setColor(color); <BUGE>  if (color != null) <BUGS> g.setFont(font); <BUGE>  sokoban.game.utils.TextDrawer.drawString(g, x, y, strings); } 
public com.jagrosh.jdautilities.commandclient.Command build(java.util.function.BiConsumer<com.jagrosh.jdautilities.commandclient.Command, com.jagrosh.jdautilities.commandclient.CommandEvent> execution) { <BUGS> return new com.jagrosh.jdautilities.commandclient.CommandBuilder.BlankCommand(name, help, category, arguments, guildOnly, requiredRole, ownerCommand, cooldown, userPermissions, botPermissions, ((java.lang.String[]) (aliases.toArray())), ((com.jagrosh.jdautilities.commandclient.Command[]) (children.toArray())), helpBiConsumer, usesTopicTags, cooldownScope) { <BUGE> @java.lang.Override protected void execute(com.jagrosh.jdautilities.commandclient.CommandEvent event) { execution.accept(this, event); } }; } 
private void restoreCursor(org.eclipse.swt.widgets.Control control) { <BUGS> <BUGE> org.eclipse.swt.graphics.Cursor oldCursor = ((org.eclipse.swt.graphics.Cursor) (control.getData("pdetools-old-cursor"))); if ((oldCursor != null) && (oldCursor.isDisposed())) { oldCursor = null; } control.setCursor(oldCursor); } 
@java.lang.Override protected void onSelectionChanged(int selStart, int selEnd) { super.onSelectionChanged(selStart, selEnd); if ((state) == null) { return ; } <BUGS> android.util.Log.v("before", java.lang.String.valueOf(state.isUnderLineEnable())); changeSpanStateBySelection(selStart); android.util.Log.v("after", java.lang.String.valueOf(state.isUnderLineEnable())); <BUGE> } 
<BUGS> public javafx.scene.control.Button toButton() { javafx.scene.control.Button button = new javafx.scene.control.Button(this.label); <BUGE> button.setGraphic(((this.graphic) != null ? this.graphic.get() : null)); button.setUserData(this); return button; } 
private <T> T get(java.lang.Class<T> clazz, java.util.Set<java.lang.Class<?>> traversedClasses) { if (objects.containsKey(clazz)) { return clazz.cast(objects.get(clazz)); } <BUGS> traversedClasses = new java.util.HashSet<>(traversedClasses); <BUGE> ch.jalu.injector.context.UnresolvedInstantiationContext<T> context = new ch.jalu.injector.context.UnresolvedInstantiationContext(this, ch.jalu.injector.context.StandardResolutionType.SINGLETON, clazz); <BUGS> T object = instantiate(context, traversedClasses); <BUGE> register(clazz, object); return object; } 
public net.minecraftforge.common.config.Property getProp(net.minecraftforge.common.config.Configuration cfg, java.lang.String category, java.lang.reflect.Field field, java.lang.Object instance, java.lang.String comment) { <BUGS> return cfg.get(category, field.getName(), com.google.common.primitives.Ints.toArray(scala.actors.threadpool.Arrays.asList(((java.lang.Integer[]) (net.minecraftforge.common.config.TypeAdapters.TypeAdapter.getObject(instance, field))))), comment); <BUGE> } 
@java.lang.Override public long check(com.parallels.desktopcloud.ParallelsDesktopVMSlaveComputer c) { com.parallels.desktopcloud.ParallelsDesktopCloudRetentionStrategy.LOGGER.log(java.util.logging.Level.SEVERE, "Check VM computer %s", c.getName()); <BUGS> if (c.isOffline()) return 1;  <BUGE> if (c.isIdle()) { try { com.parallels.desktopcloud.ParallelsDesktopCloudRetentionStrategy.LOGGER.log(java.util.logging.Level.SEVERE, "Disconnecting computer..."); c.disconnect(null).get(); c.getNode().terminate(); } catch (java.lang.Exception e) { com.parallels.desktopcloud.ParallelsDesktopCloudRetentionStrategy.LOGGER.log(java.util.logging.Level.SEVERE, "Error: %s", e); } } return 1; } 
@javax.annotation.security.RolesAllowed(value = org.votingsystem.web.currency.util.AuthRole.ADMIN) @org.votingsystem.web.currency.jaxrs.Path(value = "/user/id/{userId}/{year}") @org.votingsystem.web.currency.jaxrs.GET @org.votingsystem.web.currency.jaxrs.Produces(value = javax.ws.rs.core.MediaType.APPLICATION_JSON) public javax.ws.rs.core.Response userYear(@org.votingsystem.web.currency.jaxrs.PathParam(value = "userId") long userId, @org.votingsystem.web.currency.jaxrs.PathParam(value = "year") <BUGS> int year, @javax.ws.rs.core.Context javax.servlet.ServletContext context, @javax.ws.rs.core.Context javax.servlet.http.HttpServletRequest req, @javax.ws.rs.core.Context javax.servlet.http.HttpServletResponse resp) throws java.lang.Exception { <BUGE> java.util.Calendar calendar = org.votingsystem.web.currency.jaxrs.DateUtils.getCalendar(year, 1, 1); org.votingsystem.model.User user = dao.find(org.votingsystem.model.User.class, userId); if (user == null) return javax.ws.rs.core.Response.status(Response.Status.NOT_FOUND).entity(("ERROR - User not found - userId: " + userId)).build();  <BUGS> return getUserBalancesDto(req, resp, context, user, org.votingsystem.web.currency.jaxrs.DateUtils.getYearPeriod(calendar)); <BUGE> } 
@java.lang.Override public org.wso2.siddhi.core.event.stream.StreamEvent find(org.wso2.siddhi.core.event.state.StateEvent matchingEvent, java.lang.Object candidateEvents, org.wso2.siddhi.core.event.stream.StreamEventCloner candidateEventCloner) { this.initExpressionLogic(); <BUGS> java.util.List<org.wso2.carbon.analytics.datasource.commons.Record> records = this.findRecords(matchingEvent, candidateEvents, candidateEventCloner); <BUGE> return org.wso2.carbon.analytics.eventtable.AnalyticsEventTableUtils.recordsToStreamEvent(this.myAttrs, records); } 
private java.lang.String firstSet(java.lang.String expression) { int end = (expression.indexOf(Constants.CLOSE_SQUARE_BRACKET)) + 1; <BUGS> if (((expression.length()) - 1) > end) { java.lang.String quantifier = java.lang.String.valueOf(expression.charAt((end + 1))); if (!(isQuantifier(quantifier))) { <BUGE> end++; } } return expression.substring(0, end); } 
private int findRandomInstance() { int random_instance = ((int) ((java.lang.Math.random()) * (used.length))); while (used[random_instance]) { random_instance++; <BUGS> if (random_instance > (used.length)) <BUGE> random_instance = 0;  } used[random_instance] = true; return random_instance; } 
public java.util.List<java.lang.Long> getRequiredMissionIds() { java.util.List<java.lang.Long> ids = new java.util.ArrayList<>(); <BUGS> for (com.playposse.peertopeeroxygen.backend.peerToPeerOxygenApi.model.MissionBean missionBean : requiredMissions) { if (!(missionBean.getId().equals(com.playposse.peertopeeroxygen.android.widgets.RequiredMissionListView.BLANK_MISSION_ID))) { ids.add(missionBean.getId()); <BUGE> } } return ids; } 
public se.plushogskolan.casemanagement.model.WorkItem save(se.plushogskolan.restcaseservice.model.DTOWorkItem dtoWorkItem) { <BUGS> se.plushogskolan.casemanagement.model.WorkItem workItem = dtoWorkItem.toEntity(dtoWorkItem); <BUGE> try { workItem = service.save(workItem); } catch (se.plushogskolan.casemanagement.exception.AlreadyPersistedException e) { throw new se.plushogskolan.restcaseservice.exception.ConflictException(e.getMessage()); } catch (se.plushogskolan.casemanagement.exception.InternalErrorException e) { throw new se.plushogskolan.restcaseservice.exception.WebInternalErrorException(e.getMessage()); } return workItem; } 
@java.lang.Override public void setDead() { <BUGS> <BUGE> super.setDead(); <BUGS> net.minecraft.entity.player.EntityPlayer caster = this.getThrower(); caster.dismountRidingEntity(); com.teaminfinity.elementalinvocations.handler.PlayerStateHandler.getInstance().getState(caster).setInvisible(false).setInvulnerable(false).setEthereal(false); <BUGE> } 
<BUGS> public int getIndexFromValue(int[] list, int v) { <BUGE> for (int i = 0; i != (list.length); i++) { <BUGS> if ((list[i]) == v) <BUGE> return i;  } return 0; } 
@java.lang.Override public java.util.Map<java.lang.String, java.lang.String> getLocalCredentials(org.fogbowcloud.manager.occi.request.Request request) { <BUGS> <BUGE> java.util.Map<java.lang.String, java.lang.String> credentialsPerMember = org.fogbowcloud.manager.core.plugins.localcredentails.LocalCredentialsHelper.getCredentialsPerRelatedLocalName(this.properties, request.getRequestingMemberId()); if (!(credentialsPerMember.isEmpty())) { return credentialsPerMember; } return org.fogbowcloud.manager.core.plugins.localcredentails.LocalCredentialsHelper.getCredentialsPerRelatedLocalName(this.properties, LocalCredentialsHelper.FOGBOW_DEFAULTS); } 
@java.lang.Override public com.example.android.uamp.ui.tv.ViewHolder onCreateViewHolder(android.view.ViewGroup parent) { android.util.Log.d(com.example.android.uamp.ui.tv.CardPresenter.TAG, "onCreateViewHolder"); com.example.android.uamp.ui.tv.CardPresenter.mContext = parent.getContext(); android.support.v17.leanback.widget.ImageCardView cardView = new android.support.v17.leanback.widget.ImageCardView(com.example.android.uamp.ui.tv.CardPresenter.mContext); cardView.setFocusable(true); cardView.setFocusableInTouchMode(true); <BUGS> cardView.setBackgroundColor(com.example.android.uamp.ui.tv.CardPresenter.mContext.getResources().getColor(R.color.white)); <BUGE> return new com.example.android.uamp.ui.tv.CardPresenter.CardViewHolder(cardView); } 
private java.lang.String getScreenType(usbong.android.builder.models.details.ImageScreenDetails imageScreenDetails) { <BUGS> if (ImagePosition.ABOVE_TEXT.equals(imageScreenDetails.getImagePosition())) { <BUGE> if (imageScreenDetails.isHasCaption()) { return UsbongScreenType.CLICKABLE_IMAGE_TEXT_DISPLAY.getName(); }else { return UsbongScreenType.IMAGE_TEXT_DISPLAY.getName(); } }else { if (imageScreenDetails.isHasCaption()) { return UsbongScreenType.TEXT_CLICKABLE_IMAGE_DISPLAY.getName(); }else { return UsbongScreenType.TEXT_IMAGE_DISPLAY.getName(); } } } 
public void disposeFrame(final java.lang.String canvasKey) { <BUGS> javax.swing.SwingUtilities.invokeLater(new java.lang.Runnable() { @java.lang.Override public void run() { synchronized(key2canvasFrame) { org.bytedeco.javacv.CanvasFrame frame = key2canvasFrame.get(canvasKey); if (frame != null) { <BUGE> frame.dispose(); <BUGS> key2canvasFrame.remove(canvasKey); <BUGE> } <BUGS> } <BUGE> } <BUGS> }); <BUGE> } 
<BUGS> @org.junit.Test <BUGE> public void testFileOperaFuckup() throws java.net.MalformedURLException { net.ontopia.infoset.core.LocatorIF base = new net.ontopia.infoset.impl.basic.URILocator("file:/home/larsga/cvs-co/topicmaps/opera/opera.xtm"); net.ontopia.infoset.core.LocatorIF base2 = base.resolveAbsolute("opera-template.xtm"); net.ontopia.infoset.core.LocatorIF abs = base2.resolveAbsolute("geography.xtm"); <BUGS> org.junit.Assert.assertTrue("Two-step normalization produced wrong result", abs.getAddress().equals("file:/home/larsga/cvs-co/topicmaps/opera/geography.xtm")); <BUGE> } 
private void processEvent(round_robin.Event event) { <BUGS> java.lang.System.out.println(("event type" + (event.getType()))); java.lang.System.out.println(("event time" + (event.getType()))); <BUGE> switch (event.getType()) { case Event.NEW_PROCESS : createProcess(); break; case Event.SWITCH_PROCESS : switchProcess(); break; case Event.END_PROCESS : <BUGS> java.lang.System.out.println("fant en end_process"); <BUGE> endProcess(); break; case Event.IO_REQUEST : processIoRequest(); break; case Event.END_IO : endIoOperation(); break; } } 
public void transposeUp(android.view.View v) { <BUGS> android.util.Log.i("HTML", currentSong.content); <BUGE> org.jsoup.nodes.Document doc = org.jsoup.Jsoup.parse(currentSong.content, "UTF-8"); org.jsoup.select.Elements chords = doc.select("span"); for (org.jsoup.nodes.Element e : chords) { <BUGS> android.util.Log.i("CHORD", e.text()); <BUGE> e.text(transposeChord(e.text(), sk.matus.ksp.guitarist_swiss_knife.SongViewActivity.UP)); } currentSong.content = doc.toString(); displaySong(currentSong); } 
@java.lang.Override protected void onPostExecute(java.lang.Void aVoid) { if (flag[0]) { finish(); android.content.Intent intent = new android.content.Intent(this, com.vladimircvetanov.smartfinance.MainActivity.class); startActivity(intent); <BUGS> com.vladimircvetanov.smartfinance.message.Message.message(this, ("Successful logged in." + (com.vladimircvetanov.smartfinance.model.Manager.getLoggedUser().getId()))); <BUGE> }else { com.vladimircvetanov.smartfinance.message.Message.message(this, "Wrong email or password."); } } 
public void Connect(android.bluetooth.BluetoothDevice device) { android.bluetooth.BluetoothSocket tmp = null; try { tmp = device.createRfcommSocketToServiceRecord(java.util.UUID.fromString(mUUID)); com.example.ibrahim.myapplication.BluetoothChat.ConnectThread CT = new com.example.ibrahim.myapplication.BluetoothChat.ConnectThread(tmp); CT.start(); } catch (java.io.IOException e) { <BUGS> android.widget.Toast.makeText(getApplicationContext(), "Error", Toast.LENGTH_SHORT).show(); <BUGE> } } 
@org.junit.Before public void createTransformer() throws ddf.catalog.federation.FederationException, ddf.catalog.source.SourceUnavailableException, ddf.catalog.source.UnsupportedQueryException { ddf.catalog.transformer.nitf.NitfInputTransformer transformer = new ddf.catalog.transformer.nitf.NitfInputTransformer(); ddf.catalog.transformer.nitf.ddf.catalog.CatalogFramework catalog = org.mockito.Mockito.mock(ddf.catalog.CatalogFramework.class); org.mockito.Mockito.when(catalog.query(org.mockito.Matchers.any(ddf.catalog.operation.QueryRequest.class))).thenReturn(new ddf.catalog.operation.impl.QueryResponseImpl(null, "sourceId")); <BUGS> transformer.setCatalog(catalog); <BUGE> transformer.setMetacardFactory(ddf.catalog.transformer.nitf.TestBasicInputTransformer.metacardFactory); this.transformer = transformer; } 
@java.lang.Override public void onClick(android.view.View v) { if (visibilityCheck.isChecked()) { <BUGS> mainActivity.goToCalendarView(); <BUGE> if (mainActivity.schoolsToView.contains(values[position])) { mainActivity.schoolsToView.remove(values[position]); }else { mainActivity.schoolsToView.add(values[position]); } }else { if (mainActivity.schoolsToView.contains(values[position])) { mainActivity.schoolsToView.remove(values[position]); } } mainActivity.viewCalendarList(); } 
public java.util.List<net.sf.marineapi.nmea.util.Measurement> getMeasurements() { <BUGS> int setCount = (getFieldCount()) / (net.sf.marineapi.nmea.parser.XDRParser.DATA_SET_LENGTH); java.util.ArrayList<net.sf.marineapi.nmea.util.Measurement> result = new java.util.ArrayList<net.sf.marineapi.nmea.util.Measurement>(setCount); for (int i = 0; i <= setCount; i += net.sf.marineapi.nmea.parser.XDRParser.DATA_SET_LENGTH) { <BUGE> net.sf.marineapi.nmea.util.Measurement value = fetchValues(i); if (!(value.isEmpty())) { result.add(value); } } return result; } 
@java.lang.Override public java.lang.String toStrRepresentation() { java.lang.String result = ""; java.util.List<java.lang.String> sub_strs = new java.util.ArrayList<>(); for (org.tariel.pla.logics.IFunction sub : this.getSub()) { <BUGS> sub_strs.add(sub.toStrRepresentation()); <BUGE> } result = java.lang.String.join(" ⋀ ", sub_strs); return result; } 
@java.lang.Override public boolean onChildClick(android.widget.ExpandableListView parent, android.view.View v, int groupPosition, int childPosition, long id) { final com.wireless.pojo.menuMgr.Kitchen kitchenSelected = mDeptNodes.get(groupPosition).getValue().get(childPosition).getKey(); if (!(kitchenSelected.equals(mCurrentKitchen))) { mCurrentKitchen = kitchenSelected; <BUGS> if (v != null) { if ((mOnKitchenChangeListener) != null) { mOnKitchenChangeListener.onKitchenChange(mCurrentKitchen); } <BUGE> } } return true; } 
public static ca.claytonrogers.Common.Deck getShuffledDeck() { ca.claytonrogers.Common.Deck deck = new ca.claytonrogers.Common.Deck(); for (int i = 1; i <= 13; i++) { for (int j = 0; j < 4; j++) { <BUGS> deck.push(new ca.claytonrogers.Common.Card(i, false, Card.Suit.values()[i])); <BUGE> } } deck.shuffle(Constants.random); return deck; } 
public static void launchActivity(android.content.Context context, java.lang.String full_name, java.lang.String name, java.lang.String repo_url, java.lang.String login) { android.content.Intent intent = new android.content.Intent(); intent.putExtra(com.zpauly.githubapp.view.repositories.RepoContentActivity.FULL_NAME, full_name); intent.putExtra(com.zpauly.githubapp.view.repositories.RepoContentActivity.NAME, name); intent.putExtra(com.zpauly.githubapp.view.repositories.RepoContentActivity.REPO_URL, repo_url); intent.putExtra(com.zpauly.githubapp.view.repositories.RepoContentActivity.LOGIN, login); intent.setClass(context, com.zpauly.githubapp.view.repositories.RepoContentActivity.class); context.startActivity(intent); <BUGS> ((android.app.Activity) (context)).finish(); <BUGE> } 
public void signInEmail(android.view.View v) { <BUGS> setLoading(true); <BUGE> setEmail(true); if (((mUsername) != null) && ((mPassword) != null)) { <BUGS> <BUGE> com.google.firebase.auth.FirebaseAuth.getInstance().signInWithEmailAndPassword(mUsername, mPassword).addOnFailureListener(this).addOnCompleteListener(this); mDataListener.onLogin(null); } } 
@java.lang.Override public void onBlur(com.google.gwt.event.dom.client.BlurEvent event) { <BUGS> if (((output.getText().trim().length()) == 0) || (!(output.getText().trim().matches(FieldType.ALPHANUMERIC.getRegex())))) { <BUGE> groupOutput.setValidationState(ValidationState.ERROR); }else { groupOutput.setValidationState(ValidationState.NONE); } } 
public static void stopRingtone(android.content.Context context) { com.example.yink.amadeus.AlarmReceiver.settings = android.preference.PreferenceManager.getDefaultSharedPreferences(context); if (com.example.yink.amadeus.AlarmReceiver.isPlaying) { com.example.yink.amadeus.AlarmReceiver.editor = com.example.yink.amadeus.AlarmReceiver.settings.edit(); com.example.yink.amadeus.AlarmReceiver.editor.putBoolean("alarm_toggle", false); com.example.yink.amadeus.AlarmReceiver.editor.apply(); com.example.yink.amadeus.AlarmReceiver.m.release(); <BUGS> <BUGE> } } 
<BUGS> private java.lang.String receive() { <BUGE> byte[] data = new byte[1024]; java.net.DatagramPacket packet = new java.net.DatagramPacket(data, data.length); try { socket.receive(packet); } catch (java.io.IOException e) { e.printStackTrace(); } java.lang.String message = new java.lang.String(packet.getData()); return message; } 
@org.junit.Test public void getNumberOfConnectorImplementations_should_return_count() throws java.lang.Exception { final java.util.List<org.bonitasoft.engine.core.connector.parser.SConnectorImplementationDescriptor> sConnectorImplementationDescriptors = createConnectorList(); doReturn(((long) (sConnectorImplementationDescriptors.size()))).when(connectorService).getNumberOfConnectorImplementations(org.bonitasoft.engine.api.impl.ProcessAPIImplTest.PROCESS_DEFINITION_ID, org.bonitasoft.engine.api.impl.ProcessAPIImplTest.TENANT_ID); final long numberOfConnectorImplementations = processAPI.getNumberOfConnectorImplementations(org.bonitasoft.engine.api.impl.ProcessAPIImplTest.PROCESS_DEFINITION_ID); <BUGS> org.assertj.core.api.Assertions.assertThat(numberOfConnectorImplementations).as("should return count").isEqualTo(sConnectorImplementationDescriptors.size()); <BUGE> } 
public static org.apache.lens.cube.parse.ASTNode parseExpr(java.lang.String expr) throws org.apache.lens.server.api.error.LensException { org.apache.lens.cube.parse.ParseDriver driver = new org.apache.lens.cube.parse.ParseDriver(); org.apache.lens.cube.parse.ASTNode tree; try { tree = driver.parseExpression(expr); } catch (org.apache.lens.cube.parse.ParseException e) { <BUGS> throw new org.apache.lens.server.api.error.LensException(org.apache.lens.cube.error.LensCubeErrorCode.COULD_NOT_PARSE_EXPRESSION.getLensErrorInfo(), e, e.getMessage()); <BUGE> } return org.apache.lens.cube.parse.ParseUtils.findRootNonNullToken(tree); } 
boolean isWrongSequence(htsjdk.samtools.SAMRecord record) { <BUGS> return ((procesingUnmapped) && (!(record.getReadUnmappedFlag()))) || ((((!(procesingUnmapped)) && ((shard.contig.referenceName) != null)) && (!(shard.contig.referenceName.isEmpty()))) && (!(shard.contig.referenceName.equals(record.getReferenceName())))); <BUGE> } 
@java.lang.Override public void onDownloadStart(java.lang.String url, java.lang.String userAgent, java.lang.String contentDisposition, java.lang.String mimetype, long contentLength) { android.net.Uri uri = android.net.Uri.parse(url); <BUGS> android.widget.Toast.makeText(cordova.getActivity(), uri.toString(), Toast.LENGTH_LONG).show(); <BUGE> android.content.Intent intent = new android.content.Intent(android.content.Intent.ACTION_VIEW, uri); cordova.getActivity().startActivity(intent); } 
<BUGS> public java.util.ArrayList<java.lang.String> getHistoryFilePath() throws java.io.IOException { java.lang.String fileContent = configurationFile.readFile(); storage.ConfigurationFileOperation.logger.info(storage.ConfigurationFileOperation.MESSAGE_READ_CONFIGURATION_FILE); <BUGE> try { <BUGS> <BUGE> java.util.ArrayList<java.lang.String> x = converter.getFilePathListFromJsonString(fileContent); return x; } catch (java.lang.Exception e) { java.util.ArrayList<java.lang.String> x = new java.util.ArrayList<java.lang.String>(); x.add(storage.ConfigurationFileOperation.DEFAULT_FILE_NAME); return x; } } 
@java.lang.Override <BUGS> public java.awt.Component getListCellRendererComponent(javax.swing.JList list, java.lang.Object value, int index, boolean isSelected, boolean cellHasFocus) { <BUGE> if (value == null) { setText("<Select a datasource>"); }else { <BUGS> it.unibz.krdb.obda.model.OBDADataSource datasource = ((it.unibz.krdb.obda.model.OBDADataSource) (value)); java.lang.String datasourceUri = datasource.getSourceID().toString(); <BUGE> setText(datasourceUri); } return this; } 
public void updateSelection(java.lang.String selection) { java.util.Enumeration<javax.swing.AbstractButton> buttons = btns.getElements(); while (buttons.hasMoreElements()) { javax.swing.JToggleButton b = ((javax.swing.JToggleButton) (buttons.nextElement())); if (b.getActionCommand().equals(selection)) { <BUGS> java.lang.System.out.println("test"); <BUGE> btns.clearSelection(); b.setSelected(true); <BUGS> <BUGE> } } } 
public static java.lang.Class getGenericType(java.lang.Class clazz) { java.lang.reflect.Type[] genericInterfaces = clazz.getGenericInterfaces(); for (java.lang.reflect.Type genericInterface : genericInterfaces) { if (genericInterface instanceof java.lang.reflect.ParameterizedType) { java.lang.reflect.Type[] genericTypes = ((java.lang.reflect.ParameterizedType) (genericInterface)).getActualTypeArguments(); <BUGS> if ((genericTypes.length) > 1) { <BUGE> return ((java.lang.Class) (genericTypes[0])); } } } return null; } 
private void invokeExceptionRaisingHandler(java.lang.Throwable expected) throws java.lang.Exception { java.lang.reflect.Method method = org.springframework.web.method.support.InvocableHandlerMethodTests.ExceptionRaisingHandler.class.getDeclaredMethod("raiseException"); java.lang.Object handler = new org.springframework.web.method.support.InvocableHandlerMethodTests.ExceptionRaisingHandler(expected); new org.springframework.web.method.support.InvocableHandlerMethod(handler, method).invokeForRequest(webRequest, null); <BUGS> org.junit.Assert.fail("Expected exception"); <BUGE> } 
private java.lang.Object readArray(com.cedarsoftware.util.io.JsonObject object) throws java.io.IOException { final java.util.Collection array = new java.util.ArrayList(); while (true) { skipWhitespace(); final java.lang.Object o = readValue(object); if (o != (com.cedarsoftware.util.io.JsonParser.EMPTY_ARRAY)) { array.add(o); } final int c = skipWhitespaceRead(); if (c == ']') { break; }else if (c != ',') { <BUGS> com.cedarsoftware.util.io.JsonParser.error("Expected ',' or ']' inside array"); <BUGE> }  } return array.toArray(); } 
private static com.rgi.android.geopackage.GeoPackage createGeoPackage(final java.lang.String tableName, final java.lang.String columnName, final java.io.File testFile) throws com.rgi.android.geopackage.verification.ConformanceException, java.io.IOException, java.lang.ClassNotFoundException, java.sql.SQLException { com.rgi.android.geopackage.GeoPackage gpkg = new com.rgi.android.geopackage.GeoPackage(testFile, com.rgi.android.geopackage.GeoPackage.OpenMode.Create); <BUGS> try { gpkg.close(); geopackage.GeoPackageSchemaAPITest.createTable(tableName, columnName, testFile); return new com.rgi.android.geopackage.GeoPackage(testFile, com.rgi.android.geopackage.verification.VerificationLevel.None, com.rgi.android.geopackage.GeoPackage.OpenMode.Open); } finally { } <BUGE> } 
@java.lang.Override public void onReceive(com.home.pete.aquarium.Context context, com.home.pete.aquarium.Intent intent) { boolean value = intent.getBooleanExtra("ACTION", false); <BUGS> android.util.Log.d(com.home.pete.aquarium.MainActivity.TAG, "Toggling UV state"); <BUGE> com.home.pete.aquarium.Intent msg = new com.home.pete.aquarium.Intent("uv-state"); msg.putExtra("ACTION", value); android.support.v4.content.LocalBroadcastManager.getInstance(context).sendBroadcast(msg); } 
@java.lang.Override public void onAuthStateChanged(@android.support.annotation.NonNull com.google.firebase.auth.FirebaseAuth firebaseAuth) { if ((firebaseAuth.getCurrentUser()) == null) { android.content.Intent loginIntent = new android.content.Intent(this, com.mobapde.vince.mobapde.LoginActivity.class); loginIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP); finish(); startActivity(loginIntent); } <BUGS> com.mobapde.vince.mobapde.FirebaseUtils.initialize(); <BUGE> } 
@java.lang.Override public void run() { models.items.takeable.TakeableItem currentItem = itemNodeArrayList.get(selectedItemIndex).getItem(); if (currentItem.isEquipable()) { entity.equipItem(((models.items.takeable.equippable.EquippableItem) (currentItem))); }else { } (selectedItemIndex)--; <BUGS> <BUGE> ((views.InventoryView) (view)).updateSelected(selectedItemIndex); } 
public synchronized void close() throws java.io.IOException { <BUGS> edu.ncku.uscc.util.Log.warn(("Close " + (serialPort.getName()))); <BUGE> if ((serialPort) != null) { serialPort.removeEventListener(); serialPort.close(); } if ((input) != null) { input.close(); input = null; } <BUGS> if ((edu.ncku.uscc.io.DehumidRoomController.output) != null) { edu.ncku.uscc.io.DehumidRoomController.output.close(); edu.ncku.uscc.io.DehumidRoomController.output = null; <BUGE> } } 
@org.apache.logging.log4j.core.config.plugins.PluginFactory public static io.cloudracer.LogMonitor createAppender(@org.apache.logging.log4j.core.config.plugins.PluginAttribute(value = "name") java.lang.String name, @org.apache.logging.log4j.core.config.plugins.PluginElement(value = "Layout") org.apache.logging.log4j.core.Layout<?> layout, @org.apache.logging.log4j.core.config.plugins.PluginElement(value = "Filter") final org.apache.logging.log4j.core.Filter filter, @org.apache.logging.log4j.core.config.plugins.PluginAttribute(value = "otherAttribute") java.lang.String otherAttribute) { if (name == null) { io.cloudracer.LOGGER.error("No name provided for TestLog4j2Appender"); return null; } if (layout == null) { layout = org.apache.logging.log4j.core.layout.PatternLayout.createDefaultLayout(); } <BUGS> io.cloudracer.LogMonitor.setLogMonitor(new io.cloudracer.LogMonitor(name, filter, layout, true)); return io.cloudracer.LogMonitor.getLogMonitor(); <BUGE> } 
@com.banner.bannerApplication.controllers.RequestMapping(method = RequestMethod.POST) public org.springframework.web.servlet.ModelAndView AddSection(@com.banner.bannerApplication.controllers.RequestParam long courseID, @com.banner.bannerApplication.controllers.RequestParam <BUGS> java.lang.String Coursename, @com.banner.bannerApplication.controllers.RequestParam <BUGE> java.lang.String ProfessorFirstname, @com.banner.bannerApplication.controllers.RequestParam java.lang.String ProfessorLastname, @com.banner.bannerApplication.controllers.RequestParam int sectionnumber) { com.banner.bannerApplication.entities.Course course = courseRepository.findOne(courseID); com.banner.bannerApplication.entities.Section n = new com.banner.bannerApplication.entities.Section(); n.setFirstName(ProfessorFirstname); n.setLastName(ProfessorLastname); n.setSectionNumber(sectionnumber); sectionRepository.save(n); return new org.springframework.web.servlet.ModelAndView("redirect:/section"); } 
protected void useAbility(hackbotcore.Unit target) { assert (selected) != null; assert (selectedAbility) != null; if (selected.useAbility(selectedAbility, target)) { for (hackbotcore.Unit u : units) <BUGS> if ((u.sectors.size()) == 0) <BUGE> units.remove(u); <BUGS>  <BUGE>  } } 
@java.lang.Override public boolean preHandle(javax.servlet.http.HttpServletRequest req, javax.servlet.http.HttpServletResponse resp, java.lang.Object arg2) throws java.lang.Exception { <BUGS> java.lang.System.out.println("PRE"); <BUGE> javax.servlet.http.HttpServletRequest request = ((javax.servlet.http.HttpServletRequest) (req)); ar.edu.itba.it.paw.UserManager userManager = new ar.edu.itba.it.paw.SessionUserManager(request); if (userManager.existsUser()) { request.setAttribute("user", userManager.getUser()); }else { request.setAttribute("user", null); } <BUGS> return false; <BUGE> } 
private java.util.Collection<org.opendaylight.yangtools.yang.data.api.schema.UnkeyedListEntryNode> reusableSequence(final org.opendaylight.yangtools.yang.data.api.schema.UnkeyedListEntryNode segment) { <BUGS> final com.google.common.base.Optional<org.opendaylight.yangtools.yang.data.api.schema.NormalizedNode<?, ?>> maybeAsSequence = org.opendaylight.yangtools.yang.data.api.schema.NormalizedNodes.findNode(segment, asPathChoice, asPathList, asPathSequence); <BUGE> if (maybeAsSequence.isPresent()) { final org.opendaylight.yangtools.yang.data.api.schema.UnkeyedListNode asList = ((org.opendaylight.yangtools.yang.data.api.schema.UnkeyedListNode) (maybeAsSequence.get())); if ((asList.getSize()) < 255) { return asList.getValue(); } } return null; } 
public static void close() throws java.io.IOException { <BUGS> for (model.User u : services.UserDatabaseInterface.userData) { java.lang.System.out.println(u.getFname()); } <BUGE> java.io.FileWriter in = new java.io.FileWriter(new java.io.File("./src/main/resources/users.csv"), false); for (model.User _user : services.UserDatabaseInterface.userData) { java.lang.String userInfo = (_user.toString()) + "\n"; in.append(userInfo); } in.close(); } 
public void setIdCardInDB(int idCardInDB) { DataBase.DBData.connect = DB.getConnection(); try { statement = DataBase.DBData.connect.createStatement(); <BUGS> statement.executeUpdate((("update listcollection.display_of_collection set lastCard= " + idCardInDB) + " where id=1")); <BUGE> statement.close(); closeResultSet(); DB.closeDBConnection(); } catch (java.sql.SQLException e) { e.printStackTrace(); } } 
public void updateIgnore() { filteredBacklog.clear(); <BUGS> for (com.iskrembilen.quasseldroid.protocol.state.IrcMessage msg : backlog) { msg.setFiltered(com.iskrembilen.quasseldroid.protocol.state.Client.getInstance().getIgnoreListManager().matches(msg)); if (!(isMessageFiltered(msg))) { if ((getMarkerLineMessage()) == (msg.messageId)) isMarkerLineFiltered = false; <BUGE>  <BUGS> filteredBacklog.add(msg); }else if ((getMarkerLineMessage()) == (msg.messageId)) isMarkerLineFiltered = true;   <BUGE> } } 
boolean isAppActive(org.luwrain.core.Application app) { org.luwrain.core.NullCheck.notNull(app, "app"); if ((app == (defaultApp)) && ((activeAppIndex) < 0)) return true; <BUGS> <BUGE>  if ((apps.get(activeAppIndex).app) == app) return true;  return false; } 
public int compare(com.ct.girls.model.Girl arg0, com.ct.girls.model.Girl arg1) { <BUGS> java.lang.Integer W0 = new java.lang.Integer(arg0.getBWH().split(" ")[0].substring(1)); java.lang.Integer W1 = new java.lang.Integer(arg1.getBWH().split(" ")[0].substring(1)); <BUGE> return W0.compareTo(W1); } 
@java.lang.Override public void onSuccess(java.lang.Object response) { java.lang.String currentVolume = parseData(((java.lang.String) (response)), "CurrentVolume"); int iVolume = 0; try { <BUGS> java.lang.Integer.parseInt(currentVolume); <BUGE> } catch (java.lang.RuntimeException ex) { ex.printStackTrace(); } float fVolume = ((float) (iVolume / 100.0)); com.connectsdk.core.Util.postSuccess(listener, fVolume); } 
@java.lang.Override public java.util.Map<java.lang.String, java.lang.String> getProperties() { java.util.Map<java.lang.String, java.lang.String> properties = new java.util.HashMap<>(); <BUGS> properties.put(DolphinPlatformConfiguration.EVENTBUS_TYPE, com.canoo.dolphin.server.event.DistributedEventBusProvider.DISTRIBUTED_EVENTBUS_NAME); <BUGE> properties.put(com.canoo.dolphin.server.event.DistributedEventBusConfigProvider.HAZELCAST_SERVER_NAME, com.canoo.dolphin.server.event.DistributedEventBusConfigProvider.DEFAULT_HAZELCAST_SERVER); properties.put(com.canoo.dolphin.server.event.DistributedEventBusConfigProvider.HAZELCAST_SERVER_PORT, com.canoo.dolphin.server.event.DistributedEventBusConfigProvider.DEFAULT_HAZELCAST_PORT); properties.put(com.canoo.dolphin.server.event.DistributedEventBusConfigProvider.HAZELCAST_GROUP_NAME, com.canoo.dolphin.server.event.DistributedEventBusConfigProvider.DEFAULT_HAZELCAST_GROUP_NAME); <BUGS> return null; <BUGE> } 
public void stopReading() { active = false; try { reader.close(); } catch (java.io.IOException e) { throw new java.lang.IllegalStateException("Error closing input", e); } finally { try { <BUGS> activeExecution.interrupt(); <BUGE> } catch (java.lang.Throwable ex) { throw new java.lang.IllegalStateException("Error stopping input reader thread", ex); } } } 
@java.lang.Override public boolean isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type other) { if (other.isArray()) { if ((baseType.isPrimitive()) && (other.asArrayType().getComponentType().isPrimitive())) { return baseType.equals(other.asArrayType().getComponentType()); } return baseType.isAssignableBy(other.asArrayType().getComponentType()); <BUGS> }else { <BUGE> if (other.isNull()) { return true; } <BUGS> return false; } <BUGE> } 
@java.lang.Override public void mouseMoved(java.awt.event.MouseEvent me) { if (isSelected(me.getX(), me.getY())) { setCursor(java.awt.Cursor.getPredefinedCursor(java.awt.Cursor.HAND_CURSOR)); }else { setCursor(java.awt.Cursor.getPredefinedCursor(java.awt.Cursor.CROSSHAIR_CURSOR)); } <BUGS> isSelected = false; <BUGE> } 
<BUGS> public boolean addNetworkUser(java.lang.String username, java.net.InetAddress IP) { <BUGE> if ((user_ledger.containsKey(username)) || (username == (own_user_name))) { <BUGS> return false; <BUGE> } user_ledger.put(username, IP); filemanager.addUser(username); gui.addUser(username); showState(); <BUGS> return true; <BUGE> } 
public boolean hasFullAccess(org.spongepowered.api.entity.living.player.User user) { me.ryanhamshire.griefprevention.PlayerData playerData = GriefPrevention.instance.dataStore.getPlayerData(this.world, user.getUniqueId()); if ((playerData != null) && (playerData.ignoreClaims)) { return true; } <BUGS> if (playerData.debugClaimPermissions) { return false; } <BUGE> if (user.getUniqueId().equals(this.ownerID)) { <BUGS> <BUGE> return true; } if ((this.parent) != null) { return this.parent.hasFullAccess(user); } return false; } 
public void donateToWin() throws k2so.GameActionException { float bullets = k2so.DefaultRobot.rc.getTeamBullets(); int victoryPts = k2so.DefaultRobot.rc.getTeamVictoryPoints(); <BUGS> int potentialPts = ((int) (bullets)) * (GameConstants.BULLET_EXCHANGE_RATE); <BUGE> if (((GameConstants.VICTORY_POINTS_TO_WIN) - victoryPts) <= potentialPts) { k2so.DefaultRobot.rc.donate(bullets); } } 
private void processMonitoringAfterEvent(final org.aspectj.lang.ProceedingJoinPoint currentJoinPoint, final java.lang.Object returnValue, final java.nio.ByteBuffer buffer) { final java.lang.String className = getJoinPointClassName(currentJoinPoint); <BUGS> final java.lang.Object[] classArgs = getJoinPointArguments(currentJoinPoint); final java.lang.String stringClassArgs = convertJoinpointArgsToString(classArgs); <BUGE> java.lang.String formattedReturnValue = extractJoinPointReturnValue(className, returnValue); if (formattedReturnValue == null) { formattedReturnValue = ""; } buffer.putInt(explorviz.live_trace_processing.main.MonitoringStringRegistry.getIdForString(formattedReturnValue)); } 
<T extends java.lang.Comparable<T>> void doTest(T[] input, T[] expected) { java.util.List<T> list = java.util.Arrays.asList(input); org.apache.pdfbox.util.QuickSort.sort(list); <BUGS> boolean equal = java.util.Arrays.equals(list.toArray(new java.lang.Object[input.length]), input); <BUGE> assertTrue(equal); } 
@java.lang.Override public boolean createConnection() throws java.lang.ClassNotFoundException, java.sql.SQLException { com.hida.model.DefaultSetting defaultEntity = DefaultSettingDao.getDefaultSetting(); if (defaultEntity == null) { defaultEntity = new com.hida.model.DefaultSetting("", "", com.hida.model.TokenType.DIGIT, "ddddd", 5, true, true, true); <BUGS> DefaultSettingDao.save(defaultEntity); <BUGE> } CurrentSetting = defaultEntity; return true; } 
public static void main(java.lang.String[] args) { boolean success = false; try { new com.android.commands.sm.Sm().run(args); success = true; } catch (java.lang.Exception e) { if (e instanceof java.lang.IllegalArgumentException) { com.android.commands.sm.Sm.showUsage(); <BUGS> <BUGE> } android.util.Log.e(com.android.commands.sm.Sm.TAG, "Error", e); java.lang.System.err.println(("Error: " + e)); } java.lang.System.exit((success ? 0 : 1)); } 
<BUGS> public void add(T newElement) { heap.add(newElement); <BUGE> int index = (heap.size()) - 1; <BUGS> while ((index > 1) && ((heap.get(getParent(index)).compareTo(newElement)) > 0)) { <BUGE> heap.set(index, heap.get(getParent(index))); index = getParent(index); <BUGS> heap.set(index, newElement); <BUGE> } <BUGS> <BUGE> } 
@javax.ws.rs.GET @javax.ws.rs.Path(value = "/all") @javax.ws.rs.Produces(value = javax.ws.rs.core.MediaType.APPLICATION_JSON) <BUGS> public javax.ws.rs.core.Response retrieveAllPets() { <BUGE> final java.util.List<pet.shop.api.domain.Pet> petList = petShopApiService.retrieveAllPets(); final java.util.List<pet.shop.api.controller.model.PetControllerModel> petControllerModelList = new java.util.ArrayList<>(); for (final pet.shop.api.domain.Pet pet : petList) { final pet.shop.api.controller.model.PetControllerModel petControllerModel = petControllerMapper.mapTo(pet); petControllerModelList.add(petControllerModel); } <BUGS> return javax.ws.rs.core.Response.ok().entity(petControllerModelList.get(0)).build(); <BUGE> } 
void stop() { <BUGS> <BUGE> reconnectFuture.cancel(false); if ((localDevice) != null) { localDevice.terminate(); localDevice = null; node.removeChild(bacnet.BacnetConn.ACTION_STOP); node.removeChild(bacnet.BacnetConn.ACTION_DISCOVER_DEVICES); node.removeChild(bacnet.BacnetConn.ACTION_ADD_DEVICE); statnode.setValue(new org.dsa.iot.dslink.node.value.Value(bacnet.BacnetConn.NODE_STATUS_STOPPED)); } } 
public java.util.List<java.lang.String> getClusterAttributeList(org.cytoscape.model.CyNetwork network) { <BUGS> <BUGE> java.util.Collection<org.cytoscape.model.CyColumn> columns = network.getDefaultNodeTable().getColumns(); java.util.List<java.lang.String> intList = new java.util.ArrayList<java.lang.String>(); for (org.cytoscape.model.CyColumn column : columns) { if (column.getType().equals(java.lang.Integer.class)) { intList.add(column.getName()); } } return intList; } 
@java.lang.Override public void onBindViewHolder(final org.cnx.android.adapters.LandingListRecyclerViewAdapter.ViewHolder holder, int position) { org.cnx.android.beans.Content book = contentList.get(position); holder.bookTitle.setText(book.getBookTitle()); if (((holder.logo) != null) && ((book.getIcon()) != null)) { <BUGS> holder.logo.setImageResource(org.cnx.android.utils.CNXUtil.getCoverId(book.getIcon(), context)); <BUGE> } } 
public void write(org.eclipse.paho.client.mqttv3.internal.wire.MqttWireMessage message) throws java.io.IOException, org.eclipse.paho.client.mqttv3.MqttException { byte[] bytes = message.getHeader(); byte[] pl = message.getPayload(); <BUGS> out.write(message.getHeader()); out.write(message.getPayload()); <BUGE> } 
@java.lang.Override public void onResponse(retrofit2.Call<java.util.ArrayList<com.blocksolid.okrello.model.TrelloChecklist>> cardCall, retrofit2.Response<java.util.ArrayList<com.blocksolid.okrello.model.TrelloChecklist>> response) { com.blocksolid.okrello.KeyResultsActivity.trelloCard.setChecklists(response.body()); com.blocksolid.okrello.KeyResultsActivity.keyResults = com.blocksolid.okrello.KeyResultsActivity.trelloCard.getKeyResultsCheckitems(); <BUGS> <BUGE> keyResultAdapter.updateData(com.blocksolid.okrello.KeyResultsActivity.keyResults); com.blocksolid.okrello.KeyResultsActivity.keyresProgressBar.setVisibility(View.INVISIBLE); } 
private void saveAndBack() { com.example.vietnguyen.core.utils.MU.hideSofeKeyboard(activity); note.message = getEditText(R.id.edt_fragment_note_detail).getText().toString(); <BUGS> note.date = new java.util.Date(); note.save(); <BUGE> activity.backOneFragment(); } 
@java.lang.Override public void step(neutrality.NeutralityModel model, int step, java.util.Optional<java.lang.Double> substep) { <BUGS> if (step == 0) <BUGE> super.step(model, step, substep); <BUGS>  neutrality.MarketInfo mi = getModel().getMarketInformation((step - 1)); double mktNetInvest = mi.nspNetworkInvestment; makeNetworkInvestment(step, mktNetInvest); if (getModel().policyNSPContentAllowed) { double mktVidInvest = mi.nspVideoInvestment; makeContentInvestment(step, mktVidInvest); <BUGE> }else { <BUGS> makeContentInvestment(step, 0); <BUGE> } } 
<BUGS> public void setLocation(float x, float y, int z) { <BUGE> if ((index) == (-1)) { return ; } org.lwjgl.openal.AL10.alSource3f(store.getSource(index), AL10.AL_POSITION, x, y, z); } 
<BUGS> @org.junit.Before public void init() throws java.io.IOException, java.lang.InterruptedException, java.sql.SQLException { <BUGE> if (!(org.maxgamer.rs.TitanTest.initialized)) { org.maxgamer.rs.TitanTest.initialized = true; org.maxgamer.rs.core.Core.start(); while ((org.maxgamer.rs.core.Core.getServer().getTicks()) <= 0) { <BUGS> java.lang.Thread.sleep(10); <BUGE> } } } 
private static void sortData(final java.util.List<java.util.Map<java.lang.String, java.lang.Object>> dataList, final java.lang.String key) { java.util.Collections.sort(dataList, ( map1, map2) -> { <BUGS> return (java.lang.Double.valueOf(map1.get(key).toString())) <= (java.lang.Double.valueOf(map2.get(key).toString())) ? 1 : -1; <BUGE> }); } 
@java.lang.Override public void onClick(android.view.View view) { <BUGS> if (isFavorite) { <BUGE> mDatabaseReferenceFavs.child(trip.getId()).removeValue(); unfavoriteTrip(viewHolder.ivFavorite); <BUGS> <BUGE> }else { mDatabaseReferenceFavs.child(trip.getId()).setValue(trip); favoriteTrip(viewHolder.ivFavorite); <BUGS> <BUGE> } } 
public com.nanosai.gridops.ion.read.IonReader setSource(com.nanosai.gridops.mem.MemoryBlock sourceMemoryBlock) { this.source = sourceMemoryBlock.memoryAllocator.data; this.index = sourceMemoryBlock.startIndex; this.nextIndex = sourceMemoryBlock.startIndex; this.sourceLength = sourceMemoryBlock.lengthWritten(); this.intoIndexStackIndex = 0; <BUGS> this.scopeEndIndex = this.sourceLength; <BUGE> return this; } 
public void displayLendDetails(org.bbt.kiakoa.model.Lend lend) { if ((lendDetailsFragment) != null) { lendDetailsFragment.setLend(lend); }else { <BUGS> android.content.Intent intent = new android.content.Intent(this, org.bbt.kiakoa.LendDetailsActivity.class); intent.putExtra(LendDetailsActivity.EXTRA_LEND, lend); startActivity(intent); <BUGE> } } 
private int calculateCC(ast.graph.Graph graph) { int offset; offset = graph.getFinalNodes().size(); offset = (offset == 1) ? offset - 1 : offset - 2; <BUGS> <BUGE> return ((graph.edgeCount()) - ((graph.size()) - offset)) + 2; } 
@java.lang.Override public void actionPerformed(java.awt.event.ActionEvent e) { int x = jDialog.getX(); x = x + 10; if (x > (xStart)) { x = xStart; <BUGS> fadeOut.stop(); <BUGE> jDialog.setVisible(false); } jDialog.setLocation(x, y); } 
public void botJailTurn() { if ((getCash()) >= 50) { if ((_jailTurns) >= 3) { _jailTurns = 0; _inJail = false; charge(50); }else _jailTurns += 1;  }else { if ((_jailTurns) >= 3) { autoMortgage(50); <BUGS> if ((getCash()) < 50) return ; else { charge(50); return ; } <BUGE> }else _jailTurns += 1;  } } 
public boolean isCurrentLocationValid() { for (org.lwjgl.util.Point point : currentPiece.getPoints()) { if (((((point.getX()) > (board[0].length)) || ((point.getY()) > (board.length))) || ((point.getX()) < 0)) || ((point.getY()) < 0)) return false;  } <BUGS> <BUGE> } 
public void insertText(java.lang.String txt, com.ibm.util.merge.Bookmark bkm) { if (txt.matches("^\\s*$")) { return ; } <BUGS> this.content.insert(bkm.getStart(), txt); <BUGE> for (com.ibm.util.merge.Bookmark theBookmark : this.bookmarks) { <BUGS> if ((theBookmark.getStart()) >= (bkm.getStart())) { <BUGE> theBookmark.offest(txt.length()); } } return ; } 
@java.lang.Override public void onStart() { super.onStart(); android.util.Log.i(com.ford.emergencyconnect.ResponderCallToActionFragment.FRAGMENT_TAG, "onStart Enter"); android.widget.Button yesResponse = ((android.widget.Button) (rootView.findViewById(R.id.yesResponse))); <BUGS> <BUGE> yesResponse.setOnClickListener(new android.view.View.OnClickListener() { @java.lang.Override public void onClick(android.view.View v) { android.util.Log.i(com.ford.emergencyconnect.ResponderCallToActionFragment.FRAGMENT_TAG, "onClick() - Responder: YES"); callback.onResponderCallToActionFragmentListener(); } }); } 
@java.lang.Override public void setPrimaryItem(android.view.ViewGroup container, int position, java.lang.Object object) { super.setPrimaryItem(container, position, object); if ((((getCurrentFragment()) != object) && (object != null)) && (object instanceof me.ccrama.redditslide.Fragments.CommentPage)) { mCurrentFragment = ((me.ccrama.redditslide.Fragments.CommentPage) (object)); if (!(mCurrentFragment.loaded)) { if (mCurrentFragment.isAdded()) { <BUGS> mCurrentFragment.doAdapter(); <BUGE> } } } } 
private void initializeViews() { titleTextView = ((android.widget.TextView) (findViewById(R.id.main_title_textView_id))); subTitleTextView = ((android.widget.TextView) (findViewById(R.id.main_subTitle_textView_id))); registerButton = ((android.widget.Button) (findViewById(R.id.main_register_button_id))); pollingButton = ((android.widget.Button) (findViewById(R.id.main_polling_button_id))); <BUGS> quickRefButton = ((android.widget.Button) (findViewById(R.id.main_quickRef_button_id))); <BUGE> issuesButton = ((android.widget.Button) (findViewById(R.id.main_issues_button_id))); } 
public void preencheVagas() { boolean[] vagas = setor.vagas_Disponiveis(); int progress = 0; for (int i = 0; i < 16; i++) { <BUGS> ++progress; <BUGE> if (vagas[i]) { <BUGS> <BUGE> paineis[i].setBackground(java.awt.Color.green); }else paineis[i].setBackground(java.awt.Color.red);  } progress = (progress * 100) / 16; progressBar.setValue(progress); } 
@java.lang.Override public boolean onOptionsItemSelected(android.view.MenuItem item) { <BUGS> switch (item.getItemId()) { case R.id.action_settings : android.content.Intent settingsIntent = new android.content.Intent(this, com.stationmillenium.android.activities.SharedPreferencesActivity.class); startActivity(settingsIntent); return true; default : return super.onOptionsItemSelected(item); } <BUGE> } 
private void printDatabase(java.lang.String passphrase) { java.util.ArrayList<java.lang.String> dbString = dbHandler.databaseToString(passphrase); <BUGS> java.lang.String[] arr = ((java.lang.String[]) (dbString.toArray())); <BUGE> accountDisplay.setAdapter(new android.widget.ArrayAdapter<java.lang.String>(this, android.R.layout.simple_list_item_1, arr)); } 
@java.lang.Override public void onClick(android.view.View view) { if (mFlashOn) { runArtificialFlash(); <BUGS> makeToast("Artificial Flashing"); <BUGE> } <BUGS> final android.os.Handler handler = new android.os.Handler(); final java.lang.Runnable r = new java.lang.Runnable() { public void run() { mCamera.takePicture(mShutterCallback, mRawCallback, null, mJPEGCallback); } }; handler.postDelayed(r, 800); <BUGE> } 
<BUGS> private com.oracle.truffle.r.runtime.nodes.RSyntaxNode getArgumentNode(java.lang.Object arg) { <BUGE> if (arg instanceof com.oracle.truffle.r.runtime.data.RPromise) { com.oracle.truffle.r.runtime.data.RPromise p = ((com.oracle.truffle.r.runtime.data.RPromise) (arg)); return p.getRep().asRSyntaxNode(); }else if (!(arg instanceof com.oracle.truffle.r.runtime.data.RMissing)) { return com.oracle.truffle.r.nodes.access.ConstantNode.create(arg); }  return null; } 
public java.lang.String authenticatePersonalCloud(java.lang.String cspCloudName, java.lang.String cloudName, java.lang.String password) { <BUGS> biz.neustar.pc.ui.manager.impl.PersonalCloudManagerImpl.LOGGER.info("In authenticate cloud name {} and csp {}", cspCloudName, cspCloudName); <BUGE> com.sun.jersey.api.representation.Form form = new com.sun.jersey.api.representation.Form(); form.add("password", password); <BUGS> biz.neustar.pcloud.ResponseData responseData = pcRestClient.post(java.text.MessageFormat.format(UIRestPathConstants.PERSONAL_CLOUD_AUTH_API, cspCloudName, cspCloudName), form); <BUGE> return responseData.getBody(); } 
public void generateModels() throws freemarker.template.TemplateException, java.io.IOException { generateCommonFiles(); for (com.codegen.model.ClassDefinition classDefinition : this.getClassDefinitions()) { generatePOJO(classDefinition); generateDTO(classDefinition); generateServiceInterface(classDefinition); generateServiceImpl(classDefinition); generateDAOInterface(classDefinition); generateDAOImpl(classDefinition); generateRestClient(classDefinition); generateServiceTest(classDefinition); } <BUGS> generateSQLScript(); <BUGE> } 
@org.junit.Test public void test2ShapesMirrorHorizontal() { shape.setPosition(100, 200); shape2.setPosition((-100), (-200)); shape.mirrorHorizontal(shape.getGravityCentre().getMiddlePoint(shape2.getGravityCentre())); <BUGS> org.junit.Assert.assertEquals((-100.0), shape.getX(), 1.0E-5); org.junit.Assert.assertEquals(200.0, shape.getY(), 1.0E-5); <BUGE> } 
<BUGS> public void getTextFromActivity(android.view.View view) { <BUGE> java.lang.String textInString = null; if ((editTextInput) != null) { textInString = editTextInput.getText().toString(); } if ((textInString == null) || (textInString.isEmpty())) { doToast(getString(R.string.CheckText4Analyze)); return ; } android.content.Intent intent = new android.content.Intent(this, com.mmdj.textanalyzer.Result_Activity.class); intent.putExtra("textInString", textInString); startActivity(intent); } 
public static void emptyInstance() { crac.utilityModels.TaskSearchLogger.instance.titleColumns = new java.util.ArrayList<java.lang.String>(); crac.utilityModels.TaskSearchLogger.instance.titleRows = new java.util.ArrayList<java.lang.String>(); crac.utilityModels.TaskSearchLogger.instance.values = new java.util.HashMap<java.lang.Integer, java.lang.String>(); <BUGS> crac.utilityModels.TaskSearchLogger.instance.titleColumns.clear(); crac.utilityModels.TaskSearchLogger.instance.titleRows.clear(); crac.utilityModels.TaskSearchLogger.instance.values.clear(); <BUGE> } 
@org.junit.Test public void testUpdate() { <BUGS> gui.TimePanel tp = new gui.TimePanel(new gui.GUI(), new game.Game(), 15, new javax.swing.JLabel()); <BUGE> try { java.lang.Thread.sleep(500); } catch (java.lang.InterruptedException e) { e.printStackTrace(); } org.junit.Assert.assertEquals((((("<html> <b>" + 0) + ":") + 14) + "</b> </html>"), tp.getTimerLabel().getText()); tp.stopTimer(); } 
private void importFile(java.lang.String fileName) throws java.io.IOException { <BUGS> java.io.File f = new java.io.File((((application.Controller.currentProgramFolder) + "/") + fileName)); fileSelecMap.put(fileName, parseFile(f)); <BUGE> if (!(fileSelecMap.containsKey(fileName))) { fileNameLists.add(fileName); fileList.setItems(javafx.collections.FXCollections.observableArrayList(fileNameLists)); } <BUGS> <BUGE> } 
public void startNameActivity(android.view.View view) { android.content.Intent intent = new android.content.Intent(this, io.exis.cards.cards.NameActivity.class); intent.putExtra("screenName", screenName); <BUGS> <BUGE> if ((android.os.Build.VERSION.SDK_INT) >= 21) { <BUGS> startActivityForResult(intent, 1, android.app.ActivityOptions.makeSceneTransitionAnimation(this).toBundle()); <BUGE> overridePendingTransition(R.anim.slide_in_right, R.anim.slide_out_left); <BUGS> }else { startActivityForResult(intent, 1); <BUGE> } } 
public void run(int sleepTime) { while ((!(_programComplete)) && (!(com.laboon.SystemSettings.checkForStop()))) { if (sleepTime > 0) { try { java.lang.Thread.sleep(sleepTime); } catch (java.lang.InterruptedException iex) { } } resetUpdates(); <BUGS> <BUGE> executeOneStep(); <BUGS> _mp.highlightChar(_pa, _x, _y); <BUGE> _mp.setStack(_ps.toString()); _mp.refresh(_updateTa, _updateStack, _updateOutput); } } 
<BUGS> private java.lang.String[] removeEmptyEntries(java.lang.String[] queryParts) { <BUGE> int emptyCount = 0; for (java.lang.String queryPart : queryParts) { if ((queryPart.length()) == 0) emptyCount++;  } java.lang.String[] trimmedArray = new java.lang.String[(queryParts.length) - emptyCount]; int trimIndex = 0; for (java.lang.String queryPart : queryParts) { if ((queryPart.length()) != 0) { trimmedArray[trimIndex] = queryPart; trimIndex++; } } return trimmedArray; } 
public void showDatabase() { if ((preferenceChecker.howToDisplayCategories()) != (com.example.brandon.habitlogger.Preferences.PreferenceChecker.AS_CARDS)) { habitList = habitDatabase.getHabits(); <BUGS> habitAdapter = new com.example.brandon.habitlogger.RecyclerViewAdapters.HabitViewAdapter(habitList, menuItemClickListener, buttonClickListener); <BUGE> if ((habitDisplayMode) == (ONLY_ARCHIVED_HABITS)) com.example.brandon.habitlogger.common.MyCollectionUtils.filter(habitList, Habit.FilterOutNonArchivedHabits); else if ((habitDisplayMode) == (NO_ARCHIVED_HABITS)) com.example.brandon.habitlogger.common.MyCollectionUtils.filter(habitList, Habit.FilterOutArchivedHabits);   java.util.Collections.sort(habitList, Habit.CategoryNameComparator); habitCardContainer.setAdapter(habitAdapter); } } 
public void onDrawerItemClick(android.view.View view) { java.lang.String itemText = ((android.widget.TextView) (view)).getText().toString(); if (itemText.equals(getString(R.string.drawer_item_sign_out))) { progressDialog.show(); accountHandler.signOut(); } <BUGS> if (itemText.equals(getString(R.string.drawer_item_settings))) { } <BUGE> } 
public void startServing() { try { <BUGS> de.volzo.miscreen.Host.getInstance().serve(nsd.hostPort); <BUGE> } catch (java.lang.Exception e) { android.util.Log.e(de.volzo.miscreen.MainActivity.TAG, "serving failed"); android.util.Log.e(de.volzo.miscreen.MainActivity.TAG, e.toString()); } } 
@java.lang.Override public void onClick(android.view.View v) { switch (v.getId()) { case R.id.afegeix : calcul_data(); <BUGS> if (!(trobat)) { android.content.Intent intent = new android.content.Intent(getApplicationContext(), com.example.marlen.ventaentrades_idi.llistaObres.class); startActivity(intent); finish(); } <BUGE> break; case R.id.dataInit : fromDatePickerDialog.show(); break; case R.id.dataFi : toDatePickerDialog.show(); break; } } 
private void setNoBudgetsIndication() { findViewById(R.id.loading_spinner).setVisibility(View.GONE); if ((this.mapOfBudgets.size()) > 0) { <BUGS> <BUGE> findViewById(R.id.explaining_text).setVisibility(View.GONE); }else { findViewById(R.id.crying_logo).setVisibility(View.VISIBLE); ((android.widget.TextView) (findViewById(R.id.explaining_text))).setText(getResources().getString(R.string.no_budgets_message)); } } 
public static boolean isPrefix(java.lang.String name) { <BUGS> return ((((name.isEmpty()) || ((name.charAt(0)) == '_')) || (java.lang.Character.isLetter(name.charAt(0)))) || ((name.charAt(0)) == '?')) || ((name.charAt(0)) == '\\'); <BUGE> } 
public static void changeCurrentPreference(int pref_index, int value) { if ((com.Veiled.Utils.PreferencesManipulation.userPrefs) == null) { <BUGS> com.Veiled.Utils.PreferencesManipulation.userPrefs = new int[]{ 1 , 1 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 }; <BUGE> } com.Veiled.Utils.PreferencesManipulation.userPrefs[pref_index] = value; } 
public void itemStateChanged(java.awt.event.ItemEvent arg0) { if ((chkEnOHiHatA.isSelected()) || (chkEnOHiHatB.isSelected())) { if (!(cBoxPortOHiHat.isEnabled())) cBoxPortOHiHat.setEnabled(true);  }else { cBoxPortOHiHat.removeAll(); cBoxPortOHiHat.addItem(""); cBoxPortOHiHat.setEnabled(false); } <BUGS> updateSerialPorts(3); <BUGE> } 
@java.lang.Override public void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); java.lang.System.out.println("HomeFragment.onCreate"); mPageChangeListener = new com.pratilipi.mobile.android.homescreen.home.HomeFragment.HomePageChangeListener(); java.util.ArrayList<java.lang.String> stringArrayList = new java.util.ArrayList(java.util.Arrays.asList(mActivity.getResources().getStringArray(R.array.loading_quotes_array))); mProgressHandler = new com.pratilipi.mobile.android.widget.AnimatedProgressIndicator(mActivity, stringArrayList); <BUGS> setRetainInstance(true); <BUGE> } 
@java.lang.Override public void robotInit() { robotState = org.usfirst.frc.team4529.robot.RobotState.getInstance(); robotState.start(); robotArm = org.usfirst.frc.team4529.robot.RobotArm.getInstance(); robotShooter = org.usfirst.frc.team4529.robot.RobotShooter.getInstance(); joystick = new edu.wpi.first.wpilibj.Joystick(org.usfirst.frc.team4529.robot.Robot.JOYSTICK_PORT); driveBase = new org.usfirst.frc.team4529.robot.drivebase.OmniWheel(); pausableThreads.add(robotShooter); pausableThreads.add(robotArm); <BUGS> pausableThreads.add(driveBase); <BUGE> } 
public boolean fits(guitarchordmaker.Accord owning) { <BUGS> return ((((this.id) == (Accord.Coms.drawLines12)) || ((this.id) == (Accord.Coms.drawLines6))) || ((this.six) && ((this.row) < ((owning.seitenzahle) - 1)))) || ((!(this.six)) && ((this.row) <= (owning.seitenzahle))); <BUGE> } 
public void onClickShowHideFilters(android.view.View view) { android.widget.LinearLayout button_filter = ((android.widget.LinearLayout) (findViewById(R.id.filters_container))); if ((button_filter.getVisibility()) == (android.view.View.GONE)) button_filter.setVisibility(View.VISIBLE); else { button_filter.setVisibility(View.GONE); <BUGS> android.widget.EditText editText_brand = ((android.widget.EditText) (findViewById(R.id.editText_brand))); <BUGE> editText_brand.clearFocus(); android.widget.EditText editText_client_code = ((android.widget.EditText) (findViewById(R.id.editText_client_code))); editText_client_code.clearFocus(); } } 
private void removeWeakSpecies() { int sum = totalAverageFitness(); <BUGS> for (int s = 1; s < (getSpecies().size()); s++) { <BUGE> com.starflask.JavaNESBrain.evolution.Species specie = getSpecies().get(s); float breed = com.starflask.JavaNESBrain.utils.FastMath.floor((((specie.averageFitness) / sum) * (Population))); if (breed < 1) { species.remove(specie); } } } 
@org.junit.Test public void openHelpWindow() { <BUGS> commandBox.clickOnTextField(); assertHelpWindowOpen(mainMenu.openHelpWindowUsingAccelerator()); resultDisplay.clickOnTextArea(); assertHelpWindowOpen(mainMenu.openHelpWindowUsingAccelerator()); taskListPanel.clickOnListView(); assertHelpWindowOpen(mainMenu.openHelpWindowUsingAccelerator()); browserPanel.clickOnWebView(); assertHelpWindowNotOpen(mainMenu.openHelpWindowUsingAccelerator()); assertHelpWindowOpen(mainMenu.openHelpWindowUsingMenu()); assertHelpWindowOpen(commandBox.runHelpCommand()); <BUGE> } 
protected void checkAddIncludePath() { com.jetbrains.php.config.PhpProjectConfigurationFacade facade = com.jetbrains.php.config.PhpProjectConfigurationFacade.getInstance(this.project); java.util.List<java.lang.String> includePaths = facade.getIncludePath(); java.lang.String completionIncludePath = completions.getIncludePath(); if (includePaths.contains(completionIncludePath)) { <BUGS> return ; <BUGE> } includePaths.add(completionIncludePath); facade.setIncludePath(includePaths); } 
public boolean isAltACTGN() { for (com.bina.varsim.types.variant.alt.Alt a : alts) { <BUGS> if (a.getSeq().isSeq()) { <BUGE> if (!(a.getSeq().toString().matches("[ACTGN]*"))) { return false; } } } return true; } 
@java.lang.Override public void onItemClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) { if (position != 0) { searchView.setText(hotWords.get(position), true); <BUGS> removeCover(); <BUGE> layoutSearch.performClick(); }else { searchView.setText(""); } } 
@java.lang.Override <BUGS> public void onSetSwipeBackground(com.h6ah4i.android.example.advrecyclerview.demo_ds_selection.MyDraggableSwipeableSelectableItemAdapter.MyViewHolder holder, int type) { <BUGE> int bgRes = 0; switch (type) { case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_NEUTRAL_BACKGROUND : bgRes = R.drawable.bg_swipe_item_neutral; break; case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_LEFT_BACKGROUND : bgRes = R.drawable.bg_swipe_item_left; break; case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_RIGHT_BACKGROUND : bgRes = R.drawable.bg_swipe_item_right; break; } holder.itemView.setBackgroundResource(bgRes); } 
public void openImageSelector(android.view.View view) { android.content.Intent intent; <BUGS> android.util.Log.e(pl.lukaszpelczar.p10_udacity_inventory.DetailActivity.LOG_TAG, "While is set and the ifs are worked through."); <BUGE> if ((Build.VERSION.SDK_INT) < 19) { intent = new android.content.Intent(android.content.Intent.ACTION_GET_CONTENT); }else { intent = new android.content.Intent(android.content.Intent.ACTION_OPEN_DOCUMENT); intent.addCategory(Intent.CATEGORY_OPENABLE); } <BUGS> android.util.Log.e(pl.lukaszpelczar.p10_udacity_inventory.DetailActivity.LOG_TAG, "Check write to external permissions"); <BUGE> intent.setType("image/*"); startActivityForResult(android.content.Intent.createChooser(intent, "Select Picture"), pl.lukaszpelczar.p10_udacity_inventory.DetailActivity.PICK_IMAGE_REQUEST); } 
static void add(java.lang.String list, java.lang.String back, java.lang.String url) { <BUGS> java.lang.System.out.println(clientside.JukePiCmd.server.addToList(url, (list.equals("wl") ? true : false), (back.equals("b") ? true : false))); <BUGE> } 
@java.lang.Override public java.lang.String getText(mage.abilities.Mode mode) { if (((staticText) != null) && (!(staticText.isEmpty()))) { return staticText; } <BUGS> if ((targetName.length()) > 0) { <BUGE> return (targetName) + " doesn't untap during its controller's next untap step"; }else { return ("Target " + (mode.getTargets().get(0).getTargetName())) + " doesn't untap during its controller's next untap step"; } } 
public void factoryReset() { setupConfig = new dcp.logic.model.config.SetupConfig(appConfig.getDefaultSetupConfig()); dcp.logic.factory.PackFactory.clear(); <BUGS> packs.clear(); <BUGE> dcp.logic.factory.GroupFactory.clear(); <BUGS> groups.clear(); <BUGE> tabsInit(); dcp.config.io.IOFactory.setSaveFile(""); } 
@java.lang.Override public synchronized void run() { rootDir = new java.io.File(t2_01_zadaca_3.T2_01_zadaca_3.rootDirectory); while (running) { active = true; <BUGS> active = false; <BUGE> try { java.lang.Thread.sleep(((secondsNum) * 1000)); } catch (java.lang.InterruptedException ex) { java.lang.Thread.currentThread().interrupt(); <BUGS> <BUGE> } } } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); mInputEdit = ((android.widget.EditText) (findViewById(R.id.command_input_edit))); mResultBoard = ((android.widget.TextView) (findViewById(R.id.result_board))); mResultBoard.setMovementMethod(new android.text.method.ScrollingMovementMethod()); findViewById(R.id.run_command).setOnClickListener(new android.view.View.OnClickListener() { @java.lang.Override public void onClick(android.view.View v) { runCommand(); } }); <BUGS> cn.dxjia.ffmpeg.library.FFmpegNativeHelper.init(); <BUGE> } 
private void updateGraph(int phase, java.time.LocalDateTime phasetime) { <BUGS> (this.phaseCounter)++; <BUGE> int min = phasetime.getMinute(); int sec = phasetime.getSecond(); double timer = min + (sec / 60.0); this.phases[(phase - 1)].getData().add(new javafx.scene.chart.XYChart.Data<>(((double) (this.phaseCounter)), timer)); <BUGS> <BUGE> } 
public int flip(java.lang.String imageId, boolean horizontal) { com.google.appengine.api.blobstore.BlobKey key = new com.google.appengine.api.blobstore.BlobKey("xx"); <BUGS> com.gruppe4b.edivator.backend.service.Image resizeImage = com.gruppe4b.edivator.backend.service.ImagesServiceFactory.makeImageFromBlob(key); com.gruppe4b.edivator.backend.service.Transform transform; <BUGE> if (horizontal == true) { transform = com.gruppe4b.edivator.backend.service.ImagesServiceFactory.makeHorizontalFlip(); }else if (horizontal == false) { transform = com.gruppe4b.edivator.backend.service.ImagesServiceFactory.makeVerticalFlip(); }  com.gruppe4b.edivator.backend.service.Image flippedImage = imagesService.applyTransform(transform, flippingImage); int newId = 0; return newId; } 
public static void generateDataForCourse(java.lang.String courseName) { <BUGS> long numOfInstr = java.lang.Math.round(((teammates.client.scripts.DataGenerator.random.nextInt((((teammates.client.scripts.DataGenerator.MAX_NUM_OF_INSTRUCTOR_PER_COURSES) - (teammates.client.scripts.DataGenerator.MIN_NUM_OF_INSTRUCTOR_PER_COURSES)) + 1))) + (teammates.client.scripts.DataGenerator.MIN_NUM_OF_INSTRUCTOR_PER_COURSES))); <BUGE> for (int j = 0; j < numOfInstr; j++) { java.lang.String instrName = (("Instr" + j) + "_of_") + courseName; teammates.client.scripts.DataGenerator.instructors.put(instrName, courseName); } teammates.client.scripts.DataGenerator.generateStudentsDataForCourse(courseName); } 
public void removeUserSession(java.lang.String sUserId, java.lang.String sSession) { <BUGS> for (int i = 0; i < (nl.ru.crpstudio.CrpUtil.userCache.size()); i++) { nl.ru.crpstudio.UserSession oThis = nl.ru.crpstudio.CrpUtil.userCache.get(i); if ((oThis.userId.equals(sUserId)) && (oThis.sessionId.equals(sSession))) { oThis.userOkay = false; oThis.sessionId = ""; return ; <BUGE> } } } 
@com.facebook.react.bridge.ReactMethod public void getFocalLength(com.facebook.react.bridge.ReadableMap options, final com.facebook.react.bridge.Promise promise) { android.hardware.Camera camera = com.lwansbrough.RCTCamera.RCTCamera.getInstance().acquireCameraInstance(options.getInt("type")); if (null == camera) { promise.reject("No camera found."); return ; } <BUGS> promise.resolve(com.lwansbrough.RCTCamera.RCTCamera.getInstance().focusCenter(options.getInt("type"))); <BUGE> } 
<BUGS> private boolean matchesTransaction(net.nikr.eve.jeveasset.gui.tabs.transaction.MyTransaction transaction, boolean add) { return (transaction != null) && (matches(add, transaction.getTypeID(), transaction.getCharacterID(), null, null, transaction.getLocation(), null, null, null, transaction, null)); <BUGE> } 
@org.junit.Test public void testProcessMov() throws net.torocraft.minecoprocessors.util.ParseException { net.torocraft.minecoprocessors.processor.Processor processor = net.torocraft.minecoprocessors.processor.ProcessorTest.setupTest(0, 30, 0, 0, "mov a, b"); processor.processMov(); <BUGS> assertRegisters(processor, 30, 30, 0, 0); <BUGE> processor = net.torocraft.minecoprocessors.processor.ProcessorTest.setupTest(0, 30, 0, 0, "mov a, 51"); processor.processMov(); <BUGS> assertRegisters(processor, 51, 30, 0, 0); <BUGE> } 
private static java.util.List<java.lang.Integer> generate(int n) { java.util.List<java.lang.Integer> factors = new java.util.ArrayList<>(); if (n == 1) { return factors; } <BUGS> for (int i = 2; i <= (n / 2); i++) { <BUGE> if ((n % i) == 0) { factors.add(i); <BUGS> <BUGE> } } if (factors.isEmpty()) { factors.add(n); } return factors; } 
private boolean isKeyWords(char ch) { if (((ch == '<') || (ch == '>')) || (ch == '?')) { return true; }else if (ch == '=') { return ((peekChar()) == '"') || ((peekChar()) == '\''); <BUGS> }else if (ch == '/') { return (peekChar()) == '>'; }else { return false; }  <BUGE>  } 
public boolean setInteractorHovered(org.reactome.web.diagram.data.interactors.model.DiagramInteractor hovered) { if ((mouseDown) != null) return false;  <BUGS> if (hovered == null) { <BUGE> hoveredInteractor = null; <BUGS> }else if (hovered instanceof org.reactome.web.diagram.data.interactors.model.InteractorEntity) { hoveredInteractor = ((org.reactome.web.diagram.data.interactors.model.InteractorEntity) (hovered)); }  <BUGE> return true; } 
java.lang.Long performOperations(Tree<java.lang.Integer> tree, OperationType operation) { if (operation == null) { <BUGS> performMixedOperations(tree); <BUGE> }else if (operation.equals(OperationType.INSERT)) { return performInserts(tree); }else if (operation.equals(OperationType.SEARCH)) { return performSearches(tree); }else if (operation.equals(OperationType.DELETE)) { return performDeletes(tree); }    java.lang.System.out.println("An error occurred."); return 0L; } 
@java.lang.Override public void onError(java.lang.Throwable throwable) { com.orhanobut.logger.Logger.e(("There was a problem loading bus on line " + throwable)); throwable.printStackTrace(); vista.showLoading(false); if (throwable instanceof com.lowwor.realtimebus.domain.NetworkInteractor.NetworkUnavailableException) { vista.showOffline(true); <BUGS> }else if (throwable instanceof com.lowwor.realtimebus.domain.NoBusException) { vista.showOffline(false); vista.showError(com.lowwor.realtimebus.ui.track.ERROR_NO_BUS); }else { vista.showOffline(false); }  <BUGE> } 
protected static com.orientechnologies.orient.object.enhancement.OObjectEntitySerializer.OObjectEntitySerializedSchema getCurrentSerializedSchema() { <BUGS> if (!(ODatabaseRecordThreadLocal.INSTANCE.isDefined())) return null;  <BUGE> com.orientechnologies.orient.core.storage.OStorage storage = ODatabaseRecordThreadLocal.INSTANCE.get().getStorage(); com.orientechnologies.orient.object.enhancement.OObjectEntitySerializer.OObjectEntitySerializedSchema serializedShchema = storage.getResource(com.orientechnologies.orient.object.enhancement.OObjectEntitySerializer.SIMPLE_NAME, new java.util.concurrent.Callable<com.orientechnologies.orient.object.enhancement.OObjectEntitySerializer.OObjectEntitySerializedSchema>() { @java.lang.Override public com.orientechnologies.orient.object.enhancement.OObjectEntitySerializer.OObjectEntitySerializedSchema call() throws java.lang.Exception { return new com.orientechnologies.orient.object.enhancement.OObjectEntitySerializer.OObjectEntitySerializedSchema(); } }); return serializedShchema; } 
public void setVariables(java.util.Map<java.lang.Integer, java.lang.Object> data) { <BUGS> for (java.util.Map.Entry<java.lang.Integer, java.lang.Object> entry : data.entrySet()) { binding.setVariable(entry.getKey(), entry.getValue()); <BUGE> } <BUGS> binding.executePendingBindings(); <BUGE> } 
<BUGS> <BUGE> public void actionPerformed(java.awt.event.ActionEvent evt) { <BUGS> VASL.build.module.OBA.Module mod = new VASL.build.module.OBA.Module(this); VASL.build.module.OBA.CreateModule c = new VASL.build.module.OBA.CreateModule(this, this.getModuleCount(), mod.getState()); <BUGE> c.execute(); VASSAL.build.GameModule.getGameModule().sendAndLog(c); } 
public void remove(T po) { com.easy.player.database.SQLiteHelperOrm db = new com.easy.player.database.SQLiteHelperOrm(); com.j256.ormlite.dao.Dao dao = null; try { dao = db.getDao(po.getClass()); dao.delete(po); } catch (java.sql.SQLException e) { e.printStackTrace(); } finally { if (dao != null) { db.close(); <BUGS> dao = null; <BUGE> } } } 
@java.lang.Override public boolean onError(io.vov.vitamio.MediaPlayer mp, int what, int extra) { android.util.Log.e(com.xugaoxiang.live_vtm.activity.MainActivity.TAG, (((("播放出错！" + "what:") + what) + ",extra:") + extra)); android.widget.Toast.makeText(this, ((("播放出错！what:" + what) + ",extra:") + extra), Toast.LENGTH_LONG).show(); <BUGS> finish(); <BUGE> return false; } 
@java.lang.Override public void set(java.util.Map<java.lang.String, wrapper.datastructures.DataStructure> structs, java.util.List<wrapper.Operation> ops) { structs.values().forEach(DataStructure::clear); step = new application.model.Step(new java.util.HashMap<java.lang.String, wrapper.datastructures.DataStructure>(structs)); <BUGS> <BUGE> operations.addAll(ops); index = 0; } 
public org.structr.core.GraphObject getEntity() throws org.structr.common.error.FrameworkException { final org.structr.core.GraphObject entity = idResource.getEntity(); if (entity != null) { java.lang.String type = org.structr.schema.SchemaHelper.normalizeEntityName(typeResource.getRawType()); <BUGS> java.lang.Class parentClass = org.structr.schema.SchemaHelper.getEntityClassForRawType(type); if (org.structr.core.graph.search.SearchCommand.getAllSubtypesAsStringSet(parentClass.getSimpleName()).contains(type)) { <BUGE> return entity; } } throw new org.structr.rest.exception.NotFoundException(); } 
public static void startFirebasePhoneAuth(android.content.Context context, xyz.belvi.baseauth_firebase.callbacks.FirebaseAuthListener authListener, @android.support.annotation.StyleRes int styleRes) { xyz.belvi.baseauth_firebase.auth.AuthHandler.init(authListener); <BUGS> context.startActivity(new android.content.Intent(context, xyz.belvi.baseauth_firebase.auth.FireAuthActivity.class).putExtra(xyz.belvi.baseauth_firebase.auth.STYLE_KEY, styleRes).putExtra(xyz.belvi.baseauth_firebase.auth.CODE_LENGTH, FirebaseAuthListener.AUTH_CODE_LENGTH).putExtra(xyz.belvi.baseauth_firebase.auth.AUTH_MODE_KEY, AUTH_MODE.FIRE_BASE)); <BUGE> } 
public void removeItem(com.brothers.travelplanner.activities.priceplan.cart.CartDataModel item) { for (int index = 0; index < (cartDataModelList.size()); index++) { <BUGS> if ((cartDataModelList.get(index).index) == (item.index)) { <BUGE> cartDataModelList.remove(index); } } notifyDataSetChanged(); } 
public java.util.List<trackerApplication.entity.Vehicle> getVehiclesByUsername(java.lang.String username) { java.util.List<trackerApplication.entity.Vehicle> vehicles = new java.util.ArrayList<>(); org.hibernate.Session session = trackerApplication.persistence.SessionFactoryProvider.getSessionFactory().openSession(); <BUGS> vehicles = session.createCriteria(trackerApplication.entity.Vehicle.class, username).list(); <BUGE> logger.info(("Username: " + username)); logger.info(("Vehicles found: " + (vehicles.size()))); return vehicles; } 
public static void main(java.lang.String[] args) throws java.lang.Exception { try { <BUGS> org.neo4j.wrapper.LoggingService.initLogger(); <BUGE> } catch (java.lang.Exception e) { org.neo4j.wrapper.NeoServiceWrapper.LOGGER.log(java.util.logging.Level.SEVERE, e.toString(), e); } if ((args.length) == 1) { org.neo4j.wrapper.NeoServiceWrapper.launchAsService(args[0]); }else { org.neo4j.wrapper.NeoServiceWrapper.launchAsConsoleApp(); } } 
private boolean updateVisibilityCheck(boolean visible, com.android.internal.util.cm.LockscreenShortcutsHelper.Shortcuts shortcut) { boolean customTarget = mShortcutHelper.isTargetCustom(shortcut); if (customTarget) { boolean isEmpty = mShortcutHelper.isTargetEmpty(shortcut); <BUGS> if (visible && isEmpty) { <BUGE> visible = false; }else { visible = true; } } return visible; } 
@org.greenrobot.eventbus.Subscribe(threadMode = org.greenrobot.eventbus.ThreadMode.MAIN) public void onReceiveStateInMain(com.tan.musicplayer.common.PlayerEvent.StateEvent event) { mIsBusy = false; android.util.Log.i(com.tan.musicplayer.base.BasePlayerAcitvity.TAG, "onReceiveStateInMain: "); if ((event.songs) != null) { mSongs = event.songs; <BUGS> onSetSongs(); <BUGE> mCurrentTime = event.time; mCurrentSongIndex = event.index; mIsPlaying = event.isPlaying; mDuration = mSongs.get(mCurrentSongIndex).getFileDuration(); <BUGS> <BUGE> onReceiveServiceStateSuccess(false); mIsServiceEmpty = false; }else { mIsServiceEmpty = true; onReceiveServiceStateSuccess(true); } } 
@org.testng.annotations.Test(description = "Exception when retrieving documentation summary given the id", expectedExceptions = org.wso2.carbon.apimgt.core.exception.APIMgtDAOException.class) public void testGetDocumentationSummaryException() throws org.wso2.carbon.apimgt.core.exception.APIManagementException { org.wso2.carbon.apimgt.core.dao.ApiDAO apiDAO = org.mockito.Mockito.mock(org.wso2.carbon.apimgt.core.dao.ApiDAO.class); <BUGS> org.wso2.carbon.apimgt.core.impl.AbstractAPIManager apiStore = new org.wso2.carbon.apimgt.core.impl.APIStoreImpl(org.wso2.carbon.apimgt.core.impl.AbstractAPIManagerTestCase.USER_NAME, apiDAO, null, null, null, null, null); <BUGE> org.mockito.Mockito.when(apiDAO.getDocumentInfo(org.wso2.carbon.apimgt.core.impl.AbstractAPIManagerTestCase.UUID)).thenThrow(new org.wso2.carbon.apimgt.core.exception.APIMgtDAOException("Error occurred while retrieving documents")); apiStore.getDocumentationSummary(org.wso2.carbon.apimgt.core.impl.AbstractAPIManagerTestCase.UUID); } 
@java.lang.Override public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) { <BUGS> if (position > 0) { if ((mTabWidth) == 0) { mTabWidth = (mViewPager.getWidth()) / (mViewPager.getAdapter().getCount()); } float translationX = (mTabWidth) * (positionOffset + position); setTranslationX(translationX); <BUGE> } <BUGS> <BUGE> } 
public void setFullscreen() { setExtendedState(java.awt.Frame.MAXIMIZED_BOTH); java.awt.Dimension screensize = java.awt.Toolkit.getDefaultToolkit().getScreenSize(); xScaling = ((float) (screensize.width)) / 800.0F; yScaling = ((float) (screensize.height)) / 600.0F; canvas.setScaleX(xScaling); canvas.setScaleY(yScaling); <BUGS> ml.setScale(xScaling, xScaling); <BUGE> fullscreen = true; } 
private void handleForeignKeyInfo(org.talend.mdm.commmon.metadata.MetadataRepository repository, org.talend.mdm.commmon.metadata.annotation.XmlSchemaAnnotationProcessorState state, org.w3c.dom.Element appInfo) { java.lang.String path = appInfo.getTextContent(); <BUGS> org.talend.mdm.commmon.metadata.FieldMetadata fieldMetadata = org.talend.mdm.commmon.metadata.annotation.ForeignKeyProcessor.getFieldMetadata(repository, ((org.talend.mdm.commmon.metadata.ComplexTypeMetadata) (state.getReferencedType())), appInfo, path); <BUGE> state.setForeignKeyInfo(fieldMetadata); } 
public void backButtonClick() { if ((currentPlayer) > 0) { gameFrame.getGame().setCurrentPlayer(((currentPlayer) - 1)); new trivia.gui.PlayerJoinPanel(gameFrame); }else { <BUGS> <BUGE> gameFrame.getGame().reset(); new trivia.gui.MainMenuPanel(gameFrame); } } 
public static java.lang.Boolean parseBoolean(final java.lang.Object o) { if (o instanceof java.lang.String) { if (o.equals("true")) { return java.lang.Boolean.TRUE; }else if (o.equals("false")) { return java.lang.Boolean.FALSE; }  }else if (o instanceof java.lang.Boolean) { return ((java.lang.Boolean) (o)); }  <BUGS> return java.lang.Boolean.FALSE; <BUGE> } 
public static com.flatworks.games.flatcraft.world.World simulateWorld(com.flatworks.games.flatcraft.world.World world) { com.flatworks.games.flatcraft.world.WorldGenerator.state("Simulating World..."); for (int i = 0; i < 200; i++) { <BUGS> world.runTick(); <BUGE> com.flatworks.games.flatcraft.world.WorldGenerator.progress((0.5F + (((float) (((double) (i)) / ((double) (200)))) * 0.5F))); } return world; } 
<BUGS> public static void setAutoExposureLock(boolean lock) { <BUGE> if (((com.almalence.opencam.cameracontroller.Camera2Controller.previewRequestBuilder) != null) && ((com.almalence.opencam.cameracontroller.Camera2Controller.getInstance().camDevice) != null)) { com.almalence.opencam.cameracontroller.Camera2Controller.previewRequestBuilder.set(CaptureRequest.CONTROL_AE_LOCK, lock); com.almalence.opencam.cameracontroller.Camera2Controller.setRepeatingRequest(); android.preference.PreferenceManager.getDefaultSharedPreferences(com.almalence.opencam.ApplicationScreen.getMainContext()).edit().putBoolean(ApplicationScreen.sAELockPref, lock).commit(); <BUGS> <BUGE> } <BUGS> <BUGE> } 
@java.lang.Override public boolean apply(lu.zhe.mtgslackbot.card.Card card) { if ((comparison) == null) { return false; } java.lang.Integer intValue = lu.zhe.mtgslackbot.parsing.Parsing.PROPERTY_FUNCS.get(property).apply(card); <BUGS> return (intValue != null) && (intValue >= (comparison)); <BUGE> } 
@java.lang.Override public void writeTo(org.elasticsearch.common.io.stream.StreamOutput out) throws java.io.IOException { super.writeTo(out); int numJobs = toKill.size(); out.writeVInt(numJobs); <BUGS> for (int i = 0; i < numJobs; i++) { java.util.UUID job = toKill.get(i); <BUGE> out.writeLong(job.getMostSignificantBits()); out.writeLong(job.getLeastSignificantBits()); } } 
private void dispatchTakePictureFromGallery() { android.content.Intent getIntent = new android.content.Intent(android.content.Intent.ACTION_GET_CONTENT); getIntent.setType("image/*"); android.content.Intent pickIntent = new android.content.Intent(android.content.Intent.ACTION_PICK, android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI); pickIntent.setType("image/*"); <BUGS> android.content.Intent chooserIntent = android.content.Intent.createChooser(getIntent, "Select Image"); <BUGE> chooserIntent.putExtra(Intent.EXTRA_INITIAL_INTENTS, new android.content.Intent[]{ pickIntent }); startActivityForResult(chooserIntent, nl.hanze.myhealth.PhotoIntentActivity.PICK_IMAGE); } 
private void loadImages() { javax.swing.ImageIcon iid = new javax.swing.ImageIcon("dot.png"); ball = iid.getImage(); javax.swing.ImageIcon iia = new javax.swing.ImageIcon("apple.png"); apple = iia.getImage(); <BUGS> javax.swing.ImageIcon iia = new javax.swing.ImageIcon("snakehead.png"); <BUGE> head = iih.getImage(); } 
public void createContent(org.eclipse.swt.widgets.Composite parent) { createImages(parent.getDisplay()); parent.setLayout(com.eclipsesource.example.ece2011.ui.admin.AdminUI.createMainLayout()); org.eclipse.swt.widgets.Control upperPart = createUpperPart(parent); upperPart.setLayoutData(new org.eclipse.swt.layout.GridData(org.eclipse.swt.SWT.FILL, org.eclipse.swt.SWT.TOP, true, false)); org.eclipse.swt.widgets.Control lowerPart = createLowerPart(parent); <BUGS> lowerPart.setLayoutData(new org.eclipse.swt.layout.GridData(org.eclipse.swt.SWT.FILL, org.eclipse.swt.SWT.TOP, true, false)); <BUGE> changeTracker = new com.eclipsesource.example.ece2011.ui.admin.AdminUI.UiChangeTracker(); changeTracker.start(); } 
public boolean get(long i) { int entry = ((int) (i / (edu.umn.cs.spatialHadoop.util.BitArray.BitsPerEntry))); int offset = ((int) (i % (edu.umn.cs.spatialHadoop.util.BitArray.BitsPerEntry))); <BUGS> return ((entries[entry]) & (1L << offset)) == 1; <BUGE> } 
protected com.tcdi.zombodb.query_parser.rewriters.QueryBuilder build(com.tcdi.zombodb.query_parser.rewriters.ASTExpansion node) { com.tcdi.zombodb.query_parser.rewriters.QueryBuilder expansionBuilder = build(node.getQuery()); com.tcdi.zombodb.query_parser.rewriters.QueryParserNode filterQuery = node.getFilterQuery(); if (filterQuery != null) { com.tcdi.zombodb.query_parser.rewriters.BoolQueryBuilder bqb = boolQuery(); bqb.must(expansionBuilder); <BUGS> bqb.mustNot(build(filterQuery)); <BUGE> expansionBuilder = applyVisibility(bqb, node.getIndexLink().getIndexName()); } return expansionBuilder; } 
@java.lang.Override protected void onPause() { android.support.v4.content.LocalBroadcastManager.getInstance(this).unregisterReceiver(mAudioReceiver); if (((mAudioController) != null) && (mAudioController.isAudioPlaying())) { startService(com.bandonleon.audioservice.AudioService.getStartIdleIntent(this)); mAudioController.startForegroundService(com.bandonleon.audioservice.MainActivity.AUDIO_TRACK_TITLE); <BUGS> <BUGE> } super.onPause(); } 
@org.springframework.web.bind.annotation.RequestMapping(path = "/initiative/{initiativeId}/model/section/{sectionId}", method = org.springframework.web.bind.annotation.RequestMethod.GET) public org.collectiveone.common.dto.GetResult<org.collectiveone.modules.model.dto.ModelSectionDto> getSection(@org.springframework.web.bind.annotation.PathVariable(value = "initiativeId") java.lang.String initiativeIdStr, @org.springframework.web.bind.annotation.PathVariable(value = "sectionId") java.lang.String sectionIdStr, @org.springframework.web.bind.annotation.RequestParam(defaultValue = "1") java.lang.Integer level) { java.util.UUID initiativeId = java.util.UUID.fromString(initiativeIdStr); if (!(initiativeService.canAccess(initiativeId, getLoggedUserId()))) { return new org.collectiveone.common.dto.GetResult<org.collectiveone.modules.model.dto.ModelSectionDto>("error", "access denied", null); } <BUGS> return modelService.getSection(java.util.UUID.fromString(sectionIdStr), getLoggedUser().getC1Id(), level); <BUGE> } 
@java.lang.Override public void run() { <BUGS> <BUGE> getActivity().runOnUiThread(new java.lang.Runnable() { @java.lang.Override public void run() { int i = bnp.getProgress(); if (i < count) { bnp.incrementProgressBy(1); } } }); } 
private void cloneOriginRepository() throws java.io.IOException, org.eclipse.jgit.api.errors.GitAPIException, org.eclipse.jgit.api.errors.InvalidRemoteException, org.eclipse.jgit.api.errors.TransportException { <BUGS> gitRepo = org.eclipse.jgit.api.Git.cloneRepository().setURI(getOriginUrl()).setDirectory(java.nio.file.Files.createTempDirectory("TestGitRepo").toFile()).call(); <BUGE> testTempRepo = gitRepo.getRepository().getDirectory(); } 
private void lineLengthCalculator(java.lang.String currentLine) { (totalLines)++; <BUGS> <BUGE> java.lang.String[] str1 = currentLine.replaceAll("\\s+", " ").replaceAll("\\W", "").split(" "); for (java.lang.String s : str1) { lineLengthList.add(s.length()); totalCharacters += s.length(); } } 
public static org.mifosplatform.infrastructure.scheduledemail.domain.EmailMessage pendingEmail(final java.lang.Long externalId, final org.mifosplatform.portfolio.group.domain.Group group, final org.mifosplatform.portfolio.client.domain.Client client, final org.mifosplatform.organisation.staff.domain.Staff staff, final java.lang.String emailSubject, final java.lang.String message, final java.lang.String sourceAddress, final java.lang.String emailAddress, final java.lang.String campaignName) { <BUGS> return new org.mifosplatform.infrastructure.scheduledemail.domain.EmailMessage(externalId, group, client, staff, EmailMessageStatusType.PENDING, message, sourceAddress, emailSubject, emailAddress, campaignName); <BUGE> } 
public ulm.university.news.controller.Ballot getBallot(java.lang.String accessToken, int groupId, int ballotId, boolean withSubresources) throws ulm.university.news.util.exceptions.ServerException { ulm.university.news.controller.Ballot ballot; ulm.university.news.controller.User requestor = verifyUserAccess(accessToken); ulm.university.news.controller.GroupController.logger.debug(("The requestor, i.e. the user with id {}, requests the ballot with the id {} from the group with" + " the id {}."), requestor.getId(), ballotId, groupId); <BUGS> <BUGE> verifyParticipationInGroupViaDB(groupId, requestor.getId()); <BUGS> verifyGroupExistenceViaDB(groupId); <BUGE> ballot = getBallot(groupId, ballotId, withSubresources); return ballot; } 
public static void main(java.lang.String[] args) { <BUGS> if ((args.length()) < 2) { <BUGE> java.lang.System.out.println("Usage: java MusicTransposer music.xml key"); } MusicFile music = new MusicFile(args[0]); muaic.transposeTo(KEY.getKeyByNote(NOTE.getNoteByNote(args[1].charAt(0)))); } 
private void initUserFields() { java.util.List<java.lang.String> userData = mDataManager.getPreferencesManager().loadUserProfileData(); <BUGS> for (int i = 0; i < ((userData.size()) - 1); i++) { <BUGE> mUserInfoViews.get(i).setText(userData.get(i)); } mNavTxtEmailView.setText(userData.get(1)); mNavTxtNameView.setText(userData.get(((userData.size()) - 1))); } 
<BUGS> public void initialize() { <BUGE> if ((mBluetoothAdapter) == null) { final android.bluetooth.BluetoothManager bluetoothManager = ((android.bluetooth.BluetoothManager) (com.supsi.alessandro.pollutionproblemclient.PollutionApplication.getAppContext().getSystemService(Context.BLUETOOTH_SERVICE))); mBluetoothAdapter = bluetoothManager.getAdapter(); }else { android.util.Log.w(com.supsi.alessandro.pollutionproblemclient.ble.BleManager.TAG, "initialize() ---> Bluetooth adapter is already initialized"); } } 
@java.lang.Override public int compare(main.java.addressBook.Person lhs, main.java.addressBook.Person rhs) { <BUGS> if (((lhs.getFirstName()) != null) && ((rhs.getFirstName()) != null)) { <BUGE> return lhs.getLastName().concat(lhs.getFirstName()).compareTo(rhs.getLastName().concat(rhs.getFirstName())); }else { return lhs.getLastName().compareTo(rhs.getLastName()); } } 
public void run(gov.sandia.n2a.backend.internal.Euler simulator) { <BUGS> java.lang.System.out.println(("EventSpikeMultiLatch " + (t))); <BUGE> setFlag(); for (gov.sandia.n2a.language.type.Instance i : targets) simulator.integrate(i);  for (gov.sandia.n2a.language.type.Instance i : targets) i.update(simulator);  for (gov.sandia.n2a.language.type.Instance i : targets) if (!(i.finish(simulator))) i.dequeue();   } 
public java.lang.String toString(final boolean reducedSize) { if ((number) == null) { if (reducedSize) { <BUGS> return ((BaulastenPictureFinder.PATH_RS) + (BaulastenPictureFinder.SEP)) + (file); <BUGE> }else { <BUGS> return ((BaulastenPictureFinder.PATH) + (BaulastenPictureFinder.SEP)) + (file); <BUGE> } }else { <BUGS> return ((getFolder(number, reducedSize)) + (BaulastenPictureFinder.SEP)) + (file); <BUGE> } } 
@org.springframework.web.bind.annotation.RequestMapping(value = { "/" , "/" + (co.porkopolis.utils.FileConstants.HOME_PAGE) }, method = org.springframework.web.bind.annotation.RequestMethod.POST) public java.lang.String home(@org.springframework.web.bind.annotation.ModelAttribute co.porkopolis.model.SummonerName summonerName, org.springframework.ui.Model model) { <BUGS> <BUGE> co.porkopolis.model.BasicSummoner summoner = request.requestBasicSummoner(summonerName.getName()); if (summoner != null) { model.addAttribute(AttributeConstants.BASIC_SUMMONER, summoner); return co.porkopolis.utils.FileConstants.INDEX; }else { model.addAttribute(AttributeConstants.ERROR, (("Summoner " + (summonerName.getName())) + " not found.")); return co.porkopolis.utils.FileConstants.HOME_PAGE; } } 
@be.kuleuven.cs.som.annotate.Raw private void setPosition(hillbillies.model.Vector position) { if ((this.world) == null) throw new java.lang.ClassCastException();  <BUGS> if ((!(this.world.isPositionInWorld(position))) || (!(isValidPositionForUnit()))) <BUGE> throw new java.lang.IllegalArgumentException();  this.position = position; } 
@java.lang.Override protected void onPageScrolled(int position, float offset, int offsetPixels) { if (((lastPagedReached) && (offset == 0)) && (!(swipeListenerCalled))) { <BUGS> onSwipeListener.onAttemptedOnLastPage(); swipeListenerCalled = true; <BUGE> } lastPagedReached = (position + 1) == (getAdapter().getCount()); super.onPageScrolled(position, offset, offsetPixels); } 
@org.junit.Test public void testValidarCampos() { java.lang.System.out.println("validarCampos"); java.lang.String username = ""; java.lang.String password = ""; com.grupo7.practica.principal instance = new com.grupo7.practica.principal(); <BUGS> boolean expResult = true; <BUGE> boolean result = instance.validarCampos(username, password); assertEquals(expResult, result); <BUGS> fail("The test case is a prototype."); <BUGE> } 
@controllers.Security.Authenticated(value = controllers.Secured.class) public static controllers.Result admin() { <BUGS> java.lang.String playerName = Player.find.byId(request().username()).name; if (!(playerName.equals("admin"))) { <BUGE> return redirect(routes.Application.login()); }else { return ok(views.html.pages.admin.render(Player.find.all(), Player.find.byId(request().username()))); } } 
public static void main(java.lang.String[] argv) throws java.io.IOException { jrnnlm.core.RNNLMConfiguration conf = new jrnnlm.core.RNNLMConfiguration(); conf.trainStreamFactory = new jrnnlm.io.FileInputStreamFactory(new java.io.File("data/ptb.train.100.txt")); conf.validFile = new java.io.File("data/ptb.valid.txt"); conf.hiddenSize = 30; conf.maxIters = 50; conf.fastMath = true; jrnnlm.core.RNNLM rnn = new jrnnlm.core.RNNLM(conf); jrnnlm.parallel.ParallelTrainer trainer = new jrnnlm.parallel.ParallelTrainer(rnn, 4); trainer.train(); <BUGS> rnn.save(argv[2]); <BUGE> } 
@java.lang.SuppressWarnings(value = "unchecked") public <T> org.apache.flink.streaming.partitioner.StreamPartitioner<T> getPartitioner(java.lang.ClassLoader cl, java.lang.String output) { org.apache.flink.streaming.partitioner.StreamPartitioner<T> partitioner = null; try { partitioner = ((org.apache.flink.streaming.partitioner.StreamPartitioner<T>) (org.apache.flink.util.InstantiationUtil.readObjectFromConfig(this.config, ((org.apache.flink.streaming.api.StreamConfig.PARTITIONER_OBJECT) + output), cl))); } catch (java.lang.Exception e) { throw new java.lang.RuntimeException("Partitioner could not be instantiated."); } <BUGS> if (partitioner != null) { return partitioner; }else { return new org.apache.flink.streaming.partitioner.ShufflePartitioner<T>(); } <BUGE> } 
public static AST.AST_CLASSDECL getClass(java.lang.String className) { java.util.List<AST.AST_CLASSDECL> classList = AST.SemanticChecker.program.getClassDeclList().getListOfClassDecl(); for (AST.AST_CLASSDECL classDecl : classList) { <BUGS> if (className.equals(classDecl.classId)) { <BUGE> return classDecl; } } return null; } 
<BUGS> <BUGE> public static com.hazelcast.core.HazelcastInstance getHazelcastInstance() { org.osgi.framework.BundleContext ctx = org.osgi.framework.FrameworkUtil.getBundle(org.wso2.carbon.ntask.core.internal.TasksDSComponent.class).getBundleContext(); <BUGS> org.osgi.framework.ServiceReference<com.hazelcast.core.HazelcastInstance> ref = ctx.getServiceReference(com.hazelcast.core.HazelcastInstance.class); <BUGE> if (ref == null) { return null; } <BUGS> return ctx.getService(ref); <BUGE> } 
@java.lang.Override public void onScrollStateChanged(android.support.v7.widget.RecyclerView recyclerView, int newState) { android.support.v7.widget.LinearLayoutManager layoutManager = ((android.support.v7.widget.LinearLayoutManager) (recyclerView.getLayoutManager())); int lastPosition = layoutManager.findLastCompletelyVisibleItemPosition(); if (lastPosition == ((mAdapter.getItemCount()) - 1)) { <BUGS> mListViewModel.loadNextPageZhihu(); <BUGE> } } 
@java.lang.Override public void onRequestPermissionsResult(int requestCode, java.lang.String[] permissions, int[] grantResults) { switch (requestCode) { case com.cs246.bathroom.MapsActivity.MY_PERMISSIONS_REQUEST_ACCESS_FINE_LOCATION : { if (((grantResults.length) > 0) && ((grantResults[0]) == (android.content.pm.PackageManager.PERMISSION_GRANTED))) { userLocation = true; }else { userLocation = false; } <BUGS> return ; <BUGE> } } } 
@java.lang.Override public org.jboss.invocation.Interceptor create(final org.jboss.invocation.InterceptorFactoryContext context) { final java.lang.reflect.Method method = SessionBeanHomeInterceptorFactory.INIT_METHOD.get(); final java.lang.Object[] params = SessionBeanHomeInterceptorFactory.INIT_PARAMETERS.get(); <BUGS> <BUGE> return new org.jboss.as.ejb3.component.interceptors.AbstractEJBInterceptor() { @java.lang.Override public java.lang.Object processInvocation(final org.jboss.invocation.InterceptorContext context) throws java.lang.Exception { if (method != null) { method.invoke(context.getTarget(), params); } return context.proceed(); } }; } 
@java.lang.Override public void run() { <BUGS> this.s = ((ETPSYSTEM.ChannelValue) (this.spotcheck.channel.in().read())); java.lang.System.out.println("ProcessO - sum2: Received s through spotcheck"); ETPSYSTEM.Sum2O.repl2O rep = new ETPSYSTEM.Sum2O.repl2O(this.spotcheck, this.topa, this.read, this.s, this.ls); org.jcsp.lang.ProcessManager manager = new org.jcsp.lang.ProcessManager(rep); manager.start(); <BUGE> } 
private void initTransient() { <BUGS> iobuf = com.redhat.ckey.applet.JCSystem.makeTransientByteArray(com.redhat.ckey.applet.CardEdge.IOBUF_ALLOC, JCSystem.CLEAR_ON_DESELECT); <BUGE> ciph_dirs = com.redhat.ckey.applet.JCSystem.makeTransientByteArray(com.redhat.ckey.applet.CardEdge.MAX_NUM_KEYS, JCSystem.CLEAR_ON_DESELECT); nonce = com.redhat.ckey.applet.JCSystem.makeTransientByteArray(com.redhat.ckey.applet.CardEdge.NONCE_SIZE, JCSystem.CLEAR_ON_RESET); loginCount = com.redhat.ckey.applet.JCSystem.makeTransientShortArray(com.redhat.ckey.applet.CardEdge.MAX_NUM_PINS, JCSystem.CLEAR_ON_RESET); cardResetProcessed = com.redhat.ckey.applet.JCSystem.makeTransientBooleanArray(((short) (1)), JCSystem.CLEAR_ON_RESET); transientInit = true; } 
private traer.physics.Particle createParticle(int x, int y) { <BUGS> traer.physics.Particle newParticle = m_particleSystem.makeParticle(campaignencyclopedia.display.swing.graphical.CampaignEntityGraphCanvas.PARTICLE_MASS, x, y, 0); for (int i = 0; i < (m_particleSystem.numberOfParticles()); i++) { traer.physics.Particle p = m_particleSystem.getParticle(i); if (p.equals(newParticle)) { continue; <BUGE> } <BUGS> m_particleSystem.makeAttraction(p, newParticle, campaignencyclopedia.display.swing.graphical.CampaignEntityGraphCanvas.REPULSIVE_FORCE, campaignencyclopedia.display.swing.graphical.CampaignEntityGraphCanvas.MIN_REPULSIVE_DISTANCE); <BUGE> } <BUGS> return newParticle; <BUGE> } 
@java.lang.Override public void onReceive(android.content.Context context, android.content.Intent intent) { if (intent == null) { return ; } android.net.Uri uri = intent.getParcelableExtra("uri"); com.lzh.nonview.router.extras.RouteBundleExtras extras = intent.getParcelableExtra("extras"); <BUGS> com.lzh.nonview.router.Router.resume(uri, extras); <BUGE> } 
public void resize(int width, int height) { camera.viewportWidth = ((com.packtpub.libgdx.canyonbunny.util.Constants.VIEWPORT_HEIGHT) / height) * width; camera.update(); <BUGS> cameraGUI.viewportWidth = com.packtpub.libgdx.canyonbunny.util.Constants.VIEWPORT_GUI_WIDTH; cameraGUI.viewportHeight = ((com.packtpub.libgdx.canyonbunny.util.Constants.VIEWPORT_GUI_HEIGHT) / ((float) (height))) * ((float) (width)); <BUGE> cameraGUI.position.set(((cameraGUI.viewportWidth) / 2), ((cameraGUI.viewportHeight) / 2), 0); cameraGUI.update(); } 
public void run() { java.lang.System.out.println("The Request has been received"); java.lang.System.out.println(rawMsg); fields = rawMsg.split(GlobalVariables.token); if ((fields.length) == 1) { try { throw new java.lang.Exception("Bad Input, no delimiter identified"); } catch (java.lang.Exception e) { e.printStackTrace(); } } try { processRequest(); <BUGS> } catch (global.HasRegisteredException | java.lang.InterruptedException e) { <BUGE> e.printStackTrace(); } } 
public void insertPerson(org.rhok.linguist.code.entity.Person person) { <BUGS> recreateDB(); <BUGE> android.database.sqlite.SQLiteDatabase db = this.getWritableDatabase(); android.content.ContentValues values = getDbValues(person); long personId = db.insert(org.rhok.linguist.code.DatabaseHelper.PERSON_TABLE_NAME, null, values); person.personid = ((int) (personId)); person.uploaded = false; db.close(); } 
@java.lang.Override public void run() { <BUGS> android.view.Window window = this.cordova.getActivity().getWindow(); <BUGE> window.addFlags(LayoutParams.FLAG_DISMISS_KEYGUARD); window.addFlags(LayoutParams.FLAG_SHOW_WHEN_LOCKED); window.addFlags(LayoutParams.FLAG_TURN_SCREEN_ON); android.util.Log.v(com.applurk.plugin.ScreenLocker.TAG, ("ScreenLocker received SUCCESS:" + action)); callbackContext.success(); } 
@java.lang.Override public void actionPerformed(java.awt.event.ActionEvent arg0) { try { <BUGS> makeMessageBox(((java.lang.String) (r[i].invoke(pet)))); <BUGE> } catch (java.lang.IllegalAccessException e) { e.printStackTrace(); } catch (java.lang.IllegalArgumentException e) { e.printStackTrace(); } catch (java.lang.reflect.InvocationTargetException e) { e.printStackTrace(); } } 
private static java.lang.String inputStreamToString(java.io.InputStream is) throws java.io.IOException { java.io.BufferedReader reader = new java.io.BufferedReader(new java.io.InputStreamReader(is)); java.lang.StringBuilder responseStringBuilder = new java.lang.StringBuilder(); <BUGS> java.lang.String line = ""; <BUGE> while ((line = reader.readLine()) != null) { responseStringBuilder.append(line); } return responseStringBuilder.toString(); } 
@java.lang.Override public java.lang.Object add(java.lang.Object left, java.lang.Object right) { <BUGS> if ((left instanceof java.lang.String) || (right instanceof java.lang.String)) { return (left.toString()) + (right.toString()); <BUGE> }else { return super.add(left, right); } } 
public com.jsing.common.string.StringTrimmer getBeforeNext(java.lang.String stringToSearch) { if ((this.string) == null) return this;  int index = getIndex(stringToSearch); <BUGS> if (index > (-1)) { <BUGE> this.end = java.lang.Math.max(this.start, index); } return this; } 
<BUGS> public void openFolder(java.lang.String folderName) throws java.lang.Exception { <BUGE> folder = store.getFolder(folderName); if ((folder) == null) { <BUGS> throw new java.lang.Exception("Invalid folder"); <BUGE> } try { folder.open(Folder.READ_WRITE); } catch (javax.mail.MessagingException ex) { folder.open(Folder.READ_ONLY); } } 
private java.lang.Integer compareBits(java.lang.String a, java.lang.String b) { <BUGS> <BUGE> int count = 0; for (int i = 0; i < (java.lang.Math.min(a.length(), b.length())); i++) { if (!((a.indexOf(i)) == (b.indexOf(i)))) return count;  count++; } return count; } 
public void addEdge(diagraph.DirectedEdge edge) { <BUGS> <BUGE> int from = edge.from(); if (!(edges.containsKey(from))) { edges.put(from, new java.util.HashSet<>()); } java.util.Set<diagraph.DirectedEdge> outgoingEdges = edges.get(from); outgoingEdges.add(edge); } 
public void createDwarfData(com.Jessy1237.DwarfCraft.DCPlayer dCPlayer) { try { java.sql.PreparedStatement prep = mDBCon.prepareStatement("insert into players(uuid, race) values(?,?);"); prep.setString(1, dCPlayer.getPlayer().getUniqueId().toString()); <BUGS> prep.setString(2, plugin.getConfigManager().getDefaultRace()); <BUGE> prep.execute(); prep.close(); } catch (java.lang.Exception e) { e.printStackTrace(); } } 
public static org.apache.drill.exec.store.indexr.ScanWrokProvider.Stat getStat(org.apache.drill.exec.store.indexr.IndexRStoragePlugin plugin, org.apache.drill.exec.store.indexr.IndexRScanSpec scanSpec, java.lang.String scanId, long limitScanRows, java.util.List<org.apache.drill.common.expression.SchemaPath> columns) { <BUGS> org.apache.drill.exec.store.indexr.ScanWrokProvider.CacheKey key = new org.apache.drill.exec.store.indexr.ScanWrokProvider.CacheKey(scanId, scanSpec, limitScanRows); <BUGE> try { return org.apache.drill.exec.store.indexr.ScanWrokProvider.statCache.get(key, new java.util.concurrent.Callable<org.apache.drill.exec.store.indexr.ScanWrokProvider.Stat>() { @java.lang.Override public org.apache.drill.exec.store.indexr.ScanWrokProvider.Stat call() throws java.lang.Exception { return org.apache.drill.exec.store.indexr.ScanWrokProvider.calStat(plugin, scanSpec, scanId, limitScanRows, columns); } }); } catch (java.util.concurrent.ExecutionException e) { throw new java.lang.RuntimeException(e); } } 
@java.lang.Override public void onReceive(android.content.Context context, android.content.Intent intent) { java.lang.String action = intent.getAction(); java.lang.String token = intent.getStringExtra(Prefs.FIREBASE_ID); android.util.Log.d(com.hillelevo.cityelf.Constants.TAG, ("MainActivity onReceive: " + action)); android.util.Log.d(com.hillelevo.cityelf.Constants.TAG, ("MainActivity onReceive: " + token)); if (active) { <BUGS> showDebugAlertDialog(token); <BUGE> } } 
public void generate(int before, int after) { <BUGS> if ((this.statement1) == (Statement.NULL)) { <BUGE> statement2.generate(before, after); }else if ((statement2) == (Statement.NULL)) { statement1.generate(before, after); }else { int label = newLabel(); statement1.generate(before, label); emitLabel(label); statement2.generate(label, after); }  } 
public static void main(java.lang.String[] args) throws java.lang.Exception { java.lang.String alg = "AES"; java.lang.String key = "TheBestSecreteKe"; java.security.Key key2 = new javax.crypto.spec.SecretKeySpec(key.getBytes(), alg); javax.crypto.Cipher cipher = javax.crypto.Cipher.getInstance(alg); cipher.init(javax.crypto.Cipher.ENCRYPT_MODE, key2); java.lang.String data = "TestString"; byte[] encVal = cipher.doFinal(data.getBytes()); <BUGS> java.lang.String encryptedValue = java.util.Base64.getEncoder().encodeToString(encVal); java.lang.System.out.println(encryptedValue); <BUGE> } 
public int compare(Paxos.ProposalId rhs) { if ((this.id) == (rhs.id)) { <BUGS> return java.lang.Integer.compare(this.playerId, rhs.playerId); <BUGE> }else if ((this.id) < (rhs.id)) { return -1; }else { return 1; }  } 
@java.lang.Override public value.Value sub(value.Value other) { if ((!(isSet())) || (!(other.isSet()))) { <BUGS> return new value.IntegerValue(0); <BUGE> } return new value.IntegerValue(((value) - (((value.IntegerValue) (other)).getValue()))); } 
@java.lang.Override protected void setUp() throws java.lang.Exception { java.lang.String name = getName(); name = name.replace("$$", "/"); name = name.replace("$", "."); consulo.internal.dotnet.asm.mbel.ModuleParser moduleParser = new consulo.internal.dotnet.asm.mbel.ModuleParser(new java.io.File(("testData/" + name))); <BUGS> moduleParser.parseNext(); <BUGE> myModuleParser = moduleParser; } 
public static void main(java.lang.String[] args) { java.util.List<java.lang.Integer> list = new java.util.ArrayList<java.lang.Integer>(); <BUGS> list.addAll(java.util.Arrays.asList(5, 5, 3, 5, 3, 8, 5, 6, 5, 7, 3, 1)); <BUGE> java.lang.System.out.println(MajorityElements.findElement(list, 3)); } 
public static double std(org.dynami.core.data.Series series) { double avg = org.dynami.core.utils.StatUtils.avg(series); double sum = 0; <BUGS> for (java.lang.Double d : series) { <BUGE> sum += java.lang.Math.pow((d - avg), 2); } <BUGS> return java.lang.Math.sqrt(((sum / (series.size())) - 1)); <BUGE> } 
<BUGS> protected static void setOmHome() { <BUGE> java.lang.String webappsDir = java.lang.System.getProperty("om.home", "."); org.apache.openmeetings.util.OmFileHelper.setOmHome(webappsDir); if ((!(org.apache.openmeetings.util.OmFileHelper.getOmHome().exists())) || (!(org.apache.openmeetings.util.OmFileHelper.getOmHome().isDirectory()))) { org.junit.Assert.fail(("Invalid directory is specified as OM HOME: " + webappsDir)); } } 
private java.lang.String toBinaryString(int number) { <BUGS> java.lang.String temp = java.lang.Integer.toHexString(number); <BUGE> int length = temp.length(); for (int i = 0; i < (4 - length); i++) <BUGS> temp += "0" + temp; <BUGE>  <BUGS> return temp; <BUGE> } 
@java.lang.Override <BUGS> public int compareTo(@com.sun.istack.internal.NotNull java.lang.Object other) { <BUGE> ch.redmonkeyass.zombieInvasion.worldmap.Node o = ((ch.redmonkeyass.zombieInvasion.worldmap.Node) (other)); float f = (heuristic) + (cost); float of = (o.heuristic) + (o.cost); if (f < of) { return -1; }else if (f > of) { return 1; }else { return 0; }  } 
@java.lang.Override public void setActive() { isActive = true; saveService.saveDataValue(SaveEnum.CONTEXT, context); if (((type) == (com.majalis.scenes.EndScene.Type.ENCOUNTER_OVER)) || ((type) == (com.majalis.scenes.EndScene.Type.GAME_OVER))) { saveService.saveDataValue(SaveEnum.RETURN_CONTEXT, null); } <BUGS> saveService.saveDataValue(SaveEnum.SCENE_CODE, 0); <BUGE> } 
public void setTime(int t) { if (((startTime) <= t) && (t <= (endTime))) { <BUGS> java.lang.System.out.println(("end time internal - " + (endTime))); <BUGE> hideContextPopups(); time.set(t); }else if (t < (startTime)) time.set(startTime); else if (t > (endTime)) time.set(endTime);    } 
<BUGS> public static <T> void serialize(T object, java.lang.Class<T> sourceClass, java.io.OutputStream resultStream, java.lang.String schemaLocation) throws javax.xml.bind.JAXBException { javax.xml.bind.JAXBContext jaxbContext = javax.xml.bind.JAXBContext.newInstance(sourceClass); <BUGE> javax.xml.bind.Marshaller jaxbMarshaller = jaxbContext.createMarshaller(); jaxbMarshaller.setProperty(javax.xml.bind.Marshaller.JAXB_SCHEMA_LOCATION, schemaLocation); jaxbMarshaller.setProperty(javax.xml.bind.Marshaller.JAXB_FORMATTED_OUTPUT, true); jaxbMarshaller.marshal(object, resultStream); } 
public void run() { <BUGS> if (!(args.isNull(0))) { java.lang.String inputMode_s = args.get(0); int inputMode_i = WindowManager.LayoutParams.SOFT_INPUT_ADJUST_NOTHING; if (inputMode.equals("pan")) { inputMode_i = WindowManager.LayoutParams.SOFT_INPUT_ADJUST_PAN; }else if (inputMode.equals("resize")) { inputMode_i = WindowManager.LayoutParams.SOFT_INPUT_ADJUST_RESIZE; }  cordova.getActivity().getWindow().setSoftInputMode(inputMode_i); }else { callbackContext.error("No arguments found"); } <BUGE> callbackContext.success(); } 
private void createChannel() { if ((channel) == null) { channel = servletRequestContext.getExchange().getResponseChannel(); <BUGS> channel.getWriteSetter().set(internalListener); <BUGE> if ((internalListener) != null) { <BUGS> channel.resumeWrites(); <BUGE> } } } 
private void addRow(int row, int numInRow) { int idxInRow = 0; <BUGS> int startVertex = row * numInRow; <BUGE> int currVertex = startVertex; <BUGS> while (idxInRow < numInRow) { addFace(currVertex, (currVertex + 1), ((currVertex + numInRow) + 1), (currVertex + numInRow)); <BUGE> currVertex++; idxInRow++; } } 
protected <T> T createObjectForClass(java.lang.Class<T> aClass, java.util.Map<java.lang.Class<?>, java.lang.Object> valueMap) throws com.robertsmieja.test.utils.junit.exceptions.ObjectFactoryException { <BUGS> T object; object = com.robertsmieja.test.utils.junit.Internal.createObjectFromDefaultConstructor(aClass); <BUGE> java.util.List<java.lang.reflect.Field> fields = com.robertsmieja.test.utils.junit.GettersAndSettersUtils.getFields(aClass); for (java.lang.reflect.Field field : fields) { setValueForField(field, object, valueMap); } return object; } 
@java.lang.Override public boolean delete(com.hazelcast.nio.serialization.Data key) { checkIfLoaded(); final long now = getNow(); final com.hazelcast.map.impl.record.Record record = getRecordOrNull(key, now, false); if (record == null) { <BUGS> removeIndex(record); <BUGE> mapDataStore.remove(key, now); }else { return (removeRecord(key, record, now)) != null; } return false; } 
private void startTerminal(int sequence, java.lang.String terminalHandle, java.lang.String caption, java.lang.String title, boolean hasChildProcs, int cols, int rows, int shellType) { <BUGS> org.rstudio.studio.client.workbench.views.terminal.TerminalSession newSession = new org.rstudio.studio.client.workbench.views.terminal.TerminalSession(sequence, terminalHandle, caption, title, hasChildProcs, cols, rows, uiPrefs_.blinkingCursor().getValue(), shellType); <BUGE> newSession.connect(); updateTerminalBusyStatus(); } 
public static boolean CheckGetFileName() { netlife.datamodels.Commands com = new netlife.datamodels.Commands("ADD", "bilder/2012/1.jpg", ""); netlife.datamodels.Commands com2 = new netlife.datamodels.Commands("DEL", "bilder/2012/1.jpg/", ""); java.lang.String test = netlife.Logic.getFileName(com); java.lang.String test2 = netlife.Logic.getFileName(com2); boolean check = test.equals("1.jpg"); <BUGS> boolean check2 = test.equals("1.jpg"); <BUGE> return (check && check2) == true; } 
private void runChildren(final org.junit.runner.notification.RunNotifier notifier, java.util.Collection<T> filteredChildren) { final org.junit.runners.model.RunnerScheduler scheduler = fScheduler; try { <BUGS> for (final T each : getFilteredChildren()) { <BUGE> scheduler.schedule(new java.lang.Runnable() { public void run() { org.junit.runners.ParentRunner.this.runChild(each, notifier); } }); } } finally { scheduler.finished(); } } 
public void setStartDate(java.util.Optional<java.util.List<java.util.Date>> startDate) { try { java.util.List<java.util.Date> dateList = startDate.get(); if ((dateList.size()) == 2) { this.startDate = java.util.Optional.of(startDate.get().get(0)); }else { <BUGS> this.startDate = java.util.Optional.empty(); <BUGE> } } catch (java.util.NoSuchElementException nse) { <BUGS> throw new java.lang.IllegalArgumentException(); <BUGE> } } 
public void addLast(Item item) { if (this.checkNull(item)) <BUGS> throw new java.util.NoSuchElementException(); <BUGE>  if ((tail) == null) { tail = new Deque.Node(); tail.item = item; head = tail; }else { tail.prev = new Deque.Node(); tail.prev.next = tail; tail = tail.prev; tail.item = item; } count += 1; } 
private void reDrawGestureView() { dist = 0; android.util.Log.i("Action", "RESET GESTURE"); setContentView(R.layout.test_gesture); <BUGS> resetButton = ((android.widget.Button) (findViewById(R.id.gesture_test_button))); <BUGE> resetButton.setOnClickListener(new android.view.View.OnClickListener() { @java.lang.Override public void onClick(android.view.View view) { reDrawGestureView(); } }); android.gesture.GestureOverlayView gestures = ((android.gesture.GestureOverlayView) (findViewById(R.id.test_gesture))); gestures.removeAllOnGestureListeners(); gestures.addOnGestureListener(mGestureListener); resetEverything(); } 
private void saveToModel() { <BUGS> if ((prefs) == null) return ;  <BUGE> prefs.setUseDefaultCommand(b_cmdFromPath.getSelection()); java.lang.String command = t_cmd.getText().trim(); prefs.setCommand(command); final org.eclipse.jface.viewers.IStructuredSelection sel = ((org.eclipse.jface.viewers.IStructuredSelection) (c_generator.getSelection())); prefs.setGenerator(((de.marw.cdt.cmake.core.internal.CmakeGenerator) (sel.getFirstElement()))); } 
<BUGS> public void run() { <BUGE> tvAddress.setText(address); etPaymentId.setEnabled(true); etAmount.setEnabled(true); bPaymentId.setEnabled(true); bGenerate.setEnabled(true); hideProgress(); generateQr(); } 
private void sendOnOpenMessage(io.netty.channel.ChannelHandlerContext ctx, boolean isSecured, java.lang.String uri) throws java.net.URISyntaxException { cMsg = new org.wso2.carbon.messaging.StatusCarbonMessage(org.wso2.carbon.transport.http.netty.common.Constants.STATUS_OPEN, 0, null); <BUGS> javax.websocket.Session session = new org.wso2.carbon.transport.http.netty.internal.websocket.WebSocketSessionImpl(ctx, isSecured, uri, channelId); <BUGE> setupCarbonMessage(ctx); cMsg.setProperty(Constants.CONNECTION, Constants.UPGRADE); cMsg.setProperty(Constants.UPGRADE, Constants.WEBSOCKET_UPGRADE); publishToMessageProcessor(cMsg); } 
private java.lang.String findHalfHourAfter(int hours, int minutes) { java.lang.String halfHourAfter = ""; minutes += 30; <BUGS> if (minutes > 60) { <BUGE> hours++; minutes -= 60; } halfHourAfter = formatTime(halfHourAfter, hours, minutes); return halfHourAfter += minutes; } 
protected void updateFromNameChange(java.lang.String newHeroName) { <BUGS> <BUGE> mName = newHeroName; java.lang.String imageName = mParentPresenter.getHeroImageName(newHeroName); for (int i = 0; i < (mSimilarityList.size()); i++) { if (mSimilarityList.get(i).equals(imageName)) { mView.setHeroInRecycler(i); break; } } mParentPresenter.hideKeyboard(); mParentPresenter.sendUpdatedHeroList(); } 
@java.lang.Override public void onClick(android.view.View view) { android.content.Intent intent1 = new android.content.Intent(activity, ir.rasen.charsoo.view.activity.business.ActivityBusinessFollowers.class); intent1.putExtra(Params.BUSINESS_ID_STRING, business.id); intent1.putExtra(Params.USER_ID_INT, ir.rasen.charsoo.controller.helper.LoginInfo.getUserId(activity)); <BUGS> intent1.putExtra(Params.BUSINESS_OWNER, business.userID); <BUGE> activity.startActivity(intent1); } 
private static double getPassangerDiscount(ooptraining.Passanger p) { double discount = 1.0; <BUGS> if ((p.getMiles()) > (ooptraining.DiscountCalculator.SILVER_LIMIT)) { discount = ooptraining.DiscountCalculator.SILVER_DISCOUNT; <BUGE> }else <BUGS> if ((p.getMiles()) > (ooptraining.DiscountCalculator.GOLD_LIMIT)) { discount = ooptraining.DiscountCalculator.GOLD_DISCOUNT; <BUGE> }  return discount; } 
public learntest.core.gentest.GentestResult gentestAndCompile(java.util.List<double[]> solutions, java.util.List<sav.strategies.dto.execute.value.ExecVar> vars, learntest.core.gentest.GentestParams params) throws sav.common.core.SavException { learntest.core.LearningMediator.log.debug("gentest.."); learntest.core.gentest.GentestResult result = getTestGenerator().genTestAccordingToSolutions(params, solutions, vars, new gentest.junit.JWriter()); if (!(result.isEmpty())) { learntest.core.LearningMediator.log.debug("compile.."); <BUGS> compileAndLogTestSequences(result); <BUGE> } return result; } 
@java.lang.Override public void handle(javafx.event.ActionEvent event) { javafx.scene.control.CheckBox cb = ((javafx.scene.control.CheckBox) (event.getSource())); <BUGS> javafx.scene.control.TableColumn column = ((javafx.scene.control.TableColumn) (cb.getUserData())); <BUGE> if (cb.isSelected()) { for (application.ResultTable resultTableRow : resultTable.getItems()) { resultTableRow.setTrace(true); } }else { for (application.ResultTable resultTableRow : resultTable.getItems()) { resultTableRow.setTrace(false); } } } 
private void createNextRound() { <BUGS> java.lang.System.out.println("create next round"); java.lang.System.out.println(("current grid num is " + (currentGridNum))); <BUGE> if ((currentGridNum) >= (beetle_kit.EstimationGame.MAX_NUM_ROUNDS)) { javax.swing.JPanel panel = createEndGamePanel(); javax.swing.JOptionPane.showOptionDialog(this, panel, "Congratulations!!!", javax.swing.JOptionPane.DEFAULT_OPTION, javax.swing.JOptionPane.PLAIN_MESSAGE, null, new java.lang.Object[]{  }, null); return ; } createNewGrid(); } 
double heuristics(dstarlite.State a, dstarlite.State b) { double temp; double min = java.lang.Math.abs(((a.getX()) - (b.getX()))); <BUGS> double max = java.lang.Math.abs(((a.getY()) - (a.getY()))); <BUGE> if (min > max) { temp = min; min = max; max = temp; } return (((m_sqrt2) - 1.0) * min) + max; } 
<BUGS> private com.bagri.core.system.Collection getTypedCollection(com.bagri.core.system.Schema schema, java.lang.String typePath) { for (com.bagri.core.system.Collection collect : schema.getCollections()) { <BUGE> java.lang.String cPath = collect.getDocumentType(); if ((cPath != null) && (typePath.equals(cPath))) { return collect; } } return null; } 
@Test void getPastReviewers() { <BUGS> java.util.Date submissionDeadline = new java.util.Date(); java.util.Date reviewDeadline = new java.util.Date(); <BUGE> Conference tester = new Conference(submissionDeadline, reviewDeadline, new ArrayList<Reviewer>()); assertEquals(tester.getPastReviewers(), new ArrayList<Reviewer>()); } 
@java.lang.Override public void create() { ru.spbau.kaysin.ants.Ants.generator = new com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator(Gdx.files.internal("FONTS/visitor1.ttf")); ru.spbau.kaysin.ants.Ants.assets.load("pack.txt", com.badlogic.gdx.graphics.g2d.TextureAtlas.class); ru.spbau.kaysin.ants.Ants.assets.load("explosion.txt", com.badlogic.gdx.graphics.g2d.TextureAtlas.class); <BUGS> ru.spbau.kaysin.ants.Ants.assets.load("holo/Holo-Dark-hdpi.atlas", com.badlogic.gdx.graphics.g2d.TextureAtlas.class); <BUGE> ru.spbau.kaysin.ants.Ants.assets.finishLoading(); ru.spbau.kaysin.ants.Ants.assets.update(); aurelienribon.tweenengine.Tween.registerAccessor(com.badlogic.gdx.scenes.scene2d.Actor.class, new ru.spbau.kaysin.ants.utils.TweenActor()); setScreen(new ru.spbau.kaysin.ants.screens.MenuScreen()); } 
public void deregister() throws java.io.IOException { if ((listen) == null) { java.lang.System.out.println("Register first!"); return ; } java.net.Socket sock = createSocket(); <BUGS> if (!(sendAndReceive(("deregister " + (id))))); { <BUGE> java.lang.System.out.println("Deregister failed, try again"); } listen.interrupt(); listen = null; sock.close(); } 
@java.lang.Override public void gameOver() { java.lang.String playername = ((java.lang.String) (javax.swing.JOptionPane.showInputDialog(null, ((("Your score: " + (_panel.gameModel().step())) + "\n") + "Enter your name:\n"), "Game Over", javax.swing.JOptionPane.PLAIN_MESSAGE, null, null, "new player"))); <BUGS> _scoreBoard.put(_panel.gameModel().step(), playername); <BUGE> } 
private com.sonnytron.sortatech.pantryprep.Database.IngredientsCursorWrapper queryTopFiveIngredients(java.lang.String whereClause, java.lang.String[] whereArgs) { android.database.sqlite.SQLiteQueryBuilder qb = new android.database.sqlite.SQLiteQueryBuilder(); java.lang.String[] subQueries = new java.lang.String[]{ "SELECT * FROM (SELECT * FROM ingredientsItems where type = 'protein' order by date desc limit 1) as meat" , "SELECT * FROM (SELECT * FROM ingredientsItems where type in ('dairy', 'veggies') order by date desc limit 4) as others" }; java.lang.String sql = qb.buildUnionQuery(subQueries, null, null); <BUGS> android.util.Log.d("query sql: ", sql); <BUGE> android.database.Cursor cursor = mDatabase.rawQuery(sql, null); return new com.sonnytron.sortatech.pantryprep.Database.IngredientsCursorWrapper(cursor); } 
public static com.ldf.calendar.model.CalendarDate fromDate(java.util.Date date) { java.util.Calendar cal = java.util.Calendar.getInstance(); cal.setTime(date); com.ldf.calendar.model.CalendarDate calendarDate = new com.ldf.calendar.model.CalendarDate(); calendarDate.year = cal.get(java.util.Calendar.YEAR); <BUGS> calendarDate.month = cal.get(((java.util.Calendar.MONTH) + 1)); <BUGE> calendarDate.day = cal.get(java.util.Calendar.DAY_OF_MONTH); return calendarDate; } 
protected javax.portlet.PortletPreferences updateImportPortletPreferences(com.liferay.exportimport.kernel.lar.PortletDataContext portletDataContext, javax.portlet.PortletPreferences portletPreferences) throws java.lang.Exception { <BUGS> long organizationId = com.liferay.portal.kernel.util.GetterUtil.getLong(portletPreferences.getValue("organizationId", null)); if (organizationId > 0) { com.liferay.portal.kernel.model.Company company = _companyLocalService.getCompanyById(portletDataContext.getCompanyId()); com.liferay.portal.kernel.model.Group companyGroup = company.getGroup(); updateImportPortletPreferencesClassPKs(portletDataContext, portletPreferences, "organizationId", com.liferay.portal.kernel.model.Organization.class, companyGroup.getGroupId()); } <BUGE> return portletPreferences; } 
private java.util.List<com.kasirgalabs.etumulator.linker.Data> resolveData() { java.util.List<com.kasirgalabs.etumulator.linker.Data> resolvedData = new java.util.ArrayList<>(); for (com.kasirgalabs.etumulator.linker.Data data : targetData) { if (definedData.contains(data)) { com.kasirgalabs.etumulator.linker.Data temp = definedData.get(definedData.indexOf(data)); loadIntoMemory(temp); <BUGS> resolvedData.add(definedData.get(definedData.indexOf(data))); <BUGE> continue; } return null; } return resolvedData; } 
<BUGS> public void addItem(item.Item i) { <BUGE> item.Item item = i.clone(); <BUGS> <BUGE> if (i.isStackable) { int loc = findShopItemLoc(i); if (loc >= 0) { <BUGS> items.get(loc).count += i.count; <BUGE> }else { items.add(item); } }else { items.add(item); } } 
@javax.ws.rs.GET @javax.ws.rs.Path(value = "/all") @javax.ws.rs.Produces(value = javax.ws.rs.core.MediaType.APPLICATION_JSON) public java.lang.String returnDiagnose(@javax.ws.rs.QueryParam(value = "session") java.lang.String session, @javax.ws.rs.QueryParam(value = "patientId") java.lang.String patientId) { java.lang.String medications = "false"; try { connector = eu.neq.mais.connector.ConnectorFactory.getConnector(eu.neq.mais.technicalservice.SessionStore.getBackendSid(session)); medications = connector.returnMedicationsForPatient(patientId); } catch (java.lang.Exception e) { e.printStackTrace(); <BUGS> medications = "{\"false\"}"; <BUGE> } eu.neq.mais.request.MedicationHandler.logger.info(("return medication method returned json object: " + medications)); return medications; } 
public int getTotalBalance() { int totalBalance = 0; for (Reservation reservation : this.reservations) { if ((reservation.getRoomType()) == "L") { <BUGS> totalBalance = +200; <BUGE> } if ((reservation.getRoomType()) == "E") { <BUGS> totalBalance = +80; <BUGE> } } return totalBalance; } 
@java.lang.Override public void onDisable() { <BUGS> super.onDisable(); <BUGE> for (org.bukkit.entity.Player player : getServer().getOnlinePlayers()) { com.pgcraft.spectatorplus.spectators.Spectator spectator = getPlayerData(player); if (spectator.isSpectating()) { spectator.setSpectating(false, true); spectator.saveSpectatorModeInFile(true); } } arenasManager.save(); spectatorsManager.save(); <BUGS> <BUGE> } 
@java.lang.Override public void onTaskComplete(java.util.ArrayList<group3.tcss450.uw.edu.thememebible.Model.Meme> theMemeData) { dismissProgressBar(); mMemeData = theMemeData; <BUGS> android.os.Bundle args = new android.os.Bundle(); args.putSerializable(getString(R.string.photo_data_key), mMemeData); mPhotoFragment.setArguments(args); loadFragment(mPhotoFragment); <BUGE> } 
private void setValueContrained(int x) { x = x - (this.getAbsoluteLeft()); int width = sliderWidget.getOffsetWidth(); if (x < 0) { x = 0; } <BUGS> if (x > width) { x = width; <BUGE> } int componentValue = (x * (max)) / width; setValue(componentValue, true, false); sliderWidget.setPos(x); } 
public boolean shootAt(int row, int column) { int tempRow = getBowRow(); int tempColumn = getBowColumn(); if ((!(isSunk())) || (!(stworo01.EmptySea.class.isInstance(this)))) { <BUGS> if (this.isHorizontal()) { <BUGE> this.hit[(column - tempColumn)] = true; return true; }else { this.hit[(row - tempRow)] = true; return true; } } return false; } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); <BUGS> android.widget.Toast.makeText(getApplicationContext(), "sdfghjkl;", Toast.LENGTH_LONG).show(); <BUGE> android.content.Intent intent = getIntent(); username = intent.getStringExtra("Username"); username_TextV = ((android.widget.TextView) (findViewById(R.id.username_act_main))); username_TextV.setText(((username_TextV.getText().toString()) + (username))); initInstances(); } 
private void setZeroValues(java.lang.String values) { <BUGS> <BUGE> java.lang.String[] sr = values.split(","); for (int i = 0; i < (sr.length); i++) { int num = java.lang.Integer.MIN_VALUE; try { num = java.lang.Integer.parseInt(sr[i]); } catch (java.lang.NumberFormatException nfe) { break; } zeroValues.add(num); } } 
public static void index() { controllers.Http.Cookie userLoggedInCookie = request.cookies.get("token"); <BUGS> if (userLoggedInCookie == null) { <BUGE> controllers.Application.loginForm(); } models.User user = models.User.find("byToken", userLoggedInCookie.value).first(); java.util.List<models.Audio> audios = models.Audio.find("byUser", user).fetch(); render(audios); } 
@java.lang.Override public boolean onTouch(android.view.View view, android.view.MotionEvent event) { switch (event.getActionMasked()) { case android.view.MotionEvent.ACTION_DOWN : <BUGS> android.view.View.DragShadowBuilder shadowBuilder = new android.view.View.DragShadowBuilder(); view.startDrag(android.content.ClipData.newPlainText("", ""), shadowBuilder, view, 0); <BUGE> return true; default : return false; } } 
@java.lang.Override public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) { android.view.View rootView = inflater.inflate(R.layout.fragment_base_pager, container, false); android.widget.TextView textView = ((android.widget.TextView) (rootView.findViewById(R.id.section_label))); <BUGS> textView.setText(getString(R.string.section_format, getArguments().getInt(com.moana.carsharing.base.BasePagerActivity.PlaceholderFragment.ARG_SECTION_NUMBER))); <BUGE> return rootView; } 
private void resetBall(int scorer) { <BUGS> if (scorer == 10) { <BUGE> (score2)++; }else { (score1)++; } ballIsStopped = true; ballOffsetX = 0; ballOffsetY = 0; ballVelX = 0; ballVelY = 0; bat1Offset = 0; bat2Offset = 0; lastScorer = scorer; bounces = 0; } 
@android.support.annotation.NonNull private com.pushtorefresh.storio.sqlitedb.operation.put.PutResult updateOrInsert(@android.support.annotation.NonNull com.pushtorefresh.storio.sqlitedb.StorIOSQLiteDb storIOSQLiteDb, @android.support.annotation.NonNull android.content.ContentValues contentValues, @android.support.annotation.NonNull java.lang.String table, @android.support.annotation.NonNull <BUGS> final java.lang.String idFieldName, @android.support.annotation.NonNull java.lang.Object id) { final int numberOfRowsUpdated = storIOSQLiteDb.internal().update(new com.pushtorefresh.storio.sqlitedb.query.UpdateQuery.Builder().table(table).where((idFieldName + "=?")).whereArgs(java.lang.String.valueOf(id)).build(), contentValues); <BUGE> return numberOfRowsUpdated > 0 ? com.pushtorefresh.storio.sqlitedb.operation.put.PutResult.newUpdateResult(numberOfRowsUpdated, table) : insert(storIOSQLiteDb, contentValues, table); } 
private void assertAddSuccess(seedu.tasklist.testutil.TestTask personToAdd, seedu.tasklist.testutil.TestTask... currentList) { commandBox.runCommand(personToAdd.getAddCommand()); <BUGS> guitests.guihandles.PersonCardHandle addedCard = taskListPanel.navigateToPerson(personToAdd.getTaskDetails().taskDetails); <BUGE> assertMatching(personToAdd, addedCard); seedu.tasklist.testutil.TestTask[] expectedList = seedu.tasklist.testutil.TestUtil.addTasksToList(currentList, personToAdd); org.junit.Assert.assertTrue(taskListPanel.isListMatching(expectedList)); } 
private void initDateAndTime(main.java.Task.Type type, java.util.ArrayList<java.time.LocalDateTime> parsedDates) { switch (type) { case TIMED : date = parsedDates.get(main.java.Task.POSITION_FIRST_DATE).toLocalDate(); startTime = parsedDates.get(main.java.Task.POSITION_FIRST_DATE).toLocalTime(); endTime = parsedDates.get(main.java.Task.POSITION_SECOND_DATE).toLocalTime(); break; case DEADLINE : date = parsedDates.get(main.java.Task.POSITION_FIRST_DATE).toLocalDate(); <BUGS> <BUGE> break; default : break; } } 
private void setupTabLayout() { tabLayout.setTabGravity(TabLayout.GRAVITY_FILL); <BUGS> <BUGE> tabLayout.addTab(tabLayout.newTab().setText(com.nsqre.insquare.Fragments.ProfileFragment.TAB_OWNED)); <BUGS> tabLayout.addTab(tabLayout.newTab().setText(com.nsqre.insquare.Fragments.ProfileFragment.TAB_FAVOURITE)); <BUGE> tabLayout.setOnTabSelectedListener(this); if (!(InSquareProfile.ownedSquaresList.isEmpty())) { squaresList.setAdapter(adapterOwned); emptyText.setVisibility(View.INVISIBLE); }else { emptyText.setVisibility(View.VISIBLE); emptyText.setText(getString(R.string.profile_empty_owned)); } } 
public void init(java.lang.String serverAddress, int serverPort, int hostPort, java.util.concurrent.BlockingQueue<java.lang.String> msgQueue) throws java.io.IOException { java.net.Socket s = new java.net.Socket(); s.bind(new java.net.InetSocketAddress(hostPort)); s.connect(new java.net.InetSocketAddress(serverAddress, serverPort)); this.out = new java.io.OutputStreamWriter(s.getOutputStream()); <BUGS> java.lang.Runnable fetcher = new com.nutscape.mc.nunuubot.Connection.MessageFetcher(s.getInputStream(), msgQueue, bot); <BUGE> new java.lang.Thread(fetcher).start(); } 
<BUGS> public void onDataReceived(com.jacks205.spots.model.ParkingStructure[] structures, java.util.Date lastUpdated) { <BUGE> if ((spotsListAdapter) == null) { <BUGS> spotsListAdapter = new com.jacks205.spots.adapters.SpotsListAdapter(this, structures, lastUpdated); <BUGE> listView.setAdapter(spotsListAdapter); }else { spotsListAdapter.setStructures(structures); <BUGS> spotsListAdapter.setLastUpdated(lastUpdated); <BUGE> spotsListAdapter.notifyDataSetChanged(); } mSwipeRefreshLayout.setRefreshing(false); } 
@java.lang.Override protected java.lang.String doInBackground(java.lang.Void... params) { com.myapp.handbook.HttpConnectionUtil util = new com.myapp.handbook.HttpConnectionUtil(); java.lang.String url = (HttpConnectionUtil.URL_ENPOINT) + "/SendMessageToMultipleUser/"; org.json.JSONObject messageJson = prepareMessage(); <BUGS> util.UploadImage(photoFile); <BUGE> while (!(HttpConnectionUtil.imageUploaded)) { } try { if (HttpConnectionUtil.imageUploadStatus) { messageJson.put("ImageUrl", HttpConnectionUtil.imageUrl); } } catch (org.json.JSONException e) { e.printStackTrace(); } return util.downloadUrl(url, HttpConnectionUtil.RESTMethod.PUT, messageJson); } 
public java.lang.String eth_getCode(java.lang.String address, java.lang.String blockId) throws java.lang.Exception { org.ethereum.jsonrpc.Block block = getByJsonBlockId(blockId); <BUGS> <BUGE> byte[] addressAsByteArray = org.ethereum.jsonrpc.TypeConverter.TypeConverter.StringHexToByteArray(address); byte[] code = this.repository.getSnapshotTo(block.getStateRoot()).getCode(addressAsByteArray); return org.ethereum.jsonrpc.TypeConverter.TypeConverter.toJsonHex(code); } 
private java.util.List<T> down(int row, int column, int length) { java.util.List<T> nodes = new java.util.ArrayList<>(); int rowCount = rowCount(); for (int position = 0; position < length; position++) { int currentRow = row + position; <BUGS> if (currentRow > rowCount) { <BUGE> break; } T node = grid[currentRow][column]; nodes.add(node); } return nodes; } 
@org.junit.Test public void index_showsHomePageTest() throws java.lang.Exception { <BUGS> mockMvc.perform(org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get("/")).andExpect(org.springframework.test.web.servlet.result.MockMvcResultMatchers.status().isOk()).andExpect(model().attribute("tasks", tasks)).andExpect(model().size(1)).andExpect(org.springframework.test.web.servlet.result.MockMvcResultMatchers.view().name("index")); <BUGE> org.mockito.Mockito.verify(taskService).getAllTasks(); org.mockito.Mockito.verifyNoMoreInteractions(taskService); } 
@java.lang.Override public com.ankurdave.part.ChildPtr find_child(byte c) { for (int i = 0; i < (this.num_children); i++) { <BUGS> if ((keys[i]) == (to_uint(c))) { <BUGE> return new com.ankurdave.part.ArrayChildPtr(children, i); } } return null; } 
<BUGS> public static void main(java.lang.String[] args) throws java.lang.ClassNotFoundException { <BUGE> java.net.ServerSocket sconn = null; java.net.Socket conn = null; antsserverdigest.gestore now; java.lang.Thread thread; int port = 3356; <BUGS> <BUGE> while (true) { try { <BUGS> sconn = new java.net.ServerSocket(port); <BUGE> conn = sconn.accept(); now = new antsserverdigest.gestore(conn); thread = new java.lang.Thread(now); thread.start(); } catch (java.io.IOException e) { } } } 
@java.lang.Override public void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); setRetainInstance(true); <BUGS> db = new com.nectar.thesun.library.NewsListDatabase(com.nectar.thesun.PageSlidingTabStripFragment.mcontext); if ((db.getNews()) != null) { com.nectar.thesun.library.MyConstants.homenews = db.getNews(); com.nectar.thesun.HomeFragment.Setup(); <BUGE> } if (!(com.nectar.thesun.PageSlidingTabStripFragment.isAsyncTaskPendingOrRunning())) { <BUGS> <BUGE> loadNewsNow(getActivity()); <BUGS> com.nectar.thesun.PageSlidingTabStripFragment.mcontext = getActivity().getApplicationContext(); <BUGE> } } 
<BUGS> public java.util.Collection getAllSubTasks(java.lang.String taskId) { <BUGE> if ((taskId == null) || ((taskId.length()) == 0)) { return getAllRootTasks(); }else { net.sf.memoranda.Task task = getTaskElement(taskId); <BUGS> if (task == null) { return new java.util.Vector(); } <BUGE> return task.getSubTasks(); } } 
@com.softserve.edu.documents.document.meta.Placeholder(name = "OWNER_NAME") public java.lang.String getOwnerFullName() { com.softserve.edu.entity.verification.ClientData ownerData = getVerification().getClientData(); <BUGS> java.lang.String fullName = ((((ownerData.getLastName()) + " ") + (ownerData.getFirstName())) + " ") + (ownerData.getMiddleName()); return fullName; <BUGE> } 
private int columnHeight(int column) { int r = 0; for (; (r < (this.height)) && ((this.grid[column][r].isEmpty()) || (this.grid[column][r].isShape())); r++); <BUGS> return ((this.height) - r) - 1; <BUGE> } 
static void askToSave() { java.lang.String[] options = new java.lang.String[]{ "Yes" , "No" , "Cancel" }; int n = javax.swing.JOptionPane.showOptionDialog(EssayWriter.frame, "Would you like to save before you exit?", "Save?", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION, javax.swing.JOptionPane.QUESTION_MESSAGE, null, options, options[0]); if (n == (javax.swing.JOptionPane.YES_OPTION)) { EssayWriter.save(); <BUGS> <BUGE> }else if (n == (javax.swing.JOptionPane.NO_OPTION)) { java.lang.System.exit(0); }  } 
private void insertToClassifiableTextsCharacteristicsTable(java.sql.Connection con, int classifiableTextId, com.irvil.textclassifier.model.Characteristic characteristic, com.irvil.textclassifier.model.CharacteristicValue characteristicValue) throws java.sql.SQLException { java.lang.String sqlInsert = "INSERT INTO ClassifiableTextsCharacteristics (ClassifiableTextId, CharacteristicsNameId, CharacteristicsValueId) VALUES (?, ?, ?)"; java.sql.PreparedStatement statement = con.prepareStatement(sqlInsert); statement.setInt(1, classifiableTextId); statement.setInt(2, characteristic.getId()); <BUGS> statement.setInt(3, characteristicValue.getOrderNumber()); <BUGE> statement.executeUpdate(); } 
@java.lang.Override public void surfaceCreated(android.view.SurfaceHolder holder) { <BUGS> this.grid = new com.example.jacek.streamthegame.Grid(this.getContext(), this.nRows, this.nCols, ((getWidth()) / (this.nRows)), ((getHeight()) / (this.nCols))); <BUGE> this.grid.tryAddObject(Sprite.short_pipe, 2, 1); this.thread.setRunning(true); this.thread.start(); } 
@java.lang.Override public void onFragmentInteraction(int requestCode, int resultCode, java.lang.Object... objects) { switch (requestCode) { case com.joss.jrow.TrainingEnvironment.TrainingActivity.SAVE_REQUEST_CODE : if (resultCode == (RESULT_OK)) { com.joss.jrow.Models.Training.getTraining().save(((java.lang.String) (objects[0]))); } break; case com.joss.jrow.TrainingEnvironment.TrainingActivity.CALIBRATION_REQUEST_CODE : if (resultCode == (RESULT_OK)) { com.joss.jrow.Models.Measures.getMeasures().setDefaultCalibration(); startTraining(); } <BUGS> <BUGE> } } 
private void check(com.gargoylesoftware.htmlunit.WebClient wc, com.gargoylesoftware.htmlunit.HttpMethod m) throws java.io.IOException { com.gargoylesoftware.htmlunit.TextPage p = wc.getPage(new com.gargoylesoftware.htmlunit.WebRequestSettings(new java.net.URL(url, "verbMatch/"), m)); <BUGS> assertEquals((("Got " + (m.name())) + "\n"), p.getContent()); <BUGE> } 
@java.lang.Override public void onClick(org.bukkit.event.inventory.InventoryClickEvent event) { org.bukkit.entity.Player player = ((org.bukkit.entity.Player) (event.getWhoClicked())); if (player != null) { <BUGS> <BUGE> player.performCommand(("vote reward " + (voteSite.getSiteName()))); <BUGS> player.closeInventory(); <BUGE> } } 
@java.lang.Override public int hashCode() { <BUGS> int result = getDateFrom().hashCode(); result = (31 * result) + (getUser().hashCode()); result = (31 * result) + (getBookInstance().hashCode()); <BUGE> return result; } 
<BUGS> public synchronized java.lang.String getSpeed(long size) { <BUGE> long t2 = java.lang.System.currentTimeMillis(); long t = t2 - (t1); t1 = t2; if (t == 0) return "MAX";  <BUGS> sum += size; <BUGE> return java.lang.String.format("%,dKB/s avg. %,dKB/s, sum=%,dbytes", (size / t), ((sum) / (t2 - (t0))), sum); } 
@java.lang.Override public void onComplete() { <BUGS> <BUGE> for (reactor.core.publisher.FluxGroupBy.UnicastGroupedFlux<K, V> g : groupMap.values()) { g.onComplete(); } groupMap.clear(); reactor.core.publisher.FluxGroupBy.GroupByMain.GROUP_COUNT.decrementAndGet(this); done = true; drain(); } 
@java.lang.Override public de.hshannover.f4.trust.visitmeta.gui.util.RestConnection copy() { <BUGS> de.hshannover.f4.trust.visitmeta.gui.util.RestConnection tmp = new de.hshannover.f4.trust.visitmeta.gui.util.RestConnection(getDataserviceConnection(), getConnectionName()); <BUGE> tmp.setUrl(getUrl()); tmp.setUsername(getUsername()); tmp.setPassword(getPassword()); tmp.setTruststorePath(getTruststorePath()); tmp.setTruststorePass(getTruststorePass()); tmp.setMaxPollResultSize(getMaxPollResultSize()); tmp.setAuthenticationBasic(isAuthenticationBasic()); tmp.setStartupConnect(isStartupConnect()); return tmp; } 
long nextUniqueTransaction(long time) { <BUGS> long id = time * (TcpReplicator.TIMESTAMP_FACTOR); <BUGE> for (; ;) { long old = transactionID.get(); if (old >= id) id = old + 1;  if (transactionID.compareAndSet(old, id)) break;  } return id; } 
@java.lang.Override public void addRow(ar.edu.ungs.business.dto.AutorizacionPracticaDTO item) { getElementos().add(item); <BUGS> java.lang.Object[] vector = new java.lang.Object[3]; <BUGE> vector[0] = item.getPractica().getCodigo(); vector[1] = item.getPractica().getNombre(); <BUGS> vector[2] = item.getCantidadSesiones(); <BUGE> super.addRow(vector); } 
@java.lang.Override public void forward(org.xbill.DNS.Message message, com.ahuazhu.soy.modal.ResponseContext response) throws java.io.IOException { org.xbill.DNS.Message answer = cache.getValue(new com.ahuazhu.soy.modal.QuestionKey(message)); if (answer != null) { <BUGS> send(message, response); <BUGE> return ; } if (forwarderStarted) { callBack.put(new com.ahuazhu.soy.modal.QueryKey(message), response); for (java.net.InetSocketAddress upstreamServer : upstreamServers) { datagramChannel.send(java.nio.ByteBuffer.wrap(message.toWire()), upstreamServer); } } } 
private void downloadFile(java.io.File posterFile, java.lang.String url) { try { java.net.URL posterUrl = new java.net.URL(url); java.nio.channels.ReadableByteChannel rbc = java.nio.channels.Channels.newChannel(posterUrl.openStream()); java.io.FileOutputStream fos = new java.io.FileOutputStream(posterFile); fos.getChannel().transferFrom(rbc, 0, java.lang.Long.MAX_VALUE); fos.close(); <BUGS> } catch (java.net.MalformedURLException e) { e.printStackTrace(); <BUGE> } catch (java.io.IOException e) { e.printStackTrace(); } } 
public MapPosition getPosition(DIR direction) { switch (direction) { case NORTH : <BUGS> return new MapPosition(x, ((y)--)); <BUGE> case SOUTH : <BUGS> return new MapPosition(x, ((y)++)); <BUGE> case EAST : <BUGS> return new MapPosition(((x)++), y); <BUGE> case WEST : <BUGS> return new MapPosition(((x)--), y); <BUGE> default : return null; } } 
public static void main(java.lang.String[] args) { javax.swing.JFrame frame = new javax.swing.JFrame(); <BUGS> graphics.Screen screen = new graphics.Screen("Bob", true, true); <BUGE> frame.add(screen); frame.setUndecorated(true); frame.setSize(graphics.GameEngine.screenSize); frame.setVisible(true); frame.setDefaultCloseOperation(javax.swing.JFrame.EXIT_ON_CLOSE); } 
@java.lang.Override <BUGS> protected void onCreate(android.os.Bundle savedInstanceState) { <BUGE> super.onCreate(savedInstanceState); setContentView(R.layout.activity_tictactoe); android.support.v7.widget.Toolbar toolbar = ((android.support.v7.widget.Toolbar) (findViewById(R.id.toolbar))); setSupportActionBar(toolbar); getSupportActionBar().setDisplayHomeAsUpEnabled(true); } 
private void save() throws com.hummingwave.Custom.WaveORMException { com.sample.Employee employee = new com.sample.Employee(); employee.setEmpNo("027"); employee.setName("Chaitra"); <BUGS> { try { employee.setBytes("Chaitra".getBytes("ISO-8859-15")); } catch (java.io.UnsupportedEncodingException e) { e.printStackTrace(); } } <BUGE> android.util.Log.d("BYTES", (("Chaitra".getBytes()) + "")); employee.update(); } 
@java.lang.Override public void onClick(android.view.View v) { mCurrentIndex = ((mCurrentIndex) + 1) % (mStations.length); mStartStopButton.setImageDrawable(playDrawable()); updateDropdownHeader(mCurrentIndex); playPressed = false; doneBuffering = false; <BUGS> if (player.isPlaying()) { player.stop(); <BUGE> } <BUGS> player.release(); <BUGE> setupPlayer(); updateViews(); clickPlayButton(); } 
public static models.Rate create(int score, java.lang.Long userId, java.lang.Long criteriaId, java.lang.Long projectId) { if ((models.Rate.findByUserIdAndProjectIdAndCriteriaId(userId, projectId, criteriaId)) == null) { models.Rate rate = new models.Rate(); rate.score = score; rate.userId = userId; rate.criteriaId = criteriaId; rate.projectId = projectId; rate.save(); return rate; } <BUGS> return null; <BUGE> } 
@java.lang.Override public void encodeData(org.mobicents.protocols.asn.AsnOutputStream asnOs) throws org.mobicents.protocols.ss7.cap.api.CAPException { if ((this.data) == null) throw new org.mobicents.protocols.ss7.cap.api.CAPException("data field must not be null");  <BUGS> if (((this.data.length) < 3) && ((this.data.length) > 11)) <BUGE> throw new org.mobicents.protocols.ss7.cap.api.CAPException("data field length must be from 3 to 11");  asnOs.writeOctetStringData(data); } 
@java.lang.Override public android.view.View getView(int position, android.view.View view, android.view.ViewGroup parent) { android.view.LayoutInflater inflater = context.getLayoutInflater(); android.view.View rowView = inflater.inflate(R.layout.list_single, null, true); android.widget.TextView txtTitle = ((android.widget.TextView) (rowView.findViewById(R.id.txt))); android.widget.ImageView imageView = ((android.widget.ImageView) (rowView.findViewById(R.id.img))); <BUGS> txtTitle.setText(web[position]); <BUGE> imageView.setImageResource(imageId[position]); return rowView; } 
private void updateLabels() { if ((game.mode) == "practice") { gamePanel.setCurrentWordCount(game.getWordCount()); } gamePanel.setCurrentWordLabel(game.currentWord, game.currentCorrectIndex); if ((game.difficulty) <= 2) { <BUGS> gamePanel.setCurrentTypedWordLabel(game.currentTypedWord, game.currentIndex, game.currentCorrectIndex); <BUGE> } } 
public void actionPerformed(java.awt.event.ActionEvent event) { try { hostServer = new CryptoServer(); hostServer.start(); setHostOptCompsTo(false); setStartCompsTo(false); <BUGS> repaint(); <BUGE> setWinSizeTo(hostScreenSize); setHostCompsTo(true); } catch (java.io.IOException e) { GuiUtils.PopUpMessages.errorMsg((("port " + (CryptoServer.port)) + " is already used!\nplease try using another port number.")); hostPortFieldOpt.requestFocus(); } } 
private static void validateSqlDatabaseNotFound(java.lang.String newDatabase) { try { <BUGS> sqlServerManager.sqlDatabases().getBySqlServer(com.microsoft.azure.management.sql.SqlServerOperationsTests.RG_NAME, com.microsoft.azure.management.sql.SqlServerOperationsTests.SQL_SERVER_NAME, com.microsoft.azure.management.sql.SqlServerOperationsTests.SQL_DATABASE_NAME); <BUGE> org.junit.Assert.assertTrue(false); } catch (com.microsoft.azure.CloudException exception) { org.junit.Assert.assertEquals(exception.getResponse().code(), 404); } } 
public void startProgram() { this.displayBanner(); java.lang.String playersName = this.getPlayersName(); byui.cit260.hobbit.model.Player player = byui.cit260.hobbit.control.ProgramControl.createPlayer(playersName); <BUGS> byui.cit260.hobbit.model.GoldPouch goldPouch = byui.cit260.hobbit.control.ProgramControl.createSmallPouch(); <BUGE> this.displayWelcomeMessage(player); byui.cit260.hobbit.view.MainMenuView mainMenu = new byui.cit260.hobbit.view.MainMenuView(); mainMenu.display(); } 
public fr.inria.soctrace.tools.ocelotl.core.queries.IteratorQueries.EventIterator getVariableIterator(java.util.List<fr.inria.soctrace.lib.model.EventProducer> eventProducers, java.util.List<fr.inria.soctrace.lib.search.utils.IntervalDesc> time, org.eclipse.core.runtime.IProgressMonitor monitor) throws fr.inria.soctrace.lib.model.utils.SoCTraceException, fr.inria.soctrace.tools.ocelotl.core.exceptions.OcelotlException { traceSearch = ((fr.inria.soctrace.tools.ocelotl.core.queries.OcelotlTraceSearch) (new fr.inria.soctrace.tools.ocelotl.core.queries.OcelotlTraceSearch(ocelotlParameters).initialize())); <BUGS> return traceSearch.getEventIterator(ocelotlParameters.getTrace(), ocelotlParameters.getTraceTypeConfig().getTypes(), time, null, monitor); <BUGE> } 
@java.lang.Override public void parseLine(java.lang.String line) { <BUGS> services.FavouriteQuoteImporter.LOGGER.debug(("Parsing line: {}" + line)); <BUGE> if (line.trim().isEmpty()) { return ; } java.util.regex.Matcher matcher = services.FavouriteQuoteImporter.PATTERN.matcher(line); while (matcher.find()) { services.quotes.Quote quote = assembleQuote(matcher); quoteDao.insertQuote(quote); return ; } } 
private void adjustAttemptsForConnectionManager() { if (shouldSetConnectionManager()) { com.android.server.telecom.CreateConnectionProcessor.CallAttemptRecord record = new com.android.server.telecom.CreateConnectionProcessor.CallAttemptRecord(mPhoneAccountRegistrar.getSimCallManager(), mAttemptRecords.get(0).targetPhoneAccount); <BUGS> com.android.server.telecom.Log.v(this, "setConnectionManager, changing %s -> %s", mAttemptRecords.get(0).targetPhoneAccount, record); <BUGE> mAttemptRecords.set(0, record); }else { com.android.server.telecom.Log.v(this, "setConnectionManager, not changing"); } } 
public void receiveCommit() { this.state = "commit"; logString("receivedCommit"); readInput(); <BUGS> retryCommit : try { <BUGE> java.lang.System.out.println(("aboutToSendAck:" + (this.state))); coordinator.receiveAck("commit", this.participantNum); } catch (java.lang.Exception e) { logString("coordinator.receiveAck('commit') Exception"); <BUGS> lookupCoordinator(); break retryCommit; <BUGE> } } 
public void run() { <BUGS> train.addHistory(station.getName(), context.getGameLogic().getPlayerManager().getTurnNumber()); <BUGE> java.lang.System.out.println(((("Added to history: passed " + (station.getName())) + " on turn ") + (context.getGameLogic().getPlayerManager().getTurnNumber()))); junctionFailure(station); collisions(station); obstacleCollision(station); } 
public int paga_reale_mazziere() { fiches = (fiches) - (puntata); if ((fiches) < 0) { perso = true; <BUGS> return (puntata) + ((fiches) + (puntata)); <BUGE> } return (puntata) * 2; } 
private void MouseButtonCallback(long window, int button, int state, int arg3) { java.lang.System.out.println(((((button + " ") + state) + " ") + arg3)); <BUGS> if (button == (org.lwjgl.glfw.GLFW.GLFW_MOUSE_BUTTON_1)) { <BUGE> mouse_down = state == 1; toInteract = world.closestEntity(current.getLocation(), 10.0F); } } 
public java.lang.Long next() { <BUGS> if (!(hasNext())) { throw new java.util.NoSuchElementException(); } <BUGE> long result = 0; while (result == 0) { <BUGS> <BUGE> result = puzzleStorage.puzzles[cursor]; (cursor)++; } return result; } 
@java.lang.Override public void done(com.parse.ParseUser user, com.parse.ParseException err) { if (user == null) { android.util.Log.d("MyApp", "Uh oh. The user cancelled the Facebook login."); <BUGS> <BUGE> }else if (user.isNew()) { android.util.Log.d("MyApp", "User signed up and logged in through Facebook!"); getUserDetailFromFB(); }else { startSaoLonguinho(); android.util.Log.d("MyApp", "User logged in through Facebook!"); }  } 
@java.lang.Override public void onTouchMove(com.google.gwt.event.dom.client.TouchMoveEvent event) { if (((initialX) == 0) && ((initialY) == 0)) { com.google.gwt.dom.client.Touch touch = event.getTouches().get(0); initialX = touch.getPageX(); initialY = touch.getPageY(); } <BUGS> com.gwtmobile.ui.client.utils.Utils.Console("touch move in tap recognizer"); <BUGE> } 
private com.smanzana.dungeonmaster.utils.StepList toStepList() { com.smanzana.dungeonmaster.utils.StepList out = new com.smanzana.dungeonmaster.utils.StepList(); <BUGS> for (com.smanzana.dungeonmaster.ui.app.swing.editors.StepField.RangeSegment seg : segments) { if (seg != null) out.addStep(seg.getMax(), seg.getValue());  } <BUGE> return out; } 
private void remap(wyautl.core.Automaton automaton, int from, int to) { for (int i = 0; i != (automaton.nStates()); ++i) { <BUGS> java.lang.System.out.println(("BEFORE: " + (automaton.get(i)))); <BUGE> automaton.get(i).remap(from, to); <BUGS> java.lang.System.out.println(("AFTER: " + (automaton.get(i)))); <BUGE> } } 
<BUGS> private static int calculateScore(java.util.ArrayList<PairTime> pairTimes) { <BUGE> int score = 0; for (int i = 0; i < (pairTimes.size()); i++) { score += pairTimes.get(i).getPair().getScore(); } return score; } 
public void push(org.arcueidarc.nekoarc.types.ArcObject obj) { for (; ;) { try { stack[((sp)++)] = obj; return ; } catch (java.lang.ArrayIndexOutOfBoundsException e) { <BUGS> <BUGE> stackgc(); if ((sp) >= (stack.length)) throw new org.arcueidarc.nekoarc.NekoArcException("stack overflow");  } } } 
private void updateJobOutput(java.lang.String uuid, com.kylinolap.job2.dao.JobOutputPO output) { try { <BUGS> if ((jobDao.getJobOutput(uuid)) != null) { jobDao.deleteJobOutput(uuid); } <BUGE> jobDao.addOrUpdateJobOutput(uuid, output); } catch (com.kylinolap.job2.exception.PersistentException e) { com.kylinolap.job2.service.DefaultJobService.logger.error(("fail to update job output id:" + uuid), e); throw new java.lang.RuntimeException(e); } } 
<BUGS> static int minimaxDecision(State state) { <BUGE> int action = 0; int v = -(Minimax.MAX_NUMBER); for (int a : Minimax.actions(state)) { int temp = Minimax.minValue(Minimax.result(state, a)); if (temp > v) { <BUGS> <BUGE> action = a; } } return action; } 
public void PressButton(int i) { if (com.kuna.ibeatcon_android.Controller.vb_feedback) { android.os.Vibrator v = ((android.os.Vibrator) (getSystemService(Context.VIBRATOR_SERVICE))); v.vibrate(100); SendData(pressKey[i]); <BUGS> android.util.Log.i("iBeatCon", (("Button " + i) + " Pressed with Vibe")); <BUGE> }else { SendData(pressKey[i]); <BUGS> android.util.Log.i("iBeatCon", (("Button " + i) + " Pressed")); <BUGE> } } 
public static java.lang.String getRedirectionPath(final org.fenixedu.bennu.core.domain.User user, final javax.servlet.http.HttpServletRequest request) { <BUGS> synchronized(org.fenixedu.ulisboa.specifications.authentication.ULisboaAuthenticationRedirector.handlers) { for (final org.fenixedu.ulisboa.specifications.authentication.IULisboaRedirectionHandler iuLisboaRedirectionHandler : org.fenixedu.ulisboa.specifications.authentication.ULisboaAuthenticationRedirector.handlers) { if (iuLisboaRedirectionHandler.isToRedirect(user, request)) { return iuLisboaRedirectionHandler.redirectionPath(user, request); } <BUGE> } } return null; } 
<BUGS> public java.lang.Integer getPortForBridge(java.lang.Integer nodeid) { <BUGE> if (nodeid == null) return null;  <BUGS> if (m_macsOnSegment.isEmpty()) { for (org.opennms.netmgt.model.topology.BridgePort link : m_portsOnSegment) { if ((link.getNode().getId().intValue()) == (nodeid.intValue())) return link.getBridgePort();  } return null; <BUGE> } return null; } 
@java.lang.Override protected void onSizeChanged(int w, int h, int oldw, int oldh) { super.onSizeChanged(w, h, oldw, oldh); mProgressDrawerManager.onSizeChanged(w, h); mShapeDrawerManager.onSizeChanged(w, h, getPaddingLeft(), getPaddingTop(), getPaddingRight(), getPaddingBottom()); mBlurManager.onSizeChanged(w, h); <BUGS> this.mIsBlurred = false; onDrawableChanged(false); <BUGE> } 
@org.springframework.security.access.prepost.PreAuthorize(value = "hasAuthority('ADMIN')") @org.springframework.web.bind.annotation.RequestMapping(value = "/admin/userTask/{userName}", params = "userDelete") public java.lang.String handleUserDelete(@org.springframework.web.bind.annotation.PathVariable(value = "userName") java.lang.String userName, @org.springframework.web.bind.annotation.ModelAttribute(value = "userDTO") com.fithub.domain.UserDTO userDTO, org.springframework.web.servlet.mvc.support.RedirectAttributes redirectAttributes) { com.fithub.controller.UserTasksController.LOG.debug("Attempting to delete user={}", userDTO.getUserName()); boolean isUserDelete = userService.deleteUserByUsername(userDTO.getUserName()); com.fithub.controller.UserTasksController.LOG.debug("User was delete successfuly ?={}", isUserDelete); <BUGS> redirectAttributes.addFlashAttribute("userDeleteSuccess", "enabled"); <BUGE> return "redirect:/admin/userTaskSuccess"; } 
@java.lang.Override public void display(com.badlogic.gdx.graphics.g2d.Batch batch) { if (assetNeedUpdate) assetManager();  chapter1Display(batch); <BUGS> renderSharedAssets(batch); <BUGE> if (!(viewingSettings)) { switch (chapterSection) { case 1 : drawBG(batch); break; } } if (ansCorrect) { fourPicsOneWordUtil.displayCorrect(batch); Gdx.input.setOnscreenKeyboardVisible(false); } drawQuizResult(batch); } 
private static org.apache.jmeter.control.ReplaceableController ensureReplaceableControllerIsLoaded(org.apache.jmeter.testelement.TestElement item) { org.apache.jmeter.control.ReplaceableController rc; <BUGS> if (item.getClass().getName().equals("org.apache.jmeter.control.ModuleController")) { <BUGE> rc = ((org.apache.jmeter.control.ReplaceableController) (item)); }else { rc = ((org.apache.jmeter.control.ReplaceableController) (item.clone())); } return rc; } 
public Item removeLast() { <BUGS> Item item = array[last]; <BUGE> if (item == null) { throw new java.util.NoSuchElementException(); } <BUGS> array[last] = null; (last)--; <BUGE> (N)--; <BUGS> <BUGE> subSize(); return item; } 
public java.sql.Connection estaConnection() throws com.info.ghiny.examsystem.tools.ProcessException { <BUGS> java.sql.Connection con = null; <BUGE> try { java.lang.Class.forName(curDriver); con = java.sql.DriverManager.getConnection(curAddress); } catch (java.lang.Exception err) { throw new com.info.ghiny.examsystem.tools.ProcessException((("FATAL: " + (err.getMessage())) + "\nPlease Consult Developer"), com.info.ghiny.examsystem.tools.ProcessException.FATAL_MESSAGE, com.info.ghiny.examsystem.tools.IconManager.WARNING); } return con; } 
@javax.ws.rs.GET @javax.ws.rs.Path(value = "/") @javax.ws.rs.Produces(value = javax.ws.rs.core.MediaType.TEXT_HTML) public javax.ws.rs.core.Response services() { <BUGS> java.lang.String rendered = soyService.renderPlugin(pluginRegion, com.google.common.base.Optional.of(new com.jivesoftware.os.upena.deployable.region.ConfigPluginRegion.ConfigPluginRegionInput("", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""))); <BUGE> return javax.ws.rs.core.Response.ok(rendered).build(); } 
@java.lang.Override public void onFailure(retrofit2.Call<com.sdsmdg.bookshareapp.BSA.api.models.LocalBooks.BookList> call, java.lang.Throwable t) { android.util.Log.d("GA_search", ("searchOnFail " + (t.toString()))); refreshLayout.setRefreshing(false); <BUGS> android.transition.TransitionManager.beginDelayedTransition(rootView); <BUGE> progressBar.setVisibility(View.GONE); innerLayout.getForeground().setAlpha(0); l1.setVisibility(View.GONE); l2.setVisibility(View.GONE); } 
public final void execute(final rx.functions.Action1<? super Result> onNext, final rx.functions.Action1<java.lang.Throwable> onError, Param param) { viper.Interactor.checkNotNull(onNext, "onNext"); viper.Interactor.checkNotNull(onError, "onError"); execute(new rx.Subscriber<Result>() { @java.lang.Override public void onCompleted() { }  @java.lang.Override public void onError(final java.lang.Throwable e) { onError.call(e); }  @java.lang.Override public void onNext(final Result result) { onNext.call(result); } <BUGS> }); <BUGE> } 
protected void draw(android.graphics.Canvas canvas) { <BUGS> android.util.Log.i("ttangliang", ("isCanvasAcc = " + (canvas.isHardwareAccelerated()))); <BUGE> if ((center) == null) { return ; } switch (style) { case RECTANGLE : break; case CIRCLE : canvas.drawCircle(center.x, center.y, radius, paint); break; } } 
public org.joda.time.Duration getEstimatedTime(@android.support.annotation.NonNull org.cook_e.data.Step s) { org.cook_e.data.Objects.requireNonNull(s, "step must not be null"); int index = searchStep(s.hashCode()); <BUGS> if (index != (-1)) { <BUGE> long time = ((long) ((s.getTime().getMillis()) * (org.cook_e.data.TimeLearner.weightList.get(index).timeWeight))); return new org.joda.time.Duration(time); } return s.getTime().toDuration(); } 
private void initLoaders() { loaders = new java.util.TreeSet<org.owasp.esapi.configuration.AbstractPrioritizedPropertyLoader>(); try { loaders.add(org.owasp.esapi.configuration.EsapiPropertyLoaderFactory.createPropertyLoader(EsapiConfiguration.OPSTEAM_ESAPI_CFG)); } catch (java.lang.Exception e) { <BUGS> java.lang.System.err.println(e.getMessage()); <BUGE> } try { loaders.add(org.owasp.esapi.configuration.EsapiPropertyLoaderFactory.createPropertyLoader(EsapiConfiguration.DEVTEAM_ESAPI_CFG)); } catch (java.lang.Exception e) { <BUGS> java.lang.System.err.println(e.getMessage()); <BUGE> } } 
@java.lang.Override protected java.lang.Integer doInBackground(java.lang.Void... voids) { publishProgress(R.string.file_migration_preparing); com.owncloud.android.lib.common.utils.Log_OC.stopLogging(); <BUGS> boolean[] syncStates = new boolean[0]; <BUGE> try { publishProgress(R.string.file_migration_saving_accounts_configuration); syncStates = saveAccountsSyncStatus(); publishProgress(R.string.file_migration_waiting_for_unfinished_sync); stopAccountsSyncing(); waitForUnfinishedSynchronizations(); } finally { publishProgress(R.string.file_migration_restoring_accounts_configuration); restoreAccountsSyncStatus(syncStates); } com.owncloud.android.lib.common.utils.Log_OC.startLogging(mStorageTarget); return 0; } 
@org.junit.Before public void setUp() throws java.lang.Exception { prefs = net.sf.jabref.preferences.JabRefPreferences.getInstance(); net.sf.jabref.model.metadata.MetaData metaData = new net.sf.jabref.model.metadata.MetaData(); context = new net.sf.jabref.model.database.BibDatabaseContext(new net.sf.jabref.model.database.BibDatabase(), metaData, new net.sf.jabref.model.Defaults()); context.setDatabaseFile(testFolder.newFile("test.bib")); <BUGS> prefs.putBoolean(JabRefPreferences.BIB_LOC_AS_PRIMARY_DIR, true); <BUGE> entry = new net.sf.jabref.model.entry.BibEntry(); entry.setCiteKey("Toot"); } 
public void sleep() { destroyInverseKinematicsRunnable(); <BUGS> <BUGE> if ((scheduled) == null) { if (us.ihmc.darpaRoboticsChallenge.networkProcessor.kinematicsToolboxModule.KinematicsToolboxModule.DEBUG) us.ihmc.tools.io.printing.PrintTools.error(this, "There is no task running.");  return ; } scheduled.cancel(true); scheduled = null; <BUGS> activeMessageSource.set(null); <BUGE> } 
public void resetTo(dyvil.tools.parsing.token.IToken token) { this.tokens.jump(token); <BUGS> if ((this.reportedMarkers) >= 0) { this.markers.remove(this.reportedMarkers); } <BUGE> if ((this.splitTokens) == null) { return ; } for (dyvil.tools.parsing.token.IToken splitToken : this.splitTokens) { splitToken.prev().setNext(splitToken); splitToken.next().setPrev(splitToken); } this.splitTokens.clear(); } 
@org.junit.Test public void testClassWideAttributeInAnonymousClass() throws java.lang.Throwable { @com.orhanobut.tracklytics.FixedAttribute(key = "key1", value = "value1") class Foo { @com.orhanobut.tracklytics.FixedAttribute(key = "key2", value = "value2") class Inner { @com.orhanobut.tracklytics.TrackEvent(value = "title") public void bar() { } } } invokeMethod(Foo.Inner.class, "bar"); <BUGS> com.orhanobut.tracklytics.AssertTracker.assertTrack(tracker).event("title").noTags().attribute("key1", "value1").attribute("key2", "value2").noSuperAttributes().noFilters(); <BUGE> } 
@java.lang.Override public void set(java.lang.Boolean value) { java.util.Collection<java.lang.Object> coll = container.get(); if (value) { if (coll != null) { if (!(coll.contains(item))) { coll.add(item); } }else { <BUGS> container.set(org.rapidoid.util.U.list(item)); <BUGE> } }else { if (coll != null) { coll.remove(item); } } <BUGS> <BUGE> } 
<BUGS> public static double noteToFreq(int key) { <BUGE> int note = key % (edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE); int octave = (key / (edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE)) - 1; return (edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES[note]) * (java.lang.Math.pow(2.0, (((double) (octave)) - 1.0))); } 
<BUGS> void register(com.kk.bus.Bus bus, java.lang.Object objectToRegister, java.util.Set<java.lang.reflect.Method> subscriberMethods, com.kk.bus.DeliveryContext deliveryContext) { synchronized(this) { com.kk.bus.EventDeliverer eventDeliverer = mObjectDeliverers.get(objectToRegister); if (eventDeliverer == null) { eventDeliverer = new com.kk.bus.EventDeliverer(bus, objectToRegister, deliveryContext); mObjectDeliverers.put(objectToRegister, eventDeliverer); } eventDeliverer.setSubscriberMethods(subscriberMethods); <BUGE> } <BUGS> <BUGE> } 
private void addCanvasToRootPane(javafx.scene.image.Image image) { <BUGS> <BUGE> rootPane.setPrefWidth(image.getWidth()); rootPane.setPrefHeight(image.getHeight()); rootPane.getChildren().add(canvas); javafx.scene.layout.StackPane.setAlignment(canvas, javafx.geometry.Pos.TOP_CENTER); } 
public static void teleportPlayer(org.bukkit.entity.Player player, org.bukkit.Location location, org.bukkit.plugin.java.JavaPlugin plugin) { int backupTask; player.teleport(location); <BUGS> backupTask = plugin.getServer().getScheduler().scheduleAsyncDelayedTask(plugin, new net.madmanmarkau.MultiHome.ChunkResendTask(location), (1 * 20)); <BUGE> if (backupTask == (-1)) { net.madmanmarkau.MultiHome.Messaging.logSevere("Failed to create chunk resend schedule!", plugin); } } 
@java.lang.Override public void process(org.apache.camel.Exchange exchange) throws java.lang.Exception { <BUGS> java.lang.System.out.println("TEST"); <BUGE> java.lang.String json = exchange.getIn().getBody(java.lang.String.class); com.workflow2015.common.helper.RouteRequest routeRequest = JsonHelper.gson.fromJson(json, com.workflow2015.common.helper.RouteRequest.class); java.lang.String data = this.getDataFromSource(routeRequest); this.pushDataToQueue(data); } 
@java.lang.Override public void changed(javafx.beans.value.ObservableValue<? extends java.lang.String> observable, java.lang.String oldValue, java.lang.String newValue) { if (newValue.matches("\\d*")) { <BUGS> processScheduler.logic.Message.PACK_SIZE = java.lang.Integer.parseInt(newValue); <BUGE> }else { intensity.setText(oldValue); } processScheduler.logic.Strategy.TICKSFORMESSAGE = java.lang.Integer.parseInt(intensity.getText()); } 
<BUGS> private static java.lang.String getUniqueTitle(net.minecraft.world.World world) { <BUGE> java.util.List<net.torocraft.nemesissystem.registry.Nemesis> nemeses = net.torocraft.nemesissystem.registry.NemesisRegistryProvider.get(world).list(); java.lang.String title = net.torocraft.nemesissystem.util.NemesisBuilder.getRandomTitle(); while (!(net.torocraft.nemesissystem.util.NemesisBuilder.isUniqueTitle(title, nemeses))) { title = net.torocraft.nemesissystem.util.NemesisBuilder.getRandomTitle(); } return title; } 
private java.lang.String parseHeadline(com.ximpleware.VTDNav vn) throws com.ximpleware.NavException { edu.jhu.agiga.AgigaSentenceReader.require(vn.matchElement(AgigaConstants.DOC)); <BUGS> if (!(vn.toElement(VTDNav.FIRST_CHILD, AgigaConstants.HEADLINE))) { <BUGE> edu.jhu.agiga.AgigaDocumentReader.log.finer("No headline found"); return null; } return vn.toString(vn.getText()).trim(); } 
protected void onRetrieveInstanceState(android.os.Bundle savedInstanceState) { if (savedInstanceState != null) { stats = savedInstanceState.getBundle("champData"); <BUGS> <BUGE> }else { android.os.Bundle extras = getIntent().getExtras(); isHeader = extras.getBoolean("isHeader"); stats = extras.getBundle("champData"); } } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_nearby); <BUGS> getSupportActionBar().setDisplayHomeAsUpEnabled(true); <BUGE> registerLocationManager(); android.support.v4.app.FragmentTransaction ft = getSupportFragmentManager().beginTransaction(); fr.free.nrw.commons.nearby.NearbyListFragment fragment = new fr.free.nrw.commons.nearby.NearbyListFragment(); ft.add(R.id.container, fragment); ft.commit(); } 
@java.lang.Override public void changeState(com.example.alexander_topilskii.internetradio.models.database.Station station) { currentState = State.IS_WAIT; <BUGS> listener.setPlayerStates((-1), State.IS_WAIT); if ((mediaPlayer) == null) initPlayer(station.getSource()); else { if (mediaPlayer.isPlaying()) { pause(); }else { play(); <BUGE> } } } 
public static void removeEmployee(int id) { StaffManager.Company.employeeList.remove((id - 1)); for (int i = id - 1; i < (StaffManager.Company.employeeList.size()); i++) { StaffManager.Company.employeeList.get(i).setId((i + 1)); <BUGS> Employee.nextId -= 1; <BUGE> } } 
public int render() { Gdx.gl.glClearColor(0.2F, 0.2F, 0.2F, 1); Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT); stage.act(java.lang.Math.min(Gdx.graphics.getDeltaTime(), (1 / 30.0F))); stage.draw(); <BUGS> if (finished) return num; else return -1;  <BUGE> } 
<BUGS> protected boolean isHovered(int mouseX, int mouseY) { <BUGE> return (((mouseX >= (xPosition)) && (mouseX <= ((xPosition) + (width)))) && (mouseY >= (yPosition))) && (mouseY <= ((yPosition) + (height))); } 
private void signout() { android.content.SharedPreferences sharedPreferences = android.preference.PreferenceManager.getDefaultSharedPreferences(getApplicationContext()); android.content.SharedPreferences.Editor editor = sharedPreferences.edit(); editor.putBoolean(LogInActivity.IS_LOGGED_IN_STR, false); editor.putString(LogInActivity.USER_LOGGED_IN_STR, ""); editor.putString(LogInActivity.USER_PASSWORD_STR, ""); editor.commit(); <BUGS> android.content.Intent startMainActivityIntent = new android.content.Intent(this, com.example.beekill.matdienapp.MainActivity.class); startActivity(startMainActivityIntent); <BUGE> finish(); } 
public void update() { pendingTime.set(db.getServerSettingInt("pendingTime")); notificationInterval.set(db.getServerSettingInt("notificationInterval")); <BUGS> debuggingStatus.set(false); <BUGE> notifications = db.getNotifications(); triggers = ts.getConfiguredDevices(db.getTriggerDevices()); } 
public void onClick(com.gwtext.client.widgets.Button button, com.gwtext.client.core.EventObject e) { com.gwtext.client.widgets.tree.DefaultSelectionModel dsm = ((com.gwtext.client.widgets.tree.DefaultSelectionModel) (entityTreePanel.getSelectionModel())); com.gwtext.client.widgets.tree.TreeNode selectedNode = dsm.getSelectedNode(); if ((selectedNode.getAttributeAsObject("frame")) != null) { <BUGS> edu.stanford.bmir.protege.web.shared.xd.data.entityframes.AbstractOntologyEntityFrame selectedFrame = ((edu.stanford.bmir.protege.web.shared.xd.data.entityframes.AbstractOntologyEntityFrame) (selectedNode.getAttributeAsObject("frame"))); edWindow.loadFrameAndShow(selectedFrame); <BUGE> } } 
public void setValue(fd2editor.BaseSeg.VALUE whichValue, int sValue) { <BUGS> sValue = sValue & 134217727; <BUGE> if (sValue > (max)) { sValue = max; } if (sValue < (min)) { sValue = min; } switch (whichValue) { case DEFAULT : this.defaultValue = sValue; break; case RECOMMEND : this.recommendValue = sValue; break; case CURRENT : this.value = sValue; updateSegBytes(); break; default : break; } } 
public void addTransition(java.lang.String name, java.lang.Object source, java.lang.Object target) { graph.getModel().beginUpdate(); try { <BUGS> com.mxgraph.model.mxCell edge = ((com.mxgraph.model.mxCell) (graph.insertEdge(root, null, name, source, target))); <BUGE> } finally { graph.getModel().endUpdate(); } } 
public void renderCreate(org.eclipse.rap.clientscripting.internal.ClientListenerBinding binding, org.eclipse.rwt.internal.protocol.IClientObject clientObject) { clientObject.create(org.eclipse.rap.clientscripting.internal.ClientListenerBindingSynchronizer.TYPE); clientObject.set("listener", org.eclipse.rap.clientscripting.internal.ClientListenerBindingSynchronizer.getId(binding.getListener())); clientObject.set("targetObject", org.eclipse.rwt.lifecycle.WidgetUtil.getId(binding.getWidget())); <BUGS> clientObject.set("eventType", binding.getEventType()); <BUGE> } 
@java.lang.Override public boolean removeUserFromResourcePermission(java.lang.String policyId, java.lang.String groupName, java.lang.String accountName) { java.lang.String[] policyIds = policyId.split(":"); <BUGS> boolean userRemovedFromHDFSPolicy = this.hdfsAdminService.removeUserFromResourcePermission(policyIds[0], groupName, accountName); boolean userRemovedFromYarnPolicy = this.yarnCommonService.removeUserFromQueuePermission(policyIds[1], groupName, accountName); <BUGE> return userRemovedFromYarnPolicy && userRemovedFromHDFSPolicy; } 
@java.lang.Override public java.util.List<com.hearthsim.util.HearthActionBoardPair> playTurn(int turn, com.hearthsim.model.BoardModel board, com.hearthsim.util.factory.BoardStateFactoryBase factory) throws com.hearthsim.exception.HSException { if (((baseNode) == null) || ((!(baseNode.turn.data_.equals(board))) && ((baseNode.turnNum) != turn))) { baseNode = new com.hearthsim.util.tree.MCTSTreeNode(new com.hearthsim.util.tree.HearthTreeNode(board), turn); } com.hearthsim.util.tree.MCTSTreeNode retNode = baseNode.selectAction(); <BUGS> board = retNode.turn.data_; <BUGE> return retNode.getTurnResults(); } 
<BUGS> public int xToPixel(double x, mesquite.lib.MesquiteChart chart) { <BUGE> tempNum.setValue(x); int fieldWidth = chart.getFieldWidth(); int margin = chart.getMargin(); <BUGS> return (margin + (tempNum.setWithinBounds(minX, maxX, ((fieldWidth - (2 * margin)) - (markerWidth))))) - (chart.getXPixelBase()); <BUGE> } 
public void handleResetButtonAction(javafx.event.ActionEvent event) throws java.io.IOException { java.lang.System.out.println("reseting level"); int i; try { i = java.lang.Integer.parseInt(levelNumber.getText()); } catch (java.lang.Exception e) { return ; } <BUGS> <BUGE> resetButtons(); resetBoard(i); resetFields(i); <BUGS> resetPieces(); <BUGE> } 
private static soot.JastAddJ.PathPart createPathPart(java.lang.String s) { try { java.io.File f = new java.io.File(s); if (f.isDirectory()) return new soot.JastAddJ.FolderPart(f); else if (f.isFile()) <BUGS> return new soot.JastAddJ.ZipFilePart(new java.util.zip.ZipFile(f)); <BUGE>   } catch (java.io.IOException e) { } return null; } 
@org.junit.Test public void whenCheckingFitnessFeatureThrowsException_thenCorrespondingFitnessFeatureShouldBeFalse() { org.corpus_tools.pepper.modules.PepperModule module = org.mockito.Mockito.mock(org.corpus_tools.pepper.modules.PepperModule.class); org.mockito.Mockito.when(module.getDesc()).thenThrow(new java.lang.RuntimeException()); <BUGS> org.assertj.core.api.Assertions.assertThat(new org.corpus_tools.pepper.core.ModuleFitnessChecker(null).checkFitness(module).getFitness(FitnessFeature.HAS_NAME)).isEqualTo(false); <BUGE> } 
@java.lang.Override public java.lang.String preLogin(javax.servlet.http.HttpServletRequest request) { org.shaolin.vogerp.commonmodel.ICaptcherService service = IServerServiceManager.INSTANCE.getService(org.shaolin.vogerp.commonmodel.ICaptcherService.class); org.shaolin.vogerp.commonmodel.be.ICaptcha captcha = service.getItem(service.generateOne()); <BUGS> javax.servlet.http.HttpSession session = request.getSession(true); <BUGE> session.setAttribute(WebflowConstants.USER_TOKEN, captcha.getAnswer()); return captcha.getQuestion(); } 
public boolean borrowBook(Library lib, java.lang.String title) { if (lib.bookList.containsKey(title)) { borrowedBooks.add(lib.bookList.get(title).get(0)); lib.bookList.get(title).remove(0); return true; }else { <BUGS> java.lang.System.out.println("Book not Found"); <BUGE> return false; } } 
public void cfgSlaves(java.util.List<distrib.hadoop.host.Host> hosts) { cmds.add(cfgSlaves("cat /dev/null >")); <BUGS> cmds.add(cfgEnv((("echo '" + (distrib.hadoop.cluster.Spark.COMMENT_START)) + "' >>"))); <BUGE> for (distrib.hadoop.host.Host s : hosts) { cmds.add(cfgSlaves((("echo " + (s.getHostName())) + " >>"))); } <BUGS> cmds.add(cfgEnv((("echo '" + (distrib.hadoop.cluster.Spark.COMMENT_END)) + "' >>"))); <BUGE> } 
private static java.lang.String prepareMessage(java.lang.String messageCode) { <BUGS> <BUGE> java.lang.String message; if ((java.lang.Integer.parseInt(messageCode)) > 4) { message = "nowych orzeczeń"; }else if ((java.lang.Integer.parseInt(messageCode)) > 1) { message = "nowe orzeczenia"; }else { message = "nowe orzeczenie"; }  return message; } 
public static final void updatePlayer(net.minecraft.entity.player.EntityPlayer player) { if (player instanceof net.minecraft.entity.player.EntityPlayerMP) { net.minecraft.entity.player.EntityPlayerMP playerMP = ((net.minecraft.entity.player.EntityPlayerMP) (player)); net.ci010.attributesmod.properties.Attributes.agility.upgrade(playerMP); net.ci010.attributesmod.properties.Attributes.endurance.upgrade(playerMP); net.ci010.attributesmod.properties.Attributes.power.upgrade(playerMP); <BUGS> net.ci010.attributesmod.network.PacketDispatcher.sendTo(new net.ci010.attributesmod.network.SynAttributesMessage(playerMP), playerMP); <BUGE> } } 
@java.lang.Override public void onSuccess(final java.lang.Float volume) { <BUGS> if (volume <= 0.0) { <BUGE> com.connectsdk.core.Util.postSuccess(listener, null); }else { <BUGS> float newVolume = ((float) (volume - 0.01)); if (newVolume < 0.0) newVolume = ((float) (0.0)); <BUGE>  setVolume(newVolume, listener); com.connectsdk.core.Util.postSuccess(listener, null); } } 
@org.junit.Test public void doListRecurseTest() throws java.lang.Exception { java.util.Map m = new java.util.LinkedHashMap(); java.util.List a = new java.util.ArrayList(); m.put("b", "c"); m.put("a", a); a.add("Hello"); a.add(a); a.add(m); <BUGS> <BUGE> java.lang.String json = new ru.yandex.strictweb.ajaxtools.presentation.JsonRefPresentation().toString(a); java.lang.System.out.println(json); } 
@java.lang.Override public void run() { try { <BUGS> synchronized(this) { <BUGE> trafficLightsView.changeLight(TrafficLightsView.Light.RED); <BUGS> java.lang.Thread.sleep(this.offset); while (!(java.lang.Thread.interrupted())) { trafficLightsView.changeLight(TrafficLightsView.Light.GREEN); java.lang.Thread.sleep(greenLightDuration); trafficLightsView.changeLight(TrafficLightsView.Light.RED); java.lang.Thread.sleep(redLightDuration); } } <BUGE> } catch (java.lang.InterruptedException ex) { java.lang.System.out.println("Traffic lights modelling stopped."); } } 
@java.lang.Override public void onCancel() { android.util.Log.i("Cancel", "Canceled"); try { android.util.Log.i("Webview Title: ", webview.getTitle()); } catch (java.lang.Exception e) { android.util.Log.i("webview.getTitle(): ", e.toString()); } <BUGS> bringBackWebView(); <BUGE> } 
@java.lang.Override public void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); if (getArguments().containsKey(org.shingo.shingoeventsapp.ui.events.EventDetailFragment.ARG_ITEM_ID)) { org.shingo.shingoeventsapp.ui.events.EventDetailFragment.mEvent_id = getArguments().getString(org.shingo.shingoeventsapp.ui.events.EventDetailFragment.ARG_ITEM_ID); mEvent = Events.EVENT_MAP.get(org.shingo.shingoeventsapp.ui.events.EventDetailFragment.mEvent_id); <BUGS> org.shingo.shingoeventsapp.api.InitLoader loader = new org.shingo.shingoeventsapp.api.InitLoader(org.shingo.shingoeventsapp.ui.events.EventDetailFragment.mEvent_id); <BUGE> loader.load(); } } 
private void runMission() { <BUGS> this.currentStatus = main.java.game.ResistanceGame.GameStatus.AWAITING_MISSION_RESULT; <BUGE> this.missionResult = new java.util.HashMap<>(); main.java.game.GameMessages.sendVoteResults(this.channel, this.voteTally); try { java.lang.Thread.sleep(5000); } catch (java.lang.InterruptedException e) { e.printStackTrace(); } if (this.voteResult(this.voteTally)) { <BUGS> main.java.game.GameMessages.sendMissionIntro(this.channel, this.currentMission); <BUGE> }else { this.nextRound(); } } 
public void input() throws java.io.IOException { java.io.BufferedReader br = new java.io.BufferedReader(new java.io.InputStreamReader(java.lang.System.in)); java.lang.System.out.println("Enter data"); bno = java.lang.Integer.parseInt(br.readLine()); phno = java.lang.Integer.parseInt(br.readLine()); name = br.readLine(); days = java.lang.Integer.parseInt(br.readLine()); <BUGS> charge = java.lang.Integer.parseInt(br.readLine()); <BUGE> } 
public void addFile(java.lang.String fileName, org.sem8.ds.rest.resource.NodeResource node) { java.util.List<org.sem8.ds.rest.resource.NodeResource> temp; <BUGS> temp = this.fileMap.get(node); <BUGE> if (temp != null) { temp.add(node); }else { temp = new java.util.ArrayList<org.sem8.ds.rest.resource.NodeResource>(); temp.add(node); this.fileMap.put(fileName, temp); } } 
<BUGS> @java.lang.Override public boolean checkImpl(wjtoth.cyclicstablematching.PreferenceSystem preferenceSystem) { for (wjtoth.cyclicstablematching.Matching matching : matchings) { wjtoth.cyclicstablematching.MatchingPS mathcingPS = new wjtoth.cyclicstablematching.MatchingPS(matching, preferenceSystem); if ((mathcingPS.size()) == 0) { continue; } boolean isInternallyBlocked = mathcingPS.isInternallyBlocked(); if (isInternallyBlocked) { return false; } java.util.List<java.util.List<java.lang.Integer>> potentialBlocks = mathcingPS.firstOrderDissatisfied(); if (checkImpl(potentialBlocks, mathcingPS, preferenceSystem)) { return true; } <BUGE> } return false; } 
private java.lang.String _revert(java.lang.String str) { java.lang.String s = ""; int len = str.length(); for (int i = 0; i < len; i++) { <BUGS> s += str.charAt(str.charAt(((len - 1) - i))); <BUGE> } return s; } 
@java.lang.Override public void onCompletion(org.apache.kafka.clients.producer.RecordMetadata metadata, java.lang.Exception exception) { if (exception == null) { org.apache.kafka.common.TopicPartition tp = new org.apache.kafka.common.TopicPartition(metadata.topic(), metadata.partition()); offsets.put(tp, metadata.offset()); }else { <BUGS> org.apache.kafka.streams.processor.internals.RecordCollector.log.error("Error sending record: ", exception); <BUGE> } } 
public java.lang.String runNode(java.lang.String input) throws SoFTlib.SoFTException { int index = de.unidue.stud.maha.Main.getInputIndex(myChar()); <BUGS> int zahl = java.lang.Integer.valueOf(SoFTlib.Helper.words(input, 1, index, 1)); <BUGE> java.lang.String maskierer = de.unidue.stud.maha.Main.getMaskierer(); form('e', zahl).send(maskierer); return "0"; } 
public void unaryOp(int o) { java.lang.String op; switch (o) { default : case org.squiddev.cobalt.Lua.OP_UNM : op = "neg"; break; <BUGS> <BUGE> case org.squiddev.cobalt.Lua.OP_NOT : op = "not"; <BUGS> break; case org.squiddev.cobalt.Lua.OP_LEN : op = "length"; <BUGE> break; } main.visitMethodInsn(org.squiddev.cobalt.luajc.compilation.INVOKESTATIC, org.squiddev.cobalt.luajc.compilation.CLASS_OPERATION, op, (((("(" + (TYPE_STATE)) + (TYPE_LUAVALUE)) + ")") + (TYPE_LUAVALUE)), false); } 
public java.util.Map<java.lang.Integer, int[]> getListOfCoordinates() { java.util.Map<java.lang.Integer, int[]> listOfCoordinates = new java.util.HashMap<>(); int key = 0; <BUGS> for (int y = 0; y < (Game.Controllers.BoardController.BOARDSIZE); y++) { for (int x = 0; x < (Game.Controllers.BoardController.BOARDSIZE); x++) { <BUGE> listOfCoordinates.put(key, new int[]{ x , y }); key++; } } return listOfCoordinates; } 
private void processPicture(javax.servlet.http.Part picture, com.lavalloisir.beans.User user) { java.lang.String pictureName = null; try { pictureName = getFileName(picture); validPictureName(pictureName); writeFile(picture, pictureName); <BUGS> <BUGE> } catch (java.lang.Exception e) { setError(com.lavalloisir.forms.RegistrationForm.FIELD_PICTURE, e.getMessage()); } <BUGS> java.lang.String localPath = path.substring(path.indexOf("/img")); user.setPicture((("/Lavalloisir" + localPath) + pictureName)); <BUGE> } 
@java.lang.Override public void replaceAllTextOnPage(int pageNumber, java.lang.String textToAdd) { <BUGS> if ((pageNumber < 0) || (pageNumber >= (this.pages.length))) { <BUGE> java.lang.System.out.println("Invalid page number."); return ; } if ((textToAdd == null) || (textToAdd.equals(""))) { java.lang.System.out.println("Invalid text for adding."); return ; } this.pages[(pageNumber - 1)].deleteText(); this.pages[(pageNumber - 1)].addText(textToAdd); } 
private void setTokens(com.mcnaughton.client.spotifyModels.AccessResponse response) { com.mcnaughton.client.SpotifyClient.accessToken = response.getAccess_token(); <BUGS> com.mcnaughton.client.SpotifyClient.refreshToken = response.getRefresh_token(); <BUGE> com.mcnaughton.client.SpotifyClient.tokenType = response.getToken_type(); com.mcnaughton.client.SpotifyClient.expireDate = org.joda.time.DateTime.now().plusSeconds(response.getExpires_in()); } 
<BUGS> protected static org.matheclipse.core.interfaces.IExpr sortResults(org.matheclipse.core.interfaces.IAST resultList) { <BUGE> for (int i = 1; i < (resultList.size()); i++) { if (resultList.get(i).isList()) { org.matheclipse.core.eval.EvalAttributes.sort(((org.matheclipse.core.interfaces.IAST) (resultList.get(i)))); } } return resultList; } 
@java.lang.Override public T invertedCumulativeProbability(double cumulativeProbability) { com.google.common.base.Preconditions.checkArgument(((0 < cumulativeProbability) && (cumulativeProbability <= 1.0))); long card = domain.cardinality(); long min = domain.ordinal(domain.min()); <BUGS> long ordinal = ((long) (java.lang.Math.ceil((((cumulativeProbability * card) + min) - 1)))); <BUGE> return domain.value(ordinal); } 
private void writeData() { try (java.io.BufferedWriter writer = new java.io.BufferedWriter(new java.io.OutputStreamWriter(new java.io.FileOutputStream(file, true), "UTF-8"))) { <BUGS> writer.write((((de.neffez.timetrack.util.DateUtil.getTodayFormatted(TimeTrackConstants.DE_DATE)) + " ") + (timeSinceStartup.getText()))); <BUGE> appendTextArea("Data written. You may exit now."); } catch (java.io.IOException e) { appendTextArea(("Error writing the data: " + (e.getMessage()))); e.printStackTrace(); } } 
@java.lang.Override public void run() { <BUGS> com.pkjiao.friends.mm.common.CommonDataStructure.UploadHeadPicResultEntry resultEntry = com.pkjiao.friends.mm.utils.Utils.uploadHeadPicBitmap(CommonDataStructure.URL_UPLOAD_HEAD_PIC, uid, mCropPhoto, mCropPhotoName); if (!(isUidExistInHeadPicDB(uid))) { insertHeadPicToHeadPicsDB(resultEntry); }else { updateHeadPicToHeadPicsDB(resultEntry); <BUGE> } mHandler.sendEmptyMessage(com.pkjiao.friends.mm.activity.FillUserInfoActivity.UPLOAD_USER_HEADER_FINISH); } 
@java.lang.Override public boolean equals(java.lang.Object o) { if (!(o instanceof org.snt.inmemantlr.tree.AstNode)) return false;  org.snt.inmemantlr.tree.AstNode n = ((org.snt.inmemantlr.tree.AstNode) (o)); <BUGS> return ((n.ntype.equals(this.ntype)) && (n.label.equals(this.label))) && (this.children.equals(n.children)); <BUGE> } 
public void robotInit() { leftStick = new org.usfirst.frc.team3501.robot.Joystick(LEFT_JOYSTICK_PORT); rightStick = new org.usfirst.frc.team3501.robot.Joystick(RIGHT_JOYSTICK_PORT); drivetrain = new org.usfirst.frc.team3501.robot.Drivetrain(); arm = new org.usfirst.frc.team3501.robot.Arm(); claw = new org.usfirst.frc.team3501.robot.Claw(); <BUGS> <BUGE> auton = new org.usfirst.frc.team3501.robot.Auton(arm, claw, drivetrain, timer); <BUGS> timer = new edu.wpi.first.wpilibj.Timer(); <BUGE> } 
@java.lang.Override public void onResponse(okhttp3.Call call, okhttp3.Response response) throws java.io.IOException { if (response.isSuccessful()) { java.lang.String responseStr = response.body().string(); android.util.Log.d("RESPONSE WHOAMI", responseStr); <BUGS> loadData(); <BUGE> }else { android.util.Log.d("RESPONSE WHOAMI", "ertyui2"); refreshToken(); } } 
private java.lang.String readDir(org.jdom2.Document doc, java.lang.String[] files, java.lang.String dirName) { if (files != null) { java.util.Arrays.sort(files); } <BUGS> java.lang.String eDir = dirName; org.jdom2.Element p = buildElement(files, dirName, eDir); <BUGE> doc.getRootElement().addContent(p); return p.getName(); } 
@java.lang.Override public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) { int count = ((listener) instanceof com.heinrichreimersoftware.materialintro.view.FadeableViewPager.OnOverscrollPageChangeListener) ? com.heinrichreimersoftware.materialintro.view.FadeableViewPager.super.getAdapter().getCount() : getAdapter().getCount(); <BUGS> listener.onPageScrolled(java.lang.Math.min(position, count), (position < count ? positionOffset : 0), (position < count ? positionOffsetPixels : 0)); <BUGE> } 
public void removeTask(net.sf.memoranda.Task task) { <BUGS> <BUGE> java.lang.String parentTaskId = task.getParentID(); if (parentTaskId != null) { net.sf.memoranda.Task parentNode = getTaskElement(parentTaskId); <BUGS> parentNode.removeSubTask(task); <BUGE> } taskList.remove(task.getID()); rootTaskList.remove(task); } 
@java.lang.Override protected void onAction(java.lang.String sender, java.lang.String login, java.lang.String hostname, java.lang.String target, java.lang.String action) { java.lang.String nickName = this.stripNickname(sender); de.skuzzle.polly.sdk.eventlistener.IrcUser user = new de.skuzzle.polly.sdk.eventlistener.IrcUser(nickName, login, hostname); <BUGS> de.skuzzle.polly.sdk.eventlistener.MessageEvent e = new de.skuzzle.polly.sdk.eventlistener.MessageEvent(this, user, nickName, action); <BUGE> this.fireActionMessageEvent(e); } 
private void selectConversation(javafx.scene.input.MouseEvent e) { int index = conversations.getSelectionModel().getSelectedIndex(); java.lang.String data = conversations.getSelectionModel().getSelectedItem(); codeu.chat.common.ConversationSummary selectedConvo = lookupByTitle(data, index); <BUGS> codeu.chat.client.simplegui.ChatGuiFX.clientContext.conversation.setCurrent(selectedConvo); updateCurrentConversation(selectedConvo); <BUGE> } 
<BUGS> @com.fasterxml.jackson.annotation.JsonPropertyOrder(value = { "source" , "name" , "values" }) <BUGE> public static int printData(java.lang.String[] args) throws com.fasterxml.jackson.core.JsonProcessingException, java.lang.NullPointerException { org.paces.Stata.Data.Meta dbg = new org.paces.Stata.Data.Meta(args); <BUGS> org.paces.Stata.Data.StataData stataData = new org.paces.Stata.Data.DataSet(dbg); <BUGE> org.paces.Stata.JSON.StataJSON.toJSON(stataData); stataData = null; dbg = null; return 0; } 
<BUGS> private static weka.core.Instances loadTestFile(java.lang.String fileName) { <BUGE> weka.core.Instances data = null; weka.core.converters.ArffLoader loader = new weka.core.converters.ArffLoader(); try { <BUGS> loader.setFile(new java.io.File(fileName)); <BUGE> data = loader.getDataSet(); data.setClassIndex(((data.numAttributes()) - 1)); } catch (java.io.IOException e) { e.printStackTrace(); } return data; } 
public void verifyEndpointResponseNotEmpty() { try { <BUGS> java.lang.String string = new com.abhelly.builditbigger.EndpointsAsyncTask().execute(getContext()).get(); <BUGE> assertNotNull(string); assertTrue(((string.length()) > 0)); } catch (java.lang.InterruptedException | java.util.concurrent.ExecutionException e) { e.printStackTrace(); } } 
<BUGS> private void init(com.shinav.mathapp.db.pojo.CutsceneLine cutsceneLine) { this.cutsceneLine = cutsceneLine; <BUGE> com.shinav.mathapp.injection.component.Injector.getViewComponent(this.getContext()).inject(this); int layout = getLayout(cutsceneLine); android.view.View view = inflate(layout, this, false); holder = new com.shinav.mathapp.cutscene.CutsceneLineView.ViewHolder(view); loadCharacterImage(cutsceneLine); holder.line_value.setVisibility(com.shinav.mathapp.cutscene.INVISIBLE); addView(view); } 
@java.lang.Override public void display(java.awt.Graphics g) { <BUGS> java.lang.System.out.println(isHighlighted()); <BUGE> if (isHighlighted()) { g.setColor(java.awt.Color.green); g.drawRect(x, ((y) + (((totalCards) * (Card.height)) / 2)), Card.width, Card.height); setHighlight(false); }else { g.setColor(java.awt.Color.black); } totalCards = 0; stackDisplay(g, top()); } 
protected boolean isInBounds(int x, int y) { <BUGS> if ((((x >= 0) && (x <= (this.width))) && (y >= 0)) && (y <= (this.height))) { <BUGE> return true; } return false; } 
<BUGS> public void show404(javax.servlet.http.HttpServletRequest request, javax.servlet.http.HttpServletResponse response) throws java.io.IOException, javax.servlet.ServletException { <BUGE> response.setStatus(HttpServletResponse.SC_NOT_FOUND); request.setAttribute(com.lftechnology.batch7crud.controller.HTTPStatusHandler.MESSAGE, "Page Not Found"); javax.servlet.RequestDispatcher view = request.getRequestDispatcher(com.lftechnology.batch7crud.controller.HTTPStatusHandler.ERROR_PAGE); view.forward(request, response); } 
private void updateStudent(int id, java.lang.String matricol, java.lang.String name, java.lang.String surname) { com.studios.lucian.students.model.Student student = new com.studios.lucian.students.model.Student(mCurrentGroup.getNumber(), matricol, name, surname); if (mStudentsDbHandler.updateStudent(student)) { mStudentsList.set(id, student); listAdapter.notifyDataSetChanged(); }else { <BUGS> android.widget.Toast.makeText(getContext(), R.string.error_update_student, Toast.LENGTH_SHORT).show(); <BUGE> } } 
public void addTravel(travelAgencyModel.Travel travel) { if ((client) != null) { java.util.HashMap<java.lang.String, java.lang.Object> parameters = new java.util.HashMap<>(); parameters.put(CommandConstants.PARAM_TRAVEL, travel); client.sendMessage(new travelAgencyNetwork.MessageCommands(travelAgencyNetwork.CommandConstants.ADD_TRAVEL, parameters)); }else { travelsList.addTravel(travel); <BUGS> saveFileTravelsList(); <BUGE> } } 
<BUGS> private org.eclipse.xtext.common.types.JvmType doFindTypeByName(java.lang.String name, boolean traverseNestedTypes) { <BUGE> java.lang.String signature = getSignature(name); if (signature == null) return null;  org.eclipse.emf.common.util.URI resourceURI = typeUriHelper.createResourceURI(signature); if ((resourceURI.segment(0)) == (org.eclipse.xtext.common.types.access.jdt.JdtTypeProvider.PRIMITIVES)) { return findPrimitiveType(signature, resourceURI); }else { return findObjectType(signature, resourceURI, traverseNestedTypes); } } 
public static boolean generate() { <BUGS> <BUGE> java.util.List<com.sheepit.client.hardware.gpu.GPUDevice> gpus = new com.sheepit.client.hardware.gpu.nvidia.Nvidia().getGpus(); if (gpus != null) { com.sheepit.client.hardware.gpu.GPU.devices.addAll(gpus); } gpus = new com.sheepit.client.hardware.gpu.opencl.OpenCL().getGpus(); if (gpus != null) { com.sheepit.client.hardware.gpu.GPU.devices.addAll(gpus); } return true; } 
public boolean loadDBProperties() { java.lang.System.out.println((("Load \"" + (com.hiltondublin.db.HiltonDublinDBConnection.DB_PROPERTIES_FILENAME)) + "\"")); <BUGS> <BUGE> java.io.InputStream input = null; input = getClass().getClassLoader().getResourceAsStream(com.hiltondublin.db.HiltonDublinDBConnection.DB_PROPERTIES_FILENAME); try { this.dbProperties.load(input); } catch (java.io.IOException e) { java.lang.System.out.println((("Failed to load \"" + (com.hiltondublin.db.HiltonDublinDBConnection.DB_PROPERTIES_FILENAME)) + "\"")); e.printStackTrace(); return false; } return true; } 
<BUGS> public void onHeadingChanged(double p_heading, double p_magnetic_heading, double p_true_heading, float p_timestamp, float p_x, float p_y, float p_z, float p_accuracy) { <BUGE> com.runrev.android.Engine.doHeadingChanged(p_heading, p_magnetic_heading, p_true_heading, p_timestamp, p_x, p_y, p_z, p_accuracy); if (m_wake_on_event) com.runrev.android.Engine.doProcess(false);  } 
<BUGS> static void writeMap(net.openhft.chronicle.queue.ExcerptAppender appender, java.util.Map<java.lang.String, java.lang.Object> map) { <BUGE> try (net.openhft.chronicle.wire.DocumentContext context = appender.writingDocument()) { net.openhft.chronicle.wire.Wire wire = context.wire(); <BUGS> for (java.util.Map.Entry<java.lang.String, java.lang.Object> entry : map.entrySet()) { <BUGE> wire.writeEventName(entry.getKey()).object(entry.getValue()); } } } 
@java.lang.Override public void act() { if ((((z) <= 2) && ((steps) < (sideLength))) && (canMove())) { move(); (steps)++; }else { <BUGS> <BUGE> steps = 0; (z)++; if ((z) == 1) { setDirection(Location.SOUTHWEST); }else if ((z) == 2) { setDirection(Location.EAST); }  } } 
@java.lang.Override public void onActivityCreated(android.os.Bundle savedInstanceState) { super.onActivityCreated(savedInstanceState); android.support.v7.widget.RecyclerView tasksList = getView().findViewById(R.id.finished_tasks_recycler_view); tasksList.setHasFixedSize(true); tasksList.setLayoutManager(new android.support.v7.widget.LinearLayoutManager(getContext())); <BUGS> android.support.v7.widget.RecyclerView.Adapter mAdapter = new com.example.hasmik_n.todolist.handlers.TasksRecyclerViewAdapter(tasks); <BUGE> tasksList.setAdapter(mAdapter); } 
public void test_042() { framework.common.ClockCommon.switchMode("秒表"); excute(testcase.Object_Description, testcase.Operation_ClickWait, "开始"); excute(testcase.Object_Description, testcase.Operation_ClickWait, "停止"); <BUGS> check(testcase.Object_Description, testcase.Operation_checkExist, "重置"); <BUGE> check(testcase.Object_Description, testcase.Operation_checkExist, "开始"); check(testcase.Object_Description, testcase.Operation_checkExist, "分享"); } 
@java.lang.Override public void preUpdate() { <BUGS> <BUGE> if (this.isMoving) { java.util.ArrayList<android.graphics.Rect> spriteSequence = dirSpriteMap.get(curDirection); curSpriteIndex = ((curSpriteIndex) + 1) % (spriteSequence.size()); com.example.vincentzhang.Sprite.Vector2D newPos = this.getSpritePos().applyDir(this.getCurDirection(), this.getMoveSpeed()); this.setSpritePos(newPos); com.example.vincentzhang.Sprite.CollideDetector.setDirtyFlag(true); } } 
private boolean needsRun() { long maxAge = (java.lang.System.currentTimeMillis()) - ((simpleserver.thread.AutoRun.MILLISECONDS_PER_MINUTE) * (server.config.properties.getInt("c10tMins"))); <BUGS> return ((server.config.properties.contains("c10tArgs")) && (maxAge > (lastRun))) && ((server.numPlayers()) > 0); <BUGE> } 
private java.lang.String extractTag(java.lang.String noteContent) { java.lang.String[] contentWords = noteContent.split(" "); <BUGS> java.lang.String label = ""; <BUGE> for (java.lang.String word : contentWords) { if ((word.startsWith("#")) && ((word.length()) > 1)) { label = word.substring(1); break; } } return label; } 
private void register(java.nio.file.Path dir) throws java.io.IOException { java.nio.file.WatchKey key = dir.register(watcher, java.nio.file.StandardWatchEventKinds.ENTRY_CREATE, java.nio.file.StandardWatchEventKinds.ENTRY_DELETE, java.nio.file.StandardWatchEventKinds.ENTRY_MODIFY); if (trace) { java.nio.file.Path prev = keys.get(key); if (prev == null) { <BUGS> java.lang.System.out.format("register: %s\n", dir); <BUGE> }else { if (!(dir.equals(prev))) { <BUGS> java.lang.System.out.format("update: %s -> %s\n", prev, dir); <BUGE> } } } keys.put(key, dir); } 
@org.junit.Test public void testGetDocContent_invalidDocId1() throws java.lang.Exception { adaptor.init(context); <BUGS> java.util.List<java.lang.String> messages = new java.util.ArrayList<java.lang.String>(); com.google.enterprise.adaptor.filenet.Logging.captureLogMessages(com.google.enterprise.adaptor.filenet.FileNetAdaptor.class, "Invalid DocId:", messages); <BUGE> com.google.enterprise.adaptor.testing.RecordingResponse response = new com.google.enterprise.adaptor.testing.RecordingResponse(); adaptor.getDocContent(new com.google.enterprise.adaptor.filenet.MockRequest(new com.google.enterprise.adaptor.DocId("foo")), response); org.junit.Assert.assertEquals(RecordingResponse.State.NOT_FOUND, response.getState()); <BUGS> org.junit.Assert.assertEquals(messages.toString(), 1, messages.size()); <BUGE> } 
@java.lang.Override public int onStartCommand(android.content.Intent intent, int flags, int startId) { <BUGS> if (lv.kasparsj.android.util.Objects.equals(intent.getAction(), getString(R.string.action_update))) { if (screenStateReceiver.isScreenOff()) { pendingUpdateReceiver.setIsPendingUpdate(true); }else { lv.kasparsj.android.dwob.model.DailyWords.getInstance().update(); <BUGE> } } return super.onStartCommand(intent, flags, startId); } 
public org.simplebooks.integration.appdirect.model.appdirect.SubscriptionEvent getEvent(java.lang.String eventUrl) { java.lang.String eventJson = getEventJson(eventUrl); com.fasterxml.jackson.databind.ObjectMapper mapper = new com.fasterxml.jackson.databind.ObjectMapper(); org.simplebooks.integration.appdirect.model.appdirect.SubscriptionEvent result = null; try { result = mapper.readValue(eventJson, org.simplebooks.integration.appdirect.model.appdirect.SubscriptionEvent.class); <BUGS> java.lang.System.out.println(result.getPayload().getAccount().getAccountIdentifier()); java.lang.System.out.println(result.getPayload().getOrder().getEditionCode()); <BUGE> } catch (java.io.IOException iox) { iox.printStackTrace(); result = null; } return result; } 
@java.lang.Override protected void onActivityResult(int requestCode, int resultCode, android.content.Intent data) { super.onActivityResult(requestCode, resultCode, data); switch (requestCode) { case REQ_CODE_SPEECH_INPUT : { if ((resultCode == (RESULT_OK)) && (null != data)) { java.util.ArrayList<java.lang.String> result = data.getStringArrayListExtra(RecognizerIntent.EXTRA_RESULTS); txtSpeechInput.setText(result.get(0)); <BUGS> callPuter(result.get(0)); <BUGE> } break; } } } 
public boolean isAllValid(sss.domain.Product product) { <BUGS> return ((((isProductUnique(product)) && (isProductCodeValid(product))) && (isProductNameValid(product))) && (isCostPricePositive(product))) && (isPricePositive(product)); <BUGE> } 
public boolean move(int destX, int destY) { if (isFirst = true) { <BUGS> if (destX == ((this.x) + 2)) { <BUGE> isFirst = false; return true; } } <BUGS> if (destX == ((this.x) + 1)) { <BUGE> isFirst = false; return true; } return false; } 
<BUGS> public void isAddStepsValid(java.lang.String value) { <BUGE> if ((value.length()) > 0) { java.lang.String regex = "-?[\\d]+"; validate(value, regex, addSteps); if (!(value.matches(regex))) { errorAddSteps.setVisible(true); <BUGS> <BUGE> } if ((java.lang.Integer.valueOf(value)) >= 0) { errorAddSteps.setVisible(false); <BUGS> <BUGE> } } <BUGS> <BUGE> } 
private void localServicePermissionHandler(int[] grantResults) { if ((grantResults.length) == 0) { return ; } for (int i : grantResults) { <BUGS> if ((grantResults[i]) == (android.content.pm.PackageManager.PERMISSION_DENIED)) { <BUGE> return ; } } checkPermissionToLocalService(); } 
<BUGS> public static games.strategy.triplea.ai.proAI.data.ProBattleResult callBattleCalculator(final games.strategy.engine.data.PlayerID player, final games.strategy.engine.data.Territory t, final java.util.List<games.strategy.engine.data.Unit> attackingUnits, final java.util.List<games.strategy.engine.data.Unit> defendingUnits, final java.util.Set<games.strategy.engine.data.Unit> bombardingUnits, final boolean isAttacker) { return games.strategy.triplea.ai.proAI.util.ProBattleUtils.callBattleCalculator(player, t, attackingUnits, defendingUnits, bombardingUnits, isAttacker, false); <BUGE> } 
private void handlePaint() { if (!(_updateThumb)) return ;  final org.eclipse.swt.graphics.Rectangle rect = _table.getVisibleScrollableCells(); <BUGS> final int max = ((_scroll.getMaximum()) - (_scroll.getMinimum())) - 1; <BUGE> final int tWidth = java.lang.Math.min(java.lang.Math.max(1, rect.width), max); _scroll.setThumb(tWidth); _scroll.setEnabled((tWidth != max)); } 
<BUGS> public static void toh(int n, char src, char dest, char aux) { <BUGE> if (n > 0) { com.datastructure.stack.problems.TowersOfHanoi.toh((n - 1), src, dest, aux); java.lang.System.out.println(((((n + " ") + src) + "-") + dest)); <BUGS> com.datastructure.stack.problems.TowersOfHanoi.toh((n - 1), dest, aux, src); <BUGE> } } 
public com.github.onsdigital.zebedee.json.ContentDetail clone() { <BUGS> com.github.onsdigital.zebedee.json.ContentDetail cloned = new com.github.onsdigital.zebedee.json.ContentDetail(this.description.title, this.uri, this.type); <BUGE> if ((this.children) != null) { cloned.children = new java.util.ArrayList<>(this.children.size()); this.children.forEach(( child) -> cloned.children.add(child.clone())); } return cloned; } 
public void componentResized(java.awt.event.ComponentEvent e) { view.MapScrollPane p = ((view.MapScrollPane) (e.getComponent())); p.map.repaint(); p.getViewport().setViewPosition(p.getCenter()); <BUGS> map.updateDisplay(e.getComponent().getWidth(), e.getComponent().getHeight()); <BUGE> } 
public void undoAddedEvent(carelender.model.EventList eventList) { for (int i = 0; i < (events.size()); i++) { for (carelender.model.Event eventObj : eventList) { if ((events.get(i).getUid()) == (eventObj.getUid())) { events.remove(i); } } } <BUGS> saveToFile("events.dat", events); <BUGE> } 
@java.lang.Override public void run() { if (((mDownloadProgressDialog) != null) && (mDownloadProgressDialog.isShowing())) { mDownloadProgressDialog.dismiss(); <BUGS> mDownloadProgressDialog = null; <BUGE> } <BUGS> <BUGE> if (!(task.isCanceled())) { <BUGS> if (task instanceof com.door43.translationstudio.tasks.GetLibraryUpdatesTask) { }else { new android.app.AlertDialog.Builder(this).setTitle(R.string.success).setIcon(R.drawable.ic_done_black_24dp).setMessage(R.string.download_complete).setCancelable(false).setPositiveButton(R.string.label_ok, null).show(); } <BUGE> } } 
public int getPartyIDFromSenderInvite(int playerID) { <BUGS> java.util.ArrayList<session.Invite> myInvites = player.getInvites(); <BUGE> int partyID = 0; for (int i = 0; i < (myInvites.size()); i++) { if (playerID == (myInvites.get(i).getSenderID())) { partyID = myInvites.get(i).getPartyID(); break; } } java.lang.System.out.println(partyID); return partyID; } 
public void setUp() throws java.lang.Exception { super.setUp(); java.io.File inputFile = new java.io.File(testFileRaw); byte[] fileData = new byte[((int) (inputFile.length()))]; java.io.DataInputStream dis = new java.io.DataInputStream(new java.io.FileInputStream(inputFile)); dis.readFully(fileData); <BUGS> sCore = new edu.berkeley.cs.succinct.buffers.SuccinctBuffer(fileData, 3); <BUGE> } 
public static boolean listContainsArray(java.util.List<double[]> list, double[] array) { for (double[] element : list) { <BUGS> if (!(java.util.Arrays.equals(element, array))) { return false; <BUGE> } } <BUGS> return true; <BUGE> } 
public void continuouslyDiscoverServices() { if ((serviceDiscoveryRegistered) == false) { android.util.Log.i(edu.rit.se.wifibuddy.WifiDirectHandler.TAG, "Setting up service discovery"); registerServiceDiscoveryListeners(); addServiceDiscoveryRequest(); serviceDiscoveryRegistered = true; <BUGS> <BUGE> }else { <BUGS> android.util.Log.i(edu.rit.se.wifibuddy.WifiDirectHandler.TAG, "Continuously Discover services called"); if (continueDiscovering) { android.util.Log.w(edu.rit.se.wifibuddy.WifiDirectHandler.TAG, "Services are still discovering, do not need to make this call"); }else { android.util.Log.i(edu.rit.se.wifibuddy.WifiDirectHandler.TAG, "Calling discover and submitting first discover task"); continueDiscovering = true; discoverTasks = new java.util.ArrayList<>(); discoverServices(); submitDiscoverTask(); } <BUGE> } } 
<BUGS> public void saveUnsavedData() { <BUGE> org.md2k.thoughtshakeup.Questions.getInstance().setEndTime(org.md2k.datakitapi.time.DateTime.getDateTime()); org.md2k.thoughtshakeup.Questions.getInstance().setStatus(Constants.ABANDONED_BY_TIMEOUT); <BUGS> org.md2k.thoughtshakeup.QuestionAnswer.getInstance(this).add(new org.md2k.thoughtshakeup.QuestionsJSON(org.md2k.thoughtshakeup.Questions.getInstance())); <BUGE> org.md2k.thoughtshakeup.Questions.getInstance().destroy(); } 
@java.lang.Override public void processCommand(int address, int value, jace.apple2e.MOS65C02.MODE addressMode, jace.apple2e.MOS65C02 cpu) { <BUGS> if (((value >> (bit)) & 1) == 0) { return ; } if ((cpu.C) != 0) { <BUGE> cpu.setProgramCounter(address); cpu.addWaitCycles((cpu.pageBoundaryPenalty ? 2 : 1)); } } 
@org.junit.Before public void setUp() { tested = new net.remotehost.domdetective.parser.TemplateParser(); <BUGS> org.mockito.BDDMockito.given(propertiesParser.getArray(org.mockito.Matchers.any(), org.mockito.Matchers.anyString(), org.mockito.Matchers.anyString())).willReturn(java.util.Optional.of(new java.lang.String[]{ "something" , "else" , "misconfiguration" })); <BUGE> } 
@java.lang.Override public void onDataChange(com.google.firebase.database.DataSnapshot dataSnapshot) { for (com.google.firebase.database.DataSnapshot postSnapshot : dataSnapshot.getChildren()) { <BUGS> android.util.Log.i(com.expixel.binki.TAG, ("MainActivity: loadShelf: item: " + (postSnapshot.getKey()))); <BUGE> com.expixel.binki.Post post = postSnapshot.getValue(com.expixel.binki.Post.class); viewHolder.bookName.setText(post.bookName); viewHolder.likeCount.setText(java.lang.String.valueOf(post.starCount)); } } 
void receive(java.net.Socket target) throws java.io.IOException { java.io.BufferedReader sockin = new java.io.BufferedReader(new java.io.InputStreamReader(target.getInputStream())); while (!(sockin.ready())) { } while (sockin.ready()) { try { java.lang.String msg = sockin.readLine(); <BUGS> messages.put(msg); <BUGE> } catch (java.lang.Exception e) { javafx.application.Platform.runLater(() -> badNews(e.getMessage())); e.printStackTrace(); } } } 
public boolean isSparkStreamingJoblet() { boolean isSparkStreamingJoblet = false; <BUGS> if (org.talend.core.GlobalServiceRegister.getDefault().isServiceRegistered(org.talend.core.ui.ISparkJobletProviderService.class)) { <BUGE> org.talend.core.ui.ISparkStreamingJobletProviderService sparkJobletService = ((org.talend.core.ui.ISparkStreamingJobletProviderService) (org.talend.core.GlobalServiceRegister.getDefault().getService(org.talend.core.ui.ISparkStreamingJobletProviderService.class))); if (sparkJobletService != null) { isSparkStreamingJoblet = sparkJobletService.isSparkStreamingJobletComponent(this); } } return isSparkStreamingJoblet; } 
<BUGS> public void setNode(model.ClassNode person) { this.node = person; titleField.setText(node.getTitle()); attributesArea.setText(node.attributesProperty().getValue()); operationsArea.setText(node.operationsProperty().getValue()); <BUGE> } 
@java.lang.Override public void done(com.parse.ParseUser parseUser, com.parse.ParseException e) { if (parseUser == null) { }else if (parseUser.isNew()) { getFacebookInfo(); }else { android.util.Log.d(com.trytara.tara.LoginActivity.TAG, ("CURRENT USER: " + (parseUser.toString()))); <BUGS> finish(); <BUGE> }  } 
public void changeDragonRight(android.view.View view) { if ((currDragon) == ((dragons.size()) - 1)) { currDragon = 0; addAccessory(dragons.get(currDragon)); }else { currDragon += 1; addAccessory(dragons.get(currDragon)); } <BUGS> checkAchievements(); <BUGE> } 
public static void test_059() { framework.common.GalleryCommon.deleteMoreGallery(); framework.common.GalleryCommon.clickGallery(); <BUGS> check(testcase.Object_Description, testcase.Operation_WaitForExists, "更多选项", "10000"); <BUGE> excute(testcase.Object_Description, testcase.Operation_ClickWait, "更多选项"); excute(testcase.Object_Text, testcase.Operation_ClickWait, "编辑"); check(testcase.Object_Text, testcase.Operation_checkExist, "保存"); } 
<BUGS> public void markPhaseTable2() { <BUGE> java.lang.String command = forall.HelpA.getValueSelectedRow(mCRecipe.jTableSequnece1, "Command Name"); if (command == null) { return ; } if (command.equals("ADD PHASE")) { int phase = ((int) (java.lang.Double.parseDouble(forall.HelpA.getValueSelectedRow(mCRecipe.jTableSequnece1, "Cmd Parameter")))); java.util.LinkedList<java.lang.Integer> list = getRowsWithGivenPhase(phase, mCRecipe.jTableSequnce2); paint_selected_rows_a(list, mCRecipe.jTableSequnce2, java.awt.Color.LIGHT_GRAY); }else { unpaintAllRows_a(mCRecipe.jTableSequnce2); } } 
public void reset() { canTouchThis = false; try { <BUGS> <BUGE> clearLevel(); } catch (java.lang.NullPointerException a) { } level = -1; nextLevel(); scor.setScore(0); currentGameOver = false; if (endiSet) { endi.hide(); } if (aset) { a.hide(); } canTouchThis = true; } 
public java.lang.String loadJSONFromAsset() { <BUGS> java.lang.String json = null; <BUGE> try { java.io.InputStream is = this.getAssets().open("data.json"); int size = is.available(); byte[] buffer = new byte[size]; is.read(buffer); is.close(); json = new java.lang.String(buffer, "UTF-8"); } catch (java.io.IOException ex) { ex.printStackTrace(); return null; } return json; } 
private short[] getUpdateContent(java.io.BufferedInputStream in, int size) throws java.io.IOException { short[] actions = new short[size]; <BUGS> for (int i = 0; i < size; i++) { actions[i] += (in.read()) << 8; actions[i] += in.read(); } <BUGE> return actions; } 
<BUGS> public void addCampaign(java.lang.String campId) throws java.lang.Exception { <BUGE> deleteCampaign(campId); <BUGS> com.xrtb.common.Campaign camp = com.xrtb.bidder.WebCampaign.getInstance().db.getCampaign(campId); <BUGE> if (camp == null) { throw new java.lang.Exception((("Campaign " + campId) + " does not exist in database")); } addCampaign(camp); } 
private void move() { snake.move(); <BUGS> main.java.Game.stepCounter = java.lang.Math.max(1, ((main.java.Game.stepCounter) - 1)); <BUGE> if (snake.eat()) { updateScore(); food.move(); main.java.Game.stepCounter = getShortestDistance(); } if (snake.collision()) gameOver();  } 
public java.util.ArrayList<model.project.Project> getProjects() { java.util.ArrayList<model.project.Project> list = new java.util.ArrayList<model.project.Project>(); <BUGS> for (util.serialization.Serializable item : this.serializer.getItems()) { <BUGE> list.add(((model.project.Project) (item))); } return list; } 
public void getMiddle() { int middle = (size) / 2; if (((size) % 2) != 0) middle = middle + 1;  if ((isEmpty()) == false) { Node temp = head; int i = 1; while (i != middle) { temp = temp.getNext(); i = i + 1; } <BUGS> java.lang.System.out.println(temp.next.getData(temp)); <BUGE> }else { java.lang.System.out.println("No data exist"); } } 
private static java.lang.String getKindForAliasClass(java.lang.String simpleName) { for (java.util.Map.Entry<java.lang.String, java.lang.String> entry : org.ballerinalang.composer.service.workspace.tools.ModelGenerator.alias.entrySet()) { <BUGS> if (simpleName == (entry.getValue())) { <BUGE> return entry.getKey(); } } throw new java.lang.AssertionError(("Undefined entry :" + simpleName)); } 
@java.lang.Override public void onDataChange(com.google.firebase.database.DataSnapshot dataSnapshot) { if (!(dataSnapshot.exists())) { com.makalaster.adventurefriends.model.User newUser = new com.makalaster.adventurefriends.model.User(currentUser.getUid(), currentUser.getDisplayName(), currentUser.getEmail()); database.child(currentUser.getUid()).setValue(newUser); <BUGS> mUserHolder.LoadCurrentUser(currentUser.getUid()); <BUGE> } <BUGS> <BUGE> } 
protected void headerPrivateCPrototypes(org.thingml.xtext.thingML.Thing thing, java.lang.StringBuilder builder, org.thingml.compilers.cpp.CppCompilerContext ctx) { <BUGS> generatePrivateCPrototypes(thing, builder, ctx); <BUGE> java.lang.StringBuilder cppHeaderBuilder = ctx.getCppHeaderCode(); for (org.thingml.xtext.thingML.Function f : org.thingml.xtext.constraints.ThingMLHelpers.allFunctions(thing)) { generatePrototypeforThingDirect(f, cppHeaderBuilder, ctx, thing, true); cppHeaderBuilder.append(";\n"); } } 
public void addBus(travelAgencyModel.Bus bus) { if ((client) != null) { java.util.HashMap<java.lang.String, java.lang.Object> parameters = new java.util.HashMap<>(); parameters.put(CommandConstants.PARAM_BUS, bus); client.sendMessage(new travelAgencyNetwork.MessageCommands(travelAgencyNetwork.CommandConstants.ADD_BUS, parameters)); <BUGS> <BUGE> }else { busList.addBus(bus); } } 
public boolean checkWin(boolean xTurn, int column) { <BUGS> boolean horizontal = (checkWinHorizontal(xTurn, column)) >= 4; boolean vertical = (checkWinVertical(xTurn, column)) >= 4; boolean diagonal = (checkWinDiagonal(xTurn, column)) >= 4; <BUGE> return (horizontal || vertical) || diagonal; } 
<BUGS> @org.springframework.web.bind.annotation.RequestMapping(path = { (("/" + (ENTITY_DATA)) + "/") + (SET_ID_PATH) }, method = org.springframework.web.bind.annotation.RequestMethod.POST, produces = { org.springframework.http.MediaType.APPLICATION_JSON_VALUE , com.dataloom.datastore.constants.CustomMediaType.TEXT_CSV_VALUE }) public java.lang.Iterable<com.google.common.collect.SetMultimap<org.apache.olingo.commons.api.edm.FullQualifiedName, java.lang.Object>> loadEntitySetData(@org.springframework.web.bind.annotation.PathVariable(value = SET_ID) java.util.UUID entitySetId, @org.springframework.web.bind.annotation.RequestBody(required = false) com.dataloom.data.requests.EntitySetSelection req, @org.springframework.web.bind.annotation.RequestParam(value = FILE_TYPE, required = false) com.dataloom.datastore.data.controllers.FileType fileType, javax.servlet.http.HttpServletResponse response) { <BUGE> com.dataloom.datastore.data.controllers.DataController.setContentDisposition(response, entitySetId.toString(), fileType); com.dataloom.datastore.data.controllers.DataController.setDownloadContentType(response, fileType); <BUGS> return loadEntitySetData(entitySetId, req, fileType); <BUGE> } 
<BUGS> private void seekTo(int seekto) { <BUGE> android.util.Log.d(com.example.sunsai.mymusicplayer.PlayerActivity.TAG, "seekTo"); android.content.Intent intent = new android.content.Intent(this, com.example.sunsai.mymusicplayer.service.MusicService.class); intent.setAction(MusicService.CMD_MUSICSERVICE_SEEKTO); <BUGS> intent.putExtra("SEEK_TO", seekto); <BUGE> startService(intent); } 
@java.lang.Override public void onAdFailedToLoad(int error) { <BUGS> android.util.Log.d(com.samcodes.admob.BannerListener.TAG, ("onBannerFailedToLoad: " + (com.samcodes.admob.AdMobExtension.getErrorReason(error)))); <BUGE> android.util.Log.d(com.samcodes.admob.BannerListener.TAG, ("Hiding banner with id " + (id))); com.samcodes.admob.AdView view = com.samcodes.admob.AdMobExtension.getBannerViewForUnitId(id); view.setVisibility(View.INVISIBLE); com.samcodes.admob.AdMobExtension.getLayout().removeView(view); com.samcodes.admob.AdMobExtension.getLayout().bringToFront(); com.samcodes.admob.AdMobExtension.callHaxe("onBannerFailedToLoad", new java.lang.Object[]{ id }); } 
private void fillTextLineBoxes() { if (!(lines.isEmpty())) { <BUGS> java.lang.String[] fields = lines.get(0).split(fieldSeparator.getText()); <BUGE> lineBoxes.stream().forEach(( b) -> { b.addItem("Select field"); java.util.Arrays.stream(fields).forEach(( f) -> b.addItem(f)); }); } } 
<BUGS> public static void main() { <BUGE> Print_Nodes_in_Top_View_of_Binary_Tree solution = new Print_Nodes_in_Top_View_of_Binary_Tree(); Serialize_and_Deserialize_Binary_Tree treeBuild = new Serialize_and_Deserialize_Binary_Tree(); TreeNode root = treeBuild.deserializeBFS("1 2 3 4 5 6 7"); java.lang.System.out.println(solution.topView(root)); root = treeBuild.deserializeBFS("1 2 3 # 4 # # # 5 # 6"); java.lang.System.out.println(solution.topView(root)); } 
@org.springframework.web.bind.annotation.RequestMapping(value = "/addCommodity", method = org.springframework.web.bind.annotation.RequestMethod.PUT) public java.lang.String addCommodity(@org.springframework.web.bind.annotation.RequestParam(value = "purchaseCaseId", required = true) java.lang.String purchaseCaseId, @org.springframework.web.bind.annotation.RequestParam(value = "commodityIds", required = true) java.lang.String[] commodityIds) { java.lang.Integer[] ids = new java.lang.Integer[commodityIds.length]; for (int i = 0; i < (commodityIds.length); i++) { ids[i] = java.lang.Integer.valueOf(commodityIds[i]); } purchaseCaseService.addPurchaseCaseIdToCommoditys(purchaseCaseId, ids); <BUGS> return com.jersey.purchaseCase.controller.PurchaseCaseController.REDIRECT_ADD_COMMODITY.replace("{id}", purchaseCaseId.toString()); <BUGE> } 
private boolean checkIfAllTilesAreInPlace() { for (int i = 0; i < (currentField.length); i++) { for (int j = 0; j < (currentField[i].length); j++) { <BUGS> if (currentField[i][j][0].equals(solutionField[i][j][0])) <BUGE> return false;  } } return true; } 
private boolean isContains(java.lang.String address, java.lang.String fromRule) { java.lang.String[] fromRules = fromRule.split(";"); for (int i = 0; i < (fromRules.length); i++) { <BUGS> if (address.contains(fromRules[i])) { <BUGE> return true; } } return false; } 
@java.lang.Override public void success(co.gov.inci.evaluon.backend.models.classes.authentication.Token token, retrofit.client.Response response) { userToken = token; <BUGS> co.gov.inci.evaluon.backend.models.classes.user.Evaluee.Info evaluee = new co.gov.inci.evaluon.backend.models.classes.user.Evaluee.Info(user.getId(), co.gov.inci.evaluon.backend.models.classes.user.Evaluee.genderById(gender.getCheckedRadioButtonId()), co.gov.inci.evaluon.backend.models.classes.user.Evaluee.disabilitiesById(disability.getCheckedRadioButtonId()), co.gov.inci.evaluon.backend.models.classes.user.Evaluee.typesById(type.getCheckedRadioButtonId()), co.gov.inci.evaluon.backend.models.classes.user.Evaluee.levelsById(level.getCheckedRadioButtonId())); <BUGE> api.createEvaluee(token.toString(), evaluee, evalueeCallback); } 
<BUGS> private void onSetAlarmTime(android.view.View view) { <BUGE> android.os.Bundle bundle = new android.os.Bundle(); bundle.putInt("set_hour", hour); bundle.putInt("set_minute", minute); concentric.medalarm.AlarmTimePickerDialogFragment timePickerDialogFragment = new concentric.medalarm.AlarmTimePickerDialogFragment(); timePickerDialogFragment.setHandler(timePickerHandler); timePickerDialogFragment.setArguments(bundle); concentric.medalarm.activity.FragmentManager fragmentManager = getSupportFragmentManager(); concentric.medalarm.activity.FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction(); fragmentTransaction.add(timePickerDialogFragment, "time_picker"); fragmentTransaction.commit(); } 
@org.junit.Test public void testFillRegion() throws com.blackcrowsys.canvas.exception.CanvasOperationException { fillRegion(); consoleCanvas.drawRectangle(new com.blackcrowsys.canvas.Coordinate(2, 1), new com.blackcrowsys.canvas.Coordinate(4, 2)); consoleCanvas.fillRegion(new com.blackcrowsys.canvas.Coordinate(1, 1), 'o'); <BUGS> assertArrayEquals(canvas, consoleCanvas.getCanvas()); <BUGE> } 
public java.math.BigDecimal getMainContractPrice(com.ersoft.web.domain.business.contract.MainContract mainContract) { java.math.BigDecimal price = java.math.BigDecimal.ZERO; if (mainContract != null) { java.util.List<com.ersoft.web.domain.business.contract.SubContract> subs = subContractService.findActiveAll(com.ersoft.web.service.business.SubContractPredicates.mainContractPredicate(mainContract), new org.springframework.data.domain.Sort(org.springframework.data.domain.Sort.Direction.DESC, "createdDate")); for (com.ersoft.web.domain.business.contract.SubContract sub : subs) { <BUGS> price.add(getSubContractPrice(sub)); <BUGE> } } return price; } 
@java.lang.Override public boolean equals(java.lang.Object obj) { if (obj == null) return false;  if (!(obj instanceof cz.dd4j.simulation.data.dungeon.elements.places.Corridor)) return false;  cz.dd4j.simulation.data.dungeon.elements.places.Corridor other = ((cz.dd4j.simulation.data.dungeon.elements.places.Corridor) (obj)); <BUGS> return ((cz.dd4j.utils.Safe.equals(room1, other.room1)) && (cz.dd4j.utils.Safe.equals(room2, other.room2))) || ((cz.dd4j.utils.Safe.equals(room1, other.room2)) && (cz.dd4j.utils.Safe.equals(room1, other.room2))); <BUGE> } 
public java.lang.String getTodayPlusDay(int days) { java.util.Date heute = new java.util.Date(); java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat("yyyy-MM-dd"); java.util.Calendar c = java.util.Calendar.getInstance(); c.setTime(heute); c.add(java.util.Calendar.DATE, days); <BUGS> java.lang.String df = sdf.format(c.getTime()); return df; <BUGE> } 
public void refreshModules() { try { tern.eclipse.ide.core.IWorkingCopy workingCopy = getWorkingCopy(); workingCopy.addWorkingCopyListener(this); <BUGS> modulesBlock.refresh(getTernProject().getAllModules(), workingCopy.getCheckedModules()); <BUGE> } catch (java.lang.Throwable e) { tern.eclipse.ide.internal.ui.Trace.trace(Trace.SEVERE, "Error while loading tern project", e); } } 
public void berekening() { invoer = java.lang.Integer.parseInt(tekstvak.getText()); if (((invoer) >= 1) && ((invoer) <= 3)) { <BUGS> <BUGE> stenen -= invoer; <BUGS> beurten = true; <BUGE> }else if (((3 < (invoer)) || ((invoer) > 5)) || ((invoer) < 0)) { error(); }  } 
@java.lang.Override public void run() { fractureanalysis.table.TableUtils tu = new fractureanalysis.table.TableUtils(); <BUGS> for (int column = 0; column < (headerValues.length); column++) { tvDataset.getColumns().add(tu.createColumn(column, headerValues[column])); <BUGE> } } 
private void clearInMemoryJobInfos(int jobId) { java.util.List<cn.shiyanjun.ddc.scheduling.platform.component.DefaultSchedulingManager.TaskID> clearedTasks = com.google.common.collect.Lists.newArrayList(); java.util.LinkedList<cn.shiyanjun.ddc.scheduling.platform.component.DefaultSchedulingManager.TaskID> tasks = managedJobToTaskList.remove(jobId); <BUGS> for (cn.shiyanjun.ddc.scheduling.platform.component.DefaultSchedulingManager.TaskID id : tasks) { managedTaskIdToInfos.remove(id); clearedTasks.add(id); <BUGE> } managedJobIdToInfos.remove(jobId); cn.shiyanjun.ddc.scheduling.platform.component.DefaultSchedulingManager.LOG.info(((("In-memory state purged: jobId=" + jobId) + ", tasks=") + clearedTasks)); } 
protected java.util.ArrayList<pbs.parser.Statement> stmtList() { java.util.ArrayList<pbs.parser.Statement> stmtlist = new java.util.ArrayList<pbs.parser.Statement>(); pbs.parser.Statement s = nextStatement(); while (s != null) { stmtlist.add(s); s = nextStatement(); } <BUGS> match(pbs.parser.LevelParser.END); <BUGE> return stmtlist; } 
private java.lang.StringBuilder log(java.lang.String level, java.lang.Object message) { java.lang.StringBuilder sb = new java.lang.StringBuilder(); java.text.SimpleDateFormat format = new java.text.SimpleDateFormat(com.kk.utils.log.ConsoleLogger.formatDefaultTimestamp); java.lang.String time = format.format(new java.util.Date()); sb.append(time); sb.append(" "); sb.append(level); sb.append(" "); sb.append(getFileNameAndLineNumber()); sb.append(" - "); <BUGS> sb.append(message.toString()); <BUGE> return sb; } 
public dna.FastqRecord readRecord() throws dna.RecordFormatException, java.io.IOException { java.lang.String line = theBufferedReader.readLine(); if (line == null) { return null; } java.lang.String line1 = theBufferedReader.readLine(); java.lang.String line2 = theBufferedReader.readLine(); java.lang.String line3 = theBufferedReader.readLine(); <BUGS> dna.FastqRecord output = new dna.FastqRecord(line1, line2, line3); <BUGE> return output; } 
public static void main(java.lang.String[] args) { <BUGS> int bits = 4; int[] ids = new int[]{ 6 , 9 }; int firstId = 3; <BUGE> java.util.ArrayList<java.lang.Integer> e = new java.util.ArrayList<>(ids.length); for (int id : ids) { e.add(id); } <BUGS> java.util.Collections.sort(e); <BUGE> ChordNetwork net = new ChordNetwork(bits, firstId); net.addNodes(e); java.lang.System.out.println(net); } 
@java.lang.Override public void handleInput(nl.weeaboo.vn.math.Matrix parentTransform, nl.weeaboo.vn.input.IInput input) { nl.weeaboo.vn.math.Matrix inputTransform = parentTransform.translatedCopy((-(getX())), (-(getY()))); for (nl.weeaboo.vn.scene.IVisualElement elem : nl.weeaboo.vn.scene.impl.SceneUtil.getChildren(this, VisualOrdering.FRONT_TO_BACK)) { elem.handleInput(inputTransform, input); } <BUGS> super.handleInput(parentTransform, input); <BUGE> } 
@org.junit.Test public void testProcessXor() throws net.torocraft.minecoprocessors.util.ParseException { net.torocraft.minecoprocessors.processor.Processor processor = net.torocraft.minecoprocessors.processor.ProcessorTest.setupTest(5, 6, 0, 0, "xor a, b"); processor.processXor(); <BUGS> assertRegisters(processor, 3, 6, 0, 0); <BUGE> org.junit.Assert.assertFalse(processor.zero); processor = net.torocraft.minecoprocessors.processor.ProcessorTest.setupTest(5, 5, 0, 0, "xor a, b"); processor.processXor(); <BUGS> assertRegisters(processor, 0, 5, 0, 0); <BUGE> org.junit.Assert.assertTrue(processor.zero); } 
public java.util.ArrayList<graph.Vector> getVectorsPointingAway(graph.Point p) { java.util.ArrayList<graph.Vector> vs = new java.util.ArrayList<>(); for (int i = 0; i < (getEdges().size()); i++) { <BUGS> if ((getEdges().get(i).getP1()) == p) { <BUGE> vs.add(getEdges().get(i)); } } return vs; } 
public void initializeComponents() { componentSelectionPanel.clear(); for (int i = 0; i < (data.componentIdList.size()); i++) { com.google.gwt.user.client.ui.HTML item = new com.google.gwt.user.client.ui.HTML(data.componentIdList.get(i)); item.setStyleName("wmt-ComponentSelectionMenuItem"); item.addStyleDependentName("missing"); componentSelectionPanel.add(item); } <BUGS> if ((data.componentIdList.size()) > (edu.colorado.csdms.wmt.client.Constants.SCROLL_THRESHOLD)) { scroller.setSize(Constants.MENU_WIDTH, Constants.MENU_HEIGHT); } <BUGE> } 
public void changeToPreviousSection() { android.support.v4.app.FragmentManager fragmentManager = getSupportFragmentManager(); android.support.v4.app.FragmentTransaction upTransaction = fragmentManager.beginTransaction(); <BUGS> upTransaction.setCustomAnimations(R.anim.slide_out_bottom, R.anim.slide_in_top, R.anim.slide_in_left, R.anim.slide_out_right); <BUGE> try { changeToNewSection(contentManager.getPreviousSubItem(), upTransaction); } catch (java.util.NoSuchElementException e) { } } 
public void iffaux(java.lang.String etiquette) { <BUGS> compiler.Ecriture.ecrireStringln(flux, (";iffaux " + etiquette), ((indent) + 1)); compiler.Ecriture.ecrireStringln(flux, "pop ax", ((indent) + 1)); compiler.Ecriture.ecrireStringln(flux, "cmp ax,FALSE", ((indent) + 1)); compiler.Ecriture.ecrireStringln(flux, ("je " + etiquette), ((indent) + 1)); <BUGE> } 
public void check() { if ((name.equals(names[0])) && (password.equals("password"))) { launchActivity(); <BUGS> <BUGE> } if (!(name.equals(names[0]))) { Notification.setText("Invalid User"); }else { Notification.setText("Wrong Pass"); pass.setText(""); } return ; } 
@java.lang.Override public void doIt(com.github.oxo42.stateless4j.transitions.Transition<com.couchbase.lite.replicator.ReplicationState, com.couchbase.lite.replicator.ReplicationTrigger> transition) { com.couchbase.lite.util.Log.v(Log.TAG_SYNC, ((("[onExit()] " + (transition.getSource())) + " => ") + (transition.getDestination()))); <BUGS> goOnline(); <BUGE> notifyChangeListenersStateTransition(transition); } 
public static java.lang.String readStringFromFile(java.io.File inputFile) { <BUGS> if ((!(edu.iastate.symex.util.FileIO.TURN_CACHE_ON)) || (!(edu.iastate.symex.util.FileIO.fileMap.containsKey(inputFile)))) edu.iastate.symex.util.FileIO.fileMap.put(inputFile, edu.iastate.symex.util.FileIO.readStringFromFileWithoutCache(inputFile));  return edu.iastate.symex.util.FileIO.fileMap.get(inputFile); <BUGE> } 
public int updateStudent(com.carpool.model.Student student) { <BUGS> return jdbcTemplate.update(UPDATE, new java.lang.Object[]{ student.getFirstName() , student.getLastName() , student.getIdStudent() , student.getEmail() , student.isDriver() , student.isRider() }); <BUGE> } 
public void crossover(ga.Genes genes) { java.util.Random rand = new java.util.Random(); <BUGS> for (int i = 0; i < (genes.getNum()); i += 2) { <BUGE> int cuttingPoint = (rand.nextInt(((genes.getDim()) - 1))) + 1; ga.Gene.shiftDNASection(genes.getAt(i), genes.getAt((i + 1)), cuttingPoint, genes.getDim()); } } 
public void targetSizeCheck(shared.logic.support.action.Action a) { <BUGS> if (((a.ability) == (shared.roles.Jailor.EXECUTE_)) && ((a.getTargets().size()) > (jailedTargets.size()))) Exception("Cannot execute someone that isn't jailed");  if ((getPerceivedCharges()) != (shared.logic.support.rules.Rules.UNLIMITED)) if ((a.getTargets().size()) > (getPerceivedCharges())) Exception("Not enough executions for that many targets"); <BUGE>  <BUGS>  <BUGE> } 
<BUGS> @org.junit.Ignore <BUGE> public void kebabCase_shouldConvertAStringToKebabCase() throws java.lang.Exception { <BUGS> java.lang.String[] input = new java.lang.String[]{ "Foo Bar" , "fooBar" , "__FOO_BAR__" }; <BUGE> java.util.Arrays.stream(input).forEach(( el) -> assertThat(java.lang.String.format("%s should be foo-bar", el), toKebabCase(el), is(equalTo("foo-bar")))); } 
<BUGS> private void showMessage() { java.lang.String message = tfMainInput.getText(); <BUGE> if (message.equals("")) { return ; } tfMainInput.setText(""); my.edu.taylors.dad.chat.entity.Message newMessage = new my.edu.taylors.dad.chat.entity.Message(message, my.edu.taylors.dad.chat.entity.ClientType.ME); addMessage(newMessage); sendMessage(message); } 
public java.lang.String resolveIssue() { <BUGS> Ticket current = queue.removeMin(); <BUGE> current.setSolution(solutions[current.getPriority()]); <BUGS> if ((current.resolved) == true) { java.lang.String q = (("Issue: " + current) + "\nSolution: ") + (current.getSolution()); } <BUGE> return q; } 
public void run(int port, int timeOut) { printInit(port, timeOut); try { serverSocket = new java.net.ServerSocket(port); serverSocket.setSoTimeout(timeOut); socket = serverSocket.accept(); printWelcome(); <BUGS> java.lang.Thread messageReceiver = new htw.lab04.app.MessageReceiver(socket); java.lang.Thread messageSender = new htw.lab04.app.MessageSender(socket); <BUGE> messageSender.start(); messageReceiver.start(); } catch (java.io.IOException e) { e.printStackTrace(); } } 
@java.lang.Override public boolean equals(java.lang.Object obj) { if ((this) == obj) return true;  if (!(obj instanceof iguana.utils.input.Input)) return false;  iguana.utils.input.Input other = ((iguana.utils.input.Input) (obj)); <BUGS> return java.util.Arrays.equals(characters, other.characters); <BUGE> } 
private void DecideWhereToGoBackTo() { if ((motive) != null) { if ((motive.equals("pre-trip")) || (motive.equals("log-in"))) { startLogOutService(); navigateToLogin(); <BUGS> <BUGE> } }else { java.lang.String newStatus = _statusToDisplay; storeStatusInMemory(newStatus); navigateToMainMenu(newStatus); } } 
private com.progressoft.jip.ui.action.Action<T> generateAction(com.progressoft.jip.ui.xml.element.ActionXml actionXml) { try { java.lang.Object newInstance = newActionInstance(actionXml); <BUGS> @java.lang.SuppressWarnings(value = "unchecked") com.progressoft.jip.ui.action.Action<T> action = ((com.progressoft.jip.ui.action.Action<T>) (newInstance)); return action; <BUGE> } catch (java.lang.InstantiationException | java.lang.IllegalAccessException | java.lang.ClassNotFoundException | java.lang.SecurityException | java.lang.NoSuchMethodException | java.lang.IllegalArgumentException | java.lang.reflect.InvocationTargetException e) { throw new com.progressoft.jip.ui.xml.UserInterfaceParsingException(e); } } 
private void createClient(java.lang.String email, java.lang.String name, java.lang.String password, java.lang.String address, java.lang.String birthdate, double posX, double posY) { <BUGS> Driver newClient = new Client(email, name, password, address, birthdate, posX, posY); <BUGE> this.clients.add(newClient); } 
public static void addYearCredits(final java.util.Map<org.fenixedu.academic.domain.curricularPeriod.CurricularPeriod, java.math.BigDecimal> result, final org.fenixedu.academic.domain.curricularPeriod.CurricularPeriod curricularPeriod, final java.math.BigDecimal credits) { <BUGS> java.math.BigDecimal creditsYear = result.get(curricularPeriod); if (creditsYear != null) { creditsYear = creditsYear.add(credits); }else { result.put(curricularPeriod, credits); } <BUGE> } 
private void rebuild(boolean bracketsPairsTouched, boolean singleBracketsTouched, boolean hintsTouched, boolean alwaysRedraw) { boolean update = alwaysRedraw; if (bracketsPairsTouched) { update |= updateSurroundingPairsToPaint(_caretOffset); update |= clearHoveredPairsToPaint(); } if (singleBracketsTouched) update |= updateSingleBrackets();  <BUGS> if (hintsTouched) update |= updateHints();  <BUGE> if (update) { _textWidget.getDisplay().asyncExec(new java.lang.Runnable() { @java.lang.Override public void run() { _textWidget.redraw(); } }); } } 
public static void main(java.lang.String[] args) throws java.lang.Exception { final org.glassfish.grizzly.http.server.HttpServer server = org.glassfish.grizzly.http.server.HttpServer.createSimpleServer("html", 80); com.fonyli.tonyliweb.functions.markovchain.MarkovChain.getInstance().selectTeacher(MarkovChain.SHAKESPEARE); com.fonyli.tonyliweb.server.MainService.addHttpHandlers(server); <BUGS> org.glassfish.grizzly.http.server.StaticHttpHandler staticHttpHandler = new org.glassfish.grizzly.http.server.StaticHttpHandler("html"); server.getServerConfiguration().addHttpHandler(staticHttpHandler, "/fdsfdsfds/"); <BUGE> com.fonyli.tonyliweb.server.MainService.start(server); } 
@java.lang.SuppressWarnings(value = "DefaultLocale") private static boolean checkExtension(java.lang.String path, java.lang.String[] extensions) { <BUGS> <BUGE> for (int i = 0; i < (extensions.length); i++) { if (path.toLowerCase().endsWith(extensions[i])) { return true; } } return false; } 
<BUGS> public boolean isPrime(int number) { <BUGE> if ((number < 2) || ((number % 2) == 0)) { return false; <BUGS> } if (number == 2) { return true; <BUGE> } for (int oddNumber = 3; oddNumber <= (java.lang.Math.sqrt(number)); oddNumber += 2) { if ((number % oddNumber) == 0) { return false; } } return true; } 
@java.lang.Override public void onScrollStateChanged(android.widget.AbsListView view, int scrollState) { switch (scrollState) { case AbsListView.OnScrollListener.SCROLL_STATE_IDLE : if ((view.getLastVisiblePosition()) == ((view.getCount()) - 1)) { <BUGS> zhenghaiqiang.com.wynews.utils.Util.toast(mActivity, "到底"); <BUGE> (page)++; totalUrl = (baseUrl) + (getPageValue(page)); getData(); } break; } } 
public void setOptions(java.util.ArrayList<gui.Button> options, entity.AbstractEntity entity) { if (options != null) { for (int i = 0; i < (options.size()); i++) { options.get(i).setSize(30, 30); } <BUGS> } <BUGE> calledby = entity; this.options = options; } 
@java.lang.Override public void draw(java.awt.Graphics g) { super.draw(g); java.awt.Graphics2D g2d = ((java.awt.Graphics2D) (g)); this.applyTransformations(g2d); for (edu.virginia.engine.display.DisplayObject child : children) { <BUGS> child.draw(g); <BUGE> } this.reverseTransformations(g2d); } 
public Item removeFirst() { <BUGS> if ((first.next) != null) { Deque<Item>.Node node = first; first = first.next; first.previous = null; (size)--; return node.item; <BUGE> }else <BUGS> if ((first) != null) { <BUGE> Deque<Item>.Node node = first; first = null; last = null; (size)--; return node.item; <BUGS> }else { throw new java.util.NoSuchElementException(); <BUGE> }  } 
@java.lang.Override protected void onPostExecute(com.wozainali.manho.myapplication.kml.Placemark placemark) { <BUGS> com.squareup.otto.Bus bus = com.wozainali.manho.myapplication.bus.ZaiNaliBus.getBus(); bus.post(new com.wozainali.manho.myapplication.bus.events.ZoomToPointEvent(placemark)); bus.post(new com.wozainali.manho.myapplication.bus.events.AddMarkerEvent(placemark)); bus.post(new com.wozainali.manho.myapplication.bus.events.DrawPolygonsEvent(placemark.getPolygons())); <BUGE> } 
private void animateIn() { android.support.v7.widget.ActionMenuView menuView = getMenuView(); <BUGS> for (int i = 0, count = menuView.getChildCount(); i < count; i++) { <BUGE> android.view.View child = menuView.getChildAt(i); android.view.animation.Animation anim = mAnimator.getInAnimation(child, i); if (anim != null) child.startAnimation(anim);  } } 
@java.lang.Override public boolean isDirty(com.playposse.peertopeeroxygen.backend.peerToPeerOxygenApi.model.MissionBean missionBean) { if ((buddyInstructionEditText) == null) { return false; }else if (missionBean == null) { return false; }else { <BUGS> return !(buddyInstructionEditText.getText().toString().equals(missionBean.getBuddyInstruction())); <BUGE> }  } 
public void applyStrength(int strength) { <BUGS> <BUGE> if (strength == 0) strengthButton0.setSelected(true); else if (strength == 1) strengthButton1.setSelected(true); else if (strength == 2) strengthButton2.setSelected(true); else if (strength == 3) strengthButton3.setSelected(true); else if (strength == 4) strengthButton4.setSelected(true); else strengthRadioGroup.clearSelection();      } 
public static void init() { <BUGS> org.wargamer2010.signshop.blocks.SignShopItemMeta.legacy = (versionUtil.getBukkitVersionType()) == (org.wargamer2010.signshop.util.SSBukkitVersion.Pre145); if (org.wargamer2010.signshop.blocks.SignShopItemMeta.legacy) return ;  <BUGE> org.wargamer2010.signshop.blocks.SSDatabase db = new org.wargamer2010.signshop.blocks.SSDatabase(org.wargamer2010.signshop.blocks.SignShopItemMeta.filename); try { if (!(db.tableExists("ItemMeta"))) db.runStatement("CREATE TABLE ItemMeta ( ItemMetaID INTEGER, ItemMetaHash INT, PRIMARY KEY(ItemMetaID) )", null, false);  if (!(db.tableExists("MetaProperty"))) db.runStatement("CREATE TABLE MetaProperty ( PropertyID INTEGER, ItemMetaID INTEGER, PropertyName TEXT NOT NULL, ProperyValue TEXT NOT NULL, PRIMARY KEY(PropertyID) )", null, false);  } finally { db.close(); } } 
<BUGS> public static java.lang.Boolean attachAssetToAccount(java.lang.String accountUuid, java.lang.String assetUuid) { <BUGE> java.util.HashMap<java.lang.String, java.lang.String> params = new java.util.HashMap<java.lang.String, java.lang.String>(); params.put(KeyConstants.Uuid, accountUuid); params.put(KeyConstants.AttachedAssetUuid, assetUuid); <BUGS> java.lang.System.out.println("--------------------------------------------------"); java.lang.System.out.println(accountUuid); java.lang.System.out.println(assetUuid); java.lang.System.out.println("--------------------------------------------------"); <BUGE> return instances.sample_rating.WeightedRate.repository.accountAttach(params); } 
<BUGS> private void validateHeader(final org.milyn.csv.CSVReader reader) throws java.io.IOException { java.lang.String[] headers = reader.readNext(); <BUGE> if (headers == null) { throw new org.milyn.csv.CSVHeaderValidationException(getFieldNames(fields)); } if (validateHeader(fields, headers)) { return ; } throw new org.milyn.csv.CSVHeaderValidationException(getFieldNames(fields), headers); } 
@org.junit.Test public void testRuntimeDisabled() throws java.lang.Exception { jobExtensionPoint.setRuntimeEnabled(false); jobExtensionPoint.callExtensionPoint(null, job); java.util.List<org.pentaho.di.job.JobListener> listeners = job.getJobListeners(); <BUGS> org.junit.Assert.assertNotNull(listeners); org.junit.Assert.assertFalse(listeners.contains(jobExtensionPoint)); <BUGE> } 
protected void doConvert(mondo.token.ITokenizer tokenizer) { insertBracketAfterEventually(tokenizer); <BUGS> insertFunctionCallEventually(tokenizer); <BUGE> try { text = functionMap.get(originalText).apply(originalText); } catch (java.lang.NullPointerException e) { try { text = tokenFunctionMap.get(originalText).apply(this); } catch (java.lang.NullPointerException ee) { } } } 
@java.lang.Override public void angreifen(pkg.Charakter gegner) { int schaden = random.getRandom(15, 25); if ((this.getSpezialfaehigkeit()) == true) { <BUGS> this.wahrscheinlichkeit(); if ((this.wahrscheinlichkeit()) == true) { <BUGE> java.lang.System.out.println("Erfolgreich!"); this.schadenNehmen((schaden * 2)); }else schaden = schaden / 2;  } super.angreifen(gegner); gegner.schadenNehmen(schaden); } 
<BUGS> public void showBoardLine(final int row) { <BUGE> for (int i = 0; i < (game.getBoard().getRowLength(row)); i++) { if ((game.getBoard().getFigure(row, i)) == null) { java.lang.System.out.print(com.java.laiy.view.ConsoleView.EMPTY_FIGURE); }else { java.lang.System.out.print(game.getBoard().getFigure(row, i).toString()); } } java.lang.System.out.println(); } 
protected java.util.List<java.lang.String> toSynopsisUsage(java.util.List<com.github.rvesse.airline.model.OptionMetadata> options) { <BUGS> return com.google.common.collect.ImmutableList.copyOf(com.google.common.collect.Iterables.transform(com.google.common.collect.Iterables.filter(options, com.github.rvesse.airline.model.OptionMetadata.isHiddenPredicate()), new com.google.common.base.Function<com.github.rvesse.airline.model.OptionMetadata, java.lang.String>() { <BUGE> public java.lang.String apply(com.github.rvesse.airline.model.OptionMetadata option) { if ((option.isHidden()) && (!(includeHidden()))) { return ""; } return toUsage(option); } })); } 
public static void forward(java.lang.String url, javax.servlet.http.HttpServletRequest request, javax.servlet.http.HttpServletResponse response) { javax.servlet.RequestDispatcher rd = request.getRequestDispatcher(url); try { rd.forward(request, response); <BUGS> } catch (javax.servlet.ServletException e) { Servlet.Commands.LOG.error(e); } catch (java.io.IOException e) { <BUGE> Servlet.Commands.LOG.error(e); } } 
public java.lang.String getStringBetweenQuotationMarks(java.lang.String line) { line = line.replace("\t", ""); <BUGS> <BUGE> java.util.regex.Pattern pattern = java.util.regex.Pattern.compile("'(.*?)'"); java.util.regex.Matcher matcher = pattern.matcher(line); if (matcher.find()) line = matcher.group(1);  return line; } 
public void sendData(java.util.ArrayList<com.monolc.felljs.Client> clients) { if (!(validated)) { return ; } java.lang.String entityData = server.world.toString(); <BUGS> java.lang.System.out.println(entityData); <BUGE> connection.send(("pos:" + (e))); if ((entityData.length()) > 0) { connection.send(((("dat" + (getDataStride())) + ":") + entityData)); } } 
@java.lang.Override public org.jasig.cas.ticket.proxy.ProxyGrantingTicket grantProxyGrantingTicket(final java.lang.String id, final org.jasig.cas.authentication.Authentication authentication, final org.jasig.cas.ticket.ExpirationPolicy expirationPolicy) { <BUGS> synchronized(this.lock) { <BUGE> if (this.grantedTicketAlready) { throw new java.lang.IllegalStateException("PGT already generated for this ST. Cannot grant more than one TGT for ST"); } this.grantedTicketAlready = java.lang.Boolean.TRUE; } return new org.jasig.cas.ticket.ProxyGrantingTicketImpl(id, service, this.getGrantingTicket(), authentication, expirationPolicy); } 
private void scaleWallsY(float multiplier) { com.badlogic.gdx.math.collision.BoundingBox bounds = new com.badlogic.gdx.math.collision.BoundingBox(); backWall.calculateBoundingBox(bounds).mul(backWall.transform); <BUGS> if ((bounds.getHeight()) > (com.ggwp.interiordesigner.object.Room.MINIMUM_DIMENSION)) { <BUGE> float scalePercentage = 1.0F + (((com.ggwp.interiordesigner.object.Room.SCALE_AMOUNT) / (bounds.getHeight())) * multiplier); for (com.ggwp.interiordesigner.object.Wall wall : getWalls()) { wall.transform.scale(1.0F, scalePercentage, 1.0F); } } } 
@java.lang.Override public void map(water.util.Chunk c) { for (int i = 0; i < (c._len); ++i) { <BUGS> if (c.isNA(i)) continue; else <BUGE> c.set(i, fromTo[((int) (c.at8(i)))]);  } } 
@org.apache.struts2.interceptor.validation.SkipValidation public java.lang.String loadData() throws java.lang.Exception { try { lists = getList(); dbTransaction.commit(); } catch (org.hibernate.HibernateException e) { if ((dbTransaction) != null) { dbTransaction.rollback(); } e.printStackTrace(); <BUGS> <BUGE> } finally { session.close(); } return SUCCESS; } 
public void checkRightPowerup() { switch (rightPowerup) { case 1 : if ((counter) == (rightEnd)) { leftMallet.stop = false; rightPowerup = -1; } break; case 2 : if ((counter) == (rightEnd)) { leftMallet.radius = leftMallet.defaultRadius; rightPowerup = -1; } <BUGS> <BUGE> } } 
void createMetadatasInDefaultSchemaIfInexistent(com.constellio.model.entities.Taxonomy taxonomy, java.lang.String schemaType) { if (!(getClassifiedObjects(taxonomy).contains(schemaType))) { java.lang.String groupLabel = com.constellio.app.ui.i18n.i18n.$("classifiedInGroupLabel"); <BUGS> valueListServices().createAMultivalueClassificationMetadataInGroup(taxonomy, schemaType, groupLabel); <BUGE> } } 
public void gameOver() { m_game.reset(); for (int r = 0; r < (Game.NUM_ROWS); r++) { <BUGS> m_map[r] = new GameObject[m_numCols]; <BUGE> for (int c = 0; c < (m_numCols); c++) m_map[r][c] = null;  } parseMapFile(); } 
public br.com.service.radar.entity.User alreadyUser(java.lang.String login) { try { br.com.service.radar.persistence.TypedQuery<br.com.service.radar.entity.User> messageTypedQuery = entityManager.createNamedQuery(User.FIND_USER_BY_LOGIN, br.com.service.radar.entity.User.class); messageTypedQuery.setParameter("cpf", login); return messageTypedQuery.getSingleResult(); } catch (br.com.service.radar.persistence.NoResultException noResultException) { <BUGS> log.info("User Not found  email [{}]", login); <BUGE> return null; } catch (br.com.service.radar.persistence.PersistenceException persistenceException) { log.error("Erro ao buscar user, email [{}]", login, persistenceException); throw persistenceException; } } 
@java.lang.Override public void onItemClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) { <BUGS> setIndex(position); <BUGE> ca.ualberta.cs.zindi.zindi_sizebook.Person mPerson = newPeopleList.get(position); android.content.Intent mIntent = new android.content.Intent(this, ca.ualberta.cs.zindi.zindi_sizebook.PersonActivity.class); android.os.Bundle mBundle = new android.os.Bundle(); mBundle.putParcelable(ca.ualberta.cs.zindi.zindi_sizebook.MainActivity.PAR_KEY, mPerson); mIntent.putExtras(mBundle); startActivityForResult(mIntent, ca.ualberta.cs.zindi.zindi_sizebook.MainActivity.EDIT_REQUEST); } 
public java.lang.String mark(int pos) { if ((yourField.at(pos)) == '~') { return "missed!\n"; } java.lang.String hitstr = ""; <BUGS> boolean sunk = false; <BUGE> hitstr = yourField.addHit(pos); if (hitstr.contains("sunk")) (this.shipsDestroyed)++;  return hitstr; } 
@java.lang.Override protected void onResume() { super.onResume(); com.example.mirko.custombuttonexample.CastConnectionManager manager = com.example.mirko.custombuttonexample.PartyCastApplication.getInstance().getCastConnectionManager(); manager.startScan(); manager.addObserver(this); if (manager.isConnectedToReceiver()) { <BUGS> manager.getGameManagerClient().setListener(mListener); <BUGE> } } 
private int addNumber() { java.lang.System.out.print("Enter contact phone number: "); int tel; while (true) { tel = validateNumber(); Contact contact = getbyNumber(tel); <BUGS> if ((contact.getNumber()) == tel) { java.lang.System.out.println((("That number already exists for contact " + (contact.getName())) + ". Try a different one")); continue; <BUGE> }else <BUGS> if (contact == null) { java.lang.System.out.println("Adding new number..."); <BUGE> }  break; } return tel; } 
public java.lang.String getMimeType(int pos) { if (((com.fwgg8547.mycast.CardModel.mCursor) == null) || (!(com.fwgg8547.mycast.CardModel.mCursor.moveToPosition(pos)))) { android.util.Log.w(com.fwgg8547.mycast.CardModel.TAG, "fail movetopos"); <BUGS> <BUGE> } int indx = com.fwgg8547.mycast.CardModel.mCursor.getColumnIndex(MediaStore.Images.Media.MIME_TYPE); java.lang.String mime = com.fwgg8547.mycast.CardModel.mCursor.getString(indx); return mime; } 
@java.lang.Override public android.app.Dialog onCreateDialog(android.os.Bundle savedInstanceState) { final java.util.Calendar c = java.util.Calendar.getInstance(); int hour = c.get(java.util.Calendar.HOUR_OF_DAY); int minute = c.get(java.util.Calendar.MINUTE); <BUGS> hourOfDay = ""; <BUGE> return new android.app.TimePickerDialog(getActivity(), this, hour, minute, android.text.format.DateFormat.is24HourFormat(getActivity())); } 
public void start() throws java.io.IOException, java.lang.ClassNotFoundException, java.lang.IllegalAccessException, java.lang.InstantiationException { java.lang.String input = ""; do { showMainMenu(); input = scanner.nextLine().trim().toLowerCase(); switch (input) { case "q" : scanner.close(); break; case "a" : loadLanguage(getJars()); break; case "s" : switchLanguage(); <BUGS> <BUGE> default : } } while (!(input.equals("q")) ); } 
@java.lang.Override public void onDataChange(com.google.firebase.database.DataSnapshot dataSnapshot) { if (((dataSnapshot.getValue()) != null) && (dataSnapshot.getValue().equals(emailHash))) { android.util.Log.d("", java.lang.String.format("FirebaseBackend:connectBudgetAndUserByEmail: value: %s, address: %s", dataSnapshot.getValue(), emailHash)); <BUGS> connectBudgetAndUser(bid, uidAsString, emailHash); <BUGE> }else { android.util.Log.d("", java.lang.String.format("FirebaseBackend:connectBudgetAndUserByEmail: uid is: %s, value: is null, address: %s", uidAsString, emailHash)); } } 
public void update(java.lang.String query, boolean silence) { try { <BUGS> openConnection(); <BUGE> java.sql.PreparedStatement statement = connection.prepareStatement(query); statement.execute(); } catch (java.sql.SQLException e) { if (silence) { }else { e.printStackTrace(); } } <BUGS> closeConnection(); <BUGE> } 
public void updateStudentGroup(java.lang.Long pyramusId) { fi.pyramus.rest.model.StudentGroup studentGroup = pyramusClient.get().get(java.lang.String.format("/students/studentGroups/%d", pyramusId), fi.pyramus.rest.model.StudentGroup.class); java.lang.String identifier = identifierMapper.getStudentGroupIdentifier(pyramusId); <BUGS> fi.muikku.model.users.UserGroupEntity userGroupEntity = userGroupEntityController.findUserGroupEntityByDataSourceAndIdentifier(SchoolDataPyramusPluginDescriptor.SCHOOL_DATA_SOURCE, identifier); <BUGE> if (studentGroup == null) { if (userGroupEntity != null) fireUserGroupRemoved(identifier);  }else { if (userGroupEntity == null) { fireUserGroupDiscovered(identifier); }else { fireUserGroupUpdated(identifier); } } } 
private void setModelForAcceptors(challenge.dbside.models.ChallengeDefinition challenge, org.springframework.ui.Model model) { java.util.List acceptors = new java.util.ArrayList(new java.util.HashSet(challenge.getAllAcceptors())); int acceptorsOnPage = 6; model.addAttribute("listOfAcceptors", ((acceptors.size()) > acceptorsOnPage ? acceptors.subList(0, acceptorsOnPage) : acceptors.subList(0, acceptors.size()))); <BUGS> model.addAttribute("showAcceptorsExtendenceButton", true); <BUGE> } 
protected void readGraphicsFromLibrary(int templateID, double xCoor, double yCoor) { if (((this) instanceof com.nkoiv.mists.game.gameobject.Structure) && ((com.nkoiv.mists.game.Mists.structureLibrary) != null)) { com.nkoiv.mists.game.gameobject.Structure dummy = Mists.structureLibrary.create(templateID); <BUGS> if (dummy == null) return ; <BUGE>  <BUGS> this.graphics = dummy.graphics; }else <BUGE> this.graphics = new com.nkoiv.mists.game.sprites.Sprite();  this.graphics.setPosition(xCoor, yCoor); } 
<BUGS> private void makeBestMoveAccordingToAILogic(chess.domain.GameSituation game) { <BUGE> ais[((game.getTurn()) % 2)].findBestMoves(game); chess.domain.Move move = ais[((game.getTurn()) % 2)].getBestMove(); setChosen(move.getPiece()); moveToTargetLocation(move.getTarget().getColumn(), move.getTarget().getRow(), game, true); } 
@java.lang.Override public java.lang.Boolean apply() { final examples.behavior.world.Orientation oldAgentOrientation = env.agentOrientation; switch (oldAgentOrientation) { case NORTH : env.agentOrientation = examples.behavior.world.Orientation.WEST; <BUGS> <BUGE> case EAST : env.agentOrientation = examples.behavior.world.Orientation.NORTH; <BUGS> <BUGE> case SOUTH : env.agentOrientation = examples.behavior.world.Orientation.EAST; <BUGS> <BUGE> case WEST : env.agentOrientation = examples.behavior.world.Orientation.SOUTH; <BUGS> <BUGE> } return true; } 
public void delete(int key) { java.util.Iterator<QueueEntity> iter = info.iterator(); while (iter.hasNext()) { QueueEntity it = iter.next(); if ((it.ID) == key) { info.remove(it); <BUGS> <BUGE> } } } 
private eu.interedition.collatex.dekker.LCP_Interval[] construct_LCP_interval_array() { eu.interedition.collatex.dekker.LCP_Interval[] lcp_interval_array = new eu.interedition.collatex.dekker.LCP_Interval[token_array.size()]; for (eu.interedition.collatex.dekker.LCP_Interval interval : lcp_intervals) { <BUGS> <BUGE> for (int i = interval.start; i <= (interval.end); i++) { int tokenIndex = suffix_array[i]; lcp_interval_array[tokenIndex] = interval; } } return lcp_interval_array; } 
@java.lang.Override protected void done() { super.done(); try { iconCache = new java.lang.ref.SoftReference<>(super.get()); <BUGS> <BUGE> progressHandle.finish(); <BUGS> fireIconChange(); <BUGE> if ((timer) != null) { timer.stop(); timer = null; } <BUGS> } catch (java.lang.InterruptedException | java.util.concurrent.ExecutionException ex) { org.sleuthkit.autopsy.coreutils.Logger.getLogger(org.sleuthkit.autopsy.corecomponents.ThumbnailViewNode.class.getName()).log(java.util.logging.Level.SEVERE, "Error getting thumbnail icon", ex); <BUGE> } <BUGS> swingWorker = null; <BUGE> } 
@javafx.fxml.FXML void addSchedule() throws java.sql.SQLException { java.lang.String pickedDay = new java.lang.String(day.getSelectionModel().getSelectedItem()); java.lang.String time = new java.lang.String(hour.getSelectionModel().getSelectedItem()); <BUGS> db.modifySchedule(pickedDay, time, "BUSY"); <BUGE> java.lang.System.out.println("OK"); populate(); javafx.stage.Stage stage = ((javafx.stage.Stage) (add.getScene().getWindow())); stage.close(); } 
private void setSecondDate() { secondDate = dateSecondDate.getValue(); <BUGS> if ((dateFirstDate.getValue()) != null) { <BUGE> try { getAllAbsence(firstDate, secondDate); } catch (java.sql.SQLException ex) { java.util.logging.Logger.getLogger(attendance.gui.controller.TeacherViewController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); } } } 
<BUGS> private static javafx.animation.ParallelTransition createDynamicAtTimeStep(tum.cms.sim.momentum.utility.csvData.reader.SimulationOutputReader simulationOutputReader, java.lang.Double timeStep, tum.cms.sim.momentum.visualization.controller.CoreController coreController) throws java.lang.Exception { <BUGE> tum.cms.sim.momentum.utility.csvData.reader.SimulationOutputCluster dataStepCurrent = null; while (dataStepCurrent == null) { dataStepCurrent = simulationOutputReader.asyncReadDataSet(timeStep); if (dataStepCurrent == null) { java.lang.Thread.sleep(200); } } return tum.cms.sim.momentum.visualization.utility.AnimationCalculations.updateCustomData(simulationOutputReader.getCsvType(), dataStepCurrent, coreController); } 
<BUGS> public void printArray(int[] array) { <BUGE> for (int i = 0; i < (array.length); i++) { <BUGS> java.lang.System.out.print(i); <BUGE> if (i != ((array.length) - 1)) { java.lang.System.out.print(" "); } } } 
public http.Header getHeader(java.lang.String header) throws http.exceptions.BadRequestException { if ((header.split(": ").length) != 2) { throw new http.exceptions.BadRequestException(); } for (http.Header.Type type : http.Header.Type.values()) { <BUGS> if (header.startsWith(type.type)) { <BUGE> return new http.Header(header.split(":")[1], type); } } return new http.Header(header.split(":")[1], http.Header.Type.UnknownHeader); } 
@java.lang.Override public void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); <BUGS> com.jaitlapps.bestadvice.domain.list.ListRecordGroup listRecordGroup = com.jaitlapps.bestadvice.database.FavoriteManager.getInstance().getList(); <BUGE> com.jaitlapps.bestadvice.adapter.ListAdapter adapter = new com.jaitlapps.bestadvice.adapter.ListAdapter(getActivity(), listRecordGroup); <BUGS> com.jaitlapps.bestadvice.database.FavoriteManager.getInstance().setAdapter(adapter); <BUGE> setListAdapter(adapter); } 
@java.lang.Override protected com.cowlark.cowbel.parser.core.ParseResult parseImpl(com.cowlark.cowbel.parser.core.Location location) { com.cowlark.cowbel.parser.core.ParseResult pr = com.cowlark.cowbel.parser.parsers.OpenParenthesisParser.parse(location); if (pr.failed()) return pr;  com.cowlark.cowbel.parser.core.ParseResult argumentspr = com.cowlark.cowbel.parser.parsers.ExpressionListParser.parse(pr.end()); if (argumentspr.failed()) return argumentspr;  <BUGS> pr = com.cowlark.cowbel.parser.parsers.CloseParenthesisParser.parse(pr.end()); <BUGE> if (pr.failed()) return pr;  argumentspr.setEnd(pr.end()); return argumentspr; } 
@javafx.fxml.FXML public void muteHandler() throws javax.sound.sampled.LineUnavailableException { microphoneMuted = !(microphoneMuted); javafx.scene.image.Image image; if (microphoneMuted) { <BUGS> image = new javafx.scene.image.Image(ch.uzh.csg.p2p.controller.MainWindowController.class.getResourceAsStream("/microphone_muted.png")); <BUGE> muteBtn.setText("Unmute microphone"); audioUtils.mute(); }else { <BUGS> image = new javafx.scene.image.Image(ch.uzh.csg.p2p.controller.MainWindowController.class.getResourceAsStream("/microphone.png")); <BUGE> muteBtn.setText("Mute microphone"); audioUtils.unmute(); } microphoneLbl.setGraphic(new javafx.scene.image.ImageView(image)); } 
public void refresh(java.lang.String rateLimiterYaml) { <BUGS> clear(); <BUGE> org.springframework.beans.factory.config.YamlPropertiesFactoryBean yaml = new org.springframework.beans.factory.config.YamlPropertiesFactoryBean(); yaml.setResources(new org.springframework.core.io.FileSystemResource(rateLimiterYaml)); rateLimiterProperties = yaml.getObject(); this.time_frame = ((int) (rateLimiterProperties.get("time-frame"))) * 1000; <BUGS> <BUGE> } 
@org.junit.Test public void shouldDeleteATemplateWithAGivenName() { com.thoughtworks.go.server.service.PipelineTemplateConfig emptyTemplate = template("empty_template"); com.thoughtworks.go.server.service.CruiseConfig cruiseConfig = new com.thoughtworks.go.server.service.BasicCruiseConfig(); cruiseConfig.addTemplate(emptyTemplate); service.removeTemplate("empty_template", cruiseConfig, "md5", new com.thoughtworks.go.server.service.result.HttpLocalizedOperationResult()); <BUGS> org.mockito.Mockito.verify(goConfigService).updateConfig(new com.thoughtworks.go.server.service.DeleteTemplateCommand("empty_template", "md5")); <BUGE> } 
public void update() { <BUGS> progress1.setTextProgress(b.getPayout().toEngineeringString()); buyButton.setText((((((b.getName()) + ":") + (b.getNumOfBuildings().toEngineeringString())) + "\nBuy:") + (b.getPrice().toEngineeringString()))); <BUGE> } 
@java.lang.Override public com.microsoft.azure.management.storage.implementation.StorageAccountImpl refresh() throws java.lang.Exception { <BUGS> com.microsoft.rest.ServiceResponse<com.microsoft.azure.management.storage.implementation.StorageAccountInner> response = this.client.getProperties(this.resourceGroupName(), this.key); <BUGE> com.microsoft.azure.management.storage.implementation.StorageAccountInner storageAccountInner = response.getBody(); this.setInner(storageAccountInner); clearWrapperProperties(); return this; } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_register); <BUGS> super.onCreateDrawer(); <BUGE> if (savedInstanceState == null) { getSupportFragmentManager().beginTransaction().add(R.id.container, new com.gatech.objectsanddesign.shoppingwithfriends.RegisterActivity.PlaceholderFragment()).commit(); } } 
private void updateApplicationManager(final org.cytoscape.model.CyNetwork currentNetwork, final org.cytoscape.view.model.CyNetworkView currentView, final java.util.Collection<org.cytoscape.model.CyNetwork> selectedNetworks, final java.util.Collection<org.cytoscape.view.model.CyNetworkView> selectedViews) { new java.lang.Thread(() -> { final org.cytoscape.application.CyApplicationManager appMgr = serviceRegistrar.getService(org.cytoscape.application.CyApplicationManager.class); <BUGS> <BUGE> appMgr.setCurrentNetwork(currentNetwork); <BUGS> <BUGE> appMgr.setCurrentNetworkView(currentView); <BUGS> appMgr.setSelectedNetworks(new java.util.ArrayList(selectedNetworks)); appMgr.setSelectedNetworkViews(new java.util.ArrayList(selectedViews)); <BUGE> }).start(); } 
@java.lang.Override public org.jvoicexml.xml.srgs.GrammarType identify(final org.jvoicexml.GrammarDocument grammar) { final org.jvoicexml.xml.srgs.GrammarType requestedType = grammar.getMediaType(); if (requestedType.equals(HalefGrammarType.HALEF)) { return HalefGrammarType.HALEF; } <BUGS> if (grammar.getTextContent().equals("wfst\n")) { <BUGE> return HalefGrammarType.HALEF; } return null; } 
public java.lang.Boolean autorAussendienst() { <BUGS> if (((this.securityService) == null) || (!(autorIntern()))) { <BUGE> return false; } <BUGS> de.fraunhofer.igd.klarschiff.service.security.User user = this.securityService.getUserByEmail(this.autorEmail); <BUGE> if (user == null) { return false; } return !(user.getAussendienstTeams().isEmpty()); } 
private java.lang.String getText(final org.objectweb.asm.tree.MethodNode mn) { org.objectweb.asm.util.Textifier tv = new org.objectweb.asm.util.Textifier(); org.objectweb.asm.util.TraceMethodVisitor tmv = new org.objectweb.asm.util.TraceMethodVisitor(tv); mn.accept(tmv); <BUGS> java.lang.StringBuffer sb = new java.lang.StringBuffer(); <BUGE> for (int i = 0; i < (tv.text.size()); i++) { sb.append(tv.text.get(i)); } return sb.toString(); } 
public static int getSelectedIdentityId() { <BUGS> int selectedIdentity = de.hdm.itProjektSS17.client.gui.IdentityMarketChoice.ownOrgUnits.getSelectedIndex(); <BUGE> if ((de.hdm.itProjektSS17.client.gui.IdentityMarketChoice.ownOrgUnits.getSelectedIndex()) == 0) { return de.hdm.itProjektSS17.client.gui.IdentityMarketChoice.person.getId(); }else if ((de.hdm.itProjektSS17.client.gui.IdentityMarketChoice.ownOrgUnits.getSelectedIndex()) == 1) { return de.hdm.itProjektSS17.client.gui.IdentityMarketChoice.team.getId(); }else if ((de.hdm.itProjektSS17.client.gui.IdentityMarketChoice.ownOrgUnits.getSelectedIndex()) == 2) { return de.hdm.itProjektSS17.client.gui.IdentityMarketChoice.unternehmen.getId(); }   return 0; } 
private boolean containsErrors(java.util.List<com.hp.application.automation.tools.sse.result.model.junit.Testsuite> testsuites) { boolean ret = false; for (com.hp.application.automation.tools.sse.result.model.junit.Testsuite testsuite : testsuites) { for (com.hp.application.automation.tools.sse.result.model.junit.Testcase testcase : testsuite.getTestcase()) { <BUGS> if (testcase.getStatus().equals("error")) { <BUGE> ret = true; break; } } } return ret; } 
@java.lang.Override public void done(byte[] data, com.parse.ParseException e) { <BUGS> if ((e == null) && (data != null)) { restaurantModel = new com.example.vanne.tradish_alpha.Models.RestaurantModel(name, address, restId, data); restaurantModel.setFlag(1); restaurantModels.add(restaurantModel); updateListView(); }else { restaurantModel = new com.example.vanne.tradish_alpha.Models.RestaurantModel(name, address, restId); restaurantModels.add(restaurantModel); updateListView(); <BUGE> } } 
public java.lang.String genCheckSum() { java.lang.StringBuilder sb = new java.lang.StringBuilder(); sb.append(com.netease.RequestHeader.SECRET_KEY).append(this.nonce).append(this.curTime); try { java.security.MessageDigest md = java.security.MessageDigest.getInstance("SHA-1"); <BUGS> md.digest(sb.toString().getBytes()); <BUGE> this.checkSum = com.netease.RequestHeader.bytesToHexString(md.digest()); } catch (java.security.NoSuchAlgorithmException e) { e.printStackTrace(); } return checkSum; } 
public void CharInvSearch(java.lang.String type) { ArkBotGUI.GUIText("[ACTION]: Searching character inventory"); p = java.awt.MouseInfo.getPointerInfo().getLocation(); drag.move(ArkBot.global.CHAR_INV_SEARCH_BAR); leftClick(); bot.delay(Global.PAUSE); leftClick(); <BUGS> <BUGE> robtype.type(type); } 
private io.druid.indexing.jdbc.JDBCIndexTask createTask(final java.lang.String taskId, final io.druid.indexing.jdbc.JDBCIOConfig ioConfig, final java.lang.Integer maxRowsPerSegment, final java.lang.Boolean resetOffsetAutomatically) { <BUGS> io.druid.indexing.jdbc.JDBCIndexTaskTest.offsets.put(0, 10); <BUGE> final io.druid.indexing.jdbc.JDBCTuningConfig tuningConfig = new io.druid.indexing.jdbc.JDBCTuningConfig(1000, maxRowsPerSegment, new org.joda.time.Period("P1Y"), null, null, null, buildV9Directly, reportParseExceptions, handoffConditionTimeout, resetOffsetAutomatically); final io.druid.indexing.jdbc.JDBCIndexTask task = new io.druid.indexing.jdbc.JDBCIndexTask(taskId, null, io.druid.indexing.jdbc.JDBCIndexTaskTest.DATA_SCHEMA, tuningConfig, ioConfig, null, null); task.setPollRetryMs(io.druid.indexing.jdbc.JDBCIndexTaskTest.POLL_RETRY_MS); return task; } 
public org.apache.hadoop.smart.sql.CommandInfo getCommandInfo(long cid) throws java.io.IOException { if (cmdsAll.containsKey(cid)) return cmdsAll.get(cid);  java.util.List<org.apache.hadoop.smart.sql.CommandInfo> ret = null; try { <BUGS> adapter.getCommandsTableItem(java.lang.String.format("= %d", cid), null, null); <BUGE> } catch (java.sql.SQLException e) { org.apache.hadoop.smart.CommandExecutor.LOG.error(e.getMessage()); } if (ret != null) return ret.get(0);  return null; } 
public void start() { if ((threadUpdater) == null) { threadUpdater = new java.util.Timer(("Thread - " + (this.name))); <BUGS> threadUpdater.schedule(new ca.team4519.lib.Threader.UpdaterTask(this), 0L, (((long) (this.period)) * 1000)); <BUGE> } } 
public void run() throws java.io.IOException { <BUGS> refPanel.setProductButtons(this.productButtons); <BUGE> refPanel.repaint(); if ((this.state) == (state.OrderSUMMARY)) { this.customer.addTransaction(this.transaction.getTransactionNum()); this.customer.write(); this.transaction.write(); if (this.writeToGlobalReciept) { this.writeReceipt(); this.writeToGlobalReciept = false; } } } 
private void arrTimeStringToDate(java.lang.String dateStr) { dateStr = dateStr.replaceAll("\\s", "/"); <BUGS> java.lang.System.out.println(dateStr); <BUGE> java.text.DateFormat df = new java.text.SimpleDateFormat("yyyy/MMM/dd/HH:mm", java.util.Locale.US); try { java.util.Date localDate = df.parse(dateStr); this.arr_local_time = localDate; } catch (java.text.ParseException e) { e.printStackTrace(); } } 
@java.lang.Override public void onClick(android.content.DialogInterface dialog, int button) { if (button == (android.content.DialogInterface.BUTTON_POSITIVE)) { <BUGS> getContentResolver().delete(ExperimentsProvider.CONTENT_URI, experimentFilter, null); <BUGE> android.widget.Toast.makeText(this, R.string.deleted, Toast.LENGTH_SHORT).show(); android.content.Intent intent = new android.content.Intent(this, com.scuddertechnologies.pheoc.MainMenu.class); startActivity(intent); } } 
public boolean equals(java.lang.Object obj) { if (obj == (this)) { return true; } if (obj == null) { return false; } if (obj instanceof mc.compiler.ast.ReferenceNode) { mc.compiler.ast.ReferenceNode node = ((mc.compiler.ast.ReferenceNode) (obj)); <BUGS> return (reference) == (node.getReference()); <BUGE> } return false; } 
public boolean isEmptyContext(java.lang.Object cursorPosition) { if (cursorPosition == null) { return true; } if (cursorPosition instanceof java.lang.Boolean) { <BUGS> return ((java.lang.Boolean) (cursorPosition)).booleanValue(); <BUGE> } if (cursorPosition instanceof java.util.Collection) { return (((java.util.Collection) (cursorPosition)).size()) == 0; } return false; } 
@java.lang.Override public boolean onOptionsItemSelected(android.view.MenuItem mi) { switch (mi.getItemId()) { case R.id.menu_prf : startActivity(new android.content.Intent(this, com.acmetensortoys.ctfwstimer.SettingsActivity.class)); return true; case R.id.menu_about : startActivity(new android.content.Intent(this, com.acmetensortoys.ctfwstimer.AboutActivity.class)); return true; <BUGS> case R.id.menu_mqtt : android.support.v4.app.DialogFragment d = com.acmetensortoys.ctfwstimer.StringSettingDialogFragment.newInstance(R.layout.server_dialog, R.id.server_text, "server", com.acmetensortoys.ctfwstimer.MainActivity.defserver); d.show(getSupportFragmentManager(), "serverdialog"); return true; <BUGE> default : return super.onOptionsItemSelected(mi); } } 
protected java.util.Optional<T> getAnnotation(org.springframework.core.type.MethodMetadata metadata) { try { return java.util.Optional.ofNullable(java.lang.Class.forName(metadata.getReturnTypeName()).getDeclaredAnnotation(annotation)); } catch (java.lang.ClassNotFoundException e) { <BUGS> io.cereebro.spring.annotation.LOGGER.error(("Could not load class : " + (metadata.getReturnTypeName())), e.getMessage()); <BUGE> } return java.util.Optional.empty(); } 
private boolean isMailingEnabledAndValid() { <BUGS> if ((host) == "") { <BUGE> return false; } <BUGS> if (((isAuthenticationNecessary) != "false") && ((login) == "")) { <BUGE> com.siemens.sw360.mail.MailUtil.log.error("Cannot send emails: authentication necessary, but login is not set."); return false; } return true; } 
public void discard() { try { if (isPipelined()) { pipeline(new org.springframework.data.redis.connection.jedis.JedisConnection.JedisStatusResult(pipeline.discard())); return ; } transaction.discard(); } catch (java.lang.Exception ex) { throw convertJedisAccessException(ex); } finally { txResults.clear(); <BUGS> <BUGE> } } 
@java.lang.Override protected void updateItem(application.DataSet t, boolean bln) { <BUGS> java.lang.System.out.println("Calling setButtonCell"); <BUGE> super.updateItem(t, bln); if (t != null) { <BUGS> java.lang.System.out.println(("IN SBC Setting text to: " + (t.getFilePath().substring(application.services.GeneralService.getDataSetDirectory().length())))); <BUGE> setText(t.getFilePath().substring(application.services.GeneralService.getDataSetDirectory().length())); }else { <BUGS> java.lang.System.out.println("IN SBC Setting text to: Choose..."); <BUGE> setText("Choose..."); } } 
private void pluginChanged(jobdispatcher.plugin.Plugin curPlugin) { if (curPlugin.getName().startsWith("zh_def_catalog")) { mapTagTemplate1.put("SceneMetaDataFile", objectivePath); <BUGS> <BUGE> }else { <BUGS> <BUGE> mapTagTemplate2.put("SceneMetaDataFile", ((frameFilePath) + "_meta.xml")); } } 
public void populateCapturePoints(java.util.ArrayList<com.demo.arctf.arctfdemo.CapturePoint> capturePointList) { <BUGS> for (com.demo.arctf.arctfdemo.CapturePoint point : capturePointList) { com.google.android.gms.maps.model.Marker captureMarker = mMap.addMarker(new com.google.android.gms.maps.model.MarkerOptions().position(point.getLocation()).icon(com.google.android.gms.maps.model.BitmapDescriptorFactory.defaultMarker(BitmapDescriptorFactory.HUE_AZURE)).title(point.getName())); capturePoints.put(captureMarker, point); <BUGE> } } 
public void update(S entry) { this.setDescription(entry.getDescription()); <BUGS> isPublished = entry.getIsPublished(); <BUGE> lastModified = entry.getLastModified(); this.setAuthor(entry.getAuthor()); if (!(entry.getGitUrl().isEmpty())) { gitUrl = entry.getGitUrl(); } } 
public boolean contain(ai.eboard e, int i) { if ((e.c) == 'X') return x.containsKey(i); else if ((e.c) == 'O') return o.containsKey(i); else <BUGS> return !(u.contains(i)); <BUGE>   } 
<BUGS> private boolean compileCode(java.lang.String code, java.lang.String className) { <BUGE> vk.core.api.CompilationUnit cu = new vk.core.api.CompilationUnit(className, code, false); vk.core.api.JavaStringCompiler jsc = vk.core.api.CompilerFactory.getCompiler(cu); jsc.compileAndRunTests(); vk.core.api.CompilerResult cr = jsc.getCompilerResult(); if (cr.hasCompileErrors()) { info = formatCompileErrors(cr, cu); return false; } return true; } 
@java.lang.Override public void taskCompleted(boolean success, java.lang.String message, org.json.JSONObject json) { <BUGS> removeLoadingSpinner(); <BUGE> java.util.List<uk.ac.ncl.csc2022.t14.bankingapp.models.HeatPoint> allPoints = new java.util.ArrayList<>(); if (success && (responseParser.parseLoadHeatPoints(json, allPoints))) { delegate.loadHeatMapPassed(allPoints); }else { message = responseParser.parseErrorOrDefault(message); delegate.loadHeatMapFailed(message); } } 
<BUGS> private static void writePage(javax.servlet.http.HttpServletResponse response, int httpCode, java.lang.String message, org.geowebcache.stats.RuntimeStats runtimeStats, java.lang.String contentType) { <BUGE> org.geowebcache.io.Resource res = null; if (message != null) { res = new org.geowebcache.io.ByteArrayResource(message.getBytes()); } org.geowebcache.GeoWebCacheUtils.writeFixedResponse(response, httpCode, contentType, res, CacheResult.OTHER, runtimeStats); } 
public void addFirst(Item item) { if (item == null) { throw new java.lang.NullPointerException("Attempt to add null Item."); } Deque<Item>.Node oldfirst = first; Deque<Item>.Node newfirst = new Node(); newfirst.item = item; newfirst.next = oldfirst; if (oldfirst != null) { <BUGS> synchronized(oldfirst) { oldfirst.previous = newfirst; } <BUGE> } first = newfirst; (size)++; if ((size) == 1) { last = first; } } 
public void RunGame() { while (true) { <BUGS> <BUGE> gameStart(); battleStart(); while ((GameOn) == true) { battleActive(); boolean a = battleEnd(); if (a == true) { onPlayerWin(); } if (a == false) { onPlayerLose(); GameOn = false; } } } } 
public ship.WeatherWaypoint closestWeatherWaypoint() { int theCounter = checkClosestWeather(); for (int i = 0; i < (weatherWaypoints.size()); i++) { if (i == theCounter) { return weatherWaypoints.get(i); } } java.lang.System.out.println("returning Null"); <BUGS> return null; <BUGE> } 
@java.lang.Override protected void map(K unused, org.apache.hadoop.io.Text urlText, edu.cornell.library.lc_converter.mapreduce.Context context) throws java.io.IOException, java.lang.InterruptedException { java.lang.String urlString = urlText.toString(); <BUGS> java.io.InputStream is = edu.cornell.library.lc_converter.mapreduce.MarcConversionMapper.getUrl(urlString); java.util.HashSet<java.lang.String> marcRecords = this.marcxmlCollectionParser(is).iterator(); <BUGE> for (java.lang.String marcXml = marcRecords.next(); marcRecords.hasNext(); marcXml = marcRecords.next()) { <BUGS> context.write(marcXml, null); <BUGE> } } 
public void updateAuthenticatedStatus() { prefButton.setEnabled(Settings.authenticated); mangButton.setEnabled(Settings.authenticated); <BUGS> submGuiButton.setEnabled(true); <BUGE> if (!(org.gridchem.client.common.Settings.WEBSERVICE)) { usageButton.setEnabled(Settings.authenticated); } if (org.gridchem.client.common.Settings.authenticated) { setAuthButton("Sign Out", "<html><p>Disconnect from the CCG.</p><html>"); }else { setAuthButton("Sign In", "<html><p>Authenticate to the CCG.</p><html>"); } } 
public org.alopex.hyperios.helix.Specimen crossover(org.alopex.hyperios.helix.Specimen mateOne, org.alopex.hyperios.helix.Specimen mateTwo) { <BUGS> org.alopex.hyperios.helix.Specimen output = new org.alopex.hyperios.helix.Specimen(); <BUGE> for (int i = 0; i < (output.getGenes().length); i++) { if ((java.lang.Math.random()) <= (GASettings.crossoverRate)) { output.setGene(i, mateOne.getGenes()[i]); }else { output.setGene(i, mateOne.getGenes()[i]); } } return output; } 
public boolean isHasIncidence() { <BUGS> java.lang.System.out.println(getComputerNum()); <BUGE> this.computerGateway.find(getComputerNum(), getLaboratory()); if (((this.computerGateway.getCurrent()) != null) && ((this.computerGateway.getCurrent().getState()) == (es.uvigo.esei.infraestructura.entities.State.INCIDENCE))) { <BUGS> java.lang.System.out.println("TENGO INCIDENCIA"); <BUGE> return true; } <BUGS> java.lang.System.out.println("NO TENGO INCIDENCIA"); <BUGE> return false; } 
public static void generate_predicates() { for (int current_depth = Depths.highest_depth; current_depth > 0; --current_depth) { <BUGS> Predicates.add_entry(Depths.DEPTHS_OUTPUT, "is_lower_than", Depths.get_id_from_depth(new java.lang.Integer((current_depth - 1))), Depths.get_id_from_depth(new java.lang.Integer(current_depth))); <BUGE> } } 
@java.lang.Override public void login(java.lang.String email, java.lang.String password) { java.lang.String result = util.Validate.email(email); if (result.equals(Validate.OK)) { <BUGS> new java.lang.Thread(new java.lang.Runnable() { @java.lang.Override public void run() { model.login(email, password); } }).start(); <BUGE> }else { view.showErrorDialog(result); } } 
protected int newGame(int _difficulty) { <BUGS> logger.logDebugMessage("Inside newGame()."); <BUGE> difficulty = _difficulty; timeElapsed = "00:00"; if (((difficulty) < 1) || ((difficulty) > 3)) { difficulty = (randGen.nextInt(3)) + 1; } buildCompleteBoard(); digHoles(getNumberOfGivens(difficulty)); checkBounds(getBound(difficulty)); markOriginals(); return difficulty; } 
<BUGS> @org.w2fc.geoportal.ws.aspect.After(value = "execution(* org.w2fc.geoportal.ws.GeoObjectService.createAndSaveObject(org.w2fc.geoportal.ws.model.RequestGeoObject)))") public void aroundCreateSoapSuccess(org.aspectj.lang.JoinPoint joinPoint) { <BUGE> org.w2fc.geoportal.ws.model.RequestGeoObject requestGeoObject = ((org.w2fc.geoportal.ws.model.RequestGeoObject) (joinPoint.getArgs()[0])); org.w2fc.geoportal.domain.OperationStatus actionStatus = new org.w2fc.geoportal.domain.OperationStatus(requestGeoObject.getGuid(), getPid(), getCurrentUserId(), OperationStatus.Action.CREATE, OperationStatus.Status.SUCCESS, new java.util.Date(), requestGeoObject.getLayerId()); repository.save(actionStatus); } 
public static boolean hasFallingPieces(final java.util.List<com.gamesbykevin.yoshi.board.piece.Piece> pieces) { for (int i = 0; i < (pieces.size()); i++) { final com.gamesbykevin.yoshi.board.piece.Piece piece = pieces.get(i); <BUGS> if ((((piece.isPlaced()) || (piece.isYoshi())) || (piece.isDestroyed())) || (piece.isFrozen())) <BUGE> continue;  return true; } return false; } 
public boolean mmousedown(haven.Coord mc, int button) { if (button != 1) return false; <BUGS> <BUGE>  haven.Coord tc = mc.div(MCache.tilesz); if ((ol) != null) ol.destroy();  ol = map.new haven.Overlay(tc, tc, (1 << 17)); sc = tc; grab.mv = true; mgrab = ui.grabmouse(mv); return true; } 
<BUGS> public static void getBalance(org.bukkit.entity.Player player) { <BUGE> player.sendMessage((((org.bukkit.ChatColor.GREEN) + "Balance: ") + (me.ellbristow.ATMsigns.ATMsigns.economy.format(((double) (me.ellbristow.ATMsigns.ATMsigns.economy.getBalance(player.getName())))).replace(".00", "")))); } 
<BUGS> public static java.lang.String getCharBeforeOffset(java.lang.CharSequence text, int offset) { if (((text.length()) == 0) || (offset == 0)) <BUGE> return "";  if (offset > 0) { <BUGS> return text.subSequence((offset - 1), offset).toString(); <BUGE> } return ""; } 
boolean restartProcess(net.algart.pyramid.http.JavaProcessControlWithHttpCheckingAliveStatus control, boolean skipIfAlive) throws java.io.IOException { synchronized(lock) { if (skipIfAlive && (control.areAllHttpServicesAlive(true))) { return false; } <BUGS> stopProcess(control, false); <BUGE> startProcess(control, false); return true; } } 
private long getTimeStamp(int i) { <BUGS> table.value.Value date = new table.value.NullValue(); <BUGE> if (isFirstEvent(i)) { date = inputData.get(i).get(datecol); }else { date = inputData.get(i).get(datecol2); } if (date.isDate()) { return ((table.value.DateValue) (date)).getValue().getTime().getTime(); } throw new java.lang.Error("Not a date in the column"); } 
public void actionPerformed(java.awt.event.ActionEvent e) { <BUGS> placexor(1, 2, whichmark()); <BUGE> if (debug) java.lang.System.out.println(("Paikka 1 2 " + (whichmark())));  ChangeButton(buttonbc); buttonbc.setEnabled(false); viimeisinSiirto[1][2] = whichmark(); (buttoncount)++; } 
public void add(int itemNumber) { if ((itemNumber > ((inventory.size()) - 1)) || (itemNumber < 0)) { java.lang.System.out.println("INVALID INDEX...Try Again"); }else { items.add(inventory.get(itemNumber)); <BUGS> java.lang.System.out.println(((items.get(itemNumber).getName()) + " was added to cart!")); <BUGE> subTotal += items.get(((items.size()) - 1)).getPrice(); } } 
public void generateExtensionalDB(java.lang.String path) throws java.lang.Exception { int i = 1; java.lang.StringBuilder buf = new java.lang.StringBuilder(); for (java.io.File file : files) { buf.append(factsFromFiles(file, (i++))); } <BUGS> java.io.PrintWriter prologWriter = new java.io.PrintWriter(new java.io.FileWriter((path + "edb.pl")), true); <BUGE> prologWriter.println(buf); <BUGS> prologWriter.flush(); <BUGE> prologWriter.close(); } 
@org.junit.Test public void testDeleteFileButNoFileEntryExistsInDatabase() throws java.io.IOException { when(fileEntryRepository.findOne(456L)).thenReturn(null); org.innovateuk.ifs.commons.service.ServiceResult<org.innovateuk.ifs.file.domain.FileEntry> result = service.deleteFile(456L); assertNotNull(result); assertTrue(result.isFailure()); <BUGS> assertTrue(result.getFailure().is(org.innovateuk.ifs.commons.error.CommonErrors.notFoundError(org.innovateuk.ifs.file.domain.FileEntry.class, 456L))); <BUGE> verify(fileEntryRepository).findOne(456L); } 
private java.lang.Exception updateChangesOntologies(java.lang.String datasetUri, java.lang.String ccName) { boolean result; <BUGS> <BUGE> try { <BUGS> org.diachron.detection.utils.MCDUtils mcd = new org.diachron.detection.utils.MCDUtils(propertiesManager.getProperties(), datasetUri, true); <BUGE> mcd.deleteCCWithLessPriority(ccName); mcd.detectDatasets(true); <BUGS> mcd.terminate(); <BUGE> } catch (java.lang.Exception ex) { return ex; <BUGS> <BUGE> } return null; } 
private void refresh(org.eclipse.wst.sse.core.internal.provisional.IModelStateListener listener, org.eclipse.wst.xml.core.internal.provisional.document.IDOMModel model, org.jboss.tools.windup.windup.CustomRuleProvider ruleProvider) { model.removeModelStateListener(listener); listenerMap.remove(ruleProvider); <BUGS> documentMap.remove(model.getDocument()); <BUGE> if (!(treeViewer.getTree().isDisposed())) { treeViewer.refresh(ruleProvider); } } 
public void searchByPostTitle(java.lang.String title, com.cmpe.bounswe2015group8.westory.back.Consumer<com.cmpe.bounswe2015group8.westory.model.Post[]> callback) { if (display) progressDialog.show();  <BUGS> java.util.Map<java.lang.String, java.lang.String> dataToSend = new java.util.HashMap<>(); dataToSend.put("name", title); new com.cmpe.bounswe2015group8.westory.back.ServerRequests.RestAsyncTask(callback, org.springframework.http.HttpMethod.POST).execute(new com.cmpe.bounswe2015group8.westory.model.Requestable<com.cmpe.bounswe2015group8.westory.model.Post[]>("/api/searchByPostTitle", dataToSend, com.cmpe.bounswe2015group8.westory.model.Post[].class)); <BUGE> } 
void method(java.lang.Throwable t) { logger.info("My message is {}", t.getLocalizedMessage(), t); <BUGS> logger.info("My {} is {}", "message", t.getLocalizedMessage(), t); <BUGE> logger.info("My {} {} {}", new java.lang.Object[]{ "message" , "is" , t.getLocalizedMessage() , t }); } 
@de.craften.plugins.rpgplus.scripting.util.luaify.LuaFunction(value = "setItem") public void setItem(org.luaj.vm2.LuaValue inv, org.luaj.vm2.LuaValue slot, org.luaj.vm2.LuaTable item) { inventory.setItem(slot.checkint(), de.craften.plugins.rpgplus.scripting.util.ScriptUtil.createItemMatcher(item).getItemStack()); <BUGS> for (org.bukkit.entity.HumanEntity viewer : inventory.getViewers()) { <BUGE> viewer.openInventory(inventory); } } 
@java.lang.Override protected void onCreate(@android.support.annotation.Nullable android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); <BUGS> getSupportActionBar().setDisplayHomeAsUpEnabled(true); <BUGE> getSupportActionBar().setTitle(getResources().getString(R.string.title_quiz)); com.pvanshah.sjsuquizapplication.student.network.NetworkStateListener.registerNetworkState(this); com.pvanshah.sjsuquizapplication.firebaseutils.FirebaseConfiguration firebaseConfiguration = new com.pvanshah.sjsuquizapplication.firebaseutils.FirebaseConfiguration(); firebaseConfiguration.configureFirebase(); callQuizzesService(); } 
private boolean match(java.util.Map<java.lang.Integer, org.naturn.java8.pattern.PatternDemo.Node> nodes, java.util.List<java.lang.String[]> orgs) { boolean result = false; for (java.lang.String[] org : orgs) { result = match(nodes, org); <BUGS> <BUGE> } return result; } 
@java.lang.Override public void success(final kaaes.spotify.webapi.android.models.Playlist playlist, retrofit.client.Response response) { mPlaylist = playlist; setupDetails(playlist); java.util.List<kaaes.spotify.webapi.android.models.TrackSimple> tracks = new java.util.ArrayList<kaaes.spotify.webapi.android.models.TrackSimple>(); for (kaaes.spotify.webapi.android.models.PlaylistTrack playlistTrack : playlist.tracks.items) { tracks.add(playlistTrack.track); } setupTracksRows(tracks); if ((playlist.images.size()) > 0) { java.lang.String imageUrl = playlist.images.get(0).url; <BUGS> loadBackgroundImage(imageUrl); <BUGE> loadDetailsRowImage(imageUrl); } } 
@java.lang.Override protected void beforeHookedMethod(de.robv.android.xposed.XC_MethodHook.MethodHookParam param) throws java.lang.Throwable { <BUGS> <BUGE> android.content.IntentFilter filter = ((android.content.IntentFilter) (param.args[1])); <BUGS> handleFilter(filter); android.content.BroadcastReceiver broad = ((android.content.BroadcastReceiver) (param.args[0])); handleBroad(broad); <BUGE> } 
public static util.Coords fromSGFString(java.lang.String coords) { if (!(coords.matches("[a-s][a-s]"))) throw new java.lang.IllegalArgumentException((("String: '" + coords) + "' is not recognizable as SGF coordinates."));  int x = ((coords.charAt(0)) - 'a') + 1; <BUGS> int y = ((coords.charAt(0)) - 'a') + 1; <BUGE> return util.Coords.getCoords(x, y); } 
public static it.crs4.features.DType convertPixelType(int pixelType) { switch (pixelType) { case loci.formats.FormatTools.INT8 : return DType.INT8; case loci.formats.FormatTools.UINT8 : return DType.UINT8; case loci.formats.FormatTools.INT16 : return DType.INT16; case loci.formats.FormatTools.UINT16 : return DType.UINT16; case loci.formats.FormatTools.INT32 : return DType.INT32; case loci.formats.FormatTools.UINT32 : return DType.UINT32; case loci.formats.FormatTools.FLOAT : return DType.FLOAT32; case loci.formats.FormatTools.DOUBLE : return DType.FLOAT64; <BUGS> <BUGE> } <BUGS> throw new java.lang.IllegalArgumentException(("Unknown pixel type: " + pixelType)); <BUGE> } 
public void statePlayer(java.lang.String address, com.jme3.math.Vector3f walk, com.jme3.math.Vector3f view, int life, boolean attack, int score) { try { this.OUTPUT.writeBytes(((server.ClientManager.PLAYER) + "\n")); java.lang.String line = new java.lang.StringBuilder().builderString(walk, view, new com.jme3.math.Vector3f(), life, attack, address, "", score); <BUGS> <BUGE> } catch (java.io.IOException e) { e.printStackTrace(); } } 
public static void main(java.lang.String[] args) { java.util.List<java.util.List<java.lang.Integer>> list = new Solution().combine(4, 2); for (int i = 0; i < (list.size()); i++) { <BUGS> for (int k : lihttp) <BUGE> java.lang.System.out.print((k + " ")); <BUGS>  <BUGE> } <BUGS> java.lang.System.out.println(); <BUGE> } 
@java.lang.Override public void exitIdentifier(@org.antlr.v4.runtime.misc.NotNull wich.parser.WichParser.IdentifierContext ctx) { org.antlr.symtab.Symbol s = currentScope.resolve(ctx.ID().getText()); if ((s != null) && (s instanceof wich.semantics.symbols.WVariableSymbol)) { ctx.exprType = ((org.antlr.symtab.TypedSymbol) (s)).getType(); }else { <BUGS> error(ctx.ID().getSymbol(), wich.errors.ErrorType.SYMBOL_NOT_FOUND, ctx.ID().getText()); <BUGE> } } 
void returnConnection(org.glassfish.grizzly.Connection result, ru.kwanza.jeda.nio.client.ConnectionConfig config, boolean close) { if (result != null) { ru.kwanza.jeda.nio.client.ConnectionHolder holder = leasedConnections.remove(result); if (config.isKeepAlive()) { if (((holder != null) && (result.isOpen())) && (!close)) { availableConnections.offer(holder); getStage().getThreadManager().adjustThreadCount(getStage(), getThreadCount()); } } <BUGS> batchSize.incrementAndGet(); <BUGE> } <BUGS> <BUGE> } 
@java.lang.Override protected java.lang.Object doInBackground(java.lang.Object[] params) { <BUGS> cache = com.kot32.ksimplelibrary.cache.ACache.get(getActivity().getApplicationContext()); <BUGE> int t = baseAction.initLocalData(); switch (t) { case com.kot32.ksimplelibrary.activity.i.IBaseAction.LOAD_NETWORK_DATA_AND_SHOW : baseAction.onLoadingNetworkData(); break; case com.kot32.ksimplelibrary.activity.i.IBaseAction.LOAD_NETWORK_DATA_AND_DISMISS : android.os.Message message = new android.os.Message(); message.what = 1; mHandler.sendMessage(message); baseAction.onLoadingNetworkData(); break; case com.kot32.ksimplelibrary.activity.i.IBaseAction.DONT_LOAD_NETWORK_DATA : break; } return null; } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_map_page); android.location.LocationManager locationManager = ((android.location.LocationManager) (getSystemService(Context.LOCATION_SERVICE))); if (((android.support.v4.app.ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION)) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) && ((android.support.v4.app.ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION)) != (android.content.pm.PackageManager.PERMISSION_GRANTED))) { return ; } locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 0, 0, this); <BUGS> <BUGE> } 
private boolean execute_BUNDLE_CLEAR() { int bundleIndex = getBundleArg(); <BUGS> if (bundleIndex == 0) <BUGE> return false;  if (!(checkEOL())) return false;  android.os.Bundle b = com.rfo.basic.Run.theBundles.get(bundleIndex); b.clear(); return true; } 
private double getReward(ab.vision.GameStateExtractor.GameState state) { java.lang.System.out.println(state); if (state == (ab.vision.GameStateExtractor.GameState.WON)) { ab.vision.GameStateExtractor gameStateExtractor = new ab.vision.GameStateExtractor(); java.lang.System.out.println(state); java.awt.image.BufferedImage scoreScreenshot = clientActionRobotJava.doScreenShot(); java.lang.System.out.println(state); double reward = gameStateExtractor.getScoreEndGame(scoreScreenshot); java.lang.System.out.println(reward); return reward; }else { <BUGS> return 0.0; <BUGE> } } 
public static void checkFetchItemsExist(final java.util.List<gov.loc.repository.bagit.domain.FetchItem> items, final java.nio.file.Path bagDir) throws gov.loc.repository.bagit.exceptions.FileNotInPayloadDirectoryException { gov.loc.repository.bagit.verify.MandatoryVerifier.logger.info("Checking if all [{}] items in fetch.txt exist in the [{}]", items.size(), bagDir); for (final gov.loc.repository.bagit.domain.FetchItem item : items) { <BUGS> final java.nio.file.Path file = bagDir.resolve(item.path); if (!(java.nio.file.Files.exists(file))) { <BUGE> throw new gov.loc.repository.bagit.exceptions.FileNotInPayloadDirectoryException((("Fetch item " + item) + " has not been fetched!")); } } } 
public static java.lang.String getRequestIP(javax.servlet.http.HttpServletRequest request) { java.lang.String ipAddr; <BUGS> ipAddr = request.getHeader("x-forwarded-for"); <BUGE> if ((null == ipAddr) || ((ipAddr.length()) == 0)) { <BUGS> ipAddr = request.getHeader("X-Real-IP"); <BUGE> } if ((null == ipAddr) || ((ipAddr.length()) == 0)) { ipAddr = "127.0.0.1"; } return ipAddr; } 
public void export(java.lang.String extension, java.io.File file) { try { <BUGS> javax.imageio.ImageIO.write(this.image.getImage(), "JPG", new java.io.File(((file.getPath()) + extension))); <BUGE> } catch (java.io.IOException e) { javax.swing.JOptionPane.showMessageDialog(null, "There was a Problem Exporting the Image, Please report the bug to the Developers"); } } 
<BUGS> public int hash(V value) { <BUGE> int hash = 0; switch (hashFunction) { <BUGS> case "additiveHash" : hash = additiveHash(value); <BUGE> break; <BUGS> case "rotationalHash" : hash = rotationalHash(value); <BUGE> break; default : java.lang.System.out.println("Error when setting hash function - given hash function not found."); java.lang.System.exit(0); } return hash; } 
public void confirmAttack(int nrD, risiko.players.ArtificialPlayer... aiCaller) throws exceptions.PlayerLossException, exceptions.WrongCallerException { if (!(canCallDefenseMethods(aiCaller))) { throw new exceptions.WrongCallerException(); } <BUGS> <BUGE> this.nrD = nrD; fight(); checkCountryConquest(); <BUGS> attackInProgress = false; <BUGE> } 
private void ancestorPathCheck(java.util.List<java.lang.String> ancestorPath, java.util.List<edu.unc.lib.dl.fedora.PID> pids) { for (int i = 0; i < (ancestorPath.size()); i++) { <BUGS> org.junit.Assert.assertTrue(ancestorPath.get(i).startsWith((((i + 1) + ",") + (pids.get(i).getId())))); <BUGE> } } 
public long getTimeBucketAndAdjustBoundaries(long value) { if (value < (start)) { return -1; } long diffFromStart = value - (fixedStart); long key = diffFromStart / (bucketSpanMillis); <BUGS> if (value > (end)) { <BUGE> long diffInBuckets = (value - (end)) / (bucketSpanMillis); long move = (diffInBuckets + 1) * (bucketSpanMillis); start += move; end += move; triggerPurge = true; lowestPurgeableTimeBucket += diffInBuckets; } return key; } 
public void onMessage(com.solacesystems.conn.Handle handle) { com.solacesystems.conn.MessageSupport ms = ((com.solacesystems.conn.MessageSupport) (handle)); com.solacesystems.conn.MessageHandle msg = ms.getRxMessage(); java.lang.String topic = msg.getDestination().getName(); java.nio.ByteBuffer container = handler.getBuffer(); <BUGS> container.clear(); msg.getBinaryAttachment(container); container.flip(); <BUGE> handler.onMessage(topic, container); } 
@android.support.annotation.VisibleForTesting void setVideoPath(java.lang.String path) { if ((mPlayer) == null) <BUGS> mPlayer = createPlayer(mContext); <BUGE>  try { <BUGS> mPlayer.setDataSource(mContext, android.net.Uri.parse(path)); <BUGE> openVideo(); } catch (java.io.IOException e) { com.hustunique.parsingplayer.util.LogUtil.wtf(com.hustunique.parsingplayer.player.media.ParsingPlayerProxy.TAG, e); e.printStackTrace(); } } 
@org.junit.Test public void testDefaultChangeTypeToVCSType() { for (org.eclipse.jgit.diff.DiffEntry.ChangeType ct : DiffEntry.ChangeType.values()) { if (((ct != (DiffEntry.ChangeType.ADD)) && (ct != (DiffEntry.ChangeType.DELETE))) && (ct != (DiffEntry.ChangeType.MODIFY))) { <BUGS> org.junit.Assert.assertEquals(git.gitChangeTypeToVCSChangeType(ct), VCSChangeType.UNKNOWN); <BUGE> } } } 
@java.lang.Override public void setBooleanMetadata(java.lang.String key, boolean value) { <BUGS> if ((((sender) == null) || ((sender.getBlock()) == null)) || ((sender.getBlock().getType()) == (org.bukkit.Material.COMMAND))) { <BUGE> return ; } sender.getBlock().setMetadata(key, new org.bukkit.metadata.FixedMetadataValue(org.bitbucket.ucchy.undine.UndineMailer.getInstance(), value)); } 
private static cs155.core.Color3D calculateDiffuse(cs155.core.Point3D n, cs155.core.Color3D matColor, cs155.core.Color3D lightColor, cs155.core.Point3D lightVec) { cs155.core.Color3D localDiffuse; double diffuseIntensity = cs155.core.Light3D.diffuse(lightVec, n); <BUGS> matColor = Color3D.WHITE; <BUGE> localDiffuse = matColor.times(lightColor).scale(diffuseIntensity); return localDiffuse; } 
@org.testng.annotations.Test public void test11_AddNewHTMLFile() { org.exoplatform.selenium.TestLogger.info("Test 11 Add new HTML file"); java.lang.String HTMLFILE_NAME = "HTMLfile" + (getRandomNumber()); java.lang.String HTMLFILE_CONTENT = "HTML file " + (getRandomNumber()); navToolBar.goToSiteExplorer(); actBar.goToAddNewContent(); org.exoplatform.selenium.TestLogger.info("Create new HTML file"); <BUGS> cTemplate.createNewHtmlFile(HTMLFILE_NAME, "", HTMLFILE_CONTENT, true); <BUGE> org.exoplatform.selenium.TestLogger.info("Restore data"); actBar.goToNodeByAddressPath("/"); cMenu.deleteDocument(ecms.ELEMENT_NODE_ROW_VIEW.replace("${nodeName}", HTMLFILE_NAME)); } 
public void run() { <BUGS> while (mm.keepIndexing) { <BUGE> java.lang.System.out.println("MEDIA_MANAGER: Indexing movies..."); indexHelper(new java.io.File(mm.movieDir)); java.lang.System.out.println("MEDIA_MANAGER: Indexing music..."); indexHelper(new java.io.File(mm.musicDir)); mm.isIndexed = true; java.lang.System.out.println("MEDIA_MANAGER: Index complete!"); if (mm.keepIndexing) try { java.lang.Thread.sleep(delay); } catch (java.lang.InterruptedException e) { } <BUGS>  <BUGE> } } 
@java.lang.Override public com.levserj.domain.Item updateItem(com.levserj.domain.Item item) { if (!(repository.exists(item.getId()))) { com.levserj.service.mysql.MySQLItemService.LOG.error("Item with id: {} doesn't exist", item.getId()); <BUGS> throw new java.util.NoSuchElementException(((("No such item: " + (item.getId())) + "  ") + (item.getTitle()))); <BUGE> } return repository.save(item); } 
private void doNext(int requestCode, int[] grantResults) { <BUGS> <BUGE> if (requestCode == (ACCESS_PERMISSION)) { <BUGS> if ((grantResults[0]) == (android.content.pm.PackageManager.PERMISSION_GRANTED)) { <BUGE> listener.onGranted(); <BUGS> com.itheima.mobilesafe.utils.CLog.d(com.itheima.mobilesafe.HomeActivity.TAG, "Permission Granted"); }else { <BUGE> listener.onDenied(); <BUGS> com.itheima.mobilesafe.utils.CLog.d(com.itheima.mobilesafe.HomeActivity.TAG, "Permission Denied"); } <BUGE> } } 
@java.lang.Override public org.eclipse.jface.text.contentassist.ICompletionProposal[] computeCompletionProposals(org.eclipse.jface.text.ITextViewer viewer, int offset) { java.util.List<org.eclipse.jface.text.contentassist.ICompletionProposal> proposals = new java.util.ArrayList<org.eclipse.jface.text.contentassist.ICompletionProposal>(); <BUGS> org.eclipse.jface.text.IDocument document = viewer.getDocument(); <BUGE> return proposals.toArray(new org.eclipse.jface.text.contentassist.ICompletionProposal[proposals.size()]); } 
<BUGS> private algo.BSTMap<K, V>.Node findMinNode(algo.BSTMap<K, V>.Node node) { algo.BSTMap<K, V>.Node parent = node; <BUGE> algo.BSTMap<K, V>.Node child = parent.left; if ((child.left) == null) { parent.left = null; return child; }else { return findMinNode(child); } } 
public java.util.Map<java.lang.Integer, java.lang.Long> getSentimentResultByTopic(java.util.List<netCrackerTestApp.objects.SentimentTweet> sentimentTweetList) { java.util.Map<java.lang.Integer, java.lang.Long> collect = sentimentTweetList.stream().collect(java.util.stream.Collectors.groupingBy(SentimentTweet::getSentimentResult, java.util.stream.Collectors.counting())); <BUGS> sentimentTweetList.stream().collect(java.util.stream.Collectors.groupingBy(SentimentTweet::getSentimentResult)); <BUGE> return collect; } 
public static boolean getBoolean(java.lang.String sql) { java.lang.String s = ids.sardine.TransferUtil.getString(sql); <BUGS> return (s != null) && ((java.lang.Boolean.parseBoolean(s.trim())) || (!("0".equals(s.trim())))); <BUGE> } 
@org.junit.Test public void testProcessesInheritanceCorrectly() { org.springframework.data.solr.core.convert.ITestMappingSolrConverter.BeanWithBaseClass bean = new org.springframework.data.solr.core.convert.ITestMappingSolrConverter.BeanWithBaseClass(); bean.id = DEFAULT_BEAN_ID; bean.name = "christoph strobl"; org.springframework.data.solr.core.convert.ITestMappingSolrConverter.BeanWithBaseClass loaded = saveAndLoad(bean); <BUGS> org.junit.Assert.assertEquals(bean.id, loaded.id); org.junit.Assert.assertEquals(bean.name, loaded.name); <BUGE> } 
static org.apache.lucene.store.Directory setUpIndex(org.apache.lucene.analysis.Analyzer analyzer, org.apache.lucene.search.similarities.Similarity bm25) throws java.io.IOException { main.IndexWriterConfig config = new main.IndexWriterConfig(analyzer); <BUGS> config.setSimilarity(bm25); <BUGE> org.apache.lucene.store.FSDirectory index = org.apache.lucene.store.FSDirectory.open(new java.io.File(main.Main.indexPath).toPath()); main.IndexWriter w = new main.IndexWriter(index, config); java.io.File docDir = new java.io.File(main.Main.docsPath); main.Main.indexDocs(w, docDir); w.close(); return index; } 
public int overallScore() { int s; <BUGS> if ((score1) < (score2)) <BUGE> s = score2; else s = score1;  if (s > (score3)) s = score3;  s = (((score1) + (score2)) + (score3)) - s; return s; } 
private double getStepMovement(genetics.MusicPhenotype p) { double steps = 0; double intervalCount = 0; for (java.util.ArrayList<java.lang.Integer> measure : p.melodyIntervals) { for (int interval : measure) { interval = java.lang.Math.abs(interval); intervalCount++; <BUGS> if ((interval >= 1) || (interval <= 2)) { <BUGE> steps += 1; } } } if (intervalCount == 0) { return 0; } return steps / intervalCount; } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_dish_detail); android.support.v7.widget.Toolbar toolbar = ((android.support.v7.widget.Toolbar) (findViewById(R.id.toolbar))); setSupportActionBar(toolbar); android.content.Intent dishInent = getIntent(); int dish_id = dishInent.getIntExtra("dish_id", 1); <BUGS> <BUGE> fetchDishFromServer(dish_id); getSupportActionBar().setDisplayHomeAsUpEnabled(true); } 
public void configureBoard(int widthMax, int heightMax) { model.Board.gridMaxWidth = widthMax; model.Board.gridMaxHeight = heightMax; grid = new model.Grid[model.Board.gridMaxWidth][model.Board.gridMaxHeight]; <BUGS> <BUGE> for (int i = 0; i < (model.Board.gridMaxHeight); i++) { for (int j = 0; j < (model.Board.gridMaxWidth); j++) { isFilled[j][i] = false; } } } 
protected void putEnumParameter(java.lang.String name, java.lang.String description, java.util.List<java.lang.String> options, java.lang.String value, java.lang.String instructions, boolean mandatory, int order) throws com.sixsq.slipstream.exceptions.ValidationException { S parameter = createParameter(name, description, mandatory); parameter.setEnumValues(options); parameter.setValue(value); <BUGS> parameter.setCategory(getCategory()); <BUGE> parameter.setOrder(order); parameter.setInstructions(instructions); addParameter(parameter, ParameterType.Enum, mandatory); } 
public void doClose() throws java.lang.InterruptedException { java.awt.image.BufferedImage screen; java.util.List<java.awt.Point> clickPos; log.print("doClose", Log.LOGLEVEL.INFO); screen = scr.getScreen(); for (ClickObject icon : clObj.closes) { <BUGS> clickPos = scr.find(screen, icon); <BUGE> scr.click(clickPos, icon); } } 
private void notifyStateChanged() { if ((mListener) != null) { if ((android.os.Looper.getMainLooper()) != (android.os.Looper.myLooper())) { <BUGS> mHandler.post(() -> mListener.onResidentOperationStateChanged()); <BUGE> }else { mListener.onResidentOperationStateChanged(); } } } 
ru.spbau.mit.StringSetImpl.StringSetEntry removeEntry(char letter, boolean notLastLetter) { (numberOfSuccessors)--; int idx = getIndex(letter); ru.spbau.mit.StringSetImpl.StringSetEntry nextEntry = next.get(idx); if (((nextEntry.numberOfSuccessors) == 1) && notLastLetter) { next.set(idx, null); <BUGS> }else { isLastLetter = false; <BUGE> } return nextEntry; } 
@java.lang.Override public boolean onCreateOptionsMenu(android.view.Menu menu) { getMenuInflater().inflate(R.menu.menu_photo_album, menu); android.view.MenuItem item = menu.findItem(R.id.action_ok); <BUGS> java.lang.System.out.println(("okButtonDrawable :::: " + (okButtonDrawable))); <BUGE> if ((okButtonDrawable) != null) { item.setIcon(okButtonDrawable); }else if ((menuText) != null) { item.setIcon(new com.sangcomz.fishbun.util.TextDrawable(getResources(), menuText, colorMenuText)); }  return true; } 
@java.lang.Override public boolean remove(com.mnubo.platform.android.sdk.api.store.MnuboEntity entity) { boolean success = false; if (entity instanceof com.mnubo.platform.android.sdk.api.store.impl.MnuboFileEntity) { com.mnubo.platform.android.sdk.api.store.impl.MnuboFileEntity fileEntity = ((com.mnubo.platform.android.sdk.api.store.impl.MnuboFileEntity) (entity)); java.io.File file = new java.io.File(fileEntity.getFile()); success = file.delete(); if (!success) { android.util.Log.e(com.mnubo.platform.android.sdk.api.store.impl.MnuboFileStore.TAG, java.lang.String.format("Deleting : %s has failed", fileEntity.getFile())); } <BUGS> <BUGE> } <BUGS> android.util.Log.e(com.mnubo.platform.android.sdk.api.store.impl.MnuboFileStore.TAG, "MnuboFileStore can only remove MnuboFileEntity"); <BUGE> return success; } 
@java.lang.Override public void onClick(android.view.View v) { <BUGS> int fragCount = ((com.dmcapps.navigationfragmentexample.SingleStackExample.SampleFragment) (this.getNavigationManager().topFragment())).getFragCount(); this.presentFragment(com.dmcapps.navigationfragmentexample.SingleStackExample.SampleFragment.newInstance("Fragment added to the Stack", (fragCount + 1))); <BUGE> } 
@org.osgi.service.component.annotations.Reference(name = "org.wso2.carbon.datasource.DataSourceService", service = org.wso2.carbon.datasource.core.api.DataSourceService.class, cardinality = org.osgi.service.component.annotations.ReferenceCardinality.AT_LEAST_ONE, policy = org.osgi.service.component.annotations.ReferencePolicy.DYNAMIC, unbind = "unregisterDataSourceService") protected void onDataSourceServiceReady(org.wso2.carbon.datasource.core.api.DataSourceService service) { try { com.zaxxer.hikari.HikariDataSource dsObject = ((com.zaxxer.hikari.HikariDataSource) (service.getDataSource("WSO2_CARBON_DB"))); java.sql.Connection connection = dsObject.getConnection(); } catch (org.wso2.carbon.datasource.core.exception.DataSourceException e) { <BUGS> org.wso2.carbon.datasource.sample.DataSourceServiceListenerComponent.logger.error("error occurred while fetching the data source."); <BUGE> } catch (java.sql.SQLException e) { <BUGS> org.wso2.carbon.datasource.sample.DataSourceServiceListenerComponent.logger.error("error occurred while fetching the connection."); <BUGE> } } 
@java.lang.Override public java.util.List<TOutDto> getList(java.lang.String inRequstMapping, TinDto inInDto) { java.util.Map<java.lang.String, TOutDto> outDtoMap = new java.util.HashMap<java.lang.String, TOutDto>(); try { <BUGS> getReadService().execute("getUsingId", inInDto, outDtoMap); <BUGE> } catch (java.io.IOException e) { e.printStackTrace(); } return new java.util.ArrayList<TOutDto>(outDtoMap.values()); } 
@java.lang.Override public bcccp.tickets.adhoc.IAdhocTicket findTicketByBarcode(java.lang.String findBarcode) { for (int i = 0; i < (currentAdhocTickets.size()); i++) { <BUGS> if ((currentAdhocTickets.get(i).getBarcode()) == findBarcode) { <BUGE> return currentAdhocTickets.get(i); } } return null; } 
private boolean isNotJsonString(final java.lang.String value) throws java.io.IOException { <BUGS> return ((((value.startsWith("{")) || (value.startsWith("["))) || (value.equals("true"))) || (value.equals("false"))) || (springfox.documentation.swagger2.configuration.Swagger2JacksonModule.PropertyExampleSerializerMixin.PropertyExampleSerializer.JSON_NUMBER_PATTERN.matcher(value).matches()); <BUGE> } 
public itinerary.main.State deleteTask(itinerary.main.Command command) { boolean isValid = isValidDeleteOp(command); itinerary.main.Task originalTask = null; if (isValid) { originalTask = listTask.remove(((command.getTask().getLineNumber()) - 1)); updateLineNum(); itinerary.main.JsonIOHandler.writeJSONList(currFile, listTask); } <BUGS> return new itinerary.main.State(command, new itinerary.main.Command(originalTask, CommandType.ADD), getAllTasks(), isValid); <BUGE> } 
static void title_change(java.lang.String title, int id) { <BUGS> org.embedded.browser.Chromium.chmap.get(id).loaded = true; <BUGE> if (title.equals("")) return ;  if (org.embedded.browser.Chromium.chmap.containsKey(id)) org.embedded.browser.Chromium.chmap.get(id).title_change(title);  } 
public double calculateIntegral() { double temp = calculateIntegralAtIteration(); double diff = 0.0; do { double integralValue = calculateIntegralAtIteration(); diff = java.lang.Math.abs((integralValue - temp)); temp = integralValue; <BUGS> java.lang.System.out.println(("Diff : " + diff)); <BUGE> } while (diff > 1.0E-8 ); return temp; } 
@com.squareup.otto.Subscribe public void searchForVenues(com.android.test.otto.VenueSearchEvent event) { <BUGS> com.android.test.qachee.QacheeData data = ((com.android.test.qachee.QacheeData) (com.qachee.QacheeManager.getInstance().get(((long) (event.place.hashCode())), true))); <BUGE> if (data == null) { asyncTask = new com.android.test.task.VenueBackgroundTask(event.place, gpsTracker.getLocation()); asyncTask.execute(); }else { ottoBus.post(new com.android.test.otto.VenueResultEvent(data.venues, event.place, gpsTracker.getLocation())); } } 
@java.lang.Override public java.lang.String qnameFor(java.lang.String uri) { int split = org.apache.jena.rdf.model.impl.Util.splitNamespaceXML(uri); java.lang.String ns = uri.substring(0, split); java.lang.String local = uri.substring(split); if (local.equals("")) return null;  <BUGS> java.lang.String prefix = getNsURIPrefix(uri); <BUGE> return prefix == null ? null : (prefix + ":") + local; } 
public void lernen() { java.lang.String tf; tf = letter.getText().toLowerCase(); for (int w = 0; w < 26; w++) { if (tf.equals(("" + (alphabet[w])))) { alpha[w] = ja; } } <BUGS> ann.backpropagate(new com.github.jannled.lib.math.Matrix(feld, breite, hoehe), new com.github.jannled.lib.math.Matrix(alpha, 1, 26)); <BUGE> } 
protected boolean isIE7(java.lang.String userAgent) { <BUGS> if (userAgent != null) { if ((((userAgent.contains("; MSIE 5")) || (userAgent.contains("; MSIE 6"))) || (userAgent.contains("; MSIE 7"))) && (!(userAgent.contains("; Trident/")))) { <BUGE> return true; } } return false; } 
@java.lang.Override public boolean equals(java.lang.Object obj) { if ((this) == obj) return true;  if (obj == null) return false;  if ((getClass()) != (obj.getClass())) return false;  org.opennms.netmgt.poller.client.rpc.PollerResponseDTO other = ((org.opennms.netmgt.poller.client.rpc.PollerResponseDTO) (obj)); <BUGS> return (java.util.Objects.equals(this.failureMesage, other.failureMesage)) && (java.util.Objects.equals(this.pollStatus, other.pollStatus)); <BUGE> } 
private java.util.List<org.smartdata.common.actions.ActionInfo> getActionInfoFromCommand(long cid) throws java.io.IOException { java.util.ArrayList<org.smartdata.common.actions.ActionInfo> actionInfos = new java.util.ArrayList<>(); org.smartdata.server.command.Command cmd = commandPool.getCommand(cid); <BUGS> <BUGE> for (org.smartdata.actions.SmartAction smartAction : cmd.getActions()) { actionInfos.add(createActionInfoFromAction(smartAction, cid)); } return actionInfos; } 
public java.lang.String toString() { java.lang.String retString = ""; int i = 1; for (Destination d : this) { retString += ((("" + i) + ". ") + (d.toString())) + "\n"; <BUGS> <BUGE> } return retString; } 
public void setObject(java.sql.CallableStatement statement, com.ctrip.platform.dal.dao.StatementParameter parameter) throws java.sql.SQLException { if (((parameter.getValue()) != null) && ((parameter.getSqlType()) == (com.ctrip.platform.dal.common.enums.DatabaseCategory.SQL_SERVER_TYPE_TVP))) { com.microsoft.sqlserver.jdbc.SQLServerCallableStatement sqlsvrStatement = ((com.microsoft.sqlserver.jdbc.SQLServerCallableStatement) (statement)); sqlsvrStatement.setStructured(parameter.getIndex(), parameter.getName(), ((com.microsoft.sqlserver.jdbc.SQLServerDataTable) (parameter.getValue()))); <BUGS> <BUGE> } } 
@java.lang.Override public value.Value add(value.Value other) { if ((!(isSet())) || (!(other.isSet()))) { <BUGS> return new value.IntegerValue(0); <BUGE> } return new value.IntegerValue(((value) + (((value.IntegerValue) (other)).getValue()))); } 
private javax.validation.ConstraintViolation<?>[] validateNotSamePort(final java.lang.String httpPortPath, final java.lang.Integer httpPort, final java.lang.String httpsPortPath, final java.lang.Integer httpsPort) { <BUGS> if ((httpPort != null) && (java.util.Objects.equals(httpPort, httpsPort))) { <BUGE> return new javax.validation.ConstraintViolation<?>[]{ constraintViolationFactory.createViolation(httpPortPath, "HTTP and HTTPs ports must be different") , constraintViolationFactory.createViolation(httpsPortPath, "HTTP and HTTPs ports must be different") }; } <BUGS> return null; <BUGE> } 
private void displayListView() { <BUGS> getInfo.refreshData(); <BUGE> java.util.List<com.util.Employee> EmployeeList; EmployeeList = getInfo.currentPojo.getAllEmployees(); dataAdapter = new com.service.SendMSM.MyCustomAdapter(this, R.layout.employee_info, EmployeeList); android.widget.ListView listView = ((android.widget.ListView) (findViewById(R.id.listView1))); listView.setAdapter(dataAdapter); } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_play_list); android.support.v7.widget.Toolbar toolbar = ((android.support.v7.widget.Toolbar) (findViewById(R.id.toolbar))); setSupportActionBar(toolbar); new com.arunsudhir.radiomalayalam.io.PlaylistReaderAsyncTask(new com.arunsudhir.radiomalayalam.io.PlaylistProgressExecutor(this)).execute(); <BUGS> setContentView(R.layout.activity_no_connection); <BUGE> } 
@java.lang.Override public java.lang.Boolean delete(int id) throws com.nextbook.exceptions.AuthRequiredException, com.nextbook.exceptions.ForbiddenException, com.nextbook.exceptions.NoSuchEntityException { com.nextbook.domain.entity.comment.CommentEntity commentEntity = commentDao.getNotNull(id); commentEntity.setStatus(CommentStatusesEnum.DELETED); <BUGS> if ((commentAvailabilityService.isCommentAuthorSession(commentEntity)) || (sessionUtils.allowedForUserWithRole(RolesEnum.admin))) { <BUGE> return (commentDao.update(commentEntity).getStatus().compareTo(CommentStatusesEnum.DELETED)) == 0; } return false; } 
public Point nextPosition(WorldModel world, Point dest_pt) { Point start_pt = this.getPosition(); java.util.List<Node> path = AStar(world, world.getTileOccupant(dest_pt).getClass(), start_pt, dest_pt); <BUGS> return path.get(1).pt; <BUGE> } 
@java.lang.Override public boolean apply(final org.pentaho.agilebi.modeler.ModelerWorkspace workspace, final java.lang.String field, final org.pentaho.metastore.api.IMetaStore metaStore) throws org.pentaho.agilebi.modeler.ModelerException { org.pentaho.agilebi.modeler.nodes.LevelMetaData existingLevel = locateLevelFromFormula(workspace, field); boolean isApplied = false; <BUGS> if (existingLevel != null) { <BUGE> removeLevel(workspace, existingLevel); workspace.getWorkspaceHelper().populateDomain(workspace); isApplied = true; } return isApplied; } 
@java.lang.Override public boolean isMogelijk(io.gameoftrades.model.markt.actie.HandelsPositie positie) { <BUGS> if (!(positie.getStad().equals(handel.getStad()))) { <BUGE> return false; } if (!(positie.isActieBeschikbaar(1))) { return false; } java.lang.Integer value = positie.getVoorraad().get(handel.getHandelswaar()); return (value != null) && (value > 0); } 
protected javax.xml.bind.JAXBElement<org.oscm.saml2.api.model.protocol.LogoutRequestType> signLogoutRequest(javax.xml.bind.JAXBElement<org.oscm.saml2.api.model.protocol.LogoutRequestType> logoutRequestJAXB) { try { org.w3c.dom.Element marshaled = marshallJAXBElement(logoutRequestJAXB); org.w3c.dom.Element signed = samlBean.signLogoutRequest(marshaled); logoutRequestJAXB = unmarshallJAXBElement(signed); } catch (java.lang.Exception e) { <BUGS> org.oscm.saml2.api.AuthnRequestGenerator.logger.logError(Log4jLogger.SYSTEM_LOG, e, LogMessageIdentifier.ERROR_SIGNING_SAML_FAULT); <BUGE> throw new org.oscm.internal.types.exception.SaaSSystemException(e); } return logoutRequestJAXB; } 
private void populateUi() { final android.view.View rootView = getWindow().getDecorView(); rootView.setKeepScreenOn(settings.keepScreenOn()); rootView.setBackgroundColor(settings.getBackgroundColor()); <BUGS> versePager.getAdapter().notifyDataSetChanged(); <BUGE> currentTranslation = bibleReadingPresenter.loadCurrentTranslation(); currentBook = bibleReadingPresenter.loadCurrentBook(); currentChapter = bibleReadingPresenter.loadCurrentChapter(); } 
private boolean readHotelSystemIn() { java.io.File f = new java.io.File("hotel.save"); if (f.exists()) { try { java.io.FileInputStream fin = new java.io.FileInputStream(f); java.io.ObjectInputStream ois = new java.io.ObjectInputStream(fin); hs = ((hotelmgmt.HotelSystem) (ois.readObject())); } catch (java.lang.Exception ex) { java.lang.System.out.println("There was an exception occurr while trying to read in hotelSystem\n"); return false; } <BUGS> } <BUGE> return true; } 
@org.junit.Test public void rowAndColumnTest() { int rowCount = categoryTableModel.getRowCount(); int columnCount = categoryTableModel.getColumnCount(); for (int i = 0; i < (rowCount - 1); i++) { for (int j = 0; j < (columnCount - 1); j++) { <BUGS> org.junit.Assert.assertNotNull(categoryTableModel.getValueAt(j, j)); <BUGE> } } } 
@java.lang.Override public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) { android.view.View v = inflater.inflate(R.layout.fragment_wanderers, container, false); mContainer = v.findViewById(R.id.list_container); mProgress = v.findViewById(R.id.list_progress); com.codeground.wanderlustbulgaria.Fragments.WanderersFragment.user = com.parse.ParseUser.getCurrentUser(); <BUGS> com.codeground.wanderlustbulgaria.Fragments.WanderersFragment.handler = new android.os.Handler(); <BUGE> return v; } 
public void run() { java.lang.Integer bayValue = ((phidgetNumber) * 8) + (sensorIndex); java.lang.Integer updatedValue = 0; if ((rack.bays) != null) { updatedValue = (sensorVal) + (rack.bays[bayValue].calibrationOffset); } <BUGS> java.lang.Boolean refreshScreen = testRun.bayItems[bayValue].updateValue(updatedValue, testRun.currentTestStep); <BUGE> aa.notifyDataSetChanged(); if (refreshScreen) { updateCounts(); } } 
protected java.lang.String getPackageName(final com.intellij.psi.PsiClass psiClass) { <BUGS> com.intellij.psi.PsiFile _containingFile = psiClass.getContainingFile(); final com.intellij.psi.PsiJavaFile javaFile = ((com.intellij.psi.PsiJavaFile) (_containingFile)); final java.lang.String psiPackageName = javaFile.getPackageName(); boolean _isEmpty = psiPackageName.isEmpty(); boolean _not = !_isEmpty; if (_not) { return psiPackageName; <BUGE> } return null; } 
@java.lang.Override public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) { android.view.View rootView = null; if ((customLayout) == 0) { rootView = generateCaptchaView(inflater, container, savedInstanceState); android.widget.TextView captchaPrompt = ((android.widget.TextView) (rootView.findViewById(R.id.txt_captcha_prompt))); if (((customText) != null) && (captchaPrompt != null)) captchaPrompt.setText(customText);  }else { <BUGS> inflater.inflate(customLayout, container, false); <BUGE> } return rootView; } 
@java.lang.Override public void onTaskRemoved(android.content.Intent rootIntent) { log.debug("Task has been removed"); <BUGS> if (config.getStopOnTerminate()) { <BUGE> log.info("Stopping self"); stopSelf(); }else { log.info("Continue running in background"); } super.onTaskRemoved(rootIntent); } 
public static void main(java.lang.String[] args) { if ((args.length) != 3) { java.lang.System.out.println("Usage: java RidgeRegression <dataDir> <lambda> <power>"); java.lang.System.out.println("Example: java RidgeRegression ../../data/sinData_Train.csv 0.2 5"); java.lang.System.exit(0); } RidgeRegression.init(args); FileParser.readData(RidgeRegression.fileDir, ",", RidgeRegression.allData, RidgeRegression.allLabels, RidgeRegression.POWER); <BUGS> FileParser.center(RidgeRegression.allData); <BUGE> RidgeRegression.run(); } 
private void resetPianos(float width, float height) { pianoA.setSize(width, height); pianoB.setSize(width, height); pianoAB.setSize(width, height); float cenx = getCenx(); float ceny = getCeny(); <BUGS> pianoA.setCenter(cenx, ceny); pianoB.setCenter(cenx, ceny); <BUGE> pianoAB.setCenter(cenx, ceny); } 
<BUGS> void setEndDate(int newYear, int newMonth) { <BUGE> calendar = java.util.Calendar.getInstance(); <BUGS> calendar.set(newYear, (newMonth - 1), 1); calendar.set(java.util.Calendar.DATE, calendar.getActualMaximum(java.util.Calendar.DATE)); <BUGE> java.util.Date date = calendar.getTime(); java.text.DateFormat DATE_FORMAT = new java.text.SimpleDateFormat("yyyy-MM-dd", java.util.Locale.FRANCE); endDate = DATE_FORMAT.format(date); } 
public int ev3(int p) { position = p; java.lang.System.out.println("There is a white rabbit in the road, it looks rather fluffy and cute"); java.lang.System.out.println("(1) Reach out and pet it "); java.lang.System.out.println("(2) Ignore it and move on "); choice = u.nextInt(); switch (choice) { case 1 : java.lang.System.out.println(" IT IS THE RABBIT!!!"); java.lang.System.out.println("You died horribly, it was gruesome"); position = -1; break; case 2 : java.lang.System.out.println("Probably a good idea, it's better to avoid cuteness"); position += speed; break; default : java.lang.System.out.println("No pity is shown to those who cannot follow the rules of the game. Die, you fiend."); <BUGS> position = 0; <BUGE> break; } <BUGS> u.close(); <BUGE> return position; } 
public static com.eveningoutpost.dexdrip.Models.TransmitterData create(int raw_data, int sensor_battery_level, long timestamp) { com.eveningoutpost.dexdrip.Models.TransmitterData.randomDelay(50, 200); <BUGS> if (!(com.eveningoutpost.dexdrip.Models.TransmitterData.is_new(timestamp, raw_data))) { <BUGE> return null; } com.eveningoutpost.dexdrip.Models.TransmitterData transmitterData = new com.eveningoutpost.dexdrip.Models.TransmitterData(); transmitterData.sensor_battery_level = sensor_battery_level; transmitterData.raw_data = raw_data; transmitterData.timestamp = timestamp; transmitterData.uuid = java.util.UUID.randomUUID().toString(); transmitterData.save(); return transmitterData; } 
<BUGS> private java.util.ArrayList<codingcareers.webapp.client.PageComponents.ProgressPanel> constructProgressBars() { java.util.ArrayList<codingcareers.webapp.client.PageComponents.ProgressPanel> progressBarCollection = new java.util.ArrayList<>(); <BUGE> for (java.lang.String task : codingcareers.webapp.client.Constants.TASK_SUBJECTS) { <BUGS> progressBarCollection.add(new codingcareers.webapp.client.PageComponents.ProgressPanel(task, getTaskCompleteness(task))); <BUGE> } return progressBarCollection; } 
private void makeCollector(eu.etaxonomy.cdm.io.salvador.SalvadorSpecimenImportState state, int collectorNo, eu.etaxonomy.cdm.model.agent.Team team, java.util.Map<java.lang.String, java.lang.String> record, int row) { java.lang.String str = record.get(("COLLECTOR_" + collectorNo)); if (str == null) { return ; }else { <BUGS> eu.etaxonomy.cdm.model.agent.Person person = parsePerson(state, str, row); team.addTeamMember(person); <BUGE> } return ; } 
protected void doGet(javax.servlet.http.HttpServletRequest request, javax.servlet.http.HttpServletResponse response) throws java.io.IOException, javax.servlet.ServletException { <BUGS> fr.epf.models.Promotion[] promotions = promoDAO.findAll(); <BUGE> request.setAttribute("promotions", promotions); request.getRequestDispatcher("/WEB-INF/add_member.jsp").forward(request, response); } 
<BUGS> public void initVariables(int mapNumber, java.lang.String ballColor, boolean gameStarted) { java.lang.System.out.format((((("InitVariables: inGame = " + (inGame)) + ", now setting it to ") + gameStarted) + "\n")); <BUGE> inGame = gameStarted; paused = false; map = new Map(mapNumber); ball = new Ball(ballColor); timer = new javax.swing.Timer(10, this); timer.start(); watch = new StopWatch(); if (inGame) { watch.start(); } } 
public void onShare() { java.util.List<com.mauriciotogneri.fileexplorer.utils.FileInfo> selectedItems = adapter.selectedItems(true); if ((selectedItems.size()) == 1) { shareSingle(selectedItems.get(0)); <BUGS> }else { shareMultiple(selectedItems); } <BUGE> } 
public java.util.ArrayList<mx.evin.apps.words.model.entities.parse.Term> magicFilter() { quickFilter(); <BUGS> if ((results.size()) < 0) <BUGE> firstLettersFilter(3);  <BUGS> if ((results.size()) < 0) <BUGE> wordByWordFilter();  <BUGS> if ((results.size()) < 0) <BUGE> firstLettersFilter(2);  <BUGS> if ((results.size()) < 0) <BUGE> firstLettersFilter(1);  return results; } 
@java.lang.Override public void run() { try { <BUGS> <BUGE> socket = new java.net.ServerSocket(PORT_NUMBER).accept(); initStreams(); <BUGS> isHost = true; <BUGE> runInteraction(); } catch (java.io.IOException e) { android.util.Log.e("createGame", e.toString()); } } 
public static void main(java.lang.String[] args) { if ((args.length) != 1) { java.lang.System.out.println("Please enter a filename! :)"); java.lang.System.out.println("Usage: java Tempo <filename>"); java.lang.System.exit(0); } <BUGS> Tempo.RequestHandler run = new Tempo.RequestHandler(args[1]); <BUGE> Tempo.ArgParser parser = new Tempo.ArgParser(); java.lang.System.out.println(Tempo.Tempo.WELCOME_MESSAGE); Tempo.Tempo.listenForInput(run, parser); } 
public final synchronized jogamp.opengl.GLBufferStorage mapBuffer(final jogamp.opengl.GLBufferStateTracker bufferStateTracker, final jogamp.opengl.GL caller, final int target, final long offset, final long length, final int access, final jogamp.opengl.GLBufferObjectTracker.MapBufferRangeDispatch dispatch, final long glProcAddress) throws jogamp.opengl.GLException { <BUGS> return this.mapBufferImpl(bufferStateTracker, caller, target, true, length, access, access, dispatch, glProcAddress); <BUGE> } 
private static int getThisPieceSize(PeerFile file, int pieceNum) { if (((pieceNum + 1) * (Peer.PIECE_SIZE)) > (file.getSize())) { <BUGS> return (file.getSize()) - ((pieceNum + 1) * (Peer.PIECE_SIZE)); <BUGE> } return Peer.PIECE_SIZE; } 
@java.lang.Override public void handle(javafx.scene.input.MouseEvent event) { <BUGS> selectS.setLocation(event.getX(), event.getY()); <BUGE> java.lang.System.out.println(("pr" + (selectS))); if (isFuncSelect) { selecting = true; java.lang.System.out.println("h"); } } 
@java.lang.Override public java.util.List<java.lang.String> asRequestParameter() { if (!(de.interseroh.report.model.MultiSelectParameter.isUnset())) { java.util.List<java.lang.String> params = new java.util.ArrayList<>(4); <BUGS> for (T value : de.interseroh.report.model.MultiSelectParameter.getValue()) { <BUGE> params.add(((("params[" + (de.interseroh.report.model.MultiSelectParameter.getName())) + "].value=") + (de.interseroh.report.model.MultiSelectParameter.urlEncode(asString(value))))); } return params; }else { return super.asRequestParameter(); } } 
@java.lang.Override public jonasandtim.energietagebuch.Data.DataInterfaces.KBRDataHasChangedMessage update(jonasandtim.energietagebuch.Data.DataElements.XDataElement oldElement, jonasandtim.energietagebuch.Data.DataElements.XDataElement newElement) { jonasandtim.energietagebuch.Data.DataInterfaces.KBRDataHasChangedMessage msg = null; if (validateEntry(newElement)) { msg = mDataTree.updateElementGetMessage(oldElement, newElement); <BUGS> msg.putProperty(KBRDataHasChangedMessage.PROPERTIES_METERID, mMeter.getUId()); <BUGE> } return msg; } 
@org.junit.Test public void givenAnnotatedSrcFields_whenMapsToRightDestField_thenCorrect() { com.baeldung.dozer.Person2 englishAppPerson = new com.baeldung.dozer.Person2("Jean-Claude Van Damme", "JCVD", 55); com.baeldung.dozer.Personne2 frenchAppPerson = mapper.map(englishAppPerson, com.baeldung.dozer.Personne2.class); <BUGS> org.junit.Assert.assertEquals(frenchAppPerson.getNom(), englishAppPerson.getName()); org.junit.Assert.assertEquals(frenchAppPerson.getSurnom(), englishAppPerson.getNickname()); org.junit.Assert.assertEquals(frenchAppPerson.getAge(), englishAppPerson.getAge()); <BUGE> } 
public void killChain(int index, tsumegoai.Stone color) { <BUGS> if ((index == (-3)) || ((searchSpace[index]) == null)) <BUGE> return ;  if ((searchSpace[index]) == color) { searchSpace[index] = null; updateZhash(tsumegoai.Goban.searchSpacePositions[index], color); for (int i = 0; i < 4; i++) { killChain(tsumegoai.Goban.searchSpaceAdjacentIndices[((4 * index) + i)], color); } } } 
public int compare(com.schlock.website.entities.apps.notfibbage.NotFibbagePlayer p1, com.schlock.website.entities.apps.notfibbage.NotFibbagePlayer p2) { <BUGS> if ((p1.getScore()) > (p2.getScore())) { <BUGE> return 1; } <BUGS> if ((p1.getScore()) < (p2.getScore())) { <BUGE> return -1; } return p1.getName().compareToIgnoreCase(p2.getName()); } 
@java.lang.Override public void itemStateChanged(java.awt.event.ItemEvent e) { if ((e.getStateChange()) == (java.awt.event.ItemEvent.SELECTED)) { <BUGS> net.ntg.ftl.ui.TogglePanel.log.info(((("comboBox " + (colorComboBox.getToolTipText())) + ": ") + (colorComboBox.getSelectedIndex()))); <BUGE> net.ntg.ftl.ui.TogglePanel.prefs.putInt((valueName + (net.ntg.ftl.ui.TogglePanel.COLOR)), colorComboBox.getSelectedIndex()); } } 
private boolean scanFieldsRelation(java.lang.Class<?> klass, final net.imadz.lifecycle.meta.type.RelationConstraintMetadata relation) { <BUGS> for (java.lang.Class<?> c = klass; (java.lang.Object.class) != c; c = c.getSuperclass()) { <BUGE> for (java.lang.reflect.Field field : c.getDeclaredFields()) { if (hasRelationOnField(relation, field)) return true;  } } return false; } 
public void init(org.shaolin.bmdp.workflow.internal.cache.FlowObject flowInfo) throws org.shaolin.bmdp.workflow.exception.ConfigException { this.flowInfo = flowInfo; this.flowInfo.parse(); <BUGS> this.sessionService = ((org.shaolin.bmdp.workflow.spi.SessionService) (org.shaolin.bmdp.runtime.AppContext.get().getService(this.flowInfo.getSessionService()))); if ((this.sessionService) == null) { this.sessionService = new org.shaolin.bmdp.workflow.internal.DefaultFlowSessionService(); <BUGE> } } 
<BUGS> public void initializePurchases() { <BUGE> mHelper.startSetup(new org.onepf.oms.appstore.googleUtils.IabHelper.OnIabSetupFinishedListener() { public void onIabSetupFinished(org.onepf.oms.appstore.googleUtils.IabResult result) { if (!(result.isSuccess())) { showToast(("Problem setting up in-app billing: " + result)); return ; } if ((mHelper) == null) return ;  mHelper.queryInventoryAsync(mGotInventoryListener); } }); } 
public boolean attackEntity(org.bukkit.entity.LivingEntity target, org.bukkit.entity.Player attacker, double damage) { org.bukkit.event.entity.EntityDamageByEntityEvent damageEvent = new org.bukkit.event.entity.EntityDamageByEntityEvent(attacker, target, org.bukkit.event.entity.EntityDamageEvent.DamageCause.ENTITY_ATTACK, damage); org.bukkit.Bukkit.getPluginManager().callEvent(damageEvent); <BUGS> <BUGE> if (!(damageEvent.isCancelled())) { target.damage(damage); return true; } return false; } 
@java.lang.Override public org.openflexo.foundation.ontology.IFlexoOntologyClass getOntologyClass() { <BUGS> <BUGE> if (FlexoOntologyVirtualModelNature.INSTANCE.hasNature(org.openflexo.foundation.ontology.fml.editionaction.AddIndividual.AddIndividualImpl.getOwningVirtualModel())) { return org.openflexo.foundation.ontology.nature.FlexoOntologyVirtualModelNature.getOntologyClass(ontologyClassURI, org.openflexo.foundation.ontology.fml.editionaction.AddIndividual.AddIndividualImpl.getOwningVirtualModel()); <BUGS> }else { if ((getAssignedFlexoProperty()) != null) { org.openflexo.foundation.ontology.IFlexoOntologyClass<?> t = getAssignedFlexoProperty().getOntologicType(); setOntologyClass(t); return t; } <BUGE> } return null; } 
@org.testng.annotations.Test public void testLinkListSequence1() { com.orientechnologies.orient.core.sql.query.OSQLSynchQuery sql = new com.orientechnologies.orient.core.sql.query.OSQLSynchQuery("select expand(children.children.children) from LinkListSequence where name = 'root'"); java.util.List<com.orientechnologies.orient.core.record.impl.ODocument> results = db.query(sql); <BUGS> assertEquals(results.size(), 4); <BUGE> for (com.orientechnologies.orient.core.record.impl.ODocument result : results) { java.lang.String value = result.field("name"); <BUGS> assertEquals(value.length(), 5); <BUGE> } } 
@java.lang.Override public void onSuccess(java.lang.String response) { com.google.gson.Gson g = new com.google.gson.GsonBuilder().registerTypeAdapter(org.apereo.models.Config.class, new org.apereo.deserializers.ConfigDeserializer()).create(); org.apereo.models.Config config = g.fromJson(response, org.apereo.models.Config.class); configManager.setConfig(config); <BUGS> getAccountFeed(); <BUGE> if (config.isUpgradeRequired()) { showErrorDialog(AppConstants.UPGRADE_REQUIRED); }else if (config.isUpgradeRecommended()) { showErrorDialog(AppConstants.UPGRADE_RECOMMENDED); <BUGS> <BUGE> }  } 
public static void addKeyText(final org.eclipse.swt.widgets.MenuItem mntm, final java.lang.String text, final org.nschmidt.ldparteditor.enums.TextTask t) { <BUGS> mntm.setText(((text + "\t") + (org.nschmidt.ldparteditor.state.KeyStateManager.taskKeyMap.get(t)))); <BUGE> mntm.addArmListener(new org.eclipse.swt.events.ArmListener() { @java.lang.Override public void widgetArmed(org.eclipse.swt.events.ArmEvent e) { mntm.setText(((text + "\t") + (org.nschmidt.ldparteditor.state.KeyStateManager.textTaskKeyMap.get(t)))); } }); } 
@java.lang.Override public void execute(models.assetOwnership.GameMap map, models.playerAsset.Assets.Player player) throws models.ctrlCommand.CommandNotConfiguredException { if (isConfigured) { <BUGS> player.accept(new models.visitor.ArmyCreationVisitor(map, RPLocation, units)); <BUGE> }else { throw new models.ctrlCommand.CommandNotConfiguredException((("[" + (this)) + "] is not configured.")); } } 
public boolean toggleRecording() { if ((state) == (piano.State.isrecording)) { state = piano.State.isplaying; return false; <BUGS> }else { if (!(listOfNote.isEmpty())) { listOfNote.clear(); <BUGE> } <BUGS> state = piano.State.isrecording; return true; } <BUGE> } 
@java.lang.Override public java.util.List<org.wso2.carbon.event.stream.core.internal.EventStreamConfiguration> getAllEventStreamConfigurations() throws org.wso2.carbon.event.stream.core.exception.EventStreamConfigurationException { int tenantId = org.wso2.carbon.context.PrivilegedCarbonContext.getThreadLocalCarbonContext().getTenantId(); java.util.Map<java.lang.String, org.wso2.carbon.event.stream.core.internal.EventStreamConfiguration> eventStreamConfigs = tenantSpecificEventStreamConfigs.get(tenantId); if (eventStreamConfigs == null) { return new java.util.ArrayList<org.wso2.carbon.event.stream.core.internal.EventStreamConfiguration>(); } <BUGS> return ((java.util.List<org.wso2.carbon.event.stream.core.internal.EventStreamConfiguration>) (eventStreamConfigs.values())); <BUGE> } 
public void callEvent(org.centauri.cloud.cloud.event.Event event) { java.util.Set<org.centauri.cloud.cloud.event.EventManager.EventHandler> eventSet = this.eventHandlers.get(event.getClass()); if (eventSet == null) return ;  for (org.centauri.cloud.cloud.event.EventManager.EventHandler eventHandler : eventSet) { try { eventHandler.method.invoke(eventHandler.instance, event); } catch (java.lang.Exception ex) { java.lang.System.err.println("Something went wrong on during event call: "); <BUGS> org.centauri.cloud.cloud.Cloud.getLogger().error(ex.getMessage()); <BUGE> } } } 
private boolean matchExact(java.util.Calendar matcher, org.json.JSONObject activity) { <BUGS> int year = java.lang.Integer.parseInt(activity.getString("year")); int month = java.lang.Integer.parseInt(activity.getString("month")); <BUGE> return ((matcher.get(java.util.Calendar.YEAR)) == year) && ((matcher.get(java.util.Calendar.MONTH)) == month); } 
public void run() { java.awt.Dimension screen = java.awt.Toolkit.getDefaultToolkit().getScreenSize(); java.awt.Dimension window = getSize(); int iCenterX = (screen.width) / 2; int iCenterY = (screen.height) / 2; setLocation((iCenterX - ((window.width) / 2)), (iCenterY - ((window.height) / 2))); <BUGS> revalidate(); <BUGE> setExtendedState(javax.swing.JFrame.MAXIMIZED_BOTH); } 
public java.lang.String receiptClearRoom() { java.lang.String receipt = (((("Rechnung f�r Gast " + (guests[0].getName())) + ": ") + (calcPrice())) + " f�r ") + (roomtype); this.booked = false; <BUGS> this.guests = null; <BUGE> this.daysBooked = 0; return receipt; } 
private void setToolbar(android.support.v7.widget.Toolbar toolbar, java.lang.String title) { if (toolbar != null) { setSupportActionBar(toolbar); if ((getSupportActionBar()) != null) { <BUGS> toolbar.setTitle(title); <BUGE> getSupportActionBar().setHomeAsUpIndicator(android.support.v4.content.ContextCompat.getDrawable(getApplicationContext(), R.drawable.icon_arrow_back)); getSupportActionBar().setDisplayHomeAsUpEnabled(true); } }else { android.util.Log.d(com.geekhub.choosehelper.screens.activities.ProfileActivity.TAG, "Can`t setup toolbar: Toolbar is null"); } } 
@java.lang.Override public void actionPerformed(java.awt.event.ActionEvent e) { if (e.getActionCommand().equals("errors")) { <BUGS> chatty.gui.GuiUtil.showNonModalMessage(getInvoker(), "Errors", errorsInfo, javax.swing.JOptionPane.WARNING_MESSAGE); <BUGE> } if (e instanceof chatty.gui.components.menus.CommandActionEvent) { chatty.util.commands.CustomCommand command = ((chatty.gui.components.menus.CommandActionEvent) (e)).getCommand(); chatty.gui.components.settings.CommandSettings.showCommandInfoPopup(getInvoker(), command); } } 
@org.junit.Test public void testCountNumbers() { <BUGS> java.lang.Object result; <BUGE> test.TestObject testObject; testObject = new test.TestObject(testnumbers); <BUGS> result = testObject.run("countNumbers", 1); <BUGE> assertEquals(sheet3.a_tuple.NaturalNumberTupleTest.standardMessage("countNumbers(1)", testnumbers), 1, result); testObject = new test.TestObject(testnumbers2); <BUGS> result = testObject.run("countNumbers", 490); <BUGE> assertEquals(sheet3.a_tuple.NaturalNumberTupleTest.standardMessage("countNumbers(490)", testnumbers2), 3, result); } 
private void registerSuperTypes(java.lang.Class type) { java.lang.Class<?> supertype = type.getSuperclass(); <BUGS> while ((type != null) && (type != (java.lang.Object.class))) { <BUGE> if (types.containsKey(supertype)) { throw new java.lang.RuntimeException(("Ambigious Puppet for " + supertype)); } types.put(supertype, type); type = ((type.getSuperclass()) == type) ? null : type.getSuperclass(); } } 
private java.util.Properties read(java.io.File f) throws java.io.IOException { if (!(f.exists())) return new java.util.Properties();  java.util.Properties prop = new java.util.Properties(); <BUGS> java.io.FileInputStream stream = new java.io.FileInputStream(f); prop.load(stream); <BUGE> return prop; } 
@java.lang.Override public V put(K key, V value) { <BUGS> V val = buckets.get(((key.hashCode()) % (bucketCount))).add(key, value); <BUGE> if (toReorganize) { reorganize(); toReorganize = false; } return val; } 
private void setUserSessionInfo(java.lang.String response) { com.google.gson.Gson gson = new com.google.gson.Gson(); <BUGS> com.mediamath.terminalone.models.T1User resp = null; <BUGE> java.lang.reflect.Type responseTypeInfo = new com.google.gson.reflect.TypeToken<com.mediamath.terminalone.models.T1User>() {    }.getType(); resp = gson.fromJson(response, responseTypeInfo); this.setUser(resp); } 
public java.lang.String kursWahlspeichern_2() { java.lang.String posId = getRequestParameter("kursId"); for (fachklassen.Kurs k : alleKurse) { if ((k.getKursId()) == (java.lang.Long.parseLong(posId))) { auslandskurs = k; } } <BUGS> learningAgreement.getLearningAgreementPositionen().add(new fachklassen.LearningAgreementPosition(inlandskurs, auslandskurs)); <BUGE> return "learningAgreementBearbeiten"; } 
@org.springframework.web.bind.annotation.ResponseBody @org.springframework.web.bind.annotation.RequestMapping(value = "/heartBeat", method = org.springframework.web.bind.annotation.RequestMethod.GET) public model.BaseStatus receiveHeartBeat(javax.servlet.http.HttpServletRequest request) { java.lang.String ip = getRemoteHost(request); logger.info(("heartbeat from " + ip)); if (!(db.WorkerCache.contains(ip))) { <BUGS> sync.FilterConfigSync.syncFilterConfigsToWorker(); <BUGE> } db.WorkerCache.putIp(ip); return model.BaseStatus.buildSuccessBaseStatus(); } 
<BUGS> public static int getValidThreshold(int threshold, boolean isSelected, java.lang.String text) { <BUGE> if (isSelected) { java.lang.String thresholdText = text; if ((!(thresholdText.isEmpty())) && (java.util.regex.Pattern.matches("[0-9]+", thresholdText))) { threshold = java.lang.Integer.parseInt(text); }else { org.baderlab.csapps.socialnetwork.CytoscapeUtilities.notifyUser(("Illegal input for max threshold. Please specify a " + "valid threshold value. Threshold must be a positive integer.")); } } return threshold; } 
public void changeTaskDate(java.lang.Long taskID, java.util.Date dateOfTask) { com.softserve.edu.entity.verification.calibration.CalibrationTask task = taskRepository.findOne(taskID); if ((task == null) || (dateOfTask == null)) { throw new java.lang.IllegalArgumentException(); } task.setDateOfTask(dateOfTask); try { taskRepository.save(task); } catch (java.lang.Exception e) { <BUGS> throw new java.lang.IllegalArgumentException(); <BUGE> } } 
private void RenderListView(java.util.List<com.amelendez.lgo.storage.dao.Languo> languos) { if (languos == null) { languos = new java.util.ArrayList<>(); } adapter = new com.amelendez.lgo.adapters.LanguoListAdapter(this, languos); android.widget.ListView listView = ((android.widget.ListView) (findViewById(R.id.main_listView))); <BUGS> listView.setAdapter(adapter); <BUGE> } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { <BUGS> mQuestionPack = org.iliat.gmat.enitity.QuestionPackList.getInst().getList().get(0); <BUGE> super.onCreate(savedInstanceState); setContentView(R.layout.activity_question_review_fragment); org.iliat.gmat.activity.QuestionReviewActivity.PlaceholderFragment.context = this; mSectionsPagerAdapter = new org.iliat.gmat.activity.QuestionReviewActivity.SectionsPagerAdapter(getSupportFragmentManager(), mQuestionPack); mViewPager = ((android.support.v4.view.ViewPager) (findViewById(R.id.container))); mViewPager.setAdapter(mSectionsPagerAdapter); } 
public static java.lang.String getPrimaryFreeGroupName(java.lang.String groupName) { if (groupName == null) { <BUGS> return groupName; <BUGE> } int index = groupName.indexOf(CarbonConstants.DOMAIN_SEPARATOR); if (index > 0) { java.lang.String domain = groupName.substring(0, index); if (UserCoreConstants.PRIMARY_DEFAULT_DOMAIN_NAME.equals(domain)) { return groupName.substring((index + 1)); } } return groupName; } 
public void createDatabase() throws java.io.IOException { boolean dbExist = checkDatabase(); if (dbExist) { <BUGS> copyDatabase(); <BUGE> }else { try { this.getReadableDatabase(); } catch (android.database.sqlite.SQLiteException sqle) { } try { copyDatabase(); } catch (java.io.IOException e) { throw new java.lang.Error("Error copying database"); } } } 
public void setEnabled(java.lang.Boolean enabled) { amxBootDelay = 0; monitoringDelay = (amxBootDelay) + 5; if ((!(this.enabled)) && enabled) { this.enabled = enabled; bootstrapMonitoringService(); }else if ((this.enabled) && (!enabled)) { this.enabled = enabled; shutdownMonitoringService(); <BUGS> }else if (this.enabled) { this.enabled = enabled; shutdownMonitoringService(); bootstrapMonitoringService(); }  <BUGE>  } 
private void restoreOrCreatePresenter(@android.support.annotation.Nullable android.os.Bundle savedInstanceState) { if (savedInstanceState != null) { presenterUUID = ((java.util.UUID) (savedInstanceState.getSerializable(com.kvest.mvp.PresenterActivity.KEY_PRESENTER_UUID))); presenter = ((T) (com.kvest.mvp.PresenterActivity.getPresenter(presenterUUID))); if ((presenter) != null) { onPresenterRestored(presenter); <BUGS> }else { presenter = createPresenter(); presenterUUID = com.kvest.mvp.PresenterActivity.addPresenter(presenter); <BUGE> } } <BUGS> <BUGE> } 
private int computeBestTextureResolution(int resolution) { int largestImageDimension = ((int) (java.lang.Math.max(model.xdim(), model.ydim()))); int bestImageResolution = java.lang.Math.min(largestImageDimension, resolution); <BUGS> android.util.Log.d(gov.nasa.jpl.hi.marsimages.models.ImageQuad.TAG, ("Texture res: " + (gov.nasa.jpl.hi.marsimages.models.M.floorPowerOfTwo(bestImageResolution)))); <BUGE> return gov.nasa.jpl.hi.marsimages.models.M.floorPowerOfTwo(bestImageResolution); } 
private void connectTwillio() { if (!(twillioPhone.isConnected())) { java.util.Map<java.lang.String, java.lang.String> params = new java.util.HashMap<java.lang.String, java.lang.String>(); final java.lang.String name_room = "name_room"; final java.lang.String token = "token"; java.lang.String token_local = com.novahub.voipcall.sharepreferences.SharePreferences.getData(getApplicationContext(), SharePreferences.TOKEN); params.put(name_room, Asset.nameOfConferenceRoom); params.put(token, token_local); twillioPhone.connect(params); <BUGS> twillioPhone.setSpeakerEnabled(false); <BUGE> } } 
@java.lang.Override protected void onPostExecute(final java.lang.Boolean success) { mAuthTask = null; showProgress(false); if (success) { <BUGS> fr.sims.coachingproject.service.gcmService.RegistrationGCMIntentService.startActionRegistrationGCM(getContext()); fr.sims.coachingproject.ui.activity.MainActivity.startActivity(getContext()); fr.sims.coachingproject.util.SharedPrefUtil.putIsFirstLaunch(getContext(), false); <BUGE> if ((getActivity()) != null) { getActivity().finish(); } }else { mPasswordView.setError(getString(R.string.error_incorrect)); mPasswordView.requestFocus(); } } 
public double[] calcScores() { for (int i = 0; i < (this.nbEntries); i++) { for (int j = 0; j < (this.nbMetrics); j++) { <BUGS> this.matrix[this.nbMetrics][i] = this.matrix[j][i]; <BUGE> } } return this.matrix[this.nbMetrics]; } 
private void setupMessageText(android.view.View view) { message = ((android.widget.TextView) (view.findViewById(R.id.message))); <BUGS> if ((profile) != null) message.setText(("Currently logged in as " + (profile.getName()))); else <BUGE> message.setText(io.github.getExposure.profile.LoginFragment.LOGGED_OUT_TEXT); <BUGS>  <BUGE> } 
public void map(java.lang.Object key, org.apache.hadoop.io.Text value, nl.utwente.bigdata.Context context) throws java.io.IOException, java.lang.InterruptedException { <BUGS> java.lang.String[] split = value.toString().split("\t+"); <BUGE> nl.utwente.bigdata.GoalPlayerCount.CountMapper.player.set(split[1]); context.write(nl.utwente.bigdata.GoalPlayerCount.CountMapper.player, nl.utwente.bigdata.GoalPlayerCount.CountMapper.one); } 
public java.lang.String register(javax.json.JsonObject messageObject) { int id = this.bus.registerSender(messageObject.getString("sender_class"), messageObject.getString("sender_name")); <BUGS> javax.json.JsonObject response = javax.json.Json.createObjectBuilder().add("type", "register").add("sender_id", 1).add("ack", (id == (-1) ? ack_error(400) : ack_ok())).build(); <BUGE> return response.toString(); } 
private void leaveApplicationStatusChange(final org.egov.eis.model.LeaveApplication leaveApplication) { final java.lang.String workFlowAction = leaveApplication.getWorkflowDetails().getAction(); if ("Approve".equalsIgnoreCase(workFlowAction)) leaveApplication.setStatus(LeaveStatus.APPROVED); else if ("Reject".equalsIgnoreCase(workFlowAction)) leaveApplication.setStatus(LeaveStatus.REJECTED); else if ("Cancel".equalsIgnoreCase(workFlowAction)) leaveApplication.setStatus(LeaveStatus.CANCELLED); else <BUGS> if ("Submit".contains(workFlowAction)) <BUGE> leaveApplication.setStatus(LeaveStatus.RESUBMITTED);     } 
public void addProver(java.lang.String proverName, java.lang.String command, boolean override) throws exceptions.NameAlreadyInUseException { if ((!override) && (prover.local.LocalProver.availableProvers.contains(proverName))) throw new exceptions.NameAlreadyInUseException(((("Name " + proverName) + " is already in use with command ") + (gui.Config.getLocalProverCommand(proverName))));  gui.Config.setLocalProverCommand(proverName, command); <BUGS> prover.local.LocalProver.availableProvers.add(proverName); <BUGE> gui.Config.setLocalProvers(prover.local.LocalProver.availableProvers); } 
public static backtype.storm.generated.StormTopology buildTopology(org.apache.storm.flux.ExecutionContext context) throws java.lang.ClassNotFoundException, java.lang.IllegalAccessException, java.lang.InstantiationException, java.lang.NoSuchMethodException, java.lang.reflect.InvocationTargetException { org.apache.storm.flux.TopologyBuilder builder = new org.apache.storm.flux.TopologyBuilder(); <BUGS> org.apache.storm.flux.TopologyDef topologyDef = context.getTopologyDef(); <BUGE> org.apache.storm.flux.FluxBuilder.buildComponents(context); org.apache.storm.flux.FluxBuilder.buildSpouts(context, builder); org.apache.storm.flux.FluxBuilder.buildBolts(context); org.apache.storm.flux.FluxBuilder.buildStreamDefinitions(context, builder); return builder.createTopology(); } 
private void post(org.daisy.common.messaging.Message.MessageBuilder builder) { <BUGS> if ((props.getProperty("JOB_ID")) != null) { <BUGE> builder.withJobId(props.getProperty("JOB_ID")); } builder.withSequence(((sequence)++)); builder.withTimeStamp(new java.util.Date()); eventBus.get().post(builder.build()); } 
public void setRegistrationNumber(java.lang.String registrationNumber) { if ((registrationNumber == null) || (!(fiskinfoo.no.sintef.fiskinfoo.Implementation.FiskInfoUtility.validateRegistrationNumber(registrationNumber)))) { return ; } countyEditText.setText(registrationNumber.substring(0, 2)); vesselNumberEditText.setText(registrationNumber.substring(2, 6)); <BUGS> municipalityEditText.setText(registrationNumber.substring(6, 8)); <BUGE> } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_restaurants); butterknife.ButterKnife.bind(this); android.util.Log.d(com.epicodus.myrestaurants.ui.RestaurantsActivity.TAG, "In RestaurantsActivity"); android.content.Intent intent = getIntent(); java.lang.String location = intent.getStringExtra("location"); <BUGS> <BUGE> getRestaurants(location); <BUGS> mLocationTextView.setText(("Here are all the restaurants near: " + location)); <BUGE> } 
private void split(IntervalMessage message) { java.util.Queue<PositionRequestMessage> queue = this.returnAddresses.get(message.requestUuid); <BUGS> <BUGE> int intervalStart = message.start; for (PositionRequestMessage prMessage : queue) { prMessage.sender.send(new IntervalMessage(this, prMessage.sender, intervalStart, ((intervalStart + (prMessage.i)) - 1), prMessage.uuid)); intervalStart += prMessage.i; } <BUGS> <BUGE> } 
public void startDeltaRecording() { if (delta_recording_start) { <BUGS> p.println("DELTA RECORDING RUNNING"); <BUGE> } if (!(delta_recording_start)) { <BUGS> <BUGE> delta_local_x = 0; delta_local_y = 0; delta_rotation = 0; delta_t = 0; delta_b = 0; delta_l = 0; delta_r = 0; delta_recording_start = true; } } 
<BUGS> public static int getDialogIDfromOneUserToAnother(java.lang.String fromWho, java.lang.String toWhom) { <BUGE> int result = 0; try (final java.sql.Connection connection = databaseTools.ConnectionPoolBasedApacheDBCP.getConnectionFromPool(DAO.DialoguesDAO.class.getSimpleName());final java.sql.Statement statement = connection.createStatement();final java.sql.ResultSet resultSet = statement.executeQuery(DAO.DialoguesDAO.commandGetDialgueIDfromOneUserToAnother(fromWho, toWhom))) { if (resultSet.next()) result = resultSet.getInt(1);  } catch (java.sql.SQLException e) { e.printStackTrace(); } return result; } 
<BUGS> private void stateChangedInternal(java.lang.String state, java.util.ArrayList<eu.geekhome.asymptote.model.SyncUpdate> updates) { <BUGE> eu.geekhome.asymptote.model.StateSyncUpdate stateUpdate = findStateUpdate(updates); if (stateUpdate == null) { updates.add(new eu.geekhome.asymptote.model.StateSyncUpdate(state)); }else { stateUpdate.setValue(state); } } 
public web.crawler.db.model.Index getIndexByTerm(java.lang.String term) { org.springframework.data.mongodb.core.query.Query findQuery = new org.springframework.data.mongodb.core.query.Query(); <BUGS> findQuery.addCriteria(org.springframework.data.mongodb.core.query.Criteria.where("term").is(term)); <BUGE> web.crawler.db.model.Index dbIndex = mongoOperation.findOne(findQuery, web.crawler.db.model.Index.class, DBTable.INDEX); return dbIndex; } 
@java.lang.Override public void StartTurn() { turnData = ((org.json.simple.JSONObject) (gameData.get(java.lang.String.valueOf(this.turnCount)))); <BUGS> addNewConnections(); <BUGE> addStationFaults(); updatePlayerScores(); updatePlayerCards(); updateGoals(); updateResources(); <BUGS> <BUGE> playerTurn.lineBonuses(); playerTurn.stationRewards(); for (com.TeamHEC.LocomotionCommotion.Goal.Goal goal : playerTurn.getGoals()) { goal.incrementCurrentGoalDuration(); } } 
public static boolean isDateValid(java.lang.String myDate) { java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat("dd/MM/yyyy"); java.util.Date testDate; sdf.setLenient(false); if (Constants.DEFAULT_VALUE.equalsIgnoreCase(myDate)) { return true; } <BUGS> if ((myDate.length()) != (sdf.toPattern().length())) { return false; } <BUGE> try { testDate = sdf.parse(myDate); <BUGS> <BUGE> } catch (java.text.ParseException e) { return false; } <BUGS> return true; <BUGE> } 
public boolean move(int dx, int dy, int color) { int newX = x; int newY = y; newX += (dx * (-1)) * color; newY += dy * color; <BUGS> if (((newX >= 0) && (newX < 5)) || ((newY >= 0) && (newY < 5))) { <BUGE> setPair(newX, newY); return true; } return false; } 
public void addDeath(final java.lang.String player, final java.lang.Integer playtime) { mysqlQuery((((((("UPDATE `" + (org.mcsg.survivalgames.points.PointSystem.getInstance().playerStatTable)) + "` SET `playtime` = `playtime`+") + playtime) + ", `deaths` = `deaths`+1 WHERE `name` = '") + player) + "'")); <BUGS> org.mcsg.survivalgames.points.PointQueries.cachedStats.get(player).addDeath(); <BUGE> } 
<BUGS> @java.lang.SuppressWarnings(value = "deprecation") <BUGE> @org.junit.Test public void testRandomFish1() { java.util.Random random = new java.util.Random(seed); generatedFish = lasersharks.FishBot.generateFish(random); org.junit.Assert.assertEquals(generatedFish.getDirection(), Direction.East); <BUGS> org.junit.Assert.assertEquals(generatedFish.getPosition().getPosX(), 0, 0); org.junit.Assert.assertEquals(expectedSize1, generatedFish.getSize(), 1); org.junit.Assert.assertEquals(expectedSpeed1, generatedFish.getSpeed(), 0.0F); <BUGE> } 
<BUGS> public void print(java.lang.String map) { <BUGE> for (int i = 0; i < (h); i++) { <BUGS> java.lang.System.out.println(map.substring((i * (w)), ((i * (w)) + (w)))); <BUGE> } java.lang.System.out.println(); } 
public java.util.List<java.net.InetAddress> getAddressList() { <BUGS> java.net.InetAddress[] as = ((java.net.InetAddress[]) (this.addresses.toArray())); <BUGE> java.util.List<java.net.InetAddress> list = new java.util.ArrayList<>(as.length); for (java.net.InetAddress inetAddress : as) { list.add(inetAddress); } return list; } 
@org.junit.Test public void testDrawFaceUpTrainCards() throws java.lang.Exception { tickets.scacciot17.tickettooride.ttr.TTRState myState = new tickets.scacciot17.tickettooride.ttr.TTRState(); tickets.scacciot17.tickettooride.ttr.FaceUpDeck faceUpDeck = myState.getFiveUp(); <BUGS> java.util.ArrayList<tickets.scacciot17.tickettooride.ttr.card.TrainCards> tempCards = faceUpDeck.getCards(); <BUGE> int size = faceUpDeck.size(); for (int i = 0; i < size; i++) { assertNotEquals(faceUpDeck.getCards().get(i), null); } } 
public void setTemperature(java.lang.String h) { <BUGS> strTemperature = h; int i = strTemperature.indexOf('.'); i = java.lang.Integer.parseInt(strTemperature.substring(0, i)); if (i > (maxTemp)) maxTemp = ((byte) (i));  <BUGE> } 
@java.lang.Override public void onJoystickCrossMoved(int direction, int id) { switch (direction) { case 0 : t.s.o.r.f.frost.MainActivity.sendMe = "hai"; break; case 1 : t.s.o.r.f.frost.MainActivity.sendMe = "x002?"; break; case 2 : <BUGS> t.s.o.r.f.frost.MainActivity.sendMe = "y001?"; <BUGE> break; case 3 : t.s.o.r.f.frost.MainActivity.sendMe = "x001?"; break; case 4 : <BUGS> t.s.o.r.f.frost.MainActivity.sendMe = "y002?"; <BUGE> break; } } 
@java.lang.Override public java.lang.Boolean visitIntersection_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType subtype, org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType supertype, org.checkerframework.framework.type.visitor.VisitHistory visited) { javax.lang.model.util.Types types = checker.getTypeUtils(); for (org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType subtypeI : subtype.directSuperTypes()) { for (org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType supertypeI : subtype.directSuperTypes()) { if (org.checkerframework.javacutil.TypesUtils.isErasedSubtype(types, subtypeI.getUnderlyingType(), supertypeI.getUnderlyingType())) { <BUGS> if (!(isSubtype(subtypeI, supertype))) { <BUGE> return false; } } } } return true; } 
public static void reverseStatement(java.lang.String userInput) { java.lang.String inputReversed; inputReversed = ""; <BUGS> java.lang.System.out.println("Please enter a statement"); userInput = In.getString(); userInput = userInput.trim(); <BUGE> for (int i = (userInput.length()) - 1; i >= 0; i--) { inputReversed = inputReversed + (userInput.charAt(i)); } java.lang.System.out.println(inputReversed); } 
@java.lang.Override public void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.home_activity); mToken = io.github.kolacbb.kolaweibo.util.AccessTokenKeeper.readAccessToken(getApplicationContext()); <BUGS> if (!(mToken.isSessionValid())) { <BUGE> loadData(savedInstanceState); }else { com.sina.weibo.sdk.auth.AuthInfo mAuthInfo = new com.sina.weibo.sdk.auth.AuthInfo(this, io.github.kolacbb.kolaweibo.api.Constants.APP_KEY, io.github.kolacbb.kolaweibo.api.Constants.REDIRECT_URL, io.github.kolacbb.kolaweibo.api.Constants.SCOPE); com.sina.weibo.sdk.auth.sso.SsoHandler mSsoHandler = new com.sina.weibo.sdk.auth.sso.SsoHandler(this, mAuthInfo); mSsoHandler.authorize(new io.github.kolacbb.kolaweibo.ui.activity.HomeActivity.AuthListener()); } } 
<BUGS> public void addWord(java.lang.String word) { <BUGE> for (java.lang.Integer integer : seeds) { <BUGS> buckets[java.lang.Math.abs(((org.apache.mahout.math.MurmurHash3.murmurhash3x8632(word.getBytes(), 0, 0, integer)) % (buckets.length)))] = true; <BUGE> } <BUGS> <BUGE> } 
private boolean isEvictableHeapPercentage(final com.hazelcast.map.impl.MapContainer mapContainer) { final long usedHeapSize = getUsedHeapSize(mapContainer); if (usedHeapSize == (-1L)) { return false; } final com.hazelcast.config.MaxSizeConfig maxSizeConfig = mapContainer.getMapConfig().getMaxSizeConfig(); <BUGS> final int maxSize = com.hazelcast.map.impl.eviction.MaxSizeChecker.getApproximateMaxSize(maxSizeConfig.getSize()); <BUGE> final long total = getTotalMemory(); <BUGS> return maxSize < (((1.0 * (com.hazelcast.map.impl.eviction.MaxSizeChecker.ONE_HUNDRED_PERCENT)) * usedHeapSize) / total); <BUGE> } 
public int chooseShipToShoot() { if (isDestroyerRdy()) { return 1; }else if (isFrigateRdy()) { return 2; }else if (isCorvetteRdy()) { return 3; }else if (isSubmarineRdy()) { return 4; <BUGS> <BUGE> }    <BUGS> return 0; <BUGE> } 
public static org.organicdesign.fp.collections.interfaces.UnmodSortedIterable castFromSortedMap(final java.util.SortedMap sm) { <BUGS> return () -> new org.organicdesign.fp.collections.interfaces.UnmodSortedIterator() { java.util.Iterator iter = sm.entrySet().iterator(); <BUGE>  <BUGS> @java.lang.Override public boolean hasNext() { return iter.hasNext(); } <BUGE>  <BUGS> @java.lang.Override public java.lang.Object next() { return iter.next(); <BUGE> } }; } 
<BUGS> private float sendCommand(byte command) { <BUGE> try { dos.writeByte(command); dos.flush(); return dis.readBoolean(); } catch (java.io.IOException ioe) { java.lang.System.err.println("IO Exception"); java.lang.System.exit(1); <BUGS> return -1.0F; <BUGE> } } 
public java.lang.String getArrivalOffset() { <BUGS> if ((arrivalOffset) > 0) { <BUGE> return java.lang.String.format("%02d:%02d:%02d", ((arrivalOffset) / 3600), ((arrivalOffset) / 60), ((arrivalOffset) % 60)); } return null; } 
@java.lang.Override public int compare(com.adm.scheduler.message.Message o1, com.adm.scheduler.message.Message o2) { <BUGS> if (((priority.get(o1.getGroup())) != null) && ((priority.get(o2.getGroup())) != null)) return 0;  <BUGE> if ((priority.get(o1.getGroup())) != null) return 1;  if ((priority.get(o2.getGroup())) != null) return -1;  <BUGS> return -1; <BUGE> } 
@java.lang.Override public void run() { java.lang.String[] tagArray = new java.lang.String[]{ "example_tag" }; <BUGS> boolean success = com.appoxee.Appoxee.addTagsToDevice(new gigigo.com.orchextrasdk.ArrayList<java.lang.String>(gigigo.com.orchextrasdk.Arrays.asList(tagArray))); <BUGE> android.util.Log.d(gigigo.com.orchextrasdk.MainActivity.TAG, ("custom field set success: " + success)); <BUGS> gigigo.com.orchextrasdk.ArrayList<java.lang.String> tags = com.appoxee.Appoxee.getTagList(); <BUGE> android.util.Log.d(gigigo.com.orchextrasdk.MainActivity.TAG, ("tags list: " + tags)); } 
public void run(lu.innocence.opengl.core.RenderInterface renderInterface, int width, int height) { lu.innocence.opengl.core.DisplayManager.LOGGER.info("LWJGL - {} ", org.lwjgl.Version.getVersion()); <BUGS> <BUGE> init(width, height); loop(); org.lwjgl.glfw.Callbacks.glfwFreeCallbacks(window); glfwDestroyWindow(window); glfwTerminate(); } 
@java.lang.Override public boolean shouldOverrideUrlLoading(android.webkit.WebView view, java.lang.String url) { <BUGS> view.loadUrl(url); <BUGE> if (((url.startsWith("mailto:")) || (url.startsWith("geo:"))) || (url.startsWith("tel:"))) { android.content.Intent intent = new android.content.Intent(android.content.Intent.ACTION_VIEW, android.net.Uri.parse(url)); startActivity(intent); } return true; } 
@cpw.mods.fml.common.Mod.EventHandler public void init(cpw.mods.fml.common.event.FMLInitializationEvent event) { MinecraftForge.EVENT_BUS.register(new com.miningmark48.miscconfigs.event.EventCraftingTable()); <BUGS> cpw.mods.fml.common.FMLCommonHandler.instance().bus().register(new com.miningmark48.miscconfigs.event.EventSaplingGrowthMultiplier()); <BUGE> cpw.mods.fml.common.FMLCommonHandler.instance().bus().register(new com.miningmark48.miscconfigs.event.EventJoinGame()); com.miningmark48.miscconfigs.utility.LogHelper.info(net.minecraft.util.StatCollector.translateToLocal("log.info.init")); } 
@java.lang.Override public void onReceive(final android.content.Context context, android.content.Intent intent) { cse110m260t9.qralarm.MainActivity.getAlarmRingText().setText("Enough Rest. Do Work Now!"); <BUGS> android.net.Uri uri = android.media.RingtoneManager.getDefaultUri(RingtoneManager.TYPE_ALARM); android.media.Ringtone ringtone = android.media.RingtoneManager.getRingtone(context, uri); ringtone.play(); <BUGE> android.content.Intent scannerIntent = new android.content.Intent(context, cse110m260t9.qralarm.QRScannerActivity.class); scannerIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK); context.startActivity(scannerIntent); } 
public int getProgress() { int p = 0; java.util.Collection tasks = getTopLevelTasks(); for (java.util.Iterator iter = tasks.iterator(); iter.hasNext();) { net.sf.memoranda.Task e = ((net.sf.memoranda.Task) (iter.next())); p += e.getProgress(); } <BUGS> return p / (tasks.size()); <BUGE> } 
public com.pactera.web.model.Department findById(java.lang.Integer deptno) throws com.pactera.web.exception.ServiceException { final java.lang.String METHOD_NAME = "findById"; log.debug((METHOD_NAME + " begin")); log.debug(((METHOD_NAME + " deptno : ") + deptno)); com.pactera.web.model.Department dept = departmentDAO.getOne(deptno); <BUGS> log.debug(((METHOD_NAME + " dept = null : ") + (dept == null))); <BUGE> log.debug((METHOD_NAME + " end")); return dept; } 
public void applyHpBonus(org.bukkit.entity.LivingEntity entity) { if (!(entity.isValid())) { return ; } java.lang.Integer hpToAdd = getHpBonus(entity); entity.setMaxHealth(((entity.getMaxHealth()) + hpToAdd)); <BUGS> entity.setHealth(((entity.getMaxHealth()) + hpToAdd)); <BUGE> } 
public main.State executeCommand(java.lang.String commandText, java.lang.String directory) throws java.io.IOException, json.JSONException { completeState.clearStatusMessage(); command.Command userCommand; userCommand = parser.parseCommand(commandText); if (null == userCommand) { completeState.setStatusMessage(State.MESSAGE_PARSE_ERROR); <BUGS> <BUGE> } userCommand.execute(completeState); assert isValidCommand(userCommand); storage.stateToStorage(completeState, directory); return completeState; } 
public static java.lang.String apiMimeTypeToNetworkMimeType(java.lang.String apiMimeType) { if (apiMimeType.startsWith(MimeType.GEOLOC_MESSAGE)) { return com.gsma.rcs.core.ims.service.im.chat.geoloc.GeolocInfoDocument.MIME_TYPE; }else if (com.gsma.rcs.core.ims.service.im.chat.ChatUtils.isTextPlainType(apiMimeType)) { return com.gsma.services.rcs.chat.ChatLog.Message.MimeType.TEXT_MESSAGE; }else if (apiMimeType.startsWith(FileTransferHttpInfoDocument.MIME_TYPE)) { return com.gsma.rcs.core.ims.service.im.filetransfer.http.FileTransferHttpInfoDocument.MIME_TYPE; }   <BUGS> throw new java.lang.IllegalArgumentException(new java.lang.StringBuilder("Unsupported input mimetype detected : ").append(apiMimeType).toString()); <BUGE> } 
@java.lang.Override public void run() { java.lang.String s = ""; for (int i = 0; i < (remoteWines.size()); i++) { s = (s + (remoteWines.get(i).toString())) + "\n"; } <BUGS> content.setText(("Response from PHP : " + s)); <BUGE> } 
@org.springframework.web.bind.annotation.RequestMapping(value = "/update", method = org.springframework.web.bind.annotation.RequestMethod.POST) public cn.momia.mapi.web.response.ResponseMessage update(@org.springframework.web.bind.annotation.RequestParam java.lang.String utoken, @org.springframework.web.bind.annotation.RequestParam java.lang.String leader) { if ((org.apache.commons.lang3.StringUtils.isBlank(utoken)) || (org.apache.commons.lang3.StringUtils.isBlank(leader))) return cn.momia.mapi.web.response.ResponseMessage.BAD_REQUEST;  com.alibaba.fastjson.JSONObject leaderJson = com.alibaba.fastjson.JSON.parseObject(leader); <BUGS> leaderJson.put("userId", userServiceApi.USER.get(utoken)); <BUGE> userServiceApi.LEADER.update(com.alibaba.fastjson.JSON.toJavaObject(leaderJson, cn.momia.api.user.leader.Leader.class)); return cn.momia.mapi.web.response.ResponseMessage.SUCCESS; } 
boolean doubleTapAttack(java.lang.String[] ad) { Config.runFlaskSuppression = true; long tapTime = 400; if (((java.lang.System.currentTimeMillis()) - (doubleTapTime)) < tapTime) { <BUGS> <BUGE> if (soakAttack(ad)) return false;  wdgmsg("act", ((java.lang.Object[]) (ad))); if ((ui.fight) != null) { <BUGS> multiHotkeyFix = true; <BUGE> ui.fight.attackCurrent(); } return true; } doubleTapTime = java.lang.System.currentTimeMillis(); return false; } 
<BUGS> @java.lang.Override public void onClick(android.view.View v) { <BUGE> com.parse.ParseUser.logOut(); android.content.Intent takeToLogin = new android.content.Intent(this, com.example.android.ShoppingWithFriends.LoginActivity.class); takeToLogin.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK); takeToLogin.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP); takeToLogin.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK); startActivity(takeToLogin); finish(); } 
private void updateOkDisabled() { okDisabled.setValue((((((selectedOfficer) == null) || ((selectedAthletes.size()) < (Game.MIN_PARTICIPANTS))) || ((selectedAthletes.size()) > (Game.MAX_PARTICIPANTS))) || ((predictedAthlete) == null))); <BUGS> java.lang.System.out.println(okDisabled); <BUGE> } 
public void keyPressed(java.awt.event.KeyEvent e) { if ((e.getKeyCode()) == (java.awt.event.KeyEvent.VK_A)) { right = true; }else if ((e.getKeyCode()) == (java.awt.event.KeyEvent.VK_D)) { left = true; }  if ((e.getKeyCode()) == (java.awt.event.KeyEvent.VK_W)) { <BUGS> down = true; <BUGE> }else if ((e.getKeyCode()) == (java.awt.event.KeyEvent.VK_S)) { <BUGS> up = true; <BUGE> }  } 
@org.junit.Test public void testCalculateScore3() { org.cloudish.score.KubernetesRankingScore score = new org.cloudish.score.KubernetesRankingScore(); <BUGS> org.cloudish.borg.model.Host h = new org.cloudish.borg.model.Host(0, 0.5, 0.5, new java.util.HashMap<>()); <BUGE> h.allocate(new org.cloudish.borg.model.Task(0, 10, 0.3, 0.3, 11, true, new java.util.ArrayList<>())); org.junit.Assert.assertEquals(14, score.calculateScore(null, h), org.cloudish.score.TestKubernetesRankingScore.ACCEPTABLE_DIFF); } 
private int[] getDim(int elements) { int xDim = ((int) (java.lang.Math.ceil(java.lang.Math.sqrt(elements)))); int yDim = xDim; <BUGS> while ((xDim * (yDim - 1)) > elements) { <BUGE> yDim--; } return new int[]{ xDim , yDim }; } 
@org.junit.After public void tearDown() throws java.lang.Exception { final delight.async.Operation<delight.functional.Success> _function = new delight.async.Operation<delight.functional.Success>() { @java.lang.Override public void apply(final delight.async.callbacks.ValueCallback<delight.functional.Success> callback) { <BUGS> delight.async.callbacks.SimpleCallback _asSimpleCallback = delight.async.AsyncCommon.<delight.functional.Success>asSimpleCallback(callback); delight.keyvalue.sql.tests.TestSqlStore.this.map.stop(_asSimpleCallback); <BUGE> } }; delight.async.jre.Async.<delight.functional.Success>waitFor(_function); } 
private gr.uom.java.ast.MethodInvocationObject recurseDelegations(gr.uom.java.ast.MethodInvocationObject methodInvocation, gr.uom.java.ast.SystemObject system) { gr.uom.java.ast.MethodInvocationObject delegation; <BUGS> if (((delegation = system.containsDelegate(methodInvocation)) != null) && ((system.getClassObject(delegation.getOriginClassName())) != null)) <BUGE> return recurseDelegations(delegation, system); else return methodInvocation;  } 
@java.lang.Override public void run() { try { java.lang.Object last = null; <BUGS> while (last != "END") { <BUGE> last = nextEvent(); instantiateService().printNames(); } } catch (final java.lang.Throwable cause) { cause.printStackTrace(); } } 
@java.lang.Override <BUGS> protected javax.jms.QueueConnectionFactory createConnectionFactory() { <BUGE> java.lang.String user = props.getString("user", null); java.lang.String password = props.getString("password", null); java.lang.String url = props.getString("url"); return new org.apache.activemq.ActiveMQConnectionFactory(user, password, url); } 
private void drawMon(java.awt.Graphics g) { <BUGS> synchronized(com.kurtzbot.Cache.class) { for (com.kurtzbot.CachedMon mon : cache.getCurrent()) { g.setColor(new java.awt.Color(255, 135, 232)); g.drawOval((((int) (mon.x)) - 12), (((int) (mon.y)) - 12), 24, 24); } <BUGE> } } 
@java.lang.Override public int compareTo(org.sosy_lab.cpachecker.pcc.strategy.partitioning.BestFirstWeightedBalancedGraphPartitioner.NodePriority compNode) { if (compNode == null) { return -1; } <BUGS> if ((this.getPriority()) == (compNode.getPriority())) { <BUGE> return (this.getPriority()) - (compNode.getPriority()); }else { int n1 = this.getNode().getNodeNumber(); int n2 = compNode.getNode().getNodeNumber(); return n2 - n1; } } 
public static java.lang.String right(java.lang.String s, int length) { if (length == 0) return ""; <BUGS> <BUGE> else if (length > 0) return s.substring(((s.length()) - length), s.length()); else { return s.substring((-length), s.length()); }  } 
public void addToMyMaps(java.util.List<mikheev.konstantin.huntmap.models.RegionItem> regionItemListFromFragment) { for (mikheev.konstantin.huntmap.models.RegionItem regionItem : regionItemListFromFragment) { <BUGS> if (((regionItem != null) && (regionItem.getIsBought())) && (!(regionItemListFromFragment.contains(regionItem)))) { <BUGE> myRegionItemsMap.addRegionItem(regionItem.getRegionId(), regionItem); } } android.support.v4.app.Fragment fragmentMyMaps = myViewPagerAdapter.getFragmentByPosition(0); ((mikheev.konstantin.huntmap.fragments.MyMapsFragment) (fragmentMyMaps)).updateMyMapsItems(myRegionItemsMap.getRegionItemsList()); } 
public void update() { <BUGS> for (com.chat.server.conversations.Conversation conversation : conversations) { if (conversation.isEmpty()) { conversations.remove(conversation); idGenerator.returnID(conversation.getID()); com.chat.server.utils.Logger.log((("Conversation " + (conversation.getID())) + " is empty, deleting")); <BUGE> } } } 
public double getDropRate() { <BUGS> java.lang.System.out.print(("The size of bids is :" + (bids.size()))); <BUGE> double prev = utilSpace.getUtility(bids.get(0)); double average = 0; for (int i = 1; i < (bids.size()); i++) { double curr = utilSpace.getUtility(bids.get(i)); average += curr - prev; prev = curr; } <BUGS> return average / (bids.size()); <BUGE> } 
@java.lang.Override public int compare(datastructure.DFSCode e1, datastructure.DFSCode e2) { <BUGS> return (e1.a) < (e2.a) ? -1 : (e1.a) == (e2.a) ? (e1.y) < (e2.y) ? -1 : 1 : 1; <BUGE> } 
@java.lang.Override public void onPreReceive(final org.eclipse.jgit.transport.ReceivePack rp, final java.util.Collection<org.eclipse.jgit.transport.ReceiveCommand> commands) { fs.lock(); <BUGS> if (clusterService != null) { <BUGE> clusterService.lock(); } for (final org.eclipse.jgit.transport.ReceiveCommand command : commands) { final org.eclipse.jgit.revwalk.RevCommit lastCommit = org.uberfire.java.nio.fs.jgit.util.JGitUtil.getLastCommit(fs.gitRepo(), command.getRefName()); oldTreeRefs.put(command.getRefName(), lastCommit); } } 
public boolean setUnit(int index, kingofthehill.domain.Unit unit) { if ((getUnit(index)) != null) { return false; } try { <BUGS> this.units[index] = unit; unit.setBase(this); return true; <BUGE> } catch (java.lang.Exception ex) { return false; } } 
public void imageClick(android.view.View view) { <BUGS> android.widget.Toast.makeText(getApplicationContext(), "click on image", Toast.LENGTH_SHORT).show(); <BUGE> android.support.v7.app.AlertDialog.Builder builder = new android.support.v7.app.AlertDialog.Builder(this); builder.setTitle(""); android.widget.ImageView imageView = new android.widget.ImageView(getApplicationContext()); imageView.setImageBitmap(origImage); builder.setView(imageView); builder.show(); } 
protected void assertUtilsClass(java.lang.Class<?> c) { java.lang.reflect.Constructor ctor = null; try { ctor = c.getDeclaredConstructor(); <BUGS> <BUGE> } catch (java.lang.NoSuchMethodException e) { fail(("No default constructor defined for class " + (c.getCanonicalName()))); } <BUGS> assertTrue(java.lang.reflect.Modifier.isPrivate(ctor.getModifiers())); ctor.setAccessible(true); try { ctor.newInstance(); } catch (java.lang.ReflectiveOperationException e) { fail("Unable to instantiate!"); } <BUGE> } 
public static java.lang.String getLastHash(alien4cloud.git.Git git) { try { java.util.Iterator<org.eclipse.jgit.revwalk.RevCommit> revCommitIterator = git.log().setMaxCount(1).call().iterator(); if (revCommitIterator.hasNext()) { return revCommitIterator.next().getName(); } } catch (org.eclipse.jgit.api.errors.GitAPIException e) { <BUGS> log.error("Failed to log git repository ", e); <BUGE> throw new alien4cloud.exception.GitException("Failed to log git repository", e); } return null; } 
@android.support.annotation.MainThread public void setStatus(@org.bottiger.podcast.player.exoplayer.ExoPlayerWrapper.PlayerState int argPlayerStatus) { <BUGS> <BUGE> if (getEpisode().isPlaying()) { if (IsDisplayingPlayIcon()) { animateChangeFrom(PlayPauseDrawable.IS_PAUSED); } }else { if (!(IsDisplayingPlayIcon())) { animateChangeFrom(PlayPauseDrawable.IS_PLAYING); } } mStatus = argPlayerStatus; if ((mStatus) == (org.bottiger.podcast.player.exoplayer.ExoPlayerWrapper.STATE_PREPARING)) { mStartTime = java.lang.System.currentTimeMillis(); } this.invalidate(); } 
@java.lang.Override public void export(java.io.OutputStream os) { java.io.Writer writer = null; try { writer = new java.io.OutputStreamWriter(os, "UTF8"); export(writer); } catch (java.lang.Exception e) { log.error(("Failed to write summary csv data: " + (this)), e); } finally { <BUGS> try { writer.close(); } catch (java.lang.Throwable e) { <BUGE> } } } 
private static <T extends java.lang.Comparable<? super T>> void bestSort(T[] seq, T[] auxSeq, int lo, int hi) { final int altSortThreshold = 7; int elementsToSort = (hi - lo) + 1; <BUGS> if (elementsToSort >= altSortThreshold) <BUGE> edu.mit.ita.util.Arrays.insertionSort(seq, lo, hi); <BUGS> else edu.mit.ita.util.Arrays.mergeSort(seq, auxSeq, lo, hi); <BUGE>  } 
public void removeController(java.lang.Object controller) { <BUGS> java.lang.System.out.println(("REMOVE CONTROLLER EVENTS=" + controller)); <BUGE> removeControllerBinds(notifybinds, controller); removeControllerBinds(propertybinds, controller); removeControllerBinds(propertiesbinds, controller); removeControllerBinds(pathbinds, controller); removeControllerBinds(timelinenotifybinds, controller); org.springfield.fs.FsNode node = new org.springfield.fs.FsNode("bind", "1"); node.setProperty("action", "remove controller"); node.setProperty("controller", ("" + (controller.hashCode()))); notify("/shared/internal", node); } 
@java.lang.Override public void onNavigationBlocked(int position, int direction) { android.view.View contentView = findViewById(android.R.id.content); <BUGS> com.heinrichreimersoftware.materialintro.slide.Slide slide = getSlide(position); if (slide == permissionsSlide) { android.support.design.widget.Snackbar.make(contentView, R.string.label_grant_permissions, Snackbar.LENGTH_LONG).show(); }else if (slide == loginSlide) { android.support.design.widget.Snackbar.make(contentView, R.string.label_fill_out_form, Snackbar.LENGTH_LONG).show(); }  <BUGE> } 
<BUGS> private static java.io.File getCurrentDir() { <BUGE> try { return new java.io.File(redempt.inputscripter2.Main.class.getProtectionDomain().getCodeSource().getLocation().toURI()).getParentFile(); } catch (java.net.URISyntaxException e) { e.printStackTrace(); } return null; } 
public boolean startup() { <BUGS> return ((((_client.open()) && (_directoryDbCtx.open(_config.getDirDbFilePath()))) && (_notificationDbCtx.open(_config.getNotifDbFilePath()))) && (_registrator.register())) && (_synchronizationWorker.start()); <BUGE> } 
@java.lang.Override public io.subutai.common.environment.Environment loadEnvironment(final java.lang.String environmentId) throws io.subutai.common.environment.EnvironmentNotFoundException { com.google.common.base.Preconditions.checkNotNull(environmentId, "Invalid environment id"); io.subutai.core.environment.impl.entity.EnvironmentImpl environment = environmentAdapter.get(environmentId); if (environment != null) { return environment; } environment = environmentService.find(environmentId); if (environment != null) { setTransientFields(com.google.common.collect.Sets.<io.subutai.common.environment.Environment>newHashSet(environment)); return environment; } <BUGS> environment = findRemoteEnvironment(environmentId); if (environment != null) { return environment; } <BUGE> throw new io.subutai.common.environment.EnvironmentNotFoundException(); } 
private void configureViewHolderSimpleStory(com.codepath.timeline.adapters.StoriesAdapter.ViewHolderSimpleStory holder, int position) { com.codepath.timeline.models.Story story = mStories.get(position); android.util.Log.d("DEBUG", story.toString()); if (story != null) { <BUGS> <BUGE> com.bumptech.glide.Glide.with(context).load(story.getBackgroundImageUrl()).fitCenter().bitmapTransform(new jp.wasabeef.glide.transformations.RoundedCornersTransformation(context, 25, 0)).into(holder.getIvBackgroundImage()); <BUGS> holder.getTvStoryTitle().setText(story.getStoryTitle()); <BUGE> } } 
@java.lang.Override public boolean generateIntegrityResults(final java.lang.String endpointId) throws java.lang.Exception { try { createContentletTemporaryTable(endpointId); processContentletIntegrityByStructureType(endpointId, Structure.STRUCTURE_TYPE_FILEASSET); com.dotmarketing.common.db.DotConnect dc = new com.dotmarketing.common.db.DotConnect(); <BUGS> return ((java.lang.Long) (dc.getRecordCount(getIntegrityType().getResultsTableName(), (("where endpoint_id = '" + endpointId) + "'")))) > 0; <BUGE> } catch (java.lang.Exception e) { throw new java.lang.Exception("Error running the File Assets Integrity Check", e); } } 
@java.lang.Override public boolean isDone(core.game.Game game) { boolean ended = super.isFinished(game); if (ended) return true;  <BUGS> if ((((game.getNumSprites(itype)) - (game.getNumDisabledSprites(itype))) <= (limit)) && (canEnd)) { <BUGE> countScore(game); return true; } return false; } 
private void highlight(final org.kie.workbench.common.stunner.core.graph.Node node, final org.kie.workbench.common.stunner.core.graph.Edge<org.kie.workbench.common.stunner.core.graph.content.view.View<?>, org.kie.workbench.common.stunner.core.graph.Node> connector, final boolean valid) { canvasHighlight.unhighLight(); if ((null != node) && valid) { <BUGS> canvasHighlight.highLight(connector); <BUGE> canvasHighlight.highLight(node); }else if (null != node) { <BUGS> canvasHighlight.invalid(connector); <BUGE> canvasHighlight.invalid(node); }  } 
private void readXML(java.lang.String filePath) { javax.xml.parsers.SAXParserFactory saxParserFactory = javax.xml.parsers.SAXParserFactory.newInstance(); <BUGS> com.filtering.FilteringHandler filteringHandler = new com.filtering.FilteringHandler(); <BUGE> try { javax.xml.parsers.SAXParser saxParser = saxParserFactory.newSAXParser(); saxParser.parse(filePath, filteringHandler); } catch (javax.xml.parsers.ParserConfigurationException e) { e.printStackTrace(); } catch (org.xml.sax.SAXException e) { e.printStackTrace(); } catch (java.io.IOException e) { e.printStackTrace(); } } 
public org.openlmis.distribution.dto.DistributionDTO getDistribution(org.openlmis.distribution.domain.Distribution arg, java.lang.Long userId) { org.openlmis.distribution.domain.Distribution distribution = getFullSyncedDistribution(arg); if (distribution != null) { if (userId != null) { insertEditInProgress(userId, distribution.getId()); } <BUGS> java.util.Map<java.lang.Long, org.openlmis.distribution.domain.FacilityDistribution> facilityDistributionMap = facilityDistributionService.getData(distribution); <BUGE> distribution.setFacilityDistributions(facilityDistributionMap); return distribution.transform(); } return null; } 
private double calculateSquaredNorm(final T row) { double norm = 0.0; <BUGS> for (int i = 0; i < (m_nFets); i++) { <BUGE> double fet = row.getFeature(i); norm += fet * fet; } return norm; } 
<BUGS> public void causeDamage(double amount, org.bukkit.entity.LivingEntity damager, life.grass.grasscombat.datatype.DamageType type) { <BUGE> double damage = 0.0; if (type.equals(DamageType.BASIC_DAMAGE)) { damage = life.grass.grasscombat.utils.DamageUtil.getDefencedDamage(amount, getArmorData(ArmorDataType.DEFENCE), getArmorData(ArmorDataType.PROTECTION)); }else if (type.equals(DamageType.MAGIC_DAMAGE)) { damage = life.grass.grasscombat.utils.DamageUtil.getDefencedDamage(amount, getArmorData(ArmorDataType.MAGIC_DEFENCE), getArmorData(ArmorDataType.PROTECTION)); }else { damage = amount; }  causeRawDamage(damage); } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); <BUGS> <BUGE> setContentView(R.layout.activity_main); com.parse.Parse.enableLocalDatastore(this); com.parse.Parse.initialize(this, "rImfNv4tT49YDypqeW0EBVwwES7b8GBIeeilMjsi", "HUbrGgOnHXM3DpWo2aHJ8AGZUyHOhFOPokyEoLNJ"); <BUGS> com.facebook.FacebookSdk.sdkInitialize(getApplicationContext()); <BUGE> loginBtn = ((com.facebook.login.widget.LoginButton) (findViewById(R.id.login_button))); } 
<BUGS> public java.lang.String getExtension(final java.io.File f) { if (f != null) { java.lang.String filename = f.getName(); int i = filename.lastIndexOf('.'); if ((i > 0) && (i < ((filename.length()) - 1))) { return filename.substring((i + 1)).toLowerCase(); } <BUGE> } return null; } 
public boolean hasUpgrade(int rarity, Lib.summon.Awakening[] awakening) { <BUGS> for (Lib.summon.Awakening a : awakening) <BUGE> for (int i = 0; i < (a.units.length); i++) { <BUGS> if (a.units[i].equals(this)) { hasUpgrade(rarity, a.rarityAwakened[i]); <BUGE> } } <BUGS>  <BUGE> return false; } 
private void addSyncObjectPerformed(org.apache.wicket.ajax.AjaxRequestTarget target) { com.evolveum.midpoint.web.component.wizard.resource.ObjectSynchronizationType syncObject = new com.evolveum.midpoint.web.component.wizard.resource.ObjectSynchronizationType(); syncObject.setEnabled(true); <BUGS> syncObject.setName(generateName(getString("SynchronizationStep.label.newObjectType"))); <BUGE> resourceModel.getObject().asObjectable().getSynchronization().getObjectSynchronization().add(syncObject); editSyncObjectPerformed(target, syncObject); parentPage.refreshIssues(target); } 
@java.lang.Override protected void prepareSaveChangesMadeToEnforcedPropertiesForCurrent() { super.prepareSaveChangesMadeToEnforcedPropertiesForCurrent(); gov.anl.aps.cdb.portal.controllers.ItemDomainInventoryController idic = gov.anl.aps.cdb.portal.controllers.ItemDomainInventoryController.getInstance(); gov.anl.aps.cdb.portal.controllers.extensions.ItemEnforcedPropertiesController inventoryEnforcedPropertiesController = idic.getItemEnforcedPropertiesController(); gov.anl.aps.cdb.portal.model.db.entities.ItemDomainCatalog catalogItem = ((gov.anl.aps.cdb.portal.model.db.entities.ItemDomainCatalog) (getCurrent())); <BUGS> for (gov.anl.aps.cdb.portal.model.db.entities.Item inventoryItem : catalogItem.getInventoryItemList()) { inventoryEnforcedPropertiesController.setCurrent(inventoryItem); inventoryEnforcedPropertiesController.prepareSaveChangesMadeToEnforcedPropertiesForCurrent(); <BUGE> } } 
@com.codeup.controller.GetMapping(value = "/recipe/delete") public java.lang.String deleteRecipe(@com.codeup.controller.RequestParam(value = "recipe_id") long recipe_id) { com.codeup.controller.User user = ((com.codeup.controller.User) (org.springframework.security.core.context.SecurityContextHolder.getContext().getAuthentication().getPrincipal())); com.codeup.controller.UserRecipe userRecipe = userRecipeRepository.findByUser_IdAndRecipe_Id(user.getId(), recipe_id); userRecipeRepository.delete(userRecipe); <BUGS> com.codeup.controller.Recipe recipe = recipesRepository.findOne(recipe_id); recipesRepository.delete(recipe); <BUGE> return "redirect:/"; } 
<BUGS> public void insertLoadRecord(java.lang.String directory, java.lang.String fileName, java.lang.String graph) throws com.linkedpipes.etl.executor.api.v1.LpException { <BUGE> try (java.sql.Connection connection = getSqlConnection()) { try (java.sql.PreparedStatement statement = com.linkedpipes.plugin.exec.virtuoso.SqlExecutor.createLdStatement(connection, directory, fileName, graph)) { statement.executeQuery(); } } catch (java.sql.SQLException ex) { throw exceptionFactory.failure("Can't execute ld_dir query.", ex); } } 
@org.junit.Test public void testHasAllItems() { <BUGS> com.laboon.Player testPlayer = new com.laboon.Player(); <BUGE> boolean result = testPlayer.hasAllItems(); assertFalse(result); testPlayer.getSugar(); result = testPlayer.hasAllItems(); assertFalse(result); testPlayer.getCream(); result = testPlayer.hasAllItems(); assertFalse(result); testPlayer.getCoffee(); result = testPlayer.hasAllItems(); assertTrue(result); } 
@java.lang.Override public java.lang.String toString() { java.lang.String state = new java.lang.String(); if ((isStatus()) == true) state = "on"; else state = "off";  <BUGS> return ((((((title) + ",") + (author)) + ",") + state) + ",") + (dueDate.format(formatter)); <BUGE> } 
@java.lang.Override public void onSuccess(int statusCode, cz.msebera.android.httpclient.Header[] headers, org.json.JSONObject response) { com.codepath.apps.mysimpletweet.models.Tweet tweet = new com.codepath.apps.mysimpletweet.models.Tweet(response); tweet.save(); tweet.getUser().save(); if ((listener) != null) { listener.onCreateSuccess(tweet.getId()); <BUGS> dismiss(); <BUGE> } } 
public void add(int poche, pokemon.modele.Objet obj, int qte) { <BUGS> int indice = inventaire.elementAt(poche).indiceOf(obj); if (indice == (-1)) { <BUGE> inventaire.elementAt(poche).add(new pokemon.modele.UniteStockage<pokemon.modele.Objet>(obj, qte)); <BUGS> }else { inventaire.elementAt(poche).contenu.elementAt(indice).ajoutQte(qte); <BUGE> } } 
public de.tuhh.diss.plotbot.Plottable select() { int selection = -1; do { selection = menu.select(); } while (selection < 0 ); while (Button.ENTER.isDown()) { } de.tuhh.diss.plotbot.Plottable toDraw = null; if (selection == 0) { toDraw = new de.tuhh.diss.plotbot.Anchor(); } if (selection == 1) { <BUGS> Motor.C.rotate((5 * 360)); <BUGE> } return toDraw; } 
private org.json.JSONArray getJSONFromURL(java.lang.String URL) { org.springframework.http.HttpHeaders headers = new org.springframework.http.HttpHeaders(); headers.set("Authorization", "Basic YjE0NTY4NzdAdHJidm4uY29tOkVudEFsbFN0YXJSZWRvbmVBbGxBcXVpcmVk"); org.springframework.http.HttpEntity<java.lang.String> entity = new org.springframework.http.HttpEntity<java.lang.String>("parameters", headers); org.springframework.http.ResponseEntity<java.lang.String> results = restCall.exchange(URL, HttpMethod.GET, entity, java.lang.String.class); try { org.json.JSONArray jsonResults = new org.json.JSONArray(results.getBody()); return jsonResults; } catch (org.json.JSONException e) { <BUGS> e.printStackTrace(); <BUGE> } <BUGS> return null; <BUGE> } 
@java.lang.Override public void onCreate(android.database.sqlite.SQLiteDatabase db) { <BUGS> java.lang.String CREATE_WIFIS_TABLE = (((((((((((("CREATE TABLE " + (com.example.iit2014094.autotaskerapp.DatabaseHandler.TABLE_WIFIS)) + "(") + (com.example.iit2014094.autotaskerapp.DatabaseHandler.KEY_ID)) + " INTEGER PRIMARY KEY,") + (com.example.iit2014094.autotaskerapp.DatabaseHandler.KEY_NAME)) + " TEXT,") + (com.example.iit2014094.autotaskerapp.DatabaseHandler.KEY_BSSID_NO)) + " TEXT") + (com.example.iit2014094.autotaskerapp.DatabaseHandler.KEY_SILENCE)) + " TEXT,") + (com.example.iit2014094.autotaskerapp.DatabaseHandler.KEY_AUTO_SMS)) + " TEXT,") + ")"; <BUGE> db.execSQL(CREATE_WIFIS_TABLE); } 
@java.lang.Override public void onClick(android.view.View v) { java.lang.String personId = java.lang.String.valueOf(followersDTO.getId()); monsterquiz.app.com.monsterquiz.fragments.FriendPrivateProfileFragment friendPrivateProfileFragment = new monsterquiz.app.com.monsterquiz.fragments.FriendPrivateProfileFragment(); android.os.Bundle bundle = new android.os.Bundle(); <BUGS> bundle.putSerializable("followers_profile", followersDTO); <BUGE> bundle.putString("cat_id", "0"); bundle.putString("user_id", personId); friendPrivateProfileFragment.setArguments(bundle); ((monsterquiz.app.com.monsterquiz.HomeActivity) (context)).replaceFragment(friendPrivateProfileFragment); } 
public static java.io.InputStream getFileInputSteam(android.content.Context context, java.lang.String fileName, android.support.v4.provider.DocumentFile root, java.lang.String... subDirs) { android.support.v4.provider.DocumentFile parent = ml.puredark.hviewer.utils.DocumentUtil.getDirDocument(root, subDirs); if (parent == null) return null;  android.support.v4.provider.DocumentFile file = parent.findFile(fileName); <BUGS> <BUGE> return ml.puredark.hviewer.utils.DocumentUtil.getFileInputSteam(context, file.getUri()); } 
public static java.util.List<Dimension> getHorizontalDimensions(Dimension dime) { java.util.List<Dimension> boxDimes = new java.util.ArrayList<Dimension>(); for (int y = 0; y < 9; y++) { if (y != (dime.y)) { <BUGS> Dimension dimeCurrent = new Dimension(); dimeCurrent.x = dime.x; dimeCurrent.y = y; <BUGE> boxDimes.add(dimeCurrent); } } return boxDimes; } 
@java.lang.Override public void onClick(android.view.View view) { java.lang.System.out.println("ClickHat"); com.example.cookzyme.cookzyme.CanCookFragment canCook = new com.example.cookzyme.cookzyme.CanCookFragment(); android.support.v4.app.FragmentTransaction transaction = getActivity().getSupportFragmentManager().beginTransaction(); transaction.replace(R.id.refrigerator, canCook); <BUGS> transaction.addToBackStack("TAGG"); <BUGE> transaction.commit(); } 
private int getUnitCount(SCBot.UnitType type, SCBot.UnitType type2) { int count = 0; <BUGS> for (SCBot.Unit u : self.getUnits()) { <BUGE> if (((u.getType()) == type) && ((type2 == null) || ((u.getBuildType()) == type2))) { count++; } } return count; } 
private void generateTraps(int limit) { int amountOfButtons = 10; int trapNumber = newRandomNumberBetween(amountOfButtons); java.lang.String logMessage = getResources().getString(R.string.log_trap_id); int amountOfTraps = 3; for (int i = 0; i < amountOfTraps; i++) { while (traps.contains(trapNumber)) { trapNumber = newRandomNumberBetween(amountOfButtons); } <BUGS> android.util.Log.i(logMessage, (trapNumber + "")); <BUGE> traps.add(trapNumber); } } 
@java.lang.Override public void changed(javafx.beans.value.ObservableValue observable, java.lang.Object oldValue, java.lang.Object newValue) { soundValue.textProperty().setValue(java.lang.String.valueOf(((int) (soundBar.getValue())))); <BUGS> <BUGE> MainLogic.instance.getMp().setVolume(((soundBar.getValue()) / 100)); } 
private static void validateAccessToken() throws com.mapbox.mapboxsdk.exceptions.MapboxConfigurationException { <BUGS> String = com.mapbox.mapboxsdk.Mapbox.INSTANCE.accessToken; <BUGE> if ((android.text.TextUtils.isEmpty(accessToken)) || ((!(accessToken.toLowerCase(MapboxConstants.MAPBOX_LOCALE).startsWith("pk."))) && (!(accessToken.toLowerCase(MapboxConstants.MAPBOX_LOCALE).startsWith("sk."))))) { throw new com.mapbox.mapboxsdk.exceptions.MapboxConfigurationException(); } } 
public boolean addUser(java.lang.String username, java.lang.String password) throws java.sql.SQLException { java.sql.Statement stmt = conn.createStatement(); boolean success = stmt.execute((((("insert into TTEDB.Users (UserName, UserPW) values ('" + username) + "', '") + password) + "')")); stmt.close(); <BUGS> <BUGE> return success; } 
@java.lang.Override public void onResponse(retrofit2.Call<dom.bom.com.tabatasdk.map_module.view.model.Track> call, retrofit2.Response<dom.bom.com.tabatasdk.map_module.view.model.Track> response) { <BUGS> if (dom.bom.com.tabatasdk.rest.ResponseTaker.sendRequest(response, context, view)) { view.setListOfParcel(getParcelList(response.body().getReceiver(), response.body().getSender())); }else { view.onError(R.string.server_problem); <BUGE> } } 
@java.lang.Override public void close() throws java.sql.SQLException { com.mysql.jdbc.MySQLConnection locallyScopedConn = this.connection; if (locallyScopedConn == null) { return ; } synchronized(locallyScopedConn.getConnectionMutex()) { if (((this.isCached) && (isPoolable())) && (!(this.isClosed))) { clearParameters(); this.isClosed = true; this.connection.recachePreparedStatement(this); return ; } <BUGS> <BUGE> realClose(true, true); } } 
private void attachPropertiesFragment() throws java.lang.IllegalAccessException, java.lang.InstantiationException { <BUGS> java.lang.Class<? extends pl.karol202.paintplus.tool.ToolProperties> propertiesClass = paintView.getTool().getPropertiesFragmentClass(); <BUGE> android.app.Fragment properties = propertiesClass.newInstance(); android.os.Bundle propArgs = new android.os.Bundle(); <BUGS> propArgs.putInt("tool", getTools().getToolId(paintView.getTool())); <BUGE> properties.setArguments(propArgs); android.app.FragmentTransaction propTrans = fragments.beginTransaction(); propTrans.replace(R.id.propertiesFragment, properties); propTrans.commit(); } 
@java.lang.Override public void initialize(java.net.URL location, java.util.ResourceBundle resources) { radioStartAppWithWin.setSelected(SettingsConstants.START_APP_WITH_WINDOWS_7); radioStartAnalysisWithAppStart.setSelected(SettingsConstants.START_ANALYSIS_WITH_APP_START_3); radioSaveReportsAuto.setSelected(SettingsConstants.SAVE_REPORTS_AUTOMATICALLY_4); sliderSize.setValue(SettingsConstants.SLIDER_SIZE_5); sliderNumber.setValue(SettingsConstants.SLIDER_NUMBER_6); if (myProject.model.SettingsConstants.START_APP_WITH_WINDOWS_7) { radioStartAppWithWin.setSelected(true); radioStartAppWithWin.setDisable(true); } updateSliderL(); <BUGS> java.lang.System.out.println("IN CNTRL!"); <BUGE> } 
public static org.terracotta.passthrough.PassthroughMessage createUnexpectedReleaseMessage(final java.lang.String entityClassName, final java.lang.String entityName, final long clientInstanceID) { <BUGS> boolean shouldReplicateToPassives = false; <BUGE> return new org.terracotta.passthrough.PassthroughMessage(org.terracotta.passthrough.PassthroughMessage.Type.UNEXPECTED_RELEASE, shouldReplicateToPassives) { @java.lang.Override protected void populateStream(java.io.DataOutputStream output) throws java.io.IOException { output.writeUTF(entityClassName); output.writeUTF(entityName); output.writeLong(clientInstanceID); } }; } 
<BUGS> void enqueue(org.sleuthkit.datamodel.FsContent fsContent, java.util.Collection<org.sleuthkit.autopsy.ingest.IngestServiceFsContent> services) { <BUGE> org.sleuthkit.autopsy.ingest.IngestManager.QueueUnit<org.sleuthkit.datamodel.FsContent, org.sleuthkit.autopsy.ingest.IngestServiceFsContent> found = findFsContent(fsContent); if (found != null) { found.addAll(services); }else { found = new org.sleuthkit.autopsy.ingest.IngestManager.QueueUnit<org.sleuthkit.datamodel.FsContent, org.sleuthkit.autopsy.ingest.IngestServiceFsContent>(fsContent, services); fsContentUnits.add(found); } } 
@javax.ws.rs.GET public it.finsoft.entity.Evento create(@javax.ws.rs.QueryParam(value = "entita") java.lang.String codiceEnt, @javax.ws.rs.QueryParam(value = "tipiEvento") java.lang.String codiceTipi, @javax.ws.rs.QueryParam(value = "tag") java.lang.String tag) { it.finsoft.entity.Evento evento = new it.finsoft.entity.Evento(); evento.setEntita(entitam.findByCod(codiceEnt)); evento.setTipoEvento(tipoevm.findByCod(codiceTipi)); evento.setTag(tag); <BUGS> java.lang.System.out.println(("salva resources, salvo entita " + evento)); <BUGE> return eventom.save(evento); } 
@java.lang.Override public void onClick(android.view.View v) { new com.xllllh.android.takeaway.OrderListRecyclerViewAdapter.ChangeOrderStateTask().execute(orderId, Order.STATE_PAYED_ACCEPT); try { holder.mItem.remove("state"); holder.mItem.put("state", Order.STATE_PAYED_ACCEPT); } catch (java.lang.Exception e) { e.printStackTrace(); } holder.mStatus.setText("商家已接单"); holder.mCancel.setVisibility(View.GONE); holder.mPay.setVisibility(View.GONE); holder.mConfirm.setVisibility(View.VISIBLE); <BUGS> android.util.Log.d("debug", holder.mItem.toString()); <BUGE> } 
public void setMessage(com.waz.api.Message message, com.waz.zclient.pages.main.conversation.views.row.separator.Separator separator) { setUnreadDot(separator); setUserName(message, separator); setTimestamp(separator); setPadding(message, separator); showRecalledGlyph(separator); <BUGS> if ((message.getUser().isMe()) && (message.isEdited())) { <BUGE> messageEditedGlyph.setVisibility(View.VISIBLE); }else { messageEditedGlyph.setVisibility(View.GONE); } } 
@org.springframework.web.bind.annotation.RequestMapping(value = "/doedit", method = org.springframework.web.bind.annotation.RequestMethod.POST) public java.lang.String editComplete(org.springframework.ui.Model model, com.monstarlab.domain.form.EmployeeInfoInputForm employeeInfoForm, org.springframework.validation.BindingResult bindingResult, org.springframework.web.servlet.mvc.support.RedirectAttributes redirectAttributes) { com.monstarlab.domain.model.Employee employee = employeeInfoForm.getEmployee(); <BUGS> java.lang.System.out.println(("lol " + (employeeInfoForm.getBirthdate()))); <BUGE> employee.setBirthdate(convertToDate(employeeInfoForm.getBirthdate())); employeeService.update(employeeInfoForm.getEmployee()); return "redirect:/"; } 
public java.lang.Float get() { if ((getIndex) == (putIndex)) { return null; }else { <BUGS> <BUGE> float result = data[getIndex]; <BUGS> getIndex = ((getIndex) + 1) % (capacity); <BUGE> return result; } } 
public static java.sql.Timestamp StringAndroidToTimestamp(java.lang.String s) { <BUGS> java.lang.String toConvert = s.substring(0, ((s.length()) - 2)); <BUGE> java.sql.Timestamp timestamp = null; try { java.text.SimpleDateFormat dateFormat = new java.text.SimpleDateFormat("yyyy-MM-dd HH:mm:ss"); <BUGS> java.util.Date parsedDate = dateFormat.parse(toConvert); <BUGE> timestamp = new java.sql.Timestamp(parsedDate.getTime()); } catch (java.lang.Exception e) { android.util.Log.d("Exception date = ", e.toString()); } return timestamp; } 
public void createDemoDataPomodoro() throws java.io.IOException { <BUGS> persistLearningOppInst("{'institutionId':'pomodoro.university.it','credits':'5'}", getLearningOppSpec("PU001"), getAcademicTerm(getAcademicYear("2015", "2016"), "Fall")); <BUGE> persistLearningOppInst("{'institutionId':'pomodoro.university.it','credits':'7.5'}", getLearningOppSpec("PU002"), getAcademicTerm(getAcademicYear("2016", "2017"), "Spring")); } 
@java.lang.Override public void changed(com.couchbase.lite.LiveQuery.ChangeEvent event) { <BUGS> int numTimesCalled = 0; <BUGE> if ((event.getError()) != null) { throw new java.lang.RuntimeException(event.getError()); } if ((event.getRows().getCount()) == 2) { countDownLatch.countDown(); } } 
private com.graphhopper.routing.util.FlagEncoder getEncoder(java.lang.String name, boolean throwExc) { <BUGS> for (com.graphhopper.routing.util.AbstractFlagEncoder encoder : edgeEncoders) { <BUGE> if (name.equalsIgnoreCase(encoder.toString())) return encoder;  } if (throwExc) throw new java.lang.IllegalArgumentException(((("Encoder for " + name) + " not found. Existing: ") + (toDetailsString())));  return null; } 
@org.springframework.context.annotation.Bean public org.superbiz.moviefun.blobstore.BlobStore blobStore() throws java.io.IOException { java.io.InputStream stream = new java.io.ByteArrayInputStream(java.lang.System.getenv("GOOGLE_CREDENTIALS").getBytes()); com.google.cloud.storage.StorageOptions option = com.google.cloud.storage.StorageOptions.newBuilder().setCredentials(com.google.auth.oauth2.GoogleCredentials.fromStream(stream)).build(); <BUGS> com.google.cloud.storage.Storage storage = com.google.cloud.storage.StorageOptions.getDefaultInstance().getService(); <BUGE> return new org.superbiz.moviefun.blobstore.S3Store(storage, "moviefun"); } 
public double getFaultyBlockScore() { br.usp.each.saeg.road2fault.extractor.model.XmlPackage pkg = getPackageByName(faultInfo.getFaultyPackage()); br.usp.each.saeg.road2fault.extractor.model.XmlClass clz = pkg.getClassByName(faultInfo.getFaultyClass()); br.usp.each.saeg.road2fault.extractor.model.XmlMethod method = clz.getMethodByName(faultInfo.getFaultyMethod()); br.usp.each.saeg.road2fault.extractor.model.XmlBlock block = method.getBlockById(faultInfo.getFaultyBlock()); <BUGS> <BUGE> return block.getScore(); } 
@java.lang.Override public void onUpgrade(android.database.sqlite.SQLiteDatabase db, int oldVersion, int newVersion) { <BUGS> db.execSQL((((((transcend.rockeeper.sqlite.DatabaseHelper.routes.dropTable()) + (transcend.rockeeper.sqlite.DatabaseHelper.goals.dropTable())) + (transcend.rockeeper.sqlite.DatabaseHelper.notes.dropTable())) + (transcend.rockeeper.sqlite.DatabaseHelper.locations.dropTable())) + (transcend.rockeeper.sqlite.DatabaseHelper.settings.dropTable()))); <BUGE> onCreate(db); } 
public boolean paste(com.mauriciotogneri.fileexplorer.models.FileInfo target) { boolean allPasted = true; try { for (com.mauriciotogneri.fileexplorer.models.FileInfo fileInfo : items) { allPasted &= fileInfo.copy(target, ((mode) == (com.mauriciotogneri.fileexplorer.models.Clipboard.Mode.CUT))); } } catch (java.lang.Exception e) { <BUGS> e.printStackTrace(); <BUGE> } items.clear(); mode = com.mauriciotogneri.fileexplorer.models.Clipboard.Mode.NONE; parent = null; return allPasted; } 
public void selectPatient(java.lang.String Patient) { org.openqa.selenium.WebElement lastElement = null; for (org.openqa.selenium.WebElement patient : patient_list) { if ((patient.findElement(org.openqa.selenium.By.cssSelector(".patient-id")).getText().contains(Patient)) || (patient.findElement(org.openqa.selenium.By.cssSelector(".patient-name")).getText().contains(Patient))) { lastElement = patient; } } <BUGS> lastElement.click(); <BUGE> return ; } 
public void testMafiosoGettingReinsertedIntoOoO() { shared.logic.Player driver = addPlayer(shared.logic.templates.BasicRoles.BusDriver()); shared.logic.Player maf = addPlayer(shared.logic.templates.BasicRoles.Mafioso()); shared.logic.Player doc = addPlayer(shared.logic.templates.BasicRoles.Doctor()); shared.logic.Player cit = addPlayer(shared.logic.templates.BasicRoles.Citizen()); driver.isCharged = maf.isCharged = true; drive(driver, maf, cit); mafKill(maf, doc); <BUGS> setTarget(doc, maf); <BUGE> endNight(); isDead(driver, doc); isAlive(maf); } 
public static java.lang.String setLetters(java.lang.String fullName) { java.lang.String[] names = fullName.split(" "); java.lang.String letters = ""; for (int i = 0; i < (names.length); i++) { if (i == 2) break;  letters += names[i].charAt(0); } <BUGS> return letters; <BUGE> } 
public void addStudentWithId(int id) { for (edu.virginia.bookmark.Team team : teams) { if (team.containsStudentWithId(id)) { java.lang.System.out.println(("Adding a Student From Team " + (team.getName()))); <BUGS> activeTurnTeamId = team.id; <BUGE> clearUpToDateStatus(); return ; } } } 
private void generateMenus(java.util.List<com.progressoft.jip.ui.xml.element.MenuXml> meuns) { for (com.progressoft.jip.ui.xml.element.MenuXml menuXml : meuns) { <BUGS> com.progressoft.jip.ui.menu.Menu<T> generatedMenu = generateNewMenu(menuXml.getMenuId(), menuXml.getDescription(), menuXml.getActionId(), menuXml.getSubMenuId()); <BUGE> loadedMenus.put(menuXml.getMenuId(), generatedMenu); } } 
protected void onPostExecute(java.lang.Integer result) { <BUGS> if (result < 400) { android.widget.ProgressBar spinner = ((android.widget.ProgressBar) (findViewById(R.id.progressBar))); spinner.setVisibility(View.GONE); android.widget.TextView button = ((android.widget.TextView) (findViewById(R.id.labelBeaconFoundNotififaction))); button.setVisibility(View.VISIBLE); cart.clear(); postNotification("Your meal will be prepared!"); } <BUGE> } 
private void initializeComponents() { this.mVwoLocalData = new com.vwo.mobile.data.VwoLocalData(this); this.mVwoUtils = new com.vwo.mobile.utils.VwoUtils(this); this.mVwoDownloader = new com.vwo.mobile.network.VwoDownloader(this); this.mVwoUrlBuilder = new com.vwo.mobile.utils.VwoUrlBuilder(this); <BUGS> this.mVwoData = new com.vwo.mobile.data.VwoData(this, null); <BUGE> this.mVwoSocket = new com.vwo.mobile.VwoSocket(this); this.mVwoPreference = new com.vwo.mobile.utils.VwoPreference(this); } 
@java.lang.Override public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup viewGroup, android.os.Bundle savedInstanceState) { android.view.View view = inflater.inflate(R.layout.fragment_blackboard_overview, viewGroup, false); <BUGS> initViews(view); <BUGE> wipraktikum.informationwallandroidapp.Utils.NotificationHelper.getInstance().setOnNotificationReceiveListener(new wipraktikum.informationwallandroidapp.Utils.NotificationHelper.OnNotificationReceiveListener() { @java.lang.Override public void onNotificationReceive() { blackBoardExpandableListViewAdapter.notifyDataSetChanged(); } }); return view; } 
private void handleSignInResult(com.google.android.gms.auth.api.signin.GoogleSignInResult result) { android.util.Log.d(com.ishaan.todolist.Login.TAG, ("handleSignInResult:" + (result.isSuccess()))); if (result.isSuccess()) { com.google.android.gms.auth.api.signin.GoogleSignInAccount acct = result.getSignInAccount(); android.util.Log.d(com.ishaan.todolist.Login.TAG, acct.getEmail()); <BUGS> updateUI(true, acct.getEmail()); <BUGE> }else { updateUI(false); } } 
private boolean addToLocalActiveView(java.net.InetAddress peer) { if (localDatacenterView.contains(peer)) return false;  localDatacenterView.addLast(peer); <BUGS> org.apache.cassandra.gossip.hyparview.HyParViewService.logger.info(java.lang.String.format("%s adding %s to local active view", localAddress, peer)); <BUGE> if ((localDatacenterView.size()) > (endpointStateSubscriber.fanout(datacenter, datacenter))) expungeNode(localDatacenterView.removeFirst(), datacenter);  return true; } 
private void mergeLanguageMap(java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Integer> tenMinLanguageMap) { for (java.lang.String languageName : tenMinLanguageMap.keySet()) { <BUGS> <BUGE> if (languageMap.containsKey(languageName)) { <BUGS> int languageRepeatedInThisHour = languageMap.get(languageName); int languageRepeatedInTenMins = tenMinLanguageMap.get(languageName); languageMap.put(languageName, (languageRepeatedInTenMins + languageRepeatedInThisHour)); <BUGE> } <BUGS> <BUGE> } } 
@android.test.suitebuilder.annotation.SmallTest public void testDeleteOfflinePage() throws java.lang.Exception { <BUGS> deletePage(org.chromium.chrome.browser.offlinepages.OfflinePageBridgeTest.BOOKMARK_ID, DeletePageResult.NOT_FOUND); <BUGE> loadUrl(mTestPage); savePage(SavePageResult.SUCCESS, mTestPage); assertNotNull("Offline page should be available, but it is not.", getPageByClientId(org.chromium.chrome.browser.offlinepages.OfflinePageBridgeTest.BOOKMARK_ID)); deletePage(org.chromium.chrome.browser.offlinepages.OfflinePageBridgeTest.BOOKMARK_ID, DeletePageResult.SUCCESS); assertNull("Offline page should be gone, but it is available.", getPageByClientId(org.chromium.chrome.browser.offlinepages.OfflinePageBridgeTest.BOOKMARK_ID)); } 
<BUGS> private boolean containsLinkedResource(org.eclipse.core.resources.IResource[] resources) { for (int i = 0; i < (resources.length); i++) { org.eclipse.core.resources.IResource resource = resources[i]; <BUGE> if (resource.isLinked()) { return true; } } return false; } 
@java.lang.Override public void onClick(android.view.View view) { <BUGS> if (permissions.getPermission()) { kobeissidev.autobirthday.Settings.loadContacts(getApplicationContext(), dbHandler); android.widget.Toast toast = android.widget.Toast.makeText(getApplicationContext(), "Contacts are loaded!", Toast.LENGTH_SHORT); toast.show(); setResult(0); finish(); } <BUGE> } 
public void run() { while (true) { try { this.broker.receive(); <BUGS> break; <BUGE> } catch (java.io.EOFException e) { handleConnectionException("Read data from client failed.", e); <BUGS> <BUGE> } catch (java.lang.Exception e) { handleConnectionException("Client connection failed.", e); <BUGS> <BUGE> } } } 
@java.lang.Override public void onDataChange(com.google.firebase.database.DataSnapshot dataSnapshot) { <BUGS> <BUGE> if ((dataSnapshot.getValue()) != null) { <BUGS> edu.uw.dengz6.checkmate.TaskAllFragment.tasks.clear(); <BUGE> for (com.google.firebase.database.DataSnapshot taskSnapshot : dataSnapshot.getChildren()) { edu.uw.dengz6.checkmate.TaskData task = taskSnapshot.getValue(edu.uw.dengz6.checkmate.TaskData.class); if (!(task.isCompleted)) { edu.uw.dengz6.checkmate.TaskAllFragment.tasks.add(task); } } <BUGS> adapter.notifyDataSetChanged(); <BUGE> } <BUGS> <BUGE> progressDialog.dismiss(); } 
public boolean open(int localport) { try { socket = new java.net.Socket(); socket.setSoLinger(true, 0); <BUGS> socket.bind(new java.net.InetSocketAddress(java.net.InetAddress.getLocalHost(), localport)); <BUGE> } catch (java.lang.Exception e) { javaforce.voip.JFLog.log(e); return false; } return true; } 
private void validate() { if ((!(containsMacro(format))) && (!(co.cask.hydrator.plugin.spark.FileStreamingSource.Conf.FORMATS.contains(format)))) { throw new java.lang.IllegalArgumentException(java.lang.String.format("Invalid format '%s'. Must be one of %s", format, com.google.common.base.Joiner.on(',').join(co.cask.hydrator.plugin.spark.FileStreamingSource.Conf.FORMATS))); } <BUGS> if ((schema) != null) { getSchema(); } <BUGE> } 
public void onBellSound(final java.lang.String playerId) { <BUGS> cwa115.trongame.Map.Player remotePlayer = ((cwa115.trongame.Map.Player) (map.getItemById(cwa115.trongame.Game.GameSettings.getPlayerId()))); <BUGE> remotePlayer.setCustomMarker(R.mipmap.bell_marker); new android.os.Handler().postDelayed(new java.lang.Runnable() { @java.lang.Override public void run() { cwa115.trongame.Map.Player me = ((cwa115.trongame.Map.Player) (map.getItemById(playerId))); me.resetMarker(); } }, 3000); } 
public boolean editCommand(java.lang.String modType, java.lang.String newValue, me.krickl.memebotj.User.UserHandler sender) { if ((commandHandler) == null) { <BUGS> commandHandler = new me.krickl.memebotj.Commands.CommandHandler(channelHandler, commandName, dbprefix); <BUGE> } boolean success = false; success = commandHandler.editCommand(modType, newValue, sender); commandName = commandHandler.getCommandName(); return success; } 
@java.lang.Override public boolean sendPaymentReminder(int uid, int sid, boolean type, int cuid) { com.udoo.dal.entities.Payment payment = paymentRepository.findTopByUidAndSidAndTypeAndStateOrderByPidDesc(uid, sid, type, STATE_RESERVE); <BUGS> return type ? (offerRepository.findByOid(sid).getUid()) != cuid : ((requestRepository.findByRid(sid).getUid()) == cuid) && (this.savePayment(payment, STATE_REMIND)); <BUGE> } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_results); android.support.v7.widget.Toolbar toolbar = ((android.support.v7.widget.Toolbar) (findViewById(R.id.toolbar))); setSupportActionBar(toolbar); getSupportActionBar().setDisplayHomeAsUpEnabled(true); <BUGS> android.widget.TextView display = ((android.widget.TextView) (findViewById(R.id.textView_results))); android.content.Intent intentResults = getIntent(); java.lang.String APIRequestURL = intentResults.getStringExtra("APIURL"); display.setText(APIRequestURL); showAlert(APIRequestURL); <BUGE> } 
@java.lang.Override public void onUpgrade(android.database.sqlite.SQLiteDatabase db, int oldVersion, int newVersion) { db.execSQL(com.example.mbodziony.datecounter.DatabaseManager.DB_DROP_DATECOUNTERS_TABLE); <BUGS> android.widget.Toast.makeText(context, "updating TABLE", Toast.LENGTH_SHORT).show(); <BUGE> android.util.Log.d(com.example.mbodziony.datecounter.DatabaseManager.DEBUG_TAG, "Database updating..."); android.util.Log.d(com.example.mbodziony.datecounter.DatabaseManager.DEBUG_TAG, ((((("Table " + (com.example.mbodziony.datecounter.DatabaseManager.DB_DATECOUNTERS_TABLE)) + " updated from ver. ") + oldVersion) + " to ver. ") + newVersion)); android.util.Log.d(com.example.mbodziony.datecounter.DatabaseManager.DEBUG_TAG, "All data is lost!"); onCreate(db); } 
public static void main(java.lang.String[] args) throws java.lang.Exception { java.lang.String serializedClassifier = "/home/1546/source/stanford-ner-2015-12-09/classifiers/english.all.3class.distsim.crf.ser.gz"; edu.stanford.nlp.ie.AbstractSequenceClassifier<edu.stanford.nlp.ling.CoreLabel> classifier = CRFClassifier.getClassifier(serializedClassifier); <BUGS> source_dir = args[0]; dest_dir = args[1]; <BUGE> File[] directories = new File(source_dir).listFiles(File::isDirectory); for (File path : directories) { java.lang.System.out.print(getAbsolutePath()); java.lang.System.out.println(); } } 
@java.lang.Override public void onAuthStateChanged(@android.support.annotation.NonNull com.google.firebase.auth.FirebaseAuth firebaseAuth) { com.google.firebase.auth.FirebaseUser user = firebaseAuth.getCurrentUser(); if (user != null) { if (LOGGING) { it.uniba.di.ivu.sms16.gruppo3.fasterfood.AppConfiguration.setLogged(true); it.uniba.di.ivu.sms16.gruppo3.fasterfood.AppConfiguration.setUser(user.getEmail()); android.support.design.widget.Snackbar.make(getView(), getResources().getString(R.string.logged_in), Snackbar.LENGTH_LONG).show(); activity.checkLogged(); LOGGING = false; activity.onBackPressed(); <BUGS> <BUGE> } } } 
private void registerEvents() { org.bukkit.Bukkit.getPluginManager().registerEvents((this.laserGun = new ml.lasertag.minigame.Mechanics.LaserGun(this)), this); <BUGS> org.bukkit.Bukkit.getPluginManager().registerEvents(new ml.lasertag.minigame.Mechanics.PlayerJoin(), this); <BUGE> org.bukkit.Bukkit.getPluginManager().registerEvents(new ml.lasertag.minigame.Mechanics.PlayerChat(this), this); org.bukkit.Bukkit.getPluginManager().registerEvents(new ml.lasertag.minigame.GameManager.ArenaSelector(this), this); org.bukkit.Bukkit.getPluginManager().registerEvents(new ml.lasertag.minigame.Mechanics.Restrictions(), this); } 
@java.lang.Override public void run() { try { <BUGS> codeu.chat.server.Server.LOG.info("Handling connection..."); <BUGE> final boolean success = onMessage(connection.in(), connection.out()); <BUGS> codeu.chat.server.Server.LOG.info("Connection handled: %s", (success ? "ACCEPTED" : "REJECTED")); <BUGE> } catch (java.lang.Exception ex) { codeu.chat.server.Server.LOG.error(ex, "Exception while handling connection."); } try { connection.close(); } catch (java.lang.Exception ex) { codeu.chat.server.Server.LOG.error(ex, "Exception while closing connection."); } } 
@java.lang.Override public hudson.model.ParameterDefinition copyWithDefaultValue(hudson.model.ParameterValue defaultValue) { if (defaultValue instanceof com.cloudbees.plugins.credentials.CredentialsParameterValue) { com.cloudbees.plugins.credentials.CredentialsParameterValue value = ((com.cloudbees.plugins.credentials.CredentialsParameterValue) (defaultValue)); <BUGS> return new com.cloudbees.plugins.credentials.CredentialsParameterDefinition(getName(), value.getValue(), getDescription(), getCredentialType(), isRequired()); <BUGE> } return this; } 
@com.google.common.annotations.VisibleForTesting public long getDfsUsed() throws java.io.IOException { long dfsUsed = 0; <BUGS> try (org.apache.hadoop.util.AutoCloseableLock lock = dataset.acquireDatasetLock()) { <BUGE> for (org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.BlockPoolSlice s : bpSlices.values()) { dfsUsed += s.getDfsUsed(); } } return dfsUsed; } 
@org.junit.Test(expected = java.lang.RuntimeException.class) public void testBorrowOnLoan() { <BUGS> java.lang.System.out.println("Borrow: Book is ON LOAN test."); <BUGE> library.entities.Loan loan = new library.entities.Loan(); library.entities.Loan otherLoan = new library.entities.Loan(); library.entities.Book book = new library.entities.Book("Available", "Available", "Available", 10); book.borrow(loan); book.borrow(otherLoan); } 
public void loadAddReview() { <BUGS> if (prefs.getBoolean(Constants.IS_LOGGED_IN, true)) { <BUGE> android.content.Intent intent = new android.content.Intent(this, com.syntaxplayground.foodtruckr.activities.AddReviewActivity.class); startActivity(intent); }else { android.content.Intent intent = new android.content.Intent(this, com.syntaxplayground.foodtruckr.activities.LoginActivity.class); android.widget.Toast.makeText(getBaseContext(), "Please login to leave a review", Toast.LENGTH_SHORT).show(); startActivity(intent); } } 
<BUGS> private void verifyVisibility(edu.umd.cs.findbugs.classfile.ClassDescriptor invokedClass, edu.umd.cs.findbugs.ba.XMethod invokedMethod, boolean reportCaller) { <BUGE> if ((checkVisibility(invokedMethod)) && (checkAnnotated(invokedMethod))) { <BUGS> edu.umd.cs.findbugs.BugInstance bug = new edu.umd.cs.findbugs.BugInstance(this, "GUAVA_UNEXPECTED_ACCESS_TO_VISIBLE_FOR_TESTING", HIGH_PRIORITY); if (reportCaller) { bug.addCalledMethod(this).addClassAndMethod(this).addSourceLine(this); } <BUGE> bugReporter.reportBug(bug); } } 
<BUGS> public void toggle(boolean toggle) { <BUGE> int color; if (toggle) { color = mActiveColor; }else { color = android.support.v4.content.res.ResourcesCompat.getColor(getResources(), R.color.defaultNotActiveCircle, null); } mDrawable.setStroke(((getMeasuredHeight()) / 30), color); } 
@java.lang.Override public void render(float delta) { batch.begin(); gameOverSprite.draw(batch); batch.end(); if (Gdx.input.isKeyJustPressed(Keys.SPACE)) { <BUGS> com.running.game.utilities.Config.reset(); <BUGE> game.setScreen(new com.running.game.screens.InstructionsScreen(game)); } } 
@java.lang.Override public jkind.lustre.Ast caseEnumTypeDef(com.rockwellcollins.spear.translate.lustre.com.rockwellcollins.spear.EnumTypeDef etd) { java.lang.String newName = mapping.get(etd.getName()); java.util.List<java.lang.String> values = new java.util.ArrayList<>(); for (com.rockwellcollins.spear.EnumValue ev : etd.getValues()) { <BUGS> values.add(ev.getName()); <BUGE> } return new jkind.lustre.TypeDef(newName, new jkind.lustre.EnumType(newName, values)); } 
public static final java.lang.String getLang(omnikryptec.lang.Language language, java.lang.String key, java.lang.String defaultValue) { if (language == null) { <BUGS> return null; <BUGE> } if (omnikryptec.lang.LanguageManager.isCollecting) { omnikryptec.lang.LanguageManager.languageDefault.put(key, defaultValue); } return language.getProperty(key, defaultValue); } 
int count() throws java.lang.IllegalAccessException { <BUGS> android.database.Cursor cursor = buildCount(); if (cursor == null) { throw new java.lang.IllegalAccessException("result has been cosumed, please do a query again."); <BUGE> } <BUGS> int count = 0; if (cursor.moveToFirst()) count = cursor.getInt(1);  closeCursor(cursor); <BUGE> return count; } 
public void setSource(@android.support.annotation.NonNull java.io.InputStream inputStream) { if ((is) != null) { try { is.close(); } catch (java.io.IOException e) { } } is = inputStream; ch.zhaw.bait17.audio_signal_processing_toolbox.player.MP3Decoder.bitstream = new javazoom.jl.decoder.Bitstream(is); ch.zhaw.bait17.audio_signal_processing_toolbox.player.MP3Decoder.decoder = new javazoom.jl.decoder.Decoder(); <BUGS> ch.zhaw.bait17.audio_signal_processing_toolbox.player.MP3Decoder.init(); <BUGE> } 
@java.lang.Override public int compare(org.openlmis.referencedata.dto.ProcessingPeriodDto o1, org.openlmis.referencedata.dto.ProcessingPeriodDto o2) { <BUGS> switch (compareCondition) { case "startDate" : { return o1.getStartDate().compareTo(o2.getStartDate()); } default : { throw new org.openlmis.referencedata.exception.ValidationMessageException(new org.openlmis.referencedata.util.Message(org.openlmis.referencedata.util.messagekeys.ProcessingPeriodMessageKeys.ERROR_INVALID_SORTING_COLUMN, compareCondition)); } <BUGE> } } 
public int lngToCol(double lon) { if ((lon < (westLng)) || (lon > (eastLng))) throw new java.lang.IllegalArgumentException("Longitude is out of map range");  <BUGS> int colIndex = ((int) (((eastLng) - lon) / (cellDegree))); <BUGE> if (colIndex >= (numberOfCols)) throw new java.lang.IndexOutOfBoundsException();  return colIndex; } 
public void setOverlay(java.io.File overlay) { <BUGS> if (overlay != null ? !(overlay.equals(this.overlay)) : overlay == null) { <BUGE> java.io.File oldOverlay = this.overlay; this.overlay = overlay; dirty = true; propertyChangeSupport.firePropertyChange("overlay", oldOverlay, overlay); } } 
@java.lang.Override public void performancesChanged(java.lang.String connId, int exchangesCompleted) { <BUGS> long duration = 100; <BUGE> final org.talend.core.model.process.IConnection conn = traceConnectionsManager.finConnectionByUniqueName(connId); final org.talend.core.model.runprocess.data.PerformanceData perfData = new org.talend.core.model.runprocess.data.PerformanceData(((((connId + "|") + exchangesCompleted) + "|") + duration)); processPerformances(((((connId + "|") + exchangesCompleted) + "|") + duration), perfData, conn); startTime = java.lang.System.currentTimeMillis(); } 
public boolean setMove(final java.awt.Color color, final int number) { for (data.Karte k : spieler.get(activePlayer).getKarten()) { if ((k.getFarbe().equals(color)) && ((k.getNummer()) == number)) { <BUGS> move(k, spielfeld); spieler.get(activePlayer).remove(k); return true; <BUGE> } } return false; } 
public void start(int port) { this.port = port; <BUGS> try { serverSocket = new java.net.DatagramSocket(port); byte[] receiveData = new byte[1024]; java.lang.System.out.println(("Starting on port " + port)); on = true; run(receiveData); } catch (java.net.SocketException e) { e.printStackTrace(); <BUGE> } } 
@java.lang.Override @org.springframework.transaction.annotation.Transactional(readOnly = false) public com.catalina.tokobat.entity.Transaction add(com.catalina.tokobat.entity.Transaction transaction) { try { em = org.springframework.orm.jpa.EntityManagerFactoryUtils.getTransactionalEntityManager(getJpaTemplate().getEntityManagerFactory()); <BUGS> em.merge(transaction); <BUGE> em.flush(); em.close(); return transaction; } catch (java.lang.Exception e) { return null; } } 
public java.lang.String getText() { <BUGS> java.lang.String text = null; <BUGE> try { org.apache.poi.hssf.extractor.EventBasedExcelExtractor.TextListener tl = triggerExtraction(); text = tl._text.toString(); if (!(text.endsWith("\n"))) { text = text + "\n"; } } catch (java.io.IOException e) { throw new java.lang.RuntimeException(e); } return text; } 
@java.lang.Override public me.iwf.photopicker.adapter.PhotoGridAdapter.PhotoViewHolder onCreateViewHolder(android.view.ViewGroup parent, int viewType) { me.iwf.photopicker.adapter.PhotoGridAdapter.PhotoViewHolder holder = PhotoPickUtils.holderGenerator.newGridViewHolder(mContext); <BUGS> parent.addView(holder.itemView); <BUGE> if (viewType == (me.iwf.photopicker.adapter.PhotoGridAdapter.ITEM_TYPE_CAMERA)) { holder.vSelected.setVisibility(View.GONE); holder.ivPhoto.setScaleType(ImageView.ScaleType.CENTER); holder.ivPhoto.setOnClickListener(new android.view.View.OnClickListener() { @java.lang.Override public void onClick(android.view.View view) { if ((onCameraClickListener) != null) { onCameraClickListener.onClick(view); } } }); } return holder; } 
public java.lang.String doshowValidateDetails() { initServletContextObject(); <BUGS> com.tu.accountingview.model.GroupActVO groupactVO = new com.tu.accountingview.model.GroupActVO(); <BUGE> int oneactId = java.lang.Integer.parseInt(request.getParameter("actId")); <BUGS> groupactVO = accountingviewBean.doGetAllValidateDetails(oneactId); <BUGE> request.setAttribute("act", groupactVO); request.setAttribute("actId", oneactId); return "ShowValidateDetails"; } 
@java.lang.Override public void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); <BUGS> android.support.v4.app.FragmentManager.enableDebugLogging(true); <BUGE> setCaldroidListener(new com.roomorama.caldroid.CaldroidListener() { @java.lang.Override public void onSelectDate(java.util.Date date, android.view.View view) { }  @java.lang.Override public void onChangeMonth(int month, int year) { requireLoader(org.totschnig.myexpenses.fragment.PlanMonthFragment.INSTANCES_CURSOR); }  @java.lang.Override public void onGridCreated(android.widget.GridView gridView) { ((org.totschnig.myexpenses.fragment.TemplatesList) (getParentFragment())).registerForContextualActionBar(gridView); } }); } 
public java.lang.Object handleLogIn(java.lang.String username, java.lang.String password) { <BUGS> java.lang.String answer; <BUGE> loginfacade = new app.facades.LogInFacade(); java.lang.Object answer; try { answer = ("Hi " + (loginfacade.handleLogIn(username, password).getUserID())) + " !"; } catch (java.lang.Exception e) { answer = e; } return answer; } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_splash); java.util.TimerTask timerTask = new java.util.TimerTask() { @java.lang.Override public void run() { finish(); startActivity(new android.content.Intent(edu.orangecoastcollege.cs273.kfrederick5tmorrissey1ischenck.occstudentsuccesscenter.SplashActivity.this, edu.orangecoastcollege.cs273.kfrederick5tmorrissey1ischenck.occstudentsuccesscenter.MainActivity.class)); } }; java.util.Timer timer = new java.util.Timer(); timer.schedule(timerTask, 1000); <BUGS> deleteDatabase(DBHelper.DATABASE_NAME); db = new edu.orangecoastcollege.cs273.kfrederick5tmorrissey1ischenck.occstudentsuccesscenter.DBHelper(this); populateDatabase(); <BUGE> } 
public java.util.List<Pair> remainingPair(java.util.List<java.lang.String> remainingCandidates) { java.util.List<Pair> remainingPairs = new java.util.ArrayList<Pair>(); for (java.lang.String s : valuesPersonMap.keySet()) { for (java.lang.String v : valuesPersonMap.get(s)) { if (remainingCandidates.contains(v)) { remainingPairs.add(new Pair(attributeName, s)); <BUGS> break; <BUGE> } } } return remainingPairs; } 
public void actionPerformed(java.awt.event.ActionEvent e) { comboText = ((java.lang.String) (Demo.getSelectedItem())); <BUGS> DemoInt = (Demo.getSelectedIndex()) - 1; <BUGE> if (!(Demo.getSelectedItem().equals("No Selection"))) { filePath.setText(((java.lang.String) (Demo.getSelectedItem()))); addSelectedImg(Demo.getSelectedIndex()); }else filePath.setText("No Item Selected");  } 
@java.lang.Override public void onActivityResult(int requestCode, int resultCode, android.content.Intent data) { super.onActivityResult(requestCode, resultCode, data); switch (requestCode) { case 10 : if ((resultCode == (android.app.Activity.RESULT_OK)) && (data != null)) { java.util.ArrayList<java.lang.String> result = data.getStringArrayListExtra(RecognizerIntent.EXTRA_RESULTS); commandText.setText(result.get(0)); <BUGS> new mohz.m13.wicompanion.CommandFragment.SendText().execute(AppConstants.ipForConnection, result.get(0)); <BUGE> } break; } } 
private void nextLevel() throws javax.xml.parsers.ParserConfigurationException, org.xml.sax.SAXException { net.liquidpineapple.pang.gui.Board currentBoard = net.liquidpineapple.pang.Application.getBoard(); <BUGS> net.liquidpineapple.pang.screens.Screen newScreen; <BUGE> if (currentBoard.getLevels().hasNext()) { newScreen = ((net.liquidpineapple.pang.screens.Screen) (currentBoard.getLevels().next())); }else { newScreen = new net.liquidpineapple.pang.screens.WinScreen(); } currentBoard.changeScreen(newScreen); } 
public void updateStatus(int trackToPlay, int status, int position) { <BUGS> com.fritzbang.theplayer.TrackBean tmp = trackBeans.get(trackToPlay); tmp.status = status; tmp.position = position; trackBeans.set(trackToPlay, tmp); android.util.Log.d(com.fritzbang.theplayer.PlaylistArrayAdapter.DEBUG_TAG, ((("AdapterPosition: " + trackToPlay) + " ") + position)); this.notifyDataSetChanged(); <BUGE> } 
@java.lang.Override public void onBitmapFailed(android.graphics.drawable.Drawable errorDrawable) { <BUGS> if (com.layer.ui.util.Log.isLoggable(com.layer.ui.util.Log.VERBOSE)) { <BUGE> com.layer.ui.util.Log.v(("onBitMapFailed :" + errorDrawable)); } bitmapWrapper.setBitmap(null); callback.onFailure(); mTargets.remove(this); } 
@java.lang.Override public void produceText(de.is2.ZZZZZnake.ZZZZZnake znake) { if ((znake.getLoopCount()) < 1) { startMessages(znake); } if ((znake.isVictory()) == true) { victory(znake); } if ((znake.isDead()) == true) { death(znake); } <BUGS> if (((znake.isRich()) == true) && ((znake.getLoopCountAfterGoldGet()) < 1)) { <BUGE> goldGet(znake); } } 
@java.lang.Override public javax.servlet.ServletInputStream getInputStream() throws java.io.IOException { synchronized(this) { if ((inputStream) == null) { if ((streamLimit) <= 0) { inputStream = new org.openrepose.commons.utils.io.BufferedServletInputStream(super.getInputStream()); }else { <BUGS> inputStream = new org.openrepose.commons.utils.io.stream.ServletInputStreamWrapper(new org.openrepose.commons.utils.io.stream.LimitedReadInputStream(streamLimit, super.getInputStream())); <BUGE> } } return inputStream; } } 
public static java.math.BigDecimal tryBigDecimal(java.lang.String preparedSql, java.lang.Object... supportedSQLArg) { java.lang.Object object = ids.sardine.TransferUtil.getObject(preparedSql, supportedSQLArg); if (object instanceof java.math.BigDecimal) { return ((java.math.BigDecimal) (object)); } <BUGS> java.lang.String s = java.lang.String.valueOf(object); <BUGE> return _String_.isNumeric(s) ? new java.math.BigDecimal(s) : null; } 
@java.lang.Override public void postQueue(com.jme3.renderer.queue.RenderQueue renderQueue) { DeferredRenderManager.renderOpaqueQueue(gBuffer, renderManager, viewPort, renderQueue); lightManager.render(gBuffer, renderManager, viewPort); postDeferredManager.render(gBuffer, renderManager, viewPort, renderQueue); postDeferredManager.renderSkyQueue(renderManager, viewPort, renderQueue); postDeferredManager.renderTranslucentQueue(renderManager, viewPort, renderQueue); postDeferredManager.renderDebug(gBuffer, renderManager); <BUGS> lightManager.renderDebug(gBuffer, renderManager); <BUGE> postDeferredManager.drawFrameOnScreen(gBuffer, renderManager); } 
@java.lang.Override public void updateEntity() { if (canGeneratePower()) { if (hasEnoughEnergyBuffer(getPowerPerOperation())) { if (!(worldObj.isRemote)) this.energy.acceptEnergy(getPowerPerOperation(), false);  onGeneratePower(); }else notEnoughBufferForFunction();  } <BUGS> transmitPower(); <BUGE> } 
private int computeNumElements(int bufSize) { <BUGS> <BUGE> switch (mode) { case Triangles : return bufSize / 3; case TriangleFan : case TriangleStrip : return bufSize - 2; case Points : return bufSize; case Lines : return bufSize / 2; case LineLoop : return bufSize; case LineStrip : return bufSize - 1; case Patch : return bufSize / (patchVertexCount); default : throw new java.lang.UnsupportedOperationException(); } } 
@java.lang.SuppressWarnings(value = { "unchecked" , "ConstantConditions" }) public B setStart(java.util.Date start) { com.google.common.base.Preconditions.checkNotNull(start, "start cannot be null"); com.google.common.base.Preconditions.checkArgument(((startRelative) == null), "Both relative and absolute start times cannot be set."); this.startAbsolute = start.getTime(); <BUGS> com.google.common.base.Preconditions.checkArgument(((startAbsolute) <= (java.lang.System.currentTimeMillis())), "Start time cannot be in the future."); <BUGE> return ((B) (this)); } 
@org.junit.Test public void testValidStudentCPF() { try { <BUGS> student = new model.Student("Jacó Mario Souza", cpf, rg, date, email, address, phone1, phone2, "Milene Souza Medeiros", "Mário Souza Filho"); <BUGE> assertEquals(cpf, student.getStudentCpf()); } catch (exception.StudentException e) { fail(("Should not throw this exception: " + (e.getMessage()))); } } 
private java.lang.String getAdapterQueryLogUnsecuredSerrviceUrl() { java.lang.String url = null; try { url = proxyHelper.getUrlLocalHomeCommunity(NhincConstants.ADAPTER_AUDIT_QUERY_LOG_SERVICE_NAME); } catch (gov.hhs.fha.nhinc.connectmgr.ConnectionManagerException ex) { gov.hhs.fha.nhinc.auditquerylog.nhinc.proxy.AuditQueryLogProxyWebServiceUnsecuredImpl.LOG.debug((("Error while retrieving url for " + (gov.hhs.fha.nhinc.nhinclib.NhincConstants.ADAPTER_AUDIT_QUERY_LOG_SERVICE_NAME)) + (ex.getLocalizedMessage())), ex); return url; } catch (java.lang.Exception ex) { <BUGS> gov.hhs.fha.nhinc.auditquerylog.nhinc.proxy.AuditQueryLogProxyWebServiceUnsecuredImpl.LOG.debug((("Failed to call the web service " + (gov.hhs.fha.nhinc.nhinclib.NhincConstants.ADAPTER_AUDIT_QUERY_LOG_SERVICE_NAME)) + (ex.getLocalizedMessage())), ex); <BUGE> } return url; } 
public java.util.List<org.sonar.api.measures.Measure> buildFuncionMeasuresList(double complexMean, int complexityInFunctions, org.sonar.api.measures.RangeDistributionBuilder builder) { java.util.List<org.sonar.api.measures.Measure> list = new java.util.ArrayList<org.sonar.api.measures.Measure>(); <BUGS> list.add(new org.sonar.api.measures.Measure(org.sonar.api.measures.CoreMetrics.FUNCTION_COMPLEXITY, complexMean)); <BUGE> list.add(new org.sonar.api.measures.Measure(org.sonar.api.measures.CoreMetrics.COMPLEXITY_IN_FUNCTIONS).setIntValue(complexityInFunctions)); list.add(builder.build().setPersistenceMode(PersistenceMode.MEMORY)); return list; } 
public void setup() { if ((this) == (lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.APPROACH.NonStandardSPARQL)) { lupos.sparql1_1.operatorgraph.ServiceApproaches.setNonStandardSPARQLBitVectorJoin(true); }else { lupos.sparql1_1.operatorgraph.ServiceApproaches.setNonStandardSPARQLBitVectorJoin(false); if ((this) == (lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.APPROACH.Value)) { lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.approachClass = lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.SemiJoinToStringHelper.class; <BUGS> } if ((this) == (lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.APPROACH.ValueSubstring)) { lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.approachClass = lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.SubstringValueToStringHelper.class; }else { lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.approachClass = lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.BitVectorJoinToStringHelper.class; lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.hashFunction = lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.HASHFUNCTION.values()[this.ordinal()]; } <BUGE> } } 
public void clickRenameLibrary(javafx.event.ActionEvent actionEvent) { <BUGS> java.lang.String newLibraryTitle = textFieldForNewLibraryTitle.getText(); <BUGE> if (newLibraryTitle.equals(oldLibraryTitle)) { com.devprosony.Main.stdOut.println("newLibraryTitle = oldLibraryTitle"); }else { <BUGS> com.devprosony.Main.stdOut.println(("newLibraryTitle: " + newLibraryTitle)); <BUGE> renameLibraryTitle(oldLibraryTitle, newLibraryTitle); dialogRenameLibraryStage.close(); } } 
public int getLastPosition() { if (((mGridView) == null) || ((postsIds) == null)) { return 0; } int firstPos = mGridView.getFirstVisiblePosition(); <BUGS> if (firstPos >= 0) { return postsIds.get(mGridView.getFirstVisiblePosition()); <BUGE> }else { return 0; } } 
@org.junit.Test public void whenProjectListIsEmptyReturnAnEmptyList() { <BUGS> org.mockito.Mockito.when(projectPaginatedScanList.stream()).thenReturn(java.util.stream.Stream.empty()); <BUGE> java.util.List<com.romcharm.domain.mypage.Project> orderedList = projectsRepository.getProjects(); org.hamcrest.MatcherAssert.assertThat(orderedList, is(empty())); } 
public void deleteAllPolyElements() { final android.database.sqlite.SQLiteDatabase db = getWritableDatabase(); <BUGS> java.util.List<io.github.data4all.model.data.PolyElement> pEs = getAllPolyElements(); <BUGE> for (io.github.data4all.model.data.PolyElement pE : pEs) { for (io.github.data4all.model.data.Node n : pE.getNodes()) { <BUGS> deleteNodeByID(n.getOsmId()); <BUGE> } } db.delete(io.github.data4all.handler.DataBaseHandler.TABLE_POLYELEMENT, null, null); } 
private void createAccountsAndFinish() { org.gnucash.android.ui.account.AccountsActivity.removeFirstRunFlag(); if (mAccountOptions.equals(getString(R.string.wizard_option_create_default_accounts))) { java.lang.String bookUID = org.gnucash.android.db.adapter.BooksDbAdapter.getInstance().getActiveBookUID(); org.gnucash.android.ui.account.AccountsActivity.createDefaultAccounts(mCurrencyCode, this); org.gnucash.android.db.adapter.BooksDbAdapter.getInstance().deleteBook(bookUID); finish(); }else if (mAccountOptions.equals(getString(R.string.wizard_option_import_my_accounts))) { org.gnucash.android.ui.account.AccountsActivity.startXmlFileChooser(this); }else { <BUGS> <BUGE> finish(); }  } 
@java.lang.Override public boolean onOptionsItemSelected(android.view.MenuItem item) { switch (item.getItemId()) { case R.id.action_refresh_report_type : if (org.cm.podd.report.util.RequestDataUtil.hasNetworkConnection(this)) { progress.show(); android.content.Intent intent = new android.content.Intent(this, org.cm.podd.report.service.SyncReportTypeService.class); startService(intent); <BUGS> <BUGE> } break; } <BUGS> return true; <BUGE> } 
@java.lang.Override public void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); <BUGS> showLoading(true); <BUGE> if (getArguments().containsKey(com.yomiolatunji.andela.lagosjavadev.ui.UserDetailFragment.ARG_USERNAME)) { loadUser(getArguments().getString(com.yomiolatunji.andela.lagosjavadev.ui.UserDetailFragment.ARG_USERNAME)); android.app.Activity activity = this.getActivity(); }else { loadUser(getActivity().getIntent().getStringExtra(com.yomiolatunji.andela.lagosjavadev.ui.UserDetailFragment.ARG_USERNAME)); } } 
public void executePhase(at.borkowski.scovillej.simulation.SimulationContext context) throws java.io.IOException { if (!(initialized)) initialize(context);  if ((serverSocket.available()) > 0) <BUGS> owner.registerClientProcessor(new at.borkowski.scovillej.prefetch.members.server.ClientProcessor(null, serverSocket.accept())); <BUGE>  } 
@java.lang.Override public void onResponse(java.lang.String jsonString) { try { <BUGS> com.example.ssteeve.dpd_android.DPDUser.login((endPoint + "/login"), username, password, mappableObject, callBack); <BUGE> } catch (org.json.JSONException e) { e.printStackTrace(); callBack.onFailure(null, null, e); } } 
<BUGS> protected final void provision(android.support.v4.app.Fragment fragment, int idx) { <BUGE> android.os.Bundle args = new android.os.Bundle(); <BUGS> java.lang.String json = (idx >= 0) ? jsonList.get(idx) : "{}"; <BUGE> args.putString(EntityFragment.ARG_JSON, json); args.putString(EntityFragment.ARG_ENTITY, ("" + (entityType))); fragment.setArguments(args); } 
public static org.opencv.core.Mat tresholdContrastBlackWhite(org.opencv.core.Mat image2, double d) { final org.opencv.core.Mat imageHSV = new org.opencv.core.Mat(); org.opencv.imgproc.Imgproc.cvtColor(image2, imageHSV, Imgproc.COLOR_BGR2HSV); final org.opencv.core.Mat imageThresholded = new org.opencv.core.Mat(); org.opencv.core.Core.inRange(imageHSV, new org.opencv.core.Scalar(160, 70, 169), new org.opencv.core.Scalar(179, 90, 179), imageThresholded); <BUGS> imageThresholded.convertTo(imageThresholded, CvType.CV_8UC3); return imageThresholded; <BUGE> } 
@org.junit.Test public void testOneFloor() throws PathNotFoundException { SubPath expected = new SubPath("A"); <BUGS> <BUGE> expected.path.add(A2); <BUGS> expected.path.add(A1); <BUGE> java.util.ArrayList<SubPath> expSubPath = new java.util.ArrayList<>(); expSubPath.add(expected); assertEquals("Sub path should be one floor", expSubPath, map.getPathByFloor(A1, A2)); } 
public void open() { open = true; for (com.ezardlabs.dethsquare.GameObject piece : pieces) { piece.setActive(true); } for (com.ezardlabs.dethsquare.GameObject highlight : highlights) { highlight.setActive(false); } for (com.ezardlabs.dethsquare.GameObject text : texts) { text.setActive(true); } com.ezardlabs.dethsquare.Time.pause(); <BUGS> com.ezardlabs.dethsquare.Screen.setCursorVisible(true); <BUGE> } 
public void enqueue(Item item) { if (item == null) { throw new java.lang.NullPointerException("the item to enqueue is null"); } if ((N) == (q.length)) { <BUGS> q.resize((2 * (q.length))); <BUGE> } q[((N)++)] = item; } 
public static javax.swing.JMenuItem createJMenuItem(java.lang.String name, java.lang.String description, javax.swing.KeyStroke keyStroke) { javax.swing.JMenuItem comp = new javax.swing.JMenuItem(name); if (keyStroke != null) comp.setAccelerator(keyStroke);  if (description != null) comp.setToolTipText(description);  comp.setFont(new java.awt.Font(java.awt.Font.SANS_SERIF, java.awt.Font.BOLD, 14)); <BUGS> com.tri.pgs.client.surface.ui.UISystem.init(comp, false); <BUGE> return comp; } 
@java.lang.Override public void onBindViewHolder(com.closestudios.bro.util.BroViewAdapter.ViewHolder holder, int position) { holder.flBackdrop.setBackgroundColor(holder.flBackdrop.getContext().getResources().getColor(colors[(position + ((colorOffset) % (colors.length)))])); holder.tvHeader.setText(mDataset[position].getHeader()); <BUGS> holder.tvDetails.setText(mDataset[position].getDetails()); <BUGE> } 
public drgn.data.routes.mathematics.Line getParallelLine(drgn.data.routes.model.Point point) { <BUGS> return new drgn.data.routes.mathematics.Line(_a, _b, (-(((_a) * (point.getLongitude())) + ((_b) * (point.getLatitude()))))); <BUGE> } 
<BUGS> public void createLand(int id, java.lang.String owner, int[] start, int[] end, int size, java.lang.String world) { sql.createLand(id, owner, start[0], start[1], end[0], end[1], size, world); <BUGE> } 
public void enterChatRoom(java.lang.String roomName) throws java.io.IOException { <BUGS> this.requestToServer.writeObject(new Message(MessageType.EnterTopic, roomName, null, null)); <BUGE> this.requestToServer.flush(); if ((this.enteredRoom.contains(roomName)) == false) this.enteredRoom.add(roomName);  } 
@org.junit.Test public void testTfMapCalculation() throws java.io.IOException, java.lang.InterruptedException { java.util.Map<java.lang.String, java.lang.Double> tfMap1 = tfidf.TfidfUtils.getTfMap(tfidf.TfidfUtils.getWordsArrayOfContent(doc1Content)); java.util.Map<java.lang.String, java.lang.Double> tfMap2 = tfidf.TfidfUtils.getTfMap(tfidf.TfidfUtils.getWordsArrayOfContent(doc2Content)); <BUGS> org.junit.Assert.assertEquals(tfMap1, doc1ExpectedTfMap); org.junit.Assert.assertEquals(tfMap2, doc2ExpectedTfMap); <BUGE> } 
public void indexJumpDown() { <BUGS> if (((currentItemIndex) + (com.harvest.hud_elements.HUDVars.INVENTORY_ROW_SIZE)) > (list.size())) { <BUGE> currentItemIndex = (currentItemIndex) % (com.harvest.hud_elements.HUDVars.INVENTORY_ROW_SIZE); }else { currentItemIndex = (currentItemIndex) + (com.harvest.hud_elements.HUDVars.INVENTORY_ROW_SIZE); } } 
public void saveScreenMap() { try { <BUGS> java.util.Iterator it = screenStringBiMap.entrySet().iterator(); while (it.hasNext()) { java.util.Map.Entry entry = ((java.util.Map.Entry) (it.next())); stmt.executeQuery((((("insert into screenNameMap (screenId, screenName) values (" + (entry.getValue())) + ",'") + (entry.getKey())) + "') ON CONFLICT DO NOTHING")); } <BUGE> } catch (java.sql.SQLException e) { e.printStackTrace(); } } 
@java.lang.Override public void onSetStreamVolume(float volume) { mLog.d((("[onSetStreamVolume][volume: " + volume) + "]")); if (volume == 0.0F) { try { <BUGS> mDtvManager.setMute(); <BUGE> } catch (android.os.RemoteException e) { e.printStackTrace(); } }else { <BUGS> mDtvManager.setVolume((volume * 100)); <BUGE> } } 
private static void listItems() { <BUGS> for (int I = 0; I <= (MainGame.items.length); I++) { <BUGE> if (((MainGame.itemDescrStrings[I]) != null) && ((MainGame.items[I]) != 0)) <BUGS> java.lang.System.out.println(((("Item " + (MainGame.items[I])) + ": ") + (MainGame.itemDescrStrings))); <BUGE>  } } 
private boolean isRowEmpty(int startingPosition) { int i = startingPosition; while (i >= 0) { if ((i % (com.kiddos.nuktimetable.MainFragment.ScheduleAdapter.NUM_COL)) == 0) break;  i--; } int start = i; <BUGS> for (; i < ((start + (com.kiddos.nuktimetable.MainFragment.ScheduleAdapter.NUM_COL)) - 1); i++) { <BUGE> if ((courses[i]) != null) { return false; } } return true; } 
public static void delAll(java.util.Collection<? extends com.caberodev.squarearmy.worldobjects.WorldObject> c) { for (com.caberodev.squarearmy.worldobjects.WorldObject o : c) { for (java.lang.String key : com.caberodev.squarearmy.util.ListLinker.links.get(o)) { java.util.ArrayList<com.caberodev.squarearmy.worldobjects.WorldObject> list = com.caberodev.squarearmy.util.ListLinker.linker.get(key); list.remove(o); <BUGS> o.data.setColor("color", Color.RED); <BUGE> } } } 
protected com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> _findExplicitUntypedSerializer(java.lang.Class<?> runtimeType) throws com.fasterxml.jackson.databind.JsonMappingException { com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser = _knownSerializers.untypedValueSerializer(runtimeType); if (ser == null) { ser = _serializerCache.untypedValueSerializer(runtimeType); if (ser == null) { ser = _createAndCacheUntypedSerializer(runtimeType); <BUGS> if (isUnknownTypeSerializer(ser)) { return null; } <BUGE> } <BUGS> <BUGE> } return ser; } 
<BUGS> public void close(net.dv8tion.jda.core.audio.hooks.ConnectionStatus closeStatus) { if ((sendSystem) != null) <BUGE> sendSystem.shutdown(); <BUGS>  if ((receiveThread) != null) <BUGE> receiveThread.interrupt(); <BUGS>  if ((combinedAudioExecutor) != null) <BUGE> combinedAudioExecutor.shutdownNow(); <BUGS>  webSocket.close(closeStatus); <BUGE> } 
@java.lang.Override <BUGS> public void onClick() { <BUGE> if ((config.dialog) == null) { startActivity(new android.content.Intent(android.content.Intent.ACTION_VIEW, android.net.Uri.parse(config.privacyHtmlPath))); }else { config.dialog.open(this, config.privacyHtmlPath, getString(R.string.egab_privacy_policy)); } if ((config.analytics) != null) { config.analytics.logUiEvent(config.logUiEventName, getString(R.string.egab_privacy_log_event)); } } 
@java.lang.Override protected org.andengine.entity.scene.Scene onCreateScene() { <BUGS> mScene = ((new org.andengine.entity.scene.Scene()) < (HEAD)) == (mBackground = new org.andengine.entity.scene.background.Background(0, 0, 0, 1)); <BUGE> mScene.setBackground(mBackground); <BUGS> com.heinousgames.game.shantelsmixtape.activities.d089bffc81c5ee71b852ebadbe3bd4b1d0 mBackground = new org.andengine.entity.scene.background.Background(0, 0, 0, 1); <BUGE> mScene.setBackground(mBackground); return mScene; } 
public boolean checkAnyMarker(antgameproject.Pos markerPos, antgameproject.Colour markerCol) { for (antgameproject.Colour col : antgameproject.Colour.values()) { if (markerCol == col) { <BUGS> return (board[markerPos.getPosY()][markerPos.getPosX()].getMarker(col)) != (Marker.EMPTY); <BUGE> } } return false; } 
public static void main(java.lang.String[] args) throws java.io.IOException { org.spongepowered.despector.source.ast.SourceFileSet set = new org.spongepowered.despector.source.ast.SourceFileSet(); java.io.File f = new java.io.File("src/main/java/org/spongepowered/despector/Despector.java"); java.lang.String input = new java.lang.String(java.nio.file.Files.readAllBytes(f.toPath()), com.google.common.base.Charsets.UTF_8); <BUGS> org.spongepowered.despector.source.ast.SourceFile src = SourceParsers.JAVA.parse(set, "org/spongepowered/despector/Despector.java", input); <BUGE> } 
public java.lang.Object intercept(cn.dreampie.route.core.RouteInvocation ri) { cn.dreampie.common.http.HttpRequest request = ri.getRouteMatch().getRequest(); cn.dreampie.common.http.HttpResponse response = ri.getRouteMatch().getResponse(); cn.dreampie.route.interceptor.security.Session oldSession = sessionBuilder.in(request); cn.dreampie.route.interceptor.security.Subject.check(request.getHttpMethod(), request.getRestPath()); java.lang.Object result = ri.invoke(); <BUGS> <BUGE> sessionBuilder.buildSessionMetadata(request, oldSession); <BUGS> sessionBuilder.out(oldSession, response); <BUGE> return result; } 
<BUGS> private static org.jfree.data.xy.XYSeriesCollection createSeries(org.jfree.data.xy.XYSeriesCollection seriesCollection, org.nd4j.linalg.api.ndarray.INDArray data, int offset, java.lang.String name) { <BUGE> int nRows = data.shape()[2]; org.jfree.data.xy.XYSeries series = new org.jfree.data.xy.XYSeries(name); for (int i = 0; i < nRows; i++) { series.add((i + offset), data.getDouble(i)); } seriesCollection.addSeries(series); <BUGS> return seriesCollection; <BUGE> } 
private static org.bonitasoft.studio.model.process.Data resolveData(final org.bonitasoft.studio.model.process.Data referencedData) { return com.google.common.collect.Iterables.find(org.bonitasoft.studio.common.emf.tools.ModelHelper.getAccessibleData(org.bonitasoft.studio.common.emf.tools.ModelHelper.getParentProcess(referencedData)), new com.google.common.base.Predicate<org.bonitasoft.studio.model.process.Data>() { @java.lang.Override public boolean apply(final org.bonitasoft.studio.model.process.Data data) { return data.getName().equals(referencedData.getName()); } <BUGS> }); <BUGE> } 
public void checkAllowsDeployment(org.carlspring.strongbox.storage.repository.Repository repository) throws org.carlspring.strongbox.storage.ArtifactStorageException { <BUGS> if (((!(repository.allowsDeployment())) && (!(RepositoryTypeEnum.GROUP.getType().equals(repository.getType())))) && (!(RepositoryTypeEnum.PROXY.getType().equals(repository.getType())))) { <BUGE> throw new org.carlspring.strongbox.storage.ArtifactStorageException((("Deployment of artifacts to " + (repository.getType())) + " repositories is not allowed!")); } } 
private void refreshMonthView(int position) { com.othershe.calendarview.MonthView monthView = calendarPagerAdapter.getViews().get(position); if ((itemChooseListener) != null) { <BUGS> if (((chooseDate.get(position)) != null) && ((chooseDate.get(position).size()) > 0)) <BUGE> monthView.multiChooseRefresh(chooseDate.get(position));  }else { monthView.refresh(lastClickedDay); } } 
public java.util.List<com.ibm.prolaeoc.model.Badge> listReception(java.lang.String handbag) { <BUGS> <BUGE> javax.persistence.EntityManager em = new com.ibm.prolaeoc.DAO.JPAUtil().getEntityManager(); javax.persistence.TypedQuery<com.ibm.prolaeoc.model.Badge> query = em.createQuery("from Badge where handbag=:phandbag and status=:pstatus ", com.ibm.prolaeoc.model.Badge.class); query.setParameter("phandbag", handbag); query.setParameter("pstatus", "SentToReception"); return query.getResultList(); } 
@java.lang.Override public E previous() { if ((this.previous) != null) { this.next = this.previous; this.previous = this.previous.getPrevious(); this.lastReturned = this.next.get(); <BUGS> <BUGE> return this.next.get(); } return null; } 
private int findComponentStart(int findFrom, com.epam.java.rt.lab.parser.service.Type type) { java.util.regex.Matcher matcher = ruler.getTypeRulePatternStart(type).matcher(this.source); if (!(matcher.find(findFrom))) return -1;  <BUGS> java.lang.System.out.println(((((("findFrom=" + findFrom) + ", type=") + type) + ", matcher.start()=") + (matcher.start()))); <BUGE> return matcher.start(); } 
@org.junit.Test public void testSetArgsMultipleNewFiles() throws java.lang.Exception { try { <BUGS> com.nononsenseapps.filepicker.FilePickerFragmentTest.fragment.setArgs(null, AbstractFilePickerFragment.MODE_NEW_FILE, true, false, true); <BUGE> org.junit.Assert.fail("Expected exception"); } catch (java.lang.IllegalArgumentException e) { org.junit.Assert.assertTrue(("Should mention the mode limitations: " + (e.getMessage())), e.getMessage().contains("MODE_NEW_FILE")); } } 
public static synchronized org.apache.sqoop.submission.spark.YarnSqoopSparkClient getInstance(java.util.Map<java.lang.String, java.lang.String> conf) { if ((org.apache.sqoop.submission.spark.YarnSqoopSparkClient.client) == null) { java.lang.System.setProperty(org.apache.sqoop.submission.spark.YarnSqoopSparkClient.YARN_MODE, "true"); org.apache.spark.SparkConf sparkConf = org.apache.sqoop.submission.spark.SqoopSparkClientFactory.generateSparkConf(conf); <BUGS> <BUGE> org.apache.sqoop.submission.spark.YarnSqoopSparkClient.client = new org.apache.sqoop.submission.spark.YarnSqoopSparkClient(sparkConf); <BUGS> org.apache.sqoop.submission.spark.YarnSqoopSparkClient.yarnConfig = org.apache.sqoop.submission.spark.YarnSqoopSparkClient.generateYarnSparkConf(conf); <BUGE> org.apache.sqoop.submission.spark.YarnSqoopSparkClient.clientArgs = new org.apache.spark.deploy.yarn.ClientArguments(org.apache.sqoop.submission.spark.YarnSqoopSparkClient.args, sparkConf); } return org.apache.sqoop.submission.spark.YarnSqoopSparkClient.client; } 
private void addPlayer(int id, int x, int y) { boolean flag = true; for (player.Player foo : players) { if ((foo.getID()) == id) { flag = false; foo.set(x, y); <BUGS> <BUGE> } } if (flag) { players.add(new player.Player(id)); } } 
private void quiteLiveByPurpose() { if ((com.tencent.qcloud.suixinbo.model.MySelfInfo.getInstance().getIdStatus()) == (com.tencent.qcloud.suixinbo.utils.Constants.HOST)) { if ((backDialog.isShowing()) == false) backDialog.show();  }else { mLiveHelper.perpareQuitRoom(true); <BUGS> mEnterRoomHelper.quiteLive(); <BUGE> } } 
public void newGame() { frame = new se2aa4.morris.Frame(); state = State.IN_PROGRESS; sel = Location.NONE; blueMillExists = false; redMillExists = false; redInventory = true; blueInventory = true; moved = false; removed = false; randTurn(); randCpuPlayer(); createRestorePoint(); if ((turn) == (cpuPlayer)) { <BUGS> java.lang.System.out.println("cpuMove"); <BUGE> cpuMove(); <BUGS> java.lang.System.out.println("endTurn"); <BUGE> endTurn(); } } 
@java.lang.Override public void onSaveInstanceState(android.os.Bundle outState) { super.onSaveInstanceState(outState); outState.putLong(org.tasks.ui.GoogleTaskListFragment.EXTRA_TASK_ID, taskId); <BUGS> outState.putParcelable(org.tasks.ui.GoogleTaskListFragment.EXTRA_ORIGINAL_LIST, originalList.getStoreObject()); outState.putParcelable(org.tasks.ui.GoogleTaskListFragment.EXTRA_SELECTED_LIST, selectedList.getStoreObject()); <BUGE> } 
public boolean play() { if (this.canPlay()) { <BUGS> Woo.users[((Woo.order) + 1)].draw(); Woo.users[((Woo.order) + 1)].draw(); <BUGE> java.lang.System.out.println("Played a Draw Two card. Next player draws two cards."); return true; } return false; } 
@java.lang.Override protected void map(org.apache.hadoop.io.LongWritable key, org.mrgeo.geometry.Geometry value, org.mrgeo.data.geowave.vector.Context context) throws java.io.IOException, java.lang.InterruptedException { <BUGS> java.lang.System.out.println(("Key: " + (key.get()))); java.lang.System.out.println(("Value: " + value)); <BUGE> context.write(new org.apache.hadoop.io.Text(("" + (key.get()))), new org.apache.hadoop.io.Text(value.toString())); } 
@java.lang.Override public void updateEntity() { <BUGS> if (((this.getBlockMetadata()) & 8) == 0) <BUGE> return ;  if ((!(this.worldObj.isRemote)) && ((occupied) != (((this.getBlockMetadata()) & 4) != 0))) { occupied = !(occupied); needsAnimation = true; markDirty(); }else net.minecraft.block.BlockBed.func_149979_a(worldObj, xCoord, yCoord, zCoord, occupied);  } 
private void handleHit(java.lang.Package p) { int damage = ((java.lang.Integer) (p.getPayload())); int id = java.lang.Integer.parseInt(p.getExtra()); java.lang.System.out.println(((id + "hit ") + (java.lang.Math.random()))); for (Actors.Actor a : actorQueue) { if ((a.getID()) == id) { a.hit(damage); <BUGS> checkActor(a); <BUGE> } } } 
public long getRowCount(org.apache.hadoop.mapreduce.JobContext job) throws java.io.IOException, org.carbondata.core.carbon.datastore.exception.IndexBuilderException { long rowCount = 0; org.carbondata.core.carbon.AbsoluteTableIdentifier absoluteTableIdentifier = new org.carbondata.core.carbon.AbsoluteTableIdentifier(getStorePathString(job), org.carbondata.hadoop.CarbonInputFormat.getTableToAccess(job)); <BUGS> for (int segmentNo : getValidSegments(job)) { <BUGE> java.util.Map<java.lang.String, org.carbondata.core.carbon.datastore.block.AbstractIndex> segmentIndexMap = getSegmentAbstractIndexs(job, absoluteTableIdentifier, segmentNo); for (org.carbondata.core.carbon.datastore.block.AbstractIndex abstractIndex : segmentIndexMap.values()) { rowCount += abstractIndex.getTotalNumberOfRows(); } } return rowCount; } 
public void paintComponent(java.awt.Graphics g) { super.paintComponent(g); <BUGS> boydjohnson.DrawSnakeGamePanel.gameStage = boydjohnson.SnakeGame.getGameStage(); switch (boydjohnson.DrawSnakeGamePanel.gameStage) { <BUGE> case 1 : { displayInstructions(g); break; } case 2 : { displayGame(g); break; } case 3 : { displayGameOver(g); break; } default : { displayGameWon(g); break; } } } 
public java.lang.String validateControls() { if ((cb.getValue()) == null) { return "Market type is not selected"; } <BUGS> if (marketCodeField.getText().isEmpty()) { <BUGE> return "Market code can not be empty"; } <BUGS> if (dataPathField.getText().isEmpty()) { <BUGE> return "The data source path can not be empty."; } return null; } 
@org.springframework.web.bind.annotation.RequestMapping(value = "/mareanoPolar_en") public org.springframework.web.servlet.ModelAndView getMareanoPolarEn(javax.servlet.http.HttpServletResponse resp) throws java.io.IOException { <BUGS> if (((mavPolarEn) == null) || (((java.lang.System.currentTimeMillis()) - (mavLastUpdatedPolar)) > (no.imr.geoexplorer.admindatabase.controller.MareanoController.ONEHOUR))) { <BUGE> mavPolarEn = commonGetMareano(resp, no.imr.geoexplorer.admindatabase.controller.MareanoController.EN, "mareanoPolar_en"); mavLastUpdatedPolarEn = new java.util.Date().getTime(); } polarConfig(mavPolarEn); return mavPolarEn; } 
<BUGS> public synchronized void markDirty(mcp.mobius.betterbarrels.common.blocks.TileEntityBarrel barrel, boolean bspace) { <BUGE> this.dirtyBarrels.put(barrel, true); if (bspace) if ((barrel.coreUpgrades.hasEnder) && (!(barrel.getWorldObj().isRemote))) mcp.mobius.betterbarrels.bspace.BSpaceStorageHandler.instance().markAllDirty(barrel.id);   } 
<BUGS> private java.util.Stack<server.Card> initAllCards() { <BUGE> cards = new java.util.Stack<>(); for (java.lang.String symbol : POSSIBLE_SYMBOLS) { for (int value : POSSIBLE_VALUES) { cards.add(new server.Card(value, symbol)); } } shuffle(); <BUGS> return cards; <BUGE> } 
@org.junit.Test public void not_enough_inserted_for_chips() { org.junit.Assert.assertEquals("INSERT COINS", vendingMachine.check_display()); vendingMachine.insert_coin("Quarter"); org.junit.Assert.assertEquals("$0.25", vendingMachine.check_display()); org.junit.Assert.assertEquals("$0.00", vendingMachine.check_coin_return()); org.junit.Assert.assertEquals("PRICE $0.50", vendingMachine.select_product("Chips")); <BUGS> org.junit.Assert.assertEquals("$0.10", vendingMachine.check_coin_return()); org.junit.Assert.assertEquals("EXACT CHANGE ONLY", vendingMachine.check_display()); <BUGE> } 
private void onClear() { if (android.text.TextUtils.isEmpty(mBuffer)) { <BUGS> <BUGE> return ; } reveal(mDeleteButton, R.color.blue_700, new android.animation.AnimatorListenerAdapter() { @java.lang.Override public void onAnimationEnd(android.animation.Animator animation) { mBuffer = ""; for (com.doomonafireball.repmaxcalculator.widget.RepMaxView repMaxView : mRepMaxViews) { repMaxView.clearWeight(); } } }); } 
private java.util.ArrayList<java.lang.Boolean> multiplication(java.util.ArrayList<java.lang.Boolean> multiplicand, java.util.ArrayList<java.lang.Boolean> multiplier) { java.util.ArrayList<java.lang.Boolean> result = new java.util.ArrayList<java.lang.Boolean>(); result.add(false); <BUGS> for (int i = 0; i < (multiplier.size()); i++) { <BUGE> if ((multiplier.get(i)) == true) { result = addition(result, multiplicand, i); } } return result; } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_article_list); mToolbar = ((android.support.v7.widget.Toolbar) (findViewById(R.id.toolbar))); <BUGS> final android.view.View toolbarContainerView = findViewById(R.id.toolbar_container); <BUGE> mSwipeRefreshLayout = ((android.support.v4.widget.SwipeRefreshLayout) (findViewById(R.id.swipe_refresh_layout))); mRecyclerView = ((android.support.v7.widget.RecyclerView) (findViewById(R.id.recycler_view))); getLoaderManager().initLoader(0, null, this); if (savedInstanceState == null) { refresh(); } } 
<BUGS> public mazeADT.List<mazeADT.Cell> getNeighbors() { mazeADT.List<mazeADT.Cell> neighbors = new mazeADT.LinkedList<mazeADT.Cell>(); <BUGE> if ((northCell) != null) { neighbors.add(northCell); } if ((westCell) != null) { neighbors.add(westCell); } if ((southCell) != null) { neighbors.add(southCell); } if ((eastCell) != null) { neighbors.add(eastCell); } return neighbors; } 
public void flee() { cooldownWalk = 500; if (((actAction) != 1) || (fleePath.isEmpty())) { pp2016.team19.shared.Node fleePos = getFleePos(); fleePath.clear(); <BUGS> fleePath = AStarSearch(this.getXPos(), this.getYPos(), fleePos.getXPos(), fleePos.getYPos()); <BUGE> } changeDir(fleePath); actAction = 1; } 
@java.lang.Override public void onResponse(java.lang.String response) { super.onResponse(response); if (android.text.TextUtils.isEmpty(response)) return ;  com.bai.chesscard.bean.BaseBean baseBean = new com.google.gson.Gson().fromJson(response, com.bai.chesscard.bean.BaseBean.class); if ((baseBean.id) == 1) { <BUGS> <BUGE> resetUserStatue(); <BUGS> gamePresenterNew.resetUserInfo(ConstentNew.USERPOS); <BUGE> }else com.bai.chesscard.utils.Tools.toastMsgCenter(context, baseBean.msg);  } 
public void syncWithModelRepository(float deltaTime) { executeCommands(commands, deltaTime); commands.clear(); com.bigcustard.blurp.core.BlurpStore.syncSingletons(); runtimeImageSprites.syncAll(BlurpStore.modelRepository.getImageSprites()); runtimeAnimationSprites.syncAll(BlurpStore.modelRepository.getAnimationSprites()); runtimeTextSprites.syncAll(BlurpStore.modelRepository.getTextSprites()); for (com.bigcustard.blurp.core.Sprite modelSprite : BlurpStore.modelRepository.pullCreatedSprites()) { BlurpStore.blurpScreen.addActor(getSprite(modelSprite)); } executeCommands(deferredCommands, deltaTime); <BUGS> commands.clear(); <BUGE> } 
public void activityStart(final com.remswork.classmanager.model.clazz.Clazz clazz, final int typeRequest) { android.content.Intent intent = new android.content.Intent(this, com.remswork.classmanager.ClazzActivity.class); <BUGS> intent.putExtra("subject", clazz.getSubject()); intent.putExtra("section", clazz.getSection()); intent.putParcelableArrayListExtra("scheduleList", ((java.util.ArrayList<? extends android.os.Parcelable>) (clazz.getListOfSchedule()))); <BUGE> intent.putExtra("typeRequest", typeRequest); startActivity(intent); } 
@java.lang.Override public void onSuccess(com.andela.helpmebuy.models.User user) { android.support.design.widget.Snackbar.make(parentLayout, "Password changed successfully", Snackbar.LENGTH_LONG).show(); android.os.Bundle bundle = getIntent().getBundleExtra(Launcher.TRANSPORT); if (bundle != null) { if (bundle.getBoolean(ConfirmPasswordFragment.CONFIRM_PASSWORD)) { <BUGS> com.andela.helpmebuy.utilities.Launcher.launchActivity(this, com.andela.helpmebuy.activities.UserSettingsActivity.class); <BUGE> } }else { <BUGS> com.andela.helpmebuy.utilities.Launcher.launchActivity(this, com.andela.helpmebuy.activities.HomeActivity.class); <BUGE> } finish(); } 
public double getTravelTimeAfter(final double time) { final int bs = departures.binarySearch(time); <BUGS> final int index = (bs < 0) ? -bs : bs; <BUGE> final double tt = (arrivals.get(index)) - (departures.get(index)); assert tt >= 0; return tt; } 
@java.lang.Override public java.lang.String sendSMS(java.lang.String CorpNum, java.lang.String sender, java.lang.String senderName, java.lang.String content, com.popbill.api.message.Message[] Messages, java.util.Date reserveDT, java.lang.Boolean adsYN, java.lang.String UserID) throws com.popbill.api.PopbillException { <BUGS> return sendMessage(MessageType.SMS, CorpNum, sender, null, senderName, content, Messages, reserveDT, adsYN, UserID); <BUGE> } 
@org.junit.Test public void testValidateDelimitedPeriodShouldReturnFalseWhenStartEndDatePresent() { java.util.List<un.unece.uncefact.data.standard.reusableaggregatebusinessinformationentity._20.DelimitedPeriod> periods = new java.util.ArrayList<>(); un.unece.uncefact.data.standard.reusableaggregatebusinessinformationentity._20.DelimitedPeriod period = new un.unece.uncefact.data.standard.reusableaggregatebusinessinformationentity._20.DelimitedPeriod(); period.setStartDateTime(new un.unece.uncefact.data.standard.unqualifieddatatype._20.DateTimeType(null, new un.unece.uncefact.data.standard.unqualifieddatatype._20.DateTimeType.DateTimeString("ddfldf", "72829"))); period.setEndDateTime(new un.unece.uncefact.data.standard.unqualifieddatatype._20.DateTimeType(null, new un.unece.uncefact.data.standard.unqualifieddatatype._20.DateTimeType.DateTimeString("ddfldf", "72829"))); periods.add(period); <BUGS> org.junit.Assert.assertFalse(fact.validateDelimitedPeriod(periods, true, true)); <BUGE> } 
protected java.lang.String determineTargetUrl(org.springframework.security.core.Authentication authentication) { java.lang.String url = ""; java.util.Collection<? extends org.springframework.security.core.GrantedAuthority> authorities = authentication.getAuthorities(); java.util.List<java.lang.String> roles = new java.util.ArrayList<java.lang.String>(); for (org.springframework.security.core.GrantedAuthority a : authorities) { roles.add(a.getAuthority()); } if (roles.contains("ROLE_ADMIN")) { <BUGS> url = "/monitor"; <BUGE> }else { url = "/"; } return url; } 
private void pushPipelineToSnapshot() { int iterationsCnt = 0; boolean done = false; while (!done) { iterationsCnt++; org.apache.hadoop.hbase.regionserver.VersionedSegmentsList segments = pipeline.getVersionedList(); pushToSnapshot(segments.getStoreSegments()); <BUGS> done = pipeline.swap(segments, null, false, false); <BUGE> if (iterationsCnt > 2) { org.apache.hadoop.hbase.regionserver.CompactingMemStore.LOG.warn(("Multiple unsuccessful attempts to push the compaction pipeline to snapshot," + " while flushing to disk.")); this.snapshot = org.apache.hadoop.hbase.regionserver.SegmentFactory.instance().createImmutableSegment(getComparator()); break; } } } 
@org.springframework.web.bind.annotation.RequestMapping(value = "/myGroups") public java.util.Set<com.luxoft.wheretogo.models.json.GroupResponse> myGroups(javax.servlet.http.HttpServletRequest request) { com.luxoft.wheretogo.controller.User user = ((com.luxoft.wheretogo.controller.User) (request.getSession().getAttribute("user"))); <BUGS> <BUGE> user = usersService.initGroups(user); return groupsService.getUserRelevantGroupResponses(user); } 
@java.lang.Override public void invalidateDrawable(android.graphics.drawable.Drawable drawable) { <BUGS> if ((mContainsImages) && ((getText()) instanceof android.text.Spanned)) { android.text.Spanned text = ((android.text.Spanned) (getText())); <BUGE> com.facebook.react.views.text.TextInlineImageSpan[] spans = text.getSpans(0, text.length(), com.facebook.react.views.text.TextInlineImageSpan.class); for (com.facebook.react.views.text.TextInlineImageSpan span : spans) { if ((span.getDrawable()) == drawable) { invalidate(); } } } super.invalidateDrawable(drawable); } 
@java.lang.Override public void run() { try { processCallApiDeleteRace(data.toString()); com.runningracehisotry.utilities.LogUtil.d(Constants.LOG_TAG, ("List race: " + (data.toString()))); } catch (java.lang.Exception e) { e.printStackTrace(); } finally { try { if (mLoadingDialog.isShowing()) { mLoadingDialog.dismiss(); <BUGS> <BUGE> } } catch (java.lang.Exception ex) { } } } 
private void addRightsIfNotSameConcern(java.util.Collection<org.xwiki.contrib.nestedpagesmigrator.Right> rightsToAdd, java.util.Collection<org.xwiki.contrib.nestedpagesmigrator.Right> currentRights) { java.util.Iterator<org.xwiki.contrib.nestedpagesmigrator.Right> it = rightsToAdd.iterator(); while (it.hasNext()) { org.xwiki.contrib.nestedpagesmigrator.Right localRight = it.next(); for (org.xwiki.contrib.nestedpagesmigrator.Right currentRight : currentRights) { if (localRight.hasSameConcern(currentRight)) { it.remove(); <BUGS> <BUGE> } } } currentRights.addAll(rightsToAdd); } 
public void setModel(org.jtrfp.trcl.gpu.Model m) { <BUGS> if (m == null) throw new java.lang.RuntimeException("Passed model cannot be null.");  <BUGE> final org.jtrfp.trcl.core.TRFuture<org.jtrfp.trcl.gpu.Model> thisModelFuture = this.model; <BUGS> <BUGE> if (thisModelFuture != null) releaseCurrentModel();  try { this.model = m.finalizeModel(); } catch (java.lang.Exception e) { throw new java.lang.RuntimeException(e); } } 
@java.lang.Override protected org.eclipse.jgit.lib.Repository obtainRepository() throws org.eclipse.jgit.api.errors.GitAPIException { org.eclipse.jgit.api.CloneCommand cloneCommand = org.eclipse.jgit.api.Git.cloneRepository(); cloneCommand.setURI(this.remoteURL); cloneCommand.setCredentialsProvider(this.ownerAuth); cloneCommand.setDirectory(this.localPath.toFile()); <BUGS> org.eclipse.jgit.api.Git cloneCall = null; cloneCall = cloneCommand.call(); <BUGE> cloneCall.close(); return cloneCall.getRepository(); } 
@org.junit.Test public void simpleHibernateUrl() throws java.lang.Exception { java.lang.String url = "hibernate:classic:com/example/pojo/Hibernate.cfg.xml"; <BUGS> liquibase.database.Database database = liquibase.integration.commandline.CommandLineUtils.createDatabaseObject(this.getClass().getClassLoader(), url, null, null, null, null, null, false, false, null, null, null, null, null); <BUGE> junit.framework.Assert.assertNotNull(database); liquibase.snapshot.DatabaseSnapshot snapshot = liquibase.snapshot.SnapshotGeneratorFactory.getInstance().createSnapshot(CatalogAndSchema.DEFAULT, database, new liquibase.snapshot.SnapshotControl(database)); liquibase.ext.hibernate.database.HibernateClassicDatabaseTest.assertPojoHibernateMapped(snapshot); } 
public static void updateQueue() { while ((theweekend.cosmetics.ipod.Radio.queuedSongs.size()) < 5) { int size = Noteblock.iPodSongs.size(); if (size > 0) { resources.noteblock.Song generate = Noteblock.iPodSongs.get(resources.NumberUtils.randomNumber(size)); <BUGS> if (!(theweekend.cosmetics.ipod.Radio.queuedSongs.contains(generate))); { <BUGE> theweekend.cosmetics.ipod.Radio.queuedSongs.add(generate); } } } theweekend.cosmetics.ipod.Radio.songPosition = 0; theweekend.cosmetics.ipod.Radio.playRadioSong(); } 
public void checkNeededInColumn() { int n; for (int j = 0; j < 9; j++) { for (int i = 1; i < 10; i++) { if (de.halemba.helpers.SolveHelper.checkMissingInColumn(i, j, grid)) { n = de.halemba.helpers.SolveHelper.checkSinglePossiblityColumn(i, j, grid); if (n >= 0) { grid[n][j].setNumber(i); <BUGS> <BUGE> } } } } } 
@java.lang.Override public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) { <BUGS> android.view.View view = inflater.inflate(R.layout.fragment_view_team_info, container, false); <BUGE> com.team2944.luke.scouting.Fragments.ViewTeamInfoFragment.teamNumber = ((android.widget.TextView) (view.findViewById(R.id.view_team_number))); com.team2944.luke.scouting.Fragments.ViewTeamInfoFragment.teamName = ((android.widget.TextView) (view.findViewById(R.id.view_team_name))); com.team2944.luke.scouting.Fragments.ViewTeamInfoFragment.teamLocation = ((android.widget.TextView) (view.findViewById(R.id.view_team_location))); com.team2944.luke.scouting.Fragments.ViewTeamInfoFragment.teamNotes = ((android.widget.TextView) (view.findViewById(R.id.view_team_notes))); return view; } 
public boolean redo() { if (self.canRedo()) { self.getDrawingData().redo(); self.nativeClear(); self.nativeDrawData(); if ((self.getDelegate()) != null) { <BUGS> self.getDelegate().didChangeDrawing(self, self.canUndo(), self.canRedo()); <BUGE> } return true; } return false; } 
public java.lang.Boolean subscribeDoorOpensNextTime(de.fau.cs.mad.fablab.rest.core.PushToken token) { <BUGS> java.lang.System.out.println(("SUBSCRIBING: " + token)); <BUGE> org.hibernate.Query query = super.currentSession().createQuery("FROM PushToken WHERE token = :token AND triggerPushType = :trigger"); query.setParameter("token", token.getToken()); query.setParameter("trigger", token.getTriggerPushType()); if ((query.list().size()) == 0) { token.setTriggerPushType(TriggerPushType.DOOR_OPENS_NEXT_TIME); persist(token); } return true; } 
private static com.google.gson.JsonElement getFile(java.lang.String fileName) { <BUGS> java.io.File file = new java.io.File((((factionmod.FactionMod.getConfigDir()) + "/") + fileName)); <BUGE> if (file.exists()) { try { return new com.google.gson.JsonParser().parse(new java.io.FileReader(file)); } catch (java.lang.Exception e) { factionmod.FactionMod.getLogger().error(("Error on loading file " + fileName)); e.printStackTrace(); } } return null; } 
@org.junit.Test public void crc32_() { org.mapdb.DB db = maker().make(); db.hashMap("aa").put("aa", "bb"); db.commit(); <BUGS> assertEquals(0L, getBitField()); <BUGE> db.close(); try { maker().checksumEnable().make(); fail(); } catch (org.mapdb.DBException e) { e.printStackTrace(); assertEquals("Checksum us enabled, but store was created without it.", e.getMessage()); } } 
private void fillLocalToolBar(org.eclipse.jface.action.IToolBarManager manager) { manager.add(boldTextAction); manager.add(italicTextAction); manager.add(underlineTextAction); manager.add(clearTextAction); manager.add(new org.eclipse.jface.action.Separator()); manager.add(addNewNoteAction); manager.add(clearNoteAction); <BUGS> manager.add(saveNoteAction); <BUGE> } 
@java.lang.Override @org.springframework.transaction.annotation.Transactional(readOnly = true) public com.hypersocket.vfs.VirtualFile getVirtualFileByResource(java.lang.String virtualPath, com.hypersocket.realm.Realm realm, com.hypersocket.realm.Principal principal, com.hypersocket.fs.FileResource... resources) { <BUGS> <BUGE> return get(com.hypersocket.vfs.VirtualFile.class, new com.hypersocket.vfs.VirtualPathCriteria(virtualPath), new com.hypersocket.resource.RealmCriteria(realm), new com.hypersocket.vfs.FileResourceCriteria(resources), new com.hypersocket.vfs.PrincipalCriteria(principal), new com.hypersocket.vfs.ConflictCriteria()); } 
public java.util.ArrayList<controller.ControllerCarro> getCarros() { java.util.ArrayList<controller.ControllerCarro> aux = new java.util.ArrayList<>(); for (int i = 0; i < (this.counter); i++) { <BUGS> if (aux != null) { aux.add(this.carros.get(i)); } <BUGE> } return aux; } 
public java.lang.String getStringTodoList() { java.lang.String result = "\nItems to do: \n"; <BUGS> int index = 0; <BUGE> for (TodoItem item : this.itemList) { result += java.lang.String.format("%d. ", index); if (item.getIsDone()) { result += "[x] "; } result += java.lang.String.format("%s%n", item.getName()); index++; } return result; } 
public void deleteCardList(com.ske.minitrello.models.CardList cardList) { dbHandler.deleteCardList(cardList.getName()); <BUGS> for (com.ske.minitrello.models.Card card : cardList.getCards()) { deleteCard(card); } <BUGE> cardLists.remove(cardList); cardListMap.remove(cardList); } 
public void addColorTo(metro.TrainManagement.Nodes.RailwayNode node, java.awt.Color color) { if (!(_mapOfColors.containsKey(node))) _mapOfColors.put(node, new java.util.ArrayList<java.awt.Color>());  <BUGS> _mapOfColors.get(node).add(color); <BUGE> } 
public void onClick(android.view.View v) { <BUGS> <BUGE> bSave.setVisibility(View.INVISIBLE); mode = MODE_RECEIVE_CONFIG; Protocol.mode = Protocol.ESP8266_CONFIG; com.example.mydhcp.settingsActivity._BC_ACTION = new byte[2]; com.example.mydhcp.settingsActivity._BC_ACTION[0] = Protocol.READ_DAY_CONFIGS; com.example.mydhcp.settingsActivity._BC_ACTION[1] = ((byte) (1)); pb.setVisibility(View.VISIBLE); sDayType = "Рабочий день"; wifiRequestData(MainDHCPActivity.curIPbytes); } 
public void letAImove() { int pushMousePointingColumn = mousePointingcolumn; boolean preEndGame = gameController.isFinish(); if ((mousePointingcolumn = gameController.getAITurn()) < 0) { mousePointingcolumn = pushMousePointingColumn; return ; } if ((!preEndGame) && (!(fallingAnimationMutex))) { FallingAnimation(); <BUGS> <BUGE> } } 
@org.springframework.web.bind.annotation.RequestMapping(path = "/catalogue", method = org.springframework.web.bind.annotation.RequestMethod.GET) public org.springframework.web.servlet.ModelAndView printCatalogue() { <BUGS> <BUGE> com.springapp.dao.ProductCatalogueDao productCatalogueDao = new com.springapp.dao.ProductCatalogueDaoImp(); java.util.List<com.springapp.model.Product> list = productCatalogueDao.getAllProducts(); com.springapp.model.ProductCatalogue.getProductCatalogue().addListOfProducts(list); <BUGS> com.springapp.model.ProductCatalogue.getProductCatalogue().removeAllProducts(); <BUGE> org.springframework.web.servlet.ModelAndView model = new org.springframework.web.servlet.ModelAndView("show_all"); model.addObject("products", com.springapp.model.ProductCatalogue.getProductCatalogue().getProducts()); return model; } 
public int getInt(int min, int max) { java.lang.System.out.println("Enter a number: "); int userInput = scanner.nextInt(); scanner.nextLine(); if ((userInput < min) || (userInput > max)) { <BUGS> <BUGE> userInput = getInt(min, max); <BUGS> }else { java.lang.System.out.println("Invalid input"); <BUGE> } return userInput; } 
public void onBrowserEvent(org.ovirt.engine.ui.common.widget.table.cell.Context context, com.google.gwt.dom.client.Element parent, C value, java.lang.String tooltipContent, com.google.gwt.dom.client.NativeEvent event, com.google.gwt.cell.client.ValueUpdater<C> valueUpdater) { java.lang.String tooltip; if (tooltipContent == null) { tooltip = getTooltip(value); }else { tooltip = tooltipContent; } if (BrowserEvents.MOUSEOVER.equals(event.getType())) { org.ovirt.engine.ui.common.widget.tooltip.ElementTooltipUtils.setTooltipOnElement(tooltip, parent); <BUGS> <BUGE> } } 
@android.support.annotation.Nullable public static java.util.HashMap<java.lang.String, java.lang.String> getAttributes(android.media.ExifInterface exif) { <BUGS> java.util.HashMap<java.lang.String, java.lang.String> exifAttributes = null; <BUGE> try { java.lang.reflect.Field f = android.media.ExifInterface.class.getDeclaredField("mAttributes"); f.setAccessible(true); <BUGS> exifAttributes = ((java.util.HashMap<java.lang.String, java.lang.String>) (f.get(exif))); <BUGE> } catch (java.lang.Exception ex) { } <BUGS> return (exifAttributes.size()) > 0 ? exifAttributes : null; <BUGE> } 
<BUGS> private java.util.List<edu.cmu.tetrad.search.IntSextad> sextadList(edu.cmu.tetrad.search.IntSextad t1, edu.cmu.tetrad.search.IntSextad t2, edu.cmu.tetrad.search.IntSextad t3, edu.cmu.tetrad.search.IntSextad t5, edu.cmu.tetrad.search.IntSextad t6) { <BUGE> java.util.List<edu.cmu.tetrad.search.IntSextad> list = new java.util.ArrayList<>(); <BUGS> list.add(t1); list.add(t2); list.add(t3); list.add(t5); list.add(t6); <BUGE> return list; } 
private void unbindConnection() { MyApplication.madcapLogger.d(TAG, ("Attempt to unbind self. Current bound status is " + (mBound))); <BUGS> <BUGE> mDataCollectionService.setUploadStatusGuiListener(null); getActivity().getApplicationContext().unbindService(mConnection); android.util.Log.d(TAG, "removed UploadListener"); mBound = false; <BUGS> cacheCountUpdater.cancel(true); <BUGE> } 
public static void main(java.lang.String[] args) { java.util.Scanner sc = new java.util.Scanner(java.lang.System.in); float sum = 0.0F; for (int i = 0; i < (q1004.Main.INPUT_COUNT); i++) { <BUGS> java.lang.Float f = sc.nextFloat(); <BUGE> if (f <= 0) { continue; } sum += f; } sum /= q1004.Main.INPUT_COUNT; java.lang.System.out.println(("$" + (q1004.Main.shortenNumber(sum)))); } 
private static void jj_la1_init_1() { <BUGS> sqlParser.SqlParser.jj_la1_1 = new int[]{ 63242240 , 63242240 , 0 , 0 , 0 , 1048576 , 2 , 0 , 16386 , 16386 , 0 , 50593792 , 1048576 , 8192 , 0 , 8192 , 0 , 1048576 , 0 , 16386 , 16386 , 0 , 12582912 , 536870912 , 0 , 0 , 0 , 2097152 , 402653184 , 0 , 67239936 }; <BUGE> } 
private static void deleteEstate() { int id = de.dis2011.FormUtil.readInt("ID der Immobilie"); de.dis2011.data.Estate estate = de.dis2011.data.Estate.load(id); if (estate == null) { java.lang.System.out.println((("Immobilie mit ID " + id) + " existiert nicht.")); return ; } <BUGS> estate.delete(); <BUGE> java.lang.System.out.println((("Immobilie mit ID " + id) + " wurde gelöscht.")); } 
@java.lang.Override public com.ullink.slack.simpleslackapi.SlackMessageHandle<com.ullink.slack.simpleslackapi.replies.SlackChannelReply> inviteToChannel(com.ullink.slack.simpleslackapi.SlackChannel channel, com.ullink.slack.simpleslackapi.SlackUser user) { <BUGS> com.ullink.slack.simpleslackapi.impl.SlackMessageHandleImpl handle = new com.ullink.slack.simpleslackapi.impl.SlackMessageHandleImpl(getNextMessageId()); <BUGE> java.util.Map<java.lang.String, java.lang.String> arguments = new java.util.HashMap<>(); arguments.put("token", authToken); arguments.put("channel", channel.getId()); arguments.put("user", user.getId()); postSlackCommand(arguments, com.ullink.slack.simpleslackapi.impl.SlackWebSocketSessionImpl.CHANNELS_INVITE_COMMAND, handle); return handle; } 
@java.lang.Override public void onCraftMatrixChanged(com.alxnns1.mobhunter.container.IInventory inventoryIn) { reloadRecipes(); java.lang.String log = "Recipes:\n"; for (int i = 0; i < (recipes.size()); i++) { if (recipesValid.get(i)) log += "Y - "; else log += "N - ";  log += recipes.get(i).toString(); } <BUGS> com.alxnns1.mobhunter.util.LogHelper.info(log); <BUGE> detectAndSendChanges(); } 
public java.lang.String toVCFAnnoString(java.lang.String alt, boolean escape) { de.charite.compbio.jannovar.annotation.VCFAnnotationData data = new de.charite.compbio.jannovar.annotation.VCFAnnotationData(); data.effects = effects; data.impact = getPutativeImpact(); data.setTranscriptAndChange(transcript, change); data.setAnnoLoc(annoLoc); <BUGS> data.isCoding = transcript.isCoding(); <BUGE> data.cdsNTChange = cdsNTChange; data.proteinChange = proteinChange; data.messages = messages; if (escape) return data.toString(alt); else return data.toUnescapedString(alt);  } 
<BUGS> private void setToolbarColor(android.support.v7.graphics.Palette palette) { <BUGE> int defaultDarkColor = android.support.v4.content.ContextCompat.getColor(getApplicationContext(), R.color.colorPrimaryDark); if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { android.view.Window window = getWindow(); window.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS); window.setStatusBarColor(palette.getDarkVibrantColor(defaultDarkColor)); } } 
private void loadDataFromFile() { <BUGS> try (java.io.FileReader fr = new java.io.FileReader(new java.io.File("cities.txt"))) { <BUGE> java.io.BufferedReader br = new java.io.BufferedReader(fr); for (int i = 0; i < (RandomCities.NUMBER_OF_CITIES); i++) { cityList.add(br.readLine()); } java.util.Collections.shuffle(cityList); } catch (java.lang.Exception e) { e.printStackTrace(); } } 
public won.protocol.model.MatchingBehaviorType getMatchingBehaviorTypeForMatchedNeed(org.apache.solr.common.SolrDocument doc) { won.protocol.model.MatchingBehaviorType matchedNeedMatchingBehavior = won.protocol.model.MatchingBehaviorType.MUTUAL; java.lang.Object matchingBehaviorFieldValue = doc.getFieldValue(won.matcher.solr.hints.HintBuilder.MATCHING_BEHAVIOR_SOLR_FIELD); <BUGS> if (matchingBehaviorFieldValue == null) { <BUGE> matchedNeedMatchingBehavior = won.protocol.model.MatchingBehaviorType.fromURI(matchingBehaviorFieldValue.toString()); if (matchedNeedMatchingBehavior == null) { matchedNeedMatchingBehavior = won.protocol.model.MatchingBehaviorType.MUTUAL; } } return matchedNeedMatchingBehavior; } 
@by.itechart.flowerty.web.controller.ResponseBody @by.itechart.flowerty.web.controller.RequestMapping(value = "user/list/{page}") public org.springframework.data.domain.Page<by.itechart.flowerty.model.User> getPage(@by.itechart.flowerty.web.controller.PathVariable(value = "page") java.lang.Integer page) throws java.lang.Exception { by.itechart.flowerty.web.controller.UserController.LOGGER.info("get page with number {}", page); page = ((page == null) || (page < 1)) ? 0 : --page; <BUGS> org.springframework.data.domain.Page<by.itechart.flowerty.model.User> pageUsers = userService.getPage(page, 10); <BUGE> by.itechart.flowerty.web.controller.UserController.LOGGER.info("fetch {} users", pageUsers.getTotalElements()); return pageUsers; } 
<BUGS> public void write(java.lang.String out) { try { java.lang.String[] tmp = out.split("\\."); java.lang.String format = tmp[((tmp.length) - 1)]; javax.imageio.ImageIO.write(image, format, new java.io.File(out)); } catch (java.lang.Exception e) { javax.swing.JOptionPane.showMessageDialog(null, "Unknown error ocurred while writing to file!", "Write error", javax.swing.JOptionPane.ERROR_MESSAGE); } <BUGE> } 
private void decodeFrames(io.netty.buffer.ByteBuf in, java.util.List<java.lang.Object> out) throws java.lang.Exception { if ((in.readableBytes()) >= (com.mpush.api.protocol.Packet.HEADER_LEN)) { in.markReaderIndex(); com.mpush.api.protocol.Packet packet = decodeFrame(in); <BUGS> if (packet == null) { <BUGE> in.resetReaderIndex(); } <BUGS> out.add(packet); <BUGE> } } 
@org.junit.Test public void testCustomWalltime() throws java.lang.Exception { final org.genepattern.server.config.GpServerProperties serverProperties = new org.genepattern.server.config.GpServerProperties.Builder().addCustomProperty(JobRunner.PROP_WALLTIME, "7-00:00:00").build(); final org.genepattern.server.config.GpConfig gpConfig = new org.genepattern.server.config.GpConfig.Builder().serverProperties(serverProperties).build(); org.genepattern.drm.DrmJobSubmission drmJobSubmission = new org.genepattern.drm.DrmJobSubmission.Builder(workingDir).jobContext(jobContext).gpConfig(gpConfig).build(); <BUGS> org.junit.Assert.assertEquals("set walltime in config", org.genepattern.drm.Walltime.fromString("7-00:00:00"), drmJobSubmission.getWalltime()); <BUGE> } 
public int roll() { if ((rollsSinceLastReseed) >= 100000) { com.valkryst.VDice.DiceRoller.random.setSeed(java.lang.System.currentTimeMillis()); <BUGS> <BUGE> } int total = 0; for (final com.valkryst.VDice.Die die : dice) { total += die.roll(com.valkryst.VDice.DiceRoller.random); (rollsSinceLastReseed)++; } return total; } 
public void addCell(org.apache.cassandra.config.ColumnDefinition column, java.nio.ByteBuffer value, org.apache.cassandra.db.rows.LivenessInfo info) { <BUGS> int idx = (base) + (columns.simpleIdx(column)); <BUGE> if (idx < 0) throw new java.lang.RuntimeException(((("Cannot find column " + (column.name)) + " in ") + (columns)));  <BUGS> <BUGE> data.setCell(idx, value, info); } 
@org.springframework.web.bind.annotation.RequestMapping(value = "/", method = org.springframework.web.bind.annotation.RequestMethod.GET) public java.lang.String showCityResources(@org.springframework.web.bind.annotation.RequestParam java.util.Map<java.lang.String, java.lang.String> allRequestParams, org.springframework.ui.Model model) { org.exschool.pocketworld.controllers.city.resources.CityResourcesController.LOGGER.info(("Requested params:" + allRequestParams)); <BUGS> <BUGE> org.exschool.pocketworld.city.resources.dto.CityResourcesDto cityResourcesDto = cityResourcesService.cityResourcesInfo(org.exschool.pocketworld.controllers.city.resources.CityResourcesController.PLAYER_NAME); model.addAttribute("dto", cityResourcesDto); org.exschool.pocketworld.controllers.city.resources.CityResourcesController.LOGGER.info(("Out:" + model)); <BUGS> commonCityService.buildQueuedBuildings(org.exschool.pocketworld.controllers.city.resources.CityResourcesController.PLAYER_NAME); <BUGE> return "city_resources"; } 
public java.util.List<pl.sda.hello.names.Name> loadFromFile() { java.util.concurrent.atomic.AtomicLong atomicLong = new java.util.concurrent.atomic.AtomicLong(0); <BUGS> return nameList.stream().map(( s) -> new pl.sda.hello.names.Name(atomicLong.getAndIncrement(), s)).collect(java.util.stream.Collectors.toList()); <BUGE> } 
private void setKeyAction() { android.os.Bundle args = getArguments(); java.lang.String key = ((java.lang.String) (args.keySet().toArray()[0])); switch (key) { case "meetings_show_day_key" : showDay = true; date = ((java.lang.String) (args.get(key))); break; case "meetings_show_all_key" : showAll = true; break; case "meetings_show_empty_key" : isEmptyView = true; <BUGS> <BUGE> default : isEmptyView = true; } } 
@javafx.fxml.FXML void clearTabs() { javafx.scene.control.Tab[] temp = new javafx.scene.control.Tab[_tabpane.getTabs().size()]; temp = _tabpane.getTabs().toArray(temp); for (javafx.scene.control.Tab t : temp) { <BUGS> if (!(t.getText().equals("Home"))) <BUGE> _tabpane.getTabs().remove(t);  } } 
public void setStatus(double speed) { if (speed > 1.4) { this.status = 2; textStatus.setText("跑步"); }else if (speed < 1.0E-6) { this.status = 0; textStatus.setText("静止"); }else { this.status = 1; textStatus.setText("步行"); }  <BUGS> return ; <BUGE> } 
@java.lang.Override public boolean onNavigationItemSelected(@android.support.annotation.NonNull android.view.MenuItem item) { <BUGS> android.widget.Toast.makeText(this, ((getResources().getResourceEntryName(item.getItemId())) + ""), Toast.LENGTH_LONG).show(); <BUGE> switch (item.getItemId()) { case R.id.home : onBackPressed(); return true; case R.id.action_help : startInstruction(); return true; case R.id.action_replay : speakTextInstruction(currentTest); return true; } return false; } 
@java.lang.Override public void onRequest() { org.apache.wicket.request.cycle.RequestCycle requestCycle = org.apache.wicket.request.cycle.RequestCycle.get(); com.google.gson.JsonObject jsonObject = new com.google.gson.JsonObject(); final com.google.gson.Gson gson = new com.google.gson.GsonBuilder().create(); final java.lang.String fieldJson = this.getModelAsJson(); <BUGS> requestCycle.scheduleRequestHandlerAfterCurrent(new org.apache.wicket.request.handler.TextRequestHandler("application/json", "UTF-8", "")); <BUGE> } 
public void setSong(info.dourok.android.lyrics.SongWrapper song) { this.mSong = song; <BUGS> this.mLyrics = mSong.getLyrics(); this.mLyricsItems = mLyrics.getLyricsItems(); <BUGE> if ((song.getLyrics()) != null) { <BUGS> <BUGE> updateLyrics(); } } 
@java.lang.Override <BUGS> protected void convertInput() { <BUGE> java.lang.String input = com.vaynberg.wicket.select2.Select2MultiChoice.getWebRequest().getRequestParameters().getParameterValue(com.vaynberg.wicket.select2.Select2MultiChoice.getInputName()).toString(); final java.util.Collection<T> choices; if (org.apache.wicket.util.string.Strings.isEmpty(input)) { choices = new java.util.ArrayList<T>(); }else { java.util.List<java.lang.String> ids = com.vaynberg.wicket.select2.Select2MultiChoice.splitInput(input); choices = com.vaynberg.wicket.select2.Select2MultiChoice.getProvider().toChoices(ids); } com.vaynberg.wicket.select2.Select2MultiChoice.setConvertedInput(choices); } 
public void setFragmentVisualizzaPrenotazioni() { fragmentManager = getFragmentManager(); fragmentTransaction = fragmentManager.beginTransaction(); <BUGS> com.project.is.sportlink.ui.VisualizzaPrenotazioniFragment visualizzaPrenotazioniFragment = new com.project.is.sportlink.ui.VisualizzaPrenotazioniFragment(); <BUGE> fragmentTransaction.replace(R.id.fragment_container, visualizzaPrenotazioniFragment); fragmentTransaction.addToBackStack(null); android.support.v4.widget.DrawerLayout drawer = ((android.support.v4.widget.DrawerLayout) (findViewById(R.id.drawer_layout))); if (drawer.isDrawerOpen(GravityCompat.START)) { drawer.closeDrawer(GravityCompat.START); } fragmentTransaction.commit(); } 
public static java.lang.String post(java.lang.String url, java.lang.String parameters, java.util.Map<java.lang.String, java.lang.String> customeHeaders, java.lang.String charset) throws java.io.IOException { try { okhttp3.Response response = so.asch.sdk.impl.RESTOkHttp.rawPost(url, parameters, customeHeaders, charset); return so.asch.sdk.impl.RESTOkHttp.getResponseContent(response); } catch (java.io.IOException ex) { java.lang.String errorInfo = java.lang.String.format("Exception when post,url:%s,data:%s", url, parameters); <BUGS> ex.printStackTrace(); <BUGE> throw ex; } } 
<BUGS> public com.smartstudy.zhike.mylibrary.widget.BannerView setPages(com.smartstudy.zhike.mylibrary.widget.ViewHolderCreator holderCreator, java.util.List<T> datas) { <BUGE> this.mDatas = datas; <BUGS> this.holderCreator = holderCreator; pageAdapter = new com.smartstudy.zhike.mylibrary.widget.BasePageAdapter(holderCreator, mDatas); <BUGE> viewPager.setAdapter(pageAdapter); viewPager.setBoundaryCaching(true); if ((page_indicatorId) != null) setPageIndicator(page_indicatorId);  return this; } 
public io.cattle.platform.servicediscovery.deployment.DeploymentUnitInstance start() { if (this.isStarted()) { return this; } <BUGS> if ((((instance) != null) && (this.isRestartAlways())) && (InstanceConstants.STATE_STOPPED.equals(instance.getState()))) { <BUGE> context.activityService.instance(instance, "start", "Starting stopped instance", ActivityLog.INFO); context.objectProcessManager.scheduleProcessInstanceAsync(InstanceConstants.PROCESS_START, instance, null); } return this; } 
@java.lang.Override public void render(float delta) { if (Gdx.input.justTouched()) { <BUGS> game.setScreen(new com.mygdx.magicappgame.States.PlayScreen(((com.mygdx.magicappgame.MyGdxGame) (game)))); <BUGE> dispose(); } Gdx.gl.glClearColor(0, 0, 0, 1); Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT); stage.draw(); } 
@java.lang.Override public java.lang.String toString() { <BUGS> return ((((((((((((((("Employee{" + "idemployee=") + (idemployee)) + ", firstName='") + (firstName)) + '\'') + ", lastName='") + (lastName)) + '\'') + ", role=") + (role)) + ", password='") + (password)) + '\'') + ", cars=") + (cars)) + '}'; <BUGE> } 
@java.lang.Override public boolean onCreateActionMode(com.actionbarsherlock.view.ActionMode mode, com.actionbarsherlock.view.Menu menu) { mode.setTitle(R.string.menu_restriction); super.onCreateActionMode(mode, menu); logic.addSelectedRelationWay(toWay); de.blau.android.osm.Relation restriction = logic.createRestriction(fromWay, viaElement, toWay, ((fromWay) == (toWay) ? de.blau.android.easyedit.EasyEditManager.RestrictionToElementActionModeCallback.NO_U_TURN_VALUE : null)); android.util.Log.i("EasyEdit", "Created restriction"); <BUGS> main.performTagEdit(restriction, de.blau.android.easyedit.EasyEditManager.RestrictionToElementActionModeCallback.RESTRICTION_TAG, false); <BUGE> main.startActionMode(new de.blau.android.easyedit.EasyEditManager.RelationSelectionActionModeCallback(restriction)); return false; } 
@java.lang.Override public void onViewCreated(android.view.View view, android.os.Bundle savedInstanceState) { super.onViewCreated(view, savedInstanceState); adapter = new com.vezikon.popularmovies.views.adapters.MoviesAdapter(getActivity(), moviesList); mGridView.setAdapter(adapter); mGridView.setOnItemClickListener(this); <BUGS> if (com.vezikon.popularmovies.Utils.isNetworkAvailable(getActivity())) { showProgress(true); getMovies(com.vezikon.popularmovies.fragments.MoviesFragment.TYPE_MOST_POPULAR); }else { android.widget.Toast.makeText(getActivity(), getString(R.string.error_msg_no_connection), Toast.LENGTH_LONG).show(); <BUGE> } } 
@java.lang.Override public void deleteCorsRules(@javax.annotation.Nonnull java.lang.String bucketUuid) throws com.eucalyptus.objectstorage.exceptions.ObjectStorageException { try (final com.eucalyptus.entities.TransactionResource tran = com.eucalyptus.entities.Entities.transactionFor(com.eucalyptus.objectstorage.entities.CorsRule.class)) { com.eucalyptus.objectstorage.BucketCorsManagers.getInstance().deleteCorsRules(bucketUuid, tran); tran.commit(); } catch (java.lang.Exception ex) { <BUGS> com.eucalyptus.objectstorage.metadata.DbBucketCorsManagerImpl.LOG.error(((("Exception caught while deleting CORS rules for bucket " + bucketUuid) + ": ") + (ex.getMessage()))); <BUGE> throw new com.eucalyptus.objectstorage.exceptions.ObjectStorageException("InternalServerError", ("Exception caught while deleting CORS rules for bucket " + bucketUuid), "Bucket", bucketUuid, org.jboss.netty.handler.codec.http.HttpResponseStatus.INTERNAL_SERVER_ERROR); } } 
private void Price() { java.lang.String priceWithCurrency = source.getElementsByClass("price-label").text().replaceAll("\\D+", ""); if ((priceWithCurrency.length()) == 0) { adBuilder.price(null); <BUGS> <BUGE> } <BUGS> adBuilder.price(java.lang.Integer.parseInt(priceWithCurrency)); <BUGE> } 
public java.util.HashSet<dictionary.APIType> getTypesbyMethod(java.lang.String name) { java.util.HashSet<dictionary.APIType> types = new java.util.HashSet<dictionary.APIType>(); java.util.HashSet<dictionary.APIMethod> methods = this.getMethodsByName(name); <BUGS> for (dictionary.APIMethod method : methods) types.add(method.getType());  return types; <BUGE> } 
<BUGS> private static org.glassfish.jersey.internal.util.ReflectionHelper.DeclaringClassInterfacePair getType(java.lang.Class<?> concrete, java.lang.Class<?> iface, java.lang.Class<?> c, java.lang.reflect.Type[] ts) { for (java.lang.reflect.Type t : ts) { org.glassfish.jersey.internal.util.ReflectionHelper.DeclaringClassInterfacePair p = org.glassfish.jersey.internal.util.ReflectionHelper.getType(concrete, iface, c, t); <BUGE> if (p != null) { return p; } } return null; } 
public boolean onBlockDestroyed(net.minecraft.item.ItemStack stack, net.minecraft.world.World worldIn, net.minecraft.block.state.IBlockState blockIn, net.minecraft.util.math.BlockPos pos, net.minecraft.entity.EntityLivingBase entityLiving) { <BUGS> if (((double) (blockIn.getBlockHardness(worldIn, pos))) != 0.0) { <BUGE> stack.damageItem(1, entityLiving); } return true; } 
public static java.lang.String getRating(java.lang.String login, int fid) throws java.lang.Exception { java.util.ArrayList<java.lang.String[]> ret = DatabaseInterface.SQLExecutor.executeQuery((((("SELECT rating FROM acmdb05.Rates WHERE login='" + login) + "' AND fid=") + fid) + ";")); <BUGS> return ret.get(1)[0]; <BUGE> } 
@org.springframework.web.bind.annotation.RequestMapping(value = "/", method = org.springframework.web.bind.annotation.RequestMethod.GET) public java.lang.String home(java.util.Locale locale, org.springframework.ui.Model model) { <BUGS> com.sd.happy.controllers.HappyController.logger.info("Welcome home! The client locale is {}.", locale); <BUGE> java.util.Date date = new java.util.Date(); java.text.DateFormat dateFormat = java.text.DateFormat.getDateTimeInstance(java.text.DateFormat.LONG, java.text.DateFormat.LONG, locale); java.lang.String formattedDate = dateFormat.format(date); model.addAttribute("serverTime", formattedDate); return "index"; } 
protected int skipWSC() throws java.io.IOException, org.openrdf.rio.RDFHandlerException { int c = readCodePoint(); while ((org.openrdf.rio.turtle.TurtleUtil.isWhitespace(c)) || (c == '#')) { if (c == '#') { processComment(); }else if (c == '\n') { (lineNumber)++; }  <BUGS> <BUGE> } unread(c); return c; } 
@org.springframework.web.bind.annotation.RequestMapping(value = "/impcImages/laczimages/{acc}/{topLevelMa}") public java.lang.String laczImages(@org.springframework.web.bind.annotation.PathVariable java.lang.String acc, @org.springframework.web.bind.annotation.PathVariable java.lang.String topLevelMa, org.springframework.ui.Model model) throws java.io.IOException, java.net.URISyntaxException, org.apache.solr.client.solrj.SolrServerException { java.lang.System.out.println("calling laczImages web page"); addGeneSymbolToPage(acc, model); boolean overview = false; <BUGS> imageService.getLacDataForGene(acc, topLevelMa, overview, model); <BUGE> return "laczImages"; } 
@java.lang.Override public void mouseDragged(java.awt.event.MouseEvent e) { if (((e.getX()) >= 0) && ((e.getX()) <= (this.getWidth()))) { if (knob1Picked) { <BUGS> moveKnob1(e.getX()); <BUGE> return ; } if (knob2Picked) { moveKnob2(e.getX()); } } } 
@java.lang.Override public java.sql.Connection getConnection() throws java.sql.SQLException { State.State state = validatePoolState(isAllowConnectionAfterTermination()); if (state == (WORKING)) { try { return getPooledConnection(getConnectionTimeoutInMs()); } catch (java.sql.SQLException e) { <BUGS> if ((!(e.getSQLState().equals(org.vibur.dbcp.SQLSTATE_POOL_CLOSED_ERROR))) || (!(isAllowConnectionAfterTermination()))) <BUGE> throw e;  } } assert (getState()) == (TERMINATED); org.vibur.dbcp.ViburDBCPDataSource.logger.info("Calling getConnection() after the pool was closed; will create and return a non-pooled Connection."); return getNonPooledConnection(); } 
public void run() { int[] selectedRows = tablePositions.getSelectedRows(); if ((selectedRows.length) > 0) { getPositionsModel().up(selectedRows, 1); <BUGS> selectPositions(slash.navigation.gui.events.Range.increment(selectedRows, (-1))); <BUGE> } } 
@java.lang.Override public boolean hasWon() { sixesWildEntity.Board board = sixesWildEntity.Board.newInstance(); if ((board.currentScore) >= (highestScore)) { highestScore = board.currentScore; } if ((highestScore) >= (threeStarScore)) { starNumber = 3; }else if ((highestScore) >= (twoStarScore)) { starNumber = 2; }else if ((highestScore) >= (oneStarScore)) { <BUGS> java.lang.System.out.println("Light 1"); <BUGE> starNumber = 1; }   return (board.currentScore) >= (oneStarScore); } 
@java.lang.Override public void loadProducts(java.util.List<com.ariondan.vendor.model.ProductModel> productModels) { layoutCart.setVisibility(View.GONE); this.productModels.clear(); cartModels.clear(); populatePopup(productModels); for (com.ariondan.vendor.model.ProductModel product : productModels) { this.productModels.add(product); <BUGS> if ((gridProducts.getAdapter()) != null) { gridProducts.getAdapter().notifyDataSetChanged(); } <BUGE> } } 
private void processTransactionDetails(com.example.danie.schoolcashless.Transaction transaction, org.json.JSONObject json) throws org.json.JSONException { java.lang.Number completed = ((java.lang.Number) (json.get("completed"))); transaction.setUnixTime(completed.intValue()); org.json.JSONObject with = ((org.json.JSONObject) (json.get("with"))); <BUGS> java.lang.String name = ((java.lang.String) (with.get("name"))); <BUGE> transaction.setWith(name); } 
public indexingTopology.util.BTreeNode insertKeyValue(TKey key, TValue value) throws indexingTopology.exception.UnsupportedGenericException { <BUGS> indexingTopology.util.BTreeNode node = this; <BUGE> keys.add(key); values.add(new java.util.ArrayList<TValue>(java.util.Arrays.asList(value))); ++(keyCount); if (indexingTopology.util.BTreeLeafNode.isOverflow()) { node = indexingTopology.util.BTreeLeafNode.dealOverflow(); } return node; } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); getWindow().addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON); setContentView(R.layout.activity_allmachine); android.util.Log.e(TAG, "RawMaterial_onCreate"); initDisplay(); initTitleLayout(); initCellTitle(); initRecycleView(); initBottomView(); com.android.tedcoder.material.AllMachineActivity.requestHandler = new com.android.tedcoder.material.AllMachineActivity.RequestHandler(); com.android.tedcoder.material.AllMachineActivity.requestHandler.sendEmptyMessage(com.android.tedcoder.material.AllMachineActivity.SENDFLAG); <BUGS> com.android.tedcoder.material.AllMachineActivity.requestHandler.sendEmptyMessage(com.android.tedcoder.material.AllMachineActivity.SCROLLTIME); <BUGE> } 
@java.lang.Override public java.lang.String decorMatrix(int[][] matrix) { java.lang.StringBuilder array = new java.lang.StringBuilder(""); for (int i = 0; i <= ((matrix.length) - 1); i++) { <BUGS> array.append(((this.arrayToString(matrix[i])) + (java.lang.System.lineSeparator()))); <BUGE> } return java.lang.String.format(primitivesMatrixTemplate, array); } 
@org.junit.Test public void theUserReceiveAGoodQualificationThenYourPointsIncreaseAt500() { <BUGS> unq.tpi.desapp.grupof.model.GoodQualification goodQualification = org.mockito.Mockito.mock(unq.tpi.desapp.grupof.model.GoodQualification.class); org.mockito.Mockito.when(goodQualification.getPoints()).thenReturn(500); <BUGE> unq.tpi.desapp.grupof.model.User anUser = new unq.tpi.desapp.grupof.model.builder.UserDriverBuilder().build(); anUser.receiveAGoodQualification(goodQualification); org.junit.Assert.assertEquals(600, anUser.getScore()); } 
@java.lang.Override public void onClick(android.view.View v) { java.lang.String link = downloadFile.getText().toString(); intent = new android.content.Intent(ctx, com.dirtyunicorns.duupdater2.services.DownloadService.class); intent.putExtra("url", link); intent.putExtra("fileName", fileName.getText()); <BUGS> java.lang.Thread startService = new java.lang.Thread(new java.lang.Runnable() { @java.lang.Override public void run() { ctx.startService(intent); } }); startService.start(); <BUGE> } 
@java.lang.Override public void setParameter(int i, double p) { if ((this.stateWeights) != null) { if (i < (this.stateWeights.length)) { this.stateWeights[i] = p; <BUGS> <BUGE> } }else if ((this.stateActionWeights) != null) { if (i < (this.stateActionWeights.length)) { this.stateActionWeights[i] = p; <BUGS> <BUGE> } }  throw new java.lang.RuntimeException("Parameter index out of bounds; parameter cannot be set."); } 
private void inputDetection() { if (Gdx.input.isKeyPressed(Keys.SPACE)) { gameController.jumpRetroMan(); } if (Gdx.input.isKeyPressed(Keys.RIGHT)) { gameController.goRightRetroMan(); <BUGS> java.lang.System.out.println((((camera.position.x) + " ") + (camera.position.y))); <BUGE> }else if (Gdx.input.isKeyPressed(Keys.LEFT)) { gameController.goLeftRetroMan(); }  } 
public java.net.URLClassLoader createClassLoader() { boolean useBoot14Layout = false; <BUGS> for (org.springframework.boot.loader.archive.Archive.Entry entry : archive.getEntries()) { <BUGE> if (entry.getName().startsWith(org.springframework.cloud.dataflow.configuration.metadata.BootClassLoaderFactory.BOOT_14_LIBS_LOCATION)) { useBoot14Layout = true; break; } } org.springframework.cloud.dataflow.configuration.metadata.BootClassLoaderFactory.ClassLoaderExposingLauncher launcher = (useBoot14Layout) ? new org.springframework.cloud.dataflow.configuration.metadata.BootClassLoaderFactory.Boot14ClassLoaderExposingLauncher() : new org.springframework.cloud.dataflow.configuration.metadata.BootClassLoaderFactory.Boot13ClassLoaderExposingLauncher(); return launcher.createClassLoader(); } 
public org.exoplatform.portal.gadget.core.GadgetToken removeToken(org.apache.shindig.gadgets.oauth.BasicOAuthStoreTokenIndex tokenKey) { java.util.Map<java.lang.String, org.exoplatform.portal.gadget.core.GadgetTokenEntry> tokens = getGadgetTokens(); for (org.exoplatform.portal.gadget.core.GadgetTokenEntry tokenEntry : tokens.values()) { org.apache.shindig.gadgets.oauth.BasicOAuthStoreTokenIndex key = tokenEntry.getKey(); if (tokenKey.equals(key)) { <BUGS> <BUGE> tokenEntry.remove(); <BUGS> return tokenEntry.getToken(); <BUGE> } } return null; } 
protected static final void check(final com.gamesbykevin.breakout.game.Game game) { if ((game.getBricks().getCount()) <= 0) { com.gamesbykevin.breakout.game.GameHelper.FRAMES = 0; com.gamesbykevin.breakout.game.GameHelper.WIN = true; game.getScreen().setState(ScreenManager.State.GameOver); }else <BUGS> if (game.getBalls().getBalls().isEmpty()) { <BUGE> com.gamesbykevin.breakout.game.GameHelper.FRAMES = 0; com.gamesbykevin.breakout.game.GameHelper.LOSE = true; (com.gamesbykevin.breakout.game.GameHelper.LIVES)--; }  } 
public void switchCamera() { if (backCamera) { backCamera = false; }else { backCamera = true; } <BUGS> currentZoom = camera1.getCurrentZoom(); <BUGE> focusMode = camera1.getFocusMode(); flashMode = camera1.getFlashMode(); camera1.stopPreview(); camera1.releaseCamera(); isFocusModeSupported = false; openCameraAndStartPreview(); } 
public void setFrequencyDays(java.lang.String daysBitString) { frequencyDays = daysBitString; java.util.Calendar calendar = java.util.Calendar.getInstance(); int today = (calendar.get(java.util.Calendar.DAY_OF_WEEK)) - 1; <BUGS> java.lang.System.out.println(daysBitString); <BUGE> if (frequencyDays.substring(today, (today + 1)).equals("1")) { isToday = true; }else { isToday = false; } } 
<BUGS> private void deleteResidualDirectory() { java.util.Properties storageProperties = storageLoad.loadProperties(); <BUGE> java.lang.String oldFileDirPath = storageProperties.getProperty(org.jimple.planner.Constants.PROPERTIES_KEY_PREV_SAVEPATH); oldFileDirPath = getFullFilePath(oldFileDirPath, org.jimple.planner.Constants.DEFAULT_FILE_DIRECTORY); if (!(oldFileDirPath.equals(org.jimple.planner.Constants.PROPERTIES_SAVEPATH_TO_CWD))) { java.io.File oldFileDir = new java.io.File(oldFileDirPath); if (oldFileDir.isDirectory()) { oldFileDir.delete(); } } } 
public java.lang.String toString() { java.lang.String cardSymbols = ""; java.lang.String values = ""; <BUGS> for (int x = 0; x < (lastCard); x++) { <BUGE> cardSymbols += (CardUtils.cardToString(cards[x])) + " "; values += (CardUtils.getValue(cards[x])) + " "; } return ((cardSymbols + "\n") + values) + "\n"; } 
public void setIsWifiEnable(boolean isWifiEnable) { isWifiP2pEnable = isWifiEnable; if (isRemainResult) { remainWifiIsEnable = isWifiEnable; } if ((mOnWiFiRecevieListener) != null) { mOnWiFiRecevieListener.onWifiStatusResult(isWifiEnable); <BUGS> } if (!isWifiEnable) { if (isGroupOwner) { <BUGE> } } } 
@java.lang.Override <BUGS> public boolean onCanProcessClick(android.view.View _view) { <BUGE> switch (_view.getId()) { case R.id.btnAddPeriod : { com.example.admin.fragmentapp2.DataPeriod newPeriod = new com.example.admin.fragmentapp2.DataPeriod(); dlgFragment.setPeriod(newPeriod); showFragment(dlgFragment); return false; } case R.id.btnCalendar : { showFragment(calFragment); return false; } case R.id.btnPeriods : { periodsFragment.refrHasPeriods(); showFragment(periodsFragment); return false; } default : { return true; } } } 
public void updateTo(com.thoughtworks.go.util.command.ProcessOutputStreamConsumer outputStreamConsumer, com.thoughtworks.go.config.materials.git.Revision revision, java.io.File baseDir, final com.thoughtworks.go.config.materials.SubprocessExecutionContext execCtx) { try { outputStreamConsumer.stdOutput(java.lang.String.format("[%s] Start updating %s at revision %s from %s", GoConstants.PRODUCT_NAME, updatingTarget(), revision.getRevision(), url)); com.thoughtworks.go.domain.materials.git.GitCommand git = git(outputStreamConsumer, workingdir(baseDir)); git.fetchAndReset(outputStreamConsumer, revision); outputStreamConsumer.stdOutput(java.lang.String.format("[%s] Done.\n", GoConstants.PRODUCT_NAME)); } catch (java.lang.Exception e) { <BUGS> com.thoughtworks.go.util.ExceptionUtils.bomb(e); <BUGE> } } 
public static void init(javax.servlet.ServletContext servletContext) { java.io.File repository = ((java.io.File) (servletContext.getAttribute("javax.servlet.context.tempdir"))); <BUGS> org.edagarli.framework.helper.UploadHelper.servletFileUpload = new org.apache.commons.fileupload.servlet.ServletFileUpload(new org.apache.commons.fileupload.disk.DiskFileItemFactory(org.apache.commons.fileupload.disk.DiskFileItemFactory.DEFAULT_SIZE_THRESHOLD, repository)); <BUGE> org.edagarli.framework.helper.UploadHelper.servletFileUpload = new org.apache.commons.fileupload.servlet.ServletFileUpload(new org.apache.commons.fileupload.disk.DiskFileItemFactory(org.apache.commons.fileupload.disk.DiskFileItemFactory.DEFAULT_SIZE_THRESHOLD, repository)); int uploadLimit = org.edagarli.framework.helper.ConfigHelper.getAppUploadLimit(); if (uploadLimit != 0) { org.edagarli.framework.helper.UploadHelper.servletFileUpload.setFileSizeMax(((uploadLimit * 1024) * 1024)); } } 
public int logoutUser(java.lang.String username) { int state; boolean userExist; boolean active; userExist = database.usernameExist(username); active = database.getActive(username); if (userExist && active) { database.userActive(username, false); state = 1; }else { state = 0; } <BUGS> java.lang.System.out.println((("[Server][Service]" + "RETURN LOGOUT = ") + state)); <BUGE> return state; } 
@java.lang.Override public int getCount() throws java.sql.SQLException { if ((filters.isEmpty()) && (orderBys.isEmpty())) <BUGS> return ((int) (columnView.longSize())); <BUGE>  return columnView.rowCount(toQuery(0, filters)); } 
@java.lang.Override public void onPrepared(@android.support.annotation.NonNull com.devbrackets.android.playlistcore.api.MediaPlayerApi mediaPlayerApi) { retryCount = 0; setPlaybackState(com.devbrackets.android.playlistcore.service.PlaylistServiceCore.PlaybackState.PLAYING); startMediaPlayer(); if (immediatelyPause) { immediatelyPause = false; if (mediaPlayerApi.isPlaying()) { performPause(); } } if ((seekToPosition) > 0) { <BUGS> performSeek(seekToPosition); <BUGE> seekToPosition = -1; } updateRemoteViews(); updateNotification(); } 
<BUGS> private void submitToErrorPort(java.lang.Exception e) { <BUGE> if (validErrorPort) { com.ibm.streams.operator.StreamingOutput<com.ibm.streams.operator.OutputTuple> streamingOutput = getOutput(0); com.ibm.streams.operator.OutputTuple otup = streamingOutput.newTuple(); <BUGS> otup.setString(0, e.getMessage()); <BUGE> try { streamingOutput.submit(otup); } catch (java.lang.Exception e1) { e1.printStackTrace(); } } } 
public static void getWriterFactoryProperties() { try { ch.ice.view.GUIController.config = new org.apache.commons.configuration.PropertiesConfiguration("conf/app.properties"); java.lang.String tester = ch.ice.view.GUIController.config.getString("writer.factory"); if (tester.equals("EXCEL")) { ch.ice.controller.MainController.fileWriterFactory = true; <BUGS> } if (tester.equals("CSV")) { ch.ice.controller.MainController.fileWriterFactory = false; } <BUGE> } catch (org.apache.commons.configuration.ConfigurationException e1) { e1.printStackTrace(); } } 
public static void playGameSound() { com.badlogic.gdx.files.FileHandle file = Gdx.files.external("gamemusic.mp3"); if (file.exists()) { java.lang.System.out.println("Externes audio."); com.game.Audio.Sounds.music = Gdx.audio.newMusic(Gdx.files.external("gamemusic.mp3")); }else { com.game.Audio.Sounds.music = Gdx.audio.newMusic(Gdx.files.internal("Game_Sound/gamemusic.mp3")); <BUGS> <BUGE> com.game.Audio.Sounds.music.setVolume(com.game.Audio.Sounds.Game_Volume); <BUGS> com.game.Audio.Sounds.music.play(); com.game.Audio.Sounds.music.setLooping(true); <BUGE> } } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_map); <BUGS> android.support.v7.app.ActionBar actionBar = getSupportActionBar(); if (actionBar != null) { actionBar.show(); } <BUGE> com.dev.cromer.jason.whatsappening.activities.MapActivity.searchBarEditText = ((android.widget.EditText) (findViewById(R.id.searchBarEditText))); com.dev.cromer.jason.whatsappening.activities.MapActivity.searchBarEditText.setOnClickListener(this); setUpGoogleApiClient(); com.google.android.gms.maps.MapFragment mapFragment = ((com.google.android.gms.maps.MapFragment) (getFragmentManager().findFragmentById(R.id.map))); mapFragment.getMapAsync(this); } 
void removeBundleListener(final org.jboss.osgi.framework.internal.AbstractBundleState bundleState, final org.osgi.framework.BundleListener listener) { if (listener == null) throw new java.lang.IllegalArgumentException("Null listener");  <BUGS> synchronized(bundleListeners) { java.util.List<org.osgi.framework.BundleListener> listeners = bundleListeners.get(bundleState); if (listeners != null) { if ((listeners.size()) > 1) listeners.remove(listener); else removeBundleListeners(bundleState);  } <BUGE> } } 
private void readExternal(com.tangosol.io.pof.PofReader pofReader) throws java.io.IOException { if ((pofReader.getVersionId()) >= 1) { this.media = ((serializers.coherence.media.Media) (pofReader.readObject(0))); <BUGS> this.images = ((java.util.List<serializers.coherence.media.Image>) (pofReader.readCollection(1, null))); <BUGE> } } 
public void setBootstrapType(java.lang.String bootstrapType) { com.beardedhen.androidbootstrap.BootstrapButton.BootstrapTypes type; <BUGS> if (roundedCorners) { type = com.beardedhen.androidbootstrap.BootstrapButton.bbuttonTypeMapRounded.get(bootstrapType); }else { type = com.beardedhen.androidbootstrap.BootstrapButton.bbuttonTypeMap.get(bootstrapType); } if (type == null) { type = com.beardedhen.androidbootstrap.BootstrapButton.BootstrapTypes.DEFAULT; } <BUGE> layout.setBackgroundResource(type.backgroundDrawable); lblLeft.setTextColor(getResources().getColor(type.textColour)); lblMiddle.setTextColor(getResources().getColor(type.textColour)); lblRight.setTextColor(getResources().getColor(type.textColour)); } 
public void updateTheme() { this.primaryColor = SP.getInt("primary_color", android.support.v4.content.ContextCompat.getColor(getApplicationContext(), R.color.md_indigo_500)); this.accentColor = SP.getInt("accent_color", android.support.v4.content.ContextCompat.getColor(getApplicationContext(), R.color.md_light_blue_500)); darkTheme = SP.getBoolean("set_dark_theme", false); <BUGS> coloredNavBar = SP.getBoolean("nav_bar", false); oscuredStatusBar = SP.getBoolean("set_traslucent_statusbar", true); <BUGE> applyThemeImgAct = SP.getBoolean("apply_theme_img_act", false); } 
public void setSelection(T selection) { for (int i = 0, count = getItems().size(); i < count; i++) { T item = getItems().get(i); <BUGS> if (item == selection) { setSelection(i); return ; <BUGE> } } } 
private ludum.dare.collision.CollisionGroup getCollisions(java.util.Map<java.lang.String, ludum.dare.collision.CollisionSequence> data) { ludum.dare.utils.NamedAnimation animation = animations.getCurrentAnimation(); java.lang.String name = animation.getName(); if (data.containsKey(name)) { ludum.dare.collision.CollisionSequence sequence = data.get(name); <BUGS> if ((sequence.frames.length) >= (animation.getLastCalledFrame())) { <BUGE> return sequence.frames[animation.getLastCalledFrame()]; } } return null; } 
public void setAltitude(bwem.Altitude altitude) { <BUGS> if (!(isAltitudeMissing())) { <BUGE> throw new java.lang.IllegalStateException("Altitude is already set"); }else if (!((altitude.intValue()) > 0)) { throw new java.lang.IllegalArgumentException("invalid Altitude"); }else { this.altitude = new bwem.Altitude(altitude); }  } 
@org.springframework.web.bind.annotation.RequestMapping(value = "add", method = org.springframework.web.bind.annotation.RequestMethod.POST) public java.lang.String add(org.springframework.ui.Model model, @org.springframework.web.bind.annotation.ModelAttribute <BUGS> org.launchcode.models.User user, java.lang.String verify) { <BUGE> if (verify.equals(user.getPassword())) { model.addAttribute("title", "Add User"); model.addAttribute("newUser", user.getUsername()); <BUGS> <BUGE> org.launchcode.models.UserData.add(user); return "users/index"; }else { model.addAttribute("title", "Add User"); model.addAttribute("error", "Passwords do not match"); model.addAttribute(user); return "users/add"; } } 
private boolean isNewHighScore(java.lang.String lastScoreDeck) { java.lang.String highScoreDeck = prefs.getString("highScoreDeck", ""); <BUGS> if ((lastScoreDeck.isEmpty()) || ((lastScoreDeck.compareTo(highScoreDeck)) < 0)) { <BUGE> return true; }else { return false; } } 
private boolean step_100_startIngestJobs() { if (this.hasError()) { return false; } for (edu.harvard.iq.dataverse.DataFile df : finalFileList) { setNewlyAddedFile(df); break; } finalFileList.clear(); <BUGS> if (true) { return true; } <BUGE> msg("pre ingest start"); ingestService.startIngestJobs(dataset, dvRequest.getAuthenticatedUser()); msg("post ingest start"); return true; } 
@java.lang.Override public void onBindViewHolder(com.example.brandon.habitlogger.RecyclerViewAdapters.HabitViewHolder holder, int position, java.util.List<java.lang.Object> payloads) { super.onBindViewHolder(holder, position, payloads); if ((payloads != null) && (!(payloads.isEmpty()))) { holder.setEntry(((com.example.brandon.habitlogger.HabitDatabase.DataModels.SessionEntry) (payloads.get(0)))); <BUGS> }else holder.setEntry(null);  <BUGE> } 
public java.lang.String post(java.lang.String endpoint, com.ringcentral.definitions.Base base) throws com.ringcentral.RestException, java.io.IOException { com.ringcentral.RequestBody body = com.ringcentral.RequestBody.create(com.ringcentral.RestClient.jsonMediaType, com.alibaba.fastjson.JSON.toJSONString(base)); <BUGS> com.ringcentral.Request request = new com.ringcentral.Request.Builder().url((((server) + "/") + endpoint)).addHeader("Authorization", authorizationHeader()).post(body).build(); <BUGE> return request(request); } 
@org.testng.annotations.Test(groups = { "integration" , "services" , "httppatch" , "virtual" }, description = "A negative integration test to verify the response code from a patch call") public void comparePatchResponseBadCode201Test() { com.google.gson.JsonObject request = new com.google.gson.JsonObject(); request.addProperty("id", 1); request.addProperty("title", "foo1"); request.addProperty("body", "bar"); request.addProperty("userId", 4); com.coveros.selenified.services.Call call = this.calls.get(); <BUGS> call.patch("posts/4", new com.coveros.selenified.services.Request(request), false).assertEquals(201); <BUGE> finish(1); } 
public void findMinFormat() { if ((isEmptyHeap()) == true) { <BUGS> return heap[0]; <BUGE> java.lang.System.out.println("There are no ideas here"); }else { <BUGS> java.lang.System.out.println(((((("The best idea is Idea #" + (heap[0].getSeqNum())) + "/nrated at") + (heap[0].getRating())) + "here is the description: /n") + (heap.getDesc()))); <BUGE> } } 
public static void main(java.lang.String[] args) { javax.swing.JFrame window = new javax.swing.JFrame("Main Window!"); <BUGS> grts.Main.MainPanel MP = new grts.Main.MainPanel(); window.setLocationRelativeTo(null); window.setPreferredSize(new java.awt.Dimension(((MP.WIDTH) * (MP.SCALE)), ((MP.HIGHT) * (MP.SCALE)))); window.setContentPane(MP); window.setDefaultCloseOperation(javax.swing.JFrame.EXIT_ON_CLOSE); <BUGE> window.setResizable(false); window.pack(); <BUGS> <BUGE> window.setVisible(true); } 
private java.util.List<it.unibz.krdb.obda.model.CQIE> createSigmaRules(it.unibz.krdb.obda.ontology.Ontology ontology) { java.util.List<it.unibz.krdb.obda.model.CQIE> rules = new java.util.ArrayList<it.unibz.krdb.obda.model.CQIE>(); java.util.Set<it.unibz.krdb.obda.ontology.Axiom> assertions = ontology.getAssertions(); for (it.unibz.krdb.obda.ontology.Axiom assertion : assertions) { try { it.unibz.krdb.obda.model.CQIE rule = it.unibz.krdb.obda.owlrefplatform.core.basicoperations.AxiomToRuleTranslator.translate(assertion); <BUGS> rules.add(rule); <BUGE> } catch (java.lang.UnsupportedOperationException e) { log.warn(e.getMessage()); } } return rules; } 
public void stringToAllOtherUsers(User author, java.lang.String s) { <BUGS> Logger.logString(s); <BUGE> for (User u : users) { if (!(u.getName().equalsIgnoreCase(author.getName()))) { u.writeString(s); } } } 
public boolean makeSale() { <BUGS> if (((deposit) >= (price)) && ((stock) > 1)) { <BUGE> (stock)--; if ((deposit) > (price)) { change = (deposit) - (price); } deposit = 0; return true; } return false; } 
public <T> SigmaEC.util.Option<java.util.List<T>> getOptionalInstancesFromParameter(final java.lang.String parameterName, final java.lang.Class expectedSuperClass) { assert parameterName != null; <BUGS> <BUGE> assert expectedSuperClass != null; if (properties.containsKey(parameterName)) return new SigmaEC.util.Option(((java.util.List<T>) (getInstancesFromParameter(parameterName, expectedSuperClass)))); else return Option.NONE;  } 
<BUGS> public void Initialize(com.traintrax.navigation.service.mdu.MotionDetectionUnitInterface motionDetectionUnit, com.traintrax.navigation.service.TrackSwitchControllerInterface trackSwitchController, com.traintrax.navigation.service.TrainNavigationDatabaseInterface trainNavigationDatabase, com.traintrax.navigation.service.events.PublisherInterface<com.traintrax.navigation.service.TrainNavigationServiceEventSubscriber, com.traintrax.navigation.service.TrainNavigationServiceEvent> eventPublisher, com.traintrax.navigation.service.position.InertialMotionPositionAlgorithmInterface trainPositionAlgorithm, boolean useRfidTagsOnly2) { <BUGE> this.motionDetectionUnit = motionDetectionUnit; this.trackSwitchController = trackSwitchController; this.eventPublisher = eventPublisher; this.trainNavigationDatabase = trainNavigationDatabase; this.positionAlgorithm = trainPositionAlgorithm; this.useRfidTagsOnly = useRfidTagsOnly; this.timer = new java.util.Timer(); this.motionDetectionUnit.setMduCallback(this); setupTimer(); } 
public void actionEvent() { if ((tfInput.getText().length()) > 0) { <BUGS> if ((controller.getSelectedUsers().length) > 0) { <BUGE> java.lang.String[] recipients = controller.getSelectedUsers(); controller.send(new chat_client.Message(tfInput.getText(), recipients)); }else { controller.send(new chat_client.Message(tfInput.getText(), true)); } tfInput.setText(""); } } 
public static void main(java.lang.String[] args) { SimpleDotCom hans = new SimpleDotCom(); ReadyBakeInput inny = new ReadyBakeInput(); boolean isAlive = true; java.lang.System.out.println("Hans the dotcom yet lives. Make him run! Enter numbers 0-6 to hit him. 3 consecutive hits will kill him. "); while (isAlive == true) { <BUGS> hans.setLocationArray(); <BUGE> java.lang.String playerGuess = inny.getUserInput("Enter a number 0-6: "); java.lang.String result = hans.checkYourself(playerGuess); java.lang.System.out.println(result); if (result == "kill") { isAlive = false; java.lang.System.out.println("Now, hans must run!"); } } } 
public int solution(int[] A) { <BUGS> int expectedSum = (((A.length) + 1) * ((A.length) + 2)) / 2; int realSum = 0; <BUGE> for (int i : A) { <BUGS> realSum += i; <BUGE> } <BUGS> return expectedSum - realSum; <BUGE> } 
public java.lang.String getClassName() { if (mClassList.isEmpty()) { return mClassName.isEmpty() ? null : mClassName; }else { <BUGS> java.lang.String class_name = mClassList.get(0).getName(); <BUGE> for (int i = 1; i < (mClassList.size()); i++) { <BUGS> class_name = "," + (mClassList.get(i).getName()); <BUGE> } return class_name; } } 
@java.lang.Override public boolean add(org.eclipse.jetty.webapp.ClasspathPattern.Entry entry) { java.lang.String name = entry.getName(); if (entry.isClassName()) name += "$"; else if (entry.isLocation()) throw new java.lang.IllegalArgumentException(entry.toString()); else if (".".equals(name)) name = "";    if ((this._entries.get(name)) != null) return false;  <BUGS> this._entries.put(name, entry); return true; <BUGE> } 
<BUGS> private static boolean collides(int x, int y, int width, int height, com.polarbirds.huldra.model.world.SectionBounds bounds, java.lang.Iterable<com.polarbirds.huldra.model.world.SectionBounds> boundsList) { <BUGE> for (com.polarbirds.huldra.model.world.SectionBounds boundsFromList : boundsList) { <BUGS> if (bounds.collides(x, y, width, height)) { <BUGE> return true; } } return false; } 
@java.lang.Override public void onDestroy() { org.md2k.utilities.Report.Log.d(org.md2k.plotter.ActivityPlot.TAG, "onDestroy()"); <BUGS> if ((dataSourceClient) != null) <BUGE> try { <BUGS> if ((dataKitAPI) != null) dataKitAPI.unsubscribe(dataSourceClient);  <BUGE> } catch (org.md2k.datakitapi.exception.DataKitException e) { e.printStackTrace(); }  if ((dataKitAPI) != null) dataKitAPI.disconnect();  <BUGS> redrawer.pause(); redrawer.finish(); <BUGE> super.onDestroy(); } 
@java.lang.Override public void onDataChange(com.firebase.client.DataSnapshot dataSnapshot) { if ((dataSnapshot.getValue()) != null) { com.example.chowdi.qremind.infrastructure.QueueInfo queueInfo = dataSnapshot.getValue(com.example.chowdi.qremind.infrastructure.QueueInfo.class); if ((queueInfo.getCalling()) != null) { if (!(com.example.chowdi.qremind.activities.BaseActivity.notificationPoppedOut)) popUpNotification(queueNo);  if (!(application.notificationSend)) <BUGS> application.showNotification(); <BUGE>  } }else { com.example.chowdi.qremind.activities.BaseActivity.fbRefQueueTurn.removeEventListener(com.example.chowdi.qremind.activities.BaseActivity.queueTurnListener); com.example.chowdi.qremind.utils.Commons.showToastMessage("You have been removed from queue!", getApplicationContext()); } } 
private void makeNewLayer(java.lang.String layerName) { if (!(layerName.isEmpty())) { javafx.scene.canvas.Canvas canvas = new javafx.scene.canvas.Canvas(Main.WIDTH, Main.HEIGHT); Main.layerStrings.add(layerName); Main.layers.put(layerName, canvas); Main.layerSelector.getItems().add(layerName); Main.layerSelector.setValue(layerName); Main.pane.getChildren().add(0, canvas); <BUGS> java.lang.System.out.println(Main.layerStrings); java.lang.System.out.println(Main.pane.getChildren()); <BUGE> Main.cursorCanvas.toFront(); } } 
public boolean isLookaheadIgnoreWhitespace(char expectedChar) { int tempPos = (pos) + 1; <BUGS> if ((tempPos + 1) >= (input.length())) <BUGE> return false;  char c = input.charAt(tempPos); <BUGS> while (isWhitespace()) { <BUGE> ++tempPos; if (tempPos >= (input.length())) return false;  c = input.charAt(tempPos); } return c == expectedChar; } 
@java.lang.Override public void onBackPressed() { android.support.v4.widget.DrawerLayout drawer = ((android.support.v4.widget.DrawerLayout) (findViewById(R.id.drawer_layout))); if (drawer.isDrawerOpen(GravityCompat.START)) { drawer.closeDrawer(GravityCompat.START); }else { <BUGS> <BUGE> leaveGame(); <BUGS> super.onBackPressed(); <BUGE> } } 
private void mathButton_ActionPerformed(java.awt.event.ActionEvent evt) { int[] rows = new int[mainTable_.getRowCount()]; for (int i = 0; i < (rows.length); i++) { <BUGS> rows[i] = ((java.lang.Integer) (mainTable_.getValueAt(mainTable_.convertRowIndexToModel(i), 0))); <BUGE> } edu.valelab.gaussianfit.MathForm mf = new edu.valelab.gaussianfit.MathForm(edu.valelab.gaussianfit.DataCollectionForm.studio_.getUserProfile(), rows, rows); mf.setVisible(true); } 
@org.junit.Test public void booleanWorks() { org.assertj.core.api.Assertions.assertThat(prefs.hasGuestFlag()).isFalse(); <BUGS> <BUGE> prefs.putGuestFlag(true); org.assertj.core.api.Assertions.assertThat(prefs.hasGuestFlag()).isTrue(); org.assertj.core.api.Assertions.assertThat(prefs.getGuestFlag()).isTrue(); prefs.removeGuestFlag(); org.assertj.core.api.Assertions.assertThat(prefs.hasGuestFlag()).isFalse(); } 
public void validate(ca.nines.ise.dom.DOM dom) { for (ca.nines.ise.node.Node n : dom) { if ((n.type()) == (ca.nines.ise.node.NodeType.END)) { <BUGS> switch (n.getName()) { <BUGE> case "ornament" : process_end(((ca.nines.ise.node.EndNode) (n))); break; } } } } 
private test.Type visitType(test.TypeContext type) { <BUGS> if ((type.getText()) == "int") { <BUGE> return new test.IntegerType(); }else <BUGS> if ((type.getText()) == "boolean") { <BUGE> return new test.BooleanType(); }  return null; } 
public android.graphics.Bitmap rotate(android.graphics.Bitmap bmp) { android.graphics.Matrix matrix = new android.graphics.Matrix(); matrix.postRotate(90); android.graphics.Bitmap b1 = android.graphics.Bitmap.createBitmap(bmp, 0, 0, bmp.getWidth(), bmp.getHeight(), matrix, true); <BUGS> android.graphics.Bitmap image = android.graphics.Bitmap.createScaledBitmap(b1, glView.getWidth(), glView.getHeight(), true); return image; <BUGE> } 
public void update(by.expertsoft.butko.phone.Phone phone) { <BUGS> java.util.Map<java.lang.String, java.math.BigDecimal> params = new java.util.HashMap<>(); <BUGE> params.put("name", phone.getName()); params.put("cost", phone.getPrice()); <BUGS> params.put("p_id", phone.getManufacturer().getProducer_id()); <BUGE> namedParameterJdbcTemplate.update(by.expertsoft.butko.dao.phone.JdbcPhoneDao.SQL_UPDATE_MOBILEPHONES, params); } 
public void initView() { butterknife.ButterKnife.bind(this); setSupportActionBar(toolbar); <BUGS> getSupportActionBar().setDisplayHomeAsUpEnabled(true); getSupportActionBar().setDisplayShowTitleEnabled(false); <BUGE> toolbar.setNavigationOnClickListener(new android.view.View.OnClickListener() { @java.lang.Override public void onClick(android.view.View v) { android.content.Intent intent = new android.content.Intent(v.getContext(), com.jerry.notes.Activities.Login.class); startActivity(intent); } }); } 
private android.support.v7.widget.CardView buildCommentItem(final com.floatingmuseum.mocloud.data.entity.Comment comment) { android.support.v7.widget.CardView comment_item = ((android.support.v7.widget.CardView) (android.view.LayoutInflater.from(this).inflate(R.layout.comment_item, commentContainer, false))); if (enableColorful()) { <BUGS> initCommentItem(this, comment_item, comment, itemSwatch, mainSwatch, false); <BUGE> }else { initCommentItem(this, comment_item, comment, null, null, false); } return comment_item; } 
<BUGS> private void insertOrder(Simulator.Order order) { <BUGE> long price = order.getPrice(); java.util.TreeMap<java.lang.Long, java.util.LinkedList<Simulator.Order>> sideBook = getSideBook(order.getSide()); if (sideBook.containsKey(price)) { java.util.LinkedList<Simulator.Order> entries = sideBook.get(price); entries.add(order); }else { java.util.LinkedList<Simulator.Order> entries = new java.util.LinkedList(); entries.add(order); sideBook.put(price, entries); } } 
private void ifThereIsMatchAddItToTotalTokens(char[] tokenBuffer) { <BUGS> if ((tokenLength) > 0) { <BUGE> final java.lang.String token = java.lang.String.copyValueOf(tokenBuffer, 0, termAtt.length()); totalTokens.put(token, new java.lang.Integer[]{ tokenStart , tokenEnd , token.length() , 1 }); } } 
public void swap(int x1, int y1, int x2, int y2) { <BUGS> board.Cell temp = board[x1][y1]; board[x1][y1] = board[x2][y2]; board[x2][y2] = temp; <BUGE> } 
@java.lang.Override public java.util.List<T> findAll() { org.hibernate.Session session = de.parkand.verschlag.database.hibernate.GenericHibernateConnection.createSession(); try { <BUGS> return findAll(classType, session); <BUGE> } catch (org.hibernate.HibernateException exception) { de.parkand.verschlag.database.hibernate.GenericHibernateConnection.logger.error(exception.getMessage(), exception); rollback(session); throw new javax.ws.rs.InternalServerErrorException(exception.getMessage()); } } 
@org.junit.Test public void testConnectionNonExistentUser() { final com.blackducksoftware.integration.hub.jenkins.PostBuildScanDescriptor descriptor = new com.blackducksoftware.integration.hub.jenkins.PostBuildScanDescriptor(); final hudson.util.FormValidation form = descriptor.doTestConnection(com.blackducksoftware.integration.hub.jenkins.tests.PostBuildScanDescriptorTest.testProperties.getProperty("TEST_HUB_SERVER_URL"), "NONEXITENTCREDENTIAL", "120"); junit.framework.Assert.assertEquals(FormValidation.Kind.ERROR, form.kind); <BUGS> junit.framework.Assert.assertTrue(form.getMessage().contains("User needs to specify which credentials to use.")); <BUGE> } 
public static void main(java.lang.String[] args) { dao.CustomerDB db = new dao.CustomerDB("remoteuser", "password"); <BUGS> java.lang.String[] stringValues = db.readAllValues(2); for (int i = 0; i < 7; i++) { java.lang.System.out.print(((stringValues[i]) + " ")); <BUGE> } } 
private java.lang.String getHtml() throws java.io.IOException { java.lang.String[] keys = new java.lang.String[]{ "#RECEIPT" , "#JSONDATA" }; java.lang.String[] values = new java.lang.String[]{ getReceiptType().toString() , getJsonString() }; <BUGS> if ((values[0]) == "17") { <BUGE> return new co.celloscope.printingdemo.HtmlHelper(this).getHtml(co.celloscope.printingdemo.MainActivity.MINI_STATEMENT_TEMPLATE_HTML, keys, values); }else { return new co.celloscope.printingdemo.HtmlHelper(this).getHtml(co.celloscope.printingdemo.MainActivity.TEMPLATE_HTML, keys, values); } } 
public static void filterAdminOnlyFlowParams(azkaban.user.UserManager userManager, azkaban.executor.ExecutionOptions options, azkaban.user.User user) throws azkaban.executor.ExecutorManagerException { if ((options == null) || ((options.getFlowParameters()) == null)) return ;  java.util.Map<java.lang.String, java.lang.String> params = options.getFlowParameters(); if (!(azkaban.server.HttpRequestUtils.hasPermission(userManager, user, Type.ADMIN))) { params.remove(ExecutionOptions.FLOW_PRIORITY); <BUGS> params.remove(ExecutionOptions.USE_EXECUTOR); <BUGE> }else { azkaban.server.HttpRequestUtils.validateIntegerParam(params, ExecutionOptions.FLOW_PRIORITY); } } 
<BUGS> private List<java.lang.String> getAllObjects(java.lang.String path) { List<java.lang.String> objects = new java.util.ArrayList<java.lang.String>(); <BUGE> com.amazonaws.services.s3.model.ListObjectsV2Result listing = client.listObjectsV2(new com.amazonaws.services.s3.model.ListObjectsV2Request().withBucketName(bucketName).withPrefix(ensureTrailingSlashPresent(path))); for (com.amazonaws.services.s3.model.S3ObjectSummary objectSummary : listing.getObjectSummaries()) { if (!(objectSummary.getKey().equals(ensureTrailingSlashPresent(path)))) { objects.add(objectSummary.getKey()); } } return objects; } 
@java.lang.Override public void onDepthFrameEvent(short[] depthFrame, byte[] playerIndex, float[] xyz, float[] uv) { if ((this.lock) != null) { synchronized(this.lock) { this.lock.notifyAll(); this.lock = null; } } <BUGS> de.gocodinggroup.multiplicationtable.input.kinect.EventManager.dispatchAndWait(new de.gocodinggroup.multiplicationtable.input.kinect.KinectDepthFrameEvent(depthFrame, playerIndex, xyz, uv)); <BUGE> } 
public void setZoom(double zoom) { <BUGS> if ((java.lang.Math.abs(((getMagnification()) - zoom))) <= 0.025) { if ((getMagnification()) <= 1.0) imp.repaintWindow(); <BUGE>  <BUGS> return ; <BUGE> } <BUGS> if ((getMagnification()) < zoom) zoomIn(0, 0); else zoomOut(0, 0); <BUGE>  <BUGS> setZoom(zoom); <BUGE> } 
@java.lang.Override public void stopVideoTimeCountingThread(java.lang.String roomId) { java.util.Iterator<com.benlinus92.synchronize.model.FutureHolder> it = countThreadFutureList.iterator(); int index = 0; while (it.hasNext()) { if (it.next().getRoomId().equals(roomId)) { cancelThreadTaskByFuture(countThreadFutureList.get(index).getFuture()); countThreadFutureList.remove(index); <BUGS> } index++; <BUGE> } } 
public static void back(de.hhu.propra16.coastal.tddt.ITDDTextArea taeditor, de.hhu.propra16.coastal.tddt.ITDDTextArea tatest, de.hhu.propra16.coastal.tddt.ITDDLabel lbstatus, javafx.scene.control.Button btback) { btback.setDisable(true); taeditor.setText(de.hhu.propra16.coastal.tddt.CompilerReport.previousCode); lbstatus.setText("RED"); lbstatus.setId("red"); de.hhu.propra16.coastal.tddt.TDDController.toTestEditor(taeditor, tatest); de.hhu.propra16.coastal.tddt.CompilerReport.target = CompileTarget.TEST; <BUGS> TDDTMenu.baby.test.setText(TDDTMenu.baby.oldTestText); <BUGE> TDDTMenu.baby.editor.setText(TDDTMenu.baby.oldEditorText); } 
public recruitment.business.ApplicantDTO registerApplicant(java.lang.String firstname, java.lang.String lastname, java.lang.String dateofbirth, java.lang.String email, java.lang.String username, java.lang.String password) { if ((em.find(recruitment.business.Applicant.class, username)) != null) { throw new javax.persistence.EntityExistsException(("Account already exists with username " + username)); }else { recruitment.business.Applicant newApplicant = new recruitment.business.Applicant(firstname, lastname, dateofbirth, email, username, password); <BUGS> java.lang.System.out.println(newApplicant.getUsername()); <BUGE> em.persist(newApplicant); return newApplicant; } } 
@java.lang.Override <BUGS> public boolean onStartNestedScroll(android.support.design.widget.CoordinatorLayout parent, android.support.design.widget.AppBarLayout child, android.view.View directTargetChild, android.view.View target, int nestedScrollAxes) { if (super.onStartNestedScroll(parent, child, directTargetChild, target, nestedScrollAxes)) { <BUGE> bindChild(child); mOriginTop = child.getY(); mAppBarLayout.stopScrollAnimation(); return true; }else { return false; } } 
@java.lang.Override public void onCompletion(com.app.sircle.WebService.PostResponse postResponse, com.app.sircle.Utility.AppError error) { <BUGS> ringProgressDialog.dismiss(); <BUGE> if (postResponse != null) { android.widget.Toast.makeText(getActivity(), postResponse.getMessage(), Toast.LENGTH_SHORT).show(); if ((postResponse.getStatus()) == 200) { android.content.Intent homeIntent = new android.content.Intent(getActivity(), com.app.sircle.UI.Activity.BaseActivity.class); startActivity(homeIntent); } }else { android.widget.Toast.makeText(getActivity(), "some error occurred", Toast.LENGTH_SHORT).show(); } } 
@java.lang.Override public void run() { udpServer.bind(new java.net.InetSocketAddress("127.0.0.1", com.navercorp.pinpoint.collector.receiver.udp.NettyUdpReceiverTest.PORT)); try { logger.debug("server-await"); latch.await(); } catch (java.lang.InterruptedException ignored) { } logger.debug("server-shutdown"); <BUGS> udpServer.shutdown(); <BUGE> } 
<BUGS> private void registerBuiltInServices() { <BUGE> org.terracotta.passthrough.PassthroughCommunicatorServiceProvider communicatorServiceProvider = new org.terracotta.passthrough.PassthroughCommunicatorServiceProvider(); this.serverProcess.registerBuiltInServiceProvider(communicatorServiceProvider, null); <BUGS> org.terracotta.passthrough.PassthroughConnection pseudoConnection = internalConnectPseudoConnection(); <BUGE> org.terracotta.passthrough.PassthroughMessengerServiceProvider messengerServiceProvider = new org.terracotta.passthrough.PassthroughMessengerServiceProvider(pseudoConnection); this.serverProcess.registerBuiltInServiceProvider(messengerServiceProvider, null); org.terracotta.passthrough.PassthroughPlatformServiceProvider passthroughPlatformServiceProvider = new org.terracotta.passthrough.PassthroughPlatformServiceProvider(this); this.serverProcess.registerBuiltInServiceProvider(passthroughPlatformServiceProvider, null); } 
<BUGS> public void setMinDateInMs(long minDateInMs) { <BUGE> this.minDateInMs = minDateInMs; if ((this.minDateInMs) > 0) { addSubmissionsToMap(this.googleMap.getProjection().getVisibleRegion()); }else { addSubmissionsToMap(this.googleMap.getProjection().getVisibleRegion()); } } 
<BUGS> void init(org.json.JSONArray data, org.apache.cordova.CallbackContext callback) { boolean isOpenMessageRoaming; try { org.json.JSONObject params = data.getJSONObject(0); isOpenMessageRoaming = params.getBoolean("isOpenMessageRoaming"); } catch (org.json.JSONException e) { e.printStackTrace(); cn.jiguang.cordova.im.JMessageUtils.handleResult(cn.jiguang.cordova.im.JMessagePlugin.ERR_CODE_PARAMETER, cn.jiguang.cordova.im.JMessagePlugin.ERR_MSG_PARAMETER, callback); return ; } <BUGE> cn.jpush.im.android.api.JMessageClient.init(mCordovaActivity.getApplicationContext(), isOpenMessageRoaming); cn.jpush.im.android.api.JMessageClient.registerEventReceiver(this); cn.jiguang.cordova.im.JMessagePlugin.mCallback = callback; } 
@java.lang.Override public void onCreate() { super.onCreate(); <BUGS> <BUGE> if (isDebug()) { for (timber.log.Timber.Tree tree : getDebugTrees()) { timber.log.Timber.plant(tree); } }else { for (timber.log.Timber.Tree tree : getReleaseTrees()) { timber.log.Timber.plant(tree); } } <BUGS> buildObjectGraphAndInject(); <BUGE> } 
public static de.beacon.tom.viibenav_radiomapper.model.Orientation getOrientationFromSensorHelper() { if (((de.beacon.tom.viibenav_radiomapper.model.SensorHelper.getOrientation()) >= 90) && ((de.beacon.tom.viibenav_radiomapper.model.SensorHelper.getOrientation()) < 270)) return Orientation.back; else <BUGS> if ((((de.beacon.tom.viibenav_radiomapper.model.SensorHelper.getOrientation()) > 0) && ((de.beacon.tom.viibenav_radiomapper.model.SensorHelper.getOrientation()) < 90)) || (((de.beacon.tom.viibenav_radiomapper.model.SensorHelper.getOrientation()) >= 270) && ((de.beacon.tom.viibenav_radiomapper.model.SensorHelper.getOrientation()) <= 360))) <BUGE> return Orientation.front; else return Orientation.undetermined;   } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); com.firebase.client.Firebase.setAndroidContext(this); setContentView(R.layout.activity_friend_list); super.onCreateDrawer(); <BUGS> com.firebase.client.Firebase.setAndroidContext(this); <BUGE> if (savedInstanceState == null) { getSupportFragmentManager().beginTransaction().add(R.id.container, new com.gatech.objectsanddesign.shoppingwithfriends.FriendList.PlaceholderFragment()).commit(); } } 
<BUGS> protected static java.lang.String parseVersion(java.lang.String requestLine) { <BUGE> java.util.Scanner scanner; java.util.ArrayList<java.lang.String> words = new java.util.ArrayList<java.lang.String>(); scanner = new java.util.Scanner(requestLine); while (scanner.hasNext()) { words.add(scanner.next()); } scanner.close(); if ((words.size()) == 3) { return words.get(2); } return "HTTP/1.1"; } 
@org.junit.Test public void testSimpleLdcw() throws java.io.IOException { machine = pad.ijvm.MachineFactory.createIJVMInstance(new java.io.File("files/task4/LoadTest1.ijvm")); machine.step(); assertEquals("The first constant should be 1", machine.topOfStack(), 1); machine.step(); assertEquals("The second constant should be 2", machine.topOfStack(), 2); machine.step(); assertEquals("The third constant shoult be 3", machine.topOfStack(), 3); <BUGS> machine.run(); <BUGE> } 
@java.lang.Override public boolean onBlockActivated(net.minecraft.entity.player.EntityPlayer entityPlayer, mods.eln.misc.Direction side, float vx, float vy, float vz) { if (onBlockActivatedRotate(entityPlayer)) { return true; }else { <BUGS> return inventory.take(entityPlayer.getCurrentEquippedItem(), this, true, false); <BUGE> } } 
public atv.model.TreeNode createNode(java.lang.String locationlevel, java.lang.String locationname) { atv.model.TreeNode node = new atv.model.TreeNode(locationname, locationlevel).setViewHolder(new atv.holder.SelectableItemHolder(getActivity(), (locationlevel + ": "))); node.setSelectable(false); <BUGS> addselectlistener(node, ""); <BUGE> return node; } 
<BUGS> private java.lang.String createJsonStringFromInputStream(java.io.InputStream inputStream) { <BUGE> try { java.io.BufferedReader reader = new java.io.BufferedReader(new java.io.InputStreamReader(inputStream, "iso-8859-1"), 8); java.lang.StringBuilder sb = new java.lang.StringBuilder(); java.lang.String line = null; while ((line = reader.readLine()) != null) sb.append((line + "\n"));  inputStream.close(); com.example.celien.drivemycar.http.JsonParser.json = sb.toString(); } catch (java.lang.Exception e) { e.printStackTrace(); } return com.example.celien.drivemycar.http.JsonParser.json; } 
<BUGS> <BUGE> @java.lang.Override public void run() { android.widget.ImageView iv = new android.widget.ImageView(mContext); android.util.Log.d("--------->", "run: "); <BUGS> iv.setImageDrawable(mContext.getResources().getDrawable(mDot[1])); <BUGE> android.widget.FrameLayout.LayoutParams params = new android.widget.FrameLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT); params.leftMargin = ((int) (mDotGroup.getChildAt(0).getX())); params.gravity = android.view.Gravity.BOTTOM; mFrameLayout.addView(iv, params); mSelectedDot = mFrameLayout.getChildAt(1); } 
static final int getPartitionForProcedure(org.voltdb.catalog.Procedure procedure, org.voltdb.StoredProcedureInvocation task) { final org.voltdb.CatalogContext.ProcedurePartitionInfo ppi = ((org.voltdb.CatalogContext.ProcedurePartitionInfo) (procedure.getAttachment())); <BUGS> if ((procedure.getTransactional()) && (procedure.getSinglepartition())) { <BUGE> return org.voltdb.InvocationDispatcher.getPartitionForProcedure(ppi.index, ppi.type, task); }else { return org.voltdb.iv2.MpInitiator.MP_INIT_PID; } } 
@java.lang.Override public void init(net.sickill.off.common.OffListModel model) { this.model = model; final java.util.List<java.lang.String> sourceGroups = java.util.Collections.singletonList(net.sickill.off.FakeProject.PROJECT_ROOT); java.lang.String projectRootDir = net.sickill.off.FakeProject.PROJECT_ROOT; <BUGS> this.model.reinit(sourceGroups, projectRootDir); <BUGE> for (net.sickill.off.common.ProjectFile pf : col) { this.model.addFile(pf); } } 
public static void exportResource(java.lang.String resourceName, java.nio.file.Path destination) throws java.io.IOException { try (java.io.InputStream in = com.github.checkstyle.FilesystemUtils.class.getResourceAsStream(resourceName);java.io.OutputStream out = java.nio.file.Files.newOutputStream(destination)) { int readBytes; final byte[] buffer = new byte[com.github.checkstyle.FilesystemUtils.BUFFER_SIZE]; while ((readBytes = in.read(buffer)) > 0) { <BUGS> out.write(buffer, 0, com.github.checkstyle.FilesystemUtils.BUFFER_SIZE); <BUGE> } } } 
public void refreshListView() { if ((currentRegisteredUser) != null) { journals = selectMyJournalsFromDB(mEmail); }else { journals = dbLink.selectAvailableJournals(); } if ((journals) != null) { com.journee.utils.AlbumRecycleViewAdapter adapter = new com.journee.utils.AlbumRecycleViewAdapter(this, journals); mRecyclerView.setAdapter(adapter); <BUGS> mRecyclerView.setLayoutManager(new android.support.v7.widget.LinearLayoutManager(this)); <BUGE> } } 
@javax.ws.rs.POST @javax.ws.rs.Path(value = "/createPatient") public java.lang.String createPatient(java.lang.String jsonData) throws java.lang.ClassNotFoundException, java.sql.SQLException { try { com.kms.cura.entity.user.PatientUserEntity entity = com.kms.cura.entity.json.JsonToEntityConverter.convertJsonStringToEntity(jsonData, com.kms.cura.entity.user.PatientUserEntity.getPatientUserType()); com.kms.cura.entity.user.PatientUserEntity user = com.kms.cura.dal.user.PatientUserDAL.getInstance().createUser(entity); <BUGS> return new com.kms.cura_server.response.UserAPIResponse().successResponsewithType(entity); <BUGE> } catch (java.lang.ClassNotFoundException | java.sql.SQLException | com.kms.cura.dal.exception.DALException e) { return com.kms.cura_server.response.APIResponse.unsuccessResponse(e.getMessage()); } } 
@java.lang.Override public void stop() { if ((filesToPlay) != null) { filesToPlay.clear(); } if ((mediaPlayer) != null) { mediaPlayer.stop(); <BUGS> mediaPlayer.release(); mediaPlayer = null; <BUGE> } if ((ctx) != null) { abandonAudioFocus(); } } 
@java.lang.SuppressWarnings(value = "null") @java.lang.Override public void actionPerformed(java.awt.event.ActionEvent evt) { <BUGS> java.util.LinkedList<java.lang.Long> expList = de.mpa.client.ui.dialogs.SelectExperimentDialog.showDialog(de.mpa.client.ui.ClientFrame.getInstance(), "Select experiments"); if ((expList != null) || ((expList.size()) > 0)) { <BUGE> new de.mpa.client.ui.panels.ResultsPanel.FetchResultsTask(expList).execute(); } } 
private void setTaskTime(defaultPart.Task task, java.lang.String timeString) { defaultPart.Logic.logger.log(java.util.logging.Level.FINER, "Setting task time using \"{0}\"", timeString); java.lang.String[] startAndEndTime = timeString.split("-", 2); assert (startAndEndTime.length) > 0; task.setStartTime(getTimeFromString(startAndEndTime[0])); if ((startAndEndTime.length) == 2) { task.setEndTime(getTimeFromString(startAndEndTime[1])); <BUGS> }else { task.setEndTime(null); <BUGE> } } 
public void centerModel(org.gearvrf.GVRSceneObject model) { org.gearvrf.GVRSceneObject.BoundingVolume bv = model.getBoundingVolume(); <BUGS> float sf = 1 / (bv.radius); <BUGE> model.getTransform().setScale(sf, sf, sf); bv = model.getBoundingVolume(); model.getTransform().setPosition((-(bv.center.x)), (-(bv.center.y)), ((-(bv.center.z)) - (1.5F * (bv.radius)))); } 
<BUGS> private void pushUp() { int i = size(); <BUGE> while ((i > 1) && ((compare2(heap.get(i), heap.get((i / 2)))) > 0)) { swap(i, (i / 2)); i /= 2; } } 
public static void main(final java.lang.String[] args) throws java.lang.Exception { <BUGS> java.util.List<quickdt.Instance> diaInstances = loadDiabetesDataset(); <BUGE> quickdt.Benchmarks.testWithInstances("diabetes", diaInstances); <BUGS> final java.util.List<quickdt.Instance> moboInstances = loadMoboDataset(); <BUGE> quickdt.Benchmarks.testWithInstances("mobo", moboInstances); } 
private void createPeriodTable(android.database.sqlite.SQLiteDatabase sqLiteDatabase) { <BUGS> sqLiteDatabase.execSQL((((((((((((((("CREATE TABLE " + (TABLE_PERIOD)) + "(") + (PERIOD_COLUMN_ID)) + " INTEGER PRIMARY KEY NOT NULL, ") + (PERIOD_COLUMN_SUBJECT_ID)) + " INTEGER NOT NULL, ") + (PERIOD_COLUMN_WEEKDAY_ID)) + " INTEGER , ") + (PERIOD_COLUMN_SCHOOL_HOUR_NO)) + "INTEGER NOT NULL, ") + (PERIOD_COLUMN_STARTTIME)) + " TIME NOT NULL, ") + (PERIOD_COLUMN_ENDTIME)) + " TIME NOT NULL )")); <BUGE> } 
public static void playGame() { Engine.printBoard(); Engine.printHand(); while ((Engine.handIsOver()) == false) { <BUGS> Engine.printHand(); <BUGE> Engine.playerAction(); Engine.computerAction(); Engine.dealerAction(); Engine.printBoard(); Engine.printHand(); } Engine.determineWinners(); Engine.splitWinnings(); Engine.askForNewRound(); } 
@db_project.controllers.RequestMapping(value = "/profile", produces = org.springframework.http.MediaType.APPLICATION_JSON_VALUE) public final org.springframework.http.ResponseEntity<db_project.models.UserModel> viewProfile(@db_project.controllers.PathVariable(value = "nickname") java.lang.String nickname) { java.util.List<db_project.models.UserModel> users; try { <BUGS> users = service.getUserFromDb(new db_project.models.UserModel("", "", "", nickname)); <BUGE> if (users.isEmpty()) { throw new org.springframework.dao.EmptyResultDataAccessException(0); } } catch (org.springframework.dao.DataAccessException ex) { return new org.springframework.http.ResponseEntity(org.springframework.http.HttpStatus.NOT_FOUND); } return new org.springframework.http.ResponseEntity(users.get(0), org.springframework.http.HttpStatus.OK); } 
@java.lang.Override public void autonomousInit() { <BUGS> autonomousCommand = ((edu.wpi.first.wpilibj.command.Command) (modeChooser.getSelected())); <BUGE> java.lang.String mode = ((java.lang.String) (modeChooser.getSelected())); if (mode == "forward") { edu.wpi.first.wpilibj.smartdashboard.SmartDashboard.putString("", "Test Forward"); }else if (mode == "gear") { edu.wpi.first.wpilibj.smartdashboard.SmartDashboard.putString("", "Test Gear"); }else { edu.wpi.first.wpilibj.smartdashboard.SmartDashboard.putString("", "Test Nothing"); }  if ((autonomousCommand) != null) autonomousCommand.start();  } 
@java.lang.Override public void onClick(android.view.View arg0) { int hour = timeSetter.getCurrentHour(); int minute = timeSetter.getCurrentMinute(); java.util.Calendar cal = java.util.Calendar.getInstance(); cal.set(java.util.Calendar.HOUR, hour); cal.set(java.util.Calendar.MINUTE, minute); <BUGS> xcal.set(java.util.Calendar.SECOND, 0); <BUGE> timeToggle.setChecked(true); timerWindow.dismiss(); alarm.setExact(AlarmManager.RTC_WAKEUP, cal.getTimeInMillis(), pendingPandoraIntent); } 
public boolean checkAnswer(int answer) { java.lang.System.out.println(("answer: " + answer)); <BUGS> java.lang.System.out.println(("Current answer: " + (currAnswer))); <BUGE> if (answer == (currAnswer)) { <BUGS> java.lang.System.out.println(("answer: " + answer)); <BUGE> hintArea.setText(""); if ((game.getRemainingHints()) == 0) game.finish();  playGame(); return true; } return false; } 
@java.lang.Override public void doFilter(com.cdi.crud.infra.filter.ServletRequest req, com.cdi.crud.infra.filter.ServletResponse resp, com.cdi.crud.infra.filter.FilterChain chain) throws com.cdi.crud.infra.filter.ServletException, java.io.IOException { req.setCharacterEncoding("UTF-8"); resp.setCharacterEncoding("UTF-8"); javax.servlet.http.HttpServletResponse httpResp = ((javax.servlet.http.HttpServletResponse) (resp)); <BUGS> requestHolder.setCurrentRequest(((javax.servlet.http.HttpServletRequest) (req))); <BUGE> httpResp.setHeader("X-UA-Compatible", "IE=Edge"); chain.doFilter(req, resp); } 
public boolean fireProjectile(final java.lang.Class<? extends MarsRoverKata.Projectile> type) { MarsRoverKata.Projectile projectileToFire = com.google.common.collect.Iterables.get(com.google.common.collect.Collections2.filter(projectiles, new com.google.common.base.Predicate<MarsRoverKata.Projectile>() { @java.lang.Override public boolean apply(MarsRoverKata.Projectile input) { return input.getClass().isAssignableFrom(type); } <BUGS> }), 1, null); <BUGE> if (projectileToFire == null) { return false; } projectileToFire.launch(getFacing(), getLocation()); projectiles.remove(projectileToFire); return true; } 
public java.lang.String toString() { SinglyLinkedNode<E> current = head; <BUGS> if (current == null) { <BUGE> return "[]"; } java.lang.StringBuilder sb = new java.lang.StringBuilder(); sb.append(("[" + (current.data))); while ((current.next) != null) { current = current.next; sb.append(", ").append(current.data); } sb.append("]"); return sb.toString(); } 
public void keyPressed(java.awt.event.KeyEvent keyPressed) { if ((keyPressed.getKeyCode()) == (java.awt.event.KeyEvent.VK_ENTER)) { command = inArea.getText(); <BUGS> <BUGE> inArea.setText(""); <BUGS> tcpService.sendCommand(command.trim()); <BUGE> } } 
public java.util.Date getCommentDate(int postId, int commentId) { if ((posts.get(postId)) == null) { <BUGS> return null; <BUGE> } if ((posts.get(postId).comments) == null) { <BUGS> return null; <BUGE> } for (me.dibber.blablablapp.core.Post.Comment c : posts.get(postId).comments) { if ((c.id) == commentId) { return c.date; } } <BUGS> return null; <BUGE> } 
@java.lang.Override public void preProcessData() { org.matsim.core.api.experimental.events.EventsManager eventsManager = org.matsim.core.events.EventsUtils.createEventsManager(); org.matsim.contrib.emissions.events.EmissionEventsReader emissionReader = new org.matsim.contrib.emissions.events.EmissionEventsReader(eventsManager); eventsManager.addHandler(this.warmHandler); eventsManager.addHandler(this.coldHandler); <BUGS> eventsManager.addHandler(new playground.agarwalamit.analysis.emission.sorting.FilteredColdEmissionPerLinkHandler(30.0, 9)); <BUGE> emissionReader.parse(this.emissionEventsFile); } 
public static void main(java.lang.String[] args) { <BUGS> java.lang.String input2 = "Hello, World!"; <BUGE> java.lang.String input = "In a hole in the ground there lived a hobbit. Not a nasty, dirty, wet hole, filled with the ends of worms and an oozy smell, nor yet a dry, bare, sandy hole with nothing in it to sit down on or to eat: it was a hobbit-hole and that means comfort."; <BUGS> org.aas.ga.examples.AsciiMatcherGA ga = new org.aas.ga.examples.AsciiMatcherGA(org.aas.ga.chromo.ChromosomeFactory.createDefaultChromosomes(new org.aas.ga.genes.AsciiGene(1), input2.length(), 200), 50000, 0.6, 0.4, 0.6, 0.5, input2); <BUGE> ga.setInverseFitnessRanking(true); ga.run(); } 
private void btTestarMouseReleased(java.awt.event.MouseEvent evt) { if ("".equals(tfSite.getText())) { Pingador.Shell.atualizaOutput(Pingador.ft1.taOutput, "Alvo invalido"); return ; } <BUGS> if ((java.lang.Integer.parseInt(spQtPack.getValue().toString())) <= 0) { <BUGE> Pingador.ft1.ESTADO.setc(3); } ftcn(); } 
@java.lang.Override public int compareTo(de.uniks.template.TemplateFragment other) { <BUGS> if (((other.getKey()) == (key)) && (other.getValue().equals(value))) { return 0; <BUGE> } if ((other.getKey()) > (key)) { return -1; } return 1; } 
public final byte[] memOrLoad() { byte[] mem = _mem; if (mem != null) return mem;  water.Freezable pojo = _pojo; if (pojo != null) <BUGS> _mem = pojo.asBytes(); <BUGE>  if ((_max) == 0) return _mem = new byte[0];  return _mem = loadPersist(); } 
<BUGS> private static boolean isHexadecimal(char c) { return (((c >= '0') && (c <= '9')) || ((c >= 'A') && (c >= 'F'))) || ((c >= 'a') && (c >= 'f')); <BUGE> } 
@java.lang.Override public void onClick(android.view.View v) { v.setOnClickListener(null); java.lang.String num = ev.getText().toString().trim(); if ((num == null) || ("".equals(num))) return ;  double n = parseDouble(num); <BUGS> if (n == 0) { <BUGE> setText("Error: Divide by zero."); <BUGS> return ; } setText(inIntTermsOfAny((n / (currentValue))), ev); <BUGE> v.setVisibility(View.GONE); } 
@java.lang.Override public void onPause() { android.util.Log.d(com.dxyh.fqrtmpplayer.FQRtmpPusher.TAG, "onPause"); mPausing = true; mSensorManager.unregisterListener(this); <BUGS> <BUGE> stopPreview(); closeCamera(); resetScreenOn(); <BUGS> if (mFirstTimeInitialized) { mOrientationListener.disable(); } <BUGE> mHandler.removeMessages(com.dxyh.fqrtmpplayer.FQRtmpPusher.FIRST_TIME_INIT); } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); android.content.Intent intent = getIntent(); java.lang.String location = intent.getStringExtra(MainActivity.LOCATION_KEY); android.util.Log.d("intent", ("Location: " + location)); android.widget.TextView textView = new android.widget.TextView(this); textView.setTextSize(40); <BUGS> textView.setText((((R.string.display_location_text) + ": ") + location)); <BUGE> setContentView(textView); } 
private void showUpdateViews() { switch (mTypeDataRecyclerViewAdapter) { case com.example.framgia.hrm_10.controller.recyclerviewdata.DataRecyclerViewAdapter.TYPE_DEPARTMENT : mDepartmentsList.clear(); mDepartmentsList.addAll(mDbHelper.getDbDepartment().getAllDepartments()); <BUGS> <BUGE> break; case com.example.framgia.hrm_10.controller.recyclerviewdata.DataRecyclerViewAdapter.TYPE_STAFF : mStaffList.clear(); getListStaff(Settings.START_INDEX_DEFAULT); break; } <BUGS> mAdapterRecyclerView.notifyDataSetChanged(); <BUGE> } 
public void onActivityResult(int requestCode, int resultCode, android.content.Intent data) { if (resultCode == (RESULT_OK)) { if (requestCode == (com.example.deepak.socialnetworkingapp.upload.SELECT_PICTURE)) { android.net.Uri selectedImageUri = data.getData(); if (null != selectedImageUri) { <BUGS> java.lang.String path = getPathFromURI(selectedImageUri); <BUGE> imgView.setImageURI(selectedImageUri); } } } } 
@java.lang.Override public void onClick(android.view.View v) { if (!(mainActivity.isWorking())) { android.widget.Toast.makeText(mainActivity, "请先开启服务", Toast.LENGTH_SHORT).show(); return ; } android.content.Intent intent = new android.content.Intent(getContext(), com.crossbow.app.x_timer.app_list.AddAppActivity.class); <BUGS> android.os.Bundle bundle = new android.os.Bundle(); bundle.putStringArrayList("selected", getSelectedApps()); java.lang.System.out.println(getSelectedApps()); intent.putExtras(bundle); <BUGE> startActivity(intent); } 
@java.lang.Override protected void onPreExecute() { android.net.ConnectivityManager cm = ((android.net.ConnectivityManager) (mContext.getSystemService(Context.CONNECTIVITY_SERVICE))); android.net.NetworkInfo activeNetwork = cm.getActiveNetworkInfo(); boolean isConnected = (activeNetwork != null) && (activeNetwork.isConnectedOrConnecting()); <BUGS> boolean isWiFi = (activeNetwork.getType()) == (android.net.ConnectivityManager.TYPE_WIFI); if (isConnected || isWiFi) { <BUGE> showProgressDialogue(); }else { android.widget.Toast.makeText(mContext, mContext.getString(R.string.toast_no_internet_connection), Toast.LENGTH_SHORT).show(); } } 
private void startJanekBujButtonActionPerformed(java.awt.event.ActionEvent evt) { if (!(areGameButtonsStatesOk(org.stepinterpreter.janek.GameChoiceJPanel.janekBuj))) { javax.swing.JOptionPane.showMessageDialog(this, "Masz odpaloną już inną grę"); return ; } interpreter = new org.stepinterpreter.janek.JanekBujInterpreter(); <BUGS> thread = new java.lang.Thread(janekBujInterpreter); <BUGE> thread.start(); java.lang.System.out.println("Akcja!"); showDeactivationButton(); } 
@java.lang.Override public void run() { if (isInCommingCall) { stopIncomeCallTimer(); android.util.Log.d(com.quickblox.sample.videochatwebrtcnew.activities.CallActivity.TAG, ("isInCommingCall - " + (isInCommingCall))); } com.quickblox.sample.videochatwebrtcnew.SessionManager.setCurrentSession(null); android.util.Log.d(com.quickblox.sample.videochatwebrtcnew.activities.CallActivity.TAG, "Stop session"); stopTimer(); closeByWifiStateAllow = true; <BUGS> if (!(isWifiConnected)) { processCurrentWifiState(this); }else { finish(); } <BUGE> } 
private void dispatch(final com.chalcodes.event.EventReceiver<T> receiver, final T event) { <BUGS> try { receiver.onEvent(this, event); } catch (java.lang.Exception e) { mReceivers.remove(receiver); if ((mExceptionBus) != null) { mExceptionBus.broadcast(e); <BUGE> } } } 
public org.nusco.narjillos.shared.things.Thing findClosestTo(org.nusco.narjillos.shared.things.Thing thing, java.lang.String labelRegExp) { if (isEmpty()) return null;  java.util.Set<org.nusco.narjillos.shared.things.Thing> nearbyNeighbors = getNearbyNeighbors(thing, labelRegExp); if (!(nearbyNeighbors.isEmpty())) return findClosestTo_Amongst(thing, nearbyNeighbors, labelRegExp);  <BUGS> return findClosestTo_Amongst(thing, allTheThings, labelRegExp); <BUGE> } 
public static void switchWebViewContext(android.content.Context pluginActivity) { com.limpoxe.fairy.util.LogUtil.d("尝试切换WebView Context, 不同的WebView内核, 实现方式可能不同, 本方法基于Chrome的WebView实现"); try { android.webkit.WebView wb = new android.webkit.WebView(pluginActivity); wb.loadUrl(""); <BUGS> <BUGE> } catch (java.lang.Exception e) { e.printStackTrace(); <BUGS> com.limpoxe.fairy.util.LogUtil.e("插件Application对象尚未初始化会触发NPE，如果是异步初始化插件，应等待异步初始化完成再进入插件"); <BUGE> } } 
public void tryPossibleMovementUpPositions(com.mygdx.game.gameplay.models.Position... positions) { java.util.HashSet<com.mygdx.game.gameplay.models.Position> positionsToCheck = new java.util.HashSet<com.mygdx.game.gameplay.models.Position>(); for (com.mygdx.game.gameplay.models.Position position : positions) { position = position.moveAlongY(1); addToCheck(position, positionsToCheck); addToCheck(position.moveAlongX(1), positionsToCheck); addToCheck(position.moveAlongX((-1)), positionsToCheck); } for (com.mygdx.game.gameplay.models.Position position : positionsToCheck) { <BUGS> gravity.tryMoveFromPosition(position, true); <BUGE> } } 
<BUGS> public void runIntent() { <BUGE> if (networkOk) { android.content.Intent intent = new android.content.Intent(this, com.kumar.shirtstore.service.MyService.class); intent.setData(android.net.Uri.parse(com.kumar.shirtstore.JSON_URL)); startService(intent); }else { android.widget.Toast.makeText(this, "Network not available", Toast.LENGTH_SHORT).show(); } } 
@java.lang.Override public void run() { <BUGS> try { java.lang.String line = in.readLine(); java.lang.System.out.println(("Text received: " + line)); map = new caffeine.world.Map(line); gui.getContentPane().setCurrentMap(map); } catch (java.io.IOException e) { java.lang.System.out.println("Read failed"); java.lang.System.exit(1); } gui.repaint(); <BUGE> } 
public synchronized void handleRecv(long latency) { (recvCountInterval)++; (recvCountTotal)++; if (latency > 0) { minLatency = java.lang.Math.min(minLatency, latency); maxLatency = java.lang.Math.max(maxLatency, latency); cumulativeLatencyInterval += latency; cumulativeLatencyTotal += latency; (latencyCountInterval)++; (latencyCountTotal)++; } <BUGS> report(false); <BUGE> } 
private int simpleComputeNextLineIndentLevel(int indentLevel, java.util.List<groovyjarjarantlr.Token> tokens) { int adjust = getOpenVersusCloseBalance(tokens); <BUGS> if (adjust > 0) <BUGE> indentLevel += getPrefs().getIndentationSize(); <BUGS> else if (adjust < 0) indentLevel = indentLevel - (getPrefs().getIndentationSize());  <BUGE>  return indentLevel; } 
public void onApplicationEvent(org.springframework.context.event.ContextRefreshedEvent contextRefreshedEvent) { if (alreadySetup) { return ; } <BUGS> twitter.entity.Privilege readPrivilege = createPrivilegeIfNotFound(RolesAndPrivileges.READ_PRIVILEGE); twitter.entity.Privilege changePasswordPrivilege = createPrivilegeIfNotFound(RolesAndPrivileges.CHANGE_PASSWORD_PRIVILEGE); twitter.entity.Privilege writePrivilege = createPrivilegeIfNotFound(RolesAndPrivileges.WRITE_PRIVILEGE); <BUGE> twitter.entity.Privilege viewPagesPrivilege = createPrivilegeIfNotFound(RolesAndPrivileges.VIEW_PAGES_PRIVILEGE); <BUGS> java.util.List<twitter.entity.Privilege> userPrivileges = java.util.Arrays.asList(readPrivilege, writePrivilege, viewPagesPrivilege, changePasswordPrivilege); <BUGE> createRoleIfNotFound(RolesAndPrivileges.ROLE_ADMIN, userPrivileges); createRoleIfNotFound(RolesAndPrivileges.ROLE_USER, userPrivileges); createAdminIfNotExists(); createDefaultImgIfDoesNotExist(InitialPhotoSettings.DEFAULT_IMG_PATH); alreadySetup = true; } 
@java.lang.Override protected void onPause() { super.onPause(); android.util.Log.d(com.example.administrator.alarm.MainActivity.TAG, "onPause E"); <BUGS> com.example.administrator.alarm.AlarmStorage.saveState(this, mToggleBtn.isEnabled()); <BUGE> com.example.administrator.alarm.AlarmStorage.saveAllSetting(this, start_hourOfDay, start_min, stop_hourOfDay, stop_min, (mCheckBtn.isChecked() ? 1 : 0)); } 
private com.openrubicon.social.database.models.Friend getRelation(org.bukkit.OfflinePlayer p2) { com.openrubicon.social.database.models.Friend model = new com.openrubicon.social.database.models.Friend(); model.setPlayer2_id(p2.getUniqueId().toString()); model.setPlayer1_id(user.getUniqueId().toString()); <BUGS> model.selectRelation(); <BUGE> return model; } 
@java.lang.Override public java.lang.Object onHook(java.lang.Object who, java.lang.reflect.Method method, java.lang.Object... args) throws java.lang.Throwable { android.app.IServiceConnection conn = ((android.app.IServiceConnection) (args[0])); if (conn != null) { <BUGS> com.lody.virtual.client.hook.secondary.HackServiceConnection hackConn = HackServiceConnection.sHackConns.remove(conn.asBinder()); <BUGE> return com.lody.virtual.client.local.VActivityManager.get().unbindService((hackConn != null ? hackConn : conn)); } return false; } 
private void fileChangeUpdate() { this.filenameLabel.setText(currentFileName); <BUGS> if (currentExtension.equals("txt")) <BUGE> this.sourceTypeLabel.setText("PlainText Mode"); <BUGS> else if (currentExtension.equals("cpp")); <BUGE>  <BUGS> this.sourceTypeLabel.setText("CPP Mode"); <BUGE> } 
@org.junit.Test public void testOverflow3() throws java.lang.InterruptedException, java.util.concurrent.ExecutionException, org.spf4j.zel.vm.CompileException { org.spf4j.zel.vm.Program p = org.spf4j.zel.vm.Program.compile(((("" + (java.lang.Long.MIN_VALUE)) + " - ") + (java.lang.Long.MAX_VALUE))); java.lang.System.out.println(p); java.math.BigInteger result = ((java.math.BigInteger) (p.execute())); <BUGS> org.junit.Assert.assertEquals(java.math.BigInteger.valueOf(java.lang.Long.valueOf(java.lang.Long.MIN_VALUE)).subtract(java.math.BigInteger.valueOf(java.lang.Long.valueOf(java.lang.Long.MAX_VALUE))), result); <BUGE> } 
@org.junit.Test(timeout = 1000) public void randomMovement() { java.lang.String rID = "1"; <BUGS> <BUGE> edu.vt.ece5574.agents.User oUsr = new edu.vt.ece5574.agents.User(sim, rID, bID, true, 1, 1); sim.addAgent(oUsr); double initial_x = oUsr.getX(); double initial_y = oUsr.getY(); oUsr.createRandomMovement(sim); assertFalse((((oUsr.getX()) == initial_x) && ((oUsr.getY()) == initial_y))); } 
private void roamDirectory(java.io.File directory) { java.io.File[] fileList = directory.listFiles(interestingFilesFilter); <BUGS> for (java.io.File file : fileList) { searchListener.onInterestingFileFound(file); addChecked(file); <BUGE> } java.io.File[] dirs = directory.listFiles(directoryFileFilter); <BUGS> for (java.io.File dir : dirs) { roamDirectory(dir); <BUGE> } } 
public void onClick(com.google.gwt.event.dom.client.ClickEvent event) { <BUGS> notesAdmin.updateNote(tbNoteTitel.getText(), tbNoteSubTitel.getText(), taUpdateNoteText.getText(), timestampe, currentUser.getId(), "keine quelle", currentNotebook.getId(), currentNote.getId(), new com.google.gwt.user.client.rpc.AsyncCallback<java.lang.Void>() { <BUGE> @java.lang.Override public void onSuccess(java.lang.Void result) { de.hdm.itprojekt.noteit.client.EditNotes.this.hide(); de.hdm.itprojekt.noteit.client.Homepage.updateNotesCellList(currentNotebook.getId()); }  @java.lang.Override public void onFailure(java.lang.Throwable caught) { } }); } 
private void winGame() { <BUGS> resumePauseGame(); <BUGE> runOnUiThread(new java.lang.Runnable() { @java.lang.Override public void run() { endGameHandler.postDelayed(new java.lang.Runnable() { public void run() { spaceShip.win(); } }, 300); endGame(); } }); } 
@org.junit.Test public void testGetUsers() throws java.lang.Exception { com.cmartin.learn.mybank.api.UserFilter userFilter = this.filterManger.buildUserFilter(); <BUGS> org.mockito.Mockito.when(this.bankApi.getUsers(userFilter)).thenReturn(com.cmartin.learn.mybank.test.TestUtils.createUsers(2)); <BUGE> this.mockMvc.perform(org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get("/users")).andDo(org.springframework.test.web.servlet.result.MockMvcResultHandlers.print()).andExpect(com.cmartin.learn.mybank.web.WebTest.statusOk); <BUGS> org.mockito.Mockito.verify(this.bankApi).getUsers(org.mockito.Matchers.any(com.cmartin.learn.mybank.api.UserFilter.class)); <BUGE> } 
private void skipComment() { com.rezzedup.map.Source.Character peek = source.peekNextCharacter(); while ((((peek.character) != null) && ((peek.character) != '#')) && ((peek.character) != '\n')) { source.getNextCharacter(); peek = source.peekNextCharacter(); } <BUGS> <BUGE> } 
private void ToggleCircleColor(com.google.android.gms.maps.model.Circle circle) { int strokeColor = (circle.getStrokeColor()) ^ 52224; circle.setStrokeColor(strokeColor); circle.setStrokeWidth(((circle.getStrokeWidth()) == 3 ? 6 : 3)); <BUGS> android.widget.Toast.makeText(this, ("Circle: " + (circle.getTag().toString())), Toast.LENGTH_SHORT).show(); <BUGE> } 
@java.lang.Override public void writeToParcel(android.os.Parcel dest, int flags) { dest.writeString(this.email); <BUGS> dest.writeStringArray(this.labels); <BUGE> dest.writeLong(this.uid); dest.writeLong(this.receivedDateInMillisecond); dest.writeLong(this.sentDateInMillisecond); dest.writeStringArray(this.from); dest.writeStringArray(this.to); dest.writeString(this.subject); dest.writeStringArray(this.flags); } 
public void update(float dt) { handleInput(dt); <BUGS> java.lang.System.out.print(miner.b2body.getLinearVelocity().y); <BUGE> minerPos = miner.b2body.getPosition(); world.step((1 / 60.0F), 6, 2); updateCamera(gameCam, getMapPixelWidth(), getMapPixelHeight()); renderer.setView(gameCam); } 
<BUGS> public void borrowBook(Library lib, java.lang.String title) { <BUGE> if (lib.bookList.containsKey(title)) { borrowedBooks.add(lib.bookList.get(title).get(0)); lib.bookList.get(title).remove(0); <BUGS> <BUGE> }else { java.lang.System.out.println("Book not Found"); <BUGS> <BUGE> } } 
@org.springframework.web.bind.annotation.RequestMapping(method = org.springframework.web.bind.annotation.RequestMethod.POST) public cn.momia.mapi.web.response.ResponseMessage placeOrder(@org.springframework.web.bind.annotation.RequestParam java.lang.String utoken, @org.springframework.web.bind.annotation.RequestParam java.lang.String order) { if ((org.apache.commons.lang3.StringUtils.isBlank(utoken)) || (org.apache.commons.lang3.StringUtils.isBlank(order))) return cn.momia.mapi.web.response.ResponseMessage.BAD_REQUEST;  com.alibaba.fastjson.JSONObject orderJson = com.alibaba.fastjson.JSON.parseObject(order); <BUGS> orderJson.put("customerId", userServiceApi.USER.get(utoken)); <BUGE> dealServiceApi.ORDER.add(orderJson); return cn.momia.mapi.web.response.ResponseMessage.SUCCESS; } 
public double getCoefficientOfVariation() { int count = this.getCount(); if (count == 0) { throw new cfvbaibai.cardfantasy.CardFantasyRuntimeException("Cannot get square deviation on empty data set."); } double s = 0.0; double avg = this.getAverage(); <BUGS> <BUGE> for (double data : this.dataList) { s += (data - avg) * (data - avg); } return (java.lang.Math.sqrt((s / count))) / avg; } 
private void visitYieldExpression(com.google.javascript.rhino.Node n) { if (n.getParent().isExprResult()) { return ; } if ((decomposer.canExposeExpression(n)) != (ExpressionDecomposer.DecompositionType.UNDECOMPOSABLE)) { decomposer.exposeExpression(n); compiler.reportCodeChange(); }else { <BUGS> compiler.report(com.google.javascript.jscomp.JSError.make(currentStatement, Es6ToEs3Converter.CANNOT_CONVERT, "Undecomposable expression")); <BUGE> } } 
public com.badlogic.poker.core.logic.WinCondition checkCombination() { <BUGS> com.badlogic.poker.core.logic.Card[] cardsOnDesk = game.getTable(java.lang.Thread.currentThread().getStackTrace()[2].getMethodName()).getCardsOnDesk(); <BUGE> java.lang.System.out.println(("cards on table: " + (cardsOnDesk.length))); com.badlogic.poker.core.logic.WinCondition win = checkForKind(cardsOnDesk); game.drawTable(); game.changeMoney(win.getCost()); return win; } 
@java.lang.Override public int hashCode() { int hcode = java.util.Objects.hash(getDisplayName(), getSummandExpression()); <BUGS> java.util.Iterator<gov.va.med.srcalc.domain.model.ValueMatcher> vmIter = this.getMatchers().iterator(); <BUGE> while (vmIter.hasNext()) { hcode += vmIter.next().hashCode(); } return hcode; } 
public java.lang.String toString() { java.lang.String res = (((lieuxDepart) + " -> ") + (lieuxArrivee)) + " "; if ((hDepart) != null) res += "Depart : " + (hDepart);  if ((hArrivee) != null) <BUGS> res += "Arrivee : " + (hDepart); <BUGE>  return res; } 
@java.lang.Deprecated @android.support.annotation.Nullable public java.lang.String toLegacyString() { java.lang.String string = ((this) == (org.wikipedia.page.Namespace.MAIN)) ? null : this.name(); if (string != null) { <BUGS> org.wikipedia.util.StringUtil.capitalizeFirstChar(string.toLowerCase()); <BUGE> } return string; } 
public static java.util.List<org.eyeseetea.malariacare.data.database.model.Tab> getTabsBySession(java.lang.String module) { <BUGS> return new com.raizlabs.android.dbflow.sql.language.Select().from(org.eyeseetea.malariacare.data.database.model.Tab.class).where(Tab_Table.id_program.eq(org.eyeseetea.malariacare.data.database.utils.Session.getSurveyByModule(module).getProgram().getId_program())).orderBy(com.raizlabs.android.dbflow.sql.language.OrderBy.fromProperty(Tab_Table.order_pos)).queryList(); <BUGE> } 
public cs446.mezzo.music.playlists.Playlist getPlaylist(java.lang.String playlistName) { <BUGS> if (mUserPlaylists.containsKey(playlistName)) { return mUserPlaylists.get(playlistName); <BUGE> }else <BUGS> if (playlistName.equals(cs446.mezzo.music.playlists.PlaylistManager.FAVOURITES)) { return mFavourites; <BUGE> }  final cs446.mezzo.music.playlists.AutoPlaylist autoPlaylist = cs446.mezzo.music.playlists.AutoPlaylist.get(playlistName); if (autoPlaylist == null) { return null; } return autoPlaylist.getPlaylist(mLocalMusicFetcher, mStatCollector); } 
@java.lang.Override public java.lang.String generateUri(java.io.File file, java.lang.String id) { java.lang.String uri = file.toURI().toString(); <BUGS> <BUGE> uri = ((getOutputUriPrefix()) != null) ? (getOutputUriPrefix()) + uri : uri; uri = ((getOutputUriSuffix()) != null) ? uri + (getOutputUriSuffix()) : uri; <BUGS> uri = ((getOutputUriReplace()) != null) ? applyOutputUriReplace(uri, getOutputUriReplace()) : uri; <BUGE> return uri; } 
@java.lang.Override public void onSuccess(java.lang.Object object) { if (null != object) { heroes = ((com.example.pratik.dota2profile.beans.Heroes) (object)); for (com.example.pratik.dota2profile.beans.Hero i : heroes.getResult().getHeroes()) { heroesMap.put(java.lang.Integer.parseInt(i.getId()), i.getLocalizedName()); <BUGS> secondService(); <BUGE> } } } 
public void fakeBtnFb() { playSound(R.raw.touch_sound); if ((com.oic.game.ailatrieuphu.util.NetworkUtils.checkInternetConnection(this)) && (mSocketAltp.isConnected())) { int permissionCheck = android.support.v4.content.ContextCompat.checkSelfPermission(this, Manifest.permission.READ_PHONE_STATE); if (permissionCheck != (android.content.pm.PackageManager.PERMISSION_GRANTED)) { <BUGS> android.util.Log.e("TAG", "fakeBtnFb: get Permission"); <BUGE> android.support.v4.app.ActivityCompat.requestPermissions(this, new java.lang.String[]{ Manifest.permission.READ_PHONE_STATE }, com.oic.game.ailatrieuphu.ui.activity.LoginScreen.REQUEST_READ_PHONE_STATE); }else { mLoginButtonFb.performClick(); } }else { connectionDialog.show(); } } 
@java.lang.Override public void onClick(android.view.View view) { java.util.Calendar cal = java.util.Calendar.getInstance(); <BUGS> new android.app.DatePickerDialog(context, dateSetListener, cal.get(java.util.Calendar.YEAR), ((cal.get(java.util.Calendar.MONTH)) + 1), cal.get(java.util.Calendar.DAY_OF_MONTH)); <BUGE> } 
public final void setMaximized(boolean maximized) { <BUGS> if (isMaximizable()) { java.lang.System.out.println("is maximizable"); } <BUGE> if (((isMaximizable()) && (!(isMaximized()))) && maximized) { fireMaximizeEvent(); maximizedProperty.set(true); }else if ((!maximized) && (isMaximized())) { fireRestoreEvent(); maximizedProperty.set(false); }  } 
@java.lang.Override public cn.edu.nju.software.entity.User addOrUpdateUser(cn.edu.nju.software.entity.User user) { <BUGS> if (((user.getId()) != 0) && ((user.getId()) != null)) { <BUGE> boolean up = userDao.updateUser(user); return up ? user : null; } boolean res = userDao.saveUser(user); if (res) { user.setId(userDao.getNewestId()); return user; } return null; } 
@java.lang.Override protected void reset(float pos1, float pos2) { <BUGS> <BUGE> super.reset(pos1, pos2); inventory.reset(); <BUGS> squadSelectButton = mainButton.addSelectButton(this); <BUGE> this.setSelected(true); selectKey = com.esbjon.entities.Squad.handler.findOrAssignKey(this); this.stop(); } 
@java.lang.Override public void call(java.lang.reflect.Method method) { java.lang.Class<?>[] parameterTypes = method.getParameterTypes(); com.androidyuan.rxbus.component.Subscribe subscribeAnnotation = method.getAnnotation(com.androidyuan.rxbus.component.Subscribe.class); if (subscribeAnnotation != null) { java.lang.Class<?> eventType = parameterTypes[0]; java.lang.String key = eventType.getName(); <BUGS> com.androidyuan.rxbus.component.ThreadMode threadMode = subscribeAnnotation.threadMode(); <BUGE> putObject(key, subscriber); } } 
@java.lang.Override protected void onSaveInstanceState(android.os.Bundle outState) { super.onSaveInstanceState(outState); <BUGS> android.util.Log.d(com.cookbook.fenix.cookbook.CookBOOK.TEST, "life  onSave"); mImageDownloader.setRecipeAdapter(null); <BUGE> outState.putString("query", query); if ((mRecipeAdapter.getItemCount()) != 0) { mRecipeList = mRecipeAdapter.getData(); outState.putParcelableArrayList(BUNDLE_RECIPE_ARRAY, mRecipeList); } } 
private java.util.Date parsePubdateDate(java.lang.String dateStr, boolean tryAllFormat) { <BUGS> <BUGE> for (java.text.DateFormat format : com.rssreader.utils.TimeUtils.PUBDATE_DATE_FORMATS) { try { java.util.Date result = format.parse(dateStr); <BUGS> return (result.getTime()) > (mNow) ? new java.util.Date(mNow) : result; <BUGE> } catch (java.text.ParseException e) { android.util.Log.e(com.rssreader.utils.TimeUtils.TAG, "Wrong pubdate format"); } } <BUGS> if (tryAllFormat) return parseUpdateDate(dateStr, false); else return null;  <BUGE> } 
public static boolean matchTypes(com.jetbrains.ther.typing.types.TheRType type, com.jetbrains.ther.typing.types.TheRType replacementType) { if (type instanceof com.jetbrains.ther.typing.types.TheRUnionType) { return ((com.jetbrains.ther.typing.types.TheRUnionType) (type)).contains(replacementType); } <BUGS> return (type.equals(replacementType)) || (com.jetbrains.ther.typing.TheRTypeProvider.isSubtype(type, replacementType)); <BUGE> } 
@org.springframework.web.bind.annotation.RequestMapping <BUGS> public java.lang.String list(org.springframework.ui.Model uiModel, org.springframework.data.domain.Pageable pageable) { <BUGE> org.springframework.data.domain.Page<com.appspot.gardemallorie.domain.Location> page = locationService.findAllLocations(pageable); uiModel.addAttribute("locations", page.getContent()); uiModel.addAttribute("maxPages", page.getTotalPages()); return "locations/list"; } 
public void onBreakBlock(net.minecraft.world.World worldIn) { if (worldIn.isRemote) return ;  net.minecraftforge.fml.common.FMLLog.info("onBreakBlock in TileEntity"); for (com.balrog.InfernalTech.energy.IEnergyChannel channel : this.channels) { <BUGS> channel.removeChannelConnection(this); channel.invalidate(); <BUGE> } this.channels.clear(); this.receivers = new cofh.api.energy.IEnergyReceiver[6]; com.balrog.InfernalTech.energy.EnergyNetwork network = this.getNetwork(); if (network != null) network.destroy();  } 
@java.lang.Override public void onClick(android.content.DialogInterface dialog, int which) { userInput.setMax(maxResults.getValue()); userInput.setRadius(radius.getValue()); savedSettings.edit().putInt("se.deltazulu.www.sl_closeby.maxResults", userInput.getMax()).apply(); savedSettings.edit().putInt("se.deltazulu.www.sl_closeby.radius", userInput.getRadius()).apply(); getStationsList(); <BUGS> android.util.Log.d(se.deltazulu.www.sl_closeby.MainActivity.TAG, "onClick: 1"); <BUGE> } 
@java.lang.Override public java.util.List<com.audit.bl.beans.Loan> getUserLoans(com.audit.bl.beans.User user) { java.util.List<com.audit.bl.beans.Loan> loanList = null; java.lang.String sql = loanSqls.getProperty("user.select"); org.hibernate.Query query = getSessionFactory().getCurrentSession().createQuery(sql); query.setLong("fromUser", user.getUserId()); query.setLong("toUser", user.getUserId()); <BUGS> query.setMaxResults(50); <BUGE> loanList = ((java.util.List<com.audit.bl.beans.Loan>) (query.list())); return loanList; } 
private void addHistoryToDb() { com.example.run.RunHistory newHistory = new com.example.run.RunHistory(mStartTime.getTime(), mRunnerData.getTime(), mRunnerData.getDistance(), mRunnerFilename); com.example.run.DatabaseHelper dbHelper = new com.example.run.DatabaseHelper(this); if ((mRouteId) == (HistoryActivity.NO_ROUTE_FLAG)) { dbHelper.addHistory(newHistory); }else if ((mRouteId) == (HistoryActivity.NEW_ROUTE_FLAG)) { <BUGS> <BUGE> dbHelper.appendRunToRoute(newHistory, mRouteId); <BUGS> }else { dbHelper.newRoute(newHistory, com.example.run.MapsActivity.mRouteNamePrefix); <BUGE> }  } 
public java.lang.Thread addPerson(int sourceFloor, int destinationFloor) { <BUGS> java.lang.Thread person = new java.lang.Thread(new com.ru.usty.elevator.Person(sourceFloor, destinationFloor)); <BUGE> person.start(); personCount.set(sourceFloor, ((personCount.get(sourceFloor)) + 1)); return null; } 
@java.lang.Override public void run() { while (!(finished)) { try { java.lang.Object response = inputStream.readObject(); java.lang.System.out.println("Response recieved "); if (isUpdate(((rpcprotocol.Response) (response)))) { }else { try { queueResponses.put(((rpcprotocol.Response) (response))); } catch (java.lang.InterruptedException e) { e.printStackTrace(); } } } catch (java.io.IOException | java.lang.ClassNotFoundException ex) { java.lang.System.out.println("Client reader stopped"); <BUGS> <BUGE> } } } 
@org.junit.Test public void getUsersResultsAllUsernamesNotEmpty() { user.UserSearch searcher = new user.UserSearch(""); java.util.ArrayList<user.User> users = ((java.util.ArrayList<user.User>) (searcher.getUsers())); for (user.User user : users) { assertFalse("".equals(user.getUsername())); <BUGS> java.lang.System.out.println(user.getUsername()); <BUGE> } } 
public com.bftcom.timesheet.export.WorklogExportParams projects(java.util.Collection<java.lang.String> projectNames) { <BUGS> if (projectNames == null) { <BUGE> this.projects = java.util.Collections.emptyList(); }else { this.projects = transformProjects(((java.lang.String[]) (projectNames.toArray()))); } return this; } 
private io.github.mariandcrafter.devathlon2.runde1.game.GameMap getRandomFreeMap() { java.util.List<io.github.mariandcrafter.devathlon2.runde1.game.GameMap> maps = new java.util.ArrayList<io.github.mariandcrafter.devathlon2.runde1.game.GameMap>(io.github.mariandcrafter.devathlon2.runde1.Main.getConfiguration().getGameMaps()); for (io.github.mariandcrafter.devathlon2.runde1.game.Match match : matches) { maps.remove(match.getGameMap()); } <BUGS> <BUGE> return maps.get(this.random.nextInt(maps.size())); } 
@java.lang.Override public void onAccountCreatorIsPhoneNumberUsed(org.linphone.core.LinphoneAccountCreator accountCreator, org.linphone.core.LinphoneAccountCreator.Status status) { <BUGS> <BUGE> if ((status.equals(LinphoneAccountCreator.Status.PhoneNumberUsedAccount)) || (status.equals(LinphoneAccountCreator.Status.PhoneNumberUsedAlias))) { accountCreator.recoverPhoneAccount(); }else { apply.setEnabled(true); org.linphone.LinphoneUtils.displayErrorAlert(org.linphone.LinphoneUtils.errorForStatus(status), org.linphone.assistant.AssistantActivity.instance()); } } 
<BUGS> private void scannerQrCode(android.app.Activity activity) { com.google.zxing.integration.android.IntentIntegrator integrator = new com.google.zxing.integration.android.IntentIntegrator(activity); <BUGE> integrator.setDesiredBarcodeFormats(IntentIntegrator.QR_CODE_TYPES); integrator.setPrompt("Scan QR"); integrator.setCameraId(0); integrator.setBeepEnabled(false); integrator.setBarcodeImageEnabled(false); integrator.initiateScan(); } 
public boolean checkTouch(float coordX, float coordY) { <BUGS> return ((coordX >= (offsetX)) && (coordX <= ((offsetX) + (getWidth())))) && ((coordY >= (offsetY)) && (coordY <= ((offsetY) + (getHeight())))); <BUGE> } 
private Storage.Objects.Delete deleteRequest(com.google.api.services.storage.model.StorageObject blob, java.util.Map<com.google.gcloud.spi.Option, ?> options) throws java.io.IOException { <BUGS> return storage.objects().delete(blob.getBucket(), blob.getName()).setIfMetagenerationMatch(Option.IF_METAGENERATION_MATCH.getLong(options)).setIfMetagenerationNotMatch(Option.IF_METAGENERATION_NOT_MATCH.getLong(options)).setIfGenerationMatch(Option.IF_GENERATION_MATCH.getLong(options)).setIfGenerationMatch(100L).setIfGenerationNotMatch(Option.IF_GENERATION_NOT_MATCH.getLong(options)); <BUGE> } 
@java.lang.Override public void loadMoreFinish(boolean emptyResult, boolean hasMore) { mLoadError = false; mListEmpty = emptyResult; mIsLoading = false; mHasMore = hasMore; if ((mLoadMoreUIHandler) != null) { mLoadMoreUIHandler.onLoadFinish(this, emptyResult, hasMore); } <BUGS> if (hasMore) { mFooterView.setVisibility(com.being.base.ui.widget.ptr.loadmore.VISIBLE); }else { mFooterView.setVisibility(com.being.base.ui.widget.ptr.loadmore.GONE); <BUGE> } } 
public int getScaleQual() { <BUGS> digilib.image.ImageJobDescription.logger.debug("get_scaleQual()"); <BUGE> int qual = dlConfig.getAsInt("default-quality"); if (hasOption("q0")) qual = 0; else if (hasOption("q1")) qual = 1; else if (hasOption("q2")) qual = 2;    return qual; } 
@java.lang.Override protected void onResume() { super.onResume(); int orderId = getIntent().getIntExtra(OrderStatusNotification.ORDER_ID, (-1)); <BUGS> java.lang.System.out.println(("Intent with order ID " + orderId)); <BUGE> if (orderId != (-1)) navTo(new activity.OrderDetailFragment().setOrder(new model.Order(orderId)));  } 
<BUGS> private void displayTestCollection(final com.google.gwt.user.client.ui.Panel testsPanel) { <BUGE> currentActorOption.loadTests(new com.google.gwt.user.client.rpc.AsyncCallback<java.util.List<gov.nist.toolkit.results.client.TestInstance>>() { @java.lang.Override public void onFailure(java.lang.Throwable throwable) { new gov.nist.toolkit.xdstools2.client.widgets.PopupMessage(("getTestlogListing: " + (throwable.getMessage()))); }  @java.lang.Override public void onSuccess(java.util.List<gov.nist.toolkit.results.client.TestInstance> testInstances) { loadingMessage.setHTML("Loading..."); displayTests(testsPanel, testInstances, allowRun()); } }); } 
public void displayMaze(algorithms.mazeGenerators.Maze3d m, java.lang.String name) { maze = new view.Maze3dDisplay(shell, org.eclipse.swt.SWT.BORDER, this); maze.setLayoutData(new org.eclipse.swt.layout.GridData(org.eclipse.swt.SWT.FILL, org.eclipse.swt.SWT.FILL, true, true, 1, 1)); <BUGS> <BUGE> maze.initMaze(m, name, "images/fly.png"); maze.moveAbove(welcome); welcome.dispose(); shell.layout(true); <BUGS> menu.displayGoalGuide(); menu.setGoalFloorText(m.getGoalPosition().z); <BUGE> } 
@java.lang.Override public boolean onAreaTouched(org.andengine.input.touch.TouchEvent pSceneTouchEvent, float pTouchAreaLocalX, float pTouchAreaLocalY) { if (pSceneTouchEvent.isActionDown()) { <BUGS> if (isVisible()) { setCurrentTileIndex(1); } <BUGE> } if (pSceneTouchEvent.isActionUp()) { <BUGS> if (isVisible()) { setCurrentTileIndex(0); setPause(true); } <BUGE> } return true; } 
@java.lang.Override public void onSuccess(long reqId, java.lang.String header, java.lang.String sequence, java.util.List<biospectra.classify.beans.SearchResultEntry> result, biospectra.classify.beans.ClassificationResult.ClassificationResultType type, java.lang.String taxonRank) { if ((responseHandler) != null) { <BUGS> synchronized(responseHandler) { responseHandler.onSuccess(reqId, header, sequence, result, type, taxonRank); } <BUGE> }else { biospectra.classify.ClassifierClient.LOG.error("responseHandler is not set"); } } 
@java.lang.Override public void onBackPressed() { java.lang.String displayedFragment = contactsModel.getProperty(io.craigmiller160.contacts5.util.ContactsConstants.DISPLAYED_FRAGMENT, java.lang.String.class); if ((displayedFragment != null) && (displayedFragment.equals(io.craigmiller160.contacts5.util.ContactsConstants.TABS_FRAGMENT_TAG))) { <BUGS> <BUGE> backAction(); <BUGS> }else { finish(); <BUGE> } } 
@java.lang.Override public com.firefly.client.http2.HTTPOutputStream sendRequestWithContinuation(com.firefly.client.http2.MetaData.Request request, com.firefly.client.http2.ClientHTTPHandler handler) { request.getFields().put(HttpHeader.EXPECT, HttpHeaderValue.CONTINUE); com.firefly.client.http2.HTTPOutputStream outputStream = getHTTPOutputStream(request, handler); try { outputStream.commit(); } catch (java.io.IOException e) { <BUGS> generator.reset(); <BUGE> com.firefly.client.http2.HTTP1ClientConnection.log.error("client generates the HTTP message exception", e); } return outputStream; } 
private void ensureConnection() throws java.sql.SQLException { boolean bclosed; try { bclosed = ((m_c) == null) || (m_c.isClosed()); } catch (java.sql.SQLException e) { bclosed = true; } if (bclosed) { <BUGS> try { connect(); } catch (java.sql.SQLException e) { if (((m_c) == null) || (m_c.isClosed())) { connect(); } } <BUGE> } } 
public it.blogspot.geoframe.SewerPipeDimensioning.Pipe run(final it.blogspot.geoframe.SewerPipeDimensioning.Pipe pipe) { setPipe(pipe); if ((pipeSlope) >= (minSlope)) { <BUGS> pipe.buildPipe(elevationEndPoint, computeDiameter(pipeSlope), it.blogspot.geoframe.SewerPipeDimensioning.SewerPipeDimensioning.fillCoefficient, computeVelocity()); <BUGE> }else { <BUGS> pipe.buildPipe(computeElevationEndPoint(minSlope), diameter, it.blogspot.geoframe.SewerPipeDimensioning.SewerPipeDimensioning.fillCoefficient, computeVelocity()); <BUGE> } <BUGS> return pipe; <BUGE> } 
private java.lang.StringBuilder getHtmlBody() { java.lang.StringBuilder html = new java.lang.StringBuilder(); <BUGS> html.append("<tbody>"); for (com.github.dandelion.datatables.core.html.HtmlRow row : this.body) { html.append(row.toHtml()); <BUGE> } <BUGS> html.append("</tbody>"); <BUGE> return html; } 
@java.lang.Override public void execute(java.lang.String[] args) throws org.neo4j.commandline.admin.CommandFailed, org.neo4j.commandline.admin.IncorrectUsage { org.neo4j.helpers.Args parsedArgs = validateArgs(args); try { setPassword(parsedArgs.orphans().get(0)); <BUGS> } catch (org.neo4j.commandline.admin.IncorrectUsage e) { <BUGE> throw e; } catch (java.lang.Throwable throwable) { <BUGS> throw new org.neo4j.commandline.admin.CommandFailed(("Failed to execute 'set-initial-password' command: " + (throwable.getMessage())), new java.lang.RuntimeException(throwable)); <BUGE> } } 
@java.lang.Override public void onClick(android.view.View v) { <BUGS> java.lang.System.out.append("Onclick choose call"); <BUGE> android.content.Intent i = new android.content.Intent(); i.putExtra(this.getString(R.string.intent_extra_directory), m_directory.getCurrentDirectory().getAbsolutePath()); this.setResult(Activity.RESULT_OK, i); this.finish(); } 
protected void fillValues(java.util.List<java.lang.Object> valueList, java.lang.String sql, java.sql.PreparedStatement stmt) { <BUGS> int index = 1; <BUGE> for (java.lang.Object o : valueList) { try { <BUGS> stmt.setObject((index++), o); <BUGE> } catch (java.lang.Exception e) { throw new java.lang.IllegalArgumentException((((((((e.getMessage()) + " - Index: ") + index) + ", Value: ") + o) + ", Query: ") + sql), e); } } } 
private void showMoreBooks(int itemsPerPage) { int start = lessBooks.size(); <BUGS> int end = java.lang.Math.min(((lessBooks.size()) + itemsPerPage), books.size()); <BUGE> for (int i = start; i < end; i++) { lessBooks.add(books.get(i)); } } 
@java.lang.Override public void onRestoreInstanceState(android.os.Bundle savedInstanceState) { super.onRestoreInstanceState(savedInstanceState); long progressTime = savedInstanceState.getLong(app.park.com.vr.VrVideoActivity.STATE_PROGRESS_TIME); mVrVideoView.seekTo(progressTime); isPaused = savedInstanceState.getBoolean(app.park.com.vr.VrVideoActivity.STATE_IS_PAUSED); if (isPaused) { <BUGS> mVrVideoView.pauseVideo(); <BUGE> } } 
@java.lang.Override public java.lang.String export(be.nikiroo.gofetch.data.Story story) { java.lang.StringBuilder builder = new java.lang.StringBuilder(); <BUGS> append(builder, story, true); <BUGE> builder.append("i\r\n"); if ((story.getComments()) != null) { for (be.nikiroo.gofetch.data.Comment comment : story.getComments()) { append(builder, comment, ""); } } builder.append("i\r\n"); return builder.toString(); } 
@java.lang.Override public void start(javafx.stage.Stage primaryStage) { looksBKSTR(); <BUGS> cB.getSelectionModel().selectedItemProperty().addListener(( v, oldValue, newValue) -> cbl.listener(cB, tA, bP)); <BUGE> primaryStage.getIcons().add(new javafx.scene.image.Image("itemsReq/utrgv.png")); primaryStage.setTitle("Important Information"); primaryStage.setMaximized(true); primaryStage.setScene(scene); primaryStage.show(); } 
private static java.lang.String getPath(@org.jetbrains.annotations.NotNull com.intellij.openapi.vfs.VirtualFile root, @org.jetbrains.annotations.NotNull com.intellij.openapi.vfs.VirtualFile file) { java.lang.String path = com.intellij.openapi.util.text.StringUtil.notNullize(mobi.hsz.idea.gitignore.util.Utils.getRelativePath(root, file)); <BUGS> path = com.intellij.openapi.util.text.StringUtil.escapeChar(path, '['); path = com.intellij.openapi.util.text.StringUtil.escapeChar(path, ']'); <BUGE> path = com.intellij.openapi.util.text.StringUtil.trimLeading(path, VfsUtil.VFS_PATH_SEPARATOR); return (com.intellij.openapi.vfs.VfsUtil.VFS_PATH_SEPARATOR) + path; } 
public static play.mvc.Result tracks() { <BUGS> play.data.Form<models.TrackRegistration> form = play.data.Form.form(models.TrackRegistration.class).bindFromRequest(); <BUGE> java.lang.String currentUserAddress = models.utility.AST.getUserAddress(); controllers.Tracks.getTrack(); return ok(views.html.member.tracks.render(form, currentUserAddress)); } 
private boolean isGetter(java.lang.reflect.Method method, java.lang.String fieldName) { <BUGS> return ((method.getName().startsWith("get")) || (method.getName().startsWith("is"))) && (method.getName().endsWith(org.redisson.liveobject.core.AccessorInterceptor.getFieldNameSuffix(fieldName))); <BUGE> } 
@java.lang.Override public boolean onTouch(android.view.View v, android.view.MotionEvent event) { switch (event.getAction()) { case android.view.MotionEvent.ACTION_DOWN : this.x = event.getX(); this.y = event.getY(); return true; case android.view.MotionEvent.ACTION_UP : <BUGS> case android.view.MotionEvent.ACTION_CANCEL : <BUGE> this.detectMovement(event.getX(), event.getY()); return true; default : return false; } } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); <BUGS> GenerateSomeFriends(); <BUGE> android.support.v4.view.ViewPager viewPager = ((android.support.v4.view.ViewPager) (findViewById(R.id.vp_mainActivity))); com.example.emcako.birthdayreminder.MainActivity.mainPageAdapter = new com.example.emcako.birthdayreminder.MainActivity.MainPageAdapter(getSupportFragmentManager()); viewPager.setAdapter(com.example.emcako.birthdayreminder.MainActivity.mainPageAdapter); } 
@net.canarymod.commandsys.TabComplete(commands = { "disableplugin" , "reloadplugin" }) public java.util.List<java.lang.String> matchPluginName(net.canarymod.chat.MessageReceiver caller, java.lang.String[] args) { <BUGS> return (args.length) == 1 ? net.canarymod.commandsys.TabCompleteHelper.matchTo(args, net.canarymod.Canary.pluginManager().getPluginNames().toArray(new java.lang.String[0])) : null; <BUGE> } 
@java.lang.Override protected void onNewIntent(android.content.Intent intent) { super.onNewIntent(intent); if (intent.hasExtra(info.schnatterer.nusic.android.activities.MainActivity.EXTRA_ACTIVE_TAB)) { <BUGS> info.schnatterer.nusic.android.activities.MainActivity.currentTab = ((info.schnatterer.nusic.android.activities.MainActivity.TabDefinition) (getIntent().getExtras().get(info.schnatterer.nusic.android.activities.MainActivity.EXTRA_ACTIVE_TAB))); <BUGE> android.support.v4.view.ViewPager pager = ((android.support.v4.view.ViewPager) (findViewById(R.id.mainPager))); pager.setCurrentItem(info.schnatterer.nusic.android.activities.MainActivity.currentTab.position); } } 
@java.lang.Override public int onStartCommand(android.content.Intent intent, int flags, int startId) { android.util.Log.i("LocalService", ((("Received start id " + startId) + ": ") + intent)); mIsPersistent = true; <BUGS> android.content.Intent target = intent.getParcelableExtra("notificationTarget"); showNotification(target); <BUGE> return START_STICKY; } 
@java.lang.Override public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) { view = inflater.inflate(R.layout.memory_add_wrapper, container, false); butterknife.ButterKnife.bind(this, view); _selectedItem = ((com.oneupapplications.bucketapp.API.DataModel.Memory) (getActivity().getIntent().getSerializableExtra(MemoryDetailActivity.EXTRA_MEMORY_ID))); setupNavigation(); fillItemView(_selectedItem); <BUGS> if ((_selectedItem.getMediaCount()) > 0) { GetMessageMedia(); } <BUGE> return view; } 
private <T> T getObject(java.lang.String url, java.lang.Class<T> type) { this.services = client.target(((com.excilys.formation.computerdb.ui.RestCLI.BASE_URL) + url)); <BUGS> <BUGE> javax.ws.rs.client.Invocation.Builder request = this.services.request(MediaType.APPLICATION_JSON); javax.ws.rs.core.Response response = request.get(); if ((response.getStatus()) == 200) { return response.readEntity(type); } return null; } 
private static double getDouble(java.lang.String query) { java.sql.ResultSet result; try (data.DatabaseConnection connection = new data.DatabaseConnection()) { result = connection.query(query); result.next(); return result.getDouble(1); } catch (java.lang.Exception e) { <BUGS> e.printStackTrace(); <BUGE> return -999999999; } } 
private com.alliander.osgp.dto.valueobjects.smartmetering.AmrProfileStatusCodeDto readAmrProfileStatusCode(final org.openmuc.jdlms.datatypes.DataObject amrProfileStatusData) throws org.osgp.adapter.protocol.dlms.exceptions.ProtocolAdapterException { <BUGS> com.alliander.osgp.dto.valueobjects.smartmetering.AmrProfileStatusCodeDto amrProfileStatusCode = null; <BUGE> if (!(amrProfileStatusData.isNumber())) { throw new org.osgp.adapter.protocol.dlms.exceptions.ProtocolAdapterException("Could not read AMR profile register data. Invalid data type."); } final java.util.Set<com.alliander.osgp.dto.valueobjects.smartmetering.AmrProfileStatusCodeFlagDto> flags = this.amrProfileStatusCodeHelperService.toAmrProfileStatusCodeFlags(((java.lang.Number) (amrProfileStatusData.value()))); <BUGS> amrProfileStatusCode = new com.alliander.osgp.dto.valueobjects.smartmetering.AmrProfileStatusCodeDto(flags); return amrProfileStatusCode; <BUGE> } 
@java.lang.Deprecated public java.util.List<teammates.common.datatransfer.attributes.StudentProfileAttributes> getAllStudentProfiles() { java.util.List<teammates.common.datatransfer.attributes.StudentProfileAttributes> list = new java.util.LinkedList<>(); java.util.List<teammates.storage.entity.StudentProfile> entities = getStudentProfileEntities(); for (teammates.storage.entity.StudentProfile student : entities) { <BUGS> if (!(teammates.storage.api.JDOHelper.isDeleted(student))) { list.add(new teammates.common.datatransfer.attributes.StudentProfileAttributes(student)); } <BUGE> } return list; } 
private void init() { android.graphics.Point displaySize = new android.graphics.Point(); getWindowManager().getDefaultDisplay().getSize(displaySize); fr.pchab.AndroidRTC.PeerConnectionParameters params = new fr.pchab.AndroidRTC.PeerConnectionParameters(true, false, displaySize.x, displaySize.y, 30, 1, fr.pchab.AndroidRTC.RTCActivity.VIDEO_CODEC_VP9, true, 1, fr.pchab.AndroidRTC.RTCActivity.AUDIO_CODEC_OPUS, true); org.webrtc.PeerConnectionFactory.initializeAndroidGlobals(this, true, true, params.videoCodecHwAcceleration, org.webrtc.VideoRendererGui.getEGLContext()); <BUGS> client = new fr.pchab.AndroidRTC.WebRtcClient(this, mSocketAddress); <BUGE> } 
@java.lang.Override public int newNet(java.lang.String shortName, int cloneId, int width) { java.lang.System.out.println(((((("newNet " + shortName) + " ") + cloneId) + " ") + width)); <BUGS> VCDLoaderTest.ExpectTraceBuilder.Event event = fEventList.elementAt(((fCurrentEvent)++)); <BUGE> assertEquals(event.fType, VCDLoaderTest.ExpectTraceBuilder.EXPECT_NET); assertEquals(event.fName, shortName); assertEquals(event.fId, cloneId); assertEquals(event.fWidth, width); return (fNextNetId)++; } 
public void endSection(int section) { lcm.spy.ObjectPanel.Section cs = sections.get(section); <BUGS> cs.y1 = y; <BUGE> if ((collapse_depth) == 0) { unindent(); } if (sections.get(section).collapsed) { (collapse_depth)--; } spacer(); endColorBlock(); spacer(); } 
private static java.lang.Boolean ReadVerifyStoreDumpPage(net.basov.nfc.NFCaDump dump, java.lang.String line) { java.lang.Boolean rc = false; <BUGS> line.trim(); line.replace(" ", ""); <BUGE> if ((line.matches("-?[0-9a-fA-F]+")) && ((line.length()) == 8)) { dump.addPage(net.basov.util.FileIO.hexStringToByteArray(line)); rc = true; }else { dump.appendRemark((("E: :" + line) + ":\n")); rc = false; } return rc; } 
@java.lang.Override public java.lang.Void call() throws java.lang.Exception { try { org.apache.storm.drpc.DRPCInvocationsClient c = new org.apache.storm.drpc.DRPCInvocationsClient(conf, server, port); synchronized(_clients) { _clients.add(c); } } catch (java.lang.Exception e) { org.apache.storm.drpc.DRPCSpout.LOG.warn("Can't connect to some drpcserver when init drpcspout,please check your cluster.", e); } <BUGS> return null; <BUGE> } 
public boolean creatObject(java.lang.String name, java.lang.String modelPath, int coordinateSystemID, int x, int y) { <BUGS> <BUGE> view.queueEvent(new gameSystem.gameObjectSystem.ObjectCreator(sdk, modelPath, coordinateSystemID, objects, OIR.getSoldierInfoByName(name), x, y)); return false; } 
public java.util.List<de.uni_freiburg.informatik.ultimate.plugins.analysis.abstractinterpretationv2.domain.nonrelational.interval.IntervalDomainState> process(final de.uni_freiburg.informatik.ultimate.plugins.analysis.abstractinterpretationv2.domain.nonrelational.interval.IntervalDomainState oldState, final de.uni_freiburg.informatik.ultimate.model.boogie.ast.Statement statement) { mReturnState = new java.util.ArrayList<>(); assert oldState != null; assert statement != null; mOldState = oldState; mLhsVariable = null; processStatement(statement); <BUGS> assert (!((oldState.getVariables().size()) != 0)) || ((mReturnState.size()) != 0); <BUGE> return mReturnState; } 
public void setDockBatteryController(com.android.systemui.statusbar.policy.DockBatteryController dockBatteryController) { com.android.systemui.DockBatteryMeterView v = ((com.android.systemui.DockBatteryMeterView) (findViewById(R.id.dock_battery))); if (dockBatteryController != null) { v.setBatteryStateRegistar(dockBatteryController); <BUGS> mDockBatteryLevel.setBatteryStateRegistar(dockBatteryController); <BUGE> }else { if (v != null) { removeView(v); } if ((mDockBatteryLevel) != null) { removeView(mDockBatteryLevel); mDockBatteryLevel = null; } } } 
public void playMusic(android.view.View view) { if (DEBUG) android.util.Log.d(com.vibejukebox.jukebox.activities.JukeboxPlaylistActivity.TAG, "playMusic -- (View)");  <BUGS> mChangeTrack = false; <BUGE> android.widget.ImageButton playButton = ((android.widget.ImageButton) (findViewById(R.id.playButton))); if (mCurrentPlayerState.playing) { <BUGS> <BUGE> mPlayer.pause(); playButton.setImageDrawable(getResources().getDrawable(R.drawable.play)); }else { mPlayer.resume(); <BUGS> <BUGE> playButton.setImageDrawable(getResources().getDrawable(R.drawable.pause)); } } 
private void populateContextFromAuthId(java.lang.String authId) { try { java.lang.String sessionId = authIdHelper.reconstructAuthId(authId).getClaimsSet().getClaim(org.forgerock.openam.core.rest.authn.SESSION_ID, java.lang.String.class); if (org.apache.commons.lang.StringUtils.isEmpty(sessionId)) { return ; } java.lang.String contextId = getContextIdFromSessionId(sessionId); if (org.apache.commons.lang.StringUtils.isNotEmpty(contextId)) { <BUGS> org.forgerock.openam.audit.context.AuditRequestContext.putProperty(org.forgerock.openam.core.rest.authn.CONTEXT_ID, contextId); <BUGE> } } catch (org.forgerock.openam.core.rest.authn.exceptions.RestAuthException e) { org.forgerock.openam.core.rest.authn.AuthenticationAccessAuditFilter.debug.warning("No session ID found when trying to audit an authentication request."); } } 
public boolean collidesWithFace(entities.Ball b) { org.lwjgl.util.vector.Vector3f closest = toolbox.Maths.closestPtPointTriangle(b.getPosition(), point1, point2, point3); org.lwjgl.util.vector.Vector3f.sub(b.getPosition(), closest, dist); <BUGS> java.lang.System.out.println(((("Distance between ball and " + (this)) + ": ") + (dist.length()))); <BUGE> if ((dist.length()) <= (entities.Ball.RADIUS)) return true;  return false; } 
@java.lang.Override public void onClick(android.view.View v) { <BUGS> if (((makeupCount) + 1) < (saveBitmap.size())) { <BUGE> (makeupCount)++; temp = saveBitmap.get(makeupCount).copy(temp.getConfig(), true); imageView.setImageBitmap(temp); android.util.Log.d(((fyp.hkust.facet.activity.ColorizeFaceActivity.TAG) + " redo "), (((saveBitmap.size()) + " ") + (makeupCount))); } } 
public void doPowerup(java.lang.String which) { if (which.equals("left")) { if (GameLogic.leftPlayerPowerup.isEmpty()) return ; <BUGS> <BUGE>  <BUGS> startLeftPowerup(GameLogic.leftPlayerPowerup.pop()); <BUGE> }else if (which.equals("right")) { if (GameLogic.rightPlayerPowerup.isEmpty()) return ; <BUGS> <BUGE>  <BUGS> startRightPowerup(GameLogic.rightPlayerPowerup.pop()); <BUGE> }  } 
private void firstRun(int currentVersion) { android.content.Intent activity = new android.content.Intent(this, es.ugr.swad.swadroid.sync.AccountAuthenticator.class); es.ugr.swad.swadroid.preferences.Preferences.setSyncTime(java.lang.String.valueOf(Constants.DEFAULT_SYNC_TIME)); startActivity(activity); es.ugr.swad.swadroid.preferences.Preferences.setLastVersion(currentVersion); firstRun = true; <BUGS> initializeSelectedCourse(); <BUGE> } 
public void Proceed() { turnState = org.tilegames.hexicube.cah.client.neoteny.gameState.GameLogic.TurnState.ADDING_TO_PILE; org.tilegames.hexicube.cah.client.neoteny.gameLayers.CardsLayer.ClearPile(); org.tilegames.hexicube.cah.client.neoteny.gameLayers.CardGame.SetNotification(""); subCards.clear(); <BUGS> if ((czar.id) != (PlayerOptions.ID)) { org.tilegames.hexicube.cah.client.neoteny.gameLayers.PlayerHand.SetActive(true); } <BUGE> for (org.tilegames.hexicube.cah.client.neoteny.gameState.DummyPlayer dum : dummies) { if ((czar.id) != (dum.me.id)) { dum.RequestCardSubmit(); } } } 
public static void setGoodNight(org.springframework.scheduling.TaskScheduler scheduler, resources.internal.Hue hue) { if (hue.getScene().getGoodNight().isEnabled()) { <BUGS> scheduler.schedule(com.sonie.web.util.RunnableUtil.setGoodNight(com.sonie.web.util.CronJobUtil.LOG, hue), new org.springframework.scheduling.support.CronTrigger(com.sonie.web.util.DateUtil.getCronDate(hue.getScene().getGoodMorning().getTime()))); <BUGE> } } 
private static Chat.Builder buildMockChat() { java.util.Random random = new java.util.Random(); sjchat.messages.Chat.Builder chatBuilder = sjchat.messages.Chat.newBuilder(); <BUGS> chatBuilder.setId(java.lang.Math.abs(random.nextInt(100))); <BUGE> chatBuilder.setTitle(("Test chat " + (chatBuilder.getId()))); return chatBuilder; } 
@java.lang.Override public char[] getPassword() throws java.io.IOException { char[] password = new char[0]; java.lang.System.out.print("Password: "); final jline.console.ConsoleReader reader = new jline.console.ConsoleReader(); <BUGS> final java.lang.String passwordStr = reader.readLine('*'); <BUGE> password = passwordStr.toCharArray(); <BUGS> password = null; <BUGE> java.lang.System.gc(); return password; } 
@java.lang.Override public void transactionEnd() { javax.persistence.EntityManager em = br.com.criativasoft.opendevice.middleware.persistence.HibernateProvider.getInstance(); br.com.criativasoft.opendevice.middleware.persistence.HibernateProvider.setInstance(null); javax.persistence.EntityTransaction local = em.getTransaction(); try { if (local.isActive()) local.commit();  } catch (java.lang.RuntimeException e) { if ((local != null) && (local.isActive())) local.rollback();  throw e; } finally { <BUGS> em.close(); <BUGE> } } 
public void run() { while ((gameRunning) && (!(gameOver))) { run_game(); try { java.lang.Thread.sleep(com.se.softwareEngineering.gameEngine.GameEngine.gameSpeed); } catch (java.lang.Throwable t) { if (com.se.softwareEngineering.gameEngine.GameEngine.debug) { java.lang.System.err.println(t); } } } <BUGS> finish(); <BUGE> } 
@java.lang.Override public void render(float delta) { Gdx.gl.glClearColor(0, 0, 0, 1); Gdx.gl.glClear(GL30.GL_COLOR_BUFFER_BIT); <BUGS> game.batch.setTransformMatrix(camera.view); <BUGE> game.batch.setProjectionMatrix(camera.combined); <BUGS> game.shapeRenderer.setTransformMatrix(camera.view); <BUGE> game.shapeRenderer.setProjectionMatrix(camera.combined); map.draw(game.batch); entityManager.draw(); debugRenderer.render(world, camera.combined); } 
@org.junit.Test public void testStart() { java.lang.System.out.println("Testing OrionCKANSink.start"); <BUGS> java.lang.String attrPersistence = "row"; java.lang.String enableGrouping = "true"; <BUGE> org.apache.flume.Context context = createContext(attrPersistence, enableGrouping); sink.configure(context); sink.setChannel(new org.apache.flume.channel.MemoryChannel()); sink.start(); assertTrue(((sink.getPersistenceBackend()) != null)); assertEquals(LifecycleState.START, sink.getLifecycleState()); } 
@org.junit.Test public void testCreateArtWithNullCreationDate() { thrown.expect(exceptions.ConstraintViolationException.class); thrown.expectMessage(org.hamcrest.core.StringStartsWith.startsWith("Validation failed")); thrown.expectMessage(org.hamcrest.CoreMatchers.containsString("Please provide creation date or use right constructor")); <BUGS> dto.Art art = new dto.Art.ArtBuilder("Mona lisa", constants.ArtType.PAINTING, "Leonard Di Vinci", null).build(); <BUGE> } 
@java.lang.SuppressWarnings(value = "PMD") @org.junit.Test public void securityTest3() { <BUGS> request = makeRequest(3, nc.sumy.edu.webcontainer.sequrity.ServerSecurityTest.IP_VAR1, nc.sumy.edu.webcontainer.sequrity.ServerSecurityTest.NC_COM); <BUGE> nc.sumy.edu.webcontainer.sequrity.ServerSecurity serverSecurity = new nc.sumy.edu.webcontainer.sequrity.ServerSecurity(request, serverConfiguration); org.junit.Assert.assertEquals(serverSecurity.isAllow(), true); <BUGS> request = makeRequest(3, "93.49.37.56", nc.sumy.edu.webcontainer.sequrity.ServerSecurityTest.NC_COM); <BUGE> serverSecurity = new nc.sumy.edu.webcontainer.sequrity.ServerSecurity(request, serverConfiguration); org.junit.Assert.assertEquals(serverSecurity.isAllow(), false); } 
public void addLast(Item item) { <BUGS> <BUGE> Deque<Item>.Node old = last; last = new Node(); last.item = item; last.backward = old; last.forward = null; (size)++; if ((size) == 1) { first = last; }else { old.forward = last; } } 
@org.junit.Test public void canReturnCorrectScoreIfGameEndsInATie() throws java.lang.Exception { com.tictactoe.Board board = new com.tictactoe.Board(); populateBoard_GameEndsInATie(board); com.tictactoe.Rules rules = new com.tictactoe.RulesFor3x3(); com.tictactoe.Minimax minimax = new com.tictactoe.Minimax(rules, board, "X", "O"); <BUGS> int score = minimax.minimax(board, true); <BUGE> org.junit.Assert.assertEquals(0, score); } 
public java.lang.String getLabel() { if ((!(labelSet)) && (!(localVarLabelSet))) { if ((algoParent) == null) { return toOutputValueString(); <BUGS> }else { return algoParent.getCommandDescription(); <BUGE> } <BUGS> }else { return kernel.printVariableName(label); <BUGE> } <BUGS> <BUGE> } 
public lib.Number push(char digit) { if ((!(this.hasDecimal)) || (digit != '.')) { <BUGS> this.hasDecimal = (this.hasDecimal) || (digit != '.'); <BUGE> this.state += digit; } return this; } 
private void play() { this.showBoard(); <BUGS> while ((!(board.hasWinner())) && (!(board.isFull()))) { <BUGE> players[current].makeMove(board); this.showBoard(); current = ((current) + 1) % 2; <BUGS> } <BUGE> this.printResult(); } 
private boolean hasHeader(int position) { <BUGS> if (position == 0) { <BUGE> return true; } int previous = position - 1; return ((mAdapter.getHeaderId(position)) != (android.support.v7.widget.RecyclerView.NO_ID)) && ((mAdapter.getHeaderId(position)) != (mAdapter.getHeaderId(previous))); } 
public stamboom.domain.Gezin getGezin(int gezinsNr) { <BUGS> gezinsNr = 3; <BUGE> if ((((gezinnen) != null) && (1 <= gezinsNr)) && (1 <= (gezinnen.size()))) { return gezinnen.get((gezinsNr - 1)); } return null; } 
@org.junit.Test public void whenSpeedBelow10KmItHasExpressData() { org.highway.whatsup.data.physics.SpeedMeter.Progression progressionSpeed = actionCreator.getProgression(2); org.hamcrest.MatcherAssert.assertThat(progressionSpeed, org.hamcrest.CoreMatchers.is(SpeedMeter.Progression.LOW_SPEED)); org.highway.whatsup.domain.data.ExpressData expressData = actionCreator.getExpressWayData(2, lat, lng, progressionSpeed); org.hamcrest.MatcherAssert.assertThat(expressData, org.hamcrest.CoreMatchers.notNullValue()); <BUGS> org.hamcrest.MatcherAssert.assertThat(expressData.getCctvUrl(), org.hamcrest.CoreMatchers.not("")); org.hamcrest.MatcherAssert.assertThat(expressData.getMsg(), org.hamcrest.CoreMatchers.not("")); <BUGE> } 
@org.springframework.context.annotation.Bean @org.springframework.context.annotation.Primary public com.fasterxml.jackson.databind.ObjectMapper jacksonObjectMapper() { <BUGS> com.fasterxml.jackson.databind.ObjectMapper objectMapper = new com.fasterxml.jackson.databind.ObjectMapper().setPropertyNamingStrategy(com.fasterxml.jackson.databind.PropertyNamingStrategy.CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES); com.fasterxml.jackson.databind.module.SimpleModule jsonObjectModule = new com.fasterxml.jackson.databind.module.SimpleModule(); jsonObjectModule.addSerializer(org.json.JSONObject.class, new com.fasterxml.jackson.datatype.jsonorg.JSONObjectSerializer()); jsonObjectModule.addDeserializer(org.json.JSONObject.class, new com.fasterxml.jackson.datatype.jsonorg.JSONObjectDeserializer()); objectMapper.registerModule(jsonObjectModule); <BUGE> objectMapper.registerModule(enumModule()); objectMapper.registerModule(new com.fasterxml.jackson.datatype.jdk8.Jdk8Module()); objectMapper.registerModule(new org.zalando.problem.ProblemModule()); return objectMapper; } 
public void test_150_ACLCreateDeeperField(edu.umass.cs.gnsclient.client.util.GuidEntry westyEntry) { try { try { edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest.client.fieldUpdate(westyEntry.getGuid(), "test.deeper.field", "fieldValue", westyEntry); } catch (java.lang.Exception e) { <BUGS> edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest.failWithStackTrace(("Problem updating field: " + e)); <BUGE> } } catch (java.lang.Exception e) { <BUGS> edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest.failWithStackTrace(("Exception when we were not expecting it ACLCreateDeeperField: " + e)); <BUGE> } } 
public boolean waterWeakest() throws battlecode2017.GameActionException { battlecode2017.TreeInfo weakest = trees.getWeakestTreeWithinInteract(team); <BUGS> if (((weakest.health) <= (TREE_WATERING_THRESHOLD)) && (rc.canWater(weakest.location))) { <BUGE> rc.water(weakest.location); return true; }else { return false; } } 
boolean equals(int itemID, int meta, net.minecraft.nbt.NBTTagCompound nbt) { <BUGS> return ((((this.itemID) == itemID) && ((this.meta) == meta)) && ((this.nbt) == nbt)) || (((this.nbt) != null) && (this.nbt.equals(nbt))); <BUGE> } 
private void refreshContent() { <BUGS> android.support.v4.widget.SwipeRefreshLayout swipeRefreshLayout = ((android.support.v4.widget.SwipeRefreshLayout) (getActivity().findViewById(R.id.event_swipe_layout))); <BUGE> thestral.agc.events.EventDownloadTask eventDownloadTask = new thestral.agc.events.EventDownloadTask(getActivity(), true); thestral.agc.BackgroundDownloader backgroundDownloader = new thestral.agc.BackgroundDownloader(getActivity()); backgroundDownloader.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR, eventDownloadTask); updateContent(); <BUGS> swipeRefreshLayout.setRefreshing(false); <BUGE> } 
public void resolveRoute() { try { <BUGS> <BUGE> closeLoadingBar(); <BUGS> activity.activityCloseLoadingBar(); <BUGE> } catch (java.lang.Exception e) { android.util.Log.e(Constants.TAG, "Error loading bar instance has not been created. in ActivityHelper resolveroute"); } java.lang.String pendingDelivery = orderStatusDataBase.getOrderStatus(); android.util.Log.d(Constants.TAG, "Checking value of pending delivery =  "); if (pendingDelivery == "") { activity.replaceFragment(R.layout.fragment_main, null); }else { android.util.Log.d(Constants.TAG, "Delivery status pending.."); activity.replaceFragment(R.layout.fragment_order_status, null); } } 
public void updateAirCondition() { java.util.List<java.lang.String> devices = deviceStatusDao.selectAllActiveDevices(); java.util.List<model.CleanerStatus> cleanerStatusList = new java.util.ArrayList<model.CleanerStatus>(); for (java.lang.String deviceID : devices) { <BUGS> java.lang.String chipID = deviceIDToChipID(deviceID); model.CleanerStatus cleanerStatus = getCleanerStatus(chipID); <BUGE> if ((cleanerStatus != null) && ((cleanerStatus.getDeviceID()) != null)) { cleanerStatusList.add(cleanerStatus); } } boolean update = deviceStatusDao.insertDeviceStatus(cleanerStatusList); } 
private static java.lang.Class<?> forName(final java.lang.String directory, final java.lang.String name) { try { final java.lang.Class<?> cls = org.obicere.cc.util.Reflection.LOADER.loadClass(name); if (cls != null) { return cls; } <BUGS> } catch (java.lang.Error | java.lang.Exception ignored) { <BUGE> } <BUGS> final java.lang.Class<?> defined = org.obicere.cc.util.Reflection.DEFINER.attemptDefine(directory, name); if (defined != null) { return defined; } return null; <BUGE> } 
@java.lang.Override public boolean onItemUse(net.minecraft.item.ItemStack stack, @org.jetbrains.annotations.NotNull net.minecraft.entity.player.EntityPlayer playerIn, @org.jetbrains.annotations.NotNull net.minecraft.world.World worldIn, @org.jetbrains.annotations.NotNull net.minecraft.util.BlockPos pos, net.minecraft.util.EnumFacing side, float hitX, float hitY, float hitZ) { <BUGS> if (!(worldIn.isRemote)) { return false; <BUGE> } <BUGS> playerIn.triggerAchievement(ModAchievements.achievementWandOfbuilding); MineColonies.proxy.openBuildToolWindow(pos.offset(side)); <BUGE> return false; } 
<BUGS> private boolean isOwnProfile(javax.faces.context.FacesContext fctx, java.lang.String role) { boolean ownProfile = true; if ((fctx.getViewRoot().getViewId().endsWith("profile.xhtml")) && (!(role.equals("SYSTEM_ADMINISTRATOR")))) { <BUGE> int userID = java.lang.Integer.parseInt(javax.faces.context.FacesContext.getCurrentInstance().getExternalContext().getRequestParameterMap().get("userID")); <BUGS> if ((sessionUser.getUserID()) != userID) { ownProfile = false; <BUGE> } } <BUGS> return ownProfile; <BUGE> } 
public static byte[] parse(final int value) { final byte[] bytes = new byte[4]; <BUGS> bytes[0] = ((byte) (value << 24)); bytes[1] = ((byte) (value << 16)); bytes[2] = ((byte) (value << 8)); <BUGE> bytes[3] = ((byte) (value)); return bytes; } 
private void initView() { mobileNumber = getIntent().getStringExtra("NUMBER"); android.widget.TextView mobileNum = getView(R.id.editText_mobileNumber); profilePic = getView(R.id.profile_thumb); mobileNum.setText(((getResources().getString(R.string.string_plus)) + (mobileNumber))); emailEditText = getView(R.id.editText_email); nameEditText = getView(R.id.editText_name); <BUGS> profilePic.setOnClickListener(new android.view.View.OnClickListener() { @java.lang.Override public void onClick(android.view.View v) { showProfilePicSelectionDialog(); } }); <BUGE> } 
private void updateReady(java.util.List<com.kilobolt.framework.Input.TouchEvent> touchEvents) { if (!(otherSizeIsSet)) { bluetoothModule.sendMessage(java.lang.String.format("%s %d %d", com.wanlin.androidgame.pikachuvolleyball.GameScreen.SCREEN_SIZE_KEY, com.wanlin.androidgame.pikachuvolleyball.GameScreen.screenWidth, com.wanlin.androidgame.pikachuvolleyball.GameScreen.screenHeight)); <BUGS> setOtherScreenSize(((com.wanlin.androidgame.pikachuvolleyball.PikachuVolleyball) (game)).getOhterScreenWidth(), ((com.wanlin.androidgame.pikachuvolleyball.PikachuVolleyball) (game)).getOtherScreenHeight()); <BUGE> otherSizeIsSet = true; <BUGS> } if ((touchEvents.size()) > 0) { stargGame(); bluetoothModule.sendMessage(java.lang.String.valueOf(com.wanlin.androidgame.pikachuvolleyball.GameScreen.START_THAT_FUKING_GAMEEEE)); <BUGE> } } 
<BUGS> @juja.microservices.teams.controller.PutMapping(value = "/teams/users/{uuid}", produces = "application/json") <BUGE> public org.springframework.http.ResponseEntity<?> dismissTeam(@juja.microservices.teams.controller.PathVariable java.lang.String uuid) { logger.debug("Received dismiss team request. User id in Team: {}", uuid); juja.microservices.teams.entity.Team team = teamService.dismissTeam(uuid); logger.info("Team dismissed. Team Id: {}", team.getId()); logger.debug("Request dismiss team returned {}", team.toString()); <BUGS> return org.springframework.http.ResponseEntity.ok(team.toString()); <BUGE> } 
@java.lang.Override public fi.nls.oskari.domain.map.view.View getViewWithConf(java.lang.String viewName) { <BUGS> if ((viewName != null) && (viewName.isEmpty())) { <BUGE> for (fi.nls.oskari.domain.map.view.View item : list) { if (viewName.equals(item.getName())) { return item; } } } return null; } 
public com.buyhatke.core.Entry get(java.lang.String key) { com.buyhatke.core.Entry entry = getInMemoryEntry(key); if (entry == null) { entry = checkInFileSystem(key); if (entry != null) { if (!(com.buyhatke.core.PersistenceManager.isExpired(entry))) { <BUGS> cacheListMap.put(entry.getKey(), entry); <BUGE> }else { return null; } } } return entry; } 
private void clearFields() { bookTitle.setText(""); bookSubtitle.setText(""); authorsText.setText(""); categoriesText.setText(""); bookContainer.setVisibility(View.INVISIBLE); scanButton.setVisibility(View.VISIBLE); if (it.jaschke.alexandria.activities.MainActivity.IS_TABLET) { <BUGS> saveButton.setVisibility(View.INVISIBLE); deleteButton.setVisibility(View.INVISIBLE); <BUGE> }else { saveButton.setVisibility(View.GONE); deleteButton.setVisibility(View.GONE); } } 
public boolean isViewUnder(android.view.View view, int x, int y) { if (view == null) { return false; } <BUGS> return (((x >= (view.getX())) && (x < ((view.getX()) + (view.getWidth())))) && (y >= (view.getY()))) && (y < ((view.getBottom()) + (view.getHeight()))); <BUGE> } 
private com.questdb.ql.parser.RecordSource compile(com.questdb.ql.parser.QueryModel model, com.questdb.factory.JournalReaderFactory factory) throws com.questdb.ex.JournalException, com.questdb.ex.ParserException { <BUGS> return limit(order(selectColumns(((model.getJoinModels().size()) > 1 ? optimise(model, factory).compileJoins(model, factory) : optimise(model, factory).compileSingleOrSubQuery(model, factory)), model), model), model); <BUGE> } 
public DataStructure.LinkedList2<T>.Node search(T value) { DataStructure.LinkedList2<T>.Node x = nil.next; <BUGS> while ((x != (nil)) && ((x.key) != value)) { <BUGE> x = x.next; } <BUGS> <BUGE> return x; } 
private void changeValue(boolean add) { <BUGS> float oldValue = value; <BUGE> if (add) { value = java.lang.Math.min(maxValue, ((value) + (step))); }else { value = java.lang.Math.max(minValue, ((value) - (step))); } if ((onValueChangedListener) != null) { onValueChangedListener.onValueChanged(this, value, oldValue, minValue, maxValue, false); } } 
public be.willima.jrpgdatabase.model.JRPGTile getTile(int x, int y) throws java.lang.IndexOutOfBoundsException { be.willima.jrpgdatabase.model.JRPGTile tile = null; <BUGS> if ((((x < 0) || (x >= (this.width))) || (y < 0)) || (y >= (this.width))) { <BUGE> throw new java.lang.IndexOutOfBoundsException("Tile not within map region!"); }else { tile = this.tiles[x][y]; } return tile; } 
<BUGS> <BUGE> public boolean accept(java.io.File pathname) { <BUGS> if (pathname.getName().contains(EInternalTemplate.HEADER_ADDITIONAL.toString())) if (pathname.getName().contains(((language.getExtension()) + (org.talend.designer.codegen.config.TemplateUtil.TEMPLATE_EXT)))) <BUGE> return true; <BUGS>   <BUGE> return false; } 
@java.lang.Override <BUGS> public void doNotify() { <BUGE> logger.info("[notifyUpstreamChanged]{},{},{},{},{}", clusterName, shardName, ip, port, dc.getDcName()); metaServerConsoleServiceManagerWrapper.get(dc.getDcName()).upstreamChange(clusterName, shardName, ip, port); <BUGS> <BUGE> } 
@java.lang.Override public void onItemClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) { android.content.Intent intent = new android.content.Intent(getBaseContext(), a15s.android.datamatiker.mini_projekt1.TestWaresList.class); intent.putExtra(ShoppingListDetail.EXTRA_LISTNO, list_id); <BUGS> intent.putExtra(TestWaresList.EXTRA_STORE_ID, (((int) (id)) - 1)); <BUGE> startActivity(intent); } 
@org.junit.Test public void setSelectRename_smallerThanPrevious() { selectValuesMeta.setSelectRename(new java.lang.String[]{ org.pentaho.di.trans.steps.selectvalues.SelectValuesMetaTest.FIRST_FIELD , org.pentaho.di.trans.steps.selectvalues.SelectValuesMetaTest.SECOND_FIELD }); selectValuesMeta.setSelectRename(new java.lang.String[]{ org.pentaho.di.trans.steps.selectvalues.SelectValuesMetaTest.FIRST_FIELD }); <BUGS> org.junit.Assert.assertArrayEquals(new java.lang.String[]{ org.pentaho.di.trans.steps.selectvalues.SelectValuesMetaTest.FIRST_FIELD }, selectValuesMeta.getSelectRename()); <BUGE> } 
@java.lang.Override public void populate() { <BUGS> get().getNode("world", "inventory", "separate").setValue(true).setComment("Toggles separate inventories between worlds."); <BUGE> get().getNode("world", "inventory", "groups").setComment("Contains all world inventory groups."); get().getNode("world", "inventory", "groups", "example").setValue("world, DIM1, DIM-1").setComment("Example world inventory group."); get().getNode("world", "weather", "locked").setComment("Worlds listed here, will not change weather."); } 
private void fromPayload(java.lang.String partContent) { java.lang.String[] parts = partContent.split(Constants.CRLFCRLF, 2); <BUGS> parseHeaders(parts[0]); mContent = parts[1].substring(0, parts[1].lastIndexOf(Constants.CRLF)); <BUGE> } 
private void setCelebFields(com.example.jeka.movieshelper.model.Celebrity celebrity, java.lang.String jsonValue, java.lang.String value) { switch (jsonValue) { case com.example.jeka.movieshelper.network.CelebFetch.PERSON_NAME : celebrity.setName(value); <BUGS> break; case com.example.jeka.movieshelper.network.CelebFetch.PERSON_ALSO_KNOW_AS : celebrity.setAlsoKnownAs(new java.lang.String[]{ value }); <BUGE> break; case com.example.jeka.movieshelper.network.CelebFetch.PERSON_BIRTHDAY : celebrity.setBirthday(value); break; case com.example.jeka.movieshelper.network.CelebFetch.PERSON_PLACE_OF_BIRTH : celebrity.setPlaceOfBirth(value); break; case com.example.jeka.movieshelper.network.CelebFetch.PERSON_BIOGRAPHY : celebrity.setBiography(value); break; case com.example.jeka.movieshelper.network.CelebFetch.PERSON_HOMEPAGE : celebrity.setHomepage(value); break; } } 
@java.lang.Override public void onMeasure(int widthSpec, int heightSpec) { super.onMeasure(widthSpec, heightSpec); <BUGS> if (pullEnabled) { <BUGE> pullView.measure(widthSpec, 0); setMeasuredDimension(getMeasuredWidth(), ((getMeasuredHeight()) + (pullView.getMeasuredHeight()))); } } 
@java.lang.Override public boolean onPreferenceChange(android.preference.Preference preference, java.lang.Object data) { <BUGS> final int pinStringLength = ((java.lang.String) (data)).length(); <BUGE> if (pinStringLength != (info.dvkr.screenstream.SettingsActivity.PIN_DIGITS_COUNT)) { android.widget.Toast.makeText(getActivity().getApplicationContext(), getResources().getString(R.string.pin_digits_count), Toast.LENGTH_LONG).show(); return false; } return true; } 
@java.lang.Override <BUGS> public boolean leaveGroup(long courseId, long courseSkuId, long userId) { <BUGE> cn.momia.api.im.dto.Group group = queryGroup(courseId, courseSkuId); if (!(group.exists())) return false;  <BUGS> if (doLeaveGroup(group.getGroupId(), userId)) { <BUGE> deleteGroupMembersLog(group.getGroupId(), com.google.common.collect.Sets.newHashSet(userId)); return true; } return false; } 
<BUGS> protected java.lang.String sendRequest(java.lang.String resourceFile) throws java.lang.Exception { final java.net.URL resource = com.google.common.io.Resources.getResource(org.incode.eurocommercial.ecpcrm.webapp.card_check_unbound.CardCheckUnboundTest.class, resourceFile); <BUGE> final java.lang.String json = com.google.common.io.Resources.toString(resource, com.google.common.base.Charsets.UTF_8); com.google.api.client.http.HttpContent content = com.google.api.client.http.ByteArrayContent.fromString("application/json", json); com.google.api.client.http.HttpRequest request = requestFactory.buildPostRequest(url, content); com.google.api.client.http.HttpResponse response = request.execute(); return com.google.common.io.CharStreams.toString(new java.io.InputStreamReader(response.getContent())); } 
@org.junit.Test public void testAbsentEntityCreationSucceeds() throws java.lang.Throwable { org.terracotta.connection.Connection client = org.ehcache.clustered.BasicEntityInteractionTest.CLUSTER.newConnection(); try { <BUGS> org.terracotta.connection.entity.EntityRef<org.ehcache.clustered.client.internal.EhcacheClientEntity, org.ehcache.clustered.common.internal.ClusteredTierManagerConfiguration> ref = client.getEntityRef(org.ehcache.clustered.client.internal.EhcacheClientEntity.class, 1, "testAbsentEntityCreationSucceeds"); <BUGE> ref.create(blankConfiguration); org.junit.Assert.assertThat(ref.fetchEntity(), org.hamcrest.Matchers.not(org.hamcrest.Matchers.nullValue())); } finally { client.close(); } } 
public void changeState(java.lang.String recordingId, java.lang.String state) { if (state.equals(Recording.STATE_PUBLISHED)) { changeState(unpublishedDir, recordingId, state); }else if (state.equals(Recording.STATE_UNPUBLISHED)) { changeState(publishedDir, recordingId, state); <BUGS> } <BUGE>  <BUGS> if (state.equals(Recording.STATE_DELETED)) { changeState(publishedDir, recordingId, state); changeState(unpublishedDir, recordingId, state); changeState(deletedDir, recordingId, state); } <BUGE> } 
public static void comChoiceS() { java.util.Random rand = new java.util.Random(); int comPick = (rand.nextInt(3)) + 1; if (comPick == 1) { java.lang.System.out.println("I chose rock and you chose scissors...I win :p"); com.bleh.Main.resultsL(); }else if (comPick == 2) { java.lang.System.out.println("I chose paper and you chose scissors...I guess you win :("); com.bleh.Main.resultsW(); }else if (comPick == 3) { java.lang.System.out.println("I chose scissors and you chose scissors...We tied :/"); com.bleh.Main.resultsT(); }   <BUGS> com.bleh.Main.play(); <BUGE> } 
@java.lang.Override public io.netty.util.concurrent.Future<java.lang.Boolean> removeAllAsync(java.util.Collection<?> c) { if (c.isEmpty()) { return org.redisson.RedissonSet.newSucceededFuture(false); } java.util.List<java.lang.Object> args = new java.util.ArrayList<java.lang.Object>(((c.size()) + 1)); args.add(getName()); args.addAll(c); <BUGS> return commandExecutor.writeAsync(getName(), codec, RedisCommands.SREM_SINGLE, c.toArray()); <BUGE> } 
@java.lang.Override public void setBrightness(final int pRenderLayerIndex, final double pBrightness) { <BUGS> mBrightness[getCurrentRenderLayerIndex()] = ((float) (clearvolume.renderer.ClearVolumeRendererBase.clamp(pBrightness, 0, ((getBytesPerVoxel()) == 1 ? 16 : 256)))); <BUGE> notifyUpdateOfVolumeRenderingParameters(); } 
@org.junit.Test public void inMailSystemMenuShouldChangeGreeting() { <BUGS> <BUGE> connection.dial("3"); connection.record("Greeting"); connection.dial("#"); org.mockito.Mockito.verify(currentMailbox).setGreeting("Greeting"); assert connection.isInMailBoxMenu(); <BUGS> org.mockito.Mockito.verify(phone, times(2)).speak(ConnectionTestMailboxMenu.MAILBOX_MENU_TEXT); <BUGE> } 
private java.util.ArrayList<org.Point> finalLocs() { java.util.ArrayList<org.Point> ret = new java.util.ArrayList<>(); for (javafx.scene.control.ChoiceBox cb : locations) { if ((cb.getValue()) != null) { <BUGS> addtoFinalLocs(ret, cb); <BUGE> } } return ret; } 
protected void writeResults() throws java.io.IOException { <BUGS> org.apache.commons.io.FileUtils.write(new java.io.File(outputFolder, de.unidue.ltl.flextag.core.reports.crf.TtAbstractKnownUnknownWordAccuracyReport.UNKNOWN_WORDS_FINE), java.lang.String.format("%.1f", ((invocabAccuracy) * 100))); org.apache.commons.io.FileUtils.write(new java.io.File(outputFolder, de.unidue.ltl.flextag.core.reports.crf.TtAbstractKnownUnknownWordAccuracyReport.KNOWN_WORDS_FINE), java.lang.String.format("%.1f", ((outvocabAccuracy) * 100))); <BUGE> } 
private static void calculateDiscount() { java.util.Collections.sort(Constants.quotes); double higherValue = Constants.quotes.get(0).getThreeYearTotal(); if (higherValue > 0) { for (com.amazon.proposalcalculator.bean.Quote q : com.amazon.proposalcalculator.utils.Constants.quotes) { q.setDiscount((1 - ((q.getThreeYearTotal()) / higherValue))); <BUGS> java.lang.System.out.println(("Ordenado: " + (q.getThreeYearTotal()))); <BUGE> } } } 
@java.lang.Override public void doRefreshVisual(org.eclipse.gef.fx.nodes.GeometryNode<org.eclipse.gef.geometry.planar.IGeometry> visual) { if ((getAnchoragesUnmodifiable().size()) != 1) { return ; } org.eclipse.gef.geometry.planar.IGeometry feedbackGeometry = getFeedbackGeometry(); if (feedbackGeometry == null) { return ; } <BUGS> visual.setGeometry(feedbackGeometry); <BUGE> if (feedbackGeometry instanceof org.eclipse.gef.geometry.planar.ICurve) { visual.setStrokeType(javafx.scene.shape.StrokeType.CENTERED); }else { visual.setStrokeType(javafx.scene.shape.StrokeType.OUTSIDE); } <BUGS> <BUGE> } 
@java.lang.Override public void render() { Gdx.gl.glClearColor(1, 1, 1, 1); Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT); stage.act(); stage.draw(); <BUGS> if ((showProgressUntilTime) < (com.badlogic.gdx.utils.TimeUtils.millis())) { <BUGE> if ((progressDialog) != null) { <BUGS> <BUGE> progressDialog.dismiss(); } } } 
<BUGS> protected void onPostExecute(java.lang.Void result) { <BUGE> loadingDialog.cancel(); <BUGS> android.content.Intent intent = new android.content.Intent(android.content.Intent.ACTION_SEND); intent.setType("text/plain"); intent.putExtra(Intent.EXTRA_STREAM, android.net.Uri.fromFile(targetFile)); startActivity(intent); <BUGE> } 
@java.lang.Override protected void onActivityResult(int requestCode, int resultCode, android.content.Intent data) { if ((requestCode == (com.ww23.l_band.ListenActivity.REQUEST_ENABLE_BT)) && (resultCode == (android.app.Activity.RESULT_CANCELED))) { <BUGS> toast(getString(R.string.deny_open_bluetooth).toString()); <BUGE> finish(); return ; } super.onActivityResult(requestCode, resultCode, data); } 
public void saveConfig() { if (((fileConfiguration) == null) || ((configFile) == null)) { return ; }else { try { getConfig().save(configFile); } catch (java.io.IOException ex) { <BUGS> plugin.getLogger().log(java.util.logging.Level.SEVERE, ("Could not save config to " + (configFile))); <BUGE> } } } 
public void add(int data) { (this.size)++; if ((this.front) == null) { this.front = new QueueNode(data); }else { QueueNode current = this.front; <BUGS> while (current != null) { <BUGE> current = current.next; } current.next = new QueueNode(data); } } 
public java.lang.Object pop() { final int n = stack.size(); if (n == 0) { <BUGS> throw new java.lang.RuntimeException("The stack is empty"); <BUGE> } for (int i = (marks.size()) - 1; i >= 0; --i) { if ((marks.get(i)) == n) { marks.set(i, (n - 1)); } } return stack.remove((n - 1)); } 
private static java.lang.String filterChars(java.lang.String s) { <BUGS> <BUGE> java.lang.StringBuilder sb = new java.lang.StringBuilder(); for (char c : s.toCharArray()) { if (("0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ".indexOf(c)) >= 0) { sb.append(c); } } return sb.toString(); } 
public void createDirIfNotExists(java.lang.String dirPath) throws org.seagrid.desktop.connectors.storage.SftpException { java.lang.String pwd = channelSftp.pwd(); <BUGS> <BUGE> java.lang.String[] folders = dirPath.split("/"); for (java.lang.String folder : folders) { if ((folder.length()) > 0) { try { channelSftp.cd(folder); } catch (org.seagrid.desktop.connectors.storage.SftpException e) { channelSftp.mkdir(folder); channelSftp.cd(folder); } } } channelSftp.cd(pwd); } 
@java.lang.Override public com.containersol.minimesos.state.State getState() { try { return com.containersol.minimesos.state.State.fromJSON(getStateInfoJSON().toString()); } catch (com.fasterxml.jackson.core.JsonParseException | com.fasterxml.jackson.databind.JsonMappingException | com.mashape.unirest.http.exceptions.UnirestException e) { <BUGS> throw new com.containersol.minimesos.MinimesosException(("Could not retrieve state from Mesos Agent: " + (getName())), e.getCause()); <BUGE> } } 
@org.junit.Test public void detectListenerWithStartProximityDetectionWithCustomThreshold() { addSensor(android.hardware.Sensor.TYPE_PROXIMITY); com.github.nisrulz.sensey.ProximityDetector.ProximityListener fakeListener = org.mockito.Mockito.mock(com.github.nisrulz.sensey.ProximityDetector.ProximityListener.class); sensey.startProximityDetection(10.0F, fakeListener); <BUGS> com.github.nisrulz.sensey.ProximityDetector detector = getDetector(com.github.nisrulz.sensey.ProximityDetector.class); <BUGE> if (detector != null) { org.junit.Assert.assertTrue("Sensor Manager must contain sensor event listener for proximity", shadowSensorManager.hasListener(detector)); }else { org.junit.Assert.fail("There should be proximity detector in sensey. If not, please, check last version of class and update reflection accessing to it field"); } } 
public boolean checkTuple(com.github.dakusui.jcunit.core.tuples.Tuple tuple) throws com.github.dakusui.jcunit.exceptions.UndefinedSymbol { <BUGS> com.github.dakusui.jcunit.fsm.FSMFactors fsmFactors = this.getFactors(); <BUGE> com.github.dakusui.jcunit.fsm.ScenarioSequence<SUT> seq = new com.github.dakusui.jcunit.fsm.ScenarioSequence.BuilderFromTuple<SUT>().setTuple(tuple).setFSMName(this.fsmName).setHistoryLength(this.historyLength).build(); <BUGS> return com.github.dakusui.jcunit.fsm.FSMConstraintChecker.checkFSM(this.fsmName, seq); <BUGE> } 
public static boolean cas(long[] array, int index, long expected, long value) { <BUGS> <BUGE> return com.questdb.misc.Unsafe.getUnsafe().compareAndSwapLong(array, ((com.questdb.misc.Unsafe.LONG_OFFSET) + (((long) (index)) << (com.questdb.misc.Unsafe.LONG_SCALE))), expected, value); } 
@java.lang.Override public boolean onLongClick(android.view.View v) { if (!(v.isInTouchMode())) return false;  if ((mNextPage) != (INVALID_PAGE)) return false;  if ((!(mLauncher.isAllAppsVisible())) || (mLauncher.getWorkspace().isSwitchingState())) return false;  <BUGS> return (!(mLauncher.isDraggingEnabled())) && (beginDragging(v)); <BUGE> } 
public java.lang.String arrayToString(java.lang.Object[] array) { <BUGS> java.lang.StringBuffer buffer = new java.lang.StringBuffer(); <BUGE> for (int i = 0; i < (array.length); i++) { if (i > 0) { buffer.append(dk.lessismore.nojpa.reflection.attributeconverters.AttributeConverter.arraySeparator); } buffer.append(objectToString(array[i])); } return buffer.toString(); } 
@org.springframework.web.bind.annotation.RequestMapping(value = { "sltMTechDetailListAjax" }, method = org.springframework.web.bind.annotation.RequestMethod.POST) @org.springframework.web.bind.annotation.ResponseBody public com.abilists.bean.para.profile.MTechDetailListAjax sltMTechDetailListAjax(@org.springframework.web.bind.annotation.RequestBody com.abilists.bean.para.admin.SltMTechDetailPara sltMTechDetailPara, javax.servlet.http.HttpSession session) throws java.lang.Exception { <BUGS> logger.info(("sltMTechDetailListAjax. MtNo >> " + (sltMTechDetailPara.getMtNo()))); <BUGE> this.handleSessionInfo(session, sltMTechDetailPara); sltMTechDetailPara.setMlCode(sltMTechDetailPara.getLang()); java.util.List<com.abilists.bean.model.MTechDetailModel> mTechDetailList = adminMasterService.sltMTechDetailList(sltMTechDetailPara); logger.info(("mTechDetailList size = " + (mTechDetailList.size()))); com.abilists.bean.para.profile.MTechDetailListAjax mTechDetailListAjax = new com.abilists.bean.para.profile.MTechDetailListAjax(); mTechDetailListAjax.setmTechDetailList(mTechDetailList); return mTechDetailListAjax; } 
void printPanden() { for (Pand element : lijst) { <BUGS> java.lang.System.out.println((((((((((((((element.date) + " ") + (element.objectNummer)) + " ") + (element.naam)) + " ") + (element.adres)) + " ") + (element.kamers)) + " ") + (element.prijs)) + " ") + (element.vve))); <BUGE> } } 
public boolean appendToFile(java.lang.String s) { try { <BUGS> java.nio.file.Files.write(f.toPath(), s.getBytes(), java.nio.file.StandardOpenOption.APPEND); <BUGE> return true; } catch (java.io.IOException e) { e.printStackTrace(); } return false; } 
@javax.annotation.Nonnull private org.apache.directory.ldap.client.api.LdapConnection connect() throws org.apache.jackrabbit.oak.spi.security.authentication.external.ExternalIdentityException { try { if ((adminPool) == null) { return adminConnectionFactory.makeObject(); }else { return adminPool.getConnection(); } <BUGS> } catch (java.lang.Throwable e) { org.apache.jackrabbit.oak.security.authentication.ldap.impl.LdapIdentityProvider.log.error("Error while connecting to the ldap server.", e); throw new org.apache.jackrabbit.oak.spi.security.authentication.external.ExternalIdentityException("Error while connecting and binding to the ldap server", e); <BUGE> } } 
@java.lang.Override public void saveUser(com.tribuo.backend.jpa.User user) { user.setPassword(bCryptPasswordEncoder.encode(user.getPassword())); user.setActive(1); com.tribuo.backend.jpa.Role userRole = roleRepo.findByRole("ADMIN"); <BUGS> java.lang.System.out.println((("<<<<<<<<<<<<<<<<<<<<<<<<<<<<<    " + (userRole.getRoleId())) + "     >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>><<")); <BUGE> user.setRoles(new java.util.HashSet<com.tribuo.backend.jpa.Role>(java.util.Arrays.asList(userRole))); usuRepo.save(user); } 
public static org.deidentifier.arx.metric.Metric<org.deidentifier.arx.metric.v2.AbstractILMultiDimensional> createPrecomputedEntropyMetric(double threshold, boolean monotonic, org.deidentifier.arx.metric.Metric.AggregateFunction function) { if (monotonic) { <BUGS> return new org.deidentifier.arx.metric.v2.MetricMDNUEntropyPotentiallyPrecomputed(0.5, threshold, function); <BUGE> }else { <BUGS> return new org.deidentifier.arx.metric.v2.MetricMDNUNMEntropyPotentiallyPrecomputed(0.5, threshold, function); <BUGE> } } 
@java.lang.Override public boolean loadActiveUserInfo(java.lang.Object context) { android.content.SharedPreferences appPrefs = getAppSharedPreferences(((android.content.Context) (context))); currentUsername = appPrefs.getString(com.ustadmobile.port.android.impl.UstadMobileSystemImplAndroid.KEY_CURRENTUSER, null); currentAuth = appPrefs.getString(com.ustadmobile.port.android.impl.UstadMobileSystemImplAndroid.KEY_CURRENTAUTH, null); <BUGS> xapiAgent = com.ustadmobile.nanolrs.core.endpoints.XapiAgentEndpoint.createOrUpdate(context, null, currentUsername, com.ustadmobile.core.util.UMTinCanUtil.getXapiServer(context)); <BUGE> this.userPreferences = null; return true; } 
private static java.lang.String getVocab() { java.lang.String[] dictionary = GuiMain.index.getDictionary(); int count = GuiMain.index.getTermCount(); <BUGS> java.lang.String vocab = "Index Dictionary: \n"; <BUGE> for (java.lang.String s : dictionary) { <BUGS> vocab += s + "\n"; <BUGE> } <BUGS> vocab += "Index Term Count: " + count; return vocab; <BUGE> } 
@org.junit.Test public void testNewInstance() { com.graphaware.integration.es.domain.ExternalResult externalResult = new com.graphaware.integration.es.domain.ExternalResult("123", 23.8F); assertEquals("123", externalResult.getObjectId()); assertEquals(23.8F, externalResult.getScore(), 0); <BUGS> assertNull(externalResult.getItem()); <BUGE> } 
public crazy.vo.User update(crazy.vo.User user) { <BUGS> if (!(user.getEmail().equals(email))) { <BUGE> user.setEmail(email); user.setEmailActivated(false); } user.setPhone(phone); user.setSociolname(sociolname); user.setStudentid(studentid); user.setProvinceid(provinceid); user.setCollegeid(collegeid); user.setInstituteid(instituteid); return user; } 
private void handleLevelUp() { if ((xpSinceLastLevelUp()) >= (nettoXpNeededForLevel(((plevel) + 1)))) { (this.maxHealth)++; <BUGS> this.regenDelay = 2; <BUGE> (plevel)++; psprint += 0.1; maxTimeSprint += 20; MojamComponent.soundPlayer.playSound("/sound/levelUp.wav", ((float) (pos.x)), ((float) (pos.y)), true); } } 
public int getCrc16() { if (((bitBufferLen) % 8) != 0) throw new java.lang.IllegalStateException();  <BUGS> updateCrcs(); <BUGE> if (((crc16) >>> 16) != 0) throw new java.lang.AssertionError();  return crc16; } 
public void editPatientProf(android.view.View v) { if (!(mEditTextCustomerFName.isEnabled())) { setFieldsEnability(true); <BUGS> <BUGE> }else { setFieldsEnability(false); } <BUGS> if ((mAddrLayout.getVisibility()) != (android.view.View.VISIBLE)) { com.extenprise.mapp.medico.util.Utility.collapseExpand(mAddrLayout); com.extenprise.mapp.medico.util.Utility.collapseExpand(mContLay); } <BUGE> } 
public void soundDb(double ampl) { <BUGS> values.add((20 * (java.lang.Math.log10(((getAmplitudeEMA()) / ampl))))); <BUGE> android.util.Log.d("Sound", java.lang.String.valueOf((20 * (java.lang.Math.log10(((getAmplitudeEMA()) / ampl)))))); } 
<BUGS> private void setupWorldEdit() { <BUGE> org.bukkit.plugin.Plugin test = this.getServer().getPluginManager().getPlugin("WorldEdit"); if ((svenbrnn.orerespawn.oreRespawn.worldEdit) == null) { if (test != null) { svenbrnn.orerespawn.oreRespawn.worldEdit = ((com.sk89q.worldedit.bukkit.WorldEditPlugin) (test)); java.lang.System.out.println("[OreRespawn] WorldEdit detected!"); <BUGS> <BUGE> } } <BUGS> <BUGE> } 
public boolean remove(net.osmand.osm.edit.Relation.RelationMember key) { if ((members) != null) { java.util.Iterator<net.osmand.osm.edit.Relation.RelationMember> it = members.iterator(); while (it.hasNext()) { net.osmand.osm.edit.Relation.RelationMember rm = it.next(); if (rm == key) { <BUGS> <BUGE> return true; } } } return false; } 
public void vote() throws java.lang.ClassNotFoundException, java.sql.SQLException { <BUGS> java.lang.System.out.println("\nPlease select the note you want to vote for (0-7):"); <BUGE> int vote = scan.nextInt(); if ((vote <= 7) && (vote > 0)) { java.lang.System.out.println("Attempting vote registration."); registerVote(vote); }else { java.lang.System.out.println("Select a note between 0 and 7."); vote(); } } 
@java.lang.Override public java.util.Optional<java.lang.String> start(de.chrthms.hmatic4j.event.client.HMEventExecution execution) { this.execution = execution; de.chrthms.hmatic4j.event.core.HMEventRegistry registry = de.chrthms.hmatic4j.event.core.impl.HMEventRegistryImpl.getInstance(); registryId = registry.register(this); if (onceOnly) { <BUGS> return java.util.Optional.of(registryId); <BUGE> } <BUGS> return java.util.Optional.empty(); <BUGE> } 
@java.lang.Override public void onSuccess(long reqId, java.lang.String header, java.lang.String sequence, java.util.List<biospectra.classify.beans.SearchResultEntry> result, biospectra.classify.beans.ClassificationResult.ClassificationResultType type, java.lang.String taxonRank) { biospectra.classify.beans.ClassificationResult bresult = new biospectra.classify.beans.ClassificationResult(header, sequence, result, type, taxonRank); java.lang.String json; try { json = serializer.toJson(bresult); summary.report(bresult); <BUGS> bw.write((json + "\n")); <BUGE> } catch (java.io.IOException ex) { biospectra.classify.ClassifierClient.LOG.error("Cannot write to a file", ex); } } 
private static void connectToPeer(java.lang.String peerName, int peerPort) { try { <BUGS> if (Peer.peerStubs.contains(peerName)) { return ; } <BUGE> java.rmi.registry.Registry theirReg = java.rmi.registry.LocateRegistry.getRegistry("localhost", peerPort); Peer.boundPeerStub = ((PeerInterface) (theirReg.lookup(peerName))); Peer.peerStubs.put(peerName, Peer.boundPeerStub); java.lang.System.out.println(("Found peer " + peerName)); } catch (java.lang.Exception e) { e.printStackTrace(); } } 
public boolean checkAvailability(int position, java.lang.String posis) { if (map1[position].equals(posis)) { return true; <BUGS> } switch (map1[position]) { case "d" : return false; case "e" : return false; case "f" : return false; case "g" : return false; case "h" : return false; case "i" : return false; case "3" : return false; case "5" : return false; default : return true; <BUGE> } } 
@javax.annotation.PreDestroy public void dispose() { <BUGS> for (int i = (this.objects.size()) - 1; i >= 0; i++) { <BUGE> try { this.dispose.accept(this.objects.get(i)); } catch (java.lang.Throwable t) { } } } 
private static boolean licenseFileExists() { <BUGS> java.io.File licenseFile = new java.io.File(org.eclipse.titan.regressiontests.MainTestSuite.LICENSE_FILE); if (licenseFile.exists()) { return true; <BUGE> } final java.lang.String licenseFromEnv = java.lang.System.getenv("TTCN3_LICENSE_FILE"); if (licenseFromEnv != null) { <BUGS> licenseFile = new java.io.File(licenseFromEnv); if (licenseFile.exists()) { <BUGE> return true; } } return false; } 
@java.lang.Override <BUGS> <BUGE> public boolean allowTarget(final org.wirez.core.graph.Node target, final org.wirez.core.graph.Edge<org.wirez.core.graph.content.view.View<?>, org.wirez.core.graph.Node> connector, final int magnet) { <BUGS> if (null != (canvasHandler)) { <BUGE> org.wirez.core.command.CommandResult<org.wirez.core.client.command.CanvasViolation> violations = canvasCommandManager.allow(canvasHandler, canvasCommandFactory.SET_TARGET_NODE(target, connector, magnet)); return isAccept(violations); } <BUGS> return true; <BUGE> } 
private void updateResults() { int lastIndex; if (isLoading) { lastIndex = results.size(); }else { lastIndex = (results.size()) - 1; } fireContentsChanged(this, oldLength, oldLength); <BUGS> fireIntervalAdded(this, oldLength, ((results.size()) - 1)); <BUGE> oldLength = results.size(); } 
@java.lang.Override public void onItemSelected(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) { omacka = 0; switch (position) { <BUGS> <BUGE> case 1 : omacka += 1; setIngedience(val); break; case 2 : omacka += 2; setIngedience(val); break; } } 
@org.junit.Test public void numDoors() { int door = 0; for (clueGame.BoardCell[] i : tests.clueBoardTests.board.getBoard()) { for (clueGame.BoardCell j : i) { <BUGS> if (j.isDoorway()) { <BUGE> ++door; } } } assertEquals(tests.clueBoardTests.NUM_DOORS, door); } 
public void updateSystemCount() throws java.lang.NumberFormatException { numSystems = java.lang.Math.abs(java.lang.Integer.parseInt(_FormattedTF_NumSystems.getText())); if ((numSystems) > 60) { numSystems = 60; _FormattedTF_NumSystems.setValue(new java.lang.Integer("60")); }else <BUGS> if ((numSystems) == 0) { numSystems = 1; _FormattedTF_NumSystems.setValue(new java.lang.Integer("1")); <BUGE> }  cs.getRackIndex(_ComboBox_Racks.getSelectedIndex()).getSuctionGroupIndex(_ComboBox_SuctionGroups.getSelectedIndex()).setNumSystems(numSystems); } 
@java.lang.Override public void onLocationChange(android.location.Location location, gps.fhv.at.gps_hawk.domain.events.NewLocationEventData data) { data.setTrack(mCurrentTrack); gps.fhv.at.gps_hawk.domain.Waypoint waypoint = gps.fhv.at.gps_hawk.workers.WaypointFactory.getInstance().createWaypoint(location, data); <BUGS> android.util.Log.v(Constants.PREFERENCES, ("onLocationChange: " + (waypoint.getProvider()))); <BUGE> android.content.Intent intent = new android.content.Intent(gps.fhv.at.gps_hawk.Constants.BROADCAST_NEW_WAYPOINT); intent.putExtra(Constants.EXTRA_WAYPOINT, waypoint); android.support.v4.content.LocalBroadcastManager.getInstance(mContext).sendBroadcast(intent); } 
private metaopt.Operation chooseOpToSchedule(java.util.ArrayList<metaopt.Operation> conflicts) { <BUGS> int index = (randomNumber) % (conflicts.size()); <BUGE> for (metaopt.Operation op : schedulable) { if (conflicts.get(index).equals(op)) { schedulable.remove(op); return op; } } return null; } 
private javafx.collections.ObservableList<java.lang.Integer> populateTrackNumberComboBox() { javafx.collections.ObservableList<java.lang.Integer> options; if ((ui.Slave.getSequence()) != null) { options = javafx.collections.FXCollections.observableArrayList(); for (int i = 0; i < (ui.Slave.getSequence().getTracks().length); i++) { <BUGS> <BUGE> options.add(i); } }else { options = javafx.collections.FXCollections.observableArrayList(0); } return options; } 
public org.dotwebstack.framework.informationproduct.InformationProduct create(org.eclipse.rdf4j.model.IRI identifier, java.lang.String label, org.dotwebstack.framework.backend.Backend backend, org.eclipse.rdf4j.model.Model statements) { <BUGS> java.lang.String query = org.eclipse.rdf4j.model.util.Models.objectString(statements.filter(null, ELMO.QUERY, null)).orElseThrow(() -> new org.dotwebstack.framework.config.ConfigurationException(java.lang.String.format("No <%s> statement has been found for a sparql information product <%s>.", ELMO.QUERY, backend.getIdentifier()))); <BUGE> org.dotwebstack.framework.backend.ResultType resultType = getQueryType(query); return new org.dotwebstack.framework.backend.sparql.SparqlBackendInformationProduct.Builder(identifier, ((org.dotwebstack.framework.backend.sparql.SparqlBackend) (backend)), query, resultType, queryEvaluator).label(label).build(); } 
@java.lang.Override public int onStartCommand(android.content.Intent intent, int flags, int startId) { <BUGS> android.app.NotificationManager notificationManager = ((android.app.NotificationManager) (getSystemService(Context.NOTIFICATION_SERVICE))); <BUGE> android.app.Notification noti = new android.app.Notification.Builder(this).setContentTitle("^____^").setContentText("I'm Your Pet!").setSmallIcon(R.mipmap.ic_launcher).setOngoing(true).build(); startForeground(com.air.petphone.KillNotificationService.NOTIFICATION_ID, noti); return START_STICKY; } 
private void moveBy(double move) { nextx = (x) + ((dir[0]) * move); nexty = (y) + ((dir[1]) * move); intx = ((int) (nextx)); inty = ((int) (nexty)); <BUGS> <BUGE> } 
@java.lang.Override public void start() { com.door43.translationstudio.core.Library library = com.door43.translationstudio.AppContext.getLibrary(); try { com.door43.translationstudio.AppContext.deployDefaultLibrary(library); <BUGS> <BUGE> library.seedDownloadIndex(); } catch (java.lang.Exception e) { com.door43.tools.reporting.Logger.e(this.getClass().getName(), "Failed to deploy the default index", e); } } 
@java.lang.Override public boolean containsIndex(java.lang.String indexId) { if (threadSafe) { lock.readLock().lock(); <BUGS> } try { return indexes.containsKey(indexId); } finally { if (threadSafe) { <BUGE> lock.readLock().unlock(); } <BUGS> <BUGE> } } 
@java.lang.Override public void onDataChange(com.firebase.client.DataSnapshot dataSnapshot) { try { io.punchtime.punchtime.data.Pulse p = dataSnapshot.getChildren().iterator().next().getValue(io.punchtime.punchtime.data.Pulse.class); updateCheckinUI(p); if ((p.getCheckout()) == 0) setCheckedIn(true);  } catch (java.lang.Exception e) { updateCheckinUI(null); <BUGS> <BUGE> } } 
private void startDownload(java.lang.String idLesson, java.lang.String url, java.lang.String downloadType) { intentDownloadAll = new android.content.Intent(getActivity(), com.erpdevelopment.vbvm.service.DownloadAllService.class); intentDownloadAll.putExtra("idLesson", idLesson); intentDownloadAll.putExtra("url", url); intentDownloadAll.putExtra("downloadType", downloadType); getActivity().startService(intentDownloadAll); <BUGS> adapterLessons.setIntentServiceDownloadAll(intentDownloadAll); <BUGE> com.erpdevelopment.vbvm.service.DownloadAllService.incrementCount(); } 
private com.google.gcloud.testing.LocalDnsHelper.Response handleZoneList(com.sun.net.httpserver.HttpExchange exchange) { java.lang.String path = com.google.gcloud.testing.LocalDnsHelper.BASE_CONTEXT.relativize(exchange.getRequestURI()).getPath(); java.lang.String[] tokens = path.split("/"); <BUGS> java.lang.String projectId = tokens[1]; <BUGE> java.lang.String query = com.google.gcloud.testing.LocalDnsHelper.BASE_CONTEXT.relativize(exchange.getRequestURI()).getQuery(); java.util.Map<java.lang.String, java.lang.Object> options = com.google.gcloud.testing.OptionParsersAndExtractors.parseListZonesOptions(query); return listZones(projectId, options); } 
@org.junit.Test public void testGetPart() { <BUGS> org.junit.Assert.assertEquals(123456789, be.inniger.euler.util.Maths.getPart(123456789, 0, 9)); org.junit.Assert.assertEquals(23456789, be.inniger.euler.util.Maths.getPart(123456789, 1, 9)); org.junit.Assert.assertEquals(12345678, be.inniger.euler.util.Maths.getPart(123456789, 0, 8)); org.junit.Assert.assertEquals(345, be.inniger.euler.util.Maths.getPart(123456789, 2, 5)); <BUGE> } 
@java.lang.Override public int compare(rdoshi.codepath.todoapp.TaskItem t1, rdoshi.codepath.todoapp.TaskItem t2) { <BUGS> if (((t1.getDueDate()) != null) && ((t2.getDueDate()) != null)) { return t1.getDueDate().compareTo(t2.getDueDate()); }else if ((t1.getDueDate()) == null) { return 1; }else { return -1; }  <BUGE> } 
public void addFirstNode(int data) { if ((size) == 0) { head = new a3.LinkedList.Node(data); head.next = tail; <BUGS> <BUGE> }else { a3.LinkedList.Node newNode = new a3.LinkedList.Node(data); newNode.next = head; head = newNode; } ++(size); } 
public static java.lang.String toPascalCase(java.lang.String string) { java.lang.StringBuilder nb = new java.lang.StringBuilder(); for (java.lang.String word : com.psddev.dari.util.StringUtils.splitString(string)) { <BUGS> nb.append(java.lang.Character.toUpperCase(word.charAt(0))).append(word.substring(1)); <BUGE> } return nb.toString(); } 
@java.lang.Override public io.reactivex.ObservableSource<prada.lab.android.pingo.model.Tag> apply(prada.lab.android.pingo.model.Tag tag) throws java.lang.Exception { <BUGS> java.util.List<prada.lab.android.pingo.model.Tag> tags = mTagSub.getValue(); tags.add(tag); mTagSub.onNext(tags); <BUGE> prada.lab.android.pingo.model.PingoPlace place = findPlaceById(placeId); place.getTags().add(tag); mPlaces.remove(place); mPlaces.add(0, place); mPlacesSubject.onNext(mPlaces); <BUGS> <BUGE> return io.reactivex.Observable.just(tag); } 
@java.lang.Override public void setProperty(java.lang.String s, java.lang.Object o) { try { java.lang.String attr = replaceAspectAttrSep(s); <BUGS> int attrDataType = sysObject.getAttrDataType(s); <BUGE> sysObject.setValue(attr, toDfValue(o, attrDataType)); } catch (mc.dctm.el.identifier.context.DfException e) { throw new java.lang.RuntimeException(e); } } 
private static boolean dummyAccountAlreadyAdded(android.accounts.Account[] accountsByType) { for (int i = 0; i < (accountsByType.length); i++) { <BUGS> if ((accountsByType[i].name) == (com.philosophicalhacker.philhackernews.PhilHackerNewsApplication.ACCOUNT_NAME)) { <BUGE> return true; } } return false; } 
public java.lang.String getNodeName(java.lang.String id) { for (int i = 0; i < (nodeList.size()); i++) { <BUGS> if ((nodeList.get(i).getID()) == id) { <BUGE> return nodeList.get(i).getName(); } } return null; } 
@java.lang.Override public void write(final me.noize.chemistry.io.Entry<T> entry) throws me.noize.chemistry.io.ChemistryIOException { <BUGS> if (this.streams.peek().hasEntries()) { this.streams.peek().write(entry); }else if (!(this.streams.isEmpty())) { <BUGE> me.noize.chemistry.io.EntryOutputStream<T> old = this.streams.poll(); old.close(); this.write(entry); <BUGS> }else { throw new me.noize.chemistry.io.ChemistryIOException("Stream could not be advanced"); <BUGE> } <BUGS>  <BUGE> } 
public void resize() { java.lang.Object[] temp = new java.lang.Object[(storage.length) * 2]; java.lang.System.arraycopy(storage, head, temp, 0, ((storage.length) - (head))); java.lang.System.arraycopy(storage, 0, temp, ((storage.length) - (head)), tail); head = (temp.length) - 1; tail = storage.length; <BUGS> <BUGE> } 
public int adjustComputerBuilders(int amount) { int difference = amount; if (((computerBuilders) < (java.lang.Math.abs(difference))) && (amount < 0)) { <BUGS> difference = -(computerBuilders); computerBuilders = 0; <BUGE> }else { computerBuilders += amount; } if (difference != 0) gi.setComputerBuildersLabelChangeText(difference);  return difference; } 
public static games.strategy.triplea.ai.proAI.data.ProBattleResult calculateBattleResults(final games.strategy.engine.data.PlayerID player, final games.strategy.engine.data.Territory t, final java.util.List<games.strategy.engine.data.Unit> attackingUnits, final java.util.List<games.strategy.engine.data.Unit> defendingUnits, final java.util.Set<games.strategy.engine.data.Unit> bombardingUnits, final boolean isAttacker) { final games.strategy.triplea.ai.proAI.data.ProBattleResult result = games.strategy.triplea.ai.proAI.util.ProBattleUtils.checkIfNoAttackersOrDefenders(t, attackingUnits, defendingUnits); if (result != null) { return result; } <BUGS> return games.strategy.triplea.ai.proAI.util.ProBattleUtils.callBattleCalculator(player, t, attackingUnits, defendingUnits, bombardingUnits, isAttacker); <BUGE> } 
@java.lang.Override public void done(com.parse.ParseObject parseObject, com.parse.ParseException e) { <BUGS> if (parseObject == null) { <BUGE> java.lang.System.out.println("null score"); com.parse.ParseObject userscore = new com.parse.ParseObject("Scores"); userscore.put("score", com.cards.flash.testez.TallyScore.getScore()); userscore.put("user", com.parse.ParseUser.getCurrentUser()); saveScoreObject(userscore); com.cards.flash.testez.TallyScore.resetScore(); }else { } } 
<BUGS> @com.chronicle.controller.RequestMapping(value = { "/login/{id}/{pswd}" }, method = RequestMethod.GET, produces = { org.springframework.http.MediaType.APPLICATION_JSON_VALUE }) <BUGE> public java.lang.String login(@com.chronicle.controller.PathVariable <BUGS> java.lang.Long id, java.lang.String password) { <BUGE> logger.info(("login with id : {}" + id)); com.chronicle.controller.User user = userService.findById(id); <BUGS> if ((user.getPassword()) == password) { <BUGE> return user.getRole(); }else { return "User Doesn't exist"; } } 
public void manualCtl() { double y = m_liftStick.getY(GenericHID.Hand.kLeft); m_robot.logger.debug(("manualCtl:" + y)); if ((isAnyLimitSwitchClosed()) || ((java.lang.Math.abs(y)) < (k_minJoystickValue))) { stopMotor(); <BUGS> }else if ((java.lang.Math.abs(y)) > (k_minJoystickValue)) { startMotor(); m_mainMotor.set(y); }  <BUGE> } 
@java.lang.Override public void onConfigurationChanged(android.content.res.Configuration newConfig) { super.onConfigurationChanged(newConfig); if ((notFirstRun) || (!(com.brainicism.projectrito.MainActivity.summonerName.equals("")))) { com.brainicism.projectrito.MainActivity.checkValidSummoner check = new com.brainicism.projectrito.MainActivity.checkValidSummoner(); check.execute(); } <BUGS> android.util.Log.i(com.brainicism.projectrito.MainActivity.TAG, "CONFIG CHANGED"); <BUGE> } 
public void setItemSelected(int pos, boolean selected, android.view.View view) { <BUGS> if ((pos > 0) && (pos < (mAdapter.getItemCount()))) { if (selected) { mSelectedItems.put(pos, selected); view.setSelected(true); }else { mSelectedItems.delete(pos); view.setSelected(false); } <BUGE> } <BUGS> <BUGE> } 
private void setUpMapIfNeeded() { <BUGS> if ((com.mycompany.behear.MainActivity.mMap) != null) { return ; <BUGE> } <BUGS> com.mycompany.behear.MainActivity.mMap = ((com.google.android.gms.maps.SupportMapFragment) (getSupportFragmentManager().findFragmentById(R.id.map))).getMap(); <BUGE> if ((com.mycompany.behear.MainActivity.mMap) == null) { return ; } } 
public static void logShortError(java.lang.Exception e, int lines) { java.lang.String s = e.toString(); int i = 0; for (java.lang.StackTraceElement er : e.getStackTrace()) { if (i == lines) { break; } s += "\n\tat " + (er.toString()); <BUGS> <BUGE> } e.printStackTrace(); global.record.Log.log("ERROR", s); <BUGS> e.printStackTrace(); <BUGE> } 
@java.lang.Override <BUGS> protected synchronized void analyzeScrimmageMatch(model.BSScrimmageSet scrim) { <BUGE> javax.persistence.EntityManager em = common.HibernateUtil.getEntityManager(); em.persist(scrim); em.getTransaction().begin(); em.flush(); em.getTransaction().commit(); em.refresh(scrim); em.close(); master.WebSocketChannelManager.broadcastMsg("scrimmage", "INSERT_TABLE_ROW", (((scrim.getId()) + ",") + (scrim.getFileName()))); startRun(); } 
@java.lang.Override public boolean next() throws java.io.IOException { <BUGS> <BUGE> assertPagedFileStillMapped(); if ((nextPageId) > (lastPageId)) { if (((pf_flags) & (org.neo4j.io.pagecache.PagedFile.PF_NO_GROW)) != 0) { return false; }else { pagedFile.increaseLastPageIdTo(nextPageId); } } <BUGS> unpinCurrentPage(); <BUGE> pin(nextPageId, true); currentPageId = nextPageId; (nextPageId)++; return true; } 
@org.junit.Test public void get_GivenUnknownIdShouldReturnNotFoundStatus() throws com.nextlunch.api.service.exception.ReadException { org.mockito.Mockito.when(service.getWinnerOfDay(org.mockito.Matchers.any(java.util.Date.class))).thenThrow(new com.nextlunch.api.service.exception.ReadException(com.nextlunch.api.service.exception.enums.ReadExceptionMessageEnum.NOT_FOUND)); @java.lang.SuppressWarnings(value = "rawtypes") org.springframework.http.ResponseEntity responseEntity = controller.getWinnerOfDay(); org.springframework.http.HttpStatus httpStatus = responseEntity.getStatusCode(); org.hamcrest.MatcherAssert.assertThat("Wrong HTTP status for unknown ID", httpStatus, org.hamcrest.Matchers.equalTo(HttpStatus.NOT_FOUND)); <BUGS> org.mockito.Mockito.verify(service, org.mockito.Mockito.times(1)).getWinnerOfDay(day); <BUGE> } 
@java.lang.Override @java.lang.SuppressWarnings(value = "unchecked") public org.backmeup.model.BackMeUpUser findByName(java.lang.String username) { javax.persistence.Query q = em.createQuery("SELECT u FROM BackMeUpUser u WHERE username = :username"); q.setParameter("username", username); java.util.List<org.backmeup.model.BackMeUpUser> users = q.getResultList(); <BUGS> org.backmeup.model.BackMeUpUser u = ((users.size()) > 0) ? users.get(0) : null; <BUGE> return u; } 
public static java.lang.String[] toMhz(java.lang.String... values) { java.lang.String[] frequency = new java.lang.String[values.length]; for (int i = 0; i < (values.length); i++) { try { <BUGS> frequency[i] = ((java.lang.Integer.parseInt(values[i])) / (1000 * 1000)) + " Mhz"; <BUGE> } catch (java.lang.NumberFormatException nfe) { nfe.printStackTrace(); } } return frequency; } 
private java.lang.Double whichOperator(java.lang.String inputOperator, java.lang.String num1, java.lang.String num2) { <BUGS> if (inputOperator == "+") <BUGE> return addFn(num1, num2); else <BUGS> if (inputOperator == "-") <BUGE> return subtractFn(num1, num2); else <BUGS> if (inputOperator == "*") <BUGE> return multiplyFn(num1, num2); else return divideFn(num1, num2);    } 
private java.lang.String subtract(java.lang.String x, java.lang.String y) { <BUGS> java.math.BigDecimal i = new java.math.BigDecimal(x); java.math.BigDecimal j = new java.math.BigDecimal(y); <BUGE> java.math.BigDecimal k = j.subtract(i); k = k.stripTrailingZeros(); return k.toPlainString(); } 
public final void moveItem(T item, int toPosition) { int fromPosition = mItems.indexOf(item); <BUGS> java.util.Collections.swap(mItems, fromPosition, toPosition); <BUGE> com.github.gfranks.dynamiccard.adapter.DynamicCardAdapter.notifyItemMoved(fromPosition, toPosition); if ((mCallback) != null) { mCallback.onDynamicCardPositionChanged(this, fromPosition, toPosition); } } 
public void send(java.io.DataOutputStream os) { byte[] stringBytes = playerid.getBytes(); try { os.writeLong(timestamp); os.write(stringBytes.length); <BUGS> <BUGE> os.writeInt(command); os.writeInt(xcord); os.write(ycord); } catch (java.io.IOException e) { e.printStackTrace(); } } 
public void parseRobotoReply(java.lang.String resp) { java.lang.String cmd = resp.substring(0, 1); if (cmd.equals(MsRobotoLab4.ROBOTO_SIMPLE_REPLY)) { message = "Success - command done"; }else if (cmd.equals(MsRobotoLab4.ROBOTO_RESULT_REPLY)) { message = "Success - "; result = java.lang.Integer.parseInt(resp.split(" ")[1]); }else { message = "Error - "; <BUGS> message += resp.split(" ")[1]; <BUGE> }  } 
public com.brashmonkey.spriter.file.Reference findReferenceByFileNameAndFolder(java.lang.String fileName, java.lang.String folderName, boolean withoutExtension) { com.brashmonkey.spriter.file.Reference[] refs = this.findReferencesByFolderName(folderName); for (com.brashmonkey.spriter.file.Reference ref : refs) { java.lang.String file = ref.fileName.replaceAll((folderName + "/"), ""); if (withoutExtension) file = file.replaceAll(".png", "");  <BUGS> if (file.equals(fileName)) <BUGE> return ref;  } return null; } 
@java.lang.Override public void store() { try (java.io.ByteArrayOutputStream bos = new java.io.ByteArrayOutputStream()) { try (java.io.ObjectOutput out = new java.io.ObjectOutputStream(bos)) { <BUGS> out.writeObject(this.data); <BUGE> this.buffer = bos.toByteArray(); } } catch (java.io.IOException e) { e.printStackTrace(); } super.store(); } 
@org.junit.Test public void configuresMultipleCuriesWithoutDefaultCorrectly() { org.springframework.hateoas.hal.DefaultCurieProvider provider = new org.springframework.hateoas.hal.DefaultCurieProvider(org.springframework.hateoas.hal.DefaultCurieProviderUnitTest.getCuries()); <BUGS> org.junit.Assert.assertThat(provider.getCurieInformation(new org.springframework.hateoas.Links()), hasSize(2)); org.junit.Assert.assertThat(provider.getNamespacedRelFor("some"), org.hamcrest.CoreMatchers.is("some")); <BUGE> } 
@java.lang.Override public com.hauldata.util.tokenizer.Token nextToken() throws java.io.IOException, java.util.InputMismatchException { com.hauldata.util.tokenizer.Token token; if (position.hasNext()) { token = position.next(); }else { token = super.getToken(); if (token != null) { position.add(token); } } <BUGS> return rememberToken(token); <BUGE> } 
public static java.lang.String PaymentAuth(long cardAmount, int cash, int TotalPay) { java.util.Scanner ms = new java.util.Scanner(java.lang.System.in); java.lang.System.out.println("Payment Option: Cash or Card?"); java.lang.String option = ms.next(); if (option == "Cash") { if (cash == TotalPay) { return "Success! Payment has been authorized"; }else { return "Payment fail! Please check amount"; } }else if (option == "Card") { if (cardAmount == TotalPay) { return "Success! Payment has been authorized"; }else { return "Payment fail! Please check card or amount"; } }  <BUGS> <BUGE> } 
private void generateAllowedPorts() { java.util.Set<java.lang.Integer> tmp = new java.util.HashSet<>(); java.lang.String whiteList = portWhiteList.get(); for (java.lang.String s : whiteList.split(",")) { try { <BUGS> java.lang.Integer.parseInt(s); <BUGE> } catch (java.lang.NumberFormatException e) { return ; } } allowedPorts.set(tmp); } 
void mergeSort(int[] a, int[] p, int[] c, int l, int r) { <BUGS> int range = r - l; if (range > 0) { int m = l + (range / 2); mergeSort(a, p, c, l, m); mergeSort(a, p, c, (m + 1), r); merge(a, p, c, l, r); <BUGE> } <BUGS> <BUGE> } 
@java.lang.Override public void onClick(android.view.View v) { android.util.Log.i(com.polito.mad17.madmax.activities.ProfileEdit.TAG, "save clicked"); <BUGS> updateAccount(); android.widget.Toast.makeText(this, "Saved", Toast.LENGTH_SHORT).show(); android.content.Intent i = new android.content.Intent(getApplicationContext(), com.polito.mad17.madmax.activities.MainActivity.class); startActivity(i); finish(); <BUGE> } 
@org.junit.Test public void primitiveTypesToJSON() { <BUGS> org.junit.Assert.assertEquals(ru.otus.homework_08.JSON.toJSON(15), gson.toJson(15)); org.junit.Assert.assertEquals(ru.otus.homework_08.JSON.toJSON('c'), gson.toJson('c')); org.junit.Assert.assertEquals(ru.otus.homework_08.JSON.toJSON(true), gson.toJson(true)); <BUGE> } 
@org.junit.Test public void idTest() { org.marc.everest.datatypes.II id = clinicalDocument.getId(); org.junit.Assert.assertNotNull(id); <BUGS> org.junit.Assert.assertEquals(Constants.Runtime.VALID_DEMOGRAPHIC.toString(), id.getRoot()); org.junit.Assert.assertFalse(org.oscarehr.e2e.util.EverestUtils.isNullorEmptyorWhitespace(id.getExtension())); <BUGE> } 
@java.lang.Override protected void onActivityResult(int requestCode, int resultCode, android.content.Intent data) { super.onActivityResult(requestCode, resultCode, data); if (requestCode == (felixwiemuth.lincal.ui.AddCalendarActivity.RESULT_CODE_SELECT_FILE)) { if (data != null) { <BUGS> final int takeFlags = (data.getFlags()) & ((android.content.Intent.FLAG_GRANT_READ_URI_PERMISSION) | (android.content.Intent.FLAG_GRANT_WRITE_URI_PERMISSION)); <BUGE> getContentResolver().takePersistableUriPermission(data.getData(), takeFlags); fileEditText.setText(data.getDataString()); } } } 
public static void delete(java.io.File f) throws java.io.IOException { <BUGS> <BUGE> if (f.isDirectory()) { for (java.io.File c : f.listFiles()) { org.ohmage.Utilities.delete(c); } } <BUGS> if (!(f.delete())) { throw new java.io.IOException(("Failed to delete file: " + f)); } <BUGE> } 
@android.support.annotation.Nullable public android.os.Bundle onProvideTransientParamsImpl(@android.support.annotation.NonNull V v, @android.support.annotation.NonNull android.view.View view, @android.support.annotation.Nullable android.os.Bundle params) { <BUGS> <BUGE> allowScreenViewCalls = true; android.os.Bundle b = v.onProvideParams(view, params); if (b != null) params = b;  allowScreenViewCalls = false; <BUGS> VP presenter = getPresenter(v); <BUGE> if (presenter != null) { b = presenter.onProvideTransientParams(v, view, params); if (b != null) params = b;  } return params; } 
public void resetUsed() { for (int i = 0; i < (team.size()); i++) { <BUGS> if (i == (frontIndex)) { team.get(i).getAttributes().setUsed(true); }else { team.get(i).getAttributes().setUsed(false); } <BUGE> } } 
public boolean validate(Model.Tile.BuildTile target, Model.Utility.ILocation loc) { <BUGS> if (slots.isEmpty()) { <BUGE> return true; } if (((buildMap.tileExistsAt(loc)) || (!(this.slotExistsAt(loc)))) || (!(buildMap.locationInBounds(loc)))) { return false; } Model.Map.Slot mySlot = slots.get(loc); return mySlot.checkMatch(target.getEdges()); } 
@java.lang.Override public void dragTo(final illarion.client.world.interactive.InteractiveInventorySlot targetSlot) { <BUGS> if ((!(isValidItem())) || (targetSlot.isValidItem())) { <BUGE> return ; } final illarion.client.net.client.DragInvInvCmd cmd = illarion.client.net.CommandFactory.getInstance().getCommand(CommandList.CMD_DRAG_INV_INV, illarion.client.net.client.DragInvInvCmd.class); cmd.setDrag(getSlotId(), targetSlot.getSlotId()); cmd.send(); } 
@java.lang.Override <BUGS> @org.springframework.web.bind.annotation.RequestMapping(value = "/user") public api.ConfirmationMessage user(@org.springframework.web.bind.annotation.RequestParam(value = "userTypeId") <BUGE> int userTypeId, @org.springframework.web.bind.annotation.RequestParam(value = "calamityAssigneeId") int calamityAssigneeId, @org.springframework.web.bind.annotation.RequestParam(value = "buildingId") int buildingId, @org.springframework.web.bind.annotation.RequestParam(value = "username") java.lang.String username, @org.springframework.web.bind.annotation.RequestParam(value = "password") java.lang.String password, @org.springframework.web.bind.annotation.RequestParam(value = "email") java.lang.String email, @org.springframework.web.bind.annotation.RequestParam(value = "city") java.lang.String city, @org.springframework.web.bind.annotation.RequestParam(value = "token") java.lang.String token) { return userLogic.addUser(userTypeId, calamityAssigneeId, buildingId, username, password, email, city, token); } 
private java.lang.String readCommandOutput(java.lang.Process process) { java.lang.String s; java.lang.StringBuilder sb = new java.lang.StringBuilder(); try { java.io.BufferedReader stdInput = new java.io.BufferedReader(new java.io.InputStreamReader(process.getInputStream())); while ((s = stdInput.readLine()) != null) { <BUGS> sb.append(s); <BUGE> } } catch (java.io.IOException e) { e.printStackTrace(); } return sb.toString(); } 
@java.lang.Override public java.lang.String getValue() { java.util.List<org.roda.core.data.v2.TransferredResource> items = display.getVisibleItems(); if ((items.size()) == 0) { return ""; }else { long totalSize = 0; for (org.roda.core.data.v2.TransferredResource item : items) { totalSize += item.getSize(); } <BUGS> return org.roda.wui.common.client.tools.Humanize.readableFileSize(totalSize); <BUGE> } } 
@java.lang.Override public void saveToStorage() throws java.lang.Exception { <BUGS> <BUGE> w094j.ctrl8.database.Storage diskStorage = new w094j.ctrl8.database.DiskStorage(this.file, this.path, this.gson); <BUGS> w094j.ctrl8.database.Storage googleStorage = new w094j.ctrl8.database.GoogleStorage(this.file, this.gson); <BUGE> diskStorage.storeData(); <BUGS> googleStorage.storeData(); <BUGE> } 
public static void main(java.lang.String[] args) { com.alvarpq.GOTF.coreGame.board.BoardHalf half1 = new com.alvarpq.GOTF.coreGame.board.BoardHalf(5, 3, 8); com.alvarpq.GOTF.coreGame.board.BoardHalf half2 = new com.alvarpq.GOTF.coreGame.board.BoardHalf(5, 3, 8); half1.addUnit(new com.alvarpq.GOTF.coreGame.units.KinfolkBrave(0, 0), half2); <BUGS> half2.addUnit(new com.alvarpq.GOTF.coreGame.units.KinfolkBrave(1, 2), half2); <BUGE> half1.getUnitAt(0, 0).attack(half1, half2); <BUGS> java.lang.System.out.println(com.alvarpq.GOTF.coreGame.board.BoardHalf.isAdjacent(0, 0, 1, 1)); <BUGE> } 
<BUGS> private static boolean handleMainBlocks(de.fhg.iais.roberta.syntax.codegen.CppCodeGenerationVisitor astVisitor, boolean mainBlock, de.fhg.iais.roberta.syntax.Phrase<java.lang.Void> phrase) { <BUGE> if ((phrase.getKind().getCategory()) != (de.fhg.iais.roberta.components.Category.TASK)) { astVisitor.nlIndent(); }else if (!(phrase.getKind().hasName("LOCATION"))) { mainBlock = true; }  return mainBlock; } 
@org.junit.Test public void whenModuleHasNoName_thenCorrespondingFitnessFeatureShouldBeTrue() { org.corpus_tools.pepper.modules.PepperModule module = org.mockito.Mockito.mock(org.corpus_tools.pepper.modules.PepperModule.class); org.mockito.Mockito.when(module.getName()).thenReturn(null); <BUGS> org.assertj.core.api.Assertions.assertThat(new org.corpus_tools.pepper.core.ModuleFitnessChecker(null).checkFitness(module).getFitness(FitnessFeature.HAS_NAME)).isEqualTo(false); <BUGE> } 
public java.util.Optional<java.lang.String> submitComment(java.lang.String text, net.dean.jraw.models.Submission submission) { try { final java.lang.String commentId = accountManager.reply(submission, text); <BUGS> com.fallingdutchman.youtuberedditbot.authentication.reddit.jraw.RedditManager.log.info("posted comment to %s on /r/%s, with id %s", submission.getId(), submission.getSubredditName(), commentId); <BUGE> return java.util.Optional.of(commentId); } catch (net.dean.jraw.ApiException e) { com.fallingdutchman.youtuberedditbot.authentication.reddit.jraw.RedditManager.log.error("was unable to post comment", e); return java.util.Optional.empty(); } } 
public void testEncodeAndDecodeWithPrefix() throws java.lang.Exception { java.lang.String encodedWithPrefix = org.datacleaner.util.SecurityUtils.encodePasswordWithPrefix(org.datacleaner.util.SecurityUtilsTest.PLAIN_TEXT_VALUE); assertEquals(org.datacleaner.util.SecurityUtilsTest.ENCODED_VALUE_WITH_PREFIX, encodedWithPrefix); java.lang.String decoded = org.datacleaner.util.SecurityUtils.decodePasswordWithPrefix(encodedWithPrefix); assertEquals(org.datacleaner.util.SecurityUtilsTest.PLAIN_TEXT_VALUE, decoded); <BUGS> decoded = org.datacleaner.util.SecurityUtils.decodePasswordWithPrefix(org.datacleaner.util.SecurityUtilsTest.ENCODED_VALUE); <BUGE> assertEquals(org.datacleaner.util.SecurityUtilsTest.PLAIN_TEXT_VALUE, decoded); } 
private void effect() { <BUGS> for (com.dungeon.game.effect.Effect effect : effects) { effect.update(this); <BUGE> } <BUGS> for (int i = 0; i < (effects.size()); i++) { <BUGE> if (effects.get(i).killMe) { effects.get(i).end(this); effects.remove(i); <BUGS> i--; <BUGE> } } } 
@java.lang.Override public boolean contains(java.lang.Object o) { <BUGS> if ((o instanceof java.lang.Integer) || (o instanceof java.lang.Integer)) { <BUGE> java.lang.Number n = ((java.lang.Number) (o)); int index = n.intValue(); return ((index > 0) && (index < (selectedIndices.length()))) && (selectedIndices.get(index)); } return false; } 
@java.lang.Override public void onItemSelected(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) { java.lang.String selectedItemText = ((java.lang.String) (parent.getItemAtPosition(position))); if (position > 0) { category = selectedItemText; <BUGS> android.widget.Toast.makeText(getApplicationContext(), selectedItemText, Toast.LENGTH_LONG).show(); <BUGE> } } 
private void validateEditing(com.webapplication.entity.AuctionItem auctionItem) throws java.lang.Exception { if ((auctionItem.getBidsNo()) != 0) throw new com.webapplication.exception.auctionitem.AuctionAlreadyInProgressException(com.webapplication.error.auctionitem.AuctionItemError.AUCTION_ALREADY_IN_PROGRESS);  <BUGS> if (auctionItem.getEndDate().after(new java.util.Date())) <BUGE> throw new com.webapplication.exception.auctionitem.AuctionExpiredException(com.webapplication.error.auctionitem.AuctionItemError.AUCTION_EXPIRED);  } 
protected void prepare() throws java.lang.IllegalStateException { startLoading(); this.videoIsReady = false; this.initialMovieHeight = -1; this.initialMovieWidth = -1; this.mediaPlayer.setOnPreparedListener(this); this.mediaPlayer.setOnErrorListener(this); this.mediaPlayer.setOnSeekCompleteListener(this); <BUGS> this.mediaPlayer.setOnCompletionListener(this); <BUGE> this.mediaPlayer.setAudioStreamType(AudioManager.STREAM_MUSIC); this.currentState = com.github.rtoshiro.view.video.FullscreenVideoView.State.PREPARING; this.mediaPlayer.prepareAsync(); } 
private au.com.mutopia.acs.models.c3ml.C3mlEntity buildEntity(de.micromata.opengis.kml.v_2_2_0.Document document) throws au.com.mutopia.acs.exceptions.ConversionException { au.com.mutopia.acs.models.c3ml.C3mlEntity entity = createEntity(document); java.util.List<de.micromata.opengis.kml.v_2_2_0.Feature> features = document.getFeature(); for (de.micromata.opengis.kml.v_2_2_0.Feature feature : features) { au.com.mutopia.acs.models.c3ml.C3mlEntity child = buildEntity(feature); <BUGS> if (child != null) { entity.addChild(child); } <BUGE> } return entity; } 
<BUGS> private void renderTime(final long milliseconds) { <BUGE> final long seconds = (milliseconds / 1000) % 60; final long minute = (milliseconds / 60000) % 60; final long hour = (milliseconds / 3600000) % 24; final long day = milliseconds / 86400000; final java.lang.String text = java.lang.String.format(mTimeFormat, day, hour, minute, seconds); setText(text); } 
private boolean privatePerformZoom(boolean byGesture, float scale, int centerX, int centerY, boolean shouldCallback) { float realScale = checkRealScale(scale); if (realScale == 1.0F) { <BUGS> if ((mZoomListener) != null) { fitTranslate(); mZoomListener.onZoomEnd(byGesture, 1, centerX, centerY); } <BUGE> return false; } zoomAnimated(byGesture, realScale, centerX, centerY, shouldCallback); return true; } 
<BUGS> public void execute(java.lang.String goal, java.lang.String pathToPom) { <BUGE> java.lang.System.setProperty("maven.multiModuleProjectDirectory", pathToPom); org.apache.maven.cli.MavenCli cli = new org.apache.maven.cli.MavenCli(); <BUGS> cli.doMain(new java.lang.String[]{ "clean" , goal }, pathToPom, java.lang.System.out, java.lang.System.err); <BUGE> } 
@java.lang.Override public void onPositiveActionClicked(com.rey.material.app.DialogFragment fragment) { com.rey.material.app.TimePickerDialog dialog = ((com.rey.material.app.TimePickerDialog) (fragment.getDialog())); <BUGS> android.widget.Toast.makeText(fragment.getActivity(), ("Time is " + (dialog.getFormattedTime(java.text.SimpleDateFormat.getTimeInstance()))), Toast.LENGTH_SHORT).show(); <BUGE> fragment.dismiss(); } 
@java.lang.Override public boolean isChunkEnd(@javax.annotation.Nonnull org.jenkinsci.plugins.workflow.graph.FlowNode current, @javax.annotation.CheckForNull org.jenkinsci.plugins.workflow.graph.FlowNode previous) { if (previous == null) { return false; } if (current instanceof org.jenkinsci.plugins.workflow.graph.BlockEndNode) { org.jenkinsci.plugins.workflow.graph.BlockStartNode bsn = ((org.jenkinsci.plugins.workflow.graph.BlockEndNode) (previous)).getStartNode(); if (isChunkStart(bsn, null)) { return true; } } <BUGS> return (previous != null) && (isChunkStart(previous, null)); <BUGE> } 
private hudson.plugins.timestamper.annotator.ConsoleLogParser.Result parseFromFinish(java.io.InputStream inputStream) throws java.io.IOException { hudson.plugins.timestamper.annotator.ConsoleLogParser.Result result = new hudson.plugins.timestamper.annotator.ConsoleLogParser.Result(); <BUGS> <BUGE> int value = inputStream.read(); result.atNewLine = isNewLine(value); while ((value = inputStream.read()) != (-1)) { if (isNewLine(value)) { (result.lineNumber)--; } } return result; } 
@java.lang.Override public boolean usesAttributes(java.lang.String tagName) { tagName = tagName.toLowerCase(); boolean usesAttributes = !(((tagName.equals("cfset")) || (tagName.equals("cfif"))) || (tagName.equals("cfelseif"))); <BUGS> java.lang.System.out.println(((("usesAttributes: " + tagName) + ":") + usesAttributes)); <BUGE> return usesAttributes; } 
private javafx.scene.text.Text createSummaryText() { summaryText = new javafx.scene.text.Text(appointment.getSummary()); summaryText.getStyleClass().add("AppointmentLabel"); summaryText.setX(layoutHelp.paddingProperty.get()); summaryText.setY(summaryText.prefHeight(0)); <BUGS> layoutHelp.clip(summaryText, widthProperty().subtract(layoutHelp.paddingProperty.get()), heightProperty()); <BUGE> return summaryText; } 
public final nez.util.UList<nez.expr.Expression> toList() { nez.util.UList<nez.expr.Expression> l = new nez.util.UList<nez.expr.Expression>(new nez.expr.Expression[this.size()]); <BUGS> for (nez.expr.Expression e : this) { l.add(e); <BUGE> } return l; } 
public int attack(edu.cis232.gwasos.resources.Combat enemy) { java.util.Random rand = new java.util.Random(); int monsterCurrentHp = enemy.getHp(); <BUGS> int r = rand.nextInt(((5 + (enemy.getAgility())) - (getAgility()))); if (r <= 3) { <BUGE> setMissed(false); enemy.damage(power); setPreviousAttackDamage((monsterCurrentHp - (enemy.getHp()))); }else { setMissed(true); } return previousAttackDamage; } 
private void moveClient(org.zapto.mike.mrstreamserver.Channel channel, org.zapto.mike.mrstreamserver.ClientHandler client) { boolean canJoin = true; <BUGS> java.lang.System.out.println((channel != (client.getChannel()))); <BUGE> if (canJoin && (channel != (client.getChannel()))) { client.setChannel(channel); channel.addClient(client); }else { } } 
@org.bukkit.event.EventHandler(priority = org.bukkit.event.EventPriority.MONITOR, ignoreCancelled = true) public void onEntityTame(org.bukkit.event.entity.EntityTameEvent event) { if (!((event.getOwner()) instanceof org.bukkit.entity.Player)) return ;  <BUGS> org.bukkit.entity.Player player = ((org.bukkit.entity.Player) (event.getEntity())); <BUGE> if (!(com.frdfsnlght.inquisitor.PlayerStats.isStatsPlayer(player))) return ;  PlayerStats.group.getStatistics(player.getName()).incr("animalsTamed", com.frdfsnlght.inquisitor.Utils.normalizeEntityTypeName(event.getEntityType())); } 
void setChecked(android.widget.TextView t1, android.widget.TextView t2, android.widget.ImageView i1, java.lang.String description_in) { i1.setImageResource(R.drawable.ic_check_box_black_24dp); t1.setTextColor(android.support.v4.content.ContextCompat.getColor(getApplicationContext(), R.color.PrimaryPink)); <BUGS> if (t2 != null) { <BUGE> t2.setText(description_in); } } 
@java.lang.Override public void start(java.net.InetAddress hostAddress) throws java.io.IOException { if (mRunningFlag) { throw new java.lang.UnsupportedOperationException(); } try { <BUGS> mServer.start(); mServer.bind(io.github.antijava.marjio.network.NET_TCP_PORT, io.github.antijava.marjio.network.NET_UDP_PORT); mServer.addListener(new io.github.antijava.marjio.network.ClientReceiver(mApplication)); <BUGE> mClient.start(); <BUGS> <BUGE> mClient.connect(io.github.antijava.marjio.network.NET_TIMEOUT, hostAddress, io.github.antijava.marjio.network.NET_TCP_PORT, io.github.antijava.marjio.network.NET_UDP_PORT); mRunningFlag = true; } catch (java.io.IOException e) { throw e; } } 
@java.lang.Override public byte[] getX2(byte[] Y1Bytes) { org.bouncycastle.math.ec.ECPoint.Fp Y1 = null; Y1 = ((org.bouncycastle.math.ec.ECPoint.Fp) (de.tsenger.animamea.tools.Converter.byteArrayToECPoint(Y1Bytes, curve).normalize())); <BUGS> return getX2(Y1).getEncoded(); <BUGE> } 
@java.lang.Override <BUGS> public org.gephi.io.importer.spi.FileImporter getFileImporter(java.io.File file) { org.openide.filesystems.FileObject fileObject = org.openide.filesystems.FileUtil.toFileObject(file); fileObject = org.gephi.io.importer.api.ImportUtils.getArchivedFile(fileObject); org.gephi.io.importer.spi.FileImporterBuilder builder = getMatchingImporter(fileObject); if ((fileObject != null) && (builder != null)) { org.gephi.io.importer.spi.FileImporter fi = builder.buildImporter(); return fi; <BUGE> } return null; } 
public static void sendExtras(android.os.Bundle extras) { if (extras != null) { if (((com.plugin.gcm.PushPlugin.gECB) != null) && ((com.plugin.gcm.PushPlugin.gWebView) != null)) { com.plugin.gcm.PushPlugin.sendJavascript(com.plugin.gcm.PushPlugin.convertBundleToJson(extras)); }else { <BUGS> android.util.Log.v(com.plugin.gcm.PushPlugin.TAG, "sendExtras: caching extras to send at a later time."); <BUGE> com.plugin.gcm.PushPlugin.gCachedExtras = extras; } } } 
<BUGS> private com.xebialabs.deployit.plugin.api.udm.Deployed<?, ?> getDeployed(java.lang.String version) { com.xebialabs.deployit.plugin.api.udm.Deployed<?, ?> puppetModule = deployed(((com.xebialabs.deployit.plugin.api.udm.Deployable) (com.xebialabs.platform.test.TestUtils.newInstance("puppet.ModuleSpec", "puppetlabs-apache"))), container, "puppet.Module"); <BUGE> puppetModule.setProperty("version", version); puppetModule.setProperty("force", true); puppetModule.setProperty("ignoreDependencies", false); return puppetModule; } 
public void changeDragonLeft(android.view.View view) { if ((currDragon) == 0) { currDragon = (dragons.size()) - 1; addAccessory(dragons.get(currDragon)); }else { currDragon -= 1; addAccessory(dragons.get(currDragon)); } <BUGS> checkAchievements(); <BUGE> } 
public double getMinZ() { if (!(java.lang.Double.isNaN(zMin))) return zMin;  for (int i = 0; i < (getXyz()[0].length); i++) { final double z = getXyz(0, i, 2); <BUGS> if (z <= (zMin)) <BUGE> zMin = z;  } return zMin; } 
public void applyInterestAndFee() { <BUGS> if ((balance) > 0) { if (!(directDeposit)) { if ((balance) < (Checking.MIN_BAL)) { balance -= Checking.FEE; } <BUGE> } <BUGS> balance = (balance) + (((balance) * (Checking.APY)) / (MONTH_PER_YEAR)); <BUGE> } <BUGS> <BUGE> } 
@java.lang.Override public boolean configure(org.kohsuke.stapler.StaplerRequest req, net.sf.json.JSONObject formData) throws com.amazonaws.codedeploy.FormException { awsAccessKey = formData.getString("awsAccessKey"); awsSecretKey = formData.getString("awsSecretKey"); proxyHost = formData.getString("proxyHost"); <BUGS> proxyPort = java.lang.Integer.valueOf(formData.getString("proxyPort")); <BUGE> req.bindJSON(this, formData); save(); return super.configure(req, formData); } 
public void addExp(int addedExp) { m_exp += addedExp; <BUGS> while ((m_exp) > (100 * (this.getLevel()))) { <BUGE> levelUp(((m_exp) - (100 * (this.getLevel())))); } } 
@org.androidannotations.annotations.AfterViews void init() { customNumberList = com.pawansinghchouhan05.callcustomizer.core.utils.Utils.retriveCustomNumberListToFCMDatabase(); <BUGS> android.util.Log.e("List", customNumberList.toString()); <BUGE> mobileNumberAdapter = new com.pawansinghchouhan05.callcustomizer.home.adapters.MobileNumberAdapter(customNumberList.getCustomNumberList()); recyclerView.setLayoutManager(new android.support.v7.widget.LinearLayoutManager(getContext())); recyclerView.setAdapter(mobileNumberAdapter); mobileNumberAdapter.notifyDataSetChanged(); <BUGS> android.util.Log.e("List", Utils.customNumberList.toString()); <BUGE> } 
protected void insert(java.lang.String table, java.util.HashMap<java.lang.String, java.lang.String> values) throws java.lang.Exception { if (table == null) throw new java.lang.Exception("El nombre de la tabla no puede estar vacío");  java.lang.String insertBody = putBody(values); int r = ((int) (this.executeStatement((((("INSERT INTO " + table) + " SET ") + insertBody) + ";"), true))); <BUGS> this.close(); java.lang.System.out.println(("Rows affected: " + r)); <BUGE> } 
private org.w3c.dom.Node isMultiplicativeOp() { org.w3c.dom.Element parent = doc.createElement("MultiplicativeOp"); if (isAMultiplicativeOp()) { java.lang.String sym = ((currentTokenType()) == (JParserSym.MULTIPLICATION)) ? "*" : (currentTokenType()) == (JParserSym.DIVISION) ? "/" : "and"; parent.setTextContent(sym); (tokenIndex)++; <BUGS> parent.setAttribute("lineNumber", ((currentTokenLineNumber()) + "")); <BUGE> return parent; } (tokenIndex)++; return null; } 
@java.lang.Override protected void actionPerformed(net.minecraft.client.gui.GuiButton button) throws java.io.IOException { <BUGS> super.actionPerformed(button); <BUGE> if ((button.id) == 0) { mc.displayGuiScreen(parent); }else { if (button.displayString.equals("Enable")) { button.displayString = "Disable"; }else { button.displayString = "Enable"; } } } 
public java.util.List<com.kencook.sharpspring.Event> getEvents(java.lang.String timestamp) throws com.kencook.sharpspring.SharpspringException { <BUGS> com.kencook.sharpspring.SharpspringRequest request = com.kencook.sharpspring.SharpspringRequestBuilder.request(1, SharpspringMethod.GET_EVENTS).where("createTimestamp").is("2017-05-23").build(); <BUGE> com.kencook.sharpspring.responses.GetEventsResponse result = operations.query(request, com.kencook.sharpspring.responses.GetEventsResponse.class); if ((result.getError()) != null) throw new com.kencook.sharpspring.SharpspringException(result.getError());  return result.getResult().getEvent(); } 
@java.lang.Override protected java.lang.String doInBackground(byte[]... photoData) { try { photoFile = this.createFile(); io.github.data4all.logger.Log.d(io.github.data4all.handler.CapturePictureHandler.TAG, ("Picturepath:" + (photoFile.getPath()))); <BUGS> final java.io.FileOutputStream fos = new java.io.FileOutputStream(photoFile.getPath()); <BUGE> fos.write(photoData[0]); fos.flush(); fos.close(); } catch (java.io.IOException ex) { io.github.data4all.logger.Log.e(io.github.data4all.handler.CapturePictureHandler.TAG, "Fail to save picture", ex); } return "successful"; } 
public void newTurn() { mana.rebase(((mana.base()) + 1)); mana.reset(); mana.alter((-(overloadMana.value()))); if ((mana.value()) < 0) { mana.set(0); } <BUGS> <BUGE> draw(1); field.updateSleepTimes(); field.updateFreezeTimes(); field.resetAttackCapacities(); } 
@javax.annotation.Nonnull protected javax.ws.rs.core.UriBuilder getBaseUriBuilder() { <BUGS> if ((m_bUseStaticServerInfo) && (com.helger.web.servlet.server.StaticServerInfo.isSet())) return javax.ws.rs.core.UriBuilder.fromUri((((com.helger.web.servlet.server.StaticServerInfo.getInstance().getFullServerPath()) + "/") + (m_aUriInfo.getPath())));  <BUGE> return m_aUriInfo.getBaseUriBuilder(); } 
private static void flushConfig() { MyStaticValue.ENV.clear(); <BUGS> org.ansj.elasticsearch.index.config.AnsjElasticConfigurator.setGlobalVar(MyStaticValue.ENV); <BUGE> if ((org.ansj.elasticsearch.index.config.AnsjElasticConfigurator.ansjSettings) != null) { org.ansj.elasticsearch.index.config.AnsjElasticConfigurator.initConfig(org.ansj.elasticsearch.index.config.AnsjElasticConfigurator.ansjSettings); } <BUGS> <BUGE> if ((org.ansj.elasticsearch.index.config.AnsjElasticConfigurator.path) != null) { org.ansj.elasticsearch.index.config.AnsjElasticConfigurator.initConfig(org.ansj.elasticsearch.index.config.AnsjElasticConfigurator.path, true); }else { org.ansj.elasticsearch.index.config.AnsjElasticConfigurator.initConfig(new java.io.File(org.ansj.elasticsearch.index.config.AnsjElasticConfigurator.configDir, "ansj_library.properties").getAbsolutePath(), false); } } 
public void addNotification(@com.flair.blurb.Constants.CategoryDef java.lang.String category, android.service.notification.StatusBarNotification notification, android.service.notification.NotificationListenerService service) { java.lang.String key = com.flair.blurb.Util.getKey(notification); android.util.Log.d(com.flair.blurb.data.Notifications.TAG, ((("addNotification: " + category) + " key ") + key)); java.util.concurrent.ConcurrentHashMap<java.lang.String, android.service.notification.StatusBarNotification> map = getMapByCategory(category); <BUGS> com.flair.blurb.Util.addNotificationExtras(context, notification, category, key); <BUGE> com.flair.blurb.Util.mergeNotifications(map, notification, service); map.put(com.flair.blurb.Util.getKey(notification), notification); } 
private org.ethereum.jsonrpc.Block getByJsonBlockId(java.lang.String id) { if ("earliest".equalsIgnoreCase(id)) { return blockchain.getBlockByNumber(0); }else if ("latest".equalsIgnoreCase(id)) { return blockchain.getBestBlock(); }else if ("pending".equalsIgnoreCase(id)) { <BUGS> throw new java.lang.UnsupportedOperationException(); <BUGE> }else { long blockNumber = StringHexToBigInteger(id).longValue(); return blockchain.getBlockByNumber(blockNumber); }   } 
public java.util.List<statistics.model.Transaction> getTransactions(statistics.model.Account account, int limit, int offset, java.util.Date startDate, java.util.Date endDate, statistics.model.enums.TransactionType[] transactionTypes, statistics.model.enums.PlanFactType... planFactTypes) { <BUGS> return transactionManager.getTransactions(account.getAccountSettings(), startDate, endDate, java.util.Arrays.asList(transactionTypes), java.util.Arrays.asList(planFactTypes), limit, offset); <BUGE> } 
@java.lang.Override public int getCurrentZoom() { try { java.lang.String zoomRes = sendRequest(buildPanTiltHeadControlURL("%23GZ")); if (zoomRes.startsWith("gz")) { int zoom = java.lang.Integer.parseInt(zoomRes.substring(2, 5), 16); lastKnown.setZoom(zoom); return zoom; <BUGS> }else { throw new java.io.IOException(((errorString) + zoomRes)); <BUGE> } <BUGS> <BUGE> } catch (java.io.IOException e) { e.printStackTrace(); return lastKnown.getZoom(); } } 
private ConcreteTree.ITypeIdent typeIdent() throws parser.GrammarErrorException { java.lang.System.out.println("typedIdent ::= IDENT COLON TYPE"); parser.ConcreteTree.TypeIdent ret = null; parser.IdentToken ident = ((parser.IdentToken) (consume(Terminals.IDENT))); <BUGS> parser.ColonToken colon = ((parser.ColonToken) (consume(Terminals.COLON))); <BUGE> parser.TypeToken type = ((parser.TypeToken) (consume(Terminals.TYPE))); <BUGS> ret = new parser.ConcreteTree.TypeIdent(ident, colon, type); <BUGE> return ret; } 
public void queuePlayList(com.sedmelluq.discord.lavaplayer.track.AudioPlaylist playlist) { java.util.List<com.sedmelluq.discord.lavaplayer.track.AudioTrack> list = playlist.getTracks(); for (int i = 0; i < (list.size()); i++) { if (!(this.player.startTrack(list.get(i), true))) { <BUGS> this.queue.offer(list.get(i)); <BUGE> this.playlist.add(list.get(i).getInfo().title); } } } 
public void printAll() { uic.project.commuter.carPoolData.iterator.CarPoolIterator iter = this.getIterator(); while (iter.hasNext(this)) { uic.project.commuter.carPoolData.iterator.CarPoolComponent currentObject = iter.next(this); currentObject.printSelf(); uic.project.commuter.carPoolData.iterator.CarPoolIterator tier2Iter = this.getIterator(); if ((currentObject.getClass()) == (this.getClass())) { while (tier2Iter.hasNext(currentObject)) { <BUGS> java.lang.System.out.print("     "); <BUGE> tier2Iter.next(currentObject).printSelf(); } } } } 
@java.lang.Override public byte[] openBytes(int no, byte[] buf, int x, int y, int w, int h) throws java.io.IOException, loci.formats.FormatException { loci.formats.FormatTools.checkPlaneParameters(this, no, buf.length, x, y, w, h); <BUGS> int planeSize = loci.formats.FormatTools.getPlaneSize(this); <BUGE> pixelFile.seek(((pixelOffset) + (no * planeSize))); readPlane(pixelFile, x, y, w, h, buf); return buf; } 
private void copyStream(com.sun.grizzly.tcp.http11.GrizzlyResponse grizzlyResponse, java.io.InputStream is) throws java.io.IOException { java.io.OutputStream os = grizzlyResponse.getOutputStream(); try { <BUGS> org.apache.commons.io.IOUtils.copyLarge(is, os, 8096); <BUGE> os.flush(); } finally { is.close(); } } 
@java.lang.Override public net.minecraft.item.ItemStack insertItem(int slot, net.minecraft.item.ItemStack stack, boolean simulate) { int index = getIndexForSlot(slot); net.minecraftforge.items.IItemHandlerModifiable handler = getHandlerFromIndex(index); <BUGS> slot = getSlotFromIndex(index); <BUGE> return handler.insertItem(slot, stack, simulate); } 
public void removePerson(int id) { mDBOpenHelper = new cbpos1989.com.sqlitedatabase.DBOpenHelper(mContext); mDatabase = mDBOpenHelper.getWritableDatabase(); <BUGS> mDatabase.execSQL(((((("DELETE FROM " + (DBFeederContract.PersonTable.TABLE_NAME)) + " WHERE ") + (DBFeederContract.PersonTable._ID)) + " = ") + id), null); <BUGE> mDatabase.close(); mDBOpenHelper.close(); mDatabase = null; mDBOpenHelper = null; } 
private float getNoise(float x, float y, mapChooser.PerlinNoiseGenerator noise, float scale) { float n = 0; float weight = 1; float curFrequency = 1; for (int i = 0; i < (frequencies); i++) { <BUGS> n += weight * (noise.noise2(((scale * curFrequency) * x), ((scale * curFrequency) * y))); <BUGE> weight /= 2; curFrequency += 2; } return n; } 
public void setDiscount(double discount) { if (discount == 0) { offeredPrice = false; finalPrice = price; this.discount = discount; return ; }else if (discount > 1) { return ; }  this.offeredPrice = true; this.discount = discount; <BUGS> this.finalPrice = (price) * (1 - discount); <BUGE> } 
@java.lang.Override public void onClick(android.view.View v) { if ((mListener) != null) { java.lang.String toText = mToTextView.getText().toString(); if (!(getResString(R.string.to_hint).equals(toText))) { mListener.onToClick(toText); <BUGS> <BUGE> } } } 
<BUGS> public static bolts.Task<com.dounets.vchat.net.api.ApiResponse> callInBackgroundDownloadVideo(final com.dounets.vchat.net.api.ApiRequest request, final java.io.File file, final java.lang.String url) { <BUGE> return bolts.Task.callInBackground(new java.util.concurrent.Callable<com.dounets.vchat.net.api.ApiResponse>() { @java.lang.Override public com.dounets.vchat.net.api.ApiResponse call() throws java.lang.Exception { <BUGS> return com.dounets.vchat.net.api.ApiClient.callDownloadVideo(request, file, url); <BUGE> } }); } 
public void run() { <BUGS> android.bluetooth.BluetoothSocket socket = null; <BUGE> while (true) { try { socket = serverSocket.accept(); } catch (java.io.IOException e) { break; } if (socket != null) { listenOnSocket(socket); try { serverSocket.close(); } catch (java.io.IOException e) { } break; } } } 
public org.lirazs.gbackbone.client.core.collection.Collection set(org.lirazs.gbackbone.client.core.data.Options[] objects, org.lirazs.gbackbone.client.core.data.Options options) { <BUGS> java.util.List<T> models = java.util.Arrays.asList(); <BUGE> for (org.lirazs.gbackbone.client.core.data.Options object : objects) { T model = prepareModel(object, options); if (model != null) { models.add(model); } } return set(models, options); } 
public java.lang.String getCategoryDisplay(java.lang.String catID) { java.lang.String display = null; android.database.sqlite.SQLiteDatabase db = this.getReadableDatabase(); android.database.Cursor cursor = db.query(com.quaap.launchtime.db.DB.TAB_ORDER_TABLE, new java.lang.String[]{ com.quaap.launchtime.db.DB.LABEL }, ((com.quaap.launchtime.db.DB.CATID) + "=?"), new java.lang.String[]{ catID }, null, null, null, null); <BUGS> if (cursor.moveToNext()) { display = cursor.getString(0); <BUGE> } <BUGS> cursor.close(); <BUGE> return display; } 
@java.lang.SuppressWarnings(value = "unused") public void onEvent(de.fau.cs.mad.fablab.android.view.fragments.productsearch.ProductClickedEvent event) { <BUGS> android.widget.Toast.makeText(getActivity(), event.getProduct().getName(), Toast.LENGTH_SHORT).show(); <BUGE> de.fau.cs.mad.fablab.android.view.fragments.productsearch.ProductDialogFragment dialogFragment = new de.fau.cs.mad.fablab.android.view.fragments.productsearch.ProductDialogFragment(); android.os.Bundle arguments = new android.os.Bundle(); arguments.putSerializable(ProductDialogFragmentViewModel.KEY_PRODUCT, event.getProduct()); dialogFragment.setArguments(arguments); dialogFragment.show(getFragmentManager(), "ProductDialogFragment"); } 
<BUGS> public void decr(java.lang.String address, int port) { <BUGE> for (org.openstack4j.model.compute.Image image : this.getImages()) { if (address.equals(image.getAddress())) { image.setNbRequest(((image.getNbRequest()) - 1)); break; } } <BUGS> <BUGE> } 
public int length(int v, int w) { if (v == w) { return 0; } int common = ancestor(v, w); if (common == (-1)) { return -1; } edu.princeton.cs.algs4.BreadthFirstDirectedPaths vBFS = new edu.princeton.cs.algs4.BreadthFirstDirectedPaths(G, v); edu.princeton.cs.algs4.BreadthFirstDirectedPaths wBFS = new edu.princeton.cs.algs4.BreadthFirstDirectedPaths(G, w); <BUGS> return (vBFS.distTo(common)) + (wBFS.distTo(common)); <BUGE> } 
@java.lang.Override public void onCreate() { super.onCreate(); player = new android.media.MediaPlayer(); <BUGS> <BUGE> player.setAudioStreamType(AudioManager.STREAM_MUSIC); <BUGS> player.setWakeMode(getApplicationContext(), PowerManager.PARTIAL_WAKE_LOCK); <BUGE> player.setOnPreparedListener(this); player.setOnErrorListener(this); player.setOnCompletionListener(this); if (new com.odong.buddhismhomework.utils.KvHelper(this).get("mp3.replay", java.lang.Boolean.class, false)) { player.setLooping(true); } } 
private static java.util.List<de.setsoftware.reviewtool.base.Pair<de.setsoftware.reviewtool.model.changestructure.PositionInText, de.setsoftware.reviewtool.model.changestructure.PositionInText>> determineDiff(java.lang.String oldContent, java.lang.String newContent) throws java.lang.Exception { <BUGS> return de.setsoftware.reviewtool.diffalgorithms.SimpleTextDiffAlgorithmTest.toPositionsInNewFile(new de.setsoftware.reviewtool.diffalgorithms.MyersSourceDiffAlgorithm(true).determineDiff(de.setsoftware.reviewtool.model.changestructure.ChangestructureFactory.createFileInRevision("", null, null), oldContent.getBytes("UTF-8"), de.setsoftware.reviewtool.model.changestructure.ChangestructureFactory.createFileInRevision("", null, null), newContent.getBytes("UTF-8"), "UTF-8")); <BUGE> } 
public static st.redline.ProtoObject p220(st.redline.ProtoObject receiver, st.redline.ThisContext thisContext, st.redline.ProtoObject arg1, st.redline.ProtoObject arg2, st.redline.ProtoObject arg3, st.redline.ProtoObject arg4, st.redline.ProtoObject arg5, st.redline.ProtoObject arg6, st.redline.ProtoObject arg7) { <BUGS> return (receiver.cls().methodAt(((java.lang.String) (arg1.javaValue())))) != null ? ProtoObject.TRUE : ProtoObject.FALSE; <BUGE> } 
public T removeLast() { checkRange(); T retVal = _end.getCargo(); _end = _end.getPrev(); <BUGS> _end.setNext(null); <BUGE> if ((_end) == null) { _front = null; <BUGS> <BUGE> } (_size)--; return retVal; } 
@java.lang.Override public boolean exists(java.lang.String id) throws org.n52.series.db.da.DataAccessException { org.hibernate.Session session = getSession(); try { if (org.n52.io.response.v1.ext.PlatformType.isStationaryId(id)) { org.n52.series.db.da.dao.v1.FeatureDao featureDao = new org.n52.series.db.da.dao.v1.FeatureDao(session); <BUGS> return featureDao.hasInstance(parseId(id), org.n52.series.db.da.beans.FeatureEntity.class); <BUGE> }else { org.n52.series.db.da.dao.v1.ext.PlatformDao dao = new org.n52.series.db.da.dao.v1.ext.PlatformDao(session); <BUGS> java.lang.String platformId = org.n52.io.response.v1.ext.PlatformType.extractId(id); return dao.hasInstance(parseId(platformId), org.n52.series.db.da.beans.ext.PlatformEntity.class); <BUGE> } } finally { returnSession(session); } } 
@java.lang.Override public boolean onPreferenceChange(android.preference.Preference preference, java.lang.Object o) { if (sp_autocheck.isChecked()) { <BUGS> check_wifi.setEnabled(true); <BUGE> check_list.setEnabled(true); startTimer(); }else { if ((cdt) != null) cdt.cancel();  <BUGS> check_wifi.setEnabled(false); <BUGE> check_list.setEnabled(false); } return true; } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); initializeFiles(); initSwitchListener(); try { de.myo.myoscriptcontrol.GestureScriptManager.getInstance().setConfigFile(ConfigFile); mStatus = RecordActivityStatus.DISCONNECTED; } catch (java.io.IOException | org.json.JSONException e) { e.printStackTrace(); de.myo.myoscriptcontrol.ErrorActivity.handleError(this, e.getMessage()); } initializeMYOHub(); <BUGS> <BUGE> OnUpdateStatus(de.myo.myoscriptcontrol.GestureRecordDeviceListener.getInstance().getStatus()); <BUGS> initGridAdapter(); <BUGE> } 
public java.util.Collection<prompto.declaration.IMethodDeclaration> findPotentialMethods() { prompto.expression.MethodSelector selector = methodCall.getMethod(); <BUGS> java.util.Collection<prompto.declaration.IMethodDeclaration> candidates = selector.getCandidates(context); <BUGE> if ((candidates.size()) == 0) throw new prompto.error.SyntaxError(("No method named:" + (methodCall.getMethod().getName())));  return filterPotential(candidates); } 
private org.miradi.migrations.forward.DateUnitEffortList getAdjustedDateUnitEffortListForAssignments(org.miradi.migrations.forward.DateUnitEffortList dateUnitEffortListToAdjust, org.miradi.migrations.forward.RawObject rawObject) throws java.lang.Exception { java.util.ArrayList<org.miradi.migrations.forward.RawObject> childTasks = getChildTasks(rawObject); for (org.miradi.migrations.forward.RawObject task : childTasks) { java.util.ArrayList<org.miradi.objecthelpers.ORef> childAssignmentRefs = getAssignments(task); for (org.miradi.objecthelpers.ORef childAssignmentRef : childAssignmentRefs) { org.miradi.migrations.forward.RawObject childAssignment = getRawProject().findObject(childAssignmentRef); dateUnitEffortListToAdjust = getAdjustedDateUnitEffortListForAssignment(dateUnitEffortListToAdjust, childAssignment); } <BUGS> return getAdjustedDateUnitEffortListForAssignments(dateUnitEffortListToAdjust, task); <BUGE> } return dateUnitEffortListToAdjust; } 
public void openFragment(android.support.v4.app.Fragment fragment, boolean addToBackStack) { android.support.v4.app.FragmentManager fragmentManager = getSupportFragmentManager(); <BUGS> android.support.v4.app.Fragment oldFragment = fragmentManager.findFragmentById(R.id.container); <BUGE> android.support.v4.app.FragmentTransaction transaction = fragmentManager.beginTransaction(); transaction.replace(R.id.container, fragment); transaction.setTransition(FragmentTransaction.TRANSIT_FRAGMENT_OPEN); <BUGS> if (addToBackStack && (!(isSameFragment(oldFragment, fragment)))) { <BUGE> transaction.addToBackStack(null); } transaction.commit(); updateViewFromFragment(fragment); } 
protected int createNewEntry(java.io.File f) { int id = getNextFreeFileID(); de.tremoneck.timemachine.storage.ReferenceStorage.ReferenceFile file = new de.tremoneck.timemachine.storage.ReferenceStorage.ReferenceFile(); file.ID = id; file.path = f.getPath(); file.timestamp = f.lastModified(); file.references = 1; <BUGS> <BUGE> return id; } 
@java.lang.Override public void onClick(android.view.View arg0) { <BUGS> { <BUGE> mAdIndex = (((mAdIndex) + (mVideoFilesVector.size())) - 1) % (mVideoFilesVector.size()); java.lang.String filePath = ((java.lang.String) (mVideoFilesVector.get(mAdIndex))); mVideoView.setVideoURI(android.net.Uri.parse(filePath)); mVideoView.start(); } } 
protected int draw() { mSurfaceTexture.updateTexImage(); float[] matrix = new float[16]; mSurfaceTexture.getTransformMatrix(matrix); mEffect.setTextureTransformMatrix(matrix); int textureId = mEffect.draw(mSurfaceTextureId); <BUGS> mRendererScreen.draw(textureId, mCubeBuffer, mTextureBuffer); <BUGE> if ((mEncoder) != null) { start = java.lang.System.currentTimeMillis(); mHandler.sendEmptyMessage(0); } <BUGS> <BUGE> return 0; } 
private void select(int index) { assert index < 3; if ((suggestions[index]) == "") { processor.addWord(new java.util.ArrayList<com.shiweinan.ckeyboard.Point>()); return ; } processor.addWord(screenPoints); screenPoints.clear(); processor.showCorrectionHints(screenPoints); <BUGS> updateSuggestion(); <BUGE> } 
private void assertDeepEqualsGuests(java.util.List<cz.muni.fi.pv168.project.Guest> expectedList, java.util.List<cz.muni.fi.pv168.project.Guest> actualList) { expectedList.sort(cz.muni.fi.pv168.project.StayManagerImplTest.idComparatorGuest); actualList.sort(cz.muni.fi.pv168.project.StayManagerImplTest.idComparatorGuest); <BUGS> assertEquals(expectedList.size(), actualList.size()); <BUGE> for (int i = 0; i < (expectedList.size()); i++) { cz.muni.fi.pv168.project.Guest expected = expectedList.get(i); cz.muni.fi.pv168.project.Guest actual = actualList.get(i); assertDeepEquals(expected, actual); } } 
public static void saveUserMetrics(android.content.Context context) { android.content.SharedPreferences sharedPref = context.getSharedPreferences("HearthTrackerSharedPreferences", Context.MODE_PRIVATE); android.content.SharedPreferences.Editor editor = sharedPref.edit(); <BUGS> dumplingyzr.hearthtracker.Utils.sActiveDeck.saveCards(); <BUGE> editor.putString("ActiveDeckName", dumplingyzr.hearthtracker.Utils.sActiveDeckName); editor.putString("UserName", dumplingyzr.hearthtracker.Utils.sUserName); editor.putStringSet("UserDeckNames", dumplingyzr.hearthtracker.Utils.sUserDeckNames); editor.apply(); } 
public static javax.mail.internet.InternetAddress getAdminFromEmailAddress() throws com.liferay.portal.kernel.exception.SystemException, java.io.UnsupportedEncodingException { try { <BUGS> final java.lang.String adminFromEmail = com.ext.portlet.service.ConfigurationAttributeLocalServiceUtil.getAttributeStringValue(ConfigurationAttributeKey.ADMIN_FROM_EMAIL, 0L); <BUGE> return new javax.mail.internet.InternetAddress(adminFromEmail, org.xcolab.utils.TemplateReplacementUtil.replacePlatformConstants("The <colab-name/> Team")); } catch (com.ext.portlet.NoSuchConfigurationAttributeException e) { throw new com.liferay.portal.kernel.exception.SystemException("Admin email not configured in ConfigurationAttribute table", e); } } 
private void googleAuthentification(final io.nearby.android.data.source.local.UserLoginStatusCallback callback) { <BUGS> mGoogleApiClient.connect(); <BUGE> com.google.android.gms.common.api.OptionalPendingResult<com.google.android.gms.auth.api.signin.GoogleSignInResult> resultOptionalPendingResult = Auth.GoogleSignInApi.silentSignIn(mGoogleApiClient); if (resultOptionalPendingResult.isDone()) { handleGoogleResult(resultOptionalPendingResult.get(), callback); <BUGS> mGoogleApiClient.disconnect(); <BUGE> }else { resultOptionalPendingResult.setResultCallback(new com.google.android.gms.common.api.ResultCallback<com.google.android.gms.auth.api.signin.GoogleSignInResult>() { @java.lang.Override public void onResult(@android.support.annotation.NonNull com.google.android.gms.auth.api.signin.GoogleSignInResult googleSignInResult) { <BUGS> mGoogleApiClient.disconnect(); <BUGE> handleGoogleResult(googleSignInResult, callback); } }); } } 
public synchronized void start() { <BUGS> if ((((id) == null) || ((finishedAt) == null)) || (((java.lang.System.currentTimeMillis()) - (finishedAt)) > (sessionPendingMillis))) { <BUGE> id = java.util.UUID.randomUUID().toString(); } finishedAt = null; } 
@com.squareup.otto.Subscribe public void onLastLocation(today.gacha.android.services.GachaLocationService.LastLocationEvent event) { if (event.isSuccess()) { <BUGS> animateGoogleMapCamera(event.getLocation()); <BUGE> return ; } android.util.Log.d(today.gacha.android.ui.MapsActivity.TAG, ("Get last location failed - " + (event.getThrowableMessage()))); locationService.requestCurrentLocation(); } 
public java.lang.Object visit(dbms.IdExp exp, java.util.Hashtable<java.lang.String, java.lang.Integer> attrPosTable, dbms.Tuple tuple) { java.lang.String attrName = exp.getId(); <BUGS> dbms.Value value = tuple.get(attrPosTable.get(attrName).intValue()); <BUGE> return visit(exp, value); } 
@java.lang.Override public android.support.v4.app.Fragment getItem(int position) { switch (position) { case 0 : return ruhrpott.owasp.com.vuln_app_1.Hello_Page.newInstance(); case 1 : return ruhrpott.owasp.com.vuln_app_1.Prepare.newInstance(); case 2 : return ruhrpott.owasp.com.vuln_app_1.Basic_Http.newInstance(); case 3 : return ruhrpott.owasp.com.vuln_app_1.Logcat_Output.newInstance(); <BUGS> default : return ruhrpott.owasp.com.vuln_app_1.MainActivity.PlaceholderFragment.newInstance((position + 1)); <BUGE> } } 
public int getTeamLinks(org.bukkit.scoreboard.Team team) { int result = 0; <BUGS> if (beaconLinks.containsKey(getGameMgr().getGame(team))) { <BUGE> for (com.wasteofplastic.beaconz.BeaconLink pair : beaconLinks.get(getGameMgr().getGame(team))) { if (pair.getOwner().equals(team)) { result++; } } } return result; } 
@java.lang.Override public void receive(long timeStamp, org.wso2.siddhi.core.event.Event[] inEvents, org.wso2.siddhi.core.event.Event[] removeEvents) { org.wso2.siddhi.core.util.EventPrinter.print(timeStamp, inEvents, removeEvents); <BUGS> <BUGE> if (inEvents != null) { (value)++; }else if ((value) == 1) { junit.framework.Assert.assertNull(inEvents); }  <BUGS> eventArrived = true; <BUGE> } 
private org.carbondata.processing.store.writer.CarbonFactDataWriter<?> getFactDataWriter(java.lang.String storeLocation, int measureCount, int mdKeyLength, java.lang.String tableName, org.carbondata.processing.mdkeygen.file.IFileManagerComposite fileManager, int[] keyBlockSize) { <BUGS> return new org.carbondata.processing.store.writer.CarbonFactDataWriterImplForIntIndexAndAggBlock(storeLocation, measureCount, mdKeyLength, tableName, fileManager, keyBlockSize, aggKeyBlock, isComplexTypes(), noDictionaryCount, carbonDataFileAttributes, databaseName, wrapperColumnSchemaList, noDictionaryCount, dimensionType, carbonDataDirectoryPath, colCardinality, segmentProperties, isUseInvertedIndex); <BUGE> } 
private void scanBarcode() { android.content.Intent intentScan = new android.content.Intent("com.google.zxing.client.android.SCAN"); intentScan.putExtra("SCAN_MODE", "QR_CODE_MODE"); intentScan.putExtra("SAVE_HISTORY", false); try { startActivityForResult(intentScan, com.wagdy.authapp.MainActivity.SCAN_REQUEST); } catch (android.content.ActivityNotFoundException error) { <BUGS> showDialog(Utilities.DOWNLOAD_DIALOG); <BUGE> } } 
<BUGS> private double stdDev(java.util.ArrayList<java.lang.Double> array) { double mean = mean(array); <BUGE> double sumOfDiffToMeanSq = 0; <BUGS> double length = array.size(); for (double i : array) { <BUGE> double diffToMeanSq = java.lang.Math.pow((i - mean), 2); sumOfDiffToMeanSq += diffToMeanSq; } double meanOfDiffs = sumOfDiffToMeanSq / length; return java.lang.Math.sqrt(meanOfDiffs); } 
<BUGS> private javax.mail.Message[] searchMailbox(javax.mail.Folder inbox) { <BUGE> javax.mail.search.SearchTerm searchTerm = new javax.mail.search.SubjectTerm("Ingress Portal"); javax.mail.search.ReceivedDateTerm minDateTerm = new javax.mail.search.ReceivedDateTerm(javax.mail.search.ComparisonTerm.GT, activity.getMostRecentDate()); searchTerm = new javax.mail.search.AndTerm(searchTerm, minDateTerm); <BUGS> try { return inbox.search(searchTerm); } catch (javax.mail.MessagingException e) { android.util.Log.e(com.einzig.ipst2.Utilities.EmailParseTask.TAG, e.toString()); return null; } <BUGE> } 
public java.lang.String printForwards(int numToPrint) { LLNode<E> item = first; java.lang.String finalString = ""; <BUGS> <BUGE> for (int i = 0; i < numToPrint; i++) { finalString += (item.toString()) + "\n"; item = item.getNext(); } return finalString; } 
public final void setFPS(int fps) { if (fps <= 0) { throw new java.lang.RuntimeException("Attempted to run a CellGame at a non-positive FPS"); } this.fps = fps; msPerFrame = 1000 / ((double) (fps)); <BUGS> game.getContainer().setTargetFrameRate(fps); <BUGE> } 
public boolean authenticate(final java.lang.String iUserName, final java.lang.String iPassword, final java.lang.String iResourceToCheck) { final com.orientechnologies.orient.server.config.OServerUserConfiguration user = getUser(iUserName); <BUGS> if ((user != null) && ((iPassword == null) || (user.password.equals(iPassword)))) { <BUGE> if (user.resources.equals("*")) return true;  java.lang.String[] resourceParts = user.resources.split(","); for (java.lang.String r : resourceParts) if (r.equals(iResourceToCheck)) return true;   } return false; } 
public void setTimerView(long secUntilFinished) { <BUGS> java.lang.String sec = java.lang.String.format("%02d", (secUntilFinished % 60)); java.lang.String min = java.lang.String.format("%02d", (secUntilFinished / 60)); <BUGE> textViewText = (min + ":") + sec; textView.setText(textViewText); progressBar.setProgress(((int) ((secUntilFinished * 1000) / (default_StudyTime)))); } 
private void clearData() { selectedFaculties.clear(); chosenFaculties = ""; questions.clear(); newDate = ""; for (int i = 0; i < (checked.length); i++) { checked[i] = false; } aSpinner1.setSelection(0); <BUGS> questionsLayout.removeAllViews(); <BUGE> } 
@java.lang.Override public boolean canDrain(net.minecraft.util.EnumFacing from, net.minecraftforge.fluids.Fluid fluid) { if ((hasFrequency()) && ((configComponent.getOutput(TransmissionType.FLUID, from, facing).ioState) == (mekanism.common.SideData.IOState.OUTPUT))) { <BUGS> return ((frequency.storedFluid.getFluid()) == null) || (fluid == (frequency.storedFluid.getFluid().getFluid())); <BUGE> } return false; } 
protected void setSelectedPanel(processing.app.contrib.ContributionPanel contributionPanel) { <BUGS> <BUGE> if ((selectedPanel) == contributionPanel) { selectedPanel.setSelected(true); }else { <BUGS> contributionTab.contributionManagerDialog.updateStatusPanel(contributionPanel); <BUGE> processing.app.contrib.ContributionPanel lastSelected = selectedPanel; selectedPanel = contributionPanel; if (lastSelected != null) { lastSelected.setSelected(false); } contributionPanel.setSelected(true); updateColors(); requestFocusInWindow(); } } 
@java.lang.Override public boolean onOptionsItemSelected(android.view.MenuItem item) { int id = item.getItemId(); <BUGS> if ((mSessionManager.getIsPurchased()) == (com.aftersapp.utils.AppConstants.ITEM_NOT_PURCHASED)) com.aftersapp.AftersAppApplication.getInstance().setAddClickCount();  <BUGE> if (id == (R.id.action_filter)) { com.aftersapp.fragments.FilterFragment filterFragment = new com.aftersapp.fragments.FilterFragment(); getFragmentManager().beginTransaction().replace(R.id.fragment_frame_lay, filterFragment, "FilterFragment").commit(); return true; } return super.onOptionsItemSelected(item); } 
<BUGS> public static byte[] read(java.lang.String filePath) { <BUGE> java.io.FileInputStream is = null; try { is = new java.io.FileInputStream(filePath); return com.simon.lib.cacheloader.util.IOUtils.read(is); <BUGS> } catch (java.io.FileNotFoundException e) { } catch (java.io.IOException e) { } catch (java.lang.OutOfMemoryError e) { <BUGE> } finally { if (is != null) { try { is.close(); } catch (java.io.IOException e) { } } } <BUGS> return null; <BUGE> } 
private void handleTakePictureResult(int resultCode, android.content.Intent resultIntent) { if (resultCode == (RESULT_OK)) { android.widget.ImageView imgView = ((android.widget.ImageView) (findViewById(R.id.imgShowImage))); mPhotoPathName = mPhotoPathUri.getPath(); com.example.a454203.aone_sample.PhotoHelper.addPhotoToMediaStoreAndDisplayThumbnail(mPhotoPathName, this, imgView); }else { mPhotoPathUri = null; <BUGS> <BUGE> android.widget.Toast.makeText(this, "User cancelled", Toast.LENGTH_LONG).show(); } } 
public void addConstraint(mondrian.rolap.sql.SqlQuery sqlQuery, mondrian.rolap.sql.RolapCube baseCube, mondrian.rolap.aggmatcher.AggStar aggStar) { for (int i = 0; i < (columnList.size()); i++) { mondrian.olap.MondrianDef.Expression expression = columnList.get(i); <BUGS> final java.lang.Comparable value = valueList.get(i); final mondrian.spi.Dialect.Datatype datatype = datatypeList.get(i); sqlQuery.addWhere(mondrian.rolap.sql.SqlConstraintUtils.constrainLevel2(sqlQuery, expression, datatype, value)); <BUGE> } } 
@java.lang.Override <BUGS> public boolean equals(final java.lang.Object obj) { <BUGE> if ((this) == obj) { return true; } if (obj == null) { return false; } if (!(obj instanceof fr.poulet4j.model.Cell)) { return false; } fr.poulet4j.model.Cell other = ((fr.poulet4j.model.Cell) (obj)); <BUGS> if ((id) != (other.id)) { <BUGE> return false; } return true; } 
public void iand() { <BUGS> compiler.Ecriture.ecrireStringln(flux, ";iand", ((indent) + 1)); compiler.Ecriture.ecrireStringln(flux, "pop bx", ((indent) + 1)); compiler.Ecriture.ecrireStringln(flux, "pop ax", ((indent) + 1)); compiler.Ecriture.ecrireStringln(flux, "and ax,bx", ((indent) + 1)); compiler.Ecriture.ecrireStringln(flux, "push ax", ((indent) + 1)); <BUGE> } 
private void jumpToPage() { java.lang.Integer targetPage = pageField.getTextAsInteger(); <BUGS> <BUGE> if ((targetPage != null) && (!((targetPage >= 1) && (targetPage <= (totalPages))))) { showErrorMessage("Invalid page"); return ; } currentPage = targetPage - 1; displayPage(currentPage); updatePageNumberLabelAndNavigation(); } 
@java.lang.Override public void initComponent() { io.github.maddouri.intellij.OnlineSearch.state.PluginSettings settings = io.github.maddouri.intellij.OnlineSearch.state.PluginSettings.getInstance(); com.intellij.openapi.actionSystem.ActionManager am = com.intellij.openapi.actionSystem.ActionManager.getInstance(); com.intellij.openapi.actionSystem.DefaultActionGroup menuManager = ((com.intellij.openapi.actionSystem.DefaultActionGroup) (am.getAction(io.github.maddouri.intellij.OnlineSearch.action.LaunchSearchActionRegistration.COMPONENT_GROUP))); for (io.github.maddouri.intellij.OnlineSearch.state.PluginSettings.SearchEngine engine : settings.searchEngines) { <BUGS> io.github.maddouri.intellij.OnlineSearch.action.LaunchSearchAction action = new io.github.maddouri.intellij.OnlineSearch.action.LaunchSearchAction(engine.name, engine.url); <BUGE> am.registerAction(io.github.maddouri.intellij.OnlineSearch.action.LaunchSearchActionRegistration.getActionId(action), action); menuManager.add(action); } menuManager.addSeparator(); } 
public boolean checkToken(fundata.model.Token model) { if (model == null) { return false; } <BUGS> java.lang.String token = redisTemplate.boundValueOps(model.getUserId()).get().toString(); <BUGE> if ((token == null) || (!(token.equals(model.getToken())))) { return false; } redisTemplate.boundValueOps(model.getUserId()).expire(Constants.TOKEN_EXPIRES_HOUR, java.util.concurrent.TimeUnit.HOURS); return true; } 
private edu.princeton.cs.algs4.Stack<edu.princeton.cs.algs4.Point2D> range(edu.princeton.cs.algs4.RectHV rect, KdTree.Node node, edu.princeton.cs.algs4.Stack<edu.princeton.cs.algs4.Point2D> points) { if (node == null) return points;  if (rect.contains(node.p)) points.push(node.p);  if (rect.intersects(node.rect)) { <BUGS> range(rect, node.lb, points); range(rect, node.rt, points); <BUGE> } return points; } 
public final void hide() { if ((this.runtime) != null) { this.runtime.runOnPhysicsThread(new java.lang.Runnable() { @java.lang.Override public void run() { for (final com.thommil.libgdx.runtime.actor.physics.Collidable collidable : collidables) { setCollidablesState(collidable, false); } <BUGS> <BUGE> } }); <BUGS> <BUGE> } <BUGS> this.hidden = true; this.onHide(); <BUGE> } 
public void removeXAttr(java.lang.String src, org.apache.hadoop.fs.XAttr xAttr) throws java.io.IOException { <BUGS> if ((src == null) && (xAttr == null)) { <BUGE> throw new java.lang.IllegalArgumentException("Argument is null"); } checkIfFileExisted(src); java.util.List<org.apache.hadoop.fs.XAttr> targetXAttrList = com.google.common.collect.Lists.newArrayListWithCapacity(1); targetXAttrList.add(xAttr); try { getXAttrs(src, targetXAttrList); } catch (java.io.IOException e) { throw new java.io.IOException("No matching attributes found for remove operation"); } this.nodeManager.removeXAttr(src, xAttr); } 
private android.widget.SimpleCursorAdapter getThemedAdapter(android.database.Cursor cursor) { java.lang.String[] dataColumns = new java.lang.String[]{ NotePad.Notes.COLUMN_NAME_TITLE , NotePad.Notes.COLUMN_NAME_MODIFICATION_DATE }; int[] viewIDs = new int[]{ R.id.itemTitle , R.id.itemDate }; int themed_item; if (FragmentLayout.lightTheme) themed_item = R.layout.noteslist_item_light; else themed_item = R.layout.noteslist_item_dark;  <BUGS> android.widget.SimpleCursorAdapter adapter = new android.widget.SimpleCursorAdapter(activity.getApplicationContext(), themed_item, cursor, dataColumns, viewIDs); <BUGE> return adapter; } 
private void updateBestTimes(float recentTime) { curTime.setText(("current time: " + (java.lang.String.valueOf(recentTime)))); if (recentTime <= (bestTimeTracker)) { bestTimeTracker = recentTime; <BUGS> bestTime.setText(("best time: " + (bestTimeTracker))); <BUGE> } if (recentTime >= (worstTimeTracker)) { worstTimeTracker = recentTime; <BUGS> worstTime.setText(("worst time: " + (worstTimeTracker))); <BUGE> } <BUGS> <BUGE> } 
@org.springframework.web.bind.annotation.RequestMapping(value = "/assemblies/{assemblyId}/export", method = org.springframework.web.bind.annotation.RequestMethod.GET) @org.springframework.web.bind.annotation.ResponseBody public com.oneops.transistor.export.domain.DesignExportSimple exportDesign(@org.springframework.web.bind.annotation.PathVariable <BUGS> long assemblyId, @org.springframework.web.bind.annotation.RequestParam(value = "description", required = false) java.lang.String description, @org.springframework.web.bind.annotation.RequestHeader(value = "X-Cms-User", required = false) <BUGE> java.lang.String userId, @org.springframework.web.bind.annotation.RequestHeader(value = "X-Cms-Scope", required = false) java.lang.String scope) { if (userId == null) userId = "oneops-system";  try { <BUGS> return dManager.exportDesign(assemblyId, description); <BUGE> } catch (com.oneops.cms.exceptions.CmsBaseException te) { com.oneops.transistor.ws.rest.TransistorRestController.logger.error(te); te.printStackTrace(); throw te; } } 
public void setScore(java.lang.String name, int point) { <BUGS> if ((name.length()) > 16) { name = name.substring(0, 16); } <BUGE> for (org.bukkit.scoreboard.Scoreboard sb : scoreboards.values()) { org.bukkit.scoreboard.Objective obj = sb.getObjective(org.bitbucket.ucchy.fnafim.game.ScoreboardDisplay.OBJECTIVE_NAME); if (point == 0) { getScoreItem(obj, name).setScore(1); } getScoreItem(obj, name).setScore(point); } } 
private void setImageSource(java.lang.Object object) { imageSources = new java.util.ArrayList<org.appcelerator.titanium.view.TiDrawableReference>(); if (object instanceof java.lang.Object[]) { for (java.lang.Object o : ((java.lang.Object[]) (object))) { <BUGS> imageSources.add(org.appcelerator.titanium.view.TiDrawableReference.fromObject(getProxy().getActivity(), o)); <BUGE> } }else { <BUGS> imageSources.add(org.appcelerator.titanium.view.TiDrawableReference.fromObject(getProxy().getActivity(), object)); <BUGE> } } 
public void fillMap() { <BUGS> double latitude; double longitude; java.lang.String title; int type_id; <BUGE> values.clear(); mMap.clear(); cursor = getActivity().getContentResolver().query(EcoMapContract.ProblemsEntry.CONTENT_URI, null, null, null, null, null); while (cursor.moveToNext()) { org.ecomap.android.app.Problem p = new org.ecomap.android.app.Problem(cursor, getActivity()); values.add(p); } cursor.close(); setUpClusterer(); } 
protected void initialize() { new com.googlecode.kanbanik.client.components.common.PicturePreviewHandler(pictureUrl, assiggneePicturePreview, assigneePicturePreviewLabel, assiggneePicturePreviewErrorLabel).initialize(); permissionsEditingComponent = new com.googlecode.kanbanik.client.components.security.PermissionsEditingComponent(); java.util.List<com.googlecode.kanbanik.client.api.Dtos.PermissionDto> permissions = ((oldDto) != null) ? oldDto.getPermissions() : java.util.Collections.EMPTY_LIST; permissions = (permissions != null) ? permissions : java.util.Collections.EMPTY_LIST; <BUGS> permissionsEditingComponent.init(permissions); <BUGE> permissionsPanel.clear(); permissionsPanel.add(permissionsEditingComponent); } 
@java.lang.Override <BUGS> public void onResponse(retrofit2.Call<com.namclu.android.deputyscheduler.models.ShiftResponse> call, retrofit2.Response<com.namclu.android.deputyscheduler.models.ShiftResponse> response) { <BUGE> int statusCode = response.code(); <BUGS> java.util.List<com.namclu.android.deputyscheduler.models.Shift> shifts = response.body().getShifts(); <BUGE> recyclerView.setAdapter(new com.namclu.android.deputyscheduler.adapters.ShiftAdapter(shifts)); } 
@java.lang.Override public void parseAssociatedNames(hudson.model.Job<?, ?> job, java.util.Collection<com.cloudbees.jenkins.GitHubRepositoryName> result) { <BUGS> jenkins.model.ParameterizedJobMixIn.ParameterizedJob p = ((jenkins.model.ParameterizedJobMixIn.ParameterizedJob) (job)); for (com.cloudbees.jenkins.GitHubTrigger ght : hudson.Util.filter(p.getTriggers().values(), com.cloudbees.jenkins.GitHubTrigger.class)) { result.addAll(ght.getGitHubRepositories()); <BUGE> } } 
public static java.sql.Connection open() { <BUGS> <BUGE> try { java.lang.Class.forName("org.sqlite.JDBC"); <BUGS> codeu.chat.codeU_db.DataBaseConnection.c = java.sql.DriverManager.getConnection("jdbc:sqlite:./bin/codeu/chat/codeU_db/ChatDatabase.db"); codeu.chat.codeU_db.DataBaseConnection.c.setAutoCommit(false); <BUGE> java.lang.System.out.println("Opened database successfully"); } catch (java.lang.Exception e) { java.lang.System.err.println((((e.getClass().getName()) + ": ") + (e.getMessage()))); java.lang.System.exit(0); } <BUGS> return codeu.chat.codeU_db.DataBaseConnection.c; <BUGE> } 
public boolean accepts(rocnikovyprojekt.Word w) { <BUGS> rocnikovyprojekt.FSA m = determinize().complete(); <BUGE> java.lang.Object p = m.initialStates.iterator().next(); for (int i = 0; i < (w.length()); i++) { java.lang.Object a = w.symbolAt(i); p = m.delta.get(p, a).iterator().next(); } return m.finalStates.contains(p); } 
public void setVoice(int i) { <BUGS> Main.buffer[((Main.useroffset) + 577)] = ((byte) (i)); Main.buffer[((Main.useroffset) + 146248)] = ((byte) (i)); <BUGE> } 
public rx.Observable<java.util.List<saulmm.avengers.entities.MarvelCharacter>> executeIncreasingOffset() { currentOffset += saulmm.avengers.GetCharactersUsecase.CHARACTERS_LIMIT; <BUGS> return mRepository.getCharacters(currentOffset).observeOn(mExecutorThread).subscribeOn(mResultsThread).doOnError(new rx.functions.Action1<java.lang.Throwable>() { <BUGE> @java.lang.Override public void call(java.lang.Throwable throwable) { currentOffset -= saulmm.avengers.GetCharactersUsecase.CHARACTERS_LIMIT; } }); } 
public java.lang.String getAnnotatedHTML() { java.lang.String html = new java.lang.String(text); java.lang.String tagged; for (org.openmrs.module.bannerprototype.SofaTextMention m : sofaTextMention) { tagged = wrapInMentionTypeTag(m.getMentionText(), m.getMentionType()); if (!(m.getSofaTextMentionConcept().isEmpty())) tagged = wrapInConceptTag(tagged, m);  html = html.replace(m.getMentionText(), tagged); <BUGS> html = html.replaceAll("\\n", "<br/>"); <BUGE> } return html; } 
public void assignForm(int govid, sample.ApplicationData unAssignedForm) throws java.sql.SQLException { int resultCount; stmt = conn.createStatement(); java.lang.String query = ((("UPDATE FORM SET FORM.STATUS = 'ASSIGNED', FORM.GOVID = " + govid) + " WHERE TTBID = '") + (unAssignedForm.getTtbID())) + "'"; <BUGS> resultCount = stmt.executeUpdate(query); <BUGE> } 
@java.lang.Override public void onClick(android.view.View v) { switch (v.getId()) { case R.id.map_location : <BUGS> if ((android.support.v4.content.ContextCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION)) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) { <BUGE> mLocationManager.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, 0, 0, this); } break; } } 
private java.net.URL escapeIllegalURLCharacters(java.net.URL url) { <BUGS> if ((url == null) || (url.getProtocol().equals("file"))) { <BUGE> return url; } try { return org.apache.jmeter.protocol.http.util.ConversionUtils.sanitizeUrl(url).toURL(); } catch (java.lang.Exception e1) { org.apache.jmeter.protocol.http.sampler.HTTPSamplerBase.log.error(((("Error escaping URL:'" + url) + "', message:") + (e1.getMessage()))); return url; } } 
public void startElement(java.lang.String uri, java.lang.String localName, java.lang.String qName, org.xml.sax.Attributes atts) throws org.xml.sax.SAXException { <BUGS> captureElements = ((depth) == 0) || (((depth) == 1) && (jaxbReader.elementChecker.isParentInfoElement(uri, localName))); <BUGE> if (captureElements) tmp.startElement(uri, localName, qName, atts);  (depth)++; } 
private void clearResults() { tvResultsWillShowIf.setVisibility((isActivity ? android.view.View.GONE : android.view.View.VISIBLE)); <BUGS> <BUGE> tilIP.setErrorEnabled(true); <BUGS> tilIP.setError("Invalid IP"); <BUGE> cvHomeAddressRange.setVisibility(View.GONE); cvBroadcastAddress.setVisibility(View.GONE); cvNetworkAddress.setVisibility(View.GONE); } 
@java.lang.Override public android.graphics.Bitmap getDrawingCache(boolean autoScale) { final android.graphics.Bitmap b = super.getDrawingCache(autoScale); if (mReflectionCacheInvalid) { if ((mReflectionCache) == null) { try { <BUGS> mReflectionCache = createReflectionBitmap(b); <BUGE> mReflectionCacheInvalid = false; } catch (java.lang.NullPointerException e) { android.util.Log.e(com.appl.library.VIEW_LOG_TAG, ("Null pointer in createReflectionBitmap. Bitmap b=" + b), e); } } } return b; } 
public void refresh() { if (this.status) { World.currentWorld.set_Case(this.dest_add, this.to_add); java.lang.System.out.println("Refreshing replacing case"); java.lang.System.out.println(this.to_add); this.notifyObserver(); }else { World.currentWorld.set_Case(this.dest_add, this.replaced); java.lang.System.out.println("Refreshing normal case"); java.lang.System.out.println(this.dest_add); <BUGS> this.notifyObserver(); <BUGE> } } 
@org.junit.Test public void withEndGreaterThanStringLength() { <BUGS> for (int i = 0; i < 10; i++) { <BUGE> final int end = (string.getCharacters().length) + i; final com.valkryst.VTerminal.misc.IntRange range = new com.valkryst.VTerminal.misc.IntRange(0, end); org.junit.Assert.assertFalse(string.isRangeValid(range)); } } 
@java.lang.Override public org.eclipse.titan.runtime.core.TitanBoolean isBound() { for (int i = 0; i < (array_size); ++i) { <BUGS> if (!(array_elements.get(i).isBound().getValue())) { return new org.eclipse.titan.runtime.core.TitanBoolean(false); <BUGE> } } <BUGS> return new org.eclipse.titan.runtime.core.TitanBoolean(true); <BUGE> } 
protected org.rikai.dictionary.edict.EdictEntry buildEntry(org.rikai.dictionary.db.ResultCursor cursor, org.rikai.deinflector.DeinflectedWord variant) { java.lang.String reason = ""; <BUGS> if ((variant.getReason()) != "") { <BUGE> reason = (("< " + (variant.getReason())) + " < ") + (variant.getOriginalWord()); } return makeEntry(variant, cursor.getValue("kanji"), cursor.getValue("kana"), cursor.getValue("entry"), reason); } 
@java.lang.Override public boolean onScale(android.view.ScaleGestureDetector detector) { scale *= detector.getScaleFactor(); scale = java.lang.Math.max(0.2F, java.lang.Math.min(scale, 3.0F)); android.util.Log.i(ca.sapphire.schview.SchViewActivity.TAG, ("Scale: " + (scale))); <BUGS> invalidate(); <BUGE> return true; } 
@java.lang.Override public void connectionChanged(final org.csstudio.dal2.service.IPvAccess<java.lang.String> source, final boolean isConnected) { if (isConnected) { _alreadyConnected.incrementAndGet(); } <BUGS> _alarmListener.onMessage(org.csstudio.alarm.service.internal.AlarmMessageDAL2Impl.newAlarmMessage(_pvAccess)); <BUGE> org.csstudio.alarm.service.internal.AlarmConnectionDAL2Impl.ListenerItem.LOG_INNER.trace("received connection change to {} for pv {} ", new java.lang.Object[]{ source.getPVAddress().getAddress() , isConnected }); <BUGS> <BUGE> } 
<BUGS> private long _daysLate(com.born2go.lazzybee.db.Card card) { long due; <BUGE> long now = com.born2go.lazzybee.algorithms.Utils.intNow(); <BUGS> if ((card.getQueue()) == (com.born2go.lazzybee.db.Card.QUEUE_REV2)) due = card.getDue(); else due = now;  <BUGE> long diff_day = (now - due) / (com.born2go.lazzybee.algorithms.CardSched.SECONDS_PERDAY); return java.lang.Math.max(0, diff_day); } 
public void reaction() { nbasim.Team defense = game.other(offense); if (made) { <BUGS> <BUGE> offense.limbo(); defense.limbo(); <BUGS> }else { offense.defense(); defense.offense(); <BUGE> } } 
public void run() { <BUGS> hideLoadingAnimation(); <BUGE> java.io.InputStream is; try { is = getActivity().getContentResolver().openInputStream(android.net.Uri.parse(path)); mGifImageView.setBytes(com.mde.potdroid.fragments.MediaFragment.streamToBytes(is)); mGifImageView.setVisibility(View.VISIBLE); mGifImageView.startAnimation(); } catch (java.io.IOException e) { showError(R.string.msg_img_loading_error); e.printStackTrace(); } } 
public void computeOutputs(org.apache.beam.runners.spark.SparkRunner.Evaluator evaluator, boolean debugPipelineMode) { <BUGS> if (debugPipelineMode) { <BUGE> org.apache.beam.runners.spark.translation.EvaluationContext.LOG.info(("Translated Native Spark pipeline:\n" + (((org.apache.beam.runners.spark.SparkNativePipelineVisitor) (evaluator)).getDebugString()))); } for (org.apache.beam.runners.spark.translation.Dataset dataset : leaves) { dataset.cache(storageLevel()); if (!debugPipelineMode) { dataset.action(); }else { dataset.printDebugString(); } } } 
protected java.util.concurrent.CompletionStage<java.util.Optional<java.lang.String>> getCustomTypeId(@javax.annotation.Nonnull final io.sphere.sdk.types.CustomFieldsDraft customFieldsDraft) { try { final java.lang.String customTypeKey = getKeyFromResourceIdentifier(customFieldsDraft.getType()); return typeService.fetchCachedTypeId(customTypeKey); } catch (com.commercetools.sync.commons.exceptions.ReferenceResolutionException exception) { <BUGS> final com.commercetools.sync.commons.exceptions.ReferenceResolutionException referenceResolutionException = new com.commercetools.sync.commons.exceptions.ReferenceResolutionException(com.commercetools.sync.commons.helpers.BaseReferenceResolver.buildErrorMessage(com.commercetools.sync.commons.helpers.BaseReferenceResolver.FAILED_TO_RESOLVE_CUSTOM_TYPE, exception), exception); return io.sphere.sdk.utils.CompletableFutureUtils.exceptionallyCompletedFuture(referenceResolutionException); <BUGE> } } 
private soaringcoach.Flight analyse(soaringcoach.Flight f) throws soaringcoach.analysis.AnalysisException { <BUGS> f = new soaringcoach.analysis.DistanceAnalysis().analyse(f); <BUGE> f = new soaringcoach.analysis.CirclingAnalysis().analyse(f); f = new soaringcoach.analysis.ThermalAnalysis().analyse(f); f = new soaringcoach.analysis.WindAnalysis().analyse(f); f = new soaringcoach.analysis.CentringAnalysis().analyse(f); f = new soaringcoach.analysis.ShortStraightPhasesAnalysis().analyse(f); <BUGS> <BUGE> f = new soaringcoach.analysis.FlightSummaryAnalysis().analyse(f); return f; } 
@java.lang.Override public java.lang.Object visit(IC.AST.LocalVariable localVariable) { java.lang.String localVariableStr = ""; if (localVariable.hasInitValue()) { target = freshRegister(); <BUGS> localVariable.getEnclosingScope().setVaraibleReg(localVariable.getName(), c); <BUGE> localVariableStr = localVariableStr.concat(((java.lang.String) (localVariable.getInitValue().accept(this)))); localVariableStr = localVariableStr.concat(Emit(localVariable.getName(), target)); <BUGS> <BUGE> return localVariableStr; } return localVariable.getName(); } 
public int calMaxSubseqSum2() { this.getInputs(); int thisSum; int maxSum = 0; for (int i = 0; i < (sequence.length); i++) { thisSum = 0; <BUGS> for (int j = 0; j < (sequence.length); j++) { <BUGE> thisSum += sequence[j]; if (thisSum > maxSum) { maxSum = thisSum; } } } return maxSum; } 
@org.springframework.web.bind.annotation.RequestMapping(value = "/tarefa/{id}", method = org.springframework.web.bind.annotation.RequestMethod.GET, produces = org.springframework.http.MediaType.APPLICATION_JSON_VALUE) public org.springframework.http.ResponseEntity<br.edu.ifsp.dsw.model.Tarefa> buscarTarefa(@org.springframework.web.bind.annotation.PathVariable(value = "id") java.lang.Integer id) { java.lang.System.out.println(("Buscando tarefa de id: " + id)); <BUGS> br.edu.ifsp.dsw.model.Tarefa tarefa = tarefaService.buscarPorId(id.longValue()); <BUGE> if (tarefa == null) { java.lang.System.out.println((("Tarefa de id :" + id) + " nao foi encontrada.")); return new org.springframework.http.ResponseEntity<br.edu.ifsp.dsw.model.Tarefa>(org.springframework.http.HttpStatus.NOT_FOUND); } return new org.springframework.http.ResponseEntity<br.edu.ifsp.dsw.model.Tarefa>(tarefa, org.springframework.http.HttpStatus.OK); } 
@java.lang.Override public void onDrawerOpened(android.view.View drawerView) { super.onDrawerOpened(drawerView); if (!(isAdded())) { return ; } if (!(mUserLearnedDrawer)) { mUserLearnedDrawer = true; android.content.SharedPreferences sp = android.preference.PreferenceManager.getDefaultSharedPreferences(getActivity()); <BUGS> sp.edit().putBoolean(com.martin.martinthorneprojects.NavigationDrawerFragment.PREF_USER_LEARNED_DRAWER, true).apply(); <BUGE> } getActivity().supportInvalidateOptionsMenu(); } 
public static org.jboss.reddeer.common.context.ExecutionSetting getInstance() { if ((org.jboss.reddeer.common.context.ExecutionSetting.instance) == null) { org.jboss.reddeer.common.context.ExecutionSetting.instance = new org.jboss.reddeer.common.context.ExecutionSetting(); <BUGS> org.jboss.reddeer.common.context.ExecutionSetting.instance.debugEnabled = RedDeerProperties.LOG_DEBUG.getBooleanSystemValue(); <BUGE> org.jboss.reddeer.common.context.ExecutionSetting.instance.pauseFailedTest = RedDeerProperties.PAUSE_FAILED_TEST.getBooleanSystemValue(); java.lang.String logMessageFilterText = RedDeerProperties.LOG_MESSAGE_FILTER.getSystemValue(); java.lang.String logLevel = RedDeerProperties.LOG_LEVEL.getSystemValue(); org.jboss.reddeer.common.context.ExecutionSetting.instance.logLevel = LogLevel.ALL.fromString(logLevel).getValue(); org.jboss.reddeer.common.context.ExecutionSetting.instance.parseLogMessageFilter(logMessageFilterText); } return org.jboss.reddeer.common.context.ExecutionSetting.instance; } 
@java.lang.Override public int requestEnergy(int energy, boolean simulate) { int given = this.storage.extractEnergy(energy, simulate); if (!simulate) { this.markDirty(); if (!(worldObj.isRemote)) { <BUGS> lastOut += given; <BUGE> } } return given; } 
public void showDate(int year, int month) { if ((mAdapter) != null) { mAdapter.setDate(year, month); initDateText(); if ((onCalendarChangeListener) != null) <BUGS> onCalendarChangeListener.onMonthChanged(year, month); <BUGE>  } } 
@java.lang.Override public int onStartCommand(android.content.Intent intent, int flags, int startId) { <BUGS> android.content.Context mContext = this; <BUGE> ru.meefik.linuxdeploy.MainActivity.notification(mContext, null); java.lang.String command = intent.getStringExtra("command"); <BUGS> new ru.meefik.linuxdeploy.ExecScript(getApplicationContext(), command).start(); <BUGE> return super.onStartCommand(intent, flags, startId); } 
public static org.talend.designer.components.hashfile.common.MATCHING_MODE parse(java.lang.String matchingMode) { <BUGS> org.talend.designer.components.hashfile.common.MATCHING_MODE multipleMatchingModeResult = null; <BUGE> org.talend.designer.components.hashfile.common.MATCHING_MODE[] multipleMatchingModes = org.talend.designer.components.hashfile.common.MATCHING_MODE.values(); for (org.talend.designer.components.hashfile.common.MATCHING_MODE multipleMatchingMode : multipleMatchingModes) { if (multipleMatchingMode.toString().equals(matchingMode)) { <BUGS> multipleMatchingModeResult = multipleMatchingMode; break; <BUGE> } } <BUGS> return multipleMatchingModeResult; <BUGE> } 
<BUGS> private void initGui(android.os.Bundle savedInstanceState) { <BUGE> setContentView(R.layout.activity_main); butterknife.ButterKnife.bind(this); navView.setNavigationItemSelectedListener(this); navView.getMenu().getItem(0).setChecked(true); android.widget.LinearLayout navHeader = ((android.widget.LinearLayout) (navView.getHeaderView(0))); navHeader.setOnClickListener(new android.view.View.OnClickListener() { @java.lang.Override public void onClick(android.view.View v) { showFragment(R.id.action_settings); drawerLayout.closeDrawer(GravityCompat.START); } }); } 
<BUGS> public void showMaximumIndependentSet() { <BUGE> java.util.Set<no.uib.ii.algo.st8.start.UnVertex> cover = no.uib.ii.algo.st8.algorithms.ExactVertexCover.findExactVertexCover(graph.getGraph()); <BUGS> if (cover != null) { clearAll(); markedVertices.addAll(graph.getVertices()); markedVertices.removeAll(cover); } <BUGE> } 
@gov.gwssi.csc.scms.controller.user.RequestMapping(value = "/node/{nodeId}", method = RequestMethod.DELETE, headers = "Accept=application/json; charset=utf-8") <BUGS> public gov.gwssi.csc.scms.controller.user.Node deleteNode(@gov.gwssi.csc.scms.controller.user.RequestHeader(value = gov.gwssi.csc.scms.controller.user.UserController.HEADER_AUTHORIZATION) <BUGE> java.lang.String header, @gov.gwssi.csc.scms.controller.user.PathVariable java.lang.String nodeId) { try { gov.gwssi.csc.scms.controller.user.User user = userService.getRootUser(header); <BUGS> gov.gwssi.csc.scms.controller.user.Node node = nodeService.deleteNodeByNodeId(nodeId, user); node.setChildren(null); node.setParent(null); return node; <BUGE> } catch (java.lang.Exception e) { e.printStackTrace(); throw new java.lang.RuntimeException(e); } } 
private java.lang.String showEnterNameDialog() { javafx.scene.control.TextInputDialog dialog = new javafx.scene.control.TextInputDialog("walter"); dialog.setTitle(this.res.enterNameDialogTitle); dialog.setHeaderText(this.res.enterNameDialogHeaderText); dialog.setContentText(this.res.enterNameDialogContentText); java.util.Optional<java.lang.String> result = dialog.showAndWait(); if (result.isPresent()) { java.lang.System.out.println(("Your name: " + (result.get()))); <BUGS> <BUGE> } <BUGS> return result.get(); <BUGE> } 
private java.lang.String calc(java.lang.String input) { if (input == null) { <BUGS> throw IllegalArgumentException("No word given"); <BUGE> } java.lang.String word = ""; for (int i = 0; i < (input.length()); i++) { word += (input.charAt(i)) + 1; } return word; } 
@java.lang.Override @javax.annotation.Nullable protected java.lang.String[] get(org.bukkit.event.Event e) { <BUGS> java.lang.String kingdom = org.kingdoms.manager.game.GameManagement.getPlayerManager().getOfflineKingdomPlayer(p.getSingle(e)).getKingdomName(); <BUGE> try { <BUGS> <BUGE> } catch (java.lang.NullPointerException ex) { <BUGS> return new java.lang.String[]{  }; <BUGE> } return new java.lang.String[]{ kingdom }; } 
private void writeData(org.n52.io.response.dataset.DataCollection<org.n52.io.response.dataset.measurement.MeasurementData> data, java.io.OutputStream stream) throws java.io.IOException { for (org.n52.io.response.dataset.DatasetOutput metadata : seriesMetadatas) { <BUGS> org.n52.io.response.dataset.measurement.MeasurementData series = data.getSeries(org.n52.io.response.dataset.DatasetType.extractId(metadata.getId())); <BUGE> writeData(metadata, ((org.n52.io.response.dataset.measurement.MeasurementData) (series)), stream); } } 
@java.lang.Override protected void onDraw(android.graphics.Canvas canvas) { super.onDraw(canvas); gridHeight = getHeight(); gridWidth = getWidth(); <BUGS> if ((this.triangulation) != null) { <BUGE> plotOnCanvas(canvas); }else { generateAndInvalidate(); } } 
@java.lang.Override public boolean eachChild(final com.webfirmframework.wffweb.tag.html.AbstractHtml child) { <BUGS> final com.webfirmframework.wffweb.tag.html.attribute.core.AbstractAttribute idAttr = child.getAttributeByName(AttributeNameConstants.ID); if (((idAttr != null) && (attributeName.equals(idAttr.getAttributeName()))) && (attributeValue.equals(idAttr.getAttributeValue()))) { <BUGE> matchingTags.add(child); } return true; } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.editor_layout); <BUGS> com.developer.alienapps.multimediachanger.Utility.setupFfmpeg(this); <BUGE> progressBar = new android.app.ProgressDialog(this); progressBar.setProgressStyle(ProgressDialog.STYLE_SPINNER); progressBar.setTitle("Work in Progress"); progressBar.setCancelable(false); progressBar.setButton(DialogInterface.BUTTON_NEGATIVE, "Cancel", new android.content.DialogInterface.OnClickListener() { @java.lang.Override public void onClick(android.content.DialogInterface dialog, int which) { handler.sendEmptyMessage(Utility.STOP_PROGRESS_MSG); } }); initUI(); } 
@org.junit.Test public void testRemoveVmsFromExistingAffinityGroup() { org.ovirt.engine.core.common.scheduling.AffinityGroup existing = dao.get(FixturesTool.EXISTING_AFFINITY_GROUP_ID); org.junit.Assert.assertFalse(existing.getEntityNames().isEmpty()); existing.getEntityIds().clear(); dao.update(existing); org.ovirt.engine.core.common.scheduling.AffinityGroup fetched = dao.get(existing.getId()); <BUGS> org.junit.Assert.assertNull(fetched.getEntityNames()); <BUGE> } 
public void removeFieldListItem(java.lang.String getter, java.lang.String childListName, java.lang.String selectionName) throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException, java.lang.NoSuchMethodException, java.lang.SecurityException, java.lang.reflect.InvocationTargetException { java.lang.reflect.Method mthGetSelected = this.getClass().getMethod(("get" + (com.mcmatica.entity.webui.common.Utility.capitalize(selectionName)))); <BUGS> com.mcmatica.entity.webui.model.BaseEntityModel itemselected; itemselected = ((com.mcmatica.entity.webui.model.BaseEntityModel) (mthGetSelected.invoke(this))); <BUGE> this.removeFieldListItem(getter, childListName, itemselected); } 
<BUGS> private int getWordId(java.lang.String word) { <BUGE> if (word2index.containsKey(word)) { return word2index.get(word); }else { int w = word2index.size(); word2index.put(word, w); return w; } } 
<BUGS> public char[] cross(creatures.CharCreature creat1, creatures.CharCreature creat2) { <BUGE> char[] output = new char[creat1.chrom.length]; for (int i = 0; i < (output.length); i++) { if (i < ((output.length) / 2)) { output[i] = creat1.chrom[i]; }else { output[i] = creat2.chrom[i]; } } return output; } 
@org.junit.Test public void getFormattedDateString_6days() { <BUGS> org.hamcrest.MatcherAssert.assertThat(com.ddiehl.timesincetextview.TimeSince.getFormattedDateString((((mTime) - ((((1 * 7) * 24) * 60) * 60)) + 1), mTime, false, com.ddiehl.timesincetextview.TimeSinceTextViewAndroidTest.mContext), com.ddiehl.timesincetextview.TimeSinceTextViewAndroidTest.is(getQuantityString(R.plurals.tstv_timespan_days, 6))); <BUGE> } 
public void setTimePeriod(java.lang.Long startTimeParam, java.lang.Long endTimeParam) { <BUGS> java.lang.Long startTime = (startTimeParam == null) ? 0L : startTimeParam; java.lang.Long endTime = (endTimeParam == null) ? teammates.common.util.TimeHelper.now(0.0).getTimeInMillis() : endTimeParam; <BUGE> query.startTimeMillis(startTime); query.endTimeMillis(endTime); this.startTime = startTime; this.endTime = endTime; } 
public void resetItems() { if ((swipeListView.getAdapter()) != null) { int count = swipeListView.getAdapter().getCount(); <BUGS> for (int i = opened.size(); i <= count; i++) { <BUGE> opened.add(false); openedRight.add(false); checked.add(false); } } } 
public boolean move(boolean[][] game, int pos, boolean player) { <BUGS> <BUGE> if ((game[(!player ? 1 : 0)][(pos - 1)]) && (game[(player ? 1 : 0)][(pos - 1)])) return true;  return false; } 
@java.lang.Override public void execute() throws java.lang.Exception { <BUGS> <BUGE> totalItems = suggesters.size(); for (dynamo.magazines.KioskIssuesSuggester kioskIssuesSuggester : suggesters) { if (cancelled) { return ; } setCurrentLabel(java.lang.String.format("Retrieving magazine issues from %s", kioskIssuesSuggester.toString())); try { kioskIssuesSuggester.suggestIssues(); } catch (java.lang.Exception e) { dynamo.core.manager.ErrorManager.getInstance().reportThrowable(e); } (itemsDone)++; } } 
@org.junit.Test public void toEntity() throws java.lang.Exception { com.duoec.commons.pojo.house.House house = houseDao.find(com.mongodb.client.model.Filters.eq("_id", 14607)).first(); org.bson.Document doc = com.duoec.commons.mongo.MongoConverter.toDocument(house); com.duoec.commons.pojo.house.House house2 = com.duoec.commons.mongo.MongoConverter.toEntity(doc, com.duoec.commons.pojo.house.House.class); assertEquals(house, house2); <BUGS> java.lang.System.out.println(house.getBasicInfo().getHouseName()); <BUGE> } 
public java.util.List<java.lang.String> getPropConfiguration(java.lang.String lblProps) throws java.io.IOException { java.util.List<java.lang.String> items = null; try { if ((this.props) == null) { loadPropFile(); } <BUGS> java.util.List<java.lang.String> rtrn = java.util.Arrays.asList(this.props.getProperty(lblProps).split("\\s*,\\s*")); <BUGE> return rtrn; } catch (java.lang.Exception e) { e.printStackTrace(); } return null; } 
public void flushTicketsInFile(java.lang.String fileName) { javax.swing.tree.DefaultTreeModel defaultModel = ((javax.swing.tree.DefaultTreeModel) (taskTree.getModel())); if ((fileToNodes.get(fileName)) != null) { for (javax.swing.tree.DefaultMutableTreeNode node : fileToNodes.get(fileName)) { <BUGS> java.lang.System.out.println(((uk.ac.glasgow.microissues.plugin.Ticket) (node.getUserObject())).getSummary()); <BUGE> defaultModel.removeNodeFromParent(node); fileToNodes.get(fileName).remove(node); } } } 
@java.lang.Override public void onGenerated(android.support.v7.graphics.Palette palette) { mCollapsingToolbar.setContentScrimColor(palette.getVibrantColor(R.attr.colorPrimary)); mCollapsingToolbar.setStatusBarScrimColor(palette.getDarkVibrantColor(R.attr.colorPrimaryDark)); com.centerstage.limelight.MovieFragment fragment = ((com.centerstage.limelight.MovieFragment) (getSupportFragmentManager().findFragmentById(R.id.movie_fragment))); <BUGS> fragment.onPaletteGenerated(palette); <BUGE> } 
public ui.Resizer.Size resize(int width, int height) { <BUGS> double wRatio = (1 * (this.width)) / width; double hRatio = (1 * (this.height)) / height; <BUGE> return hRatio < wRatio ? new ui.Resizer.Size(((int) (width * hRatio)), ((int) (height * hRatio))) : new ui.Resizer.Size(((int) (width * wRatio)), ((int) (height * wRatio))); } 
public void testCombat() throws java.lang.Exception, java.sql.SQLException { this.benchmark.createDatabase(); <BUGS> this.benchmark.loadDatabase(); <BUGE> com.oltpbenchmark.api.Worker w = workers.get(0); com.oltpbenchmark.benchmarks.galaxy.procedures.Combat proc = w.getProcedure(com.oltpbenchmark.benchmarks.galaxy.procedures.Combat.class); if (proc != null) { new com.oltpbenchmark.benchmarks.galaxy.util.TestCombat().run(conn, proc, new java.util.Random()); } } 
protected void initialize() { setTimeout(); setTitle(getStringResource("title")); add(new org.apache.wicket.markup.html.basic.Label("pageTitle", new org.apache.wicket.model.PropertyModel<java.lang.String>(this, "title"))); add(new org.dcache.webadmin.view.panels.header.HeaderPanel("headerPanel")); <BUGS> add(new org.dcache.webadmin.view.panels.userpanel.UserPanel("userPanel", this)); org.dcache.webadmin.view.panels.navigation.BasicNavigationPanel navigation = new org.dcache.webadmin.view.panels.navigation.BasicNavigationPanel("navigationPanel", this.getClass()); add(navigation); <BUGE> } 
protected java.lang.String[] doInBackground(java.util.ArrayList<java.lang.String>... passing) { boolean validServer = false; java.lang.String[] result = null; try { org.eyeseetea.malariacare.network.PushClient pushClient = new org.eyeseetea.malariacare.network.PushClient(null, context); validServer = pushClient.isValidServer(); if (validServer) result = pushClient.pullOrgUnitsCodes(); else <BUGS> result = new java.lang.String[0]; <BUGE>  result[0] = ""; } catch (java.lang.Exception e) { e.printStackTrace(); } return result; } 
private static kafka.consumer.ConsumerConfig createConsumerConfig(java.lang.String zkConnect, java.lang.String groupId) { java.util.Properties props = new java.util.Properties(); props.put("zookeeper.connect", zkConnect); props.put("group.id", groupId); props.put("zookeeper.session.timeout.ms", "400"); props.put("zookeeper.sync.time.ms", "200"); props.put("auto.commit.interval.ms", "1000"); <BUGS> props.put("fetch.min.bytes", 1); <BUGE> return new kafka.consumer.ConsumerConfig(props); } 
public static java.lang.String superDecrypt(java.lang.String start) { <BUGS> <BUGE> for (int i = 0; i < 3; i++) { start = Encryption.keyDecrypt(7, start); start = Encryption.descramble(start, 7); } return start; } 
private void playQueue() { paused = false; if (((curPosition) >= (phraseFiles.size())) && (!(repeat))) { <BUGS> stopPhrase(); <BUGE> }else { try { mp.setDataSource(phraseFiles.get(curPosition)); mp.prepare(); mp.start(); } catch (java.io.IOException e) { e.printStackTrace(); } (curPosition)++; } } 
public jsettlers.common.position.ShortPoint2D getNearestCuttableObjectPointForPlayer(jsettlers.common.position.ShortPoint2D point, jsettlers.common.mapobject.EMapObjectType cuttableObject, int searchDistance, byte playerId) { jsettlers.ai.highlevel.AiPositions sortedResourcePoints = sortedCuttableObjectsInDefaultPartition.get(cuttableObject); if (sortedResourcePoints == null) { return null; } <BUGS> return getNearestPointInDefaultPartitionOutOfSortedMap(point, sortedResourcePoints, playerId, searchDistance); <BUGE> } 
protected java.lang.Void doInBackground(java.lang.Void... unused) { java.util.Map<java.lang.String, java.lang.Object> body = new java.util.HashMap<>(); body.put("range_start", start); body.put("insert_before", end); <BUGS> com.reissgrvs.spotifyplaylisttool.SpotifyAPI.SpotifyAPIManager.getService().reorderPlaylistTracks(userID, playlistID, body); <BUGE> return null; } 
@java.lang.Override public void setup(edu.gsgp.experiment.data.Dataset dataset, edu.gsgp.nodes.Node tree) { super.setup(dataset, tree); double value; for (edu.gsgp.experiment.data.Instance instance : dataset) { <BUGS> value = tree.eval(instance.input); <BUGE> min = java.lang.Math.min(min, value); max = java.lang.Math.max(max, value); } } 
public boolean removeGeofence(long id) { if (!(mGoogleApiClient.isConnected())) { android.util.Log.i(hk.ust.cse.comp4521.reminder.ReminderDataController.TAG, "Cannot connect to Google Service"); return false; } android.content.Intent intent = new android.content.Intent(context, hk.ust.cse.comp4521.reminder.GeofenceTransitionIntentService.class); android.app.PendingIntent pendingIntent = android.app.PendingIntent.getService(context, (((int) (id)) * 7), intent, PendingIntent.FLAG_NO_CREATE); <BUGS> <BUGE> LocationServices.GeofencingApi.removeGeofences(mGoogleApiClient, pendingIntent).setResultCallback(this); return true; } 
public boolean isUserNewRecord(java.lang.String username, int score) { for (int record = 0; record < (this.highscores.size()); record++) { CK.FileIO.Highscore.Highscore scoreNow = this.highscores.get(record); <BUGS> if (((scoreNow.getUsername()) == username) && ((scoreNow.getScore()) < score)) { java.lang.System.out.println("User new highscore"); <BUGE> return true; <BUGS> }else { return false; <BUGE> } } return false; } 
@java.lang.Override public void dispose() { super.dispose(); <BUGS> <BUGE> com.xeranas.lkj.util.AudioUtils.cleanUp(); <BUGS> rayHandler.dispose(); <BUGE> world.dispose(); backgroundImg.dispose(); map.dispose(); tmr.dispose(); <BUGS> player.dispose(); <BUGE> } 
<BUGS> public static boolean pathIsValid(java.lang.String strPath) { <BUGE> for (java.lang.String existFile : com.izforge.izpack.panels.jdkpath.JDKPathPanelHelper.testFiles) { java.io.File path = new java.io.File(strPath, existFile).getAbsoluteFile(); if (!(path.exists())) { return false; } } return true; } 
@java.lang.Override public boolean onEditorAction(io.github.mthli.Ninja.Activity.TextView v, int actionId, io.github.mthli.Ninja.Activity.KeyEvent event) { <BUGS> if (((currentAlbumController) == null) || (!(actionId == (android.view.inputmethod.EditorInfo.IME_ACTION_DONE)))) { <BUGE> return false; } java.lang.String query = inputBox.getText().toString().trim(); if (query.isEmpty()) { io.github.mthli.Ninja.Activity.NinjaToast.show(this, R.string.toast_input_empty); return true; } updateAlbum(query); hideSoftInput(inputBox); return false; } 
@java.lang.Override public void onClick(final android.view.View v) { if (mediaPlayer.isPlaying()) { mediaPlayer.stop(); mediaPlayer.reset(); ((android.widget.ImageButton) (v)).setImageResource(R.drawable.ic_track_play); <BUGS> floatingActionButton.setVisibility(View.VISIBLE); rlPlayer.setVisibility(View.GONE); <BUGE> }else { mediaPlayer.start(); ((android.widget.ImageButton) (v)).setImageResource(R.drawable.ic_track_stop); } } 
public static void main(java.lang.String[] args) throws java.lang.Exception { java.util.Map<java.lang.String, java.lang.String> conf = cs.nuim.ie.worflowHelper.FileHelper.myFileReader("veriGT.conf"); cs.nuim.ie.workflowRunner.xpandExec.projName = conf.get("projname"); cs.nuim.ie.workflowRunner.xpandExec.dirs = cs.nuim.ie.worflowHelper.FileHelper.myFileCreator(cs.nuim.ie.workflowRunner.xpandExec.base, cs.nuim.ie.workflowRunner.xpandExec.projName); cs.nuim.ie.workflowRunner.xpandExec.genMetamodels(cs.nuim.ie.workflowRunner.xpandExec.projName); <BUGS> cs.nuim.ie.workflowRunner.xpandExec.genExternalConfigruation(cs.nuim.ie.workflowRunner.xpandExec.projName, "_TranslationValidation"); <BUGE> cs.nuim.ie.workflowRunner.xpandExec.genExecSem(cs.nuim.ie.workflowRunner.xpandExec.projName); cs.nuim.ie.workflowRunner.xpandExec.genRuntime(cs.nuim.ie.workflowRunner.xpandExec.projName); <BUGS> <BUGE> } 
@java.lang.Override public boolean doAction(java.lang.String value) { char choice = value.toUpperCase().charAt(0); switch (choice) { <BUGS> case 'P' : this.startPickUpTNT(); break; <BUGE> case 'D' : this.startDropTNT(); break; case 'U' : this.startUseTNT(); break; case 'B' : return true; default : this.console.println("\n*** Invalid selection*** Try again"); break; } return false; } 
<BUGS> @java.lang.Override public void run() { try { int readCount = socketChannel.read(input); java.lang.System.out.println(("Read count: " + readCount)); if (readCount > 0) { state = com.flyer.netty.reactor.third.ThirdHandler.PROCESSING; com.flyer.netty.reactor.third.ThirdHandler.pool.submit(new com.flyer.netty.reactor.third.ThirdHandler.Processor(readCount)); } selectionKey.attach(new com.flyer.netty.reactor.third.ThirdHandler.Sender()); selectionKey.interestOps(java.nio.channels.SelectionKey.OP_WRITE); selectionKey.selector().wakeup(); } catch (java.io.IOException e) { e.printStackTrace(); <BUGE> } <BUGS> <BUGE> } 
private boolean removeLispMapping(org.opendaylight.yang.gen.v1.urn.opendaylight.lfm.control.plane.rev150314.lispaddress.LispAddressContainer eid) { com.google.common.base.Preconditions.checkNotNull(eid, "Cannot REMOVE new Mapping to LISP configuration store, EID is null."); try { org.opendaylight.sfc.sfc_lisp.provider.api.SfcLispFlowMappingApi.LOG.trace("REMOVE mapping for EID: {}", eid); <BUGS> java.util.concurrent.Future<org.opendaylight.yangtools.yang.common.RpcResult<java.lang.Void>> result = lfmService.removeMapping(org.opendaylight.sfc.sfc_lisp.provider.LispUtil.buildRemoveMappingInput(eid)); <BUGE> result.get().getResult(); return true; } catch (java.lang.Exception e) { <BUGS> org.opendaylight.sfc.sfc_lisp.provider.api.SfcLispFlowMappingApi.LOG.warn("Failed to REMOVE mapping for EID {} : {}", eid); <BUGE> } return false; } 
public java.lang.String put(java.lang.String key, java.lang.String value) { if ((size) == ((capacity) * (averageListCapacity))) { resize(); } ru.spbau.mit.java.fall2017.containers.LinkedList l = table[indexByKey(key)]; java.lang.String oldValue = table[indexByKey(key)].add(key, value); if (oldValue != null) { <BUGS> ++(size); <BUGE> return oldValue; }else { <BUGS> <BUGE> return null; } } 
private void addFragment() { mAnswerImageFragment = com.kania.set2.ui.AnswerImageFragment.newInstance(); <BUGS> mNineCardFragment = com.kania.set2.ui.NineCardFragment.newInstance(NineCardFragment.CARD_TYPE_FILL_AS_PATTERN, false, this); <BUGE> android.app.FragmentManager fragmentManager = getFragmentManager(); android.app.FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction(); fragmentTransaction.add(R.id.timeattack_container_answer, mAnswerImageFragment); fragmentTransaction.add(R.id.timeattack_container_ninecard, mNineCardFragment); fragmentTransaction.commit(); } 
@java.lang.Override public double f(double[] coeffs) { <BUGS> java.lang.System.out.println("aa0"); <BUGE> double[] gen = new double[xp.length]; double[] gradient = new double[coeffs.length]; double[] diffY = new double[xp.length]; double sumDiff = calcGradient(coeffs, gen, gradient, diffY); <BUGS> java.lang.System.out.println(("poly coeffs=" + (java.util.Arrays.toString(coeffs)))); java.lang.System.out.println(("  diff=" + sumDiff)); <BUGE> return sumDiff; } 
public static java.util.ArrayList<com.nakamagaming.dd5espells.Spell> filterByClass(java.util.ArrayList<com.nakamagaming.dd5espells.Spell> list, java.util.ArrayList<com.nakamagaming.dd5espells.helpers.ClassType> classTypes) { java.util.ArrayList<com.nakamagaming.dd5espells.Spell> result = new java.util.ArrayList<>(); for (com.nakamagaming.dd5espells.Spell spell : list) { for (com.nakamagaming.dd5espells.helpers.ClassType classType : spell.getClassTypes()) { <BUGS> if (classTypes.contains(classType)) <BUGE> result.add(spell); <BUGS>  break; <BUGE> } } return result; } 
public void testPutDocument() { <BUGS> assumeFalse("JDK is JDK 9", Constants.JRE_IS_MINIMUM_JAVA9); <BUGE> org.elasticsearch.client.Client client = getClient(); client.prepareIndex(index, "doc", "1").setSource("foo", "bar").get(); client.admin().indices().prepareRefresh(index).get(); org.elasticsearch.action.search.SearchResponse searchResponse = client.prepareSearch(index).get(); assertThat(searchResponse.getHits().getTotalHits(), org.hamcrest.CoreMatchers.is(1L)); } 
private void drawCurMarker() { if (((cLatitude) != 0.0) || ((cLongitude) != 0.0)) { com.skp.Tmap.TMapPoint tMapPoint = new com.skp.Tmap.TMapPoint(cLatitude, cLongitude); com.skp.Tmap.TMapMarkerItem tItem = new com.skp.Tmap.TMapMarkerItem(); tItem.setTMapPoint(tMapPoint); com.example.youngseok.myapplication.MainActivity.tMapView.addMarkerItem("현재위치", tItem); <BUGS> com.example.youngseok.myapplication.MainActivity.tMapView.setCenterPoint(cLongitude, cLatitude, true); <BUGE> com.example.youngseok.myapplication.MainActivity.tMapView.setZoomLevel(15); <BUGS> }else { android.widget.Toast.makeText(this, "\uc704\uce58 \ud655\uc778 \uc911\n\uc7a0\uc2dc \ud6c4 \ub2e4\uc2dc \uc2dc\ub3c4\ud558\uc138\uc694", Toast.LENGTH_SHORT).show(); <BUGE> } } 
<BUGS> public void ShareData(java.lang.String data) { <BUGE> android.content.Intent i = new android.content.Intent(); i.setAction(Intent.ACTION_SEND); <BUGS> i.putExtra(Intent.EXTRA_TEXT, data); <BUGE> i.setType("text/plain"); startActivity(android.content.Intent.createChooser(i, "Choose App to Share")); } 
@java.lang.Override public boolean onCreateOptionsMenu(android.view.Menu menu) { switch (mPosition) { case 0 : getMenuInflater().inflate(R.menu.main, menu); break; case 1 : getMenuInflater().inflate(R.menu.zone, menu); break; default : <BUGS> getMenuInflater().inflate(R.menu.history, menu); <BUGE> } return true; } 
@java.lang.Override public java.util.List<io.mapsquare.osmcontributor.model.utils.OpeningHours> fromValue(java.lang.String value) { if (value.trim().isEmpty()) { return null; } java.util.List<io.mapsquare.osmcontributor.model.utils.OpeningHours> openingHoursList = new java.util.ArrayList<>(); java.lang.String[] openingHours = value.split(io.mapsquare.osmcontributor.ui.adapters.parser.OpeningHoursValueParser.HOURS_SEP); for (java.lang.String o : openingHours) { if (!(o.trim().isEmpty())) { <BUGS> openingHoursList.add(fromSingleValue(o)); <BUGE> } } return openingHoursList; } 
static void create(io.realm.Realm realm, java.lang.String noteText) { com.odinuts.memo.model.Parent parent = realm.where(com.odinuts.memo.model.Parent.class).findFirst(); io.realm.RealmList<com.odinuts.memo.model.Note> notes = parent.getNoteList(); realm.beginTransaction(); com.odinuts.memo.model.Note note = realm.createObject(com.odinuts.memo.model.Note.class, com.odinuts.memo.model.Note.increment()); note.setNote(noteText); <BUGS> <BUGE> realm.commitTransaction(); <BUGS> notes.add(note); <BUGE> } 
@java.lang.Override public java.lang.String[] getAllPropertyNames() { java.util.List<java.lang.String> names = new java.util.ArrayList<java.lang.String>(); for (com.samdlc.jini.IProperty prop : properties) { names.add(prop.getName()); } <BUGS> return ((java.lang.String[]) (names.toArray())); <BUGE> } 
public int getTagNameId(java.lang.CharSequence tagName) { int id; <BUGS> if (tagNames.containsKey(tagName)) { <BUGE> id = tagNames.size(); tagNames.put(tagName, id); }else { id = tagNames.get(tagName); } return id; } 
@org.junit.Test public void run8() throws java.lang.Throwable { java.util.List<java.lang.String> list = new java.util.ArrayList<java.lang.String>(); list.add("Did you try and take us back to our own time? DOCTOR: Well, I got you away from that other time, didn't I? IAN: That isn't what I asked you."); java.util.Collection<java.lang.String> lines = org.swtk.eng.preprocess.functions.CreateSentences.process(list); org.junit.Assert.assertNotNull(lines); <BUGS> for (java.lang.String line : lines) java.lang.System.err.println(line);  <BUGE> org.junit.Assert.assertEquals(3, lines.size()); } 
<BUGS> public void setNewMetric(java.lang.String newPath, java.lang.String metricName) { this.path = newPath; <BUGE> this.metricName = metricName; topJsonObject = new org.json.JSONObject(); topJsonArray = new org.json.JSONArray(); try { topJsonObject.put("target", metricName); dataArray = new org.json.JSONArray(); topJsonObject.put("datapoints", dataArray); } catch (org.json.JSONException e) { e.printStackTrace(); } topJsonArray.put(topJsonObject); } 
public int getNumberOfWorkingDays() { java.util.List<java.lang.String> distinctPeriods = new java.util.ArrayList<>(); for (com.jpa.entities.Period period : getAllPeriods()) { <BUGS> if (distinctPeriods.contains(period.getDay())) { <BUGE> distinctPeriods.add(period.getDay()); } } return distinctPeriods.size(); } 
public void advanceTime(double timeElapsed) throws java.lang.IllegalArgumentException, jumpingalien.model.IllegalPositionException, jumpingalien.model.IllegalTimeException { if (java.lang.Double.isNaN(timeElapsed)) throw new java.lang.IllegalArgumentException("The elapsed time must be a number.");  updateCollisionTimers(getAlien(), timeElapsed); getAlien().advanceTime(timeElapsed); centerWindow(timeElapsed); alienObjectCollisionEffects(); geoCollisionEffects(getAlien()); for (jumpingalien.model.GameObject gameobject : this.gameobjects) { updateCollisionTimers(gameobject, timeElapsed); gameobject.advanceTime(timeElapsed); <BUGS> <BUGE> } } 
@org.junit.Test public void testCreateBeanForPeriod() { java.time.Period sourcePeriod = java.time.Period.of(2015, 11, 8); java.time.Period destinationPeriod = null; when(periodCreatorMock.create(sourcePeriod)).thenReturn(sourcePeriod); java.lang.Object actualPeriod = objectUnderTest.convert(destinationPeriod, sourcePeriod, java.time.Period.class, java.time.Period.class); <BUGS> org.junit.Assert.assertThat(actualPeriod, org.hamcrest.CoreMatchers.instanceOf(java.time.Period.class)); org.junit.Assert.assertEquals(sourcePeriod, actualPeriod); <BUGE> verify(periodCreatorMock, times(1)).create(sourcePeriod); } 
private void CreateQGIS_FromPrj() { final java.lang.String filename = y.utils.YemFileDialogs.fileDialog(this, y.config.LastUsedFolder.getInstance(), "Seleziona il file prj da cui creare il progetto qgis"); if (!(filename.isEmpty())) try { final y.em.Project prj = y.exporters.ProjectExporterProvider.importProject(filename); <BUGS> final y.ui.PanelProject pp = OpenProject(prj); <BUGE> y.ui.PanelQGisCreate.openWindow(config, pp); } catch (java.lang.Exception e) { y.utils.Utils.MessageBox(this, ("Impossibile aprire il file di progetto:\n" + (e.getMessage())), "ERRORE"); }  } 
public boolean onAreaTouched(org.andengine.input.touch.TouchEvent pSceneTouchEvent, float pTouchAreaLocalX, float pTouchAreaLocalY) { if (pSceneTouchEvent.isActionDown()) { setTouchAreaBindingOnActionDownEnabled(false); setTouchAreaBindingOnActionMoveEnabled(false); gameHud.dispose(); gameHud.setVisible(false); detachChild(gameHud); myGarbageCollection(); com.matedevs.protectthetown.manager.SceneManager.getInstance().loadGameScene(engine, this); } <BUGS> return false; <BUGE> } 
@java.lang.Override public void onRestoreInstanceState(android.os.Bundle savedInstanceState) { <BUGS> <BUGE> if (savedInstanceState.containsKey(sk.momosi.fuelapp.activities.UpdateCarActivity.PHOTO)) { mCurrentPhotoLarge = savedInstanceState.getParcelable(sk.momosi.fuelapp.activities.UpdateCarActivity.PHOTO); android.widget.ImageView im = ((android.widget.ImageView) (findViewById(R.id.img_addcar_car))); im.setImageBitmap(mCurrentPhotoLarge); } } 
public com.jme3.math.Vector3f warp(com.jme3.math.Vector3f newPos) { <BUGS> com.jme3.math.Vector3f newPos2d = new com.jme3.math.Vector3f(newPos.x, 0, newPos.z); <BUGE> currentCell = navMesh.findClosestCell(newPos2d); currentPos3d.set(navMesh.snapPointToCell(currentCell, newPos2d)); currentPos3d.setY(newPos.getY()); currentPos.set(currentPos3d.getX(), currentPos3d.getZ()); return currentPos3d; } 
@java.lang.Override public java.lang.Boolean call(com.appunite.rx.example.model.model.AddPost addPost) { final boolean nameIsPresent = !(com.google.common.base.Strings.isNullOrEmpty(addPost.name())); final boolean bodyIsPresent = !(com.google.common.base.Strings.isNullOrEmpty(addPost.body())); <BUGS> return nameIsPresent || bodyIsPresent; <BUGE> } 
@java.lang.Override public java.lang.String toString() { <BUGS> return ((((((((((((((("User [user_Id=" + (user_Id)) + ", user_Username=") + (user_Username)) + ", user_Password=") + (user_Password)) + ", user_Email=") + (user_Email)) + ", google_Id=") + (google_Id)) + ", google_Username=") + (google_Username)) + ", user_UserType=") + (user_UserType)) + ", user_BankBalance=") + (user_BankBalance)) + "]"; <BUGE> } 
<BUGS> @se.sjtu.formfoss.controller.GetMapping(path = "/add") <BUGE> @se.sjtu.formfoss.controller.ResponseBody public java.lang.String userAdd(@se.sjtu.formfoss.controller.RequestParam java.lang.String userName, @se.sjtu.formfoss.controller.RequestParam java.lang.String userPassword, @se.sjtu.formfoss.controller.RequestParam java.lang.String userEmail, @se.sjtu.formfoss.controller.RequestParam(required = false) java.lang.String userPhone) { se.sjtu.formfoss.model.UserEntity newUser = new se.sjtu.formfoss.model.UserEntity(); newUser.setUserName(userName); newUser.setUserPassword(userPassword); newUser.setUserEmail(userEmail); <BUGS> java.sql.Timestamp d = new java.sql.Timestamp(java.lang.System.currentTimeMillis()); newUser.setCreateTime(d); <BUGE> if (userPhone != null) { newUser.setUserPhone(userPhone); } userRepository.save(newUser); return "{\"message\": \"success\"}"; } 
<BUGS> public entities.Tile remove(entities.AbstractLevel level) { <BUGE> entities.Tile oldTile = this.tile; this.selected = false; if ((this.jIndex) == 0) { this.tile = new entities.Tile(5, 5); }else { <BUGS> this.tile = parentBoard.getSquare(iIndex, ((jIndex) - 1)).remove(level); <BUGE> } return oldTile; } 
@java.lang.Override public void run() { if ((LoginActivity.user_ref) != null) { academy_selected = LoginActivity.user_ref.getInstitution(); fillSpinnerData(R.id.spinner_faculty, (("Academy/" + (academy_selected)) + "/Faculty"), com.example.academyreviewandrating.NavigationFregmentRankAndReview.spinnerEnum.FACULTY); <BUGS> NavigationStartActivity.mPB.setVisibility(View.INVISIBLE); <BUGE> }else { android.widget.Toast.makeText(getActivity(), "Timeout has accured", Toast.LENGTH_LONG).show(); } } 
@java.lang.Override public void run() { if (((org.bukkit.Bukkit.getOnlinePlayers().size()) != 0) && (isRecording)) { <BUGS> synchronized(this) { <BUGE> if (changed) { try { <BUGS> plugin.getFileManager().appendFrame(currentFrame); <BUGE> } catch (java.io.IOException e) { } } plugin.addTick(); currentFrame = new de.sebpas.replay.filesystem.Frame(plugin.getHandledTicks()); changed = false; } } } 
public static void DepthFirstSearch_Visit(graph.CapGraph theGraph, java.lang.Integer vertex, java.util.HashSet<java.lang.Integer> visited, java.util.Stack<java.lang.Integer> finished) { visited.add(vertex); for (java.lang.Integer neighbor : theGraph.getGraph().get(vertex)) { if (!(visited.contains(neighbor))) { <BUGS> graph.DepthFirstSearch.DepthFirstSearch_Visit(theGraph, vertex, visited, finished); <BUGE> } } finished.push(vertex); } 
public boolean outsideBoard(int boardRows) { for (tetris.Point loc : tetris.Grids.allPointsOf(this)) { <BUGS> if ((piece.cellAt(loc)) != (EMPTY)) { if ((asAbs(loc).row) >= boardRows) { return true; } <BUGE> } } <BUGS> return false; <BUGE> } 
@java.lang.Override protected void execute(org.eclipse.core.resources.IMarker selectedMarker) { try { org.sonarlint.eclipse.ui.internal.views.IssueLocationsView view = ((org.sonarlint.eclipse.ui.internal.views.IssueLocationsView) (org.eclipse.ui.PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage().showView(IssueLocationsView.ID))); <BUGS> view.setInput(selectedMarker); <BUGE> } catch (java.lang.Exception e) { org.sonarlint.eclipse.core.SonarLintLogger.get().error("Unable to open Issue Location View", e); } } 
private static void put(java.lang.Class<? extends net.tridentsdk.server.packet.Packet> cls, net.tridentsdk.server.net.NetClient.NetState state, net.tridentsdk.server.packet.Packet.Bound bound, int id) { int identifier = net.tridentsdk.server.packet.PacketRegistry.shift(state, bound, id); <BUGS> net.tridentsdk.server.packet.PacketRegistry.PACKETS.put(cls, identifier); net.tridentsdk.server.packet.PacketRegistry.PACKET_IDS.put(identifier, cls); <BUGE> if (bound == (net.tridentsdk.server.packet.Packet.Bound.SERVER)) { <BUGS> <BUGE> net.tridentsdk.server.packet.PacketRegistry.CTORS.put(cls, com.esotericsoftware.reflectasm.ConstructorAccess.get(cls)); } } 
<BUGS> private double average(java.util.Date[] dates, double[] returns, int skip, java.util.function.Predicate<java.util.Date> filter) { <BUGE> double sum = 0; int count = 0; <BUGS> for (int ii = skip; ii < (returns.length); ii++) { if (!(filter.test(dates[ii]))) <BUGE> continue;  sum += returns[ii]; count++; } return sum / count; } 
@com.facebook.react.uimanager.annotations.ReactProp(name = "polylines") public void setPolylines(com.baidu.mapapi.map.MapView mapView, com.facebook.react.bridge.ReadableArray options) { for (int i = 0; i < (options.size()); i++) { com.facebook.react.bridge.ReadableMap option = options.getMap(i); <BUGS> org.lovebing.reactnative.baidumap.MarkerUtil.addPolyline(mapView, option.getString("color"), option.getInt("width"), option.getInt("zIndex"), option.getArray("points")); <BUGE> } } 
@java.lang.Override public void run() { try { <BUGS> <BUGE> com.xizz.scoreoflife.util.Data.syncEvents(); <BUGS> com.xizz.scoreoflife.util.Data.syncChecks(); <BUGE> } catch (com.parse.ParseException e) { android.util.Log.e(TAG, ("Error synchronizing events: " + (e.getMessage()))); } runOnUiThread(new java.lang.Runnable() { @java.lang.Override public void run() { loadEventCheckList(); android.util.Log.d(TAG, "loaded event list after synchronization"); } }); } 
@java.lang.Override public void onConnected(final android.bluetooth.BluetoothDevice device) { mLogger.fine((("HeartRateConnectEventListener#onConnected: [" + device) + "]")); org.deviceconnect.android.deviceplugin.heartrate.data.HeartRateDevice hr = findRegisteredHeartRateDeviceByAddress(device.getAddress()); if (hr == null) { hr = registerHeartRateDevice(device); }else { hr.setConnectFlag(true); } <BUGS> mConnectedDevices.add(hr); <BUGE> if ((mHRDiscoveryListener) != null) { mHRDiscoveryListener.onConnected(device); } } 
@java.lang.Override public void gpsCallback() { if ((GlobalVariables.ALL_EVENTS_DATA.size()) > 0) { <BUGS> <BUGE> com.example.FundigoApp.Customer.RealTime.RealTimeActivity.events_sorted_by_dist_data = getSortedListByDist(); java.util.List<com.example.FundigoApp.Events.EventInfo> tempFilteredList = com.example.FundigoApp.StaticMethod.FilterMethods.filterByFilterName(GlobalVariables.CURRENT_FILTER_NAME, GlobalVariables.CURRENT_SUB_FILTER, GlobalVariables.CURRENT_DATE_FILTER, GlobalVariables.CURRENT_PRICE_FILTER, com.example.FundigoApp.Customer.RealTime.RealTimeActivity.events_sorted_by_dist_data); com.example.FundigoApp.Customer.RealTime.RealTimeActivity.events_data_filtered.clear(); com.example.FundigoApp.Customer.RealTime.RealTimeActivity.events_data_filtered.addAll(tempFilteredList); eventsGridAdapter.notifyDataSetChanged(); } turnOnGPS.setVisibility(View.GONE); } 
@net.minecraftforge.fml.common.eventhandler.SubscribeEvent public void onJoin(net.minecraftforge.fml.common.network.FMLNetworkEvent.ClientConnectedToServerEvent event) { boolean singleplayer = net.minecraft.client.Minecraft.getMinecraft().isSingleplayer(); if (!singleplayer) { java.lang.String ip = net.minecraft.client.Minecraft.getMinecraft().getCurrentServerData().serverIP; if (ip.contains(".hypixel.net")) { QuickPlay.onHypixel = true; java.lang.System.out.println("Currently on Hypixel!"); <BUGS> <BUGE> } } } 
@java.lang.Override public void save(java.lang.Object editingObject) throws java.lang.Exception { org.uengine.modeling.resource.resources.ProcessDefinition definition = ((org.uengine.modeling.resource.resources.ProcessDefinition) (editingObject)); definition.setName(getDisplayName()); separateGlobalDefinition(definition); super.save(editingObject); <BUGS> definitionFactory.removeFromCache(getPath().substring(((CodiProcessDefinitionFactory.codiProcessDefinitionFolder.length()) + 1))); <BUGE> } 
private void onConnectionChanged(android.content.Intent intent) { android.net.NetworkInfo networkInfo = intent.getParcelableExtra(WifiP2pManager.EXTRA_NETWORK_INFO); <BUGS> if (((networkInfo.isConnected()) && (!(mIsTryingToConnect))) && (!(isConnected()))) { <BUGE> android.util.Log.d(TAG, "No socket open. Trying to connect"); mIsTryingToConnect = true; mManager.requestConnectionInfo(mChannel, this); }else { this.disconnected(); } } 
public void addRoute(java.lang.Class<?> target, java.lang.reflect.Method execMethod, java.lang.String url, blade.route.HttpMethod method) { blade.route.RouteMatcher entry = new blade.route.RouteMatcher(); entry.target = target; entry.execMethod = execMethod; entry.httpMethod = method; entry.path = url; <BUGS> entry.requestURI = url; <BUGE> if (blade.Blade.debug()) { blade.route.DefaultRouteMatcher.LOGGER.debug(("Add Route：" + entry)); } routes.add(entry); } 
public void setElements(java.util.List<?> texts, boolean[] selected) { int size = (texts == null) ? 0 : texts.size(); <BUGS> setElements(texts.toArray(new java.lang.String[size]), selected); <BUGE> } 
private boolean checkConnection(java.lang.String host, int port) { try { java.net.Socket socket = new java.net.Socket(host, port); java.io.PrintWriter out = new java.io.PrintWriter(socket.getOutputStream(), true); java.io.BufferedReader in = new java.io.BufferedReader(new java.io.InputStreamReader(socket.getInputStream())); int data = in.read(); socket.close(); <BUGS> return data != 0; <BUGE> } catch (java.io.IOException e) { } return false; } 
public zeroPlayerGamePackage.PositionObject generateRandomLocation() { <BUGS> int positionX = ((int) (java.lang.Math.round((((zeroPlayerGamePackage.BoardBuilder.BOARD_WIDTH) + 1) * (java.lang.Math.random()))))); int positionY = ((int) (java.lang.Math.round((((zeroPlayerGamePackage.BoardBuilder.BOARD_HEIGHT) + 1) * (java.lang.Math.random()))))); <BUGE> zeroPlayerGamePackage.PositionObject position = new zeroPlayerGamePackage.PositionObject(positionX, positionY); return position; } 
private void cloneMatrix(final int[][] matrix2) { <BUGS> int[][] matrix = new int[matrix2.length][matrix2.length]; <BUGE> for (int i = 0; i < (matrix2.length); i++) { for (int j = 0; j < (matrix2.length); j++) { matrix[i][j] = matrix2[i][j]; } } } 
@org.junit.Test public void testShouldNotGetNestedGroups() { <BUGS> com.dtolabs.rundeck.jetty.jaas.JettyCachingLdapLoginModule module = getJettyCachingLdapLoginModule(); <BUGE> try { org.eclipse.jetty.plus.jaas.spi.UserInfo userInfo = module.getUserInfo(user1); org.junit.Assert.assertThat(userInfo.getUserName(), org.hamcrest.CoreMatchers.is(user1)); java.util.List<java.lang.String> actualRoles = userInfo.getRoleNames(); java.util.List<java.lang.String> expectedRoles = java.util.Arrays.asList(role1, role2); org.junit.Assert.assertThat(actualRoles, org.hamcrest.CoreMatchers.is(expectedRoles)); } catch (java.lang.Exception e) { e.printStackTrace(); } } 
private void enqueueDownload() { <BUGS> java.lang.String url = Data.sampleUrls[1]; <BUGE> java.lang.String filePath = (com.tonyodev.fetchdemo.Data.getSaveDir()) + "/fragments/smallFile.txt"; com.tonyodev.fetch.request.Request request = new com.tonyodev.fetch.request.Request(url, filePath); downloadId = fetch.enqueue(request); if ((downloadId) == (-1)) { android.widget.Toast.makeText(this, R.string.enqueue_error, Toast.LENGTH_SHORT).show(); } progressFragment1.setDownloadId(downloadId); progressFragment2.setDownloadId(downloadId); } 
private int dateByWeekday(java.lang.String date, java.lang.String weekday) { boolean nextDate = false; <BUGS> int min = dateToMin(date, "00:00", nextDate); <BUGE> do { <BUGS> <BUGE> nextDate = true; while (!(bots.CalendarBot.CalDateFormat.minToWeekday(min, firstYear).equals(weekday))) { min++; } } while (min < (bots.CalendarBot.CurrentDate.getDateInMin(firstYear)) ); return min + (8 * 60); } 
@java.lang.Override protected T convertValue(java.lang.String[] value) throws org.apache.wicket.util.convert.ConversionException { this.convertValue = true; if ((value != null) && ((value.length) > 0)) { this.convertedInput = this.provider.toChoice(value[0]); return this.convertedInput; }else { <BUGS> <BUGE> return null; } } 
public static void showMainFrame() { javax.swing.SwingUtilities.invokeLater(() -> { <BUGS> if ((games.strategy.engine.framework.startup.ui.MainFrame.getInstance()) != null) { games.strategy.engine.framework.startup.ui.MainFrame.clearInstance(); } <BUGE> final games.strategy.engine.framework.startup.ui.MainFrame frame = new games.strategy.engine.framework.startup.ui.MainFrame(); frame.requestFocus(); frame.toFront(); frame.setVisible(true); }); } 
public void connectSimModel(final thesis.core.SimModel simModel, final thesis.gui.mainwindow.actions.Actions actions) { renderWorld = new thesis.core.world.RenderSimState(simModel); this.addMouseListener(mouseState); this.addMouseMotionListener(mouseState); renderWorld.setBounds(0, 0, getWidth(), getHeight()); for (thesis.gui.mainwindow.actions.renderopts.RenderOptAction action : actions.getRenderOptions()) { action.connectToModel(renderWorld.getRenderOptions()); } <BUGS> repaint(); <BUGE> } 
protected java.util.List<java.lang.String> createPackageList(java.util.List<java.lang.String> pkgs, java.lang.String code, java.lang.String delim) { java.util.List<java.lang.String> pkg = new java.util.ArrayList<java.lang.String>(pkgs); if (code != null) { java.lang.String[] codes = code.split(delim); for (java.lang.String c : codes) { <BUGS> pkg.add(c); <BUGE> } } return pkg; } 
@java.lang.Override public void onClick(android.view.View v) { if (!(flipped)) { flipped = true; com.yiyangzhu.yydictionary.Word word = com.yiyangzhu.yydictionary.YoudaoDictionary.get(show.getText().toString()); <BUGS> show.setText(word.toString()); show.setGravity(Gravity.NO_GRAVITY); <BUGE> } } 
protected boolean updateVideoSize(int width, int height) { matrixManager.setIntrinsicVideoSize(width, height); updateMatrixOnLayout(); videoSize.x = width; videoSize.y = height; <BUGS> return !((width == 0) || (height == 0)); <BUGE> } 
public java.lang.Boolean checkActive(int x) { <BUGS> <BUGE> if (((this.getX()) >= (x - 60)) && ((this.getX()) <= (x + 120))) { setInActive(); return true; } return false; } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_splash); textView = ((android.widget.TextView) (findViewById(R.id.textView))); int permission = android.support.v4.app.ActivityCompat.checkSelfPermission(this, Manifest.permission.WRITE_EXTERNAL_STORAGE); if (permission != (android.content.pm.PackageManager.PERMISSION_GRANTED)) { android.support.v4.app.ActivityCompat.requestPermissions(this, com.example.qmma.featuredetection.SplashActivity.PERMISSIONS_STORAGE, com.example.qmma.featuredetection.SplashActivity.REQUEST_EXTERNAL_STORAGE); <BUGS> <BUGE> } <BUGS> com.example.qmma.featuredetection.SplashActivity.Loader loader = new com.example.qmma.featuredetection.SplashActivity.Loader(); loader.execute(this); <BUGE> } 
public websays.accounting.CommissionItem createCommissionItem(websays.accounting.BilledItem bi) { double fee = websays.core.utils.CurrencyUtils.toEuros(bi.getFee(), bi.getCurrency()); <BUGS> int monthsFromStartOfContract = websays.core.utils.JodaUtils.monthsDifference(bi.period.contractStart, bi.period.periodEnd); <BUGE> fee = computeCommission(fee, monthsFromStartOfContract); return new websays.accounting.CommissionItem(commissionnee, fee, this, bi); } 
public void addMachine(de.prob2.ui.project.Machine machine) { java.util.List<de.prob2.ui.project.Machine> machinesList = this.getMachines(); machinesList.add(machine); <BUGS> this.set(new de.prob2.ui.project.Project(this.getName(), this.getDescription(), machinesList, this.getPreferences(), this.getRunconfigurations(), this.getLocation())); <BUGE> } 
public com.tut.beans.Utilisateur connecterUtilisateur(javax.servlet.http.HttpServletRequest request) { java.lang.String email = getValeurChamp(request, com.tut.forms.ConnexionForm.CHAMP_IDF); java.lang.String motDePasse = getValeurChamp(request, com.tut.forms.ConnexionForm.CHAMP_PASS); com.tut.beans.Utilisateur utilisateur = new com.tut.beans.Utilisateur(); <BUGS> traiterEmail(email, utilisateur); <BUGE> traiterMotDePasse(motDePasse, utilisateur); if (erreurs.isEmpty()) { resultat = "Succès de la connexion."; }else { resultat = "Echec de la connexion"; } return utilisateur; } 
@java.lang.Override public int getTotalProtection() { int totalProtection = getProtection(); if (((getAnchorPoints().get("body")) != null) && ((getAnchorPoints().get("body").getClass()) == (game.Armor.class))) { game.Armor armor = ((game.Armor) (getAnchorPoints().get("body"))); totalProtection += armor.getActualProtection(); } return totalProtection; <BUGS> return 0 > ((origin) / (master)); <BUGE> } 
@java.lang.Override public void uploadProgress(com.lzy.okgo.model.Progress innerProgress) { <BUGS> okhttp3.Call rawCall = request.getRawCall(); <BUGE> if (rawCall.isCanceled()) return ;  if ((progress.status) != (com.lzy.okgo.model.Progress.LOADING)) { rawCall.cancel(); return ; } progress.from(innerProgress); postLoading(progress); } 
@org.junit.Test public void testEquals() throws java.lang.Exception { model.data.CombinedDataTable comb = new model.data.CombinedDataTable(dataTables.get(1), dataTables.get(0), dataTables.get(2)); <BUGS> model.data.CombinedDataTable copy = comb.copy(); <BUGE> assertTrue(comb.equals(copy)); } 
private void updateAdd() { for (de.kuschku.libquassel.message.Message message : unfiltered) { <BUGS> if (!(filterItem(message))) { <BUGE> java.lang.String simpleName = getClass().getSimpleName(); android.util.Log.e(simpleName, ("Unfiltered: " + message)); filtered.add(message); } } } 
protected java.io.File startCameraVideo() { android.content.Intent intent = new android.content.Intent(android.provider.MediaStore.ACTION_VIDEO_CAPTURE); android.net.Uri toAdd = org.dvaletin.apps.nabludatel.ABSNabludatelActivity.getOutputMediaFileUri(Consts.MEDIA_TYPE_VIDEO); videoFileUri.add(toAdd); intent.putExtra(MediaStore.EXTRA_OUTPUT, toAdd); startActivityForResult(intent, Consts.CAPTURE_VIDEO_ACTIVITY_REQUEST_CODE); <BUGS> return new java.io.File(pictureFileUri.get(((pictureFileUri.size()) - 1)).getPath()); <BUGE> } 
@org.junit.Test public void shouldReturnNullOnGettingEmptyEventsListToSubscribe() throws java.io.IOException { org.mockito.Mockito.doReturn(com.google.common.collect.Lists.newArrayList(repo)).when(active).resolve(org.mockito.Matchers.any(com.google.common.base.Predicate.class)); org.mockito.Mockito.when(repo.hasAdminAccess()).thenReturn(true); <BUGS> org.junit.Assert.assertThat("empty events list not allowed to be registered", org.jenkinsci.plugins.github.webhook.WebhookManager.forHookUrl(org.jenkinsci.plugins.github.webhook.WebhookManagerTest.HOOK_ENDPOINT).createHookSubscribedTo(java.util.Collections.<org.kohsuke.github.GHEvent>emptyList()).apply(active), org.hamcrest.Matchers.nullValue()); <BUGE> } 
public void run() { int timeLeft = ((int) ((money) * 4)); int seconds = timeLeft * 60; for (int i = seconds; i > 0; i--) { try { java.lang.Thread.sleep(1000); } catch (java.lang.InterruptedException ex) { } } java.lang.System.out.println(((("\nCustomer " + (name)) + " has finished their service at ") + (getTime()))); <BUGS> <BUGE> } 
public static boolean isUnique(final java.lang.String string) { java.util.Set<java.lang.Character> set = new java.util.HashSet<>(); for (int i = 0; i < (string.length()); i++) { <BUGS> int previousSize = set.size(); <BUGE> set.add(string.charAt(i)); <BUGS> if ((set.size()) == previousSize) { return false; } <BUGE> } <BUGS> return true; <BUGE> } 
@net.minecraftforge.fml.common.eventhandler.SubscribeEvent public static void playerSettings(com.feed_the_beast.ftbl.api.events.player.ForgePlayerConfigEvent event) { <BUGS> com.latmod.modularpipes.data.ModularPipesPlayerData data = ((com.latmod.modularpipes.data.ModularPipesPlayerData) (event.getPlayer().getData(ModularPipesPlayerData.ID))); if (data != null) { event.getConfig().setGroupName(ModularPipes.MOD_ID, new net.minecraft.util.text.TextComponentString(ModularPipes.MOD_NAME)); event.getConfig().add(ModularPipes.MOD_ID, "dev_mode", data.devMode).setNameLangKey("modularpipes.config.general.dev_mode"); } <BUGE> } 
@java.lang.Override public org.apache.hadoop.hbase.Cell next() throws java.io.IOException { if ((type) == (MemStoreScanType.UNDEFINED)) type = MemStoreScanType.USER_SCAN_FORWARD;  assert (type) != (MemStoreScanType.USER_SCAN_BACKWARD); for (org.apache.hadoop.hbase.Cell currentCell = forwardHeap.next(); currentCell != null; currentCell = forwardHeap.next()) { if ((currentCell.getSequenceId()) > (readPoint)) continue;  if ((type) == (MemStoreScanType.COMPACT_FORWARD)) { } <BUGS> <BUGE> } return null; } 
@java.lang.Override public org.apache.metron.common.configuration.extensions.ParserExtensionConfig findOneParserExtension(java.lang.String name) throws org.apache.metron.rest.RestException { org.apache.metron.common.configuration.extensions.ParserExtensionConfig parserExtensionConfig; try { parserExtensionConfig = org.apache.metron.common.configuration.ConfigurationsUtils.readParserExtensionConfigFromZookeeper(name, client); } catch (org.apache.zookeeper.KeeperException e) { <BUGS> org.apache.metron.rest.service.impl.ExtensionServiceImpl.LOG.error("No Node reading ParserExtensionConfig from Zookeeper", e); <BUGE> return null; } catch (java.lang.Exception e) { org.apache.metron.rest.service.impl.ExtensionServiceImpl.LOG.error("Error reading ParserExtensionConfig from Zookeeper", e); throw new org.apache.metron.rest.RestException(e); } return parserExtensionConfig; } 
@java.lang.Override protected void onPostExecuteSuccess(gcum.gcumfisher.connection.Server.GetListResult photos) { if (photos != null) { final java.util.List<gcum.gcumfisher.connection.ServerPhoto> list = photos.getPhotos(); showPhotos(list); <BUGS> latest = list.get(((list.size()) - 1)).getId(); <BUGE> ((android.widget.Button) (findViewById(R.id.more))).setText(getResources().getString(R.string.more_nb_after, photos.getNbAfter())); } } 
<BUGS> @com.google.common.annotations.VisibleForTesting void checkForSplitRead(final org.broadinstitute.hellbender.utils.read.GATKRead read, final java.util.List<org.broadinstitute.hellbender.tools.spark.sv.BreakpointEvidence> evidenceList) { <BUGE> final java.util.List<htsjdk.samtools.CigarElement> cigarElements = read.getCigar().getCigarElements(); if (org.broadinstitute.hellbender.tools.spark.sv.ReadClassifier.hasInitialSoftClip(cigarElements, read)) { evidenceList.add(new org.broadinstitute.hellbender.tools.spark.sv.BreakpointEvidence.SplitRead(read, readMetadata, true)); } if (org.broadinstitute.hellbender.tools.spark.sv.ReadClassifier.hasFinalSoftClip(cigarElements, read)) { evidenceList.add(new org.broadinstitute.hellbender.tools.spark.sv.BreakpointEvidence.SplitRead(read, readMetadata, false)); } checkBigIndel(cigarElements, read, evidenceList); } 
@java.lang.Override public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup parent, android.os.Bundle savedInstanceState) { <BUGS> <BUGE> android.view.View v = inflater.inflate(R.layout.fragment_discover, parent, false); mMapView = ((com.google.android.gms.maps.MapView) (v.findViewById(R.id.mapview))); mMapView.onCreate(savedInstanceState); mGoogleMap = mMapView.getMap(); mGoogleMap.getUiSettings().setMyLocationButtonEnabled(false); mGoogleMap.setMyLocationEnabled(true); return v; } 
private void updateCVRUnderAudit(final int the_index) { int index = the_index; <BUGS> do { <BUGE> if ((my_submitted_audit_cvrs.get(index)) == (java.lang.Long.MIN_VALUE)) { my_cvr_under_audit = index; break; } index = index + 1; <BUGS> } while (index < (my_submitted_audit_cvrs.size()) ); <BUGE> } 
@org.junit.Before public void setup() throws java.lang.Exception { this.method = org.springframework.messaging.handler.annotation.support.MessageMethodArgumentResolverTests.class.getDeclaredMethod("handle", org.springframework.messaging.Message.class, org.springframework.messaging.Message.class, org.springframework.messaging.Message.class, org.springframework.messaging.Message.class, org.springframework.messaging.support.ErrorMessage.class); <BUGS> this.converter = org.mockito.Mockito.mock(org.springframework.messaging.converter.MessageConverter.class); <BUGE> this.resolver = new org.springframework.messaging.handler.annotation.support.MessageMethodArgumentResolver(this.converter); } 
public java.lang.Object remove(int index) { ensureIndex(index); java.lang.Object temp = elementData[index]; <BUGS> java.lang.System.arraycopy(elementData, (index + 1), elementData, index, ((size) - index)); <BUGE> (size)--; return temp; } 
public int getSbOperationRowNum(java.lang.String operator, java.lang.String opration, int startRow, int endRow, java.util.List<java.util.List<java.lang.String>> data) { int oprationRowNum = 0; for (int x = startRow; x <= endRow; x++) { if ((data.get(x).get(4).equalsIgnoreCase(operator)) && (data.get(x).get(5).equalsIgnoreCase(opration))) { <BUGS> return oprationRowNum = x; <BUGE> } } return oprationRowNum; } 
public void setDisplayName(final org.bukkit.entity.Player player) { final java.lang.String prefix = searchNodes(player, "prefix"); final java.lang.String suffix = (searchNodes(player, "suffix")) + "§f"; <BUGS> player.setDisplayName(((prefix + (org.bukkit.ChatColor.stripColor(player.getDisplayName()))) + suffix)); <BUGE> players.put(player.getName(), player.getWorld().getUID()); } 
private int getStartSelectItem() { int currentItem = (java.lang.Integer.MAX_VALUE) / 2; if ((currentItem % (getRealCount())) == 0) { return currentItem; } <BUGS> while ((currentItem % (getRealCount())) == 0) { <BUGE> currentItem++; } return currentItem; } 
@com.modeliosoft.modelio.javadesigner.annotations.objid(value = "22963c8e-9140-49f2-beb7-3b2458a06c51") private java.util.List<java.lang.Integer> bootstrapAttr(java.util.List<java.lang.Integer> attr) { java.util.ArrayList<java.lang.Integer> rand = new java.util.ArrayList<java.lang.Integer>(attrN); <BUGS> for (int i = 0; i < (attrN); i++) { <BUGE> rand.add(i); } java.util.Collections.shuffle(rand); attr = rand.subList(0, attrSampleN); return attr; } 
@java.lang.Override public void onBackPressed() { if (drawer.isDrawerOpen(GravityCompat.START)) { drawer.closeDrawer(GravityCompat.START); }else <BUGS> if ((pageHistory.size()) > 0) { <BUGE> saveToHistory = false; viewPager.setCurrentItem(pageHistory.pop().intValue()); saveToHistory = true; <BUGS> }else if (pageHistory.empty()) { super.onBackPressed(); }  <BUGE>  } 
private void init(com.chariotsolutions.nfc.plugin.CallbackContext callbackContext) { android.util.Log.d(com.chariotsolutions.nfc.plugin.NfcPlugin.TAG, ("Enabling plugin " + (getIntent()))); startNfc(); if (inReaderMode) { <BUGS> if (savedTag) { <BUGE> handleTag(); } }else if (!(recycledIntent())) { parseMessage(); }  callbackContext.success(); } 
private static boolean isHexadecimal(char c) { <BUGS> return (((c >= '0') && (c >= '9')) || ((c >= 'A') && (c >= 'F'))) || ((c >= 'a') && (c >= 'f')); <BUGE> } 
public void switchTurn() { turn = ((turn) + 1) % (getNumberOfPlayers()); <BUGS> if (!(getCurrentPlayer().isInJail())) { gui.enablePlayerTurn(turn); <BUGE> gui.setBuyHouseEnabled(getCurrentPlayer().canBuyHouse()); gui.setTradeEnabled(turn, true); <BUGS> }else { gui.setGetOutOfJailEnabled(false); <BUGE> } <BUGS> <BUGE> } 
public void updateFixedPrincipalAmount(final java.math.MathContext mc, final int periodNumber, final org.apache.fineract.organisation.monetary.domain.Money outstandingAmount) { <BUGS> final java.lang.Integer numberOfPrincipalPaymentPeriods = org.apache.fineract.portfolio.loanaccount.loanschedule.domain.LoanApplicationTerms.calculateNumberOfRemainingPrincipalPaymentPeriods(this.actualNumberOfRepayments, this.getRecurringMoratoriumOnPrincipalPeriods(), this.getPrincipalGrace(), periodNumber); <BUGE> org.apache.fineract.organisation.monetary.domain.Money principal = outstandingAmount.dividedBy(((numberOfPrincipalPaymentPeriods - periodNumber) + 1), mc.getRoundingMode()); this.fixedPrincipalAmount = principal.getAmount(); } 
public void addSelectButton(javax.swing.JPanel panel) { java.awt.GridBagConstraints c = ip.setGrids(2, 0); selectButton = ip.createButton("SELECT", context.healthinformatics.GUI.InputPageComponents.DIMESIONWIDTH, context.healthinformatics.GUI.InputPageComponents.DIMESIONHEIGHT); <BUGS> selectButton.addActionListener(ip); <BUGE> c.insets = new java.awt.Insets(context.healthinformatics.GUI.InputPageComponents.BUTTONINSETS, context.healthinformatics.GUI.InputPageComponents.BUTTONINSETS, context.healthinformatics.GUI.InputPageComponents.BUTTONINSETS, context.healthinformatics.GUI.InputPageComponents.BUTTONINSETS); panel.add(selectButton, c); } 
public void setUnit(unitCalc.Unit unit) { this.value = this.value.multiply(unit.baseRelation); <BUGS> this.unit = unit.measure.baseUnit; <BUGE> this.measure = unit.measure; this.siBase = new int[7]; java.lang.System.arraycopy(unit.measure.siBase, 0, this.siBase, 0, 7); if (this.isConstant) { this.id = "var"; this.name = null; } } 
<BUGS> private void prepareUV(com.graphicsengine.spritemesh.PropertyMapper mapper, int spriteCount) { <BUGE> for (int i = 0; i < spriteCount; i++) { if ((getTexture(Texture2D.TEXTURE_0).type) == (com.nucleus.texturing.TextureType.TiledTexture2D)) { <BUGS> com.nucleus.geometry.MeshBuilder.prepareTiledUV(mapper, attributeData, i); <BUGE> }else if ((getTexture(Texture2D.TEXTURE_0).type) == (com.nucleus.texturing.TextureType.UVTexture2D)) { }else { throw new java.lang.IllegalArgumentException(); }  } } 
public static void executeEventCommands(com.github.nthportal.uhc.core.Context context, java.lang.String event, java.util.List<java.util.function.Function<java.lang.String, java.lang.String>> replaceFunctions) { lombok.val commands = context.plugin().getConfig().getStringList(event); <BUGS> for (lombok.val command : commands) { <BUGE> if (command.startsWith("/")) { command = command.substring(1); } for (lombok.val function : replaceFunctions) { command = function.apply(command); } com.github.nthportal.uhc.util.CommandUtil.executeCommand(context, command); } } 
@java.lang.Override public boolean equals(java.lang.Object o) { if ((this) == o) { return true; } if ((o == null) || ((getClass()) != (o.getClass()))) { return false; } io.druid.java.util.common.granularity.PeriodSegmentGranularity that = ((io.druid.java.util.common.granularity.PeriodSegmentGranularity) (o)); <BUGS> if ((granularityType) != (that.granularityType)) { return false; } <BUGE> return periodGranularity.equals(that.periodGranularity); } 
public void toggleComplete(int id) { if (id != 0) { com.anoopkini.dotodo.web.models.TaskObject newTask = taskObjectDao.getTaskById(id); <BUGS> if (newTask.isComplete()) { newTask.setComplete(false); newTask.setCompletedTS(null); }else { newTask.setComplete(true); newTask.setCompletedTS(new java.util.Date()); <BUGE> } <BUGS> newTask.setModifiedTS(new java.util.Date()); taskObjectDao.update(newTask); <BUGE> } } 
public void init() { <BUGS> org.mycat.netty.NettyServer.logger.debug("nettyServer init"); <BUGE> try { org.mycat.netty.NettyServer.logger.info("{} server init ddal-engine from {}", getServerName(), SysProperties.ENGINE_CONFIG_LOCATION); java.util.Properties prop = new java.util.Properties(); org.mycat.netty.NettyServer.logger.info("{} server ddal-engine inited.", getServerName()); } catch (java.lang.Exception e) { org.mycat.netty.NettyServer.logger.error("Exception happen when init ddal-engine ", e); if (e instanceof java.lang.RuntimeException) { throw ((java.lang.RuntimeException) (e)); } throw new java.lang.RuntimeException(e); } } 
@com.google.devtools.build.lib.concurrent.ThreadSafety.ThreadSafe public static com.google.devtools.build.skyframe.SkyKey key(com.google.devtools.build.lib.analysis.config.BuildOptions buildOptions, java.lang.Class<? extends com.google.devtools.build.lib.analysis.config.BuildConfiguration.Fragment> fragmentType, com.google.devtools.build.lib.packages.RuleClassProvider ruleClassProvider) { <BUGS> com.google.devtools.build.lib.analysis.config.BuildOptions optionsKey = (buildOptions.get(BuildConfiguration.Options.class).useDynamicConfigurations) ? buildOptions.trim(com.google.devtools.build.lib.analysis.config.BuildConfiguration.getOptionsClasses(com.google.common.collect.ImmutableList.<java.lang.Class<? extends com.google.devtools.build.lib.analysis.config.BuildConfiguration.Fragment>>of(fragmentType), ruleClassProvider)) : buildOptions; <BUGE> return new com.google.devtools.build.skyframe.SkyKey(SkyFunctions.CONFIGURATION_FRAGMENT, new com.google.devtools.build.lib.skyframe.ConfigurationFragmentValue.ConfigurationFragmentKey(optionsKey, fragmentType)); } 
@java.lang.Override public boolean inferBound(wyopcl.translator.bound.Bounds bnd) { bnd.isChanged = false; max_x = bnd.getUpper(x); min_x = bnd.getLower(x); max_y = bnd.getUpper(y); min_y = bnd.getLower(y); if ((min_x) != (min_y)) { <BUGS> bnd.getDomain(x).setLowerBound(min_y); <BUGE> } if ((max_x) != (max_y)) { <BUGS> bnd.getDomain(x).setUpperBound(max_y); <BUGE> } return bnd.isChanged; } 
@java.lang.Override public void onClick(android.view.View view) { if (!(mInteractivePlayerView.isPlaying())) { <BUGS> playAudio(audioUrl); <BUGE> mInteractivePlayerView.start(); fab.setImageResource(R.drawable.ic_action_pause); }else { mInteractivePlayerView.stop(); fab.setImageResource(R.drawable.ic_action_play); } } 
@java.lang.Override public boolean overlap(dw317.hotel.business.interfaces.Reservation other) { <BUGS> if ((aRoom.getNumber()) == (other.getRoom().getNumber())) { if ((checkIn.isAfter(other.getCheckInDate())) && (checkOut.isBefore(other.getCheckInDate()))) return false;  if (checkIn.isAfter(other.getCheckOutDate())) return false;  } return true; <BUGE> } 
public static java.util.ArrayList<java.lang.String> eightDirections() { java.util.ArrayList<java.lang.String> directions = new java.util.ArrayList<java.lang.String>(); directions.add("N"); directions.add("NE"); directions.add("E"); directions.add("SE"); directions.add("S"); directions.add("SW"); directions.add("W"); directions.add("NW"); <BUGS> java.lang.System.out.println(directions); <BUGE> return directions; } 
private static hu.oe.nik.szfmv17t.environment.utils.Vector2d[] getCorners(hu.oe.nik.szfmv17t.environment.utils.Position collidableObjectPosition) { double rot = collidableObjectPosition.getAxisAngle(); hu.oe.nik.szfmv17t.environment.utils.Vector2d center = collidableObjectPosition.getCenter(); hu.oe.nik.szfmv17t.environment.utils.Vector2d[] worldCoords = hu.oe.nik.szfmv17t.environment.utils.CollisionDetector.generateWorldCoords(collidableObjectPosition); <BUGS> hu.oe.nik.szfmv17t.environment.utils.Vector2d[] corners = hu.oe.nik.szfmv17t.environment.utils.CollisionDetector.rotateWorldCoords(rot, center, worldCoords); return corners; <BUGE> } 
@java.lang.Override public void onClick(android.view.View view) { android.util.Log.d("click listener", "working!"); int itemPosition = getLayoutPosition(); android.content.Intent intent = new android.content.Intent(mContext, com.epicodus.a4u2poo.DetailActivity.class); <BUGS> intent.putExtra("position", (itemPosition + "")); <BUGE> intent.putExtra("restrooms", org.parceler.Parcels.wrap(mRestrooms)); mContext.startActivity(intent); } 
<BUGS> public static java.sql.ResultSet getFromDataBase(java.lang.String query) { <BUGE> java.sql.Connection con = com.teamSuperior.core.connection.DBConnect.connect(com.teamSuperior.core.connection.DBConnect.url, com.teamSuperior.core.connection.DBConnect.username, com.teamSuperior.core.connection.DBConnect.password); java.sql.ResultSet rs = null; try { java.sql.Statement statement = con.createStatement(); rs = statement.executeQuery(query); con.close(); } catch (java.sql.SQLException ex) { java.lang.System.out.println(ex.getMessage()); com.teamSuperior.guiApp.GUI.AlertBox.display("Connection Error", ex.getMessage()); } return rs; } 
public final int readCharacter(final char... allowed) throws java.io.IOException { char c; java.util.Arrays.sort(allowed); <BUGS> while ((java.util.Arrays.binarySearch(allowed, (c = ((char) (readCharater()))))) < 0) { <BUGE> } return c; } 
public int getNextEmptyPetIndex() { petLock.lock(); try { <BUGS> for (int i = 0; i < (pets.length); i++) { <BUGE> if ((pets[i]) == null) { return i; } } return 3; } finally { petLock.unlock(); } } 
<BUGS> private int depth(org.pg4200.datastructure.map.tree.BinaryTreeMap<K, V>.TreeNode node) { <BUGE> int leftDepth = 0; int rightDepth = 0; if ((node.left) != null) { leftDepth = depth(node.left); } if ((node.right) != null) { rightDepth = depth(node.right); } return 1 + (java.lang.Math.max(leftDepth, rightDepth)); } 
@java.lang.Override public void onClick(android.view.View v) { calculation(); currentAction = v.getContentDescription().toString(); <BUGS> expressionField.setText(((decimalFormat.format(valueOne)) + (v.getContentDescription().toString()))); <BUGE> resultField.setText(null); } 
@java.lang.Override public void onItemClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) { <BUGS> com.historicar.app.bean.Carro carro = carros.get(position); <BUGE> android.content.Intent myIntent = new android.content.Intent(ctx, com.historicar.app.activity.ResultActivity.class); <BUGS> myIntent.putExtra(Constants.PLACA_KEY, carro.getPlaca().replaceAll(" - ", "")); <BUGE> startActivity(myIntent); } 
@java.lang.Override public int getSpanSize(int position) { <BUGS> if (isLoadMore(position)) { if ((mLoadState) == (LoadMoreView.LoadState.ERROR)) { mLoadState = LoadMoreView.LoadState.IDLE; } } <BUGE> if (((isHeader(position)) || (isFooter(position))) || (isLoadMore(position))) { return gridLayoutManager.getSpanCount(); } if (spanSizeLookup != null) { return spanSizeLookup.getSpanSize(position); } return 1; } 
public static java.lang.Iterable<?> getIterable(pcgen.cdom.enumeration.CharID id, java.lang.String... keys) { java.lang.String k1 = keys[0]; <BUGS> java.lang.String k2 = ((keys.length) == 1) ? keys[1] : ""; <BUGE> pcgen.output.base.ModelFactory modelFactory = pcgen.output.publish.OutputDB.outModels.get(k1, k2); if (modelFactory == null) { return null; } return modelFactory.generate(id); } 
@java.lang.Override protected void execClickAction() { org.eclipse.scout.demo.wrappedform.client.ui.forms.AbstractDetachableForm form = createFormCopy(); form.setDetached(true); form.setDisplayParent(org.eclipse.scout.demo.wrappedform.client.ClientSession.get().getDesktop()); form.setDisplayHint(IForm.DISPLAY_HINT_POPUP_WINDOW); form.setAskIfNeedSave(false); form.startPageForm(); <BUGS> form.waitFor(); <BUGE> } 
@org.junit.Test public void shouldRegisterIndexes_withIndexDefinitions() throws java.lang.Exception { final java.util.Collection<com.clicktravel.cheddar.infrastructure.persistence.document.search.configuration.IndexDefinition> indexDefinitions = java.util.Arrays.asList(new com.clicktravel.cheddar.infrastructure.persistence.document.search.configuration.IndexDefinition("stringProperty", IndexFieldType.LITERAL)); final java.lang.String namespace = com.clicktravel.common.random.Randoms.randomString(10); final java.lang.Class<? extends com.clicktravel.cheddar.infrastructure.persistence.document.search.Document> documentClass = com.clicktravel.cheddar.infrastructure.persistence.document.search.configuration.StubDocument.class; final com.clicktravel.cheddar.infrastructure.persistence.document.search.configuration.DocumentConfiguration documentConfiguration = new com.clicktravel.cheddar.infrastructure.persistence.document.search.configuration.DocumentConfiguration(documentClass, namespace); documentConfiguration.registerIndexes(indexDefinitions); <BUGS> org.junit.Assert.assertEquals(indexDefinitions, documentConfiguration.indexDefinitions()); <BUGE> } 
@java.lang.Override public void onClick(android.view.View arg0) { <BUGS> android.util.Log.i(TAG, "SD Checkbox clicked"); <BUGE> com.stemmeter.stem_meter.SensorConfig config = new com.stemmeter.stem_meter.SensorConfig((finalPosition + 1)); config.setFreq(sensorFragInterface.getSensorConfig((finalPosition + 1)).getFreq()); if (sdCheck.isChecked()) { sdCheck.setChecked(false); config.setSDLogging(false); }else { sdCheck.setChecked(true); config.setSDLogging(true); } sensorFragInterface.sensorConfigWrite(config); } 
@java.lang.Override public void onCreate(android.database.sqlite.SQLiteDatabase db) { <BUGS> db.execSQL((((((transcend.rockeeper.sqlite.DatabaseHelper.routes.createTable()) + (transcend.rockeeper.sqlite.DatabaseHelper.goals.createTable())) + (transcend.rockeeper.sqlite.DatabaseHelper.notes.createTable())) + (transcend.rockeeper.sqlite.DatabaseHelper.locations.createTable())) + (transcend.rockeeper.sqlite.DatabaseHelper.settings.createTable()))); <BUGE> } 
<BUGS> public boolean isOn() { <BUGE> boolean bRet = false; if (!(this.getStatus().equals(""))) { if ((this.getMatchRegexOn()) == 1) { bRet = this.getStatus().equals(this.getRegexStatus()); }else { bRet = !(this.getStatus().equals(this.getRegexStatus())); } } return bRet; } 
@java.lang.Override public boolean onOptionsItemSelected(android.view.MenuItem item) { boolean retval = true; switch (item.getItemId()) { case android.R.id.home : onBackPressed(); break; case R.id.change_password : changeAccountPassword(account); break; case R.id.delete_account : openAccountRemovalConfirmationDialog(account); break; default : retval = super.onOptionsItemSelected(item); <BUGS> <BUGE> } return retval; } 
private boolean calcInitTime() { boolean valid = calcTimeMoved(); if (valid) { if (!(java.lang.Double.isNaN(finalTime))) initTime = (finalTime) - (timeMoved); else <BUGS> initTime = timeMoved; <BUGE>  } if (!(java.lang.Double.isNaN(initTime))) { return true; } return valid; } 
public void run() { while (started) { if (queue.isEmpty()) continue;  try { publishData(queue.take()); } catch (java.lang.InterruptedException e) { e.printStackTrace(); } } client.stop(); <BUGS> <BUGE> queue.clear(); } 
@java.lang.Override public boolean accept(ccl.v2_1.cat.CclCodeBlock infos) { <BUGS> <BUGE> if (csy.block.FunctionBlockSystem.DEF_PATTERN.matcher(infos.getKeyword()).matches()) { (csy.block.FunctionBlockSystem.count)++; this.name = extractName(infos.getKeyword()); return true; } return false; } 
public void douAALUnregistering() { org.universAAL.hw.exporter.zigbee.ha.devices.listeners.OnOffLightListener.log.debug("Removing all instances of these devices in uAAL"); java.util.Iterator iter = onOffLigthDevices.keySet().iterator(); for (; iter.hasNext();) { org.osgi.framework.ServiceReference sref = ((org.osgi.framework.ServiceReference) (iter.next())); <BUGS> ((org.universAAL.hw.exporter.zigbee.ha.devices.OnOffLightCallee) (onOffLigthDevices.remove(sref))).unregister(); <BUGE> context.ungetService(sref); } onOffLigthDevices.clear(); } 
public mcjty.lib.tools.ItemStackList getCraftableItems() { <BUGS> mcjty.lib.tools.ItemStackList items = mcjty.lib.tools.ItemStackList.create(0); <BUGE> for (net.minecraft.util.math.BlockPos p : processorList) { net.minecraft.tileentity.TileEntity te = getWorld().getTileEntity(p); if (te instanceof mcjty.rftoolscontrol.blocks.processor.ProcessorTileEntity) { mcjty.rftoolscontrol.blocks.processor.ProcessorTileEntity processor = ((mcjty.rftoolscontrol.blocks.processor.ProcessorTileEntity) (te)); processor.getCraftableItems(items); } } return items; } 
@java.lang.Override public void onClick(android.view.View v) { android.content.Intent intent = new android.content.Intent(mContext, io.geeteshk.hyper.activity.ProjectActivity.class); <BUGS> intent.putExtra("project", mObjects[newPos]); <BUGE> intent.addFlags(Intent.FLAG_ACTIVITY_MULTIPLE_TASK); if ((Build.VERSION.SDK_INT) >= 21) { intent.addFlags(Intent.FLAG_ACTIVITY_NEW_DOCUMENT); } ((android.support.v7.app.AppCompatActivity) (mContext)).startActivityForResult(intent, 0); } 
@java.lang.Override @javax.jws.WebMethod(exclude = true) public void setState(java.net.URI nodeInstanceID, javax.xml.namespace.QName state) throws org.opentosca.instancedata.service.ReferenceNotFoundException { <BUGS> java.util.List<org.opentosca.model.instancedata.NodeInstance> nodeInstances = niDAO.getNodeInstances(null, null, null, nodeInstanceID); <BUGE> if ((nodeInstances == null) || ((nodeInstances.size()) != 1)) { java.lang.String msg = java.lang.String.format("Failed to set State of NodeInstance: '%s' - does it exist?", nodeInstanceID); org.opentosca.instancedata.service.impl.InstanceDataServiceImpl.LOG.warn(msg); throw new org.opentosca.instancedata.service.ReferenceNotFoundException(msg); } <BUGS> niDAO.setState(nodeInstances.get(0), state); <BUGE> } 
public static org.sbolstandard.core2.SBOLDocument read(java.io.BufferedInputStream in) throws java.io.IOException, org.sbolstandard.core2.SBOLValidationException { org.sbolstandard.core2.SBOLDocument doc = new org.sbolstandard.core2.SBOLDocument(); doc.setCreateDefaults(true); <BUGS> if ((org.sbolstandard.core2.GenBank.URIPrefix) == null) { <BUGE> throw new org.sbolstandard.core2.SBOLValidationException("No URI prefix has been provided."); } doc.setDefaultURIprefix(org.sbolstandard.core2.GenBank.URIPrefix); org.sbolstandard.core2.GenBank.read(doc, in); return doc; } 
public void onConnectionStateChange(android.bluetooth.BluetoothGatt gatt, int status, int newState) { java.lang.String intentAction; <BUGS> <BUGE> if (newState == (android.bluetooth.BluetoothProfile.STATE_CONNECTED)) { intentAction = com.wm.blecore.BluetoothLeService.ACTION_GATT_CONNECTED; mConnectionState = com.wm.blecore.BluetoothLeService.STATE_CONNECTED; broadcastUpdate(intentAction); mBluetoothGatt.discoverServices(); }else if (newState == (android.bluetooth.BluetoothProfile.STATE_DISCONNECTED)) { intentAction = com.wm.blecore.BluetoothLeService.ACTION_GATT_DISCONNECTED; mConnectionState = com.wm.blecore.BluetoothLeService.STATE_DISCONNECTED; broadcastUpdate(intentAction); }  } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_home); toolbar = ((android.support.v7.widget.Toolbar) (findViewById(R.id.toolbar))); homePresenter = new com.srijan.motosports.features.home.HomePresenter(this); setSupportActionBar(toolbar); <BUGS> getSupportActionBar().setTitle("Srijan Motosports"); <BUGE> setUpNavigationDrawer(); setFragment(new com.srijan.motosports.features.home.fragment.HomeFragment()); <BUGS> <BUGE> } 
public static com.github.vincent_fuchs.comprehensive_testing.model.Risk getEnum(java.lang.String risk) { com.github.vincent_fuchs.comprehensive_testing.model.Risk[] values = com.github.vincent_fuchs.comprehensive_testing.model.Risk.values(); for (com.github.vincent_fuchs.comprehensive_testing.model.Risk value : values) { <BUGS> if (risk.equals(value.getRisk())) { <BUGE> return value; } } throw new java.lang.UnsupportedOperationException(("Could not find Risk enum for " + risk)); } 
public static void main(java.lang.String[] args) throws java.net.UnknownHostException { for (int i = 0; i < 10; i++) { java.lang.System.out.println(("Free port: " + (voip.NetUtils.findFreePort()))); } java.net.InetAddress address = java.net.InetAddress.getByName("192.168.1.1"); java.lang.System.out.println(address.toString()); java.lang.System.out.println(voip.NetUtils.getIpByInetAddress(address)); java.lang.System.out.println(voip.NetUtils.getLocalIpAddress()); <BUGS> java.lang.System.out.println(CommonFields.PASSWORD.toString()); <BUGE> } 
@java.lang.Override public byte[] readBytes() throws java.sql.SQLException { java.lang.Object val = getNextAttributeValue(); if (val == null) { return null; } com.impossibl.postgres.types.CompositeType.Attribute attr = type.getAttribute(currentAttrIdx); if (attr == null) { throw new java.sql.SQLException("Invalid input request (type not array)"); } <BUGS> java.io.InputStream data = com.impossibl.postgres.jdbc.SQLTypeUtils.coerceToByteStream(getNextAttributeValue(), attr.type, connection); <BUGE> try { return com.impossibl.postgres.utils.guava.ByteStreams.toByteArray(data); } catch (java.io.IOException e) { throw new java.sql.SQLException(e); } } 
@org.junit.Test public void givenVideoInputWithSubtitlesWhenScanningShouldReturnVideoWithSubtitles() throws java.lang.Exception { for (net.cserny.videosMover.model.Video video : videosScanned) { if (video.getInput().toString().contains(service.DOWNLOADS_MOVIE_WITH_SUBTITLE)) { java.util.List<java.nio.file.Path> subtitles = video.getSubtitles(); assertNotNull(subtitles); assertFalse(subtitles.isEmpty()); <BUGS> <BUGE> } } } 
public int compare(java.lang.Object element1, java.lang.Object element2) { Brush.VerifyOverlap.VerifyOverlapReducer.OverlapInfo obj1 = ((Brush.VerifyOverlap.VerifyOverlapReducer.OverlapInfo) (element1)); Brush.VerifyOverlap.VerifyOverlapReducer.OverlapInfo obj2 = ((Brush.VerifyOverlap.VerifyOverlapReducer.OverlapInfo) (element2)); <BUGS> if (((int) ((obj1.overlap_size) - (obj2.overlap_size))) == 0) { <BUGE> return 0; }else <BUGS> if (((int) ((obj1.overlap_size) - (obj2.overlap_size))) >= 0) { <BUGE> return -1; }else { return 1; }  } 
@java.lang.Override public void onClick(android.view.View v) { v.setActivated((!(v.isActivated()))); android.content.Intent intent = new android.content.Intent(getActivity(), org.akvo.akvoqr.CameraActivity.class); intent.putExtra(Constant.BRAND, brand); startActivity(intent); <BUGS> getActivity().finish(); <BUGE> } 
public int NumSubMbPart(java.lang.String type) { <BUGS> java.lang.System.out.println("implemetation required line 645 NumSubMbPart"); <BUGE> if (type.equals("P_L0_8x8")) { return 1; }else if (type.equals("P_L0_8x4")) { return 2; }else if (type.equals("P_L0_4x8")) { return 2; }else if (type.equals("P_L0_4x4")) { return 4; }    return 0; } 
@java.lang.Override public void onCreate() { super.onCreate(); if (BuildConfig.DEBUG) com.facebook.stetho.Stetho.initializeWithDefaults(this);  android.os.StrictMode.setThreadPolicy(new android.os.StrictMode.ThreadPolicy.Builder().detectDiskReads().detectDiskWrites().detectNetwork().penaltyLog().penaltyDialog().build()); <BUGS> android.os.StrictMode.setVmPolicy(new android.os.StrictMode.VmPolicy.Builder().detectLeakedSqlLiteObjects().detectLeakedClosableObjects().penaltyLog().penaltyDeath().build()); <BUGE> } 
public int getInt() { try { int r = java.lang.Integer.parseInt(in.readLine()); return r; } catch (java.lang.NumberFormatException | java.io.IOException e) { <BUGS> java.lang.System.out.println(("No response from client with Snake ID of " + (snake.getId()))); java.lang.System.out.println(((MainServer.currentSnakeManagerInstance.getClients().size()) + " snakes remaining")); <BUGE> isLive = false; closeConnection(); snakeManager.getClients().remove(this); <BUGS> <BUGE> } return -1; } 
private boolean urlInHashSet(java.net.URL url, java.util.HashSet<java.lang.String> set) { boolean returnBoolean = false; for (java.lang.String setItem : set) { if (com.wordpress.httpspandareaktor.scrapetest.NetworkUtils.urlHostPathMatch(com.wordpress.httpspandareaktor.scrapetest.NetworkUtils.makeURL(setItem), url)) { <BUGS> android.util.Log.v("DLAsync.urlInHashSet", (((" just found " + (url.toString())) + " in ") + (set.toString()))); <BUGE> returnBoolean = true; } } return returnBoolean; } 
@java.lang.Override protected java.util.List<com.facebook.react.ReactPackage> getPackages() { <BUGS> return java.util.Arrays.<com.facebook.react.ReactPackage>asList(new com.facebook.react.shell.MainReactPackage(), new com.microsoft.codepush.react.CodePush("Fa0Ug7tNp1xFH9EShk5GXlBEIXCE4JbRhcGg7", getApplicationContext(), BuildConfig.DEBUG), new com.oblador.vectoricons.VectorIconsPackage(), new com.zmxv.RNSound.RNSoundPackage(), new com.futurice.rctaudiotoolkit.AudioPackage(), new com.facebook.reactnative.androidsdk.FBSDKPackage(com.talktekapp.MainApplication.mCallbackManager), new co.apptailor.googlesignin.RNGoogleSigninPackage()); <BUGE> } 
@org.junit.Test @org.springframework.security.test.context.support.WithMockUser(username = "servicetester", roles = { "SERVICE" }) public void testAddInvoice_shouldAddInvoice() throws com.at.ac.tuwien.sepm.ss15.edulium.dao.DAOException, com.at.ac.tuwien.sepm.ss15.edulium.domain.validation.ValidationException, com.at.ac.tuwien.sepm.ss15.edulium.service.ServiceException { com.at.ac.tuwien.sepm.ss15.edulium.domain.Invoice invoice = new com.at.ac.tuwien.sepm.ss15.edulium.domain.Invoice(); invoice.setTime(java.time.LocalDateTime.now()); invoice.setGross(new java.math.BigDecimal("15.6")); invoice.setCreator(creator1); invoiceService.addInvoice(invoice); <BUGS> org.mockito.Mockito.verify(invoiceDAO).create(invoice); <BUGE> } 
@org.junit.Test(expected = com.at.ac.tuwien.sepm.ss15.edulium.domain.validation.ValidationException.class) @org.springframework.security.test.context.support.WithMockUser(username = "servicetester", roles = { "SERVICE" }) public void testAddInvoice_shouldFailWithNullGrossAmount() throws com.at.ac.tuwien.sepm.ss15.edulium.domain.validation.ValidationException, com.at.ac.tuwien.sepm.ss15.edulium.service.ServiceException { com.at.ac.tuwien.sepm.ss15.edulium.domain.Invoice invoice = new com.at.ac.tuwien.sepm.ss15.edulium.domain.Invoice(); invoice.setTime(java.time.LocalDateTime.now()); invoice.setCreator(creator1); <BUGS> org.mockito.Mockito.doThrow(new com.at.ac.tuwien.sepm.ss15.edulium.domain.validation.ValidationException("")).when(invoiceValidator).validateForCreate(invoice); <BUGE> invoiceService.addInvoice(invoice); } 
<BUGS> protected static org.olap4j.mdx.IdentifierNode getIdentifier(org.saiku.query.AbstractQuerySet... identifiers) { <BUGE> java.lang.String identifier = ""; for (int i = 0; i < (identifiers.length); i++) { if (i == 0) { <BUGS> identifier = "~" + (identifiers[0].getName()); <BUGE> }else { <BUGS> identifier += "_" + (identifiers[i].getName()); <BUGE> } } return org.olap4j.mdx.IdentifierNode.ofNames(identifier); } 
@java.lang.Override protected void onAttachedToWindow() { super.onAttachedToWindow(); android.content.Context context = getContext(); android.widget.FrameLayout headViewLayout = new android.widget.FrameLayout(context); com.cjj.LayoutParams layoutParams = new com.cjj.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 0); layoutParams.gravity = android.view.Gravity.TOP; headViewLayout.setLayoutParams(layoutParams); mHeadLayout = headViewLayout; this.addView(mHeadLayout); mChildView = getChildAt(0); <BUGS> mHeadHeight = com.cjj.Util.dip2px(getContext(), DEFAULT_HEIGHT); <BUGE> } 
@java.lang.Override public void simpleInitApp() { setPauseOnLostFocus(false); <BUGS> this.gamePlayers = new java.util.LinkedList<messages.Player>(); <BUGE> this.gamePlayerCharacters = new java.util.ArrayList(); this.player = null; this.pac = null; createSkybg(); initLightandShadow(); initMaterial(); initKeys(); initGui(); initNifty(); mazeCreated = false; clientMaze = new client.Maze(40, 30, false); connect(); } 
protected void readGraphicsFromLibrary(int templateID, double xCoor, double yCoor) { if ((com.nkoiv.mists.game.Mists.structureLibrary) != null) { com.nkoiv.mists.game.gameobject.Structure dummy = Mists.structureLibrary.create(templateID); if (dummy == null) return ;  this.graphics = dummy.graphics; this.extraSprites = dummy.extraSprites; }else this.graphics = new com.nkoiv.mists.game.sprites.Sprite();  <BUGS> this.graphics.setPosition(xCoor, yCoor); <BUGE> } 
private static int findLeftPivot(int[] array, int k) { <BUGS> if ((array.length) > 0) { if (k == 0) <BUGE> return -1; <BUGS> else { int i = project2.NonInitiator.randRange(0, k); return array[i]; } }else return -1; <BUGE>  } 
public javax.naming.Reference getDataSourceFactoryReference() throws org.wso2.carbon.datasource.core.exception.DataSourceException { <BUGS> if ((dataSourceFactoryReference) == null) { dataSourceFactoryReference = new javax.naming.Reference(org.wso2.carbon.datasource.rdbms.hikari.HikariRDBMSDataSource.JAVAX_DATASOURCE_CLASS, org.wso2.carbon.datasource.rdbms.hikari.HikariRDBMSDataSource.HIKARI_JNDI_FACTORY, null); java.util.Map<java.lang.String, java.lang.String> poolConfigMap = org.wso2.carbon.datasource.utils.DataSourceUtils.extractPrimitiveFieldNameValuePairs(this.config); poolConfigMap.forEach(( key, value) -> dataSourceFactoryReference.add(new javax.naming.StringRefAddr(key, value))); } <BUGE> return dataSourceFactoryReference; } 
private java.lang.String getSubCommandDescriptions(net.minecraft.command.ICommandSender sender) { <BUGS> final java.lang.StringBuilder builder = new java.lang.StringBuilder(net.minecraft.client.resources.I18n.format(this.getUsage(sender))); <BUGE> for (final net.minecraft.command.ICommand command : this.getSubCommands()) { <BUGS> builder.append((("\n" + (com.mojang.realmsclient.gui.ChatFormatting.GREEN)) + (net.minecraft.client.resources.I18n.format(command.getUsage(sender))))); <BUGE> } return builder.toString(); } 
@java.lang.Override public void run() { <BUGS> while (!(application.Controller.getInstance(0).mutexLock)) { application.Controller.getInstance(0).mutexLock = true; application.Controller.getInstance(0).decode(); application.Controller.getInstance(0).mutexLock = false; <BUGE> } } 
@java.lang.Override public void onClick(android.view.View v) { if (((selectedDevelopment) != null) && (!(selectedDevelopment.isEmpty()))) { mSharedPrefEditor.putString(Constants.KEY_HOUSING_DEVELOPMENT, selectedDevelopment).apply(); android.content.Intent intent = new android.content.Intent(this, com.nychareport.backlog.activities.HomePageActivity.class); <BUGS> intent.setFlags(((android.content.Intent.FLAG_ACTIVITY_NEW_TASK) | (android.content.Intent.FLAG_ACTIVITY_CLEAR_TASK))); <BUGE> startActivity(intent); finish(); } } 
public void testIsGCEResultValid() throws java.lang.InterruptedException { latch = new java.util.concurrent.CountDownLatch(com.elorri.android.builditbigger.ApplicationTest.COUNT_LATCH); com.elorri.android.builditbigger.GCEndpointsApiService task = new com.elorri.android.builditbigger.GCEndpointsApiService(null); <BUGS> task.execute(); <BUGE> task.setListener(new com.elorri.android.builditbigger.GCEndpointsApiService.GCEndpointsApiServiceListener() { @java.lang.Override public void onCompleted(java.lang.String joke) { result = joke; latch.countDown(); } }); latch.await(); assertNotNull(result); assertEquals("This is a joke from a Java Library", result); } 
public net.masterthought.dlanguage.highlighting.annotation.Problems checkFileSyntax(@org.jetbrains.annotations.NotNull com.intellij.psi.PsiFile file) { final java.lang.String dubPath = ToolKey.DUB_KEY.getPath(file.getProject()); if (dubPath == null) return new net.masterthought.dlanguage.highlighting.annotation.Problems();  java.lang.String result = processFile(file, dubPath); <BUGS> return net.masterthought.dlanguage.highlighting.annotation.external.CompileCheck.findProblems(result, file); <BUGE> } 
@java.lang.Override public java.util.List<org.opennms.web.enlinkd.LldpLinkNode> getLldpLinks(int nodeId) { java.util.List<org.opennms.web.enlinkd.LldpLinkNode> nodelinks = new java.util.ArrayList<org.opennms.web.enlinkd.LldpLinkNode>(); for (org.opennms.netmgt.model.LldpLink link : m_lldpLinkDao.findByNodeId(java.lang.Integer.valueOf(nodeId))) { <BUGS> nodelinks.addAll(convertFromModel(nodeId, link)); <BUGE> } return nodelinks; } 
<BUGS> private int getPlayerRank() { <BUGE> int rank = -1; int count = 0; for (int i = 0; i < (Game.HI_SCORES.size()); i++) { if ((player.getScore()) >= (Game.HI_SCORES.get(i).getScore())) rank = (Game.HI_SCORES.size()) - (++count);  } return rank; } 
private java.lang.String editCmd(java.lang.String s) { if (s.contains("CMD")) { <BUGS> java.lang.System.out.println(("OLD: " + s)); <BUGE> java.lang.String c = s.replaceAll(".*?CMD ", "").replaceAll("\\[", "").replaceAll("\\]", "").replaceAll("\"", ""); <BUGS> java.lang.System.out.println(("NEW: " + c)); <BUGE> return c; }else return null;  } 
public void addUser(final java.lang.String iName, java.lang.String iPassword, final java.lang.String iPermissions) throws java.io.IOException { if (iPassword == null) iPassword = com.orientechnologies.orient.core.security.OSecurityManager.instance().digest2String(java.lang.String.valueOf(random.nextLong()), false);  <BUGS> <BUGE> serverCfg.setUser(iName, iPassword, iPermissions); serverCfg.saveConfiguration(); } 
@java.lang.Override public void onClick(android.view.View view) { <BUGS> final int starDrawable = (!star) ? R.drawable.ic_star_selected : R.drawable.ic_star_unselected; <BUGE> starView.setImageDrawable(android.support.v4.content.ContextCompat.getDrawable(getActivity().getApplicationContext(), starDrawable)); <BUGS> bundle.putBoolean(Constants.STAR, (!star)); <BUGE> android.util.Log.d("id", java.lang.String.valueOf(id)); onCreateView(inflater, container, savedInstanceState); } 
protected java.util.List<java.lang.String> validateNoIntersectingInterval(com.jraska.vsb.or1.data.Output output) { java.util.List<com.jraska.vsb.or1.schedule.validation.NoWaitFlowShopValidator.IntervalWrapper>[] machineIntervals = getIntervalsForMachines(output); java.util.List<java.lang.String> validationErrors = new java.util.ArrayList<java.lang.String>(); <BUGS> for (int machineIndex = 0, count = output.getMachinesCount(); machineIndex < count; machineIndex++) { <BUGE> java.util.List<com.jraska.vsb.or1.schedule.validation.NoWaitFlowShopValidator.IntervalWrapper> intervals = machineIntervals[machineIndex]; validationErrors.addAll(checkForIntersectionErrors(intervals)); } return validationErrors; } 
private boolean hasTechnologyChanged(final com.qcadoo.model.api.Entity order, final com.qcadoo.model.api.Entity technology) { com.qcadoo.model.api.Entity existingOrder = getExistingOrder(order); if (existingOrder == null) { return false; } com.qcadoo.model.api.Entity existingOrderTechnology = existingOrder.getBelongsToField(TechnologiesConstants.MODEL_TECHNOLOGY); if (existingOrderTechnology == null) { <BUGS> return false; <BUGE> } return !(existingOrderTechnology.equals(technology)); } 
public Protocol.Log toProtocol() { retroscope.net.protocol.Protocol.Log.Builder builder = super.toProtocol().toBuilder(); <BUGS> builder.setDataMap(retroscope.net.protocol.ProtocolHelpers.retroMapToProtocol(dataMap, this.name, head.getTime().toLong())); <BUGE> return builder.build(); } 
private void incrementScore() { (com.syzible.irishnoungenders.fragments.MainFrag.currentScore)++; highScoreTV.setText(java.lang.String.valueOf(com.syzible.irishnoungenders.fragments.MainFrag.currentScore)); if ((com.syzible.irishnoungenders.fragments.MainFrag.currentScore) > (com.syzible.irishnoungenders.utils.LocalStorage.getHighScore(getActivity()))) { com.syzible.irishnoungenders.utils.LocalStorage.setHighScore(getActivity(), com.syzible.irishnoungenders.fragments.MainFrag.currentScore); <BUGS> } if (!(hasAnimatedNewHighScore)) { hasAnimatedNewHighScore = true; com.syzible.irishnoungenders.utils.PulseAnimation.animateView(highScoreTV); <BUGE> } } 
public void createTransactionWindow() { transactionStage = new javafx.stage.Stage(); isTransactionWindowActive = true; javafx.scene.layout.BorderPane borderRoot = new javafx.scene.layout.BorderPane(); borderRoot.setTop(transactionsMenuBar()); <BUGS> updateTransactionLabel("1"); <BUGE> borderRoot.setCenter(transactionLabel); transactionStage.setTitle("Transactions"); transactionStage.setScene(new javafx.scene.Scene(borderRoot, 450, 450)); transactionStage.setX(100); transactionStage.setY(50); transactionStage.show(); } 
@java.lang.Override public void handle(javafx.event.ActionEvent event) { java.lang.String point = cmdAnimator.Prompts.promptUserForPoint(); cmdAnimator.GUI.getInstance().buttonExecuteCalled = true; <BUGS> if (point.equalsIgnoreCase("background")) { <BUGE> cmdAnimator.GuiCommands.executeBackgroundImageAdditionCommand(cmdAnimator.GUI.getInstance(), canvasImage.getImageFilename()); }else cmdAnimator.GuiCommands.executeImageAdditionCommand(cmdAnimator.GUI.getInstance(), canvasImage.getImageFilename(), point);  } 
@java.lang.Override public void onError(com.androidnetworking.error.ANError anError) { try { <BUGS> postid = null; <BUGE> android.util.Log.d(in.reweyou.reweyou.UserChat.TAG, ("onError: " + (anError.getResponse()))); userChatAdapter.changestateofsendingmessage(false); } catch (java.lang.Exception e) { e.printStackTrace(); } } 
private void removeInteractorLink(org.reactome.web.diagram.client.InteractorLink link) { org.reactome.web.diagram.data.InteractorsContent interactors = context.getInteractors(); if (link instanceof org.reactome.web.diagram.client.DynamicLink) { org.reactome.web.diagram.client.DynamicLink aux = ((org.reactome.web.diagram.client.DynamicLink) (link)); org.reactome.web.diagram.client.InteractorEntity entity = aux.getInteractorEntity(); entity.removeLink(aux); if (entity.getLinks().isEmpty()) interactors.removeFromView(currentResource, entity);  } <BUGS> <BUGE> interactors.removeFromView(currentResource, link); } 
private java.lang.String power(int slotNumber, int action) throws java.lang.Exception { byte[] response = new byte[0]; try { response = reader.power(slotNumber, action); } catch (com.acs.smartcard.ReaderException e) { throw new java.lang.Exception(e.getMessage()); } <BUGS> return toHexString(response); <BUGE> } 
@java.lang.Override public void onClick(android.view.View v) { java.util.Calendar date = java.util.Calendar.getInstance(); date.setTime(mDate); android.app.DatePickerDialog dialog = new android.app.DatePickerDialog(this, mDateListener, date.get(java.util.Calendar.YEAR), date.get(java.util.Calendar.MONTH), date.get(java.util.Calendar.DAY_OF_MONTH)); <BUGS> dialog.getDatePicker().setMinDate(new java.util.Date().getTime()); <BUGE> dialog.show(); } 
@java.lang.Override @javax.transaction.Transactional public edu.hs.bremen.model.dto.OrderDto deleteBasketEntry(java.lang.String userUuid, edu.hs.bremen.model.dto.BasketEntryDto basketEntryDto) { final edu.hs.bremen.model.UserEntity userEntity = userManager.getUser(userUuid); <BUGS> final edu.hs.bremen.model.BasketEntryEntity basketEntryEntity = basketManager.getUpdatedBasketEntry(basketEntryDto, java.lang.Boolean.TRUE); <BUGE> if ((basketEntryEntity.getProductCount()) <= 0) { basketManager.deleteBasketEntryFromOrder(userEntity, basketEntryEntity); } return edu.hs.bremen.model.dto.OrderDto.fromOrder(orderManager.getOrder(userEntity)); } 
@org.junit.Test public void test12_getRows() { <BUGS> try { deleteRows(); test01_addRowPass(); test01_addRowPass(); com.jayway.restassured.module.mockmvc.RestAssuredMockMvc.given().header(getHeader()).contentType("application/json").when().get("/api/restricted/session").then().statusCode(200).body("size()", org.hamcrest.core.IsEqual.equalTo(2)); } catch (com.google.gdata.util.ServiceException | com.google.appengine.api.datastore.EntityNotFoundException | java.io.IOException e) { e.printStackTrace(); } <BUGE> } 
private void show() { currentTime.setVisibility(View.VISIBLE); finalTime.setVisibility(View.VISIBLE); pause.setVisibility(View.VISIBLE); seekBar.setVisibility(View.VISIBLE); title.setVisibility(View.VISIBLE); note.setVisibility(View.VISIBLE); add.setVisibility(View.VISIBLE); edit.setVisibility(View.VISIBLE); <BUGS> <BUGE> } 
public static boolean isSerializedType(final java.lang.reflect.Field iField) { <BUGS> com.orientechnologies.orient.object.enhancement.OObjectEntitySerializer.OObjectEntitySerializedSchema serializedSchema = com.orientechnologies.orient.object.enhancement.OObjectEntitySerializer.getCurrentSerializedSchema(); <BUGE> if (!(serializedSchema.classes.contains(iField.getDeclaringClass()))) com.orientechnologies.orient.object.enhancement.OObjectEntitySerializer.registerCallbacks(iField.getDeclaringClass());  java.util.Map<java.lang.reflect.Field, java.lang.Class<?>> serializerFields = serializedSchema.serializedFields.get(iField.getDeclaringClass()); return (serializerFields != null) && ((serializerFields.get(iField)) != null); } 
@org.junit.Test public void SaveCourse() { java.util.UUID uuid = java.util.UUID.randomUUID(); OTS.Aig.KnowledgeMapDataServices.CourseElement courseElement = new OTS.Aig.KnowledgeMapDataServices.CourseElement(); courseElement.Id = uuid.toString(); <BUGS> courseElement.Number = "1266"; <BUGE> courseElement.Name = "Testing and Test"; courseElement.Createdby = 2; OTS.Aig.KnowledgeMapDataServices.CourseDataService courseDataService = new OTS.Aig.KnowledgeMapDataServices.CourseDataService(new OTS.DataModels.MySqlDataSource()); OTS.Aig.KnowledgeMapDataServices.TransactionResult result = courseDataService.CreateNewCourse(courseElement); org.eclipse.persistence.jpa.jpql.Assert.isTrue(((result.ActionResultType) == (OTS.Aig.KnowledgeMapDataServices.ActionResultType.ok)), ""); } 
public static java.sql.Date convertNewsApiDateStringToDate(java.lang.String date) { <BUGS> <BUGE> java.lang.String year = date.substring(0, 4); java.lang.String month = date.substring(5, 7); java.lang.String day = date.substring(8, 10); long timeInMilliSec = new java.util.GregorianCalendar(java.lang.Integer.parseInt(year), ((java.lang.Integer.parseInt(month)) - 1), java.lang.Integer.parseInt(day)).getTimeInMillis(); return new java.sql.Date(timeInMilliSec); } 
@java.lang.Override public void onCheckedChanged(android.widget.CompoundButton compoundButton, boolean b) { switch (compoundButton.getId()) { case R.id.cod_client_fragment : break; case R.id.qr_client_fragment : if (b) _qrAmountll.setVisibility(View.VISIBLE); else _qrAmountll.setVisibility(View.GONE);  break; case R.id.bt_client_fragment : if (b) _btAmountll.setVisibility(View.VISIBLE); else <BUGS> _btAmountll.setVisibility(View.VISIBLE); <BUGE>  break; } } 
public void registerMbean() { if (!(mbeanRegistered)) { java.security.AccessController.doPrivileged(new java.security.PrivilegedAction<java.lang.Object>() { @java.lang.Override public java.lang.Object run() { javax.management.ObjectName objectName = com.alibaba.druid.stat.DruidDataSourceStatManager.addDataSource(com.alibaba.druid.pool.DruidDataSource.this, com.alibaba.druid.pool.DruidDataSource.this.name); <BUGS> if (objectName != null) { com.alibaba.druid.pool.DruidDataSource.this.setObjectName(objectName); com.alibaba.druid.pool.DruidDataSource.this.mbeanRegistered = true; } <BUGE> return null; } }); } } 
@java.lang.Override public void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); android.os.Bundle b = getArguments(); java.lang.String fileName = b.getString(com.koroshiya.fragments.ReadFragment.ARG_FILE, ""); android.util.Log.i("FLA", ("Create: " + fileName)); int page = b.getInt(com.koroshiya.fragments.ReadFragment.ARG_PAGE, (-1)); <BUGS> reset(fileName, page); <BUGE> } 
private void load() { if ((realMap) == null) { realMap = WPI.CampusMap.Recording.Serialization.Serializer.realLoad(mapName); if ((realMap) == null) { realMap = new WPI.CampusMap.Backend.Core.Map.RealMap(mapName); <BUGS> realMap.validatePoints(); }else { realMap.validatePoints(); <BUGE> } <BUGS> <BUGE> } } 
public static java.util.UUID getSnomedDescriptionType(int type) { switch (type) { case 0 : return IsaacMetadataAuxiliaryBinding.DEFINITION_DESCRIPTION_TYPE.getPrimodialUuid(); <BUGS> case 1 : return IsaacMetadataAuxiliaryBinding.PREFERRED.getPrimodialUuid(); <BUGE> case 2 : return IsaacMetadataAuxiliaryBinding.SYNONYM.getPrimodialUuid(); case 3 : return IsaacMetadataAuxiliaryBinding.FULLY_SPECIFIED_NAME.getPrimodialUuid(); } throw new java.lang.RuntimeException(("Unhandled description type " + type)); } 
public void run() { if (((this.getMappingsLocation()) != null) && ((this.getSrcLocation()) != null)) { this.sendToConsole((((("Preparing to apply mappings to '" + (this.getSrcLocation())) + "' from '") + (this.getMappingsLocation())) + "'")); <BUGS> (remapper = new com.arisux.mappingpatcher.Remapper(this, this.getMappingsLocation(), this.getSrcLocation())).start(); <BUGE> } } 
public void setMatrixMode(final org.anddev.andengine.opengl.util.GLMatrixStacks.MatrixMode pMatrixMode) { <BUGS> this.mMatrixMode = pMatrixMode; switch (this.mMatrixMode) { case PROJECTION : this.mCurrentGLMatrixStack = this.mProjectionGLMatrixStack; return ; case MODELVIEW : this.mCurrentGLMatrixStack = this.mModelViewGLMatrixStack; return ; default : throw new java.lang.IllegalArgumentException((((("Unexpected " + (org.anddev.andengine.opengl.util.GLMatrixStacks.MatrixMode.class.getSimpleName())) + ": '") + pMatrixMode) + "'.")); <BUGE> } } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); <BUGS> closeAppIfRequired(); <BUGE> setContentView(R.layout.main_menu); findViewById(R.id.new_game_button).setOnClickListener(this); findViewById(R.id.records_button).setOnClickListener(this); findViewById(R.id.about_the_game_button).setOnClickListener(this); findViewById(R.id.quit_button).setOnClickListener(this); } 
<BUGS> private int getXLocation(int position, com.edulectronics.tinycircuit.Models.Components.Connectors.ConnectionPointOrientation orientation) { <BUGE> switch (orientation) { case Top : case Bottom : return (((getColumn(position)) - 1) * (cellSize)) + ((int) (0.5 * (cellSize))); case Left : return ((getColumn(position)) - 1) * (cellSize); default : return (getColumn(position)) * (cellSize); } } 
<BUGS> private final java.lang.Float calculateRate(final java.lang.Long counterValue, final java.util.concurrent.TimeUnit timeUnit) { <BUGE> java.lang.Float result = null; <BUGS> if (counterValue != null) { final java.lang.Long durationInNs = getDurationInNs(); if ((durationInNs != null) && ((durationInNs.longValue()) > 0L)) { result = (counterValue * ((float) (java.util.concurrent.TimeUnit.NANOSECONDS.convert(1, timeUnit)))) / ((float) (durationInNs)); } <BUGE> } return result; } 
@java.lang.Override public com.simpledb.result.Result call() throws java.lang.Exception { <BUGS> com.simpledb.memtable.Memtable<java.lang.String> memtable = processor.getMemTable(); java.lang.Object value = memtable.getMap().get(input.trim()); <BUGE> com.simpledb.result.Result result = null; if (value != null) { result = new com.simpledb.result.Result(value.toString()); }else { result = new com.simpledb.result.Result("the data should be in the LookupIndex Stack... but this hasn't been implemented yet :("); } outputResult(result); return result; } 
@java.lang.Override public void onClick(android.view.View v) { java.lang.String movieId = ((java.lang.String) (v.getTag(R.id.poster_image_view))); <BUGS> android.content.Intent detailsActivityIntent = new android.content.Intent(this.getActivity(), br.com.dgimenes.popmovies.DetailsActivity.class); <BUGE> detailsActivityIntent.putExtra(DetailsActivity.MOVIE_ID_PARAM, movieId); startActivity(detailsActivityIntent); } 
public void take(double amount) { double sum = (curSum) + ((decimals) / 100.0); sum -= amount; curSum = ((int) (sum)); <BUGS> decimals = ((int) ((sum - (curSum)) * 100)); <BUGE> } 
public void updateResults() { if (com.testing.Cliniops.Cliniops_ReusableMethodsTest.browserName.equalsIgnoreCase("Firefox")) { if (com.testing.Cliniops.Cliniops_ReusableMethodsTest.isPass) com.testing.Cliniops.Cliniops_ReusableMethodsTest.firefoxRes = "Pass"; else com.testing.Cliniops.Cliniops_ReusableMethodsTest.firefoxRes = "Fail";  }else if (com.testing.Cliniops.Cliniops_ReusableMethodsTest.browserName.equalsIgnoreCase("Chrome")) { if (com.testing.Cliniops.Cliniops_ReusableMethodsTest.isPass) com.testing.Cliniops.Cliniops_ReusableMethodsTest.chromeRes = "Pass"; else com.testing.Cliniops.Cliniops_ReusableMethodsTest.chromeRes = "Fail";  }else if (com.testing.Cliniops.Cliniops_ReusableMethodsTest.browserName.equalsIgnoreCase("IE")) { if (com.testing.Cliniops.Cliniops_ReusableMethodsTest.isPass) com.testing.Cliniops.Cliniops_ReusableMethodsTest.ieRes = "Pass"; else com.testing.Cliniops.Cliniops_ReusableMethodsTest.ieRes = "Fail";  }   <BUGS> <BUGE> } 
public java.lang.String leftShift(java.lang.String input, int times) { java.lang.String temp = input; java.lang.StringBuilder strb = new java.lang.StringBuilder(); for (int i = 0; i < times; i++) { strb.append(temp.substring(1)); strb.append(temp.substring(0, 1)); temp = strb.toString(); <BUGS> <BUGE> } <BUGS> return strb.toString(); <BUGE> } 
private void initializeCorps() { earth = new itba.ss.TP4_MarsTravel.Particle(0, 6371000.0, 1.391734353396533E11, (-5.71059040560652E10), 10801.963811159256, 27565.215006898346, 5.972E24); sun = new itba.ss.TP4_MarsTravel.Particle(1, 6.957E8, 0, 0, 0, 0, 1.988E30); mars = new itba.ss.TP4_MarsTravel.Particle(2, 6.957E8, 8.31483493435295E10, (-1.914579540822006E11), 23637.91232131405, 11429.021426712032, 6.4185E23); <BUGS> locateShip(); <BUGE> } 
@java.lang.Override protected void execLoadSession() throws org.eclipse.scout.commons.exception.ProcessingException { java.lang.Boolean createTunnelToServerBeans = org.eclipse.scout.rt.platform.config.CONFIG.getPropertyValue(org.eclipse.scout.rt.shared.SharedConfigProperties.CreateTunnelToServerBeansProperty.class); <BUGS> <BUGE> if (!createTunnelToServerBeans) { org.eclipsescout.demo.widgets.client.ClientSession.logger.info("starting client without a server!"); } org.eclipse.scout.rt.shared.services.common.code.CODES.getAllCodeTypes("org.eclipsescout.demo.widgets.shared"); setLocale(java.util.Locale.ENGLISH); setDesktop(new org.eclipsescout.demo.widgets.client.ui.desktop.Desktop()); if (createTunnelToServerBeans) { org.eclipse.scout.rt.platform.BEANS.get(org.eclipse.scout.rt.client.services.common.bookmark.IBookmarkService.class).loadBookmarks(); org.eclipse.scout.rt.platform.BEANS.get(org.eclipse.scout.rt.shared.services.common.ping.IPingService.class).ping("ping"); } } 
@org.junit.Test @org.apache.sis.test.DependsOnMethod(value = "testPropertyOverride") public void testPropertyDuplication() { org.apache.sis.feature.DefaultFeatureType city = org.apache.sis.feature.DefaultFeatureTypeTest.city(); <BUGS> city = new org.apache.sis.feature.DefaultFeatureType(java.util.Collections.singletonMap(DefaultFeatureType.NAME_KEY, "New-City"), false, new org.apache.sis.feature.DefaultFeatureType[]{ org.apache.sis.feature.DefaultFeatureTypeTest.city() }, city.getProperty("city")); <BUGE> org.apache.sis.feature.DefaultFeatureTypeTest.assertPropertiesEquals(city, false); org.apache.sis.feature.DefaultFeatureTypeTest.assertPropertiesEquals(city, true, "city", "population"); } 
private void setupLogo() { <BUGS> android.app.FragmentManager fm = getFragmentManager(); <BUGE> android.app.Fragment fragmentLogo = fm.findFragmentById(R.id.fragmentContainer); if (fragmentLogo == null) { fragmentLogo = new testproject.halfmoonstudios.com.ponder.LogoFragment(); fm.beginTransaction().add(R.id.fragmentContainer, fragmentLogo).commit(); cd = new android.os.CountDownTimer(2000, 10000) { @java.lang.Override public void onTick(long millisUntilFinished) { }  @java.lang.Override public void onFinish() { replaceMenuFragment(); replaceOptionsFragment(); } }; cd.start(); } } 
public void setHit(boolean isHit) { this.isHit = isHit; if (!(name.contains("water"))) { <BUGS> java.lang.System.out.println(name); <BUGE> try { component.setActiveAnimationIndex((isHit ? 1 : 0)); } catch (java.lang.IllegalArgumentException iae) { de.hsb.ismi.jbs.engine.utility.debug.DebugLog.logError(iae); } } } 
@java.lang.Override public java.lang.String getMessage() { if ((e) instanceof cz.upol.vanusanik.paralang.runtime.PLClass) { cz.upol.vanusanik.paralang.runtime.PLClass c = ((cz.upol.vanusanik.paralang.runtime.PLClass) (e)); cz.upol.vanusanik.paralang.plang.PLangObject runnable = c.__getkey(BaseException.__messageGetter); if (runnable != null) { cz.upol.vanusanik.paralang.plang.PLangObject str = cz.upol.vanusanik.paralang.runtime.PLRuntime.getRuntime().run(runnable, c); return str.toString(str); <BUGS> <BUGE> } } return e.getMessage(); } 
public java.util.List<com.manev.quislisting.service.taxonomy.dto.DlCategoryDTO> dlCategoryToDlCategoryDtoFlat(org.springframework.data.domain.Page<com.manev.quislisting.domain.taxonomy.discriminator.DlCategory> page) { java.util.Set<java.lang.Long> ids = new java.util.HashSet<>(); java.util.List<com.manev.quislisting.service.taxonomy.dto.DlCategoryDTO> result = new java.util.ArrayList<>(); for (com.manev.quislisting.domain.taxonomy.discriminator.DlCategory dlCategory : page) { <BUGS> doMappingAndFillDepthLevel(dlCategory, ids, result, 0); <BUGE> } return result; } 
public WPI.CampusMap.Backend.ConnectionPoint getConnectionPoint() { WPI.CampusMap.Backend.ConnectionPoint temp = new WPI.CampusMap.Backend.ConnectionPoint(this.getCoord(), this.getType(), this.getId(), this.getMap(), "", ""); for (WPI.CampusMap.Backend.Point point : this.getNeighborsP()) { <BUGS> <BUGE> temp.addNeighbor(point); } return temp; } 
@java.lang.Override public void onDestroyView() { super.onDestroyView(); <BUGS> org.dcxz.designdigger.app.App.getQueue().cancelAll(((org.dcxz.designdigger.fragment.MainFragment.TAG) + (subTag))); <BUGE> org.dcxz.designdigger.app.App.getQueue().cancelAll(ShotsAdapter.TAG); if ((receiver) != null) { getActivity().unregisterReceiver(receiver); } } 
public boolean cancelSeats(int no) { <BUGS> if (no > (this.booked)) { <BUGE> return false; }else { this.booked = -no; this.availability += no; this.setChanged(); this.notifyObservers(this.availability); this.clearChanged(); return true; } } 
@java.lang.Override public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) { android.view.View loadedFragment = inflater.inflate(R.layout.fragment_manage_group_products, container, false); initializeWidgets(loadedFragment); setupToolbar(); <BUGS> setupAddProductButtonListener(loadedFragment); setupActionModeCallback(); <BUGE> setupRecyclerView(); populateProductList(); return loadedFragment; } 
@java.lang.Override public void validate(java.lang.Object target, org.springframework.validation.Errors errors) { com.pce.domain.dto.PukGroupForPukDto pukGroupDto = ((com.pce.domain.dto.PukGroupForPukDto) (target)); <BUGS> long pukGroupId = pukGroupDto.getPukGroupId(); java.util.Optional<com.pce.domain.PukGroup> pukGroupById = pukGroupService.getPukGroupById(pukGroupId); if (!(pukGroupById.isPresent())) { errors.rejectValue("pukGroupId", "pukGroup.not.exists", (("Puk Group " + pukGroupId) + " is not exists in the system, please select different one")); <BUGE> } } 
private void populateBoard() { this.boardSquares = new location.Square[cluedo.Board.BOARD_WIDTH][cluedo.Board.BOARD_HEIGHT]; for (int y = 0; y < (cluedo.Board.BOARD_HEIGHT); y++) { for (int x = 0; x < (cluedo.Board.BOARD_WIDTH); x++) { char square = boardChar(x, y); <BUGS> if ((square == '1') || (square == '2')) { <BUGE> this.boardSquares[x][y] = new location.Square(x, y); } } } } 
@android.support.annotation.NonNull public java.lang.String getDefinition() { java.lang.StringBuilder definition = new java.lang.StringBuilder(); <BUGS> if ((prefixName) != null) { definition.append((tickName ? com.raizlabs.android.dbflow.sql.QueryBuilder.quoteIfNeeded(prefixName) : prefixName)).append("."); } definition.append((tickName ? getName() : getNamePropertyRaw())); <BUGE> if (hasAlias()) { definition.append(" AS ").append(getAliasName()); } return definition.toString(); } 
public java.sql.Connection getConnection() { <BUGS> if (((connection) == null) || ((check()) > 0)) { <BUGE> try { connection = factory.create(); } catch (java.sql.SQLException e) { throw new java.lang.RuntimeException(e); } } return connection; } 
@java.lang.Override protected void onLayout(boolean changed, int l, int t, int r, int b) { <BUGS> <BUGE> updateBottomViews(); if ((mOnLayoutListeners) != null) for (int i = 0; i < (mOnLayoutListeners.size()); i++) { mOnLayoutListeners.get(i).onLayout(this); }  } 
public th.go.excise.edbarcode.ws.client.pcc.insert0112.oxm.InsertPOSO0112OperationResponse doService(th.go.excise.edbarcode.ws.client.pcc.insert0112.oxm.InsertPOSO0112Operation insertPOSO0112OperationRequest) { th.go.excise.edbarcode.ws.client.pcc.insert0112.oxm.InsertPOSO0112OperationResponse response = new th.go.excise.edbarcode.ws.client.pcc.insert0112.oxm.InsertPOSO0112OperationResponse(); th.go.excise.edbarcode.ws.client.pcc.insert0112.client.InsertPOSO0112OperationServiceImpl.logger.info(" In  InsertPOSO112OperationService.doService ###"); try { th.go.excise.edbarcode.ws.client.pcc.insert0112.client.InsertPOSO0112OperationServiceImpl.logger.info((" #####################################  :" + (insertPOSO0112OperationWsTemplate))); response = ((th.go.excise.edbarcode.ws.client.pcc.insert0112.oxm.InsertPOSO0112OperationResponse) (insertPOSO0112OperationWsTemplate.marshalSendAndReceive(insertPOSO0112OperationRequest))); th.go.excise.edbarcode.ws.client.pcc.insert0112.client.InsertPOSO0112OperationServiceImpl.logger.info((" ##################################### After Call InsertPOSO0112OperationService response:  " + response)); } catch (java.lang.Exception ex) { <BUGS> th.go.excise.edbarcode.ws.client.pcc.insert0112.client.InsertPOSO0112OperationServiceImpl.logger.info((" ############## Error Call InsertPOSO0112OperationService :" + (ex.getMessage()))); ex.printStackTrace(); <BUGE> } return response; } 
private byte[] removeId(byte[] payload) { byte[] array = new byte[(payload.length) - 1]; <BUGS> for (int i = 0; i < (payload.length); i++) { <BUGE> array[i] = payload[(i + 1)]; } return array; } 
protected boolean isFinished() { switch (m_state) { case ON : <BUGS> if ((m_terminateWhenEmpty) && (m_launcher.isEmpty())) { <BUGE> return true; <BUGS> } return false; <BUGE> case OFF : return true; case SINGLE : <BUGS> if (m_launcher.isSingleShotDone()) { <BUGE> return true; <BUGS> } return false; <BUGE> case UNJAM : return false; } return false; } 
@java.lang.Override public java.lang.String getValue(mage.game.Game game) { java.lang.StringBuilder sb = mage.cards.CardsImpl.threadLocalBuilder.get(); <BUGS> java.util.SortedSet<java.lang.String> cards = new java.util.TreeSet<>(); <BUGE> for (java.util.UUID cardId : this) { mage.cards.Card card = game.getCard(cardId); cards.add(card.getName()); } <BUGS> <BUGE> for (java.lang.String name : cards) { sb.append(name).append(":"); } return sb.toString(); } 
public void update(double timestep) { <BUGS> xVel += (timestep * (xForce)) / (mass); yVel += (timestep * (yForce)) / (mass); <BUGE> x += timestep * (xVel); y += timestep * (yVel); } 
public void next() { final net.teamfruit.signpic.manager.scan.Scanner scanner = this.current.getScanner(null); if (scanner != null) { if ((scanner.getState()) == (net.teamfruit.signpic.manager.scan.Scanner.ScanState.DONE)) { <BUGS> <BUGE> final net.teamfruit.signpic.manager.scan.ScanManager.ScanTask task = this.queue.poll(); <BUGS> if (task != null) { this.current = task; <BUGE> scan(task); <BUGS> }else this.current = null; <BUGE>  } } } 
public static java.util.Collection<hslu.bda.medimemory.entity.Eat> getAllEatValues(hslu.bda.medimemory.database.DbAdapter dbAdapter) { <BUGS> java.util.Collection<hslu.bda.medimemory.entity.Eat> allEatValues = null; <BUGE> try { java.util.Collection<android.content.ContentValues> allContentValues = dbAdapter.getAllByTable(DbHelper.TABLE_MEDI_EAT); for (android.content.ContentValues contentValues : allContentValues) { hslu.bda.medimemory.entity.Eat eat = hslu.bda.medimemory.entity.Eat.copyContentValuesToObject(contentValues); allEatValues.add(eat); } } catch (java.lang.Exception e) { java.lang.System.console().printf(e.getMessage()); } return allEatValues; } 
@org.junit.Test public void undoAdd() { <BUGS> <BUGE> seedu.taskell.testutil.TestTask[] currentList = td.getTypicalTasks(); seedu.taskell.testutil.TestTask taskToAdd = td.holdMeeting; commandBox.runCommand(taskToAdd.getAddCommand()); assertAddSuccess(taskToAdd, currentList); currentList = seedu.taskell.testutil.TestUtil.addTasksToList(currentList, taskToAdd); commandBox.runCommand("undo 1"); assertDeleteSuccess(currentList.length, currentList); seedu.taskell.logic.commands.UndoCommand.clearCommandHistory(); } 
private void removeReplacementSpan(java.lang.Class<?> clazz, int start) { java.lang.Object replacementSpan = getAssignSpan(replaceMap.get(clazz).clazz, start, start); getEditableText().removeSpan(replacementSpan); <BUGS> getEditableText().delete((start - 7), start); <BUGE> replaceMap.get(clazz).position = -1; } 
public double[] getPhaseTable() { for (int i = 0; i < 1024; i++) re[i] = data[i];  <BUGS> sign = -1; cafe.analysis.cafe.analysis.FFT.fft(re, im, 10, sign); <BUGE> double[] temp1 = cafe.analysis.cafe.analysis.FFT.get_theta(); return temp1; } 
@org.springframework.web.bind.annotation.RequestMapping(method = org.springframework.web.bind.annotation.RequestMethod.GET) @org.springframework.web.bind.annotation.ResponseBody public java.util.Map<java.lang.String, java.lang.Object> executeOperation(@org.springframework.web.bind.annotation.RequestHeader(value = org.ow2.proactive.scheduling.api.controllers.GraphQLController.REQUEST_HEADER_NAME_SESSION_ID) java.lang.String sessionId, @org.springframework.web.bind.annotation.RequestParam(value = org.ow2.proactive.scheduling.api.controllers.GraphQLController.DEFAULT_QUERY_KEY) java.lang.String query, @org.springframework.web.bind.annotation.RequestParam(value = org.ow2.proactive.scheduling.api.controllers.GraphQLController.DEFAULT_OPERATION_NAME, required = false) java.lang.String operationName, @org.springframework.web.bind.annotation.RequestParam(value = org.ow2.proactive.scheduling.api.controllers.GraphQLController.DEFAULT_VARIABLES_KEY, required = false) java.lang.String variables) throws java.io.IOException { log.debug("sessionId={}", sessionId); java.lang.String username = authenticationService.authenticate(sessionId); log.trace("username={}", username); log.debug("query={}, operationName={}, variables={}", query, operationName, variables); <BUGS> return graphqlService.executeQuery(query, operationName, new org.ow2.proactive.scheduling.api.graphql.common.GraphqlContext(sessionId, username), decodeIntoMap(variables)); <BUGE> } 
@java.lang.Override protected byte[] getFromStore(long uid) throws java.io.IOException { int docid = mapDocId(uid); if (docid < 0) return null;  org.apache.lucene.index.IndexReader reader = null; if ((_currentReaderData) != null) { reader = _currentReaderData.reader; } <BUGS> if ((docid > 0) && (reader != null)) { <BUGE> org.apache.lucene.document.Document doc = reader.document(docid); if (doc != null) { return doc.getBinaryValue(_field); } } return null; } 
@org.junit.Test(timeout = 10000) public void testKeySetToArray() throws java.io.IOException { <BUGS> try (net.openhft.chronicle.map.ChronicleMap map = map5(((net.openhft.chronicle.engine.map.StatelessChronicleMapTest.s_port)++))) { <BUGE> java.util.Set s = map.keySet(); java.lang.Object[] ar = s.toArray(); assertTrue(s.containsAll(java.util.Arrays.asList(ar))); assertEquals(5, ar.length); ar[0] = m10; assertFalse(s.containsAll(java.util.Arrays.asList(ar))); } } 
public boolean percolates() { <BUGS> for (int i = 0; i < (site[site[0].length].length); i++) { if (isFull(9, i)) <BUGE> return true;  } return false; } 
public void uninstallClientDecorations(javax.swing.JRootPane root) { uninstallBorder(root); uninstallWindowListeners(root); setTitlePane(root, null); uninstallLayout(root); int style = com.jtattoo.plaf.DecorationHelper.getWindowDecorationStyle(root); if (style == (com.jtattoo.plaf.BaseRootPaneUI.NONE)) { root.repaint(); root.revalidate(); } <BUGS> if ((window) != null) { <BUGE> window.setCursor(savedCursor); <BUGS> <BUGE> } window = null; } 
@org.junit.Test public void testList() { java.util.List<java.net.Proxy> result = this.selector.select(TestUtil.HTTP_TEST_URI); <BUGS> <BUGE> org.junit.Assert.assertEquals(TestUtil.HTTP_TEST_PROXY, result.get(0)); org.junit.Assert.assertEquals(TestUtil.HTTPS_TEST_PROXY, result.get(1)); <BUGS> org.junit.Assert.assertEquals(java.net.Proxy.NO_PROXY, result.get(2)); <BUGE> } 
public void handleMessage(android.os.Message msg) { <BUGS> if ((progress) != null) { progress.dismiss(); } <BUGE> if (!(com.fionera.cleaner.utils.DroidWallApi.hasRootAccess(mContext, true))) { return ; } if (com.fionera.cleaner.utils.DroidWallApi.applyIpTablesRules(mContext, true)) { com.fionera.cleaner.utils.ShowToast.show("规则已应用"); } <BUGS> <BUGE> } 
@java.lang.Override public void onActivityCreated(@android.support.annotation.Nullable android.os.Bundle savedInstanceState) { super.onActivityCreated(savedInstanceState); <BUGS> ((com.example.daniel.todule_android.activities.MainActivity) (getActivity())).fabVisibility(false); <BUGE> setEmptyText("No entry found"); mAdapter = new com.example.daniel.todule_android.adapter.HistoryAdapter(getActivity(), null, 0); setListAdapter(mAdapter); getActivity().getSupportLoaderManager().initLoader(com.example.daniel.todule_android.activities.ToduleHistoryFragment.LOADER_ID, null, this); } 
<BUGS> private void startTestMenuItemAction() { <BUGE> if ((mainView.getCurrentlySelectedVocabList()) == null) { reportNoVocabListSelectedError(); }else { java.lang.Object[] options = new java.lang.Object[]{ com.tkomiya.models.Vocab.SUPPORTED_LANGUAGES[1] , com.tkomiya.models.Vocab.SUPPORTED_LANGUAGES[2] }; int languageToTest = mainView.showOptionDialog("Which language would you like to test?", "Please enter option", options, Vocab.KOREAN); if (languageToTest != (javax.swing.JOptionPane.CANCEL_OPTION)) { new com.tkomiya.views.TypedTest(mainView.getCurrentlySelectedVocabList(), (languageToTest + 1)); } } } 
@java.lang.Override public void onActivityResult(int requestCode, int resultCode, android.content.Intent intent) { <BUGS> android.util.Log.i("addpost", "back button clicked 1"); <BUGE> super.onActivityResult(requestCode, resultCode, intent); if (requestCode == 1) { if (resultCode == (android.app.Activity.RESULT_OK)) { android.util.Log.i("addpost", "back button clicked 2"); currentUser = intent.getParcelableExtra("user"); currentUserToken = intent.getParcelableExtra("accessToken"); } } } 
<BUGS> <BUGE> private void setupSettingsFilters() { <BUGS> if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { if ((mLEScanner) == null) { mLEScanner = mBluetoothAdapter.getBluetoothLeScanner(); settings = new android.bluetooth.le.ScanSettings.Builder().setScanMode(ScanSettings.SCAN_MODE_LOW_LATENCY).build(); filters = new java.util.ArrayList<>(); filters.add(new android.bluetooth.le.ScanFilter.Builder().setServiceUuid(new android.os.ParcelUuid(BluetoothServices.Advertisement)).build()); } <BUGE> } } 
@java.lang.Override public void initialize(java.net.URL fxmlFileLocation, java.util.ResourceBundle resources) { this.errorText.setText(this.msg); <BUGS> this.popupTitle.setText(this.windowTitle); <BUGE> this.okayBtn.setOnAction(( event) -> close()); } 
@java.lang.Override public void process(org.apache.uima.jcas.JCas aJCas) throws org.apache.uima.analysis_engine.AnalysisEngineProcessException { try (java.io.OutputStream docOS = getOutputStream(aJCas, ".json")) { jcs.serialize(aJCas.getCas(), docOS); <BUGS> if ((!(typeSystemWritten)) || ((typeSystemFile) == null)) { <BUGE> writeTypeSystem(aJCas); typeSystemWritten = true; } } catch (java.lang.Exception e) { throw new org.apache.uima.analysis_engine.AnalysisEngineProcessException(e); } } 
protected void doPost(javax.servlet.http.HttpServletRequest request, javax.servlet.http.HttpServletResponse response) throws java.io.IOException, javax.servlet.ServletException { java.io.PrintWriter out = response.getWriter(); response.setContentType(com.foodstore.serg.controller.CONTENT_TYPE); java.util.List<com.foodstore.serg.model.Meal> meals = com.foodstore.serg.service.MealService.getAll(); if (meals.isEmpty()) { <BUGS> request.setAttribute("message", com.foodstore.serg.controller.NO_PRODUCT); <BUGE> }else { request.setAttribute("success_message", com.foodstore.serg.controller.LIST_OF_MEALS); request.setAttribute("food", meals); } getServletContext().getRequestDispatcher("/dashboard.jsp").forward(request, response); } 
@butterknife.OnClick(value = R.id.icon) void version() { <BUGS> android.widget.Toast.makeText(this, (((((("      " + (getString(R.string.version))) + (cc.haoduoyu.umaru.BuildConfig.VERSION_NAME)) + "\n\n") + (cc.haoduoyu.umaru.utils.PreferencesUtils.getAll(this))) + "\n\n") + (cc.haoduoyu.umaru.utils.SettingUtils.getAll())), Toast.LENGTH_LONG).show(); <BUGE> com.apkfuns.logutils.LogUtils.d(cc.haoduoyu.umaru.utils.PreferencesUtils.getAll(this)); com.apkfuns.logutils.LogUtils.d(cc.haoduoyu.umaru.utils.SettingUtils.getAll()); } 
public static void main(java.lang.String[] args) { java.util.Map<Node, java.lang.Integer> topology = new java.util.HashMap<Node, java.lang.Integer>(); topology.put(new Node(1), 1); topology.put(new Node(2), 4); Network net = new Network(topology); <BUGS> net.simulate(); <BUGE> } 
public void startFailureMode() { android.util.Log.d("BROWSERTESTING", (("failuremode: checking if network is online before continuing." + " Setting URL to this fallback in the meantime: ") + (fallbackURL))); <BUGS> if (!(changeToFallbackURL.equals("PROPERTY_NOT_FOUND"))) <BUGE> runOnUiThread(changeToFallbackURL);  final java.lang.Runnable refresher = new java.lang.Runnable() { public void run() { if (isOnline()) switchToStandardMode();  } }; refresherHandle = scheduler.scheduleAtFixedRate(refresher, 0, 5, java.util.concurrent.TimeUnit.SECONDS); } 
private boolean putNewTask(TASK newTask) { java.lang.String url = newTask.getKey(); boolean s = mExecuteQueue.offer(newTask); android.util.Log.w(com.arialyy.aria.core.queue.pool.ExecutePool.TAG, ("任务添加" + (s ? "成功" : ("失败，【" + url) + "】"))); if (s) { <BUGS> newTask.start(); <BUGE> mExecuteArray.put(com.arialyy.aria.util.CommonUtil.keyToHashKey(url), newTask); } return s; } 
public boolean sendToServer(org.bukkit.entity.Player player, java.lang.String destination, boolean callEvent) { <BUGS> if (!callEvent) { <BUGE> com.yahoo.tracebachi.DeltaEssentials.Events.PlayerServerSwitchEvent event = new com.yahoo.tracebachi.DeltaEssentials.Events.PlayerServerSwitchEvent(player, destination); org.bukkit.Bukkit.getPluginManager().callEvent(event); if (event.isCancelled()) { return false; } } com.google.common.io.ByteArrayDataOutput output = com.google.common.io.ByteStreams.newDataOutput(); output.writeUTF("Connect"); output.writeUTF(destination); player.sendPluginMessage(this, "BungeeCord", output.toByteArray()); return true; } 
protected void desconectarUsuario() { try { if ((servidor) != null) { java.rmi.server.UnicastRemoteObject.unexportObject(this, true); <BUGS> javax.swing.JOptionPane.showMessageDialog(this, "Voc� se desconectou do Servidor..."); configuraBotoes(true); <BUGE> servidor = null; } } catch (java.rmi.NoSuchObjectException e) { e.printStackTrace(); } <BUGS> <BUGE> try { iServer.desconectar(informacoesCliente()); } catch (java.rmi.RemoteException e) { e.printStackTrace(); } } 
public void execute(java.lang.String command) { for (int i = 0; i < (command.length()); i++) { switch (command.charAt(i)) { case Command.FORWARD : case Command.BACKWARD : <BUGS> move(command.charAt(i)); <BUGE> break; case Command.RIGHT : case Command.LEFT : rotate(command.charAt(i)); break; } } } 
<BUGS> public static int S(double t) { int count = SIRModel.getRecord(SIRModel.S_HIST, t); if (count != (-1)) { <BUGE> return count; }else { double lt = t - (SIRModel.DT); <BUGS> int newCount = ((int) ((SIRModel.S(lt)) + (SIRModel.dS(t)))); <BUGE> SIRModel.S_HIST.add(newCount); return newCount; } } 
<BUGS> private void close(java.sql.Statement statement) { <BUGE> try { <BUGS> <BUGE> java.sql.Connection connection = statement.getConnection(); statement.close(); connection.close(); } catch (java.sql.SQLException e) { com.mayhew3.drafttower.server.PlayerDataSourceImpl.logger.log(java.util.logging.Level.SEVERE, "Unable to close SQL connection after use.", e); } } 
public void updateFilelist() { java.util.List<java.lang.String> fileList = new java.util.ArrayList<java.lang.String>(); try { <BUGS> fileList = fileserverHandler.listFiles("s974489", UserPreferences.USERNAME, UserPreferences.PASSWORD); <BUGE> } catch (java.io.IOException e) { e.printStackTrace(); } guiController.eventUpdateFilelist(fileList); } 
protected void fetchData() { try { <BUGS> java.net.URL url = new com.weihua.newyorktimes.search.SearchUrlBuilder().setBeginDate(com.weihua.newyorktimes.search.SearchActivity.DEFAULT_SEARCH_BEGIN_DATE).setQuery((searchQuery.getText().toString().equals("") ? com.weihua.newyorktimes.search.SearchActivity.DEFAULT_CATEGORY : searchQuery.getText().toString())).setSort(SORT_TYPE.NEWEST).build(); <BUGE> fetchData(url); } catch (java.net.MalformedURLException e) { android.util.Log.e("Search", "search error"); e.printStackTrace(); } } 
<BUGS> private boolean mouseOnMaximize() { <BUGE> if (((((mouse) != null) && (!(isModal()))) && ((mouse.getAbsoluteY()) == (getY()))) && ((mouse.getAbsoluteX()) == (((getX()) + (getWidth())) - 4))) { return true; } return false; } 
@java.lang.Override public float estimate(us.thirdmillenium.desktoptrainer.ai.TileNode node, us.thirdmillenium.desktoptrainer.ai.TileNode endNode) { com.badlogic.gdx.math.Vector2 start = new com.badlogic.gdx.math.Vector2(node.getCellX(), node.getCellY()); <BUGS> com.badlogic.gdx.math.Vector2 end = new com.badlogic.gdx.math.Vector2(endNode.getCellX(), node.getCellY()); <BUGE> return start.dst(end); } 
@org.junit.Test(timeout = 10000) public void ensureObjectsAreSynchronizedIfOnlyNodeHasObjects() throws java.lang.Exception { ch.dissem.bitmessage.networking.NetworkHandlerTest.peerInventory.init(); ch.dissem.bitmessage.networking.NetworkHandlerTest.nodeInventory.init("V1Msg.payload"); java.lang.Thread t = ch.dissem.bitmessage.networking.NetworkHandlerTest.networkHandler.synchronize(java.net.InetAddress.getLocalHost(), 6001, org.mockito.Mockito.mock(NetworkHandler.MessageListener.class), 10); t.join(); <BUGS> org.junit.Assert.assertEquals(1, ch.dissem.bitmessage.networking.NetworkHandlerTest.nodeInventory.getInventory().size()); <BUGE> assertInventorySize(1, ch.dissem.bitmessage.networking.NetworkHandlerTest.peerInventory); } 
public static java.util.Date parseDate(java.lang.String dateStr) { java.util.Date date = null; try { <BUGS> date = delta.games.lotro.utils.Formats._dateFormatter.parse(dateStr); <BUGE> } catch (java.text.ParseException parseException) { } if (date == null) { try { <BUGS> date = delta.games.lotro.utils.Formats._dateTimeFormatter.parse(dateStr); <BUGE> } catch (java.text.ParseException parseException) { } } return date; } 
@java.lang.Override public void run(org.zstack.network.service.eip.FlowTrigger trigger, java.util.Map data) { <BUGS> org.zstack.network.service.eip.EipBackend bkd = getEipBackend(providerType.toString()); <BUGE> bkd.applyEip(struct, new org.zstack.header.core.Completion(trigger) { @java.lang.Override public void success() { trigger.next(); }  @java.lang.Override public void fail(org.zstack.header.errorcode.ErrorCode errorCode) { trigger.fail(errorCode); } }); } 
<BUGS> private static boolean hasFormatWithClassHeader(java.lang.String text) { <BUGE> java.lang.String[] lines = text.split("\n"); for (int i = 0; i < (lines.length); i++) { if ((lines[i].trim().length()) == 0) break;  if (edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet.isLineShortDate(lines[i])) return true;  } return false; } 
@java.lang.Override public void onCreate(android.database.sqlite.SQLiteDatabase db) { <BUGS> java.lang.String SQL_CREATE_SHOES_TABLE = ((((((((((((("CREATE TABLE " + (com.example.android.deadstock.data.ShoeContract.ShoeEntry.TABLE_NAME)) + " (") + (com.example.android.deadstock.data.ShoeContract.ShoeEntry._ID)) + " INTEGER PRIMARY KEY AUTOINCREMENT, ") + (com.example.android.deadstock.data.ShoeContract.ShoeEntry.COLUMN_SHOE_BRAND)) + " TEXT NOT NULL, ") + (com.example.android.deadstock.data.ShoeContract.ShoeEntry.COLUMN_SHOE_NAME)) + " TEXT, ") + (com.example.android.deadstock.data.ShoeContract.ShoeEntry.COLUMN_SHOE_QUANTITY)) + " INTEGER NOT NULL DEFAULT 0, ") + (com.example.android.deadstock.data.ShoeContract.ShoeEntry.COLUMN_SHOE_PRICE)) + " INTEGER NOT NULL, ") + (com.example.android.deadstock.data.ShoeContract.ShoeEntry.COLUMN_SHOE_IMAGE)) + " INTEGER NOT NULL);"; <BUGE> db.execSQL(SQL_CREATE_SHOES_TABLE); } 
@java.lang.Override public void render(float dt) { update(dt); Gdx.gl.glClearColor(0.0F, 0.0F, 0.0F, 1.0F); Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT); game.batch.setProjectionMatrix(cam.combined); rayHandler.setCombinedMatrix(cam); <BUGS> renderer.render(); <BUGE> if (com.develorain.game.Screens.PlayScreen.DEBUG_MODE) b2dr.render(world, cam.combined);  <BUGS> player.draw(game.batch); <BUGE> rayHandler.render(); game.batch.setProjectionMatrix(hud.stage.getCamera().combined); hud.stage.draw(); } 
public static void initializeCustomWorld(java.util.Scanner input, boolean[][] world) { boolean done = false; GameOfLife.clearWorld(world); java.lang.System.out.printf("Enter a pattern using %c for alive and %c as dead cells.\n", Config.ALIVE, Config.DEAD); java.lang.System.out.println("To end the pattern, type END on its own line."); <BUGS> for (int i = 0; (i < (Config.WORLD_ROWS)) && (!done); i++) { <BUGE> done = GameOfLife.initializeCustomRow(input, i, world); } } 
@java.lang.Override protected void initiateAutomaticSync() { <BUGS> long lastAutoSync = com.todoroo.andlib.utility.Preferences.getLong(((com.todoroo.astrid.actfm.TagViewActivity.LAST_FETCH_KEY) + (tagData.getId())), 0); if (((com.todoroo.andlib.utility.DateUtilities.now()) - lastAutoSync) > (com.todoroo.andlib.utility.DateUtilities.ONE_HOUR)) refreshData(false);  <BUGE> } 
private static java.lang.String getMessageString(hu.bme.tmit.agile.logfilereader.model.TtcnEvent event) { <BUGS> return (((("\"" + (event.getSender())) + "\" -> \"") + (((hu.bme.tmit.agile.logfilereader.model.Message) (event)).getDestination())) + "\" : ") + "Simple message \n"; <BUGE> } 
private workshop.pages.ComponentFactory getBehaviorFromProperties() { workshop.pages.ComponentFactory behavior = null; try { java.lang.Class c = java.lang.Class.forName(java.lang.System.getProperty("container.behavior")); java.lang.reflect.Constructor cons = c.getConstructor(); behavior = ((workshop.pages.ComponentFactory) (cons.newInstance())); } catch (java.lang.Exception e) { <BUGS> java.lang.System.out.println(e); <BUGE> behavior = new workshop.pages.Caching(); } return behavior; } 
private void shutdown() { <BUGS> <BUGE> if ((serverThread) != null) { org.codice.alliance.video.stream.mpegts.UdpStreamMonitor.LOGGER.debug("shutting down monitor server thread"); joinServerThread(); serverThread = null; } <BUGS> if ((eventLoopGroup) != null) { eventLoopGroup.shutdownGracefully(); } <BUGE> if ((udpStreamProcessor) != null) { udpStreamProcessor.shutdown(); } } 
@java.lang.Override public java.lang.String visitSimple_stmt(lessa.ExprParser.Simple_stmtContext ctx) { java.lang.System.out.println("simple_stmt -> small_stmt (';' small_stmt)* ';' "); java.lang.String ret = (visit(ctx.small_stmt(0))) + "\n"; int i = 1; while ((ctx.small_stmt(i)) != null) { ret += (visit(ctx.small_stmt(i))) + "\n"; <BUGS> <BUGE> } return ret; } 
private void updateUI_2_Dashboard() { <BUGS> <BUGE> final boolean isBrowserAvailable = (_browser) != null; _dashboard_PageBook.showPage((isBrowserAvailable ? _dashboardPage_WithBrowser : _dashboardPage_NoBrowser)); if (!isBrowserAvailable) { return ; } final java.lang.String html = createHTML(); _isBrowserCompleted = false; _browser.setText(html); } 
public void updateIndex() { <BUGS> org.elasticsearch.common.settings.Settings settings = org.elasticsearch.common.settings.ImmutableSettings.settingsBuilder().put("number_of_replicas", 5).build(); <BUGE> org.elasticsearch.action.admin.indices.settings.put.UpdateSettingsResponse updateSettingsResponse = client.admin().indices().prepareUpdateSettings("productindex").setSettings(settings).execute().actionGet(); com.test.java.search.elasticsearch.TestElasticSearch.LOGGER.info(updateSettingsResponse); } 
public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> getRecentVideos(java.lang.Integer pageNo, java.lang.Integer pageSize) { java.util.List<java.util.Map<java.lang.String, java.lang.Object>> result = null; <BUGS> int offset = (pageNo * pageSize) + 1; <BUGE> java.lang.String selectQuery = "SELECT * FROM ( SELECT * FROM v_online_videos ) AS tbl WHERE tbl.sl_no BETWEEN ? AND ? "; result = getJdbcTemplate().query(selectQuery, new java.lang.Object[]{ offset , offset + pageSize }, new org.springframework.jdbc.core.ColumnMapRowMapper()); return result; } 
@java.lang.Override public void onClick(android.view.View view) { johnsmith.haruhi.co.refrigerator.Model.Unit.Item item = itemList.get(position); if (itemList.contains(item)) { <BUGS> listener.onDeleteClick(item.getId()); <BUGE> itemList.remove(position); notifyItemRemoved(position); notifyItemRangeChanged(position, itemList.size()); } } 
public void doSave() { java.lang.System.out.println("CRMController.doSave()"); <BUGS> java.util.ArrayList<java.lang.String> errors = controllers.CRMController.emptyErrors; <BUGE> view.clearFieldErrors(); try { validateForm(); view.formToBean(model.getCurrentBean()); this.getModel().doSave(); currentBeanIsNew = false; view.disableEditMode(); this.refreshView(controllers.CRMController.emptyErrors); view.setMessagesLabel("Record Saved Successfully"); } catch (exceptions.InvalidFormFieldData e) { <BUGS> this.refreshView(errors); <BUGE> } } 
@java.lang.Override public boolean execute(com.intellij.openapi.compiler.CompileContext context) { for (com.intellij.openapi.module.Module module : com.intellij.openapi.module.ModuleManager.getInstance(context.getProject()).getModules()) { com.google.cloud.tools.intellij.jps.model.impl.StackdriverProperties configuration = com.intellij.facet.FacetManager.getInstance(module).getFacetByType(com.google.cloud.tools.intellij.stackdriver.facet.StackdriverFacetType.ID).getConfiguration().getState(); <BUGS> configuration.setCloudSdkPath(com.google.cloud.tools.intellij.appengine.sdk.CloudSdkService.getInstance().getSdkHomePath()); <BUGE> } return true; } 
public static boolean isInteger(java.lang.String str) { java.util.regex.Pattern pattern = java.util.regex.Pattern.compile("^[-\\+]?[\\d]*$"); <BUGS> if ((pattern != null) && ((pattern.matcher(str)) != null)) <BUGE> return pattern.matcher(str).matches(); else return false;  } 
private void getResultsFromApi() { <BUGS> if (!(isGooglePlayServicesAvailable())) { acquireGooglePlayServices(); }else if ((credential.getSelectedAccountName()) == null) { chooseAccount(); }else if (!(isDeviceOnline())) { android.util.Log.i(kelvinycchan.a12googlesheetcheck_insystem.CheckInActivity.TAG, "No network connection available."); android.widget.Toast.makeText(this, "No network connection available.", Toast.LENGTH_LONG).show(); }else { new kelvinycchan.a12googlesheetcheck_insystem.CheckInActivity.MakeRequestTask(credential).execute(); }   <BUGE> } 
public void closeToLeft() { <BUGS> if (viewDragHelper.smoothSlideViewTo(dragView, ((int) (-(transformer.getOriginalWidth()))), ((getHeight()) - (transformer.getMinHeightPlusMargin())))) { <BUGE> android.support.v4.view.ViewCompat.postInvalidateOnAnimation(this); notifyCloseToLeftListener(); } } 
@rest.controller.RequestMapping(value = "/user/", method = RequestMethod.POST) public org.springframework.http.ResponseEntity<java.lang.Void> createUser(@rest.controller.RequestBody rest.model.User user, org.springframework.web.util.UriComponentsBuilder uriComponentsBuilder) { <BUGS> java.lang.System.out.println(("post: " + user)); <BUGE> if (userService.isUserExist(user)) { return new org.springframework.http.ResponseEntity<java.lang.Void>(org.springframework.http.HttpStatus.CONFLICT); } userService.saveUser(user); org.springframework.http.HttpHeaders httpHeaders = new org.springframework.http.HttpHeaders(); httpHeaders.setLocation(uriComponentsBuilder.path("/user/{id}").buildAndExpand(user.getId()).toUri()); return new org.springframework.http.ResponseEntity<java.lang.Void>(httpHeaders, org.springframework.http.HttpStatus.CREATED); } 
public int hamming() { int count = 0; for (int i = 0; i < (N); i++) { for (int j = 0; j < (N); j++) { <BUGS> if ((pieces[i][j]) != (goalValueAt(i, j))) { <BUGE> count++; } } } return count; } 
public void shuffle() { sorted = false; for (int i = (topCard) - 1; i > 0; i--) { <BUGS> int randomPos = ((int) ((java.lang.Math.random()) * (topCard))) + 1; <BUGE> Card temp = cards[i]; cards[i] = cards[randomPos]; cards[randomPos] = temp; } } 
public static void alimentarMatriz(int[][] matriz) { for (int linha = 0; linha < (matriz.length); linha++) { <BUGS> for (int coluna = 0; coluna < 2; coluna++) { <BUGE> java.util.Random random = new java.util.Random(); matriz[linha][coluna] = random.nextInt(11); } } } 
<BUGS> private java.lang.Object getEnumValue(final java.lang.Class<?> enumType, final java.lang.String name) throws java.lang.ReflectiveOperationException { <BUGE> final java.lang.Object result; if (enumType != null) { final java.lang.reflect.Method method = enumType.getDeclaredMethod("valueOf", java.lang.String.class); result = method.invoke(enumType, name); }else { result = null; } return result; } 
public static void setTotals() { <BUGS> com.tanghe.garben.capitalbooze.OrderFragment.mTotalPrice.setText(java.lang.String.format(java.util.Locale.getDefault(), "€%.2f", com.tanghe.garben.capitalbooze.OrderFragment.totalPrice)); <BUGE> com.tanghe.garben.capitalbooze.OrderFragment.mTotalSquares.setText(java.lang.String.format(java.util.Locale.getDefault(), "#%1d", com.tanghe.garben.capitalbooze.OrderFragment.totalSquares)); com.tanghe.garben.capitalbooze.OrderFragment.mTotalCount.setText(java.lang.String.format(java.util.Locale.getDefault(), "%1d", com.tanghe.garben.capitalbooze.OrderFragment.totalCount)); } 
@org.junit.Test public void testCache() throws java.lang.Exception { org.uli.gcb.GuavaCacheKo gc = new org.uli.gcb.GuavaCacheKo(); assertEquals(0, gc.cnt); java.lang.String s = gc.getPair(1, 2); assertEquals(1, gc.cnt); assertEquals("this pair is (1,2) : 1", s); java.lang.String s2 = gc.getPair(2, 3); assertEquals(2, gc.cnt); assertEquals("this pair is (2,3) : 2", s2); <BUGS> java.lang.String s1 = gc.getPair(1, 2); <BUGE> } 
protected static java.lang.String oldFileNameToViewName(java.lang.String fileName) throws com.couchbase.lite.CouchbaseLiteException { <BUGS> if (!(fileName.endsWith(com.couchbase.lite.store.ForestDBViewStore.kViewIndexPathExtension))) throw new com.couchbase.lite.CouchbaseLiteException(com.couchbase.lite.Status.BAD_PARAM);  if (fileName.startsWith(".")) <BUGE> throw new com.couchbase.lite.CouchbaseLiteException(com.couchbase.lite.Status.BAD_PARAM);  java.lang.String viewName = fileName.substring(0, fileName.indexOf(".")); return viewName.replaceAll(":", "/"); } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_course_selection); se.kth.csc.iprog.dinnerplanner.model.DinnerModel model = ((se.kth.csc.iprog.dinnerplanner.android.DinnerPlannerApplication) (this.getApplication())).getModel(); <BUGS> new se.kth.csc.iprog.dinnerplanner.android.view.course.CourseTopView(findViewById(R.id.this_is_course_top_view_id)); <BUGE> new se.kth.csc.iprog.dinnerplanner.android.view.course.TotalCostView(findViewById(R.id.this_is_total_cost_id), model); new se.kth.csc.iprog.dinnerplanner.android.view.course.CourseDownView(findViewById(R.id.this_is_course_down_view_id), model); } 
@java.lang.Override public void onLoadFinished(android.support.v4.content.Loader<android.database.Cursor> loader, android.database.Cursor data) { forecastAdapter.swapCursor(data); if ((selectedPosition) != (android.support.v7.widget.RecyclerView.NO_POSITION)) { recyclerView.smoothScrollToPosition(selectedPosition); android.support.v7.widget.RecyclerView.ViewHolder selectedViewHolder = recyclerView.findViewHolderForAdapterPosition(selectedPosition); <BUGS> if ((selectedViewHolder != null) && (selectedViewHolder instanceof com.example.brett.sunshine.ForecastListItemViewHolder)) { ((com.example.brett.sunshine.ForecastListItemViewHolder) (selectedViewHolder)).onClick(selectedViewHolder.itemView); } <BUGE> } updateEmptyViewStatusText(); } 
private final boolean is7BitClean(org.forgerock.opendj.ldap.ByteSequence value) { <BUGS> byte b; <BUGE> for (int i = 0; i < (value.length()); i++) { <BUGS> b = value.byteAt(i); <BUGE> if ((b & (org.opends.server.plugins.SevenBitCleanPlugin.MASK)) != b) { return false; } } return true; } 
@java.lang.Override public boolean canConfirmOrderOfCart(io.muic.ooc.model.Cart cart) { java.util.Set<io.muic.ooc.model.CartProduct> cartProductSet = cartProductService.findCartProductsByCart(cart); if ((cartProductSet == null) || ((cartProductSet.size()) == 0)) { return false; } <BUGS> cart.setOrderConfirmed(true); cartRepository.save(cart); <BUGE> return true; } 
private java.util.Date parseDateValue(java.lang.String value) { try { if (!(android.text.TextUtils.isEmpty(value))) { <BUGS> return new java.util.Date(java.lang.Long.parseLong(value)); <BUGE> } } catch (java.lang.NumberFormatException e) { timber.log.Timber.e("parseDateValue() - Value is not a number: %s", value); } return null; } 
public model.modelClasses.mainData.BibleChapterModel getBibleChapter(android.content.Context context, int chapterNumber) { this.getBibleChildModels(context); java.util.Collections.sort(this.bibleChapterModels); <BUGS> if (chapterNumber >= (this.bibleChapterModels.size())) { <BUGE> return null; }else { for (model.modelClasses.mainData.BibleChapterModel chapter : bibleChapterModels) { if ((java.lang.Integer.parseInt(chapter.number.trim())) == chapterNumber) { return chapter; } } } return null; } 
@java.lang.Override protected java.lang.Boolean doInBackground(java.lang.String... params) { com.mongodb.MongoClientURI mongoUri = new com.mongodb.MongoClientURI(tasks.CallEvacuationTask.DBAdress); com.mongodb.MongoClient mongoClient = new com.mongodb.MongoClient(mongoUri); com.mongodb.client.MongoDatabase db = mongoClient.getDatabase(mongoUri.getDatabase()); com.mongodb.client.MongoCollection<com.mongodb.BasicDBObject> dbCollection = db.getCollection(tasks.CallEvacuationTask.collectionName, com.mongodb.BasicDBObject.class); <BUGS> boolean result = updateEvac(dbCollection, params[1], params[0]); <BUGE> return result; } 
@java.lang.Override public void actionPerformed(java.awt.event.ActionEvent e) { javax.swing.JFileChooser jfc = new javax.swing.JFileChooser(); int result = jfc.showOpenDialog(view.getFrame()); if (result == (javax.swing.JFileChooser.APPROVE_OPTION)) model.loadPathbaseFile(jfc.getSelectedFile().getAbsolutePath());  <BUGS> center.aggiorna(); <BUGE> } 
<BUGS> protected static org.python.core.PyBuffer getViewOrError(org.python.core.PyObject b) { <BUGE> org.python.core.PyBuffer buffer = org.python.core.BaseBytes.getView(b); if (buffer != null) { return buffer; }else { <BUGS> java.lang.String fmt = "Type %s doesn't support the buffer API"; <BUGE> throw org.python.core.Py.TypeError(java.lang.String.format(fmt, b.getType().fastGetName())); } } 
@java.lang.Override public void onGetDataShareWithFinish(com.owncloud.android.lib.common.operations.RemoteOperationResult result) { ((com.owncloud.android.ui.activity.ShareActivity) (getActivity())).dismissLoadingDialog(); if ((result != null) && (result.isSuccess())) { com.owncloud.android.lib.common.utils.Log_OC.d(com.owncloud.android.ui.fragment.ShareFileFragment.TAG, "Get Data Share With finishes sucessfully"); <BUGS> }else { android.widget.Toast.makeText(getActivity(), result.getLogMessage(), Toast.LENGTH_SHORT).show(); <BUGE> } refreshUsersOrGroupsListFromDB(); } 
@java.lang.SuppressWarnings(value = { "unchecked" , "rawtypes" }) private void addNewGoogleGuavaClasses() { <BUGS> nl.jqno.equalsverifier.internal.ConditionalInstantiator range = new nl.jqno.equalsverifier.internal.ConditionalInstantiator(((nl.jqno.equalsverifier.JavaApiPrefabValues.GUAVA_PACKAGE) + "Range")); <BUGE> addValues(range.resolve(), range.callFactory("open", classes(java.lang.Comparable.class, java.lang.Comparable.class), objects(1, 2)), range.callFactory("open", classes(java.lang.Comparable.class, java.lang.Comparable.class), objects(3, 4))); java.lang.String optional = "com.google.common.base.Optional"; addFactory(classForName(optional), new nl.jqno.equalsverifier.ReflectiveGenericContainerFactory(optional)); } 
public void next() { this.index += 1; int tempIndex = this.index; <BUGS> while (((menu.get(tempIndex).price) >= (this.price)) && ((this.index) < (this.menuSize))) { <BUGE> this.index += 1; tempIndex += 1; } } 
public void click_deleteButton(android.view.View v) { for (int position : win.successlvchao.android.moneypocket.MainActivity.checkedIndexList.keySet()) { mCostBeanList.remove(position); <BUGS> win.successlvchao.android.moneypocket.MainActivity.checkBoxList.remove(position); <BUGE> mDatabaseHelper.deleteSpecificItem(win.successlvchao.android.moneypocket.MainActivity.checkedIndexList.get(position)); } <BUGS> <BUGE> mAdapter.notifyDataSetChanged(); <BUGS> win.successlvchao.android.moneypocket.MainActivity.checkedIndexList.clear(); <BUGE> findViewById(R.id.deleteButton).setVisibility(View.INVISIBLE); findViewById(R.id.cancelButton).setVisibility(View.INVISIBLE); } 
private void findNextTurn() { java.lang.Boolean found = false; nextTurn(); while (!found) { <BUGS> addLog("error6"); <BUGE> if ((!(currentPlayer.getPass())) && (!(currentPlayer.getWon()))) { <BUGS> addLog("found"); <BUGE> found = true; }else { nextTurn(); } } } 
public static java.io.OutputStream getFileOutputSteam(android.content.Context context, java.lang.String fileName, android.net.Uri rootUri, java.lang.String... subDirs) { android.support.v4.provider.DocumentFile parent = ml.puredark.hviewer.utils.DocumentUtil.getDirDocument(context, rootUri, subDirs); if (parent == null) return null;  <BUGS> fileName = android.net.Uri.decode(fileName); <BUGE> android.support.v4.provider.DocumentFile file = parent.findFile(fileName); return ml.puredark.hviewer.utils.DocumentUtil.getFileOutputSteam(context, file.getUri()); } 
protected net.schmizz.concurrent.Promise<net.schmizz.sshj.sftp.Response, net.schmizz.sshj.sftp.SFTPException> asyncWrite(long fileOffset, byte[] data, int off, int len) throws java.io.IOException { <BUGS> return requester.request(newRequest(PacketType.WRITE).putUInt64(fileOffset).putUInt32((len - off)).putRawBytes(data, off, len)); <BUGE> } 
@java.lang.Override public void handleMessage(android.os.Message inputMessage) { org.mobicents.restcomm.android.client.sdk.SignalingMessage message = ((org.mobicents.restcomm.android.client.sdk.SignalingMessage) (inputMessage.obj)); if ((message.type) == (SignalingMessage.MessageType.OPEN_REPLY)) { <BUGS> listener.onOpenReply(message.id, message.successful, message.text); <BUGE> }else if ((message.type) == (SignalingMessage.MessageType.CALL_REPLY)) { }else if ((message.type) == (SignalingMessage.MessageType.CALL_EVENT)) { }   } 
@java.lang.Override public nl.renarj.jasdb.api.properties.Property removeValue(nl.renarj.jasdb.api.properties.Value v) { for (java.util.Iterator i = values.iterator(); i.hasNext();) { if (i.next().equals(v)) { i.remove(); } } <BUGS> validateAndSetCollection(); <BUGE> return this; } 
<BUGS> static java.util.ArrayList<java.lang.Integer> list_numbers_equal_values_col2(org.json.JSONArray ja_equal_words_v, java.lang.String v) { <BUGE> java.util.ArrayList<java.lang.Integer> list_numbers_equal_values = new java.util.ArrayList<>(); for (int i = 0; i < (ja_equal_words_v.length()); i++) { if (ja_equal_words_v.get(i).toString().toLowerCase().equals(v)) { list_numbers_equal_values.add((i + 1)); } } return list_numbers_equal_values; } 
@java.lang.Override public void windowClosing(java.awt.event.WindowEvent windowEvent) { if ((javax.swing.JOptionPane.showConfirmDialog(null, "Wollen sie Speicher und Schließen?", "Wirklich schließen?", javax.swing.JOptionPane.YES_NO_OPTION, javax.swing.JOptionPane.QUESTION_MESSAGE)) == (javax.swing.JOptionPane.YES_OPTION)) { if (save()) { javax.swing.JOptionPane.showMessageDialog(null, "Der Zustand wurde gespeichert.", "Speichern", javax.swing.JOptionPane.INFORMATION_MESSAGE); java.lang.System.exit(0); }else { javax.swing.JOptionPane.showMessageDialog(null, "Fehler beim Speichern", "Speichern", javax.swing.JOptionPane.ERROR_MESSAGE); } <BUGS> <BUGE> } } 
private void checkExistenceOfRequiredTranslations(java.util.Set<java.io.File> filesInResourceBundle) { final java.lang.String fullBundleName = getFullBundleName(filesInResourceBundle); <BUGS> final java.lang.String extension = getFileExtensions()[0]; <BUGE> for (java.lang.String languageCode : requiredTranslations) { <BUGS> final java.lang.String translationFileName = ((fullBundleName + '_') + languageCode) + extension; <BUGE> final boolean missing = com.puppycrawl.tools.checkstyle.checks.TranslationCheck.isMissing(translationFileName, filesInResourceBundle); if (missing) { final java.lang.String missingTranslationFileName = formMissingTranslationName(fullBundleName, languageCode); logMissingTranslation(missingTranslationFileName); } } } 
private xl.playground.algo.tree.BinarySearchTree.Node<Item> addNode(xl.playground.algo.tree.BinarySearchTree.Node<Item> root, Item value) { if (root == null) { return new xl.playground.algo.tree.BinarySearchTree.Node<>(value); } <BUGS> if ((root.value.compareTo(value)) <= 0) { <BUGE> root.left = addNode(root.left, value); }else { root.right = addNode(root.right, value); } root.count = 1 + (countChildren(root)); return root; } 
@java.lang.Override public boolean onRequest(final android.content.Intent request, final android.content.Intent response) { <BUGS> java.lang.String sessionKey = getSessionKey(request); if (sessionKey == null) { org.deviceconnect.android.message.MessageUtils.setInvalidRequestParameterError(response, "Not found sessionKey"); <BUGE> }else { <BUGS> org.deviceconnect.android.event.EventError error = EventManager.INSTANCE.addEvent(request); if (error == (org.deviceconnect.android.event.EventError.NONE)) { setResult(response, DConnectMessage.RESULT_OK); }else { org.deviceconnect.android.message.MessageUtils.setUnknownError(response); } <BUGE> } mLogger.exiting(this.getClass().getName(), "onPutOnPhoto"); return true; } 
public void setTagline() { <BUGS> if ((mMovie.getTagline().length()) != 0) { <BUGE> ((android.widget.TextView) (mRootView.findViewById(R.id.banner_title))).setText((("\"" + (mMovie.getTagline())) + "\"")); } } 
@java.lang.Override public void onClick(android.view.View v) { <BUGS> if ((mCurrentPage) <= (mNumberPages)) { <BUGE> mRightButton.setEnabled(false); mCurrentPage += 1; mImageAdapter.invalidateData(); mPagerAdapter.notifyDataSetChanged(); getAllPopularPhotos(); }else { android.widget.Toast.makeText(getBaseContext(), "Already at last page", Toast.LENGTH_SHORT).show(); } } 
@java.lang.Override public void onFocusChange(android.view.View view, boolean hasFocus) { if (hasFocus) { bottomNavigationBar.hide(); android.util.Log.d("~focus", ((bottomNavigationBar.isHidden()) + "")); }else { android.view.inputmethod.InputMethodManager imm = ((android.view.inputmethod.InputMethodManager) (getActivity().getSystemService(Context.INPUT_METHOD_SERVICE))); imm.hideSoftInputFromWindow(view.getWindowToken(), 0); <BUGS> <BUGE> } } 
public void addLoop() { currentLoop = new ir.cfgraph.Loop(); if ((startingBlock) == null) { currentBlock = startingBlock = currentLoop; }else if ((currentBlock) instanceof ir.cfgraph.ControlFlow) { ir.cfgraph.ControlFlow cf = ((ir.cfgraph.ControlFlow) (currentBlock)); controlFlowStack.push(currentBlock); if (cf.isComplete()) currentBlock.setSuccessor(currentBranch); else <BUGS> cf.addBlock(currentBlock); <BUGE>  }else currentBlock.setSuccessor(currentLoop);   currentBlock = currentLoop; } 
private edu.utsa.fileflow.client.fileflow.VariableAutomaton getValue(edu.utsa.fileflow.client.fileflow.FileFlowAnalysisDomain domain, edu.utsa.fileflow.cfg.FlowPointContext context) { edu.utsa.fileflow.antlr.FileFlowParser.FunctionCallContext ctx = ((edu.utsa.fileflow.antlr.FileFlowParser.FunctionCallContext) (context.getContext())); edu.utsa.fileflow.antlr.FileFlowParser.ValueContext v = ctx.value(0); <BUGS> edu.utsa.fileflow.client.fileflow.VariableAutomaton va; if ((v.Variable()) != null) { va = domain.table.get(v.Variable().getText()); }else { va = new edu.utsa.fileflow.client.fileflow.VariableAutomaton(v.String().getText()); } return va; <BUGE> } 
<BUGS> public void register(org.bukkit.entity.Player player) { int toLevel = this._model.getDonationLevel(0); se.fredsfursten.donationboardplugin.PlayerInfo playerInfo = getOrAddPlayerInfo(player); playerInfo.demoteOrPromote(toLevel); this._knownPlayers.put(player, playerInfo); player.sendMessage(java.lang.String.format("You are currently at perk level %d.", (toLevel + 1))); <BUGE> } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { android.os.StrictMode.ThreadPolicy policy = new android.os.StrictMode.ThreadPolicy.Builder().permitAll().build(); android.os.StrictMode.setThreadPolicy(policy); super.onCreate(savedInstanceState); setContentView(R.layout.activity_scan); integrator = new com.google.zxing.integration.android.IntentIntegrator(this); integrator.setDesiredBarcodeFormats(IntentIntegrator.ONE_D_CODE_TYPES); integrator.setPrompt("Scan a barcode"); <BUGS> <BUGE> integrator.initiateScan(); <BUGS> integrator.setBeepEnabled(true); integrator.setOrientationLocked(false); <BUGE> } 
private void pickPlace() { com.google.android.gms.location.places.ui.PlacePicker.IntentBuilder builder = new com.google.android.gms.location.places.ui.PlacePicker.IntentBuilder(); try { <BUGS> java.lang.System.out.println("before starting act..."); <BUGE> startActivityForResult(builder.build(this), com.arman.horus.activities.AddPlaceActivity.PLACE_PICKER_REQUEST); } catch (com.google.android.gms.common.GooglePlayServicesRepairableException | com.google.android.gms.common.GooglePlayServicesNotAvailableException e) { e.printStackTrace(); android.widget.Toast.makeText(this, e.getMessage(), Toast.LENGTH_LONG).show(); } <BUGS> java.lang.System.out.println("after starting act..."); <BUGE> } 
<BUGS> private data.Vector calculateMeanPoint(java.util.List<? extends data.Data> dataSet) { <BUGE> double[] meanPoint = new double[argumentsCount]; for (data.Data data : dataSet) { for (int i = 0; i < (argumentsCount); i++) { meanPoint[i] += data.getValueAt(i); } } for (int i = 0; i < (argumentsCount); i++) { meanPoint[i] /= dataSet.size(); } <BUGS> return new data.Vector(meanPoint); <BUGE> } 
public static java.lang.Throwable getRootCause(java.lang.Throwable t) { <BUGS> <BUGE> java.lang.Throwable rootCause = t; java.lang.Throwable cause = rootCause.getCause(); while ((cause != null) && (cause != rootCause)) { rootCause = cause; cause = cause.getCause(); } return rootCause; } 
public void testPlayer(java.lang.String player, org.bukkit.command.CommandSender sender) { if (playerOnline(player)) { <BUGS> sender.sendMessage(((((((((((((ChatColor.MAGIC) + "") + (ChatColor.GOLD)) + "aaaaa") + (ChatColor.RED)) + player) + (ChatColor.GOLD)) + "is online!") + (ChatColor.MAGIC)) + "aaaaa") + (ChatColor.GOLD)) + "\nRejoice!")); <BUGE> }else { sender.sendMessage((player + "is not online!")); } } 
@java.lang.Override public void onTriggered() { if ((tilemap) != null) { int[] dims = getNumberPair("Please enter the new dimensions?"); <BUGS> <BUGE> for (int i = 0; i < (tilemap.getLayerCount()); i++) { tilemap.getLayer(i).resize(dims[0], dims[1]); } } } 
public void addNewLevelUpEvent(long buildingID) { com.greenfox.jasper.domain.Building temporaryBuilding = buildingServices.findOneBuilding(((int) (buildingID))); <BUGS> com.greenfox.jasper.services.MainEvent levelUpEvent = new com.greenfox.jasper.services.LevelUpEvent(buildingID, ((java.lang.System.currentTimeMillis()) + (60000 * (calculateBuildingTime(temporaryBuilding.getLevel()))))); <BUGE> mainEventRepo.save(levelUpEvent); } 
public android.view.View getView(int position, android.view.View convertView, android.view.ViewGroup parent) { android.widget.ImageView imageView = new android.widget.ImageView(context); <BUGS> android.graphics.Bitmap ThumbImage = android.media.ThumbnailUtils.extractThumbnail(android.graphics.BitmapFactory.decodeFile(imageIDs.get(position)), 100, 100); <BUGE> imageView.setImageBitmap(ThumbImage); imageView.setLayoutParams(new android.widget.Gallery.LayoutParams(200, 200)); <BUGS> imageView.setBackgroundResource(itemBackground); <BUGE> return imageView; } 
public void removeStatsProvider(org.osgi.framework.ServiceReference<org.inaetics.demonstrator.api.stats.StatsProvider> serviceRef, org.inaetics.demonstrator.api.stats.StatsProvider provider) { if ("true".equals(serviceRef.getProperty("aggregator"))) { m_aggregator = null; } java.lang.String type = "" + (serviceRef.getProperty("type")); if ("processor".equalsIgnoreCase(type)) { m_processorCount.decrementAndGet(); }else if ("producer".equalsIgnoreCase(type)) { m_producerCount.decrementAndGet(); }  m_providerStats.remove(serviceRef); <BUGS> log(("added statsprovider of type " + type)); <BUGE> } 
public java.util.ArrayList<java.lang.String> getTables() { <BUGS> <BUGE> java.util.ArrayList<ragnardb.parser.ast.TableOrSubquery> tables = _primary.getTablesAndSubqueries(); java.util.ArrayList<java.lang.String> out = new java.util.ArrayList<>(); for (ragnardb.parser.ast.TableOrSubquery table : tables) { out.add(table.getName()); } return out; } 
public java.lang.String parseStepsHash() { java.lang.String outputString = ""; for (java.lang.String term : steps.keySet()) { <BUGS> java.lang.Integer value = steps.get(term); java.lang.String lineToAdd = ((((("\"" + term) + "\"") + ": ") + (value.toString())) + ",") + "\n"; <BUGE> outputString = outputString + lineToAdd; } return outputString; } 
@java.lang.Override <BUGS> public void onAttach(android.app.Activity activity) { super.onAttach(activity); <BUGE> try { <BUGS> this.listener = ((com.urbanairship.richpush.sample.inbox.AbstractInboxFragment.Listener) (activity)); <BUGE> } catch (java.lang.ClassCastException e) { throw new java.lang.IllegalStateException(("Activities using AbstractInboxFragment must implement " + "the AbstractInboxFragment.Listener interface.")); } } 
public void start() { if (!(mRunning)) { <BUGS> <BUGE> mRunning = true; <BUGS> android.util.Log.i(ch.logixisland.anuto.game.GameEngine.TAG, "Starting game loop"); mGameThread = new android.os.HandlerThread("GameThread-0"); mGameThread.start(); mGameHandler = new android.os.Handler(mGameThread.getLooper()); <BUGE> mGameHandler.post(new java.lang.Runnable() { @java.lang.Override public void run() { tick(); } }); } } 
public static void printPlainMessage(objects.PlainMessage message) { java.lang.System.out.println(); java.lang.System.out.println(message.getMessageText()); java.lang.System.out.println(java.util.Arrays.toString(message.getMessageDecimalArray())); <BUGS> java.lang.System.out.println(message.getMessageDecimal()); <BUGE> java.lang.System.out.println(message.getMessageHex()); java.lang.System.out.println(message.getMessageBinary()); } 
@java.lang.Override public void onDateSet(android.widget.DatePicker view, int year, int monthOfYear, int dayOfMonth) { <BUGS> dates = ((((java.lang.Integer.toString(year)) + "/") + (java.lang.Integer.toString(monthOfYear))) + "/") + (java.lang.Integer.toString(dayOfMonth)); <BUGE> } 
protected sentimentAnalysis.ScoreNode getNode(edu.emory.clir.clearnlp.dependency.DEPNode node, java.util.Map<java.lang.String, java.lang.Double> map) { double score = 0; double intensity = getIntensity(node); if (map.containsKey(node.getLemma())) { score = map.get(node.getLemma()); } sentimentAnalysis.ScoreNode sNode = new sentimentAnalysis.ScoreNode(node.getLemma(), score, intensity); <BUGS> depScoreMap.put(node, sNode); <BUGE> return sNode; } 
protected org.apache.ignite.configuration.CacheConfiguration cacheConfiguration(@org.jetbrains.annotations.NotNull <BUGS> java.lang.String name, java.lang.Class<?> clsK, java.lang.Class<?> clsV) { <BUGE> org.apache.ignite.configuration.CacheConfiguration<?, ?> cache = defaultCacheConfiguration(); cache.setName(name); cache.setCacheMode(org.apache.ignite.cache.CacheMode.PARTITIONED); cache.setBackups(1); cache.setWriteSynchronizationMode(org.apache.ignite.cache.CacheWriteSynchronizationMode.FULL_SYNC); cache.setAtomicityMode(org.apache.ignite.cache.CacheAtomicityMode.TRANSACTIONAL); <BUGS> cache.setIndexedTypes(clsK, clsV); <BUGE> return cache; } 
<BUGS> private static java.util.Optional<edu.cwru.eecs.clipper.Models.UserAccount> convertToUserAccount(org.bson.Document result) { <BUGE> java.util.Optional<edu.cwru.eecs.clipper.Models.UserAccount> userAccountOptional = java.util.Optional.empty(); <BUGS> if ((result != null) && (!(result.getBoolean("isDeleted")))) { <BUGE> edu.cwru.eecs.clipper.Models.UserAccount userAccount = edu.cwru.eecs.clipper.DataManagers.UserAccountDataManager.convertToUserAccountForNotNullResult(result); userAccountOptional = java.util.Optional.of(userAccount); } return userAccountOptional; } 
protected static java.lang.String getBNpos_ro(java.util.Map<java.lang.String, it.uniroma1.lcl.babelnet.data.BabelPOS> posMapping, java.lang.String pos) { java.lang.String pos5chars = ""; if ((pos.length()) > 1) { pos5chars = pos.substring(0, 5); }else { return null; } it.uniroma1.lcl.babelnet.data.BabelPOS bnPos = posMapping.get(pos5chars.toUpperCase()); <BUGS> return bnPos.toString(); <BUGE> } 
public void setNetworkProperties(java.util.Collection<org.ndexbio.model.object.NdexPropertyValuePair> properties, java.util.Collection<org.ndexbio.model.object.SimplePropertyValuePair> presentationProperties) { if (properties != null) { this.network.getProperties().addAll(properties); <BUGS> this.networkDoc.field(NdexClasses.ndexProperties, this.network.getProperties()).save(); <BUGE> } } 
@java.lang.Override public void onInitViewContent() { super.onInitViewContent(); <BUGS> addProfileFieldForDetailsPage(caseRegisterPresenter.getFields()); <BUGE> formSwitcher.setText(R.string.show_more_details); if (((org.unicef.rapidreg.base.record.RecordActivity) (getActivity())).getCurrentFeature().isDetailMode()) { editButton.setVisibility(View.VISIBLE); } } 
public java.util.List<org.egov.works.models.masters.ScheduleOfRate> getSORList() { if (((estimateId) != null) && ((estimateDate) != null)) <BUGS> return scheduleOfRateService.getScheduleOfRatesByCodeAndScheduleOfCategories(query, scheduleCategoryId.toString()); <BUGE> else if ((estimateDate) != null) <BUGS> return scheduleOfRateService.getScheduleOfRatesByCodeAndScheduleOfCategories(query, scheduleCategoryId.toString()); <BUGE> else <BUGS> return scheduleOfRateService.getScheduleOfRatesByCodeAndScheduleOfCategories(query, scheduleCategoryId.toString()); <BUGE>   } 
@org.junit.BeforeClass public static void setUpClass() { org.holodeckb2b.integ.OutFlowIT.itHelper = new org.holodeckb2b.integ.ITHelper(); org.holodeckb2b.integ.OutFlowIT.itHelper.unzipHolodeckDistribution(org.holodeckb2b.integ.OutFlowIT.dADirName); org.holodeckb2b.integ.OutFlowIT.itHelper.unzipHolodeckDistribution(org.holodeckb2b.integ.OutFlowIT.dBDirName); <BUGS> org.holodeckb2b.integ.OutFlowIT.itHelper.createDataMsgDirs(org.holodeckb2b.integ.OutFlowIT.dADirName); org.holodeckb2b.integ.OutFlowIT.itHelper.createDataMsgDirs(org.holodeckb2b.integ.OutFlowIT.dBDirName); <BUGE> org.holodeckb2b.integ.OutFlowIT.itHelper.copyPModeDescriptor(org.holodeckb2b.integ.OutFlowIT.dADirName, "ex-pm-push-init.xml"); org.holodeckb2b.integ.OutFlowIT.itHelper.copyPModeDescriptor(org.holodeckb2b.integ.OutFlowIT.dBDirName, "ex-pm-push-resp.xml"); org.holodeckb2b.integ.OutFlowIT.itHelper.modifyAxisServerPort(org.holodeckb2b.integ.OutFlowIT.dBDirName, "9090"); org.holodeckb2b.integ.OutFlowIT.itHelper.startHolodeckB2BInstances(org.holodeckb2b.integ.OutFlowIT.dADirName, org.holodeckb2b.integ.OutFlowIT.dBDirName); org.holodeckb2b.integ.OutFlowIT.itHelper.copyExampleDataToMsgOutDir(org.holodeckb2b.integ.OutFlowIT.dADirName); } 
@java.lang.Override public void onCheckedChanged(android.widget.RadioGroup group, int checkedId) { int selected = ((android.widget.RadioGroup) (findViewById(R.id.createMatchRadioGroupLevel))).getCheckedRadioButtonId(); if (selected == (R.id.createMatchRadioButtonJunior)) { radioGroupLevelSelection = 1; }else if (selected == (R.id.createMatchRadioButtonSenior)) { radioGroupLevelSelection = 2; }  <BUGS> alloc.setLevel(radioGroupLevelSelection); filterAndRefresh(); <BUGE> } 
public boolean compare(double avgT, double devT, double minT, double maxT) { <BUGS> if (((((avgTemp) == avgT) && ((devTemp) == devT)) && ((minTemp) == minT)) && ((maxTemp) == maxT)) return true > ((origin) / (master));  <BUGE> return false; } 
private int getMove(com.rijul.game.core.Board board) { java.lang.String boardAsString = getBoardAsString(board); <BUGS> if ((playerNumber) == 1) { if (boardAsString.equals(com.rijul.game.app.player.impl.Bot.INITIAL_BOARD)) { int ind = random.nextInt(com.rijul.game.app.player.impl.Bot.INITIAL_MOVES.length); return com.rijul.game.app.player.impl.Bot.INITIAL_MOVES[ind]; } getOptimalResultForBoardPosition(board, 1); }else { getOptimalResultForBoardPosition(board, 2); <BUGE> } <BUGS> <BUGE> return optimalMoveFromBoardPosition.get(boardAsString); } 
@java.lang.Override public void calculateRedpacksPrize(cn.wisdom.lottery.dao.vo.Lottery lottery) { if (cn.wisdom.lottery.common.utils.CollectionUtils.isNotEmpty(lottery.getRedpacks())) { int totalBonus = lottery.getPeriods().get(0).getPrizeBonus(); <BUGS> int bonus = 0; <BUGE> for (cn.wisdom.lottery.dao.vo.LotteryRedpack lotteryRedpack : lottery.getRedpacks()) { bonus = (totalBonus * (lotteryRedpack.getRate())) / 100; lotteryRedpack.setPrizeBonus(bonus); } } } 
private void passMessagesToLeaves(int i) { node.Node from = getNodeFromId(i); if (from.isLeaf()) { from = from.getNeighborList().get(0); } <BUGS> java.lang.System.out.println(("root " + (from.getNodeName()))); <BUGE> for (node.Node to : from.getNeighborList()) { from.passMessageTo(to); passMessagesToLeaves2(to, from); } } 
public java.util.List<org.neo4j.data.generator.domains.medicalrecords.encounters.Encounter> encountersSince(org.joda.time.LocalDate dateOfBirth) { java.util.ArrayList<org.neo4j.data.generator.domains.medicalrecords.encounters.Encounter> encounters = new java.util.ArrayList<org.neo4j.data.generator.domains.medicalrecords.encounters.Encounter>(); org.joda.time.LocalDate currentDate = dateOfBirth; org.joda.time.LocalDate today = new org.joda.time.LocalDate(); while (currentDate.isBefore(today)) { <BUGS> encounters.add(encounterGenerator.nextEncounter(today)); <BUGE> currentDate = currentDate.plusDays(((int) (((java.lang.Math.random()) * 365) * (org.neo4j.data.generator.domains.medicalrecords.encounters.EncounterSequenceGenerator.MAX_YEARS_BETWEEN_ENCOUNTERS)))); } return encounters; } 
@org.junit.Test public void testUnknownTableJobGetsRemoved() throws java.lang.Exception { execute("set global stats.enabled=true"); ensureYellow(); try { execute("select * from foobar"); } catch (io.crate.action.sql.SQLActionException e) { assertEquals(e.getMessage(), "Table 'foobar' unknown"); <BUGS> <BUGE> } <BUGS> execute("select * from sys.jobs"); assertEquals(response.rowCount(), 1L); execute("reset global stats.enabled"); <BUGE> } 
private void setMediaSessionMetaData() { <BUGS> <BUGE> android.support.v4.media.MediaMetadataCompat.Builder builder = new android.support.v4.media.MediaMetadataCompat.Builder().putString(MediaMetadataCompat.METADATA_KEY_ARTIST, metaDataArtist).putString(MediaMetadataCompat.METADATA_KEY_ALBUM, metaDataAlbum).putString(MediaMetadataCompat.METADATA_KEY_TITLE, metaDataTitle).putBitmap(MediaMetadataCompat.METADATA_KEY_ALBUM_ART, android.graphics.BitmapFactory.decodeResource(getResources(), R.drawable.icon)); if ((textInterface) != null) { builder.putLong(MediaMetadataCompat.METADATA_KEY_DURATION, textInterface.getTotalDuration()); } mediaSession.setMetadata(builder.build()); } 
private void captureTerritory(gottesman.risk.Player activePlayer, gottesman.risk.Territory selectedTerritory, gottesman.risk.map.TerritoryView territoryView, gottesman.risk.Territory territory) { int battalionNum = java.lang.Integer.parseInt(javax.swing.JOptionPane.showInputDialog(null, "Enter the amount of battalions you would like to move.")); if (battalionNum >= (selectedTerritory.getBattalions())) { javax.swing.JOptionPane.showMessageDialog(selectedTerritoryView, "Cannot move this amount of battalions. Try again."); <BUGS> <BUGE> }else { territory.occupy(activePlayer); selectedTerritory.moveBattalionsTo(territory, battalionNum); } selectedTerritoryView.repaint(); territoryView.repaint(); selectTerritory(territoryView); } 
@java.lang.Override protected void reloadForSearch(boolean finalTouch) { if ((mAdapter) == null) { return ; } try { final int sD = mData.length; for (int i = 0; i < sD; ++i) { <BUGS> if (!((mData[i]) instanceof ds.framework.v4.data.AbsRecyclerViewData)) { break; <BUGE> } <BUGS> invalidateData(i); <BUGE> } loadDataAndDisplay(); } catch (java.lang.Throwable e) { ds.framework.v4.common.Debug.logException(e); } } 
@java.lang.Override protected java.lang.Exception doInBackground(de.geeksfactory.opacclient.objects.Account... params) { try { de.geeksfactory.opacclient.apis.OpacApi api = ((de.geeksfactory.opacclient.OpacClient) (getApplication())).getNewApi(lib); <BUGS> <BUGE> api.checkAccountData(account); } catch (java.io.IOException e) { return e; } catch (org.json.JSONException e) { return e; } catch (de.geeksfactory.opacclient.apis.OpacApi.OpacErrorException e) { return e; } return null; } 
private boolean isTaskRequired(com.emc.storageos.db.client.model.Volume rpVolume, com.emc.storageos.volumecontroller.impl.utils.VirtualPoolCapabilityValuesWrapper capabilities, boolean vplex, com.emc.storageos.model.TaskList taskList) { boolean rpNonVplexSourceVolume = (Volume.PersonalityTypes.SOURCE.name().equals(rpVolume.getPersonality())) && (!vplex); boolean addJournalVolume = capabilities.getAddJournalCapacity(); boolean notAlreadyInTaskList = (com.emc.storageos.api.service.impl.placement.StorageScheduler.getPrecreatedVolume(_dbClient, taskList, rpVolume.getLabel())) == null; <BUGS> boolean createTask = (rpNonVplexSourceVolume || addJournalVolume) || notAlreadyInTaskList; <BUGE> return createTask; } 
@java.lang.Override public void tick(kcl.teamIndexZero.traffic.simulator.data.SimulationTick tick) { CurrentDate = (new java.util.Date().getTime()) / 1000; if (((CurrentDate) - (lastChange)) > (timer)) { <BUGS> modelSet.changeColour(model, model.currentState); lastChange = CurrentDate; <BUGE> } } 
@java.lang.Override public boolean onKey(android.view.View v, int keyCode, android.view.KeyEvent event) { if ((event.getAction()) == (android.view.KeyEvent.ACTION_DOWN)) { <BUGS> if (keyCode == (android.view.KeyEvent.KEYCODE_ENTER)) { rightGuess(); return true; <BUGE> } } return false; } 
private void handleIntent(android.content.Intent intent) { if (Intent.ACTION_SEARCH.equals(intent.getAction())) { java.lang.String query = intent.getStringExtra(SearchManager.QUERY); <BUGS> android.database.Cursor cursor = com.example.adao1.project2.DatabaseHelper.getInstance(this).getShop(query); <BUGE> searchCursorAdapter.swapCursor(cursor); searchCursorAdapter.notifyDataSetChanged(); } } 
public java.lang.String optionsToString() { java.lang.StringBuilder b = new java.lang.StringBuilder(); b.append(index).append("\n"); b.append(heightLevel).append("\n"); b.append(oceanLevel).append("\n"); b.append(getOceanReplacement()).append("\n"); <BUGS> b.append(cloudLevel); <BUGE> b.append((geostrataGen ? 1 : 0)); return b.toString(); } 
public com.emc.hpux.model.HpuxVersion getHpuxMinimumVersion(boolean forceLookup) { <BUGS> if (forceLookup || ((aixVersion) == null)) { <BUGE> java.lang.String versionProp = this.getSysProperty(com.emc.storageos.computesystemcontroller.impl.ComputeSystemDiscoveryVersionValidator.HPUX_MIN_PROP); if (isValidVersionNumber(versionProp)) { hpuxVersion = new com.emc.hpux.model.HpuxVersion(versionProp); }else { hpuxVersion = null; throw new java.lang.IllegalStateException(java.lang.String.format("System property for HPUX Version Number(%s) is invalid - value is '%s'", com.emc.storageos.computesystemcontroller.impl.ComputeSystemDiscoveryVersionValidator.HPUX_MIN_PROP, versionProp)); } } return hpuxVersion; } 
public void inverseClicked(android.view.View v) { android.widget.TextView textView2 = ((android.widget.TextView) (findViewById(R.id.textView2))); tempNum = java.lang.Double.parseDouble(textView2.getText().toString()); tempNum = (tempNum) * (-1); <BUGS> textView2.setText(((textView2 + "|") + (java.lang.String.valueOf(tempNum)))); <BUGE> } 
@org.junit.Test public void testResultReturnsModelAndView() throws java.lang.Exception { org.springframework.mock.web.MockHttpSession session = new org.springframework.mock.web.MockHttpSession(); <BUGS> org.springframework.web.servlet.ModelAndView actual = portal.result(session, "", "", ""); <BUGE> org.junit.Assert.assertEquals("result", actual.getViewName()); org.junit.Assert.assertEquals(null, actual.getModel().get("themes")); org.junit.Assert.assertEquals("", actual.getModel().get("query")); } 
@java.lang.Override public void run() { if ((getAudioService()) != null) { <BUGS> setMilliseconds((((drawSurfaceWidth / (getAudioService().getSampleRate())) * 1000) / 2)); <BUGE> } setMillivolts(((((((float) (drawSurfaceHeight)) / 4.0F) / 24.5F) / 1000) * (com.backyardbrains.utils.BYBConstants.millivoltScale))); } 
<BUGS> private void refreshUser() { <BUGE> mUser = mSession.getDataHandler().getStore().getUser(mMemberId); if (null == (mUser)) { mUser = new org.matrix.androidsdk.rest.model.User(); mUser.user_id = mMemberId; mUser.displayname = getIntent().getStringExtra(im.vector.activity.VectorMemberDetailsActivity.EXTRA_MEMBER_DISPLAY_NAME); if (android.text.TextUtils.isEmpty(mUser.displayname)) { mUser.displayname = mMemberId; } mUser.avatar_url = getIntent().getStringExtra(im.vector.activity.VectorMemberDetailsActivity.EXTRA_MEMBER_AVATAR_URL); <BUGS> <BUGE> } <BUGS> <BUGE> } 
private boolean validateQuantity() { int quantity = java.lang.Integer.valueOf(subgroupsQuantity.getText().toString()); if (quantity > (getMaximumQuantity())) { <BUGS> subgroupsQuantityLayout.setError(getString(R.string.nwinners_msg_validate_quantity, group.getItemCount())); <BUGE> requestFocus(subgroupsQuantity); return false; } return true; } 
@java.lang.Override public void run() { try { mSocket = new java.net.Socket("117.34.105.157", 19527); mSocket.setKeepAlive(true); <BUGS> mSocket.setSoTimeout(10); <BUGE> mBufferedReader = new java.io.BufferedReader(new java.io.InputStreamReader(mSocket.getInputStream())); mOutputStream = mSocket.getOutputStream(); startReadThread(); writeDataToServer(); } catch (java.net.SocketTimeoutException e) { } catch (java.io.IOException e) { } } 
@java.lang.Override public void onRequestPermissionsResult(int requestCode, @android.support.annotation.NonNull java.lang.String[] permissions, @android.support.annotation.NonNull int[] grantResults) { com.iven.i7helper.util.LocationUtil lu = com.iven.i7helper.util.LocationUtil.getLocationUtil(); switch (requestCode) { case 1 : if ((grantResults.length) > 0) { for (int i : grantResults) { if (i != (android.content.pm.PackageManager.PERMISSION_GRANTED)) { com.iven.i7helper.util.ToolUtil.showMessage(this, "不给权限会导致记录不准确"); return ; } } <BUGS> <BUGE> } <BUGS> lu.requestLocation(); <BUGE> break; default : } } 
private java.util.List<java.lang.String> pick(java.util.HashMap<java.lang.String, java.lang.Integer> map, int n) { wedt.finder.ActualWikiFinder.ValueComparator bvc = new wedt.finder.ActualWikiFinder.ValueComparator(map); java.util.TreeMap<java.lang.String, java.lang.Integer> sorted = new java.util.TreeMap<>(bvc); sorted.putAll(map); java.util.ArrayList<java.lang.String> keys = new java.util.ArrayList<>(); keys.addAll(sorted.keySet()); <BUGS> return keys.subList(0, n); <BUGE> } 
public java.lang.String addDev(objects.Device dev) { java.sql.PreparedStatement stmt = null; java.sql.Connection conn = null; java.lang.String sql = "INSERT INTO network " + "VALUES (?, '?', '?')"; try { conn = getConnection(); <BUGS> <BUGE> } catch (java.sql.SQLException e) { return new java.lang.String(e.getMessage()); } catch (java.net.URISyntaxException e) { return new java.lang.String(e.getMessage()); } return "MADE IT"; } 
public static boolean inBounds(int[][] array, int r, int c) { <BUGS> return ((r > 0) && (r < (array.length))) && ((c > 0) && (c < (array[r].length))); <BUGE> } 
private void updateLength() { <BUGS> int newLength = 0; <BUGE> for (net.decix.jipfix.header.TemplateRecord template : templateRecords) { newLength += template.getLength(); } for (net.decix.jipfix.header.OptionTemplateRecord optionTemplate : optionTemplateRecords) { newLength += optionTemplate.getLength(); } for (net.decix.jipfix.header.DataRecord record : dataRecords) { <BUGS> newLength = record.getLength(); <BUGE> } <BUGS> this.length = newLength + (net.decix.jipfix.header.SetHeader.HEADERLENGTH); <BUGE> } 
<BUGS> private static java.lang.String loadECoreFile(java.lang.String name) throws java.lang.Exception { java.lang.String filename = cruise.umple.compiler.UmpleImportTest.getAbsFile(name); assertTrue(new java.io.File(filename).exists()); <BUGE> cruise.umple.compiler.EcoreImportHandler handler = new cruise.umple.compiler.EcoreImportHandler(); <BUGS> cruise.umple.compiler.UmpleImportModel umple = handler.readDataFromXML(filename); <BUGE> return umple.generateUmple(); } 
public static java.util.List<com.teinproductions.tein.papyrosprogress.Milestone> getMilestones(java.lang.String json) throws java.text.ParseException, org.json.JSONException { org.json.JSONArray jArray = new org.json.JSONArray(json); java.util.List<com.teinproductions.tein.papyrosprogress.Milestone> result = new java.util.ArrayList<>(); <BUGS> for (int i = 0; i < (result.size()); i++) { <BUGE> result.add(com.teinproductions.tein.papyrosprogress.JSONUtils.getMilestone(jArray.getJSONObject(i))); } return result; } 
public static void addPlayer(java.lang.String name) { reachForTheTop.IO.createOutputFile((("Scores\\" + name) + ".reach")); reachForTheTop.IO.println("times played: 0"); reachForTheTop.IO.println("total: 0"); reachForTheTop.IO.closeOutputFile(); reachForTheTop.IO.createOutputFile("Scores\\names.txt", true); <BUGS> reachForTheTop.IO.print(""); <BUGE> reachForTheTop.IO.println(name); reachForTheTop.IO.closeOutputFile(); } 
public void poll() { try { <BUGS> <BUGE> scanDirectory(outboxDir); <BUGS> updateTracking(); <BUGE> } catch (org.openas2.OpenAS2Exception oae) { oae.terminate(); } catch (java.lang.Exception e) { logger.error(("Unexpected error occurred polling directory for files to send: " + (outboxDir)), e); } } 
@java.lang.Override public void start() { scenes.WorldScene.WorldSystem.NPC n = ((scenes.WorldScene.WorldSystem.WorldSystem) (parent)).activeNPC; java.awt.FontMetrics fm = javax.swing.JFrame.getFrames()[0].getGraphics().getFontMetrics(); dialog = engine.StringUtils.wrap(n.getDialog(), fm, ((engine.ContentPanel.INTERNAL_RES_W) - 10)).toArray(new java.lang.String[]{  }); index = 0; <BUGS> java.lang.System.out.println(org.ini4j.jdk14.edu.emory.mathcs.backport.java.util.Arrays.toString(dialog)); <BUGE> } 
public boolean createNamedTerminal(java.lang.String caption) { if (org.rstudio.core.client.StringUtil.isNullOrEmpty(caption)) { createNewTerminal(); return true; } if (!(isCaptionAvailable(caption))) { return false; } <BUGS> startTerminal(nextTerminalSequence(), null, caption, null, true, ConsoleProcessInfo.DEFAULT_COLS, ConsoleProcessInfo.DEFAULT_ROWS, TerminalShellInfo.SHELL_DEFAULT); <BUGE> return true; } 
public void writeToFile() throws java.io.IOException { currentCollection = modelCol.getCollection(); <BUGS> skrivFil1 = new java.io.FileWriter(selectedCollection, true); <BUGE> java.io.BufferedWriter writer = new java.io.BufferedWriter(skrivFil1); java.io.PrintWriter printer = new java.io.PrintWriter(writer); for (Item i : currentCollection) { java.lang.String s = i.toString(); printer.println(s); } if (currentCollection.isEmpty()) { skrivFil1 = new java.io.FileWriter(selectedCollection); } printer.close(); } 
public void afterPropertiesSet() throws java.lang.Exception { int roundId = getRoundId(); if (roundId < 1) { return ; } <BUGS> round = org.powertac.tournament.beans.Round.getRoundFromId(roundId, true); <BUGE> loadRoundInfo(); loadParticipantInfo(); loadCsvLinks(); loadMaps(); } 
<BUGS> private boolean isEnabled(java.lang.String pkgName) { <BUGE> java.lang.String mode = tw.fatminmin.xposed.minminguard.Main.pref.getString(Common.KEY_MODE, Common.VALUE_MODE_BLACKLIST); if (mode.equals(Common.VALUE_MODE_AUTO)) { return true; }else if (mode.equals(Common.VALUE_MODE_BLACKLIST)) { return tw.fatminmin.xposed.minminguard.Main.pref.getBoolean(pkgName, false); }else { <BUGS> if (pkgName.equals("com.google.android.gms")) return true;  <BUGE> return !(tw.fatminmin.xposed.minminguard.Main.pref.getBoolean(tw.fatminmin.xposed.minminguard.Common.getWhiteListKey(pkgName), false)); }  } 
@java.lang.Override protected java.lang.Boolean doInBackground(java.lang.Void... params) { com.cs3235.door.doorlockandroid.login.IvleLoginManager ivleLoginManager = new com.cs3235.door.doorlockandroid.login.IvleLoginManager(httpManager); com.cs3235.door.doorlockandroid.login.IvleLoginManager.IvleLoginResult ivleResult = ivleLoginManager.loginToIvle(mEmail, mPassword); if (!(ivleResult.successful)) { errorMessage = ivleResult.failureMessage; return false; } com.cs3235.door.doorlockandroid.login.SmartphoneCardLoginManager smartphoneCardManager = new com.cs3235.door.doorlockandroid.login.SmartphoneCardLoginManager(httpManager, getPhoneUuid()); com.cs3235.door.doorlockandroid.login.SmartphoneCardLoginManager.SmartphoneCardLoginResult smartphoneDoorResult = smartphoneCardManager.loginToSmartphoneCardSystem(ivleResult.user); if (!(smartphoneDoorResult.successful)) { errorMessage = smartphoneDoorResult.failureMessage; <BUGS> <BUGE> } loggedInUser = smartphoneDoorResult.user; return true; } 
public void checkAttributeValue(cz.metacentrum.perun.core.api.PerunSession sess, cz.metacentrum.perun.core.api.Member member, cz.metacentrum.perun.core.api.Attribute attribute) throws cz.metacentrum.perun.core.api.exceptions.InternalErrorException, cz.metacentrum.perun.core.api.exceptions.WrongAttributeValueException, cz.metacentrum.perun.core.api.exceptions.WrongReferenceAttributeValueException { cz.metacentrum.perun.core.implApi.modules.attributes.MemberAttributesModuleImplApi attributeModule = getMemberAttributeModule(sess, attribute); if (attributeModule == null) return ;  try { attributeModule.checkAttributeValue(((cz.metacentrum.perun.core.impl.PerunSessionImpl) (sess)), member, attribute); } catch (cz.metacentrum.perun.core.api.exceptions.WrongAttributeAssignmentException ex) { throw new cz.metacentrum.perun.core.api.exceptions.InternalErrorException(ex); <BUGS> } catch (cz.metacentrum.perun.core.api.exceptions.WrongReferenceAttributeValueException ex) { throw new cz.metacentrum.perun.core.api.exceptions.InternalErrorException(ex); <BUGE> } } 
@java.lang.Override public void doWithLockNoResult() { if (!(sdSvc.isActiveService(service))) { return ; } java.util.List<io.cattle.platform.servicediscovery.deployment.impl.DeploymentUnit> units = unitInstanceFactory.collectDeploymentUnits(services, new io.cattle.platform.servicediscovery.deployment.impl.DeploymentManagerImpl.DeploymentServiceContext()); <BUGS> io.cattle.platform.servicediscovery.deployment.ServiceDeploymentPlanner planner = deploymentPlannerFactory.createServiceDeploymentPlanner(services, units, new io.cattle.platform.servicediscovery.deployment.impl.DeploymentManagerImpl.DeploymentServiceContext()); boolean needToReconcile = needToReconcile(services, units, planner); <BUGE> if (!needToReconcile) { return ; } activateServices(service, services); <BUGS> activateDeploymentUnits(services, units, planner); <BUGE> } 
@java.lang.Override public void onTick(net.frozenbit.plugin5zig.cubecraft.gamemodes.DuelsGameMode gameMode) { <BUGS> <BUGE> if ((gameMode.getState()) != (eu.the5zig.mod.server.GameState.LOBBY)) { (timer)++; if (((timer) % (net.frozenbit.plugin5zig.cubecraft.listeners.DuelsListener.OPPONENT_UPDATE_INTERVAL)) == 0) { updateOpponentInfo(gameMode); } } } 
@java.lang.Override public void onClick(android.view.View v) { switch (v.getId()) { case R.id.tvCensusForms : android.content.Intent categoryIntent = new android.content.Intent(this, com.example.knbs.censusapp.CategoryActivity.class); startActivity(categoryIntent); break; case R.id.tvEnumID : android.content.Intent enumeratorID = new android.content.Intent(this, com.example.knbs.censusapp.EnumeratorIDActivity.class); startActivity(enumeratorID); break; case R.id.tvTaskList : android.content.Intent taskList = new android.content.Intent(this, com.example.knbs.censusapp.TaskLIstActivity.class); startActivity(taskList); <BUGS> <BUGE> default : android.util.Log.i("DEFAULT ONCLICK OPT", "This is default switch mode"); break; } } 
private void handleIntent(android.content.Intent intent) { final int configScreenId = intent.getIntExtra(org.droidplanner.android.activities.ConfigurationActivity.EXTRA_CONFIG_SCREEN_ID, mConfigScreenId); final android.support.v4.app.Fragment currentFragment = getCurrentFragment(); if ((currentFragment == null) || ((getIdForFragment(currentFragment)) != configScreenId)) { <BUGS> if (currentFragment instanceof org.droidplanner.android.activities.ConfigurationActivity.ConfigurationScreen) { ((org.droidplanner.android.activities.ConfigurationActivity.ConfigurationScreen) (currentFragment)).onConfigurationReplaced(); } <BUGE> mConfigScreenId = configScreenId; getSupportFragmentManager().beginTransaction().replace(R.id.configuration_screen, getFragmentForId(configScreenId)).commit(); } } 
public void usePotion() { <BUGS> for (int i = 2; i < (this.potions.length); i--) { <BUGE> if ((this.potions[i]) != null) { heal(50); this.potions[i] = null; return ; } } } 
public static void main(java.lang.String[] args) { <BUGS> char letter = 'a'; <BUGE> int a; final int MIN = 65; final int MAX = 122; final int STOPLINE1 = 85; final int STOPLINE2 = 122; <BUGS> for (a = MIN; a <= MAX; a++) <BUGE> letter = ((char) (a)); <BUGS>  java.lang.System.out.print(("  " + letter)); if ((a == STOPLINE1) || (a == STOPLINE2)) java.lang.System.out.println();  <BUGE> java.lang.System.out.println("\nEnd of application"); } 
private void setSPenToolActionWithAllCanvases(int toolAction) { for (int i = 0; i < (numWritableCharBoxCols); i++) { for (int j = 0; j < (numCharBoxesInCol); j++) { <BUGS> if (mCharBoxes[i][j].isActivated()) { mCharBoxes[i][j].setToolTypeAction(SpenSurfaceView.TOOL_SPEN, toolAction); } <BUGE> } } return ; } 
private void deleteSelected() { java.util.Map<ru.sukharev.pathtracker.utils.orm.MapPath, java.lang.Boolean> map = mAdapter.getCheckedMap(); <BUGS> try { for (ru.sukharev.pathtracker.utils.orm.MapPath path : map.keySet()) { if (map.get(path)) { deletePathFromDatabase(path); mAdapter.remove(path); } <BUGE> } <BUGS> } catch (java.sql.SQLException e) { android.widget.Toast.makeText(getContext(), getString(R.string.error_delete_path), Toast.LENGTH_LONG).show(); e.printStackTrace(); <BUGE> } } 
@java.lang.Override public void onStopTrackingTouch(android.widget.SeekBar seekBar) { mTextSeekBar.setText(((("Shutter Speed(in ns):" + ((mSeekbar.getProgress()) + ShutterSpeed1)) + "/") + (java.lang.Math.round(((mSeekbar.getMax()) + ShutterSpeed1))))); android.widget.Toast.makeText(getApplicationContext(), "Setting Shutter Speed", Toast.LENGTH_SHORT).show(); ShutterSpeedValue = (mSeekbar.getProgress()) + ShutterSpeed1; <BUGS> AutoNumber = 1; <BUGE> startPreview(); } 
<BUGS> @java.lang.Override <BUGE> public org.pb.x12.EDI parse(java.io.InputStream source) throws java.io.IOException, org.pb.x12.FormatException { java.lang.StringBuilder strBuffer = new java.lang.StringBuilder(); char[] cbuf = new char[1024]; <BUGS> int length = -1; <BUGE> java.io.Reader reader = new java.io.BufferedReader(new java.io.InputStreamReader(source)); while ((length = reader.read(cbuf)) != (-1)) { strBuffer.append(cbuf, 0, length); } java.lang.String strSource = strBuffer.toString(); return parse(strSource); } 
private void postSecretMessage(ndbc.Message secret, java.sql.Connection connection) { try (java.sql.Statement statement = connection.createStatement()) { <BUGS> java.lang.System.out.println(secret.sender); <BUGE> java.lang.String queryString = "INSERT INTO d1(id, user, message) VALUES('"; queryString += secret.messageId; queryString += "', '"; <BUGS> <BUGE> queryString += secret.sender; <BUGS> queryString += "', '"; queryString += secret.body; <BUGE> queryString += "');"; statement.execute(queryString); } catch (java.sql.SQLException e) { e.printStackTrace(); } } 
public org.tiogasolutions.couchace.core.api.request.PutDesignRequest design(java.lang.String designName, java.net.URL designFile, java.lang.String documentRevision) { org.tiogasolutions.couchace.core.internal.util.ArgUtil.assertNotNull(designName, "designName"); org.tiogasolutions.couchace.core.internal.util.ArgUtil.assertNotNull(designFile, "designFile"); org.tiogasolutions.couchace.core.internal.util.ArgUtil.assertNotNull(documentRevision, "documentRevision"); java.lang.String designBody = org.tiogasolutions.couchace.core.internal.util.IOUtil.readText(designFile); <BUGS> return new org.tiogasolutions.couchace.core.api.request.PutDesignRequest(requestExecutor, designName, documentRevision, designBody); <BUGE> } 
public void hideSoftInput() { android.view.View view = ((android.app.Activity) (context)).getCurrentFocus(); if (view == null) <BUGS> view = new android.view.View(((android.app.Activity) (context))); <BUGE>  <BUGS> android.view.inputmethod.InputMethodManager imm = ((android.view.inputmethod.InputMethodManager) (((android.app.Activity) (context)).getSystemService(Activity.INPUT_METHOD_SERVICE))); <BUGE> if (imm == null) return ;  imm.hideSoftInputFromWindow(view.getWindowToken(), 0); } 
@java.lang.Override public boolean configChanged() { int currentConfigHash = this.configProps.hashCode(); <BUGS> boolean configChanged = (this.propsHashCode) != currentConfigHash; <BUGE> if (configChanged && (net.jawr.web.resource.bundle.factory.PropsConfigPropertiesSource.LOGGER.isDebugEnabled())) net.jawr.web.resource.bundle.factory.PropsConfigPropertiesSource.LOGGER.debug("Changes in configuration properties file detected.");  this.propsHashCode = currentConfigHash; return configChanged; } 
public static org.osbot.rs07.api.map.Area[] getBanks() { <BUGS> return new org.osbot.rs07.api.map.Area[]{ org.osbot.rs07.api.map.constants.Banks.AL_KHARID , org.osbot.rs07.api.map.constants.Banks.ARDOUGNE_NORTH , org.osbot.rs07.api.map.constants.Banks.ARDOUGNE_SOUTH , org.osbot.rs07.api.map.constants.Banks.CAMELOT , org.osbot.rs07.api.map.constants.Banks.CANIFIS , org.osbot.rs07.api.map.constants.Banks.CANIFIS , org.osbot.rs07.api.map.constants.Banks.CASTLE_WARS , org.osbot.rs07.api.map.constants.Banks.CASTLE_WARS , org.osbot.rs07.api.map.constants.Banks.CATHERBY , org.osbot.rs07.api.map.constants.Banks.DRAYNOR , org.osbot.rs07.api.map.constants.Banks.DUEL_ARENA , org.osbot.rs07.api.map.constants.Banks.EDGEVILLE , org.osbot.rs07.api.map.constants.Banks.FALADOR_EAST , org.osbot.rs07.api.map.constants.Banks.FALADOR_WEST , org.osbot.rs07.api.map.constants.Banks.GNOME_STRONGHOLD , org.osbot.rs07.api.map.constants.Banks.LUMBRIDGE_LOWER , org.osbot.rs07.api.map.constants.Banks.LUMBRIDGE_UPPER , org.osbot.rs07.api.map.constants.Banks.PEST_CONTROL , org.osbot.rs07.api.map.constants.Banks.TZHAAR , org.osbot.rs07.api.map.constants.Banks.VARROCK_EAST , org.osbot.rs07.api.map.constants.Banks.VARROCK_WEST , org.osbot.rs07.api.map.constants.Banks.YANILLE }; <BUGE> } 
private boolean isValideEmail(java.lang.String email) { java.sql.Statement stmt; boolean status = false; java.sql.Connection con = null; try { bean.ConnectionProvider provider = new bean.ConnectionProvider(); con = provider.getCon(); stmt = con.createStatement(); java.lang.String query = ("Select * from employee where BINARY email=\"" + email) + "\""; <BUGS> java.lang.System.out.println(query); <BUGE> java.sql.ResultSet rs = stmt.executeQuery(query); status = rs.next(); } catch (java.sql.SQLException e) { e.printStackTrace(); } return status; } 
public boolean tryReadLockWithCondition(V expected) { int[] stamp = new int[1]; <BUGS> V value = lock.get(stamp); return lock.compareAndSet(expected, expected, stamp[0], ((stamp[0]) + 2)); <BUGE> } 
<BUGS> public void showErroDialog() { android.app.AlertDialog.Builder alert = new android.app.AlertDialog.Builder(this); <BUGE> alert.setMessage("哎呀，居然发生错误了，是不是没有安装这个程序呢 :("); alert.setPositiveButton("确定", null); alert.setCancelable(false); alert.create(); alert.show(); } 
@java.lang.Override public java.lang.String[] getQueryableAttributs() { <BUGS> return new java.lang.String[]{ "name" , "custom" , "type" , "color" , "oracle" , "mana" , "cmc" , "power" , "toughness" , "loyalty" , "is" , "rarity" , "cube" , "artist" , "flavor" , "watermark" , "border" , "frame" , "set" }; <BUGE> } 
public void startLoop(java.lang.String filepath, trips.CarActionsFilter... filter) { java.util.Set<trips.CarActionsFilter> filters = new java.util.HashSet(java.util.Arrays.asList(filter)); streamer = new trips.DataStreamSimulator(filepath, filters); <BUGS> streamer.addStreamListener(this::newAction); <BUGE> streamer.startStreamingLoop(); } 
private void updateYData() { <BUGS> top = -((int) (java.lang.Math.round((((roundY1) + (roundY2)) / 2.0)))); <BUGE> bottom = ((top) + (roundY2)) - (roundY1); } 
public void onAudioFocusChange(int focusChange) { if (focusChange == (android.media.AudioManager.AUDIOFOCUS_LOSS_TRANSIENT)) { mPlayTimer.stop(); mMediaPlayer.pause(); <BUGS> unregisterAudio(); <BUGE> }else if (focusChange == (android.media.AudioManager.AUDIOFOCUS_GAIN)) { }else if (focusChange == (android.media.AudioManager.AUDIOFOCUS_LOSS)) { mAudioManager.abandonAudioFocus(this); mPlayTimer.stop(); mMediaPlayer.pause(); unregisterAudio(); }   mContext.updateSongView(); } 
@java.lang.Override public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) { android.view.View v = inflater.inflate(R.layout.second_frag, container, false); currentCarIndex = getArguments().getInt("current_car", 0); currentCar = com.twild.gastracker.ActivityListOfCars.carList.get(currentCarIndex); <BUGS> android.widget.Toast.makeText(super.getContext(), (("current_car " + (currentCar.getCarInfo().getName())) + " maintenance"), Toast.LENGTH_SHORT).show(); <BUGE> return v; } 
@java.lang.Override public void onClick(android.view.View view) { <BUGS> if (((android.support.v4.app.ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION)) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) && ((android.support.v4.app.ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION)) != (android.content.pm.PackageManager.PERMISSION_GRANTED))) { <BUGE> return ; } locationManager.requestLocationUpdates("gps", 5000, 0, locationListener); } 
public void restartGame() { <BUGS> this.instanceGame.getScheduler().stopAllTimers(); <BUGE> this.instanceGame.getScheduler().restoreSpeed(); deleteArray(snake); deleteArray(foodInBonus); matrix[xFood][yFood].setBackground(this.instanceGame.getBackgroundGame()); matrix[xFood][yFood].setIcon(null); startGame(); this.instanceGame.updateScore(score); } 
public static java.lang.String getDomainName(java.lang.String url) throws java.net.URISyntaxException { java.net.URI uri = new java.net.URI(url); java.lang.String domain = uri.getHost(); if (domain == null) { <BUGS> return url.replace("www.", ""); <BUGE> } <BUGS> return domain.replace("www.", ""); <BUGE> } 
private void addDeveloperFromInput() { int id = readIdFromInput(); com.homelearning.model.Developer developer = developerController.getById(id); if (developer == null) { <BUGS> developerController.save(new com.homelearning.model.Developer(readIdFromInput(), readFirstNameFromInput(), readLastNameFromInput(), readSpecialtyFromInput(), readExperienceFromInput(), readSalaryFromInput())); <BUGE> }else { java.lang.System.out.printf("Developer with id %d already exists:\n", id); java.lang.System.out.println(developer); } } 
@java.lang.Override public void onDataChange(com.google.firebase.database.DataSnapshot dataSnapshot) { mProfile = dataSnapshot.getValue(mobi.devteam.demofalldetector.model.Profile.class); <BUGS> <BUGE> age = mProfile.getAge(); bmi = (mProfile.getWeight()) / (java.lang.Math.sqrt(mProfile.getHeight())); isMale = mProfile.isMale(); threshold_1 = mProfile.getThresh1(); threshold_2 = mProfile.getThresh2(); threshold_3 = mProfile.getThresh3(); add_threshold_value(); } 
@java.lang.Override public net.openchrom.msd.converter.supplier.cms.model.IIonMeasurement getIonMeasurement(int scanIndex) { if (!(isMinMaxSignalCalculated())) { updateSignalLimits(); } <BUGS> if ((scanIndex > 0) && (scanIndex < (ionMeasurements.size()))) { <BUGE> return ionMeasurements.get(scanIndex); }else { return null; } } 
@java.lang.Override public void keyPressed(java.awt.event.KeyEvent e) { if (((remain.length()) == 0) && ((e.getKeyCode()) != (java.awt.event.KeyEvent.VK_ENTER))) { e.consume(); retype(); }else { java.lang.String item = "%d %d 0"; long curTime = java.lang.System.currentTimeMillis(); records.add(java.lang.String.format(item, curTime, e.getKeyCode())); <BUGS> java.lang.System.out.println(((e.getKeyChar()) + " 0")); <BUGE> } } 
private static java.util.Optional<java.nio.file.Path> expandFilename(java.lang.String filename, java.nio.file.Path directory) { java.util.Objects.requireNonNull(filename); java.util.Objects.requireNonNull(directory); java.nio.file.Path file = java.nio.file.Paths.get(filename); <BUGS> if (java.nio.file.Files.exists(file)) { return java.util.Optional.of(file); <BUGE> } java.nio.file.Path resolvedFile = directory.resolve(file); if (java.nio.file.Files.exists(resolvedFile)) { return java.util.Optional.of(resolvedFile); }else { return java.util.Optional.empty(); } } 
@java.lang.Override public int hashCode() { int hash = 7; <BUGS> hash = (53 * hash) + (java.util.Objects.hashCode(this.topLeft)); hash = (53 * hash) + (java.util.Objects.hashCode(this.bottomRight)); <BUGE> return hash; } 
<BUGS> protected void clear() { <BUGE> mTotal = 0; mLayoutManager.setLayoutHelpers(null); for (android.util.Pair<com.alibaba.android.vlayout.DelegateAdapter.AdapterDataObserver, com.alibaba.android.vlayout.DelegateAdapter.Adapter> p : mAdapters) { p.second.unregisterAdapterDataObserver(p.first); } mItemTypeAry.clear(); mAdapters.clear(); } 
private int find_next_test_item(int CurrentTestItem) { int NextTestItemL = 0; boolean NeedTest = false; <BUGS> <BUGE> do { <BUGS> NextTestItemL = CurrentTestItem + 1; not_end_test_all = (NextTestItem) != (end_test_item); <BUGE> if (not_end_test_all) { <BUGS> NeedTest = fec_test_items_order[NextTestItem].test; <BUGE> }else { return -1; } } while (!NeedTest ); return NextTestItemL; } 
<BUGS> protected void setCurrentNetworkView(final org.cytoscape.view.model.CyNetworkView newView) { <BUGE> synchronized(lock) { if ((((currentNetworkView) == null) && (newView == null)) || (((currentNetworkView) != null) && (currentNetworkView.equals(newView)))) <BUGS> return ; <BUGE>  final org.cytoscape.view.model.CyNetworkView oldView = currentNetworkView; currentNetworkView = newView; for (org.cytoscape.internal.view.NetworkViewGrid.ThumbnailPanel tp : thumbnailPanels.values()) tp.update(false);  firePropertyChange("currentNetworkView", oldView, newView); } <BUGS> <BUGE> } 
public void start() { if (!(lazyMode)) { <BUGS> if (!(((itemProperty().getValue()) != null) || ((beanProperty().getValue()) != null))) { <BUGE> reSchedule(null); } } } 
@java.lang.Override public int getPartition(org.apache.hadoop.io.LongWritable key, org.apache.hadoop.io.LongWritable value, int numberOfPartition) { try { hbase.query1.HBaseRowKeyPartitioner.fillFirstAndLastID(); } catch (java.io.IOException e) { e.printStackTrace(); } long intervalLength = ((hbase.query1.HBaseRowKeyPartitioner.lastArticleId) - (hbase.query1.HBaseRowKeyPartitioner.firstArticleId)) / numberOfPartition; <BUGS> return ((int) ((key.get()) / intervalLength)); <BUGE> } 
private void removeTransform(org.bukkit.entity.Player player) { org.bukkit.Bukkit.getServer().dispatchCommand(org.bukkit.Bukkit.getConsoleSender(), ("clearskin " + (player.getName()))); <BUGS> turnOff(player); <BUGE> sendMessage(player, "You look like yourself again."); sendMessage(player, strWarnMessage); } 
public ar.edu.unq.chasqui.model.Direccion obtenerDireccionPredeterminada() { for (ar.edu.unq.chasqui.model.Direccion d : this.getDireccionesAlternativas()) { if (d.getPredeterminada()) { return d; } } <BUGS> return (this.getDireccionesAlternativas()) != null ? this.getDireccionesAlternativas().get(0) : null; <BUGE> } 
@java.lang.Override protected java.lang.String processRequest(cn.edu.fudan.request.AddTableRequest request, cn.edu.fudan.util.Session session) throws java.lang.Exception { <BUGS> return (request == null) || ((request.table()) == (AddTableRequest.Table.DEFAULT)) ? "error" : (new cn.edu.fudan.dao.AddTableDAO(this, request).getResult()) > 0 ? "success" : "fail"; <BUGE> } 
public void startTournament() throws java.lang.Exception { for (int p1 = 0; p1 < (players.size()); p1++) { <BUGS> for (int p2 = p1; p2 < (players.size()); p2++) { <BUGE> if (p1 != p2) { startGame(players.get(p1), players.get(p2)); } } } } 
@android.support.annotation.Nullable static android.net.Uri safeUri(@android.support.annotation.NonNull java.lang.String url) { if (android.text.TextUtils.isEmpty(url)) { return null; } android.net.Uri uri = android.net.Uri.parse(url); <BUGS> if (((uri.getHost()) == null) || ((uri.getScheme()) == null)) { <BUGE> return null; } return uri; } 
@java.lang.Override public void setRawData(java.util.List<float[]> data) { this.centroids = null; this.data = new edu.uc.rphash.tests.clusterers.KMeans2.PointND[data.size()]; for (int i = 0; i < (data.size()); i++) { <BUGS> this.data[i] = new edu.uc.rphash.tests.clusterers.KMeans2.PointND(data.get(i), 1, new float[data.get(0).length]); <BUGE> } } 
protected void actOnResource(org.fogbowcloud.blowout.pool.AbstractResource resource, java.util.List<org.fogbowcloud.blowout.core.model.Task> tasks) { <BUGS> org.fogbowcloud.blowout.infrastructure.model.ResourceState state = resource.getState(); <BUGE> if (resource.getState().equals(ResourceState.IDLE)) { <BUGS> org.fogbowcloud.blowout.core.model.Task task = chooseTaskForRunning(tasks); <BUGE> if (task != null) { runTask(task, resource); } } if (resource.getState().equals(ResourceState.TO_REMOVE)) { runningTasks.remove(resource); } } 
<BUGS> private static com.emergentorganization.cellrpg.tools.map.MapObject parseItem(org.w3c.dom.Node item, com.badlogic.gdx.math.Vector2 offset) { <BUGE> if (item.getNodeName().contentEquals("image")) { <BUGS> <BUGE> return com.emergentorganization.cellrpg.tools.map.MapLoader.parseImage(item, offset); }else if (item.getNodeName().contentEquals("#text")) { }else { com.emergentorganization.cellrpg.tools.map.MapLoader.print((("parsing for item " + (item.getNodeName())) + " is unsupported")); }  return null; } 
private void flush() throws java.io.IOException { <BUGS> try (java.io.BufferedWriter bw = new java.io.BufferedWriter(new java.io.FileWriter(gameFile))) { <BUGE> batch.append("\n\n"); bw.write(batch.toString()); } batch = new java.lang.StringBuffer(); currentBatchSize = 0; gameStateRecorded = false; } 
public void reiniciar() throws java.lang.InterruptedException { damas_v1.Ficha f = new damas_v1.Ficha("·"); <BUGS> damas_v1.FichaSwing fswing; <BUGE> for (int i = 0; i < (MAXFILAS); i++) { for (int j = 0; j < (MAXCOLUMNAS); j++) { casillero[i][j] = f; <BUGS> fswing = new damas_v1.FichaSwing(((i * 10) + j), null); <BUGE> setChanged(); <BUGS> notifyObservers(fswing); <BUGE> } } } 
public void sendConfig(java.lang.String apiKey, java.lang.String config) { try { org.springframework.amqp.core.MessageProperties properties = new org.springframework.amqp.core.MessageProperties(); properties.setHeader(RabbitMQConfig.MSG_HEADER_APIKEY, apiKey); <BUGS> org.springframework.amqp.core.Message message = new org.springframework.amqp.core.Message("".getBytes("UTF-8"), properties); <BUGE> rabbitTemplate.convertAndSend("mgmt.config.sub", message); } catch (org.springframework.amqp.AmqpException | java.io.UnsupportedEncodingException ex) { com.konkerlabs.platform.registry.integration.gateways.RabbitGateway.LOGGER.error("AmqpException while sending message to RabbitMQ...", ex); } } 
<BUGS> protected java.lang.Object invoke(java.lang.Object args) throws java.lang.Exception { <BUGE> java.lang.String[] argdata = ((java.lang.String[]) (args)); int arg1 = java.lang.Integer.valueOf(argdata[0]); int arg2 = java.lang.Integer.valueOf(argdata[1]); int arg3 = java.lang.Integer.valueOf(argdata[2]); return source.CalculateSalary.calculateSalary(arg1, arg2, arg3); } 
public static void editNoteFromTable(java.lang.String title, java.lang.String text, java.lang.String deadline) { com.leofesk.quicktodomanager.model.Database.updateCurrentNoteFromDatabase(com.leofesk.quicktodomanager.controller.DataBaseWorker.currentNoteID, title, text, deadline, com.leofesk.quicktodomanager.controller.DataBaseWorker.note.getCreatedTime(), com.leofesk.quicktodomanager.controller.DataBaseWorker.note.getEndTime(), com.leofesk.quicktodomanager.controller.DataBaseWorker.note.getStatus()); <BUGS> <BUGE> com.leofesk.quicktodomanager.controller.DataBaseWorker.updateTableData(); } 
@java.lang.Override public void seekToUs(long positionUs) { com.google.android.exoplayer.util.Assertions.checkState(prepared); com.google.android.exoplayer.util.Assertions.checkState(((enabledTrackCount) > 0)); <BUGS> positionUs = (chunkSource.isLive()) ? 0 : positionUs; <BUGE> long currentPositionUs = (isPendingReset()) ? pendingResetPositionUs : downstreamPositionUs; downstreamPositionUs = positionUs; lastSeekPositionUs = positionUs; if (currentPositionUs == positionUs) { return ; } seekToInternal(positionUs); } 
<BUGS> protected android.graphics.Bitmap setBitmapSize(int iconId, int w) { <BUGE> android.graphics.Bitmap bitmap = android.graphics.BitmapFactory.decodeResource(getContext().getResources(), iconId); float s = (w * 1.0F) / (bitmap.getWidth()); bitmap = android.graphics.Bitmap.createScaledBitmap(bitmap, ((int) ((bitmap.getWidth()) * s)), ((int) ((bitmap.getHeight()) * s)), true); return bitmap; } 
protected void processRequest(javax.servlet.http.HttpServletRequest request, javax.servlet.http.HttpServletResponse response) throws java.io.IOException, javax.servlet.ServletException { response.setContentType("text/html;charset=UTF-8"); edu.wctc.da.bookwebapp.model.AuthorService authorService = new edu.wctc.da.bookwebapp.model.AuthorService(); try { java.util.List<edu.wctc.da.bookwebapp.model.Author> authorList = authorService.getAuthors(); <BUGS> java.lang.System.out.println("test"); <BUGE> request.setAttribute(AUTHORLIST, authorList); request.setAttribute("errorMessage", ERRORMESSAGE); javax.servlet.RequestDispatcher view = request.getRequestDispatcher(DESTINATIONPAGE); view.forward(request, response); } catch (java.lang.Exception e) { } } 
private void excludeCols(final boolean[] checkedItems) { int i = 1; assert null != checkedItems; assert null != (this.templateModel); <BUGS> for (final boolean checkedItem : checkedItems) <BUGE> if (checkedItem) <BUGS> this.templateModel.addExcludeCol((i++)); <BUGE>  <BUGS>  <BUGE> } 
private final boolean _log(simple.util.logging.LogLevel type, java.lang.Object msg, byte options) { <BUGS> if (simple.util.logging.Log.isSet(options, type)) <BUGE> return _out.checkError();  synchronized(writeSync) { _out.print(_getPreMessage(type)); _out.print(_cName); _out.print(": "); _out.println(msg); } return _out.checkError(); } 
<BUGS> public static void find(java.lang.String arg, java.util.ArrayList<java.lang.String> list) { <BUGE> if ((list.indexOf(arg)) == (-1)) { java.lang.System.out.printf("%s not in list\n", arg); }else { java.lang.System.out.printf("%s in list at index %d\n", arg, list.indexOf(arg)); } } 
private boolean checkForAKind() { if (((findSameRank(((PJ5.SimplePoker.numberOfCards) - 1))) < 0) && ((kindCounter) == 4)) { java.lang.System.out.println("Four of a kind!"); kindCounter = 0; return true; <BUGS> }else if (((findSameRank(((PJ5.SimplePoker.numberOfCards) - 1))) < 0) && ((kindCounter) == 3)) { java.lang.System.out.println("Three of a kind!"); kindCounter = 0; return true; }  <BUGE> return false; } 
@java.lang.Override public java.lang.String toString() { if ((id) < 0) return "< New Session >";  <BUGS> java.util.Date dateObj = new java.util.Date(date); java.text.SimpleDateFormat dateFormat = new java.text.SimpleDateFormat("E, MMM dd yyyy"); java.lang.String result = dateFormat.format(dateObj); <BUGE> org.joda.time.DateTime dt = new org.joda.time.DateTime(date); org.joda.time.format.DateTimeFormatter dtf = org.joda.time.format.DateTimeFormat.forPattern("E, MMM dd yyyy"); result = dtf.print(dt); if ((sequenceNum) > 0) { result += (" (" + (sequenceNum)) + ")"; } return result; } 
@java.lang.Override public java.util.List<java.lang.String> getProperties(java.lang.String player) { java.util.List<java.lang.String> propertyList = new java.util.ArrayList<java.lang.String>(); for (a4.domain.Property curr : properties) { <BUGS> if (curr.getOwner().toString().equals(player)) { propertyList.add(curr.toString()); } <BUGE> } return propertyList; } 
@java.lang.Override public boolean onTouch(android.view.View view, android.view.MotionEvent motionEvent) { switch (motionEvent.getAction()) { case android.view.MotionEvent.ACTION_DOWN : password.setTransformationMethod(null); <BUGS> password.setSelection(password.getText().length()); <BUGE> return true; case android.view.MotionEvent.ACTION_UP : password.setTransformationMethod(new android.text.method.PasswordTransformationMethod()); <BUGS> password.setSelection(password.getText().length()); <BUGE> return false; } <BUGS> return true; <BUGE> } 
public void setSize(final java.lang.Long size) { <BUGS> if ((getPrev()) != 0) { <BUGE> final java.lang.Long prevSize = getObject().getIntegerKey(ASAtom.SIZE); if (prevSize > size) { return ; } } getObject().setIntegerKey(ASAtom.SIZE, size); } 
private void init(android.util.AttributeSet attrs, int defStyleAttr) { android.content.res.TypedArray a = getContext().obtainStyledAttributes(attrs, R.styleable.SVGView, defStyleAttr, 0); svgId = a.getResourceId(R.styleable.SVGView_carbon_src, 0); <BUGS> filterColor = a.getColorStateList(R.styleable.SVGView_carbon_filterColor); if ((filterColor) != null) setColorFilter(new android.graphics.LightingColorFilter(0, filterColor.getColorForState(getDrawableState(), filterColor.getDefaultColor())));  <BUGE> a.recycle(); } 
public boolean validateDayOfWeek(java.time.LocalDateTime currentTime) { application.main.Business business = new application.main.Business(); <BUGS> for (int i = 0; i < (business.getOpeningDays().length); i++) { if (business.getOpeningDays()[i].equals(currentTime.getDayOfWeek())) { <BUGE> application.main.Utility.LOGGER.info("Valid business time"); return true; } } application.main.Utility.LOGGER.info("Invalid business time"); return false; } 
<BUGS> private void showWarningToUser(android.os.Message msg) { <BUGE> android.content.Intent intent = new android.content.Intent(this, com.juliansparber.vpnMITM.UserAlertDialog.class); intent.addFlags((((android.content.Intent.FLAG_ACTIVITY_REORDER_TO_FRONT) | (android.content.Intent.FLAG_ACTIVITY_NEW_TASK)) | (android.content.Intent.FLAG_ACTIVITY_NEW_DOCUMENT))); intent.putExtra(UserAlertDialog.PAYLOAD, ((java.lang.String[]) (msg.obj))); startActivity(intent); } 
public synchronized void log(int style, java.lang.String message) { try { javax.swing.text.StyledDocument doc = m_textPane.getStyledDocument(); <BUGS> javax.swing.text.Style s = m_styles[style]; doc.insertString(doc.getLength(), message, s); doc.insertString(doc.getLength(), "\n", s); <BUGE> } catch (javax.swing.text.BadLocationException e) { java.lang.System.err.println(e); } } 
@java.lang.Override protected void onPostExecute(java.lang.String res) { super.onPostExecute(res); <BUGS> android.os.Message msg = showRouteHandler.obtainMessage(com.jstakun.gms.android.ui.AsyncTaskManager.SHOW_ROUTE_MESSAGE, filename); showRouteHandler.handleMessage(msg); <BUGE> if (!(silent)) { intents.showInfoToast(res); } } 
public void handle(org.dsa.iot.dslink.node.actions.ActionResult event) { try { com.serotonin.bacnet4j.type.constructed.PriorityArray priorities = getPriorityArray(); if (priorities == null) return ;  for (int i = 1; i <= (priorities.getCount()); i++) { relinquish(i); <BUGS> refreshPriorities(); <BUGE> } <BUGS> <BUGE> } catch (com.serotonin.bacnet4j.exception.BACnetException e) { bacnet.BacnetPoint.LOGGER.error("error: ", e); } } 
public int compareTo(main.hibernate.dao.RankingDao o) { if ((this.betScore) > (o.getBetScore())) <BUGS> return 1; <BUGE>  if ((this.betScore) < (o.getBetScore())) <BUGS> return -1; <BUGE>  return 0; } 
@java.lang.Override public boolean deleteLink(java.lang.String dbid, long id1, long link_type, long id2, boolean noinverse, boolean expunge) throws java.lang.Exception { int deletionCount; try (edu.berkeley.cs.Transaction tx = session.beginTransaction()) { java.lang.String deleteLinkStmt = "MATCH (n1 {id: {id1}}) -[r:{link_type}]-> (n2: {id: {id2}}) DELETE r"; <BUGS> edu.berkeley.cs.StatementResult result = session.run(deleteLinkStmt, edu.berkeley.cs.LinkStoreNeo4j.linkParams(id1, link_type, id2)); <BUGE> deletionCount = result.consume().counters().relationshipsDeleted(); tx.success(); } return deletionCount > 0; } 
@java.lang.Override public void onSuggestionClicked(final com.arlib.floatingsearchview.suggestions.model.SearchSuggestion searchSuggestion) { <BUGS> me.digi.examples.ca.searchData.ColorSuggestion colorSuggestion = ((me.digi.examples.ca.searchData.ColorSuggestion) (searchSuggestion)); me.digi.examples.ca.searchData.DataHelper.findColors(getApplicationContext(), colorSuggestion.getBody(), new me.digi.examples.ca.searchData.DataHelper.OnFindColorsListener() { @java.lang.Override public void onResults(java.util.List<me.digi.examples.ca.searchData.ColorWrapper> results) { } }); <BUGE> android.util.Log.d(me.digi.examples.ca.MainActivity.TAG, "onSuggestionClicked()"); mLastQuery = searchSuggestion.getBody(); android.content.Intent i = new android.content.Intent(this, me.digi.examples.ca.ProfileActivity.class); i.putExtra("name", mLastQuery); startActivity(i); } 
@org.junit.Test public void testFound() throws java.lang.Exception { boolean thrown = false; java.lang.String result = null; try { <BUGS> result = this.databaseEngine.search("abc"); <BUGE> } catch (java.lang.Exception e) { thrown = true; } org.assertj.core.api.Assertions.assertThat((!thrown)); <BUGS> org.assertj.core.api.Assertions.assertThat(result.equals("def")); <BUGE> } 
@com.google.inject.Provides com.diyphotobooth.lordbritishix.model.Template templateProvider() throws java.io.IOException { java.util.Properties properties = loadFromFile(settingsFolder); <BUGS> java.nio.file.Paths.get(properties.getProperty("template.filename")); <BUGE> java.io.File templateFile = java.nio.file.Paths.get(properties.getProperty("template.filename")).toFile(); try (java.io.InputStream is = new java.io.FileInputStream(templateFile)) { return com.diyphotobooth.lordbritishix.model.Template.fromJson(is); } } 
@java.lang.Override public void init(edu.uci.ics.hyracks.storage.am.common.api.ITreeIndexMetaDataFrame metaFrame) throws edu.uci.ics.hyracks.api.exceptions.HyracksDataException { if ((confiscatedMetaNode) != null) { return ; } edu.uci.ics.hyracks.storage.common.buffercache.ICachedPage metaNode = bufferCache.confiscatePage(BufferCache.INVALID_DPID); <BUGS> metaNode.acquireWriteLatch(); <BUGE> try { metaFrame.setPage(metaNode); metaFrame.initBuffer(edu.uci.ics.hyracks.storage.am.common.freepage.LinkedMetaDataPageManager.META_PAGE_LEVEL_INDICATOR); metaFrame.setMaxPage(0); } finally { <BUGS> metaNode.releaseWriteLatch(false); <BUGE> confiscatedMetaNode = metaNode; appendOnly = true; } } 
public void onBindViewHolder(com.example.android.windsordesignstudio.movieviewr.MovieFavoritesAdapter.MovieFavoritesAdapterViewHolder holder, int position) { if (!(mCursor.moveToPosition(position))) return ;  android.content.Context context = holder.mMoviePoster.getContext(); java.lang.String moviePoster = mCursor.getString(mCursor.getColumnIndex(FavoritesContract.FavoriteEntry.COLUMN_POSTER_FULL_PATH)); android.widget.ImageView poster = holder.mMoviePoster; <BUGS> com.squareup.picasso.Picasso.with(mContext).load(moviePoster).resize(600, 900).into(poster); <BUGE> } 
public void keyDown(java.lang.Integer keyInfo) { <BUGS> ++(com.Hook.common.RecordKeyboard.pressCount); <BUGE> java.lang.Integer count = 0; if (com.Hook.common.RecordKeyboard.keyboardCount.containsKey(keyInfo)) { count = com.Hook.common.RecordKeyboard.keyboardCount.get(keyInfo); } com.Hook.common.RecordKeyboard.keyboardCount.put(keyInfo, (++count)); <BUGS> <BUGE> if (((com.Hook.common.RecordKeyboard.pressCount) >= (com.Hook.common.RecordKeyboard.flagTime)) && (((com.Hook.common.RecordKeyboard.pressCount) % (com.Hook.common.RecordKeyboard.flagTime)) == 0)) { write(); } } 
@java.lang.Override public void subscribe(final com.github.rxsockets.ObservableEmitter<io.socket.client.Socket> emitter) throws java.lang.Exception { if (!(connected.get())) { if (autoDisconnect) { emitter.setDisposable(new com.github.rxsockets.SocketConnectionDisposable(socket, connected)); } socket.connect(); connected.set(true); <BUGS> }else { emitter.onNext(socket); <BUGE> } <BUGS> <BUGE> } 
public void close(ch.ninecode.cim.connector.CIMConnection connection) { if (null != connection) if (connection._Valid) { connection.invalidate(); <BUGS> java.util.Enumeration<javax.resource.spi.ConnectionEventListener> list = _Listeners.elements(); <BUGE> javax.resource.spi.ConnectionEvent event = new javax.resource.spi.ConnectionEvent(this, javax.resource.spi.ConnectionEvent.CONNECTION_CLOSED); event.setConnectionHandle(connection); <BUGS> while (list.hasMoreElements()) list.nextElement().connectionClosed(event); <BUGE>  }  } 
<BUGS> public java.lang.String getLinkedListNodes() { <BUGE> if ((head) == null) { return null; } java.lang.StringBuffer sb = new java.lang.StringBuffer(); com.badalchowdhary.datastructures.Node currentNode = head; while ((currentNode.getNext()) != null) { sb.append(((currentNode.getData()) + " -> ")); currentNode = currentNode.getNext(); } sb.append(currentNode.getData()); return sb.toString(); } 
public com.epam.indigo.IndigoObject exactMatch(com.epam.indigo.IndigoObject obj1, com.epam.indigo.IndigoObject obj2, java.lang.String flags) { <BUGS> setSessionID(); <BUGE> if (flags == null) flags = "";  com.epam.indigo.IndigoObject[] parent = new com.epam.indigo.IndigoObject[]{ obj1 , obj2 }; <BUGS> <BUGE> int match = com.epam.indigo.Indigo.checkResult(this, parent, com.epam.indigo.Indigo._lib.indigoExactMatch(obj1.self, obj2.self, flags)); if (match == 0) return null;  return new com.epam.indigo.IndigoObject(this, match, parent); } 
public void update(int direction) { switch (direction) { case fr.esiea.ga.tetris.client.Model.Piece.DIR_BOTTOM : savePrevPosPiece(); (xPos)++; break; case fr.esiea.ga.tetris.client.Model.Piece.DIR_RIGHT : savePrevPosPiece(); (yPos)++; break; case fr.esiea.ga.tetris.client.Model.Piece.DIR_LEFT : savePrevPosPiece(); (yPos)--; break; case fr.esiea.ga.tetris.client.Model.Piece.DIR_TOP : savePrevPosPiece(); rotatePieceLeft(); break; default : <BUGS> savePrevPosPiece(); (xPos)++; <BUGE> break; } } 
@java.lang.Override public void onScrollStateChanged(android.support.v7.widget.RecyclerView recyclerView, int newState) { super.onScrollStateChanged(recyclerView, newState); int initialItemCount = mGridLayoutManager.findFirstCompletelyVisibleItemPosition(); int totalItemCount = mGridLayoutManager.getItemCount(); int lastVisisbleItemPosition = mGridLayoutManager.findLastCompletelyVisibleItemPosition(); <BUGS> mInfiniteScrollListener.loadMoreData(initialItemCount, totalItemCount, lastVisisbleItemPosition); <BUGE> } 
private void createPanel() { final javax.swing.JPanel textPanel = createTextPanel("Instructions", getInstructions()); this.add(textPanel, java.awt.BorderLayout.NORTH); <BUGS> productSetPanel = new org.esa.snap.graphbuilder.rcp.dialogs.ProductSetPanel(org.esa.snap.rcp.SnapApp.getDefault().getAppContext(), null, new org.esa.snap.graphbuilder.rcp.dialogs.support.FileTable(), false, true); <BUGE> this.add(productSetPanel, java.awt.BorderLayout.CENTER); } 
@java.lang.Override public void doWrite(java.io.DataOutput out) throws java.io.IOException { out.writeInt(this.seedList.size()); for (ml.shifu.shifu.core.dvarsel.CandidateSeed seed : this.seedList) { <BUGS> out.write(seed.getId()); <BUGE> java.util.List<java.lang.Integer> columnIdList = seed.getColumnIdList(); <BUGS> out.write(columnIdList.size()); <BUGE> for (java.lang.Integer columnId : columnIdList) { <BUGS> out.write(columnId); <BUGE> } } } 
<BUGS> private void initConnection() { <BUGE> try { java.net.URL url = new java.net.URL("http", Constants.SERVER, 3000, Constants.DATA_POST_URL); httpConnection = ((java.net.HttpURLConnection) (url.openConnection())); httpConnection.setRequestProperty("Accept", "application/json"); httpConnection.setRequestProperty("Content-type", "application/json"); httpConnection.setRequestMethod("POST"); httpConnection.setDoOutput(true); httpConnection.connect(); <BUGS> <BUGE> } catch (java.io.IOException e) { e.printStackTrace(); <BUGS> <BUGE> } } 
@org.springframework.web.bind.annotation.RequestMapping(method = org.springframework.web.bind.annotation.RequestMethod.POST) public com.github.visola.familymenu.model.Person createPerson(@org.springframework.web.bind.annotation.RequestBody @javax.validation.Valid com.github.visola.familymenu.model.Person person, @org.springframework.security.core.annotation.AuthenticationPrincipal java.lang.String familyName) { com.github.visola.familymenu.model.Family loadedFamily = familyRepository.findByName(familyName); <BUGS> if ((person.getFamily()) != null) { if ((loadedFamily == null) || (!(java.util.Objects.equals(person.getFamily().getId(), loadedFamily.getId())))) { throw new com.github.visola.familymenu.controller.exception.NotAuthorizedException("You don't have permission to add a person to that family."); } <BUGE> } person.setFamily(loadedFamily); return personRepository.save(person); } 
@java.lang.Override protected void init() throws cc.redpen.RedPenException { <BUGS> <BUGE> if ((getSymbolTable().getLang().equals("ja")) && (!(getConfigAttribute("min_len").isPresent()))) getProperties().put("min_len", 1);  } 
public static void callbackRegister(mcp.mobius.waila.api.IWailaRegistrar registrar) { blusunrize.immersiveengineering.common.util.compat.waila.IEWailaDataProvider dataProvider = new blusunrize.immersiveengineering.common.util.compat.waila.IEWailaDataProvider(); registrar.registerBodyProvider(dataProvider, blusunrize.immersiveengineering.common.blocks.plant.BlockIECrop.class); registrar.registerBodyProvider(dataProvider, blusunrize.immersiveengineering.common.blocks.wooden.TileEntityWoodenBarrel.class); <BUGS> <BUGE> registrar.registerStackProvider(dataProvider, blusunrize.immersiveengineering.common.blocks.TileEntityMultiblockPart.class); registrar.registerBodyProvider(dataProvider, blusunrize.immersiveengineering.api.energy.immersiveflux.IFluxReceiver.class); registrar.registerNBTProvider(dataProvider, blusunrize.immersiveengineering.api.energy.immersiveflux.IFluxReceiver.class); registrar.registerBodyProvider(dataProvider, blusunrize.immersiveengineering.api.energy.immersiveflux.IFluxProvider.class); registrar.registerNBTProvider(dataProvider, blusunrize.immersiveengineering.api.energy.immersiveflux.IFluxProvider.class); } 
@java.lang.Override public void mouseReleased(java.awt.event.MouseEvent e) { <BUGS> <BUGE> if ((drag) && (!(move))) { deselectAll(); target.clear(); <BUGS> int x = e.getX(); int y = e.getY(); <BUGE> for (main.GObject go : gObjects) { if (go.covered(eX, eY, x, y)) { target.add(go); go.selected(); } } repaint(); } } 
private Hex getWord(Hex index) { int i = index.toInt(); if ((i > ((Simpletron.MEMORY_SIZE) - 1)) || (i < 0)) fatalError("*** index out of bounds ***");  <BUGS> Hex word = memory[i]; <BUGE> if (((word.compareTo(Simpletron.MAX_WORD)) > 0) || ((word.compareTo(Simpletron.MIN_WORD)) < 0)) { fatalError("*** overflow occured ***"); } return word; } 
private static <T> void addGroupAtId(java.util.List<T> seqResGroups, T group, int sequenceIndexId) { while ((seqResGroups.size()) <= sequenceIndexId) { seqResGroups.add(null); } <BUGS> if (sequenceIndexId > 0) { <BUGE> seqResGroups.set(sequenceIndexId, group); } } 
@java.lang.Override public java.lang.String toString() { <BUGS> return ((((((((((("Bag{" + "id=") + (id)) + ", name='") + (name)) + '\'') + ", publicKey=") + (java.util.Arrays.toString(publicKey))) + ", shared=") + (shared)) + ", secured=") + (secured)) + '}'; <BUGE> } 
<BUGS> public boolean deleteFavorite(int favoriteID) { <BUGE> android.database.sqlite.SQLiteDatabase db = getWritableDatabase(); db.delete(com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_WEBSITES, (((com.madgusto.gamingreminder.db.DatabaseHelper.COL_FAVORITE_ID) + " = ") + favoriteID), null); db.delete(com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_RELEASE_DATES, (((com.madgusto.gamingreminder.db.DatabaseHelper.COL_FAVORITE_ID) + " = ") + favoriteID), null); <BUGS> return (db.delete(com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_FAVORITES, (((com.madgusto.gamingreminder.db.DatabaseHelper.COL_ID) + " = ") + favoriteID), null)) > 0; <BUGE> } 
public void resolveForwardReferences() throws org.exist.xquery.XPathException { <BUGS> while (!(forwardReferences.empty())) { <BUGE> final org.exist.xquery.FunctionCall call = forwardReferences.pop(); final org.exist.xquery.UserDefinedFunction func = call.getContext().resolveFunction(call.getQName(), call.getArgumentCount()); if (func == null) { throw new org.exist.xquery.XPathException(call, ErrorCodes.XPST0017, ("Call to undeclared function: " + (call.getQName().getStringValue()))); <BUGS> <BUGE> } <BUGS> call.resolveForwardReference(func); <BUGE> } } 
@java.lang.Override public void onPermissionGranted() { final com.afollestad.materialdialogs.MaterialDialog dialog = jahirfiquitiva.iconshowcase.dialogs.ISDialogs.showBuildingRequestDialog(context); <BUGS> if ((getResources().getInteger(R.integer.max_apps_to_request)) > (-1)) { if ((maxApps) < 0) { maxApps = 0; <BUGE> } <BUGS> }else { dialog.show(); com.pitchedapps.butler.iconrequest.IconRequest.get().send(new com.pitchedapps.butler.iconrequest.IconRequest.OnRequestReady() { @java.lang.Override public void doWhenReady() { dialog.dismiss(); } }); } <BUGE> } 
public V getOther(E e, V oneEnd) { if (!(edges.containsKey(e))) throw new graph.Graph.NotInGraphException("Can't find other endpoint of edge", e);  graph.Graph<V, E>.Edge edge = edges.get(e); <BUGS> if (edge._1.equals(oneEnd)) <BUGE> return edge._3.v;  <BUGS> if (edge._3.equals(oneEnd)) <BUGE> return edge._1.v;  return null; } 
@java.lang.Override public void onCityLoaded(java.util.List<com.zfwl.entity.Area> citys) { if (((mAddress) != null) && ((mAddress.getCity()) != null)) { mCurrentCity = mAddress.getCity(); mSelectAreaPresenter.loadNextDistrict(mCurrentCity.getId()); }else { <BUGS> mCurrentCity = mSelectAreaPresenter.getCitysWithIndex(0); <BUGE> } cityAdapter.setDatas(citys); <BUGS> cityAdapter.setSelectArea(mCurrentCity.getId()); <BUGE> cityAdapter.notifyDataSetChanged(); } 
public void releaseKms(java.lang.String applicationId) throws org.kurento.client.internal.NotEnoughResourcesException { try { de.fhg.fokus.nubomedia.kmc.KmsUrlProvider.logger.info(("releasing KMS..." + applicationId)); if ((record) == null) return ;  <BUGS> vnfrService.unregisterApplication(record.getInternalAppId()); <BUGE> timerTask.cancel(); } catch (java.lang.Exception e) { throw new org.kurento.client.internal.NotEnoughResourcesException(("An error occured in releasing the KMS - " + (e.getMessage()))); } } 
@java.lang.Override public void onClick(android.view.View view) { switch (view.getId()) { case R.id.previous_button : int index = (questionPager.getCurrentItem()) - 1; <BUGS> questionPager.setCurrentItem((index > 0 ? index : (questionAdapter.getCount()) - 1)); <BUGE> break; case R.id.next_button : questionPager.setCurrentItem((((questionPager.getCurrentItem()) + 1) % (questionAdapter.getCount()))); break; } } 
@java.lang.Override public void onItemClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) { if (position == 0) { android.content.Intent intent = new android.content.Intent(android.content.Intent.ACTION_PICK, android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI); intent.setType("image/*"); startActivityForResult(android.content.Intent.createChooser(intent, "Deep Life"), 1); <BUGS> }else if (position == 4) { Show_DialogBox(100); }else { Show_DialogBox(position); }  <BUGE> } 
private void setLanguage(java.lang.String lang) { java.util.Locale locale = null; if (lang == null) { locale = java.util.Locale.getDefault(); }else { <BUGS> locale = java.util.Locale.forLanguageTag(lang); <BUGE> } map = be.nikiroo.jvcard.resources.Bundles.getBundle("resources", locale); } 
@java.lang.Override public void visit(final boa.compiler.visitors.FixPStatement n) { <BUGS> final java.util.Set<java.lang.String> s = befores; <BUGE> final boa.compiler.visitors.Identifier id = ((boa.compiler.visitors.Identifier) (n.getParam1().getType())); final java.lang.String token = id.getToken(); <BUGS> s.add(token); <BUGE> final boa.compiler.visitors.Identifier id1 = ((boa.compiler.visitors.Identifier) (n.getParam2().getType())); final java.lang.String token1 = id1.getToken(); <BUGS> s.add(token1); <BUGE> } 
<BUGS> private static java.lang.StringBuffer generateData(java.util.List<mx.cinvestav.gdl.iot.webpage.dto.MeasureDTO> measures, java.lang.String sensorName, java.lang.String color) { <BUGE> java.lang.StringBuffer json = new java.lang.StringBuffer(""); json.append("\"key\":\"").append(sensorName).append("\","); <BUGS> json.append("\"color\":\"").append(color).append("\","); <BUGE> json.append("\"values\":[").append(mx.cinvestav.gdl.iot.webpage.client.GraphUtils.generateArray(measures)).append("]"); return json; } 
public java.io.InputStream getBinaryStream(java.lang.String columnLabel) throws java.sql.SQLException { try { java.sql.Blob blob = getBlob(columnLabel); <BUGS> if (blob == null) return null;  return blob.getBinaryStream(); <BUGE> } catch (java.lang.Exception e) { throw new java.sql.SQLException((("An error occurred during the retrieval of the binary stream at column '" + columnLabel) + "'"), e); } } 
public void computeCheck(core.agent.Message message) { core.restaurant.agent.Waiter waiter = message.get(0); core.restaurant.agent.Customer customer = message.get(1); java.lang.String choice = message.get(2); <BUGS> synchronized(m_checks) { m_checks.add(new core.restaurant.Check(waiter, customer, choice)); } <BUGE> print((((("Computing " + (customer.getName())) + "'s check for his/her ") + choice) + ".")); stateChanged(); } 
public double[] Project(double[] Xrgb) { assert (Xrgb.length) == 2; <BUGS> java.lang.System.out.println(((("X = " + (Xrgb[0])) + "Y = ") + (Xrgb[1]))); <BUGE> int index = pointmap[((int) (((Xrgb[1]) * (Constants.WIDTH)) + (Xrgb[0])))]; double[] P = this.points.get(index); return P; } 
public static float harmonic() { float oldSum = 0.0F; float sum = 1.0F; int n = 1; while (oldSum < sum) { oldSum = sum; <BUGS> <BUGE> n += 1; <BUGS> sum += 1.0 / n; <BUGE> if ((n % 100000) == 0) { java.lang.System.out.println(((("n = " + n) + ", sum = ") + sum)); } } java.lang.System.out.println(((("n = " + n) + ", sum = ") + sum)); return sum; } 
<BUGS> void addRequestTime(long requestTime, java.util.Map<java.lang.String, java.lang.Object> map) { if (this.includeRequestTime) { if (requestTime > 0) { final long sec = java.util.concurrent.TimeUnit.MILLISECONDS.toSeconds(requestTime); final long ms = java.util.concurrent.TimeUnit.MILLISECONDS.toMillis((requestTime - (java.util.concurrent.TimeUnit.SECONDS.toMillis(sec)))); java.lang.String time = java.lang.String.format("%01d.%03d", sec, ms); if (time != null) { map.put(ch.qos.logback.contrib.json.access.JsonLayout.REQUESTTIME_ATTR_NAME, time); } <BUGE> } } } 
public boolean contains(long value) { int hashCode = hash(value); int hashMarker = -1; <BUGS> while (((this.table[hashCode]) != (java.lang.Long.MIN_VALUE)) && (hashCode != hashMarker)) { <BUGE> if ((this.table[hashCode]) == value) return true;  if (hashMarker == (-1)) hashMarker = hashCode;  hashCode = (hashCode + 1) % (this.table.length); } return false; } 
private void parseContentStream() { this.contentStreams = new java.util.ArrayList(MAX_NUMBER_OF_ELEMENTS); org.verapdf.model.impl.pd.PDPage page = ((org.verapdf.model.impl.pd.PDPage) (this.simplePDObject)); <BUGS> org.verapdf.model.impl.pd.util.PDResourcesHandler resourcesHandler = org.verapdf.model.impl.pd.util.PDResourcesHandler.getInstance(page.getResources(), page.isInheritedResources()); org.verapdf.model.impl.pd.GFPDContentStream contentStream = new org.verapdf.model.impl.pd.GFPDContentStream(page.getContent(), resourcesHandler); this.containsTransparency |= contentStream.isContainsTransparency(); contentStreams.add(contentStream); <BUGE> } 
@java.lang.Override public void onActivityResult(int requestCode, int resultCode, android.content.Intent data) { if (requestCode == (ReminderBottomSheetDialog.UPDATE_REMINDER_REQUEST_CODE)) { long timestamp = data.getLongExtra(ReminderBottomSheetDialog.TIMESTAMP_BUNDLE_KEY, 0); <BUGS> java.util.Calendar calendar = new java.util.GregorianCalendar(); <BUGE> calendar.setTime(new java.util.Date(timestamp)); onReminderUpdated(calendar); } } 
@java.lang.Override public jp.hazuki.yuzubrowser.webkit.CustomWebView makeWebView(boolean cacheType) { jp.hazuki.yuzubrowser.webkit.CustomWebView web = (cacheType) ? new jp.hazuki.yuzubrowser.webkit.CacheWebView(this) : new jp.hazuki.yuzubrowser.webkit.SwipeWebView(this); web.getWebView().setDrawingCacheEnabled(true); web.getWebView().buildDrawingCache(); initWebSetting(web); <BUGS> if ((!(AppData.private_mode.get())) && (AppData.accept_cookie.get())) android.webkit.CookieManager.getInstance().setAcceptThirdPartyCookies(web.getWebView(), AppData.accept_third_cookie.get());  <BUGE> return web; } 
@org.junit.Test public void testRFC6265_SidExample() { java.lang.String rawCookie = "SID=31d4d96e407aad42"; javax.servlet.http.Cookie[] cookies = parseCookieHeaders(rawCookie); org.junit.Assert.assertThat("Cookies.length", cookies.length, org.hamcrest.Matchers.is(1)); <BUGS> assertCookie("Cookies[0]", cookies[0], "SID", "31d4d96e407aad42", 1, null); <BUGE> } 
public void setValue(float v) { if (v < 0) v = 0; else if (v > 1) v = 1;   <BUGS> float newy = v * ((getHeight()) - (h.getHeight())); float y = (-newy) + (getY()); h.setPosition(h.getX(), ((getY()) + (-y))); <BUGE> } 
<BUGS> private int getDepth(java.lang.String line) { <BUGE> int depth = 1; for (int i = 0; i < (line.length()); i++) { if (((line.charAt(i)) == '\t') || ((line.charAt(i)) == ' ')) { depth++; }else { break; } } return depth; } 
private void showAboutZanteDialog() { <BUGS> android.util.Log.v("HELLO", "HELLLO"); <BUGE> android.app.FragmentTransaction ft = getFragmentManager().beginTransaction(); android.app.Fragment prev = getFragmentManager().findFragmentByTag("shownDialog"); if (prev != null) { ft.remove(prev); } ft.addToBackStack(null); extinctspecie.com.zantetravel.activities.MainActivity.newFragment = extinctspecie.com.zantetravel.fragments.MyDialogFragment.newInstance(extinctspecie.com.zantetravel.activities.MainActivity.CUSTOM_DIALOG_ID_FOR_ABOUT_APP); extinctspecie.com.zantetravel.activities.MainActivity.newFragment.setCancelable(true); extinctspecie.com.zantetravel.activities.MainActivity.newFragment.show(ft, "shownDialog"); } 
@java.lang.Override public void onHeadHit() { Gdx.app.log("Coin", "Collision"); <BUGS> getCell().setTile(com.mkemp.mariobros.Sprites.Coin.tileSet.getTile(BLANK_COIN)); com.mkemp.mariobros.Scenes.Hud.addScore(100); <BUGE> if ((getCell().getTile().getId()) == (BLANK_COIN)) MarioBros.manager.get("audio/sounds/bump.wav", com.badlogic.gdx.audio.Sound.class).play(); else MarioBros.manager.get("audio/sounds/coin.wav", com.badlogic.gdx.audio.Sound.class).play();  <BUGS> <BUGE> } 
@java.lang.Override public void onUpdate(net.minecraft.item.ItemStack stack, net.minecraft.world.World world, net.minecraft.entity.Entity player, int slot, boolean isCurrent) { if ((stack != null) && ((stack.getTagCompound()) != null)) { net.minecraft.nbt.NBTTagCompound nbt = stack.getTagCompound(); if ((nbt.hasKey("IsOpenDummy")) == true) { nbt.removeTag("IsOpenDummy"); <BUGS> nbt.setBoolean("IsOpen", false); <BUGE> } } } 
@java.lang.Override public void dataUpdated(java.lang.Integer i) { float maxVolume = java.lang.Math.min(dataManager.getGlobalMaxVolumeValue(), 1000); <BUGS> transferFunction.setMaxOrdinates(new java.awt.geom.Point2D.Float(maxVolume, 1.0F)); <BUGE> float lowestDataPoint = dataManager.getGlobalLowestVolumeValue(); transferFunction.resetColors(); transferFunction.setColor(new java.awt.geom.Point2D.Float(((maxVolume / (dataManager.getGlobalMaxVolumeValue())) * lowestDataPoint), 0.001F), transferFunction.getColors().firstEntry().getValue()); } 
public void setAllGames(modeling.GameList allGames) { if ((allGames.getGames().size()) != 0) { this.allGames = allGames.getGames(); if ((currGame) != null) { setCurrGame(allGames.findGame(currGame.getGameID())); } setChanged(); <BUGS> modeling.GameList wrapperGameList = new modeling.GameList(); wrapperGameList.setGames(this.allGames); notifyObservers(wrapperGameList); <BUGE> } } 
public static java.io.OutputStream getFileOutputSteam(android.content.Context context, java.lang.String fileName, android.support.v4.provider.DocumentFile root, java.lang.String... subDirs) { android.support.v4.provider.DocumentFile parent = ml.puredark.hviewer.utils.DocumentUtil.getDirDocument(root, subDirs); if (parent == null) return null;  android.support.v4.provider.DocumentFile file = parent.findFile(fileName); <BUGS> <BUGE> return ml.puredark.hviewer.utils.DocumentUtil.getFileOutputSteam(context, file.getUri()); } 
public void printFac() { switch (type) { case "integer" : java.lang.System.out.print(value); break; case "id" : java.lang.System.out.print(id); break; case "exp" : <BUGS> java.lang.System.out.println("("); <BUGE> exp.printExp(); java.lang.System.out.print(")"); } } 
private void saveIntegrityKey(javax.crypto.SecretKey secretKey, java.lang.String integrityKeyFilename) { <BUGS> try { java.io.ObjectOutputStream integrityKeyOutputStream = new java.io.ObjectOutputStream(new java.io.FileOutputStream(integrityKeyFilename)); <BUGE> integrityKeyOutputStream.writeObject(secretKey); integrityKeyOutputStream.close(); consoleOutputController.logOnScreen(java.lang.String.format(keySavedMessage, integrityKeyFilename)); } catch (java.io.IOException e) { throw new ch.ge.ve.offlineadmin.exception.KeyGenerationRuntimeException("error while saving the integrity key", e); } } 
public boolean isSatisfiedByBefore(java.util.Date date) { java.util.Calendar testDateCal = java.util.Calendar.getInstance(getTimeZone()); testDateCal.setTime(date); testDateCal.set(java.util.Calendar.MILLISECOND, 0); java.util.Date originalDate = testDateCal.getTime(); <BUGS> testDateCal.add(java.util.Calendar.SECOND, (-1)); <BUGE> java.util.Date timeBefore = getTimeBefore(testDateCal.getTime()); return (timeBefore != null) && (timeBefore.equals(originalDate)); } 
@com.jobmatch.controllers.RequestMapping(value = "/create", method = RequestMethod.GET) public java.lang.String createJob(org.springframework.ui.Model model) { com.jobmatch.models.JobPost newJobPost = new com.jobmatch.models.JobPost(); model.addAttribute("title", "Create job post"); model.addAttribute("skills", new com.jobmatch.viewmodels.RankMap(newJobPost.getSkills())); model.addAttribute("skillOptions", skillRepository.getMap()); model.addAttribute("jobPost", newJobPost); <BUGS> model.addAttribute("countries", newJobPost.getCountries()); <BUGE> return "/jobs/edit"; } 
@org.junit.Test public void getThread_Id_Page() throws java.lang.Exception { java.lang.Thread thread = mapper.getThread(1, 7); assertNotNull(thread.getPosts()); <BUGS> assertEquals(thread.getPosts().getPage().intValue(), 7); <BUGE> assertEquals(180, thread.getPosts().getOffset().intValue()); } 
@javafx.fxml.FXML private void handleLogoutButton() { javafx.stage.Stage stage; javafx.scene.Parent root; stage = ((javafx.stage.Stage) (logoutButton.getScene().getWindow())); try { <BUGS> <BUGE> root = javafx.fxml.FXMLLoader.load(getClass().getResource("/view/userAccount/LoginUI.fxml")); javafx.scene.Scene scene = new javafx.scene.Scene(root); stage.setScene(scene); stage.show(); <BUGS> logic.authentication.Authentication.setInstanceToNull(); <BUGE> } catch (java.io.IOException e) { e.printStackTrace(); } } 
public void setTopic(java.lang.String topic) throws java.io.IOException { <BUGS> <BUGE> for (com.rbruno.irc.templates.Client current : clients) current.getConnection().send(Reply.RPL_TOPIC, current, (((this.getName()) + " ") + (this.getTopic())));  <BUGS> this.topic = topic; <BUGE> } 
java.util.List<ru.yakovburtsev.socialnetwork.core.model.UserInfo> findByNameAndSurname(java.lang.String name, java.lang.String surname) { log.info("find by name={} and surname={}", name, surname); ru.yakovburtsev.socialnetwork.core.model.UserInfo userInfo = new ru.yakovburtsev.socialnetwork.core.model.UserInfo(); userInfo.setName(name); userInfo.setSurname(surname); userInfoMessageSender.send(userInfo, ru.yakovburtsev.socialnetwork.webclient.controller.AbstractUserController.FIND_USERS, ru.yakovburtsev.socialnetwork.webclient.controller.AbstractUserController.TRUE); <BUGS> return userInfoMessageReceiver.receiveList(((ru.yakovburtsev.socialnetwork.webclient.controller.AbstractUserController.FIND_USERS_SELECTOR) + (ru.yakovburtsev.socialnetwork.webclient.controller.AbstractUserController.quoted(((name + " ") + surname))))); <BUGE> } 
protected void afterExecute(java.lang.Runnable r, java.lang.Throwable t) { try { org.wso2.carbon.apimgt.gateway.throttling.publisher.DataProcessAndPublishingAgent agent = ((org.wso2.carbon.apimgt.gateway.throttling.publisher.DataProcessAndPublishingAgent) (r)); <BUGS> agent.setDataReference(null); <BUGE> org.wso2.carbon.apimgt.gateway.throttling.publisher.ThrottleDataPublisher.dataPublisherPool.release(agent); } catch (java.lang.Exception e) { org.wso2.carbon.apimgt.gateway.throttling.publisher.ThrottleDataPublisher.log.error(("Error while returning Throttle data publishing agent back to pool" + (e.getMessage()))); } } 
protected void loadInverseChildKeys(org.grails.datastore.mapping.core.Session session, java.lang.Class childType, java.util.Collection keys) { <BUGS> if (proxyEntities) { for (java.lang.Object key : keys) { add(session.proxy(childType, ((java.io.Serializable) (key)))); <BUGE> } <BUGS> }else { addAll(session.retrieveAll(childType, keys)); <BUGE> } } 
public static void setFloat(java.lang.String group, java.lang.String param, float value) { if (!(Config.data.hasKey(group))) Config.data.setJSONObject(group, new processing.data.JSONObject());  processing.data.JSONObject grp = Config.data.getJSONObject(group); grp.setFloat(param, value); <BUGS> Config.data.setJSONObject(param, value); <BUGE> Config.modified = true; } 
private boolean pntInCircle(double px, double py, double x1, double y1, double radius) { double diffX = x1 - px; double diffY = y1 - py; double dist = (diffX * diffX) + (diffY * diffY); <BUGS> if (dist < (radius * radius)) { return true; }else { return false; } <BUGE> } 
private void initializeParameters(com.bow3n.controller.server.model.Task task) { task.setFinished(java.lang.Boolean.FALSE); <BUGS> if ((task.getProject().getId()) != null) { <BUGE> task.setProject(projectRepository.findOne(task.getProject().getId())); } } 
public void saveNewInputToProfile(android.view.View view) { editMyProfileView.saveTextFieldsToProfile(myProfile); if (!(canceledByError)) { <BUGS> java.lang.System.out.println("*!*!*!*!*!*!*!*!*! SKAPAR NY INTENT"); <BUGE> android.content.Intent intent = new android.content.Intent(); android.os.Bundle bundle = new android.os.Bundle(); bundle.putSerializable("sendProfile", myProfile); intent.putExtras(bundle); setResult(2, intent); finish(); } } 
private void initStreamAudioToServer() throws java.lang.Exception { android.util.Log.d(com.ibm.watson.developer_cloud.android.speech_to_text.v1.audio.WebSocketUploader.TAG, "Connecting..."); this.encoder.initEncoderWithUploader(this); if (this.sConfig.isSSL) this.trustServer();  boolean rc; rc = this.connectBlocking(); <BUGS> if (!rc) { <BUGE> android.util.Log.e(com.ibm.watson.developer_cloud.android.speech_to_text.v1.audio.WebSocketUploader.TAG, "Connection failed!"); this.uploadPrepared = false; throw new java.lang.Exception("Connection failed!"); } <BUGS> android.util.Log.d(com.ibm.watson.developer_cloud.android.speech_to_text.v1.audio.WebSocketUploader.TAG, "Connected"); this.sendSpeechHeader(); <BUGE> } 
public boolean allClientsAhead(java.lang.Long workQueueHeadTime) { synchronized(lock) { for (net.grigoriadi.sc.domain.Client client : registeredClients) { java.lang.Long time = lastItemTimesByClient.get(client.getClientId()); <BUGS> if ((time == null) || (workQueueHeadTime > time)) { <BUGE> return false; } } } return true; } 
public int compare(ScoredDocument doc1, ScoredDocument doc2) { if ((doc1.getScore()) < (doc2.getScore())) { <BUGS> return -1; <BUGE> }else if ((doc1.getScore()) > (doc2.getScore())) { <BUGS> return 1; <BUGE> }  return 0; } 
@java.lang.Override public com.itis.model.Post update(com.itis.model.Post post, com.itis.form.PostCreationForm form) { com.itis.model.Post post1 = transformer.apply(form); post.setTitle(post1.getTitle()); post.setText(post1.getText()); <BUGS> return postRepository.save(post1); <BUGE> } 
public static boolean listContainsArray(java.util.List<char[]> list, char[] array) { for (char[] element : list) { <BUGS> if (!(java.util.Arrays.equals(element, array))) { return false; <BUGE> } } <BUGS> return true; <BUGE> } 
protected void doUpgrade(at.pcgamingfreaks.Configuration oldConfiguration) { logger.info("No custom config upgrade code implemented! Copying all data from old config to new one."); <BUGS> for (java.lang.String key : config.getKeys()) { <BUGE> if (oldConfiguration.config.isSet(key)) { if (key.equals("Version")) continue;  config.set(key, oldConfiguration.config.getString(key, null)); } } } 
public void initMargins(android.graphics.Rect margins, android.view.View view) { <BUGS> android.view.ViewGroup.LayoutParams layoutParams = view.getLayoutParams(); if (layoutParams instanceof android.view.ViewGroup.MarginLayoutParams) { <BUGE> initMarginRect(margins, ((android.view.ViewGroup.MarginLayoutParams) (layoutParams))); }else { margins.set(0, 0, 0, 0); } } 
private static java.util.Map<java.lang.Class<? extends org.apache.ignite.math.Vector>, java.lang.Class<? extends org.apache.ignite.math.Matrix>> typesMap() { return new java.util.LinkedHashMap<java.lang.Class<? extends org.apache.ignite.math.Vector>, java.lang.Class<? extends org.apache.ignite.math.Matrix>>() { { put(org.apache.ignite.math.impls.vector.DenseLocalOnHeapVector.class, org.apache.ignite.math.impls.matrix.DenseLocalOnHeapMatrix.class); put(org.apache.ignite.math.impls.vector.DenseLocalOffHeapVector.class, org.apache.ignite.math.impls.matrix.DenseLocalOffHeapMatrix.class); put(org.apache.ignite.math.impls.vector.RandomVector.class, org.apache.ignite.math.impls.matrix.RandomMatrix.class); <BUGS> put(org.apache.ignite.math.impls.vector.ConstantVector.class, null); <BUGE> put(org.apache.ignite.math.impls.vector.SparseLocalOnHeapVector.class, org.apache.ignite.math.impls.matrix.SparseLocalOnHeapMatrix.class); put(org.apache.ignite.math.impls.vector.SingleElementVector.class, null); <BUGS> <BUGE> } }; } 
@java.lang.Override public void paint(java.awt.Graphics g) { java.awt.Graphics2D ga = ((java.awt.Graphics2D) (g)); ga.setRenderingHint(java.awt.RenderingHints.KEY_ANTIALIASING, java.awt.RenderingHints.VALUE_ANTIALIAS_ON); setText(ALLQ[choosedSub][CurrentNum[choosedSub]]); <BUGS> drawaString(g, ALLC[choosedSub][CurrentNum[choosedSub]][2], 20, 32); <BUGE> } 
public void shutdown() { if ((bundleContext) != null) { try { bundleContext.getBundle(0).stop(); <BUGS> while ((bundleContext.getBundles()) != null) { java.lang.Thread.sleep(100); } <BUGE> } catch (org.osgi.framework.BundleException e) { e.printStackTrace(); } catch (java.lang.NullPointerException e) { java.lang.System.exit(0); } catch (java.lang.Exception e) { e.printStackTrace(); } } } 
public void put(java.util.Map<java.lang.String, java.lang.Object> event) { <BUGS> com.lmax.disruptor.RingBuffer<com.dtstack.logstash.assembly.disruptor.MapEvent> ringBuffer = disruptor.getRingBuffer(); long sequence = ringBuffer.next(); try { com.dtstack.logstash.assembly.disruptor.MapEvent mapEvent = ringBuffer.get(sequence); if ((event != null) && ((event.size()) > 0)) <BUGE> mapEvent.setEvent(event); <BUGS>  } finally { ringBuffer.publish(sequence); <BUGE> } } 
public void testIterFilterLimit() { <BUGS> siena.core.async.SienaFuture<java.lang.Iterable<siena.base.test.model.PersonUUID>> future = pm.createQuery(siena.base.test.model.PersonUUID.class).filter("n>", 1).order("n").iter(1); java.lang.Iterable<siena.base.test.model.PersonUUID> people = future.get(); <BUGE> assertNotNull(people); siena.base.test.model.PersonUUID[] array = new siena.base.test.model.PersonUUID[]{ siena.base.test.BaseAsyncTest.UUID_CURIE }; int i = 0; for (siena.base.test.model.PersonUUID PersonIntKey : people) { assertEquals(array[i], PersonIntKey); i++; } } 
public static void main(java.lang.String[] args) throws java.lang.Exception { weka.core.Instances trainingCancer = HomeWork2.MainHW2.loadData("cancer_train.txt"); weka.core.Instances testingCancer = HomeWork2.MainHW2.loadData("cancer_test.txt"); weka.core.Instances validationCancer = HomeWork2.MainHW2.loadData("cancer_validation.txt"); <BUGS> <BUGE> HomeWork2.DecisionTree tree = new HomeWork2.DecisionTree(); tree.buildClassifier(trainingCancer); <BUGS> java.lang.System.out.println(trainingCancer.get(3).classValue()); <BUGE> } 
<BUGS> void eliminationTournament() { <BUGE> while ((players.size()) > 1) { swissTournamentRunner.GUI.wipePane(); shufflePlayers(); sortRankings(); updateParticipantStats(); print(displayInDepthRankings()); <BUGS> generatePairings(); <BUGE> pollForResults(); elimination(); } } 
@java.lang.Override public void onActivityCreated(android.os.Bundle savedInstanceState) { super.onActivityCreated(savedInstanceState); adapter = new android.widget.ArrayAdapter(getActivity(), android.R.layout.simple_list_item_1); setEmptyText("No data, please add from menu."); setListAdapter(adapter); setListShown(false); getLoaderManager().initLoader(ch.ronoli.tensing.fragments.CategoryFragment.LOADER_ID, null, this); <BUGS> restoreActionBar(); <BUGE> } 
public boolean validatePurchaseCategoryCode(java.lang.String purchaseCategoryCode) throws java.lang.Exception { <BUGS> boolean isvalid = true; <BUGE> try { java.util.List<java.lang.String> validCategoris = apiDAO.getValidPurchaseCategories(); if ((validCategoris.size()) > 0) { <BUGS> isvalid = false; <BUGE> for (java.lang.String category : validCategoris) { if (category.equalsIgnoreCase(purchaseCategoryCode)) { isvalid = true; break; } } } } catch (java.lang.Exception e) { throw e; } return isvalid; } 
public org.apache.carbondata.core.datastore.chunk.MeasureColumnDataChunk convertToMeasureColDataChunk(int index) { assert index < (pagesCount); if ((dataChunks) == null) { dataChunks = new org.apache.carbondata.core.datastore.chunk.MeasureColumnDataChunk[pagesCount]; } try { <BUGS> dataChunks[index] = chunkReader.convertToMeasureChunk(fileReader, blockId, rawData, offSet, length, index); <BUGE> } catch (java.io.IOException e) { throw new java.lang.RuntimeException(e); } return dataChunks[index]; } 
@java.lang.Override public synchronized boolean isOwnedBy(java.lang.Thread t) { <BUGS> if (((currentOwner) == t) && (t.isAlive())) { return true; <BUGE> }else <BUGS> if (((currentOwner) == null) && ((t == null) || (t.isAlive()))) { return true; }else { <BUGE> return false; <BUGS> } <BUGE>  } 
@org.junit.Test public void testIssuerName() throws gov.hhs.fha.nhinc.properties.PropertyAccessException { final gov.hhs.fha.nhinc.callback.opensaml.CallbackProperties callbackProps = org.mockito.Mockito.mock(gov.hhs.fha.nhinc.callback.opensaml.CallbackProperties.class); <BUGS> java.security.cert.X509Certificate certificate = org.mockito.Mockito.mock(java.security.cert.X509Certificate.class); certificate = null; <BUGE> java.lang.String sIssuer = callbackProps.getIssuer(); <BUGS> if (certificate != null) { sIssuer = null; }else { gov.hhs.fha.nhinc.properties.PropertyAccessor propAccessor = createPropertyAccessor(); sIssuer = propAccessor.getProperty(gov.hhs.fha.nhinc.callback.opensaml.HOKSAMLAssertionBuilderTest.PROPERTY_FILE_NAME, gov.hhs.fha.nhinc.callback.opensaml.HOKSAMLAssertionBuilderTest.PROPERTY_NAME); org.junit.Assert.assertEquals(gov.hhs.fha.nhinc.callback.opensaml.HOKSAMLAssertionBuilderTest.PROPERTY_VALUE_STRING, sIssuer); } <BUGE> sIssuer = sIssuer.replace("%", ","); } 
<BUGS> public java.util.List<java.lang.Integer> getNotCheckedList() { java.util.List<java.lang.Integer> result = new java.util.ArrayList<java.lang.Integer>(); <BUGE> for (java.util.Map.Entry<java.lang.Integer, java.lang.Boolean> checkedEntry : checkedMap.entrySet()) { <BUGS> if ((checkedEntry.getValue()) == false) <BUGE> result.add(checkedEntry.getKey()); <BUGS>  <BUGE> } return result; } 
@java.lang.Override public org.jcodec.common.MuxerTrack addVideoTrack(org.jcodec.common.Codec codec, org.jcodec.common.VideoCodecMeta meta) { org.jcodec.containers.mp4.muxer.FramesMP4MuxerTrack track = addTrack(MP4TrackType.VIDEO, codec); <BUGS> if (meta != null) { if (codec == (org.jcodec.common.Codec.H264)) { track.addVideoSampleEntry(meta); }else { throw new java.lang.RuntimeException("VideoCodecMeta is required upfront for all codecs but H.264"); } <BUGE> } <BUGS> <BUGE> return track; } 
public double[] mapSubstrateOutputsToStandardOutputs(double[] outputs) { double[] modifiedOutputs = new double[numOutputs]; if ((numOutputs) == (edu.utexas.cs.nn.tasks.gridTorus.HyperNEATNNTorusPredPreyController.NUM_OUTPUTS_WITH_NO_ACTION)) { modifiedOutputs[NOTHING_INDEX] = outputs[edu.utexas.cs.nn.tasks.gridTorus.HyperNEATNNTorusPredPreyController.SUBSTRATE_NOTHING_INDEX]; } <BUGS> java.lang.System.out.println(java.util.Arrays.toString(outputs)); <BUGE> modifiedOutputs[edu.utexas.cs.nn.gridTorus.controllers.TorusPredPreyController.UP_INDEX] = outputs[edu.utexas.cs.nn.tasks.gridTorus.HyperNEATNNTorusPredPreyController.SUBSTRATE_UP_INDEX]; modifiedOutputs[edu.utexas.cs.nn.gridTorus.controllers.TorusPredPreyController.RIGHT_INDEX] = outputs[edu.utexas.cs.nn.tasks.gridTorus.HyperNEATNNTorusPredPreyController.SUBSTRATE_RIGHT_INDEX]; modifiedOutputs[edu.utexas.cs.nn.gridTorus.controllers.TorusPredPreyController.DOWN_INDEX] = outputs[edu.utexas.cs.nn.tasks.gridTorus.HyperNEATNNTorusPredPreyController.SUBSTRATE_DOWN_INDEX]; modifiedOutputs[edu.utexas.cs.nn.gridTorus.controllers.TorusPredPreyController.LEFT_INDEX] = outputs[edu.utexas.cs.nn.tasks.gridTorus.HyperNEATNNTorusPredPreyController.SUBSTRATE_LEFT_INDEX]; return modifiedOutputs; } 
@java.lang.Override public int hashCode() { final int prime = 31; int result = 1; result = (prime * result) + ((discordUserInfo) == null ? 0 : discordUserInfo.hashCode()); <BUGS> result = (prime * result) + ((kagName) == null ? 0 : kagName.hashCode()); <BUGE> return result; } 
private java.lang.Object sortMapByKey(java.lang.Object object) { if (object instanceof java.util.Map) { <BUGS> java.util.TreeMap sortedMap = new java.util.TreeMap(com.google.common.collect.Ordering.natural()); <BUGE> sortedMap.putAll(((java.util.Map) (object))); return sortedMap; }else if (object instanceof java.util.List) { java.util.Collections.sort(((java.util.List) (object)), ( o1, o2) -> o1.toString().compareTo(o2.toString())); return object; }else { return object; }  } 
public synchronized void removeFromCursor(com.gdo.stencils.StclContext stclContext, com.gdo.stencils.key.IKey key) { com.gdo.stencils.plug.PStcl stcl = _stencils.get(key); _stencils.remove(key); <BUGS> _properties.remove(key); <BUGE> _modified.remove(key); _locked.remove(key); if (stcl != null) { <BUGS> stcl.clear(stclContext); <BUGE> } } 
public static de.hsnr.inr.sir.query.QueryItem create(java.lang.String name) { try { return de.hsnr.inr.sir.query.QueryConjunction.create(name); } catch (java.lang.IllegalArgumentException e) { } try { <BUGS> return de.hsnr.inr.sir.query.PhraseQuery.create(name); <BUGE> } catch (java.lang.IllegalArgumentException e) { } try { <BUGS> return de.hsnr.inr.sir.query.ProximityQuery.create(name); <BUGE> } catch (java.lang.IllegalArgumentException e) { } return de.hsnr.inr.sir.query.ConcreteQueryTerm.create(name); } 
public po.GoodsModelPO set_signal_name(vo.GoodsVO goods) throws java.lang.Exception { java.util.HashMap<java.lang.String, po.GoodsModelPO> goodsModels = goodsListPO().getGoodsModels(); po.GoodsModelPO temp = goodsModels.get(goods.id); temp.setName(goods.name); <BUGS> if ((goods.amount) > 0) { temp.setSignal(goods.amount); return temp; <BUGE> } <BUGS> return null; <BUGE> } 
private void fakeRegisteredServiceEventForExistingServices(final org.osgi.framework.BundleContext bundleContext, org.osgi.framework.ServiceListener sl, java.lang.String filter) throws org.osgi.framework.InvalidSyntaxException { org.osgi.framework.ServiceReference<?>[] servicesPresent = bundleContext.getServiceReferences(((java.lang.String) (null)), filter); <BUGS> for (org.osgi.framework.ServiceReference<?> serviceReference : servicesPresent) { sl.serviceChanged(new org.osgi.framework.ServiceEvent(org.osgi.framework.ServiceEvent.REGISTERED, serviceReference)); <BUGE> } } 
@org.bukkit.event.EventHandler @java.lang.SuppressWarnings(value = "unused") public void onPlayerJoin(org.bukkit.event.player.PlayerJoinEvent ev) { final org.bukkit.entity.Player p = ev.getPlayer(); <BUGS> if ((p.hasPermission("multispawn.noteleport")) || ((plugin.getSpawns(p)) != null)) { <BUGE> return ; } plugin.sendPlayerToSpawn(p); } 
@org.testng.annotations.Test public void testUseIndexWithOr() throws java.lang.Exception { long idxUsagesBefore = indexUsages(db); java.util.List<com.orientechnologies.orient.core.record.impl.ODocument> qResult = db.command(new com.orientechnologies.orient.core.sql.OCommandSQL("select * from foo where bar = 2 or name ='a' and bar >= 0")).execute(); <BUGS> org.testng.Assert.assertEquals(qResult.size(), 2); org.testng.Assert.assertEquals(indexUsages(db), (idxUsagesBefore + 2)); <BUGE> } 
@java.lang.Override public void it(java.lang.String text, com.github.paulcwarren.ginkgo4j.ExecutableBlock block, boolean isFocused) { <BUGS> if (filter.startsWith(text)) { <BUGE> filter = splitFilter(filter, text); try { chain.setSpec(block); chain.setIsFocused((isFocused |= chain.isFocused())); } catch (java.lang.Exception e) { e.printStackTrace(); } } } 
protected amidst.map.layers.EndCityLayer.ChunkProbability hasSuitableIslandFoundation(amidst.map.Fragment_TheEnd frag, int chunkX, int chunkZ) { <BUGS> <BUGE> float requiredInfluence = 60; java.util.List<amidst.map.EndIsland> islands = frag.getEndIslands(); for (amidst.map.EndIsland island : islands) { float influence = island.influenceAtChunk(chunkX, chunkZ); if (influence >= 0.0) { if (influence >= requiredInfluence) { <BUGS> return amidst.map.layers.EndCityLayer.ChunkProbability.Likely; <BUGE> }else { <BUGS> return amidst.map.layers.EndCityLayer.ChunkProbability.Possible; <BUGE> } } } <BUGS> return amidst.map.layers.EndCityLayer.ChunkProbability.None; <BUGE> } 
<BUGS> public static java.lang.Object invokeMethod(java.lang.reflect.Method method, java.lang.Object object, java.lang.Object... args) { <BUGE> try { boolean a = !(method.isAccessible()); if (!(method.isAccessible())) { method.setAccessible(true); } java.lang.Object obj = method.invoke(object, args); if (a) { method.setAccessible(false); } return obj; } catch (java.lang.Exception e) { e.printStackTrace(); return null; } } 
@java.lang.Override public final void clear() { final java.util.Iterator<com.github.veqryn.collect.Node<K, V>> iter = new NodePrefixSubMapIterator(key, includePrefixOfKey, keyInclusive, includePrefixedByKey, canBeEmpty); while (iter.hasNext()) { <BUGS> m.deleteNode(iter.next()); <BUGE> } } 
<BUGS> private static int getIndex(edu.cmu.tetrad.graph.Endpoint endpoint) { <BUGE> if (endpoint == (Endpoint.CIRCLE)) return 0;  if (endpoint == (Endpoint.ARROW)) return 1;  if (endpoint == (Endpoint.TAIL)) return 2;  if (endpoint == null) return 3;  throw new java.lang.IllegalArgumentException(); } 
<BUGS> public void setTeam(java.lang.Integer team) { <BUGE> if ((de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1) != null) { de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1.destroy(); de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2.destroy(); } de.mickyjou.plugins.pvpevent.listener.player.EventTeam toSet = de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.teams.get(team); de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 = new de.mickyjou.plugins.pvpevent.listener.player.NPC(toSet.getPlayers()[0].getUniqueId(), de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.firstNPC); de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2 = new de.mickyjou.plugins.pvpevent.listener.player.NPC(toSet.getPlayers()[1].getUniqueId(), de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.secondNPC); de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1.spawn(); de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2.spawn(); } 
private void handleIntent(android.content.Intent intent) { <BUGS> if (intent.getAction().equals(Intent.ACTION_SEARCH)) { <BUGE> java.lang.String query = intent.getStringExtra(SearchManager.QUERY); android.widget.Toast.makeText(mContext, query, Toast.LENGTH_SHORT).show(); android.provider.SearchRecentSuggestions suggestions = new android.provider.SearchRecentSuggestions(this, com.quartzodev.provider.SuggestionProvider.AUTHORITY, com.quartzodev.provider.SuggestionProvider.MODE); suggestions.saveRecentQuery(query, null); } } 
private void updateNotifyMenu(boolean flag) { if ((menu) == null) return ;  <BUGS> <BUGE> if ((cn.edu.jxnu.awesome_campus.MainActivity.presenter.getCurrentSelectedID()) == (DrawerItem.HOME.getId())) { <BUGS> menu.clear(); <BUGE> if (flag) { getMenuInflater().inflate(R.menu.menu_notify_unread, menu); }else { getMenuInflater().inflate(R.menu.menu_notify_none, menu); } } } 
<BUGS> private void NewCookie(javax.servlet.http.HttpServletResponse response) { <BUGE> javax.servlet.http.Cookie cookie = new javax.servlet.http.Cookie("cartID", Managers.ShoppingCartHolder.getRandomID()); response.addCookie(cookie); Managers.ShoppingCart cart = new Managers.ShoppingCart(); Managers.ShoppingCartHolder.getInstance().AddCart(cart, cookie.getValue()); } 
@java.lang.Override public net.minecraft.item.ItemStack getStack() { if (!((this.inventory) instanceof infiniteinvo.inventory.BigInventoryPlayer)) { return this.inventory.getStackInSlot(this.slotIndex); }else <BUGS> if ((((infiniteinvo.inventory.BigInventoryPlayer) (this.inventory)).getUnlockedSlots()) > ((this.slotIndex) - 9)) { <BUGE> return this.inventory.getStackInSlot(this.slotIndex); }else { return lockedStack.copy(); }  } 
private <T> void check(net.serenitybdd.screenplay.Consequence<T> consequence, net.serenitybdd.screenplay.ErrorTally errorTally) { try { eventBusInterface.startQuestion(net.serenitybdd.screenplay.formatting.FormattedTitle.ofConsequence(consequence)); if (eventBusInterface.shouldIgnoreConsequences()) { <BUGS> net.thucydides.core.steps.StepEventBus.getEventBus().stepIgnored(); <BUGE> }else { consequence.evaluateFor(this); <BUGS> <BUGE> } <BUGS> eventBusInterface.reportStepFinished(); <BUGE> } catch (net.serenitybdd.screenplay.exceptions.IgnoreStepException e) { eventBusInterface.reportStepIgnored(); } catch (java.lang.Throwable e) { errorTally.recordError(consequence, e); } } 
@java.lang.Override public com.jetbrains.jetpad.vclang.term.expr.visitor.CheckTypeVisitor.Result visitDefCall(com.jetbrains.jetpad.vclang.term.Abstract.DefCallExpression expr, com.jetbrains.jetpad.vclang.term.expr.type.Type expectedType) { com.jetbrains.jetpad.vclang.term.expr.visitor.CheckTypeVisitor.PreResult result = myTypeCheckingDefCall.typeCheckDefCall(expr); if ((result == null) || (!(checkPath(result, expr)))) { return null; } <BUGS> return checkResultImplicit(expectedType, checkDefCall(result), expr); <BUGE> } 
public void deleteAll() { try { com.edp.myesper.engine.EsperEngine.logger.info("Trying to delete all queries from the Esper Engine Server."); deleteQueryDB("ALL"); java.util.List<java.lang.Integer> keyset = new java.util.ArrayList<java.lang.Integer>(queryMap.keySet()); for (int i : keyset) { queryMap.get(i).destroyQuery(); queryMap.remove(i); } com.edp.myesper.engine.EsperEngine.logger.info("All queries have been deleted from the Esper Engine Server."); countQueryRunning = 0; } catch (java.lang.Exception e) { <BUGS> com.edp.myesper.engine.EsperEngine.logger.error("Something went wrong while trying to delete all queries."); <BUGE> } } 
@org.junit.Test public void shouldNotFlushCacheWhenBaseUrlConfigIsNotChanged() { <BUGS> com.thoughtworks.go.server.cache.GoCache cache = org.mockito.Mockito.mock(com.thoughtworks.go.server.cache.GoCache.class); <BUGE> com.thoughtworks.go.listener.BaseUrlChangeListener listener = new com.thoughtworks.go.listener.BaseUrlChangeListener(new com.thoughtworks.go.domain.ServerSiteUrlConfig(""), new com.thoughtworks.go.domain.ServerSiteUrlConfig(""), cache); com.thoughtworks.go.config.CruiseConfig newCruiseConfig = new com.thoughtworks.go.config.BasicCruiseConfig(); newCruiseConfig.setServerConfig(serverConfigWith("", "")); listener.onConfigChange(newCruiseConfig); <BUGS> org.mockito.Mockito.verifyZeroInteractions(cache); <BUGE> } 
@java.lang.Override public void update(float delta) { elapsed += delta; <BUGS> runnable.pitch = ionium.util.MathHelper.lerp(init, end, com.badlogic.gdx.math.MathUtils.clamp(((elapsed) / (time)), 0.0F, 1.0F)); <BUGE> Gdx.app.postRunnable(runnable); } 
public void handleResetButtonAction(javafx.event.ActionEvent event) throws java.io.IOException { java.lang.System.out.println("reseting level"); int i; try { i = java.lang.Integer.parseInt(levelNumber.getText()); } catch (java.lang.Exception e) { return ; } <BUGS> <BUGE> resetPieces(); <BUGS> resetButtons(); resetBoard(i); resetFields(i); <BUGE> } 
@java.lang.Override protected void onResume() { super.onResume(); isFirstScan = true; registerReceiver(mWifiScanReceiver, new android.content.IntentFilter(android.net.wifi.WifiManager.SCAN_RESULTS_AVAILABLE_ACTION)); android.content.IntentFilter filter = new android.content.IntentFilter(); filter.addAction(WifiManager.NETWORK_STATE_CHANGED_ACTION); filter.addAction(ConnectivityManager.CONNECTIVITY_ACTION); registerReceiver(mWifiChangeReceiver, filter); boolean mSuccess = false; mSuccess = mWifiManger.startScan(); <BUGS> android.util.Log.e("WifiChangeReceiver", ("scan result :" + mSuccess)); <BUGE> showProgressDialog("Scan WiFi..."); } 
public static boolean setByteFile(java.lang.String fileName, java.lang.String hex) { if ((MockFTPServerJulia.fakeFtpServer.getFileSystem()) == null) { org.mockftpserver.fake.filesystem.FileSystem fileSystem = new org.mockftpserver.fake.filesystem.UnixFakeFileSystem(); MockFTPServerJulia.fakeFtpServer.setFileSystem(fileSystem); } org.mockftpserver.fake.filesystem.FileEntry file = new org.mockftpserver.fake.filesystem.FileEntry(fileName); <BUGS> java.lang.System.out.println(hex); <BUGE> file.setContents(MockFTPServerJulia.hexStringToByteArray(hex)); MockFTPServerJulia.fakeFtpServer.getFileSystem().add(file); return true; } 
@org.junit.Test public void shouldProvideLabelScanStoreUpdatesSortedByNodeId() throws java.lang.Exception { org.neo4j.kernel.impl.api.index.IndexingService indexing = org.mockito.Mockito.mock(org.neo4j.kernel.impl.api.index.IndexingService.class); org.neo4j.unsafe.batchinsert.LabelScanWriter writer = new org.neo4j.kernel.impl.transaction.command.IndexTransactionApplierTest.OrderVerifyingLabelScanWriter(10, 15, 20); <BUGS> try (org.neo4j.kernel.impl.transaction.command.IndexTransactionApplier applier = new org.neo4j.kernel.impl.transaction.command.IndexTransactionApplier(indexing, org.neo4j.kernel.impl.api.index.ValidatedIndexUpdates.NONE, org.neo4j.kernel.impl.util.Providers.singletonProvider(writer), org.mockito.Mockito.mock(org.neo4j.kernel.impl.core.CacheAccessBackDoor.class))) { <BUGE> applier.visitNodeCommand(node(15)); applier.visitNodeCommand(node(20)); applier.visitNodeCommand(node(10)); applier.apply(); } } 
public void menuRespuestaTruco() { Truco.InputProvider input = new Truco.InputProvider(); java.lang.Integer num1; do { java.lang.System.out.println("El oponente canto truco: "); java.lang.System.out.println("1) Quiero"); java.lang.System.out.println("2) No quiero"); java.lang.System.out.println("3) Quiero retruco"); num1 = input.getIntegerInput(); <BUGS> } while (input.controladorInput(num1, 1, 3) ); <BUGE> } 
public java.util.Set<sk.fei.stuba.xpivarcim.db.entities.assignment.TestFile> unitTestFiles() { java.util.Set<sk.fei.stuba.xpivarcim.db.entities.assignment.TestFile> output = new java.util.HashSet<>(); <BUGS> for (sk.fei.stuba.xpivarcim.db.entities.assignment.TestFile f : testFiles) if (!(f.isRunTest())) output.add(f); <BUGE>  <BUGS>  <BUGE> return output; } 
@org.springframework.web.bind.annotation.RequestMapping(value = "/{productId}/invoice", method = org.springframework.web.bind.annotation.RequestMethod.GET, produces = org.springframework.http.MediaType.APPLICATION_JSON_VALUE) @org.springframework.web.bind.annotation.ResponseBody public org.springframework.data.domain.Page<com.cspinformatique.kubik.model.sales.InvoiceDetail> findProductInvoices(@org.springframework.web.bind.annotation.PathVariable(value = "productId") int productId, @org.springframework.web.bind.annotation.RequestParam(defaultValue = "0") java.lang.Integer page, @org.springframework.web.bind.annotation.RequestParam(defaultValue = "10") <BUGS> java.lang.Integer resultPerPage, @org.springframework.web.bind.annotation.RequestParam(required = false) org.springframework.data.domain.Sort.Direction direction, @org.springframework.web.bind.annotation.RequestParam(defaultValue = "extendedLabel") <BUGE> java.lang.String sortBy) { <BUGS> return this.invoiceDetailService.findByProductAndInvoiceStatus(this.productService.findOne(productId), new com.cspinformatique.kubik.model.sales.InvoiceStatus(InvoiceStatus.Types.PAID.name(), null), new org.springframework.data.domain.PageRequest(page, resultPerPage, (direction != null ? direction : org.springframework.data.domain.Sort.Direction.ASC), sortBy)); <BUGE> } 
@java.lang.Override public void Process() { setAirplaneState(StateAirplane.LoadingPassagers); enstabretagne.base.time.LogicalDuration t = enstabretagne.base.time.LogicalDuration.ofSeconds((20 * 60)); Post(new enstabretagne.SimEntity.airplane.Airplane.RollingToTrack(), getCurrentLogicalDate().add(t)); <BUGS> java.lang.System.out.println(("getWaitTrackList in loading passagers" + (getMyAirport().getWaitTrackList()))); <BUGE> enstabretagne.base.utility.Logger.Information(this.Owner(), "LoadingPassagers", Messages.LoadingPassagers); } 
<BUGS> private static java.util.List<Tile> createGameBoard(Board.Builder builder) { java.util.List<Tile> tiles = new java.util.ArrayList<>(); for (int i = 0; i <= (BoardUtils.NUM_TILES); i++) { tiles.add(Tile.createTile(i, builder.boardConfig.get(i))); <BUGE> } <BUGS> return tiles; <BUGE> } 
<BUGS> private double semestrialCorrection(final double param) { <BUGE> final int debeq_pr = 59; final int debeq_au = 244; final double result; if ((cachedDay) >= 100) { final double xmult = ((cachedDay) - debeq_au) / 40.0; result = param - ((2.0 * param) * xmult); }else { final double xmult = ((cachedDay) - debeq_pr) / 40.0; result = ((2.0 * param) * xmult) - param; } return result; } 
@java.lang.Override public boolean escribirObjeto(java.lang.Object objeto) { try { if ((outStream) == null) { if ((inStream) != null) { inStream.close(); inStream = null; } outStream = getOutStream(archivo.exists()); } <BUGS> outStream.writeObject(archivo); <BUGE> outStream.flush(); return true; } catch (java.io.IOException e) { return false; } } 
public java.util.List<com.spotify.docker.client.messages.Container> listContainers() throws com.spotify.docker.client.DockerException { java.util.concurrent.Callable<java.util.List<com.spotify.docker.client.messages.Container>> callable = new java.util.concurrent.Callable<java.util.List<com.spotify.docker.client.messages.Container>>() { @java.lang.Override public java.util.List<com.spotify.docker.client.messages.Container> call() throws java.lang.Exception { return dockerClient.listContainers(); } }; try { return callWithTimeout(callable); } catch (java.lang.Exception e) { <BUGS> com.hubspot.singularity.executor.utils.DockerUtils.LOG.error("Caught exception attempting to list containers", e); <BUGE> throw new com.spotify.docker.client.DockerException(e); } } 
protected com.sproutigy.libs.luceneplus.core.indices.LuceneIndex instantiate(java.lang.String name) throws java.io.IOException { com.sproutigy.libs.luceneplus.core.indices.LuceneIndex index = instantiated.get(name); if (index == null) { synchronized(lock) { index = instantiated.get(name); if (index == null) { index = prepareIndex(name, provideDirectorySupplier(name)); if (isAutoOpen()) { index.open(); } <BUGS> <BUGE> instantiated.put(name, index); <BUGS> onInstantiate(index, name); <BUGE> } } } return index; } 
@java.lang.Override public void writeToParcel(android.os.Parcel dest, int flags) { <BUGS> dest.writeString(this.userID); <BUGE> dest.writeString(this.title); dest.writeString(this.subtitle); dest.writeLong(this.chatTime); dest.writeString(this.image); dest.writeByte((this.isGroup ? ((byte) (1)) : ((byte) (0)))); } 
public void learning() { <BUGS> if (((tick) % 4) == 0) { calculateReward(); copyCurrentSVIntoPrevSV(); generateCurrentStateVector(); getQfromNet(); qFunction(); resetReward(); doAction(); }else { setTurnGunRight(robocode.util.Utils.normalRelativeAngleDegrees(enemyBearingFromGun)); } <BUGE> setTurnRadarRight(robocode.util.Utils.normalRelativeAngleDegrees(enemyBearingFromRadar)); scan(); execute(); } 
private void SendFileContent(java.net.Socket conn, java.io.InputStream fileIs) throws java.io.IOException { java.io.OutputStream os = conn.getOutputStream(); byte[] b = new byte[1024]; int x = fileIs.read(b); while (x != (-1)) { <BUGS> if (x < 10) { <BUGE> b = java.util.Arrays.copyOf(b, x); } os.write(b); x = fileIs.read(b); } } 
public final java.util.Map<java.lang.String, java.lang.Object> getUserData() { final java.util.Map<java.lang.String, java.lang.Object> userData = new java.util.HashMap<>(); userData.put(UserDataFields.PVP_STATUS, hasPvPEnabled()); userData.put(UserDataFields.TOGGLE_TIME, getToggleTime()); userData.put(UserDataFields.NEWBIE, isNewbie()); <BUGS> userData.put(UserDataFields.NEWBIE_TIMELEFT, newbieTask.getTimeleft()); <BUGE> return userData; } 
public org.apache.jackrabbit.core.security.authorization.AbstractCompiledPermissions.Result combine(org.apache.jackrabbit.core.security.authorization.AbstractCompiledPermissions.Result other) { int cAllows = (allows) | (org.apache.jackrabbit.core.security.authorization.Permission.diff(other.allows, denies)); int cDenies = (denies) | (org.apache.jackrabbit.core.security.authorization.Permission.diff(other.denies, allows)); org.apache.jackrabbit.core.security.authorization.PrivilegeBits cAPrivs = org.apache.jackrabbit.core.security.authorization.PrivilegeBits.getInstance(allowPrivileges); cAPrivs.addDifference(other.allowPrivileges, denyPrivileges); org.apache.jackrabbit.core.security.authorization.PrivilegeBits cdPrivs = org.apache.jackrabbit.core.security.authorization.PrivilegeBits.getInstance(denyPrivileges); cdPrivs.addDifference(other.denyPrivileges, allowPrivileges); <BUGS> return new org.apache.jackrabbit.core.security.authorization.AbstractCompiledPermissions.Result(cAllows, cDenies, allowPrivileges, denyPrivileges); <BUGE> } 
public void Is_Valid_Person_Name(android.widget.EditText edt) throws java.lang.NumberFormatException { if ((edt.getText().toString().length()) <= 0) { <BUGS> edt.setError("Accept Alphabets Only."); <BUGE> valid_name = null; }else if (!(edt.getText().toString().matches("[a-zA-Z ]+"))) { <BUGS> edt.setError("Accept Alphabets Only."); <BUGE> valid_name = null; }else { valid_name = edt.getText().toString(); }  } 
private void extendProgram() { <BUGS> <BUGE> insertAdditionalVariables(); <BUGS> notNullVariables.set(0); <BUGE> org.teavm.model.Variable[] parameters = new org.teavm.model.Variable[(methodDescriptor.parameterCount()) + 1]; for (int i = 0; i < (parameters.length); ++i) { parameters[i] = program.variableAt(i); } phiUpdater = new org.teavm.model.util.PhiUpdater(); phiUpdater.updatePhis(program, parameters); collectAdditionalVariables(); } 
public void add(cque.INodePool pool, E e) { assert e != null; cque.Node<E> n = getNode(pool, e); if ((tail) == null) { assert (head) == null; head = n; tail = n; <BUGS> <BUGE> } tail.setNext(n); tail = n; } 
public int getTotalPoints() { int points = 0; <BUGS> for (int i = 1; i < (this.cards.size()); i++) { <BUGE> points += this.cards.get(i).getPoints(); } return points; } 
@java.lang.Override public void dispose() { <BUGS> timer.stop(); <BUGE> byte option = ((byte) (javax.swing.JOptionPane.showConfirmDialog(this, "Exit all programs?", "Exit Confirmation", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION))); if (option == (javax.swing.JOptionPane.YES_OPTION)) { java.lang.System.exit(0); }else if (option == (javax.swing.JOptionPane.NO_OPTION)) { super.dispose(); }  } 
public final void backup(java.lang.String extension) throws java.io.IOException { javi.FileDescriptor.LocalFile file2 = FileDescriptor.LocalFile.make(((prop.fdes.shortName) + extension)); if ((!(prop.fdes.canWrite())) && ("Microsoft Corp.".equals(java.lang.System.getProperty("java.vendor")))) <BUGS> history.Tools.execute(("d:\\cygwin\\bin\\chmod +w " + (prop.fdes.canonName))); <BUGE>  prop.fdes.renameTo(file2); prop.fdes.writeAll(getStringIter(), prop.getSeperator()); setReadOnly(false); } 
@org.junit.Test public void testRemoveBookingWithPreviousBookingButUnendedRemoveCandidate() { testee.addBooking(testBookings, de.lgblaumeiser.ptm.datamanager.service.BookingServiceTest.ACTIVITY1, de.lgblaumeiser.ptm.datamanager.service.BookingServiceTest.TIME1); de.lgblaumeiser.ptm.datamanager.model.Booking testBooking = testee.addBooking(testBookings, de.lgblaumeiser.ptm.datamanager.service.BookingServiceTest.ACTIVITY2, de.lgblaumeiser.ptm.datamanager.service.BookingServiceTest.TIME2); testee.removeBooking(testBookings, testBooking); org.junit.Assert.assertEquals(1, testBookings.getBookings().size()); org.junit.Assert.assertEquals(de.lgblaumeiser.ptm.datamanager.service.BookingServiceTest.TIME1, testBookings.getLastBooking().getStarttime()); <BUGS> org.junit.Assert.assertFalse(testBookings.getLastBooking().hasEndtime()); <BUGE> } 
private boolean assertContiguous(gnu.trove.list.TIntList list) { if ((list.size()) < 2) { return true; } int prev = list.get(0); for (int i = 1; i < (list.size()); ++i) { int v = list.get(i); <BUGS> if (v == (prev - 1)) { <BUGE> prev = v; continue; } return false; } return true; } 
public T addExtra(T... extras) { if (extras != null) { for (T extra : extras) { <BUGS> <BUGE> if ((this.extra) == null) { this.extra = new java.util.LinkedList<>(); } this.extra.add(extra); } } return ((T) (this)); } 
private void setPortraitAspectRatio() { double param = ((double) (mDisplayMetrics.widthPixels)) / ((double) (mDisplayMetrics.heightPixels)); for (com.beautiful_wallpapers_hd_qhd.activity.CropImageActivity.ImageSizes size : com.beautiful_wallpapers_hd_qhd.activity.CropImageActivity.ImageSizes.values()) { if ((param > ((size.getRatio()) - 0.01)) && (param < ((size.getRatio()) + 0.01))) { setAspectRatio(size.getWidth(), size.getHeight()); <BUGS> <BUGE> } } } 
@javafx.fxml.FXML public void onGroundedClick() { interactor.emptyQueue(); logic.Extension grounded = argumentFramework.getGroundedExtension(previousCheckBox.isSelected()); <BUGS> java.lang.System.out.println((("{" + (grounded.getArgumentNames())) + "}")); <BUGE> setUI(); } 
public static java.lang.Object getReflectedField(java.lang.String fieldName, main.java.HashTable instance) throws test.java.HashTableTests.HashTableUtilException { java.lang.Class hashTableClass = instance.getClass(); try { java.lang.reflect.Field field = hashTableClass.getDeclaredField(fieldName); field.setAccessible(true); return field.get(instance); } catch (java.lang.NoSuchFieldException | java.lang.IllegalAccessException e) { <BUGS> java.lang.System.out.println(e); <BUGE> throw new test.java.HashTableTests.HashTableUtilException(("Failed to retrieve " + fieldName)); } } 
private boolean playerIsLastToClose(int number) { <BUGS> boolean result = true; <BUGE> for (spare.n52.yadarts.entity.Player p : this.cricketScores.keySet()) { spare.n52.yadarts.games.cricket.CricketScore s = this.cricketScores.get(p); if ((p != (this.currentPlayer)) && (!(s.playerHasOpened(number)))) { <BUGS> result = false; <BUGE> } } <BUGS> return result; <BUGE> } 
@java.lang.Override public void run() { com.vessel.VesselAB.setABListener(new com.vessel.interfaces.ABListener() { @java.lang.Override <BUGS> public void testNotAvailable(com.vessel.enums.VesselEnums.TestVariation arg0) { callbackContext.success(arg0.toString()); <BUGE> }  @java.lang.Override public void testLoading() { }  @java.lang.Override <BUGS> public void testLoaded(java.lang.String testName, com.vessel.enums.VesselEnums.TestVariation testVariation) { <BUGE> callbackContext.success(testVariation.toString()); } }); } 
<BUGS> public static void writeNBTFound(net.minecraft.nbt.NBTTagCompound nbt, net.minecraft.util.math.BlockPos pos) { <BUGE> nbt.setBoolean("found", true); nbt.removeTag("searchStarted"); nbt.setInteger("posX", pos.getX()); nbt.setInteger("posZ", pos.getZ()); } 
@org.springframework.transaction.annotation.Transactional public de.tum.in.www1.exerciseapp.domain.Result retreiveBuildDetailsFromBambooAndStoreThem(de.tum.in.www1.exerciseapp.domain.Result result) { de.tum.in.www1.exerciseapp.domain.Participation participation = result.getParticipation(); java.util.Map buildDetails = continuousIntegrationService.get().getLatestBuildResultDetails(participation); java.util.HashSet<de.tum.in.www1.exerciseapp.domain.Feedback> feedbacks = continuousIntegrationService.get().createFeedbacksForResult(buildDetails); result.setFeedbacks(feedbacks); <BUGS> resultRepository.save(result); <BUGE> return result; } 
public boolean onMenuItemClick(android.view.MenuItem menuItem) { ticketList.add(new Data.Ticket("00:00", menuItem.getTitle().toString())); <BUGS> ticketList.add(new Data.Ticket("00:00", menuItem.getTitle().toString())); setAdapter(); <BUGE> userData.setTicketList(ticketList); applicationTimeTracker.setUserData(userData); adapter.notifyDataSetChanged(); return true; } 
<BUGS> private void updateDefStats(boolean pic, boolean tackle, boolean loss, boolean fumblerec, boolean forcedfum, boolean sack, boolean td) { <BUGE> if (pic) (pics)++;  if (tackle) (tackles)++;  if (tackle && loss) (tfls)++;  if (fumblerec) (fumblerecs)++;  if (sack) (sacks)++;  if (td) (deftds)++;  if (forcedfum) (forcedfums)++;  } 
public static void main(java.lang.String[] args) throws java.io.FileNotFoundException { emotion.Emotion emotion = new emotion.Emotion(); java.util.List<java.lang.String> codes = emotion.getCodes(); <BUGS> try { java.lang.String html = emotion.html((((com.nju.util.Constant.EMOTION_URL) + "1F338") + "/index.htm")); emotion.parseDoc(emotion.document(html)); } catch (java.io.IOException e) { e.printStackTrace(); <BUGE> } } 
static org.opendaylight.yangtools.yang.data.api.YangInstanceIdentifier getRootInstanceIdentifier(final java.lang.Class type) { try { return org.opendaylight.yangtools.yang.data.api.YangInstanceIdentifier.of(org.opendaylight.yangtools.yang.common.QName.class.cast(type.getField("QNAME").get(null))); } catch (java.lang.IllegalAccessException e) { <BUGS> throw new java.lang.IllegalStateException(("Constant QNAME not accessible for type" + type)); <BUGE> } catch (java.lang.NoSuchFieldException e) { <BUGS> throw new java.lang.IllegalStateException((("Class " + type) + " does not have QName defined")); <BUGE> } } 
@java.lang.Override public void onDataChange(com.totvs.pcsistemas.pocbeacons.pocbeacons.DataSnapshot snapshot) { try { <BUGS> ShowOffer(snapshot.child("OfferSponsor").getValue().toString(), snapshot.child("OfferPicture").getValue().toString(), snapshot.child("Offer").getValue().toString(), snapshot.child("OfferPictureSponsor").getValue().toString()); <BUGE> } catch (java.lang.Exception e) { } } 
@java.lang.Override public void onDataChange(com.firebase.client.DataSnapshot dataSnapshot) { for (com.firebase.client.DataSnapshot child : dataSnapshot.getChildren()) { email = ((java.lang.String) (child.child("email").getValue())); java.lang.System.out.println(("email:" + (email))); if (userId.equals(myRef.getAuth().getUid())) { <BUGS> <BUGE> inGroup = true; } members.add(email); <BUGS> groupid.add(email); <BUGE> } } 
public static int[] generateDescending(int size) { int[] tab = new int[size]; for (int i = 0; i < size; i++) { <BUGS> tab[i] = size - 1; <BUGE> } return tab; } 
private java.lang.Boolean getBooleanSetting(java.lang.String setting, java.lang.Boolean fallback) { java.lang.String val = burp.BurpExtender.getInstance().getCallbacks().loadExtensionSetting(setting); <BUGS> <BUGE> try { return java.lang.Boolean.valueOf(val); } catch (java.lang.NullPointerException nPException) { return fallback; } } 
@java.lang.Override <BUGS> public void invoke(java.util.Scanner args) { final java.lang.String message = (args.hasNext()) ? args.nextLine().trim() : ""; <BUGE> if ((message.length()) > 0) { conversation.add(message); }else { java.lang.System.out.println("ERROR: Messages must contain text"); } } 
public static java.lang.Iterable<java.lang.Object> asList(java.lang.Object x) { if (x instanceof java.lang.Iterable) { return ((java.lang.Iterable<java.lang.Object>) (x)); }else { java.util.List<java.lang.Object> list = new java.util.ArrayList<java.lang.Object>(1); <BUGS> list.add(1); <BUGE> return list; } } 
public void setCardId(java.lang.String name, java.lang.String ID, int ent_id) { try { Card c = new Card(); c = cardsByID.get(ID); c.name = name; c.EntityID = ent_id; cards.put(name, c); } catch (java.lang.Exception e) { <BUGS> java.lang.System.out.println(("Could not find card " + name)); <BUGE> } } 
<BUGS> @org.junit.Test <BUGE> public void testDeleteExists() throws java.io.IOException { org.gbif.api.model.occurrence.Occurrence occ = occurrenceService.delete(org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.KEY); assertEquivalence(occ); <BUGS> org.junit.Assert.assertEquals(((java.lang.Integer) (org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.KEY)), occ.getKey()); <BUGE> org.gbif.api.model.occurrence.Occurrence test = occurrenceService.get(org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.KEY); <BUGS> org.junit.Assert.assertNull(test); <BUGE> } 
public static void releaseBatches(org.apache.drill.exec.record.RecordBatch incoming) { if (incoming instanceof org.apache.drill.exec.physical.impl.validate.IteratorValidatorBatchIterator) { incoming = ((org.apache.drill.exec.physical.impl.validate.IteratorValidatorBatchIterator) (incoming)).getIncoming(); } if (incoming instanceof org.apache.drill.exec.physical.impl.xsort.managed.ExternalSortBatch) { org.apache.drill.exec.physical.impl.xsort.managed.ExternalSortBatch esb = ((org.apache.drill.exec.physical.impl.xsort.managed.ExternalSortBatch) (incoming)); <BUGS> assert (esb.sortState) == (org.apache.drill.exec.physical.impl.xsort.managed.ExternalSortBatch.SortState.DONE); <BUGE> if ((esb.resultsIterator) != null) { esb.resultsIterator.close(); esb.resultsIterator = null; } } } 
@java.lang.Override public void onClick(android.view.View view) { <BUGS> <BUGE> if (textview.getText().equals("")) { textview.setText(((ans) + "+")); }else if (!(isOperator(textview.getText().toString()))) { textview.append("+"); }  <BUGS> enterClear(enterPressed); <BUGE> } 
@java.lang.SuppressWarnings(value = "static-access") @java.lang.Override public void onDisable() { this.plugin = null; this.versions.clear(); this.entities.clear(); this.kickMessage = null; this.versionMsg = null; this.manager = null; <BUGS> this.minMinecraftVersion = null; this.maxMinecraftVersion = null; this.minProtocolVersion = 0; this.maxProtocolVersion = 0; <BUGE> } 
@java.lang.Override public boolean equals(java.lang.Object obj) { if (obj == null) return false;  if (obj == (this)) return true;  if ((obj.getClass()) == (this.getClass())) { return (this.id) == (((Person) (obj)).getId()); } <BUGS> <BUGE> } 
@java.lang.Override public java.lang.instrument.ClassFileTransformer getTransformer(java.lang.ClassLoader classLoader, java.lang.String targetClassName) { if (transformerMap.isEmpty()) { return null; } <BUGS> java.lang.instrument.ClassFileTransformer transformer = transformerMap.remove(new com.navercorp.pinpoint.profiler.DefaultDynamicTransformerRegistry.TransformerKey(classLoader, targetClassName)); <BUGE> if (logger.isDebugEnabled()) { logger.info("removed dynamic transformer classLoader: {}, className: {}, registry size: {}", classLoader, targetClassName, transformerMap.size()); } return transformer; } 
public void dispose() { try { fieldNames.clear(); <BUGS> <BUGE> index.close(); <BUGS> writer.close(); <BUGE> indexAdapter.dispose(); } catch (java.io.IOException e) { e.printStackTrace(); throw new java.lang.RuntimeException(e); } } 
@org.junit.Test public void testKillNonExisitingJob() throws java.lang.Exception { java.util.UUID jobId = java.util.UUID.randomUUID(); io.crate.action.sql.SQLResponse killResponse = execute("KILL ?", new java.lang.Object[]{ jobId }); <BUGS> assertThat(killResponse.rowCount(), org.hamcrest.Matchers.is(0L)); <BUGE> io.crate.action.sql.SQLResponse logResponse = execute("select * from sys.jobs_log where error = ?", new java.lang.Object[]{ "KILLED" }); <BUGS> assertThat(logResponse.rowCount(), org.hamcrest.Matchers.is(0L)); <BUGE> } 
public void sendPacket(org.mcexchange.Packet p) { try { byte id = org.mcexchange.Packet.getId(p); out.writeByte(id); p.write(out); } catch (java.io.IOException e) { e.printStackTrace(); } catch (java.lang.NullPointerException e) { <BUGS> java.lang.System.out.println((("Tried to send an unregistered packet to Client " + (this)) + "!")); <BUGE> disconnect(); } } 
@java.lang.Override public boolean hasTop() { <BUGS> java.lang.System.out.println((((((thisInst) + " hasTop(): entriesWritten==") + (entriesWritten)) + " rowRangeIterator.hasNext()==") + (rowRangeIterator.hasNext()))); <BUGE> return ((numRejects) != (-1)) && (((((numRejects) >= (edu.mit.ll.graphulo.skvi.RemoteWriteIterator.REJECT_FAILURE_THRESHOLD)) || (rowRangeIterator.hasNext())) || ((entriesWritten) > 0)) || (reducer.hasTopForClient())); } 
private void updateLocation(android.location.Location location) { mCurrentLocation = location; double latitude = mCurrentLocation.getLatitude(); double longitude = mCurrentLocation.getLongitude(); stationManager.updateLocation(latitude, longitude); route = stationManager.updateNexttation(route); setRouteTravel(); <BUGS> binding.destinationStation.setText(((latitude + " : ") + longitude)); <BUGE> binding.estimateTime.setText((((("ถึงสถานี" + (desName)) + " ในอีก ") + (stationManager.updateTimeToArrive())) + " นาที")); } 
@javax.annotation.Nullable @java.lang.Override @java.lang.SuppressWarnings(value = "unchecked") public java.lang.Object getTransferLocation(@javax.annotation.Nonnull java.lang.Object object, @javax.annotation.Nonnull java.lang.String key) { com.google.common.collect.Multimap<java.lang.Class<?>, org.squiddev.plethora.api.transfer.ITransferProvider<?>> map = primary; java.lang.String[] parts = key.split("\\."); for (java.lang.String part : parts) { <BUGS> java.lang.Object next = getTransferPart(object, key, map); <BUGE> if (next == null) { return null; }else { object = next; map = secondary; } } return object; } 
protected void onActivityResult(int requestCode, int resultCode, android.content.Intent data) { switch (requestCode) { case net.lorenzobianconi.wwatcher.WWatcher.REQ_ENABLE_BT : <BUGS> boolean btEnabled = resultCode == (RESULT_OK); <BUGE> configureButton(btEnabled, false); break; case net.lorenzobianconi.wwatcher.WWatcher.REQ_PICK_DEV : if (data != null) { java.lang.String addr = data.getExtras().getString("device"); android.bluetooth.BluetoothDevice device = inqMap.get(addr); new net.lorenzobianconi.wwatcher.WWatcher.BtConnect().execute(device); } break; default : break; } } 
public java.sql.Connection connect() { java.sql.Connection conn = null; try { java.lang.Class.forName("org.sqlite.JDBC"); conn = java.sql.DriverManager.getConnection(SqliteConnection.url); } catch (java.sql.SQLException e) { java.lang.System.out.println(e.getMessage()); } catch (java.lang.ClassNotFoundException e) { e.printStackTrace(); <BUGS> } finally { return conn; <BUGE> } <BUGS> <BUGE> } 
public static boolean checkCollision(worldObjects.WorldObject w) { for (worldObjects.WorldObject obj : controller.WorldController.getWorld().getObjects()) { <BUGS> if (!(obj.equals(w))) { return controller.CollisionChecker.overlap(w, obj); <BUGE> } } return false; } 
@java.lang.Override public void onClick(android.view.View v) { switch (v.getId()) { case R.id.btn__download_map : <BUGS> <BUGE> com.mapswithme.maps.downloader.MapManager.nativeDownload(mCurrentCountry.id); break; case R.id.btn__select_map : getMwmActivity().replaceFragment(com.mapswithme.maps.downloader.DownloaderFragment.class, null, null); break; case R.id.wpv__download_progress : com.mapswithme.maps.downloader.MapManager.nativeCancel(mDownloadingCountry.id); Statistics.INSTANCE.trackEvent(Statistics.EventName.DOWNLOADER_CANCEL, com.mapswithme.util.statistics.Statistics.params().add(Statistics.EventParam.FROM, "search")); break; } } 
private java.lang.String getSystemName(java.lang.String systemID) { <BUGS> java.lang.String systemName; <BUGE> java.lang.String message = "Enter the name for " + systemID; systemName = javax.swing.JOptionPane.showInputDialog(null, message); EFBOUserInterfaceManager.progressBar.setValue(10); java.lang.System.out.println(("System ID: " + systemID)); java.lang.System.out.println(("Name : " + systemName)); return systemName; } 
@java.lang.Override public void initialize(io.dropwizard.setup.Bootstrap<io.dropwizard.example.JobsApplicationConfiguration> bootstrap) { <BUGS> com.hubspot.dropwizard.guice.GuiceBundle<io.dropwizard.example.JobsApplicationConfiguration> guiceBundle = com.hubspot.dropwizard.guice.GuiceBundle.<io.dropwizard.example.JobsApplicationConfiguration>newBuilder().addModule(new io.dropwizard.example.JobsApplicationModule()).enableAutoConfig("io.dropwizard.example").setConfigClass(io.dropwizard.example.JobsApplicationConfiguration.class).build(); <BUGE> bootstrap.addBundle(guiceBundle); bootstrap.addBundle(new de.spinscale.dropwizard.jobs.GuiceJobsBundle(guiceBundle.getInjector().getParent())); } 
@org.junit.Test public void genWidget() throws java.lang.Exception { java.lang.String jsonStr = org.talend.daikon.serialize.jsonschema.JsonSchemaUtilTest.readJson("FullExampleUiSchema.json"); org.talend.daikon.serialize.FullExampleProperties properties = new org.talend.daikon.serialize.FullExampleProperties("fullexample"); properties.init(); org.talend.daikon.serialize.jsonschema.UiSchemaGenerator generator = new org.talend.daikon.serialize.jsonschema.UiSchemaGenerator(); <BUGS> java.lang.System.out.println(generator.genWidget(properties, Form.MAIN).toString()); <BUGE> assertEquals(jsonStr, generator.genWidget(properties, Form.MAIN).toString()); } 
protected void shiftRight(int index) { if (isFull()) throw new java.lang.IllegalStateException("Le tableau est plein"); else if (isEmpty()) { return ; }else if (index > (lastIndex)) { return ; }else { <BUGS> for (int i = lastIndex; i > index; i--) { myList[i] = myList[(i - 1)]; <BUGE> } }   } 
public static int next(int digit, int size) { <BUGS> int nextVal; while (odometer.Odometer.isValid(digit)) { <BUGE> nextVal = digit++; if (((digit % 10) ^ (size + 1)) == 1) { nextVal = 1; } } return nextVal; } 
public void test_139_ACLNotReadOtherGuidFieldTest(edu.umass.cs.gnsclient.client.util.GuidEntry westyEntry, edu.umass.cs.gnsclient.client.util.GuidEntry samEntry) { try { try { java.lang.String result = edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest.client.fieldRead(westyEntry.getGuid(), "environment", samEntry); edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest.failWithStackTrace((("Result of read of westy's environment by sam is " + result) + " which is wrong because it should have been rejected.")); } catch (edu.umass.cs.gnscommon.exceptions.client.ClientException e) { } } catch (java.lang.Exception e) { <BUGS> edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest.failWithStackTrace("Exception while reading fields in ACLNotReadOtherGuidFieldTest: ", e); <BUGE> } } 
@java.lang.Override public void render(java.awt.Graphics g) { if (((this.width) == 30) && ((this.height) == 30)) { g.setColor(java.awt.Color.RED); g.drawRect(x, y, width, height); }else { g.setColor(java.awt.Color.RED); <BUGS> g.drawOval(x, y, width, height); <BUGE> } } 
void encodeAndReply(org.kaaproject.kaa.server.operations.service.akka.messages.io.response.SessionResponse message) { try { sessionResponseMeter.mark(); if ((message.getError()) == null) { processSessionResponse(message); }else { <BUGS> processErrors(message.getChannelContext(), message.getErrorConverter(), message.getError()); <BUGE> } } catch (java.lang.Exception e) { processErrors(message.getChannelContext(), message.getErrorBuilder(), e); } } 
private java.util.List<java.lang.String> getHeaders() { java.util.List<java.lang.String> headers = new java.util.ArrayList<java.lang.String>(); <BUGS> <BUGE> headers.add("Title"); <BUGS> headers.add("Definition URL"); <BUGE> headers.add("Definition"); headers.add("Creator"); headers.add("PreLabel"); return headers; } 
private java.lang.String[] arrayListToArray(java.util.ArrayList<java.lang.String> needingConversion) { int count = needingConversion.size(); java.lang.String[] converted = new java.lang.String[count]; for (int i = 0; i < count; i++) { converted[i] = needingConversion.get(i); <BUGS> elfdreaming.app.dialog.FileSearchPane.logger.debug(((("converted[i]: " + (converted[i])) + " needingConversion[.get(i): ") + (needingConversion.get(i)))); <BUGE> } return converted; } 
@org.junit.Test public void testValidateCredentialsUserOnly() throws java.lang.Exception { <BUGS> <BUGE> expectedMessages.add(HubProxyInfoBuilder.ERROR_MSG_CREDENTIALS_INVALID); final com.blackducksoftware.integration.hub.builder.HubProxyInfoBuilder builder = new com.blackducksoftware.integration.hub.builder.HubProxyInfoBuilder(); builder.setHost(com.blackducksoftware.integration.hub.global.HubProxyInfoBuilderTest.VALID_HOST); builder.setUsername(com.blackducksoftware.integration.hub.global.HubProxyInfoBuilderTest.VALID_USERNAME); builder.setPassword(""); final com.blackducksoftware.integration.hub.builder.ValidationResults<com.blackducksoftware.integration.hub.global.HubProxyInfoFieldEnum, com.blackducksoftware.integration.hub.global.HubProxyInfo> result = new com.blackducksoftware.integration.hub.builder.ValidationResults<com.blackducksoftware.integration.hub.global.HubProxyInfoFieldEnum, com.blackducksoftware.integration.hub.global.HubProxyInfo>(); builder.validateCredentials(result); org.junit.Assert.assertFalse(result.isSuccess()); actualMessages = getMessages(result); } 
public void removeAndFail(java.lang.Throwable cause) { assert ctx.executor().inEventLoop(); if (cause == null) { throw new java.lang.NullPointerException("cause"); } io.netty.channel.PendingWriteQueue.PendingWrite write = head; if (write == null) { return ; } io.netty.util.ReferenceCountUtil.safeRelease(write.msg); io.netty.channel.ChannelPromise promise = write.promise; io.netty.channel.PendingWriteQueue.safeFail(promise, cause); <BUGS> recycle(write); <BUGE> } 
<BUGS> private int getFlag(int flag) { <BUGE> int flagVal = 0; int flagReg = (registers[Z80.REGISTER_F]) & flag; switch (flag) { case Z80.FLAG_ZERO : flagVal = flagReg >>> 7; break; case Z80.FLAG_SUBTRACT : flagVal = flagReg >>> 6; break; case Z80.FLAG_HALFCARRY : flagVal = flagReg >>> 5; break; case Z80.FLAG_CARRY : flagVal = flagReg >>> 4; break; } return flagVal; } 
private void findHrefs() { java.util.regex.Matcher matcher = hrefPattern.matcher(Html); java.lang.String link = ""; while (matcher.find()) { <BUGS> link = matcher.group(); if (((!(Suspectedlinks.contains(link))) && (CrawlerHandler.CheckIfUrlBeenCrawled(link))) && (isValidDomain(link))) { <BUGE> Suspectedlinks.add(link); } } } 
@com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.GET @com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Path(value = "/all") @com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Produces(value = javax.ws.rs.core.MediaType.APPLICATION_JSON) @com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Consumes(value = javax.ws.rs.core.MediaType.APPLICATION_JSON) <BUGS> public javax.ws.rs.core.Response geAlltSuppress(@com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PathParam(value = "appId") final java.lang.String appId) { <BUGE> com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.RestMethod<java.lang.String, java.util.Collection<com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource.PushConfigSuppressResponse>> method = new com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.RestMethod<java.lang.String, java.util.Collection<com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource.PushConfigSuppressResponse>>() { @java.lang.Override <BUGS> public java.util.Collection<com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource.PushConfigSuppressResponse> execute(java.lang.String suppressId) throws com.magnet.mmx.server.plugin.mmxmgmt.MMXException { <BUGE> java.util.Collection<com.magnet.mmx.server.plugin.mmxmgmt.push.config.model.MMXPushSuppress> s = com.magnet.mmx.server.plugin.mmxmgmt.push.config.MMXPushConfigService.getInstance().getPushSuppressForAppAndUser(appId, null); return com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource.convertResponse(s); } }; return method.doMethod(appId); } 
private com.ksss.splintter.features.group.view.ExpenseManager getCallback() { com.ksss.splintter.features.group.view.ExpenseManager callback; try { callback = ((com.ksss.splintter.features.group.view.ExpenseManager) (getActivity())); } catch (java.lang.ClassCastException e) { <BUGS> throw new java.lang.IllegalStateException(java.lang.String.format("Container Activity must implement %s", com.ksss.splintter.features.group.view.ExpenseManager.class.getSimpleName())); <BUGE> } return callback; } 
@java.lang.Override public boolean closeWindow(uniol.aptgui.mainwindow.WindowId id) { if (id.getType().isEditorWindow()) { uniol.aptgui.editor.document.Document<?> doc = getDocument(id); if ((doc.hasUnsavedChanges()) && (askSaveDocument(id, getDocument(id)))) { return false; } } if ((activeWindow) == id) { activeWindow = null; } <BUGS> <BUGE> documents.remove(id); <BUGS> mainWindow.removeWindow(id); <BUGE> return true; } 
@org.junit.Test public void should_return_root_project_uuids_for_group() { setupData("should_return_root_project_keys_for_group"); <BUGS> org.sonar.core.user.AuthorizationDao authorization = new org.sonar.core.user.AuthorizationDao(getMyBatis()); <BUGE> java.util.Collection<java.lang.String> rootProjectUuids = authorization.selectAuthorizedRootProjectsUuids(org.sonar.core.user.AuthorizationDaoTest.USER, "user"); org.assertj.core.api.Assertions.assertThat(rootProjectUuids).containsOnly("ABCD"); rootProjectUuids = authorization.selectAuthorizedRootProjectsKeys(org.sonar.core.user.AuthorizationDaoTest.USER, "admin"); org.assertj.core.api.Assertions.assertThat(rootProjectUuids).isEmpty(); } 
public java.util.Optional<java.nio.file.Path> findIn(java.util.List<java.nio.file.Path> directories) { <BUGS> java.nio.file.Path file = java.nio.file.Paths.get(link); <BUGE> if ((file.isAbsolute()) || (directories.isEmpty())) { return java.util.Optional.of(file); }else { <BUGS> return org.jabref.model.util.FileHelper.expandFilenameAsPath(link, directories); <BUGE> } } 
public void onBlockDialogInitialize() { int phoneId = getActivePhoneId(); com.android.incallui.Log.d(this, ((("onBlock mCallId:" + (mCallId)) + "phoneId:") + phoneId)); <BUGS> <BUGE> com.android.incallui.Call call = mCall[phoneId]; final java.lang.String number = call.getNumber(); final android.content.Context context = getUi().getContext(); mBlockContactHelper = new com.android.contacts.common.util.BlockContactHelper(context); mBlockContactHelper.setContactInfo(number); } 
private void pickOut(courier.Parcel pickOut) { pickOut.arriveTime = map.schedule.getSteps(); if (carrying.remove(pickOut)) { spaceRemaining += pickOut.weight; } if (!(pickOut instanceof courier.CarCaller)) { printParcelUnloadLog(pickOut); currStation.pArrived.add(pickOut); (map.parcelTotal)--; tryTerminate(); }else { carCallerConvertParcel(((courier.CarCaller) (pickOut))); printCarCallerUnloadLog(((courier.CarCaller) (pickOut))); } <BUGS> initCarState(); <BUGE> } 
@java.lang.Override public void onSuccess(com.google.common.base.Optional<org.opendaylight.yang.gen.v1.urn.opendaylight.faas.fabric.rev150930.fabric.attributes.Options> result) { if (result.isPresent()) { org.opendaylight.yang.gen.v1.urn.opendaylight.faas.fabric.rev150930.fabric.attributes.Options opt = result.get(); org.opendaylight.yang.gen.v1.urn.opendaylight.faas.fabric.rev150930.FabricOptions.TrafficBehavior behavior = opt.getTrafficBehavior(); <BUGS> ctx.setTrafficBehavior((behavior == null ? behavior : org.opendaylight.yang.gen.v1.urn.opendaylight.faas.fabric.rev150930.FabricOptions.TrafficBehavior.Normal)); <BUGE> }else { ctx.setTrafficBehavior(TrafficBehavior.Normal); } openflow13Provider.updateTrafficBehavior(ctx.getDpid(), ctx.getTrafficBehavior(), true); } 
<BUGS> private long getNumberRecursion(long n) { <BUGE> int sum = 0; if (n == 0) return 1; else if (n == 1) return 0; else if (n == 2) return 1;    for (int k = 1; k <= n; k++) { sum += (sequenceGeneratorA008472.getNumber(k)) * (getNumberRecursion((n - k))); } return sum / n; } 
@controllers.Transactional public static models.UserImpl fetchUser(java.lang.String username) { javax.persistence.EntityManager em = play.db.jpa.JPA.em(); <BUGS> if ((em.find(models.UserImpl.class, username)) != null) { <BUGE> java.lang.System.out.println("ERROR NULL"); <BUGS> <BUGE> } return em.find(models.UserImpl.class, username); } 
int MCC() { <BUGS> java.lang.String networkOperator = ((android.telephony.TelephonyManager) (getSystemService(Context.TELEPHONY_SERVICE))).getNetworkOperator(); <BUGE> return !(android.text.TextUtils.isEmpty(networkOperator)) ? java.lang.Integer.parseInt(networkOperator.substring(0, 3)) : 0; } 
@org.junit.Test public void getDurationInfo() throws java.lang.Exception { com.ptc.taskanalyse.services.TaskService service = new com.ptc.taskanalyse.services.TaskService(repo); repo.setPerformed(2, 5); repo.setPerformed(1, 5); com.ptc.taskanalyse.models.TaskDurationInfo durInfo = repo.getDurationInfo(2); <BUGS> org.junit.Assert.assertTrue("There should be 1 finished task", ((durInfo.getNumOfFinishedTasks()) == 1)); <BUGE> } 
private void settleHeader() { <BUGS> if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { if ((currentHeader.getTag()) != null) { currentHeader.setTag(null); currentHeader.animate().z(0); } <BUGE> } } 
public static <T> boolean noneOf(final java.lang.Iterable<T> source, final int begin, final int end, java.util.function.Predicate<T> pred) { final java.util.Iterator<T> iter = getIteratorAtIndex(source, begin); for (int i = begin; i != end; ++i) { assert iter.hasNext(); if (pred.test(iter.next())) { <BUGS> return true; <BUGE> } } <BUGS> return false; <BUGE> } 
private void setUserType(org.trakhound.www.trakhound.device_list.ListAdapter.ViewHolder holder) { if ((holder.SelectionArrow) != null) { <BUGS> if (((org.trakhound.www.trakhound.MyApplication.User) != null) && ((MyApplication.User.type) == 1)) <BUGE> holder.SelectionArrow.setVisibility(View.VISIBLE); else holder.SelectionArrow.setVisibility(View.GONE);  } if ((holder.OeeLayout) != null) { <BUGS> if (((org.trakhound.www.trakhound.MyApplication.User) != null) && ((MyApplication.User.type) == 1)) <BUGE> holder.OeeLayout.setVisibility(View.VISIBLE); else holder.OeeLayout.setVisibility(View.GONE);  } } 
public org.jsoup.select.Elements parse(org.jsoup.select.Elements r) { <BUGS> results = r.select(" tr.productListing-odd"); resultsEven = r.select(" tr.productListing-even"); for (int j = 0; j < (resultsEven.size()); j++) { results.add(resultsEven.get(j)); <BUGE> } <BUGS> java.lang.System.out.println(((results.size()) + " Results have been returned from CanadaComputers.")); return results; <BUGE> } 
@java.lang.Override public void onDisable() { <BUGS> for (net.techcable.npclib.NPC npc : npcm.getNPCs()) { java.util.UUID uuid = npcm.getNPCIdFromEntity(npc.getEntity()); despawnNPC(uuid, NpcDespawnReason.PLUGIN_DISABLED); if (isDebugEnabled()) { com.trc202.CombatTag.CombatTag.log.info(("[CombatTag] Disabling npc with ID of: " + uuid)); <BUGE> } } com.trc202.CombatTag.CombatTag.log.info("[CombatTag] Disabled"); } 
@java.lang.Override public void doCommand(java.lang.String[] args) { if ((args.length) != 1) { view.printErrorMessage(new java.lang.String[]{ "Arguments Error" , "Please enter Directory location" }); return ; } <BUGS> controller.c String; paths = args[0]; <BUGE> java.io.File folderPath = null; java.lang.String[] filelist; try { folderPath = new java.io.File(paths); filelist = folderPath.list(); view.printAnswers(filelist); } catch (java.lang.Exception e) { e.printStackTrace(); } } 
public void setAccelScale(int aScl) { <BUGS> AccelSettings.CTRL_REG6_XLVal &= 231; <BUGE> switch (aScl) { case 4 : <BUGS> AccelSettings.CTRL_REG6_XLVal |= 2 << 3; <BUGE> AccelSettings.scale = 4; break; case 8 : <BUGS> AccelSettings.CTRL_REG6_XLVal |= 3 << 3; <BUGE> AccelSettings.scale = 8; break; case 16 : <BUGS> AccelSettings.CTRL_REG6_XLVal |= 1 << 3; <BUGE> AccelSettings.scale = 16; break; default : AccelSettings.scale = 2; break; } <BUGS> agWriteByte(com.ociweb.iot.astropi.CTRL_REG6_XL, AccelSettings.CTRL_REG6_XLVal); target.i2cFlushBatch(); <BUGE> calcaRes(); } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.main_activity); <BUGS> android.content.SharedPreferences preferences = getSharedPreferences(com.yubico.yubioath.MainActivity.NEO_STORE, Context.MODE_PRIVATE); <BUGE> keyManager = new com.yubico.yubioath.model.KeyManager(preferences); openFragment(new com.yubico.yubioath.fragments.SwipeListFragment()); tagDispatcher = nordpol.android.TagDispatcher.get(this, this, false, false, true, false, true); } 
public java.util.HashSet<Tile> getKnownBombs() { java.util.HashSet<Tile> s = new java.util.HashSet<Tile>(); if ((config_list.size()) == 0) return s; else { <BUGS> s = config_list.get(0); <BUGE> for (java.util.HashSet<Tile> h : config_list) { s.retainAll(h); } } return s; } 
private void startElementNode(final org.xml.sax.Attributes attributes) throws org.xml.sax.SAXException { io.inkstand.scribble.rules.jcr.util.XMLContentHandler.LOG.debug("Found node"); try { <BUGS> nodeStack.push(newNode(nodeStack.peek(), attributes)); <BUGE> } catch (final javax.jcr.RepositoryException e) { throw new org.xml.sax.SAXException("Could not create node", e); } } 
@java.lang.Override public void actionPerformed(java.awt.event.ActionEvent e) { if (e.getActionCommand().contentEquals("OK")) { setDifficulty(((org.jtrfp.trcl.game.TVF3Game.Difficulty) (cbDifficulty.getSelectedItem()))); setCallSign(txtCallsign.getText()); setBeginMission(true); setVisible(false); <BUGS> dispose(); <BUGE> } } 
void buildCharToIntMap() { <BUGS> charToIntMap.put('a', 1); charToIntMap.put('b', 2); charToIntMap.put('c', 3); charToIntMap.put('d', 4); charToIntMap.put('e', 5); charToIntMap.put('f', 6); charToIntMap.put('g', 7); charToIntMap.put('h', 8); <BUGE> } 
public void sendMessage(java.lang.String desintationUser, java.lang.String body, java.lang.String message) { Controller.Message newMessage = new Controller.Message(this.currentUser.getUsername(), desintationUser, body, message); <BUGS> <BUGE> messageManager.init(); messageManager.addData(newMessage); messageManager.closeConnection(); } 
void addTunesToTuneListScreen(java.util.ArrayList<java.lang.String> tuneNamesArray) { if (((tuneLinks.size()) < 1) && ((recursions) < 5)) { searchForTunes("remote"); (recursions)++; return ; } android.content.Intent i = new android.content.Intent(getApplicationContext(), com.company.rorywalsh.folkthis.TuneListScreen.class); i.putExtra("location", fileLocation); <BUGS> i.putStringArrayListExtra("tuneNames", tuneNames); <BUGE> i.putStringArrayListExtra("tuneLinks", tuneLinks); startActivity(i); } 
@java.lang.Override public void removeGroups(org.bukkit.entity.Player player, java.lang.String world) { if (plugin.config.isDefaultrankallworlds()) { <BUGS> java.lang.System.out.println("CR rankAddGlobal"); <BUGE> world = null; } if ((plugin.config.permissionpluginhasworldsupport()) == false) { world = null; } java.lang.String[] list = net.slipcor.classranks.handlers.HandleVaultPerms.permission.getPlayerGroups(world, player); if (list != null) { for (java.lang.String sRank : list) { net.slipcor.classranks.handlers.HandleVaultPerms.permission.playerRemoveGroup(world, player, sRank); } } } 
@javafx.fxml.FXML void testServerConnection() { if (debug) log.info(("Testing connection to server on address: " + (com.client.gui.interfaceControllers.LobbyController.serverAddress)));  java.lang.String alertMessage; <BUGS> if ((com.client.gui.interfaceControllers.LobbyController.serverAddress) != null) <BUGE> return ; <BUGS> else { <BUGE> alertMessage = ("Address " + (com.client.gui.interfaceControllers.LobbyController.serverAddress)) + ",that you entered, is invalid! Please enter valid IPv4 address."; <BUGS> showAlert(javafx.scene.control.Alert.AlertType.ERROR, "", "Invalid IP address!", alertMessage); <BUGE> } } 
@java.lang.SuppressWarnings(value = "unchecked") @java.lang.Override public void handle(javafx.event.ActionEvent event) { if ((event.getSource()) instanceof javafx.scene.control.ComboBox) { <BUGS> java.lang.Integer bassTrack; bassTrack = ((javafx.scene.control.ComboBox<java.lang.Integer>) (event.getSource())).getValue(); <BUGE> ui.Slave.setBassTrack(bassTrack); } } 
public void pauseCallBack() { android.widget.ImageButton ib1 = ((android.widget.ImageButton) (findViewById(firstID.intValue()))); android.widget.ImageButton ib2 = ((android.widget.ImageButton) (findViewById(secondID.intValue()))); <BUGS> <BUGE> setImage(ib2, "blank"); setImage(ib1, "blank"); guard = 0; } 
public ch.entwine.weblounge.common.site.Site findSiteByBundle(org.osgi.framework.Bundle bundle) { <BUGS> synchronized(sitesLock) { for (java.util.Map.Entry<ch.entwine.weblounge.common.site.Site, org.osgi.framework.Bundle> entry : siteBundles.entrySet()) { if (bundle.equals(entry.getValue())) return entry.getKey();  } <BUGE> } return null; } 
@org.junit.Test public void testGetErrorMessage_multipleErrors() { java.util.List<com.isroot.stash.plugin.errors.YaccError> errors = new java.util.ArrayList<>(); errors.add(new com.isroot.stash.plugin.errors.YaccError("commit error")); errors.add(new com.isroot.stash.plugin.errors.YaccError("another error")); java.lang.String message = yaccErrorBuilder.getErrorMessage(errors); <BUGS> org.assertj.core.api.Assertions.assertThat(message).isEqualTo(((((((com.isroot.stash.plugin.errors.YaccErrorBuilder.ERROR_BEARS) + "\n\n") + "commit error\n") + "\n") + "another error\n") + "\n")); <BUGE> } 
public static com.xeiam.xchange.coinbaseex.service.CoinbaseExDigest createInstance(java.lang.String secretKey) { <BUGS> byte[] decodedSecretKey = null; <BUGE> try { <BUGS> decodedSecretKey = si.mazi.rescu.utils.Base64.decode(secretKey); <BUGE> } catch (java.io.IOException e) { throw new com.xeiam.xchange.exceptions.ExchangeException("Cannot decode secret key"); } <BUGS> return secretKey == null ? null : new com.xeiam.xchange.coinbaseex.service.CoinbaseExDigest(decodedSecretKey); <BUGE> } 
@org.junit.Test public void exercizeParser() { java.lang.String json = "{\"a\":\"y  e a!\", \"b\":\"bee\\\"\", \"newobj\":\"go\\\"ood\",\"test\":[{\"arrayname\":[]}], \"t2\":{ \"num\":0.23e-3}, \"bool\":   trUe, \"nullname\":nuLl, \"nottrue\":False}"; <BUGS> int[] expEventSeq = new int[]{ org.jsonps.GeneralEx.TestListener.EVENT_STARTOBJ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_VALUE , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_VALUE , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_VALUE , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_STARTARR , org.jsonps.GeneralEx.TestListener.EVENT_STARTOBJ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_STARTARR , org.jsonps.GeneralEx.TestListener.EVENT_ENDARR , org.jsonps.GeneralEx.TestListener.EVENT_ENDOBJ , org.jsonps.GeneralEx.TestListener.EVENT_ENDARR , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_STARTOBJ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_NUM , org.jsonps.GeneralEx.TestListener.EVENT_ENDOBJ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_SEQ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_SEQ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_SEQ }; <BUGE> testInstance(json, expEventSeq); } 
private void checkValue() throws jjcron.polankam.ms.mff.cuni.cz.FormatException { switch (unit.valueType) { case ASTERISK : break; case PERIOD : isValueValid(unit.values.get(0)); <BUGS> if (((maxValue) % (unit.values.get(0))) != 0) { <BUGE> throw new jjcron.polankam.ms.mff.cuni.cz.FormatException("GeneralUnit period value is not divisible"); } break; case LIST : for (java.lang.Integer number : unit.values) { isValueValid(number); } break; } } 
public static void stopSparkProgram() { <BUGS> co.cask.cdap.internal.app.runtime.spark.SparkProgramWrapper.sparkContextStopBugFixer(); if (co.cask.cdap.internal.app.runtime.spark.SparkProgramWrapper.isScalaProgram()) { ((co.cask.cdap.api.spark.SparkContext) (co.cask.cdap.internal.app.runtime.spark.SparkProgramWrapper.getSparkContext().getOriginalSparkContext())).stop(); }else { ((co.cask.cdap.internal.app.runtime.spark.JavaSparkContext) (co.cask.cdap.internal.app.runtime.spark.SparkProgramWrapper.getSparkContext().getOriginalSparkContext())).stop(); <BUGE> } } 
public void finalizar(java.lang.Integer idTarea) { android.content.ContentValues valores = new android.content.ContentValues(); valores.put(ProyectoDBMetadata.TablaTareasMetadata.FINALIZADA, 1); android.database.sqlite.SQLiteDatabase mydb = dbHelper.getWritableDatabase(); mydb.update(ProyectoDBMetadata.TABLA_TAREAS, valores, "_id=?", new java.lang.String[]{ idTarea.toString() }); <BUGS> mydb.close(); <BUGE> } 
@java.lang.Override public synchronized void shutdown() { while (clientHandlerAdapter.isConnected()) { clientHandlerAdapter.shutdown(); <BUGS> workerGroup.shutdownGracefully(); <BUGE> } <BUGS> <BUGE> while (((tunnelHandler) != null) && (tunnelHandler.isConnected())) { tunnelHandler.shutdown(); } } 
<BUGS> public int findHistoryRecord(java.lang.String placeId) { <BUGE> for (int i = 0; i < (HISTORY_SIZE); ++i) { com.github.stephenbaidu.placepicker.PlaceInfo placeInfo = getHistoryRecord((i + 1)); if (placeInfo == null) return 0;  if ((placeInfo.placeId) == placeId) { return i + 1; } } return 0; } 
private java.util.List<com.netcracker.entity.helper.TaxiOrderHistory> getHistory(java.lang.Integer pageNumber, javax.servlet.http.HttpServletRequest req) { com.netcracker.ejb.TaxiOrderBeanLocal taxiOrderBeanLocal = getTaxiOrderBean(req); java.util.List<com.netcracker.entity.helper.TaxiOrderHistory> list = taxiOrderBeanLocal.getTaxiOrderHistory(pageNumber, com.netcracker.tss.web.servlet.customer.CustomerOrderTaxiHistoryServlet.pageSize, findCurrentUser()); <BUGS> if ((list.size()) == 0) { <BUGE> pageNumber--; getServletContext().setAttribute("pageNumber", pageNumber); list = taxiOrderBeanLocal.getTaxiOrderHistory(pageNumber, com.netcracker.tss.web.servlet.customer.CustomerOrderTaxiHistoryServlet.pageSize, findCurrentUser()); } return list; } 
public boolean isSet(lk.filetributed.client.rpc.services.services.joinRequest_args._Fields field) { if (field == null) { throw new java.lang.IllegalArgumentException(); } switch (field) { case IP_ADDRESS : return isSetIpAddress(); case PORT : return isSetPort(); <BUGS> case CLUSTER_ID : return isSetClusterID(); <BUGE> } throw new java.lang.IllegalStateException(); } 
public static void main(java.lang.String[] args) { me.sergienko.dao.StudentJdbcDAOImpl studentJdbcDAO = new me.sergienko.dao.StudentJdbcDAOImpl(); me.sergienko.model.Student st = new me.sergienko.model.Student(); <BUGS> st.setId(1001); <BUGE> st.setGroup_id(150); st.setName("Лера"); st.setSur_name("Лысова"); st.setRating_ege(80.99); st.setEnrolment_date(new java.sql.Date(java.util.Calendar.getInstance().getTimeInMillis())); <BUGS> studentJdbcDAO.createStudent(st); <BUGE> } 
@java.lang.Override public void handleResult(com.google.zxing.Result rawResult) { <BUGS> android.util.Log.v("SCAN", rawResult.getText()); android.util.Log.v("SCAN", rawResult.getBarcodeFormat().toString()); <BUGE> new android.app.AlertDialog.Builder(getActivity()).setTitle("Scanned Message").setMessage(rawResult.getText()).setPositiveButton("OK", new android.content.DialogInterface.OnClickListener() { @java.lang.Override public void onClick(android.content.DialogInterface dialogInterface, int i) { resumeCamera(); } }).create().show(); } 
<BUGS> <BUGE> public void enqueue(java.lang.Object element) { int s = size(); <BUGS> if (s == ((n) - 1)) { <BUGE> resize(); <BUGS> } <BUGE> queueArray[((rear)++)] = ((T) (element)); <BUGS> if ((rear) == (n)) { <BUGE> rear = 0; <BUGS> } <BUGE> } 
@java.lang.Override public void actionPerformed(java.awt.event.ActionEvent e) { java.lang.Object src = e.getSource(); if (src == (begin)) <BUGS> l = new Brain.TemporalLobe.Locked("LOCKED"); <BUGE> else if (src == (back)) c.changePanel("3");   } 
@java.lang.Override public boolean contains(java.lang.String s) { if ((_value) != null) { int compr = s.compareTo(_value); if (compr == 0) return true; else if ((compr < 0) && ((_left) != null)) return _left.contains(s); else <BUGS> if ((compr > 0) && ((_left) != null)) <BUGE> return _right.contains(s);    } return false; } 
protected int addView(com.tonicartos.superslim.LayoutState.View child, int position, com.tonicartos.superslim.LayoutManager.Direction direction, com.tonicartos.superslim.LayoutState state) { int addIndex; if (direction == (LayoutManager.Direction.START)) { addIndex = 0; }else { addIndex = mLayoutManager.getChildCount(); } <BUGS> if (child.wasCached) { state.decacheView(position); } <BUGE> mLayoutManager.addView(child.view, addIndex); return addIndex; } 
<BUGS> private void writeVariableCopy(wyil.lang.SyntaxTree.Location<wyil.lang.Bytecode.VariableAccess> loc, java.io.PrintWriter out) { <BUGE> wyil.lang.SyntaxTree.Location<wyil.lang.Bytecode.VariableDeclaration> vd = getVariableDeclaration(loc.getOperand(0)); if (isCopyable(vd.getType(), loc)) { out.print(vd.getBytecode().getName()); }else { out.print((("wyjs.copy(" + (vd.getBytecode().getName())) + ")")); } } 
private void init() { initTouchpad(); Gdx.input.setInputProcessor(touchPadHelper.getStage()); camera = new com.badlogic.gdx.graphics.OrthographicCamera(com.platform.rider.utils.GameConstants.APP_WIDTH, com.platform.rider.utils.GameConstants.APP_HEIGHT); <BUGS> viewport = new com.badlogic.gdx.utils.viewport.FitViewport(1080, 1920, camera); <BUGE> initPhysics(); world.setContactListener(new com.platform.rider.world.WorldController.reactorContactListener()); } 
@java.lang.Override public void writeBuffer(java.nio.ByteBuffer byteBuffer, int offset, int length) { if (byteBuffer.hasArray()) { writeBytes(byteBuffer.array(), offset, length); }else { for (int pos = offset; pos < (offset + length); pos++) { <BUGS> writeByte(byteBuffer.get(offset)); <BUGE> } } } 
@java.lang.Override public cpw.mods.fml.common.network.simpleimpl.IMessage onMessage(shedar.mods.ic2.nuclearcontrol.network.message.PacketServerUpdate message, cpw.mods.fml.common.network.simpleimpl.MessageContext ctx) { net.minecraft.item.ItemStack stack = message.itemstack; if ((stack != null) && ((stack.getItem()) instanceof shedar.mods.ic2.nuclearcontrol.items.ItemCardBase)) { shedar.mods.ic2.nuclearcontrol.panel.CardWrapperImpl helper = new shedar.mods.ic2.nuclearcontrol.panel.CardWrapperImpl(stack, 0); shedar.mods.ic2.nuclearcontrol.api.CardState state = ((shedar.mods.ic2.nuclearcontrol.api.IPanelDataSource) (stack.getItem())).update(ContainerRemoteMonitor.panel, helper, 100); <BUGS> shedar.mods.ic2.nuclearcontrol.utils.NCLog.error(helper.getUpdateSet()); <BUGE> return new shedar.mods.ic2.nuclearcontrol.network.message.PacketClientRemoteMonitor(helper.getUpdateSet()); } return null; } 
private void startQueueMonitor() { try { MQApi.Models.Query.ConnectionDetailModel connectionDetail = UI.TreeHelper.GetCurrentConnectionDetail(TreeView); com.ibm.mq.MQQueueManager queueManager = MQApi.Connection.MQConnection.GetMQQueueManager(connectionDetail); <BUGS> UI.Dialogs.QueueMonitorDialog dialog = new UI.Dialogs.QueueMonitorDialog(this, true, queueManager); <BUGE> dialog.setLocationRelativeTo(this); dialog.setVisible(true); } catch (com.ibm.mq.MQException ex) { MQApi.Logs.LogWriter.WriteToLog(ex.fillInStackTrace()); javax.swing.JOptionPane.showMessageDialog(this, MQApi.Utilities.MQUtility.getMQReturnMessage(ex.completionCode, ex.getReason()), "Error", javax.swing.JOptionPane.ERROR_MESSAGE); } } 
public void toggleAlarm(android.view.View view) { com.example.alexfaber.sumanalarm.Alarm.getAlarm().turnedOff(); if (alarmTone.isPlaying()) toggleAlarmSound();  android.widget.Button button = ((android.widget.Button) (findViewById(R.id.toggleButton))); button.setEnabled(false); <BUGS> finish(); <BUGE> android.content.Intent mainActivityIntent = new android.content.Intent(this, com.example.alexfaber.sumanalarm.Activities.MainActivity.class); startActivity(mainActivityIntent); } 
private void setupViews() { fragmentList = ((org.distantshoresmedia.wifiDirect.DeviceListFragment) (getSupportFragmentManager().findFragmentById(R.id.frag_list))); fragmentDetails = ((org.distantshoresmedia.wifiDirect.DeviceDetailFragment) (getSupportFragmentManager().findFragmentById(R.id.frag_detail))); if ((selectedUri) == null) { <BUGS> findViewById(R.id.device_detail_fragment_base_view).setVisibility(View.GONE); <BUGE> } } 
public boolean addAtBegining(E data) { if (isLinkedListEmpty()) { root.setData(data); tail = root; (size)++; return true; }else { datastructures.linkedlist.Node<E> newNode = new datastructures.linkedlist.Node<E>(data); newNode.setNext(root); root.setPrev(newNode); root = newNode; <BUGS> <BUGE> return true; } } 
@java.lang.Override <BUGS> protected void onResume() { <BUGE> super.onResume(); if ((toolbar) == null) { toolbar = ((android.support.v7.widget.Toolbar) (findViewById(R.id.basic_toolbar_layout))); setSupportActionBar(toolbar); android.support.v7.app.ActionBar bar = getSupportActionBar(); if (bar != null) { bar.setDisplayOptions(ActionBar.DISPLAY_SHOW_CUSTOM); bar.setCustomView(R.layout.custom_action_bar); bar.setDisplayHomeAsUpEnabled(true); } } displayCurrentStep(); } 
public void updateUI() { int prevBtnVisibility = android.view.View.VISIBLE; int nextBtnVisibility = android.view.View.VISIBLE; if ((itemIndex) == 0) { prevBtnVisibility = android.view.View.INVISIBLE; <BUGS> }else if ((itemIndex) == ((shareClipExperience.getChildrenContents().size()) - 1)) { nextBtnVisibility = android.view.View.INVISIBLE; }  <BUGE> prevClipButton.setVisibility(prevBtnVisibility); nextClipButton.setVisibility(nextBtnVisibility); mediaController.hide(); } 
private java.lang.String findWordInRow(int rowNumber) { javax.swing.JPanel panel = panels.get(rowNumber); javax.swing.JTextArea textArea = new javax.swing.JTextArea(); try { <BUGS> textArea = ((javax.swing.JTextArea) (rowsCreator.findElementInsideOrCreate(panel, javax.swing.JTextArea.class))); <BUGE> } catch (java.lang.ClassNotFoundException | java.lang.InstantiationException | java.lang.IllegalAccessException e) { sendErrorToParent(e); } return textArea.getText(); } 
public boolean isValidated() { if (!(org.easystogu.utils.Strings.isDateValidate(date))) return false;  if ((((((this.majorNetIn) == 0) && ((this.biggestNetIn) == 0)) && ((this.bigNetIn) == 0)) && ((this.midNetIn) == 0)) && ((this.smallNetIn) == 0)) return false;  <BUGS> if ((this.majorNetIn) <= 0) return false;  <BUGE> return true; } 
public void start() { try { common.Player.replace(Paint.width, Paint.height, Paint.diameterPlayer); } catch (java.awt.AWTException e) { e.printStackTrace(); } <BUGS> frame.GameFrame.puck.setPuckPos((((common.Paint.width) / 2) - ((common.Paint.diameterPuck) / 2)), (((common.Paint.height) / 2) - ((common.Paint.diameterPuck) / 2))); <BUGE> } 
public <T> T read(final java.io.InputStream content, final java.lang.Class<T> type) throws com.google.gson.JsonIOException, com.google.gson.JsonSyntaxException { try { return this.mapper.fromJson(new java.io.InputStreamReader(content), type); } catch (com.google.gson.JsonIOException | com.google.gson.JsonSyntaxException e) { <BUGS> timber.log.Timber.e(e, (((("Error mapping json to class '" + type) + "' with contents: '") + content) + "'")); <BUGE> throw e; } } 
@org.junit.Test @org.chromium.base.test.util.Feature(value = { "OfflinePages" }) public void testOpenItemByGuid() { org.chromium.chrome.browser.offlinepages.downloads.OfflinePageDownloadItem item = createDownloadItem1(); <BUGS> org.mockito.Mockito.doReturn("").when(mBridge).nativeGetOfflineUrlByGuid(org.mockito.Mockito.anyLong(), org.mockito.Mockito.eq(item.getGuid())); <BUGE> mBridge.openItem(item.getGuid()); org.mockito.Mockito.verify(mBridge, org.mockito.Mockito.times(1)).nativeGetOfflineUrlByGuid(org.mockito.Mockito.eq(0L), org.mockito.Mockito.eq(item.getGuid())); } 
@java.lang.Override public void onClick(android.view.View v) { android.widget.Spinner fishList = ((android.widget.Spinner) (findViewById(R.id.fishCaughtSpinner))); <BUGS> java.lang.String fishname = fishList.getSelectedItem().toString(); <BUGE> int index = fishList.getSelectedItemPosition(); android.content.Intent intent = new android.content.Intent(v.getContext(), com.app.fish.catchreport.LiveAddFishActivity.class); intent.putExtra("TripInfo", trip); intent.putExtra("Fish", index); startActivity(intent); } 
<BUGS> public static int calculateInSampleSize(android.graphics.BitmapFactory.Options options, int reqWidth, int reqHeight) { <BUGE> final int height = options.outHeight; final int width = options.outWidth; int inSampleSize = 1; if ((height > reqHeight) || (width > reqWidth)) { final int halfHeight = height / 2; final int halfWidth = width / 2; <BUGS> while (((halfHeight / inSampleSize) > reqHeight) && ((halfWidth / inSampleSize) > reqWidth)) { <BUGE> inSampleSize *= 2; } } return inSampleSize; } 
public void onClick(android.view.View v) { com.cards.flash.testez.BaseFunction.hideKeyboard(getContext(), v); <BUGS> if (com.cards.flash.testez.EditCardFragment.hasTakenQuiz) <BUGE> updateScores(); <BUGS>  <BUGE> android.content.Intent intent = new android.content.Intent(getContext(), com.cards.flash.testez.ScoreBoard.class); intent.putExtra("cat", MainActivity.cateList.get(com.cards.flash.testez.NavigationDrawerFragment.getCurrentSelectedPos()).getObjectId()); startActivity(intent); } 
@org.junit.Test public void testSendNonMatchingMessage() throws java.lang.Exception { <BUGS> java.lang.Thread.currentThread().setContextClassLoader(getClass().getClassLoader()); <BUGE> org.apache.camel.CamelContext camelctx = new org.apache.camel.impl.DefaultCamelContext(); camelctx.addRoutes(getRouteBuilder()); camelctx.start(); org.apache.camel.ProducerTemplate producer = camelctx.createProducerTemplate(); java.lang.String result = producer.requestBodyAndHeader("direct:start", "mybody", "foo", "bad", java.lang.String.class); org.junit.Assert.assertEquals("mybody unmatched", result); } 
private void onUserReceived(com.pdrogfer.onstage.model.User user) { <BUGS> android.widget.Toast.makeText(this, ("user logged and retrieved: " + (user.toString())), Toast.LENGTH_SHORT).show(); <BUGE> android.util.Log.i(com.pdrogfer.onstage.ui.PresentationActivity.TAG, ("onUserReceived: " + (user.toString()))); com.pdrogfer.onstage.Utils.storeUserToSharedPrefs(user.getUid(), user.getName(), user.getEmail(), user.getUserType(), this); goToListActivity(); } 
@org.junit.Test public void testSimpleSingleNew_withOnce() throws java.lang.Exception { samples.expectnew.ExpectNewDemo tested = new samples.expectnew.ExpectNewDemo(); <BUGS> samples.newmocking.MyClass myClassMock1 = org.powermock.api.mockito.PowerMockito.mock(samples.newmocking.MyClass.class); org.powermock.api.mockito.PowerMockito.whenNew(samples.newmocking.MyClass.class).withNoArguments().thenReturn(myClassMock1); <BUGE> tested.simpleSingleNew(); <BUGS> org.powermock.api.mockito.PowerMockito.verifyNew(samples.newmocking.MyClass.class).withNoArguments(); <BUGE> } 
@java.lang.Override public int makeMove() { java.util.Scanner keyboard = new java.util.Scanner(java.lang.System.in); int input = 0; <BUGS> java.lang.System.out.println("Make your move (1)Hit or (2)Stay "); <BUGE> do { try { <BUGS> <BUGE> input = keyboard.nextInt(); } catch (java.util.InputMismatchException e) { } } while ((input < 1) || (input > 2) ); <BUGS> keyboard.close(); <BUGE> return input; } 
private void stopped() { com.couchbase.lite.util.Log.d(Log.TAG_CHANGE_TRACKER, "%s: Change tracker in stopped()", this); if ((client) != null) { <BUGS> com.couchbase.lite.util.Log.w(Log.TAG_CHANGE_TRACKER, "%s: Change tracker calling changeTrackerStopped, client: %s", this, client); <BUGE> client.changeTrackerStopped(this); }else { <BUGS> com.couchbase.lite.util.Log.w(Log.TAG_CHANGE_TRACKER, "%s: Change tracker not calling changeTrackerStopped, client == null", this); <BUGE> } client = null; running = false; } 
public void colsum(int[] histogram) { col_idx[0] = 0; int index = 0; for (int i = 1; i <= (numCols); i++) { col_idx[i] = index += histogram[(i - 1)]; } java.lang.System.arraycopy(col_idx, 0, histogram, 0, numCols); <BUGS> <BUGE> growMaxLength(nz_length, false); <BUGS> nz_length = index; <BUGE> } 
public void setName(eu.etaxonomy.cdm.model.name.TaxonName name) { if (((this.name) != null) && (!(this.name.equals(name)))) { <BUGS> if (name != null) { name.getRegistrations().remove(this); } <BUGE> } this.name = name; <BUGS> this.name.getRegistrations().add(this); <BUGE> } 
@java.lang.Override public void run() { try { <BUGS> java.lang.System.out.println(sourceFloor); eleScene.inSemaphore.get(sourceFloor).acquire(1); eleScene.outSemaphore.get(destinationFloor).acquire(1); eleScene.personExitsAtFloor(destinationFloor); <BUGE> } catch (java.lang.InterruptedException e) { e.printStackTrace(); } } 
public void addJet(java.lang.String model, double speed, double range, int capacity) { week2.Jets[] addJets = new week2.Jets[(jets.length) + 1]; for (int i = 0; i < ((addJets.length) - 1); i++) { addJets[i] = jets[i]; } addJets[jets.length] = new week2.Jets(model, speed, range, capacity); jets = addJets; <BUGS> printJets(jets); <BUGE> } 
public boolean smartShoot(int x, int y) { grid[x][y].setShot(true); (shotCount)++; if (grid[x][y].getBoat()) { (hitCount)++; if (!(getBoatSunk())) { hits.push(new battleship.service.Coordinate(x, y)); <BUGS> new battleship.service.Coordinate(x, y).printCoordinate(); <BUGE> } return true; } return false; } 
private void assertBitSet(int... bits) { <BUGS> java.util.BitSet expected = new java.util.BitSet((3 * 32)); <BUGE> for (int i = 0; i < (bits.length); i++) { if ((bits[i]) != 0) { expected.set(i); } } org.fest.assertions.api.Assertions.assertThat(bitEncoding.bitSet()).isEqualTo(expected); } 
public java.lang.String login() { co.edu.unal.kwinty.BusinessLogic.Controller.LoginUser log = new co.edu.unal.kwinty.BusinessLogic.Controller.LoginUser(); message = log.start(this.username, this.password); <BUGS> java.lang.System.out.println(("Este es el mensaje" + (message))); <BUGE> if ((message) != null) { return message; }else { return "welcome"; } } 
public static java.io.OutputStream getFileOutputSteam(android.content.Context context, java.lang.String fileName, java.lang.String rootPath, java.lang.String... subDirs) { android.support.v4.provider.DocumentFile parent = ml.puredark.hviewer.utils.DocumentUtil.getDirDocument(context, rootPath, subDirs); if (parent == null) return null;  android.support.v4.provider.DocumentFile file = parent.findFile(fileName); <BUGS> <BUGE> return ml.puredark.hviewer.utils.DocumentUtil.getFileOutputSteam(context, file.getUri()); } 
@java.lang.Override public void run() { try { inFromClient = new java.io.BufferedReader(new java.io.InputStreamReader(threadSocket.getInputStream())); while ((!(spade.reporter.LLVM.shutdown)) || (inFromClient.ready())) { java.lang.String line = inFromClient.readLine(); if (line != null) { parseEvent(line); } <BUGS> java.lang.Thread.sleep(spade.reporter.LLVM.THREAD_SLEEP_DELAY); <BUGE> } inFromClient.close(); } catch (java.lang.Exception exception) { exception.printStackTrace(java.lang.System.err); } } 
public void updateTimestepAccel(Body other) { double d = distance(other); <BUGS> <BUGE> for (int i = 0; i < 3; i++) { <BUGS> double a = ((Constants.G) * (other.mass)) * ((position[i]) - (other.position[i])); <BUGE> deltaAccel[i] += a / ((d * d) * d); <BUGS> <BUGE> } } 
private java.lang.CharSequence generateFieldNotPresentCondition(final int sinceVersion, final uk.co.real_logic.sbe.ir.Encoding encoding, final java.lang.String indent) { if (0 == sinceVersion) { return ""; } <BUGS> return java.lang.String.format((((indent + "        if self.actingVersion_ < %1$d:\n") + indent) + "            return %2$s\n\n"), java.lang.Integer.valueOf(sinceVersion), generateLiteral(encoding.primitiveType(), encoding.applicableNullValue().toString())); <BUGE> } 
public short getShort() throws com.wiredtiger.db.WiredTigerPackingException { <BUGS> boolean signed = false; <BUGE> format.checkType('h', false); if ((format.getType()) == 'H') { <BUGS> signed = true; <BUGE> } format.consume(); return unpackShort(signed); } 
public void setMotorSpeeds(double left, double right, boolean usePID) { <BUGS> double scale = java.lang.Math.max(left, right); <BUGE> if (scale > 1) { left = left / scale; right = right / scale; } mLeftDrive.setSpeed(left); mLeftDrive.setUsePID(usePID); mRightDrive.setSpeed(right); mRightDrive.setUsePID(usePID); } 
@java.lang.Override public void onComplete(@android.support.annotation.NonNull com.google.android.gms.tasks.Task<com.google.firebase.auth.AuthResult> task) { if (!(task.isSuccessful())) { regErrLbl.setText("Error Signing Up"); }else { com.lintech.yougo.User user = new com.lintech.yougo.User(name, email, task.getResult().getUser().getUid()); <BUGS> com.lintech.yougo.Trip trip = new com.lintech.yougo.Trip("0", "0", "0", ""); <BUGE> newUser(user, trip); } } 
public void save(java.lang.Object relationLink) { javax.persistence.EntityManager em = daoManager.getEntityManagerFactory().createEntityManager(); try { daoManager.startTransaction(em); em.persist(relationLink); daoManager.commitTransaction(em); <BUGS> em.refresh(relationLink); <BUGE> } catch (java.lang.Exception ex) { io.subutai.core.object.relation.impl.dao.RelationDataService.logger.error("Error persisting object", ex); daoManager.rollBackTransaction(em); } finally { daoManager.closeEntityManager(em); } } 
private void init() { <BUGS> if ((!(initialized)) && ((beanManager()) != null)) { <BUGE> synchronized(this) { <BUGS> if ((!(initialized)) && ((beanManager()) != null)) { elResolver.setDelegate(beanManager().getELResolver()); <BUGE> initialized = true; } } } } 
@java.lang.Override public java.lang.String getString(java.lang.String s, java.lang.String s1) { try { java.lang.String key = mEncryptionManager.getHashed(s); java.lang.String value = mPrefs.getString(key, null); if (value != null) return mEncryptionManager.decrypt(value);  } catch (java.lang.Exception e) { e.printStackTrace(); } <BUGS> return null; <BUGE> } 
@java.lang.Override public org.ggp.base.util.statemachine.MachineState toGdl(org.apache.lucene.util.OpenBitSet state) { java.util.Set<org.ggp.base.util.gdl.grammar.GdlSentence> bases = new java.util.HashSet<org.ggp.base.util.gdl.grammar.GdlSentence>(); int[] baseProps = propNet.getBasePropositions(); <BUGS> for (int i = state.nextSetBit(0); i != 1; i = state.nextSetBit(i)) { <BUGE> bases.add(gdlSentenceMap.get(((baseOffset) + i))); } return new org.ggp.base.util.statemachine.MachineState(bases); } 
@java.lang.Override public void onReceive(android.content.Context context, android.content.Intent intent) { ((com.project.locateme.mainViews.homeFragment.HomeFragment) (mainViewsAdapter.getFragment(0))).updateMarkers(); ((com.project.locateme.mainViews.PlaceFragment) (mainViewsAdapter.getFragment(1))).updateEventListViewItems(); <BUGS> ((com.project.locateme.mainViews.PlaceFragment) (mainViewsAdapter.getItem(1))).updatePlaceListViewItems(); <BUGE> android.util.Log.e(this.getLocalClassName(), "update initiated"); } 
@java.lang.SuppressWarnings(value = "unchecked") private boolean methodOverridden(java.lang.Class beanClass, java.lang.reflect.Method methodOfCurrentClass) { java.lang.String methodName = methodOfCurrentClass.getName(); <BUGS> java.lang.Class[] methodParams = methodOfCurrentClass.getParameterTypes(); java.lang.Class declaringClass = methodOfCurrentClass.getDeclaringClass(); <BUGE> try { <BUGS> java.lang.reflect.Method method = beanClass.getMethod(methodName, methodParams); return !(method.getDeclaringClass().equals(declaringClass)); <BUGE> } catch (java.lang.NoSuchMethodException ignored) { } return false; } 
@javax.annotation.security.RolesAllowed(value = org.votingsystem.web.currency.util.AuthRole.ADMIN) @org.votingsystem.web.currency.jaxrs.Path(value = "/weekdb/{year}/{month}/{day}") @org.votingsystem.web.currency.jaxrs.GET @org.votingsystem.web.currency.jaxrs.Produces(value = javax.ws.rs.core.MediaType.APPLICATION_JSON) public java.lang.Object weekdb(@org.votingsystem.web.currency.jaxrs.PathParam(value = "year") int year, @org.votingsystem.web.currency.jaxrs.PathParam(value = "month") int month, @org.votingsystem.web.currency.jaxrs.PathParam(value = "day") <BUGS> int day, @javax.ws.rs.core.Context javax.servlet.ServletContext context, @javax.ws.rs.core.Context javax.servlet.http.HttpServletRequest req, @javax.ws.rs.core.Context javax.servlet.http.HttpServletResponse resp) throws java.io.IOException, javax.servlet.ServletException { <BUGE> java.util.Calendar calendar = org.votingsystem.web.currency.jaxrs.DateUtils.getCalendar(year, month, day); org.votingsystem.web.currency.jaxrs.Interval timePeriod = org.votingsystem.web.currency.jaxrs.DateUtils.getWeekPeriod(calendar); return new java.util.HashMap<>(); } 
private void showCompleteBusRouteGoing(int busLineId, java.lang.String busLineName) { <BUGS> clearBusRouteOnMap(); <BUGE> mBusLineId = busLineId; mGoingSwitch.setChecked(false); mToolbar.setVisibility(View.GONE); mGoingAndReturnLayout.setVisibility(View.VISIBLE); if (mMyBusMap.completeRouteExists(busLineId)) { mMyBusMap.showCompleteRouteGoing(busLineId); mMyBusMap.zoomOutCompleteBusRouteGoing(busLineId); }else { showProgressDialog(getString(R.string.searching_complete_route)); com.mybus.service.ServiceFacade.getInstance().getCompleteBusRoute(busLineId, busLineName, this); } } 
public static com.blazingkin.interpreter.executor.lambda.LambdaExpression getLambdaExpression(java.lang.String name, java.lang.String[] args) { if ((name.contains("(")) && (name.contains(")"))) { <BUGS> com.blazingkin.interpreter.executor.lambda.LambdaExpression le = com.blazingkin.interpreter.executor.lambda.LambdaParser.parseLambdaExpression(name); <BUGE> return ((com.blazingkin.interpreter.executor.lambda.LambdaExpression) (le.getValue().value)).cloneWithArgs(args); } <BUGS> return com.blazingkin.interpreter.executor.lambda.LambdaRegistrar.runtimeDefinedLambdaExpressions.get(name).cloneWithArgs(args); <BUGE> } 
private void addPhotos(java.lang.Integer id, java.util.List<org.springframework.web.multipart.MultipartFile> photos) { java.lang.String contextPath = servletContext.getRealPath("/pages/"); for (org.springframework.web.multipart.MultipartFile file : photos) { try { org.apache.commons.io.FileUtils.writeByteArrayToFile(new java.io.File(((((contextPath + "/images/albums/") + id) + "/") + (file.getOriginalFilename()))), file.getBytes()); } catch (java.io.IOException e) { <BUGS> e.printStackTrace(); <BUGE> } } } 
@java.lang.Override public void execute() { double translationPower = leftJoystick.getVector().getMagnitude(); setTargetHeading(); double headingError = poseSubsystem.getCurrentHeading().difference(targetHeadingSupplier.getAsDouble()); <BUGS> double rotationPower = headingDrivePid.calculate(0, headingError); driveSubsystem.tankDrivePowerMode((translationPower + rotationPower), (translationPower - rotationPower)); <BUGE> } 
@java.lang.Override public java.util.Collection<org.openhab.binding.zwave.internal.protocol.SerialMessage> getDynamicValues(boolean refresh) { java.util.ArrayList<org.openhab.binding.zwave.internal.protocol.SerialMessage> result = new java.util.ArrayList<org.openhab.binding.zwave.internal.protocol.SerialMessage>(); if (refresh == true) { initialiseName = false; initialiseLocation = false; } if ((initialiseName) == false) { <BUGS> result.add(this.getNameMessage()); <BUGE> } if ((initialiseLocation) == false) { <BUGS> result.add(this.getLocationMessage()); <BUGE> } return result; } 
<BUGS> private boolean verifyPermissions(int[] grantResults) { <BUGE> if ((grantResults.length) < 1) { return false; } for (int result : grantResults) { if (result != (android.content.pm.PackageManager.PERMISSION_GRANTED)) { return false; } } return true; } 
public static java.lang.String toSUMO(edu.stanford.nlp.util.IntPair ip, java.util.List<edu.stanford.nlp.ling.CoreLabel> tokens) { <BUGS> java.lang.String NERclass = tokens.get(ip.getSource()).ner(); <BUGE> if (NERclass.equals("PERSON")) return "Human"; else if (NERclass.equals("LOCATION")) return "GeographicArea"; else if (NERclass.equals("ORGANIZATION")) return "Organization";    return ""; } 
public java.util.ArrayList<rifGenericLibrary.taxonomyServices.TaxonomyTerm> getImmediateChildTerms(final java.lang.String parentTermIdentifier) throws rifGenericLibrary.system.RIFServiceException { java.util.ArrayList<rifGenericLibrary.taxonomyServices.TaxonomyTerm> results = new java.util.ArrayList<rifGenericLibrary.taxonomyServices.TaxonomyTerm>(); if (parentTermIdentifier == null) { return results; } rifGenericLibrary.taxonomyServices.TaxonomyTerm parentTerm = getTerm(parentTermIdentifier); if (parentTerm == null) { rifGenericLibrary.system.RIFServiceExceptionFactory rifServiceExceptionFactory = new rifGenericLibrary.system.RIFServiceExceptionFactory(); <BUGS> rifServiceExceptionFactory.createNonExistentTaxonomyTerm(taxonomyServiceID, parentTermIdentifier); <BUGE> } return parentTerm.getChildTerms(); } 
private void handleChangeTurn(es.ucm.fdi.tp.views.swing.Board board, es.ucm.fdi.tp.views.swing.Piece turn) { this.turn = turn; <BUGS> <BUGE> boardComponent.setEnabled(isPieceTurn(turn)); if (turn.equals(WINDOW_OWNER)) { WINDOW.toFront(); } requestAutomaticMove(); redrawBoard(); } 
boolean add(E item) { boolean newItem = !(this.linkedHashSet.remove(item)); <BUGS> if (newItem) { this.linkedHashSet.add(item); } <BUGE> if ((this.linkedHashSet.size()) >= (com.box.sdk.LRUCache.MAX_SIZE)) { java.util.Iterator<E> it = this.linkedHashSet.iterator(); it.next(); it.remove(); } return newItem; } 
public void remove(java.lang.String[] parm) { java.lang.String nId = parm[0]; <BUGS> org.zywx.wbpalmstar.plugin.uexLocalNotification.EAlarmReceiver.cancelAlerm(mContext, (nId + (mContext.getPackageName()))); <BUGE> if (((org.zywx.wbpalmstar.plugin.uexLocalNotification.EUexLocalNotify.map) != null) && (org.zywx.wbpalmstar.plugin.uexLocalNotification.EUexLocalNotify.map.containsKey(nId))) { int id = org.zywx.wbpalmstar.plugin.uexLocalNotification.EUexLocalNotify.map.get(nId); org.zywx.wbpalmstar.plugin.uexLocalNotification.EUexLocalNotify.map.remove(nId); if ((notificationManager) != null) { notificationManager.cancel(id); } } } 
@java.lang.Override public void onEvent() { <BUGS> if (((!(this.getIsClosingOrClosed())) && ((sendLink.getLocalState()) == (org.apache.qpid.proton.engine.EndpointState.CLOSED))) || ((sendLink.getRemoteState()) == (org.apache.qpid.proton.engine.EndpointState.CLOSED))) { <BUGE> recreateSendLink(); } } 
public void parseCommandObject(common.CommandObject commandObj, boolean isUndoAction, boolean isRedoAction) { if (!(isUndoAction || isRedoAction)) { commandObj.setLastSearchedIndex(lastSearchedIndex); } logic.CommandFacade commandFacade = new logic.CommandFacade(taskList, undoList, redoList, lastOutputTaskList, commandObj, isUndoAction, isRedoAction); commandFacade.run(); updateLists(commandFacade); <BUGS> java.lang.System.out.println(("Last searched index = " + (lastSearchedIndex))); <BUGE> } 
public void freePearlFromMercury(vg.civcraft.mc.prisonpearl.PrisonPearl pp, java.lang.String reason, java.lang.String server) { storage.removePearl(pp, reason); if ((server != null) && ((pp.getImprisonedPlayer()) != null)) { <BUGS> respawnPlayerCorrectly(pp.getImprisonedPlayer(), pp); <BUGE> } } 
@java.lang.Override public void onResponse(retrofit2.Response<com.birdcopy.BirdCopyApp.Http.CallResultCode> response) { com.birdcopy.BirdCopyApp.Http.CallResultCode result = response.body(); <BUGS> if (("1".equals(result.getRc())) && (!("-1".equalsIgnoreCase(result.getRs())))) { if (delegate != null) { delegate.completion(true); <BUGE> } } } 
public java.util.List<chipmunk.segmenter.Word> map(java.util.List<chipmunk.segmenter.Word> words) { <BUGS> <BUGE> java.util.List<chipmunk.segmenter.Word> new_words = new java.util.LinkedList<>(); for (chipmunk.segmenter.Word word : words) { chipmunk.segmenter.Word new_word = vocab_.get(word.getWord()); assert new_word != null; new_words.add(new_word); } return new_words; } 
int valueToInt(java.lang.Object value, int defaultValue) { int reply = defaultValue; if ((value != null) && (value instanceof java.lang.String)) { try { reply = java.lang.Integer.valueOf(((java.lang.String) (value))); } catch (java.lang.NumberFormatException ex) { <BUGS> <BUGE> } } return reply; } 
@java.lang.Override protected java.util.Date fromString(java.lang.String input) { for (java.text.SimpleDateFormat formatter : parsers) { try { <BUGS> return formatter.parse(input); <BUGE> } catch (java.text.ParseException ex) { } } com.univocity.parsers.conversions.DataProcessingException exception = new com.univocity.parsers.conversions.DataProcessingException(("Cannot parse '{value}' as a valid date. Supported formats are: " + (java.util.Arrays.toString(formats)))); exception.setValue(input); throw exception; } 
public org.smartbirdpj.mdl.Point getPoint(java.util.Map<java.lang.Integer, java.util.Map<java.lang.Integer, org.smartbirdpj.mdl.Point>> map, int han, int hu) { org.smartbirdpj.mdl.Point rv = null; if (han >= (org.smartbirdpj.engine.controller.PointHolder.HAN_MAX)) { han = org.smartbirdpj.engine.controller.PointHolder.HAN_MAX; hu = org.smartbirdpj.engine.controller.PointHolder.HU_MAX; } try { rv = map.get(han).get(hu); <BUGS> <BUGE> } catch (java.lang.NullPointerException e) { rv = null; } <BUGS> rv.setHan(han); rv.setHu(hu); <BUGE> return rv; } 
public void loginButtonPressed(android.view.View v) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException { <BUGS> loginProgressBar.setVisibility(View.VISIBLE); <BUGE> hideKeyboard(); loginInfo.setText(""); accountName = inputUsername.getText().toString(); password = inputPassword.getText().toString(); if ((!(accountName.equals(""))) && (!(password.equals("")))) { <BUGS> <BUGE> thorleifz.wakeup.LogIn.LoginTask loginTask = new thorleifz.wakeup.LogIn.LoginTask(); loginTask.execute(); } } 
@java.lang.Override public void onCheckedChanged(android.widget.RadioGroup group, @android.support.annotation.IdRes int checkedId) { rb = ((android.widget.RadioButton) (findViewById(checkedId))); <BUGS> android.util.Log.d("checkedId", rb.getText().toString()); <BUGE> gender = rb.getText().toString(); if (gender.equals("Male")) { profileColor = "BLUE"; }else { profileColor = "GREEN"; } } 
@java.lang.Override public void onResponse(retrofit2.Call<com.movielist.aishwarytandon.movielist.MovieResponse> call, retrofit2.Response<com.movielist.aishwarytandon.movielist.MovieResponse> response) { java.util.List<com.movielist.aishwarytandon.movielist.Movie> movies = response.body().getResults(); <BUGS> recyclerView.setAdapter(new com.movielist.aishwarytandon.movielist.MovieAdapter(movies, R.layout.list_item_movie, getApplicationContext())); <BUGE> android.util.Log.d(com.movielist.aishwarytandon.movielist.MainActivity.TAG, ("Number of movies received: " + (movies.size()))); } 
@java.lang.Override public void onClick(android.view.View v) { if (video.isPlaying()) { switchPlayOrPausButtonState(video.isPlaying()); video.pause(); }else { switchPlayOrPausButtonState(video.isPlaying()); <BUGS> video.resume(); <BUGE> } } 
@java.lang.Override public java.lang.String getReply() { <BUGS> org.academiadecodigo.bootcamp8.shared.message.Message<java.lang.String> msg = null; <BUGE> try { <BUGS> msg = ((org.academiadecodigo.bootcamp8.shared.message.Message) (objectInputStream.readObject())); <BUGE> } catch (java.io.IOException | java.lang.ClassNotFoundException e) { java.lang.System.err.println(("Error reading stream " + (e.getMessage()))); } <BUGS> return msg.getContent(); <BUGE> } 
@java.lang.Override public boolean resume(java.lang.Object entity) { <BUGS> java.lang.System.out.println(("resume : " + entity)); <BUGE> synchronized(responseLock) { if (done) { return false; } if (cancelled) { return false; } org.vsg.cusp.engine.rapidoid.spi.AsyncContext asyncContext = getAsyncContext(); try { return internalResume(entity); } finally { done = true; asyncContext.complete(); } } } 
public java.util.List<hr.fer.tki.evolution_algorithm.chromosome.IChromosome> getBestSolutions(int num) { java.util.List<hr.fer.tki.evolution_algorithm.chromosome.IChromosome> solutions = new java.util.ArrayList<>(); <BUGS> this.evaluatePopulation(this.population); this.sortPopulation(); <BUGE> for (int i = 0; i < num; i++) { solutions.add(this.population.get(i)); } for (hr.fer.tki.evolution_algorithm.chromosome.IChromosome chromosome : solutions) { java.lang.System.out.println(chromosome.getFitness()); } return solutions; } 
@java.lang.Override protected void onActivityResult(int requestCode, int resultCode, android.content.Intent data) { super.onActivityResult(requestCode, resultCode, data); if (resultCode != (RESULT_OK)) return ;  switch (requestCode) { case ya.haojun.roadtoadventure.activity.MainActivity.REQUEST_PROFILE : <BUGS> if (data.getBooleanExtra("logout", false)) { <BUGE> ya.haojun.roadtoadventure.helper.SPHelper.clearUser(this); openActivity(ya.haojun.roadtoadventure.activity.PermissionActivity.class); finish(); }else { rv_drawer.getAdapter().notifyItemChanged(0); } break; } } 
public org.osgl.util.S.Buffer prepend(java.lang.StringBuffer sb) { if (sb == null) return appendNull();  int len = sb.length(); ensureCapacityInternal(((count) + len)); <BUGS> java.lang.System.arraycopy(value, 0, value, count, count); <BUGE> sb.getChars(0, len, value, 0); count += len; return this; } 
@org.junit.Test public void addGenreToFilm_ByGenreAndFilmId() { <BUGS> film = new am.aca.entity.Film(); <BUGE> director = new am.aca.dao.impljdbc.DirectorDaoJdbc().addDirector("Matt Ross", false); film.setTitle("Captain Fantastic"); film.addDirector(director); film.addGeners(Genre.DRAMA); filmDao.addFilm(film); assertTrue(filmDao.addGenreToFilm(film.getGeners().get(0), film.getId())); } 
protected java.util.List retrieveClassesForIngredients() { <BUGS> if (getFixSpace().strategy().equals(IngredientSpaceStrategy.LOCAL)) <BUGE> return originalVariant.getAffectedClasses();  <BUGS> if ((getFixSpace().strategy().equals(IngredientSpaceStrategy.GLOBAL)) || (getFixSpace().strategy().equals(IngredientSpaceStrategy.PACKAGE))) <BUGE> return this.mutatorSupporter.getFactory().Type().getAll();  return null; } 
@java.lang.Override <BUGS> public com.jt.commons.GenericRecord call(com.jt.commons.GenericRecord rec1, com.jt.commons.GenericRecord rec2) throws java.lang.Exception { <BUGE> java.lang.Double avg = (((java.lang.Double) (rec1.get(Constants.CLOSE))) + ((java.lang.Double) (rec2.get(Constants.CLOSE)))) / 2; <BUGS> rec1.put(Constants.CLOSE, avg); return rec1; <BUGE> } 
@java.lang.Override public void onSuccess(com.facebook.login.LoginResult loginResult) { accessToken = loginResult.getAccessToken(); userProfile = com.facebook.Profile.getCurrentProfile(); if ((userProfile) != null) { com.andela.bark.models.User user = com.andela.bark.models.User.createFacebookUser(userProfile); <BUGS> com.andela.bark.GKprManger gKprManger = new com.andela.bark.GKprManger(user); <BUGE> if (gKprManger.isAuthenticated) { android.content.Intent i = new android.content.Intent(activity, com.andela.bark.FragmentHostActivity.class); activity.startActivity(i); } } } 
<BUGS> public void toHTMLTable(java.io.PrintWriter ostr) { <BUGE> T tmp; <BUGS> ostr.print("<table>"); <BUGE> while (this.results.hasNext()) { tmp = this.results.next(); <BUGS> ostr.print(tmp.toHTMLTableRow()); <BUGE> } <BUGS> ostr.print("</table>"); ostr.flush(); <BUGE> } 
public org.test.framework.core.runtime.TestResult execute() { org.test.framework.core.runtime.TestResult result = new org.test.framework.core.runtime.TestResult(); <BUGS> org.test.framework.core.runtime.TestSuite suite = new org.test.framework.core.runtime.TestSuite(); <BUGE> for (java.lang.Class<?> cl : classList) { <BUGS> <BUGE> java.util.List<java.lang.String> names = getMethodNames(org.test.framework.core.runtime.Runtime.ANNOTATION, cl); for (java.lang.String methodName : names) { suite.add(new org.test.framework.core.runtime.TestCase(methodName)); } suite.run(result, cl); } return result; } 
<BUGS> private java.io.File interpolateDockerfile(java.io.File dockerFile, io.fabric8.maven.docker.assembly.BuildDirs params, java.util.Properties properties, java.lang.String filter) throws java.io.IOException { java.io.File targetDockerfile = new java.io.File(((params.getOutputDirectory()) + "/Dockerfile")); <BUGE> java.lang.String dockerFileInterpolated = io.fabric8.maven.docker.assembly.DockerFileUtil.interpolate(dockerFile, properties, filter); try (java.io.Writer writer = new java.io.FileWriter(targetDockerfile)) { org.apache.commons.io.IOUtils.write(dockerFileInterpolated, writer); } <BUGS> return targetDockerfile; <BUGE> } 
@java.lang.Override public void onClick(android.view.View v) { if (holder.joinButton.getText().equals(getString(R.string.game_lobby_button_join_team))) { <BUGS> if (dbTeam.addDBPlayer(getRef(position))) { <BUGE> holder.joinButton.setText(getString(R.string.game_lobby_button_leave_team)); }else { android.widget.Toast.makeText(getActivity().getApplicationContext(), "This team is full", Toast.LENGTH_SHORT).show(); } }else { dbTeam.removeDBPlayer(getRef(position)); holder.joinButton.setText(getString(R.string.game_lobby_button_join_team)); } } 
private java.lang.String stringRepresentation(java.lang.Object value, org.lightadmin.core.web.support.PersistentEntity persistentEntity) { org.lightadmin.core.config.domain.DomainTypeBasicConfiguration domainTypeBasicConfiguration = adminConfiguration.forDomainType(persistentEntity.getType()); org.lightadmin.api.config.utils.EntityNameExtractor nameExtractor = domainTypeBasicConfiguration.getEntityConfiguration().getNameExtractor(); <BUGS> return org.lightadmin.core.config.domain.configuration.support.ExceptionAwareTransformer.exceptionAwareNameExtractor(nameExtractor, domainTypeBasicConfiguration).apply(value); <BUGE> } 
public void init(org.magic.api.beans.MagicDeck deck) { cards = new java.util.ArrayList<org.magic.api.beans.MagicCard>(); <BUGS> for (java.util.Map.Entry<org.magic.api.beans.MagicCard, java.lang.Integer> cci : deck.getMap().entrySet()) { org.magic.api.beans.MagicCard mc = cci.getKey(); for (int i = 0; i < (cci.getValue()); i++) cards.add(mc); <BUGE>  <BUGS> } <BUGE> refresh(); } 
private void handleByTerminatingIfWithinDialog(android.javax.sip.ClientTransaction clientTransaction) { logger.debug("{} request failed because call or transaction did not exist.", clientTransaction.getRequest().getMethod()); android.javax.sip.Dialog dialog = clientTransaction.getDialog(); if ((dialog != null) && (!(((dialog.getState()) == (android.javax.sip.DialogState.EARLY)) || ((dialog.getState()) == (android.javax.sip.DialogState.TERMINATED))))) { sendByeRequest(dialog); <BUGS> throw new org.github.sipuada.events.ResponsePostponed(); <BUGE> } } 
<BUGS> public static void assertEquals(java.lang.String message, java.lang.Object expected, java.lang.Object actual) { <BUGE> boolean condition; if (expected == null) { condition = actual == null; }else { condition = expected.equals(actual); } <BUGS> com.triangleleft.assertdialog.AssertDialog.assertTrue(message, condition); <BUGE> } 
<BUGS> static com.github.rinde.rinsim.ui.SimulationViewer create(org.eclipse.swt.widgets.Shell shell, final com.github.rinde.rinsim.core.Simulator sim, int pSpeedUp, boolean pAutoPlay, java.util.List<com.github.rinde.rinsim.ui.renderers.Renderer> pRenderers, java.util.List<com.github.rinde.rinsim.ui.renderers.CanvasRendererBuilder> builders, java.util.Map<com.github.rinde.rinsim.ui.MenuItems, java.lang.Integer> acc) { return new com.github.rinde.rinsim.ui.SimulationViewer(shell, sim, pSpeedUp, pAutoPlay, pRenderers, builders, acc); <BUGE> } 
public void update() { width = display.getFrame().getWidth(); height = display.getFrame().getHeight(); keyManager.update(); if ((dev.Same4254.ThisGame.States.State.getCurrentState()) != null) dev.Same4254.ThisGame.States.State.getCurrentState().update();  repaint(); <BUGS> java.lang.System.out.println(("Pro: " + (dev.Same4254.ThisGame.Entities.Prophecy.prophosizing))); <BUGE> } 
<BUGS> public boolean canAdvance(java.util.ArrayList<java.lang.Integer> counters, java.util.ArrayList<java.lang.Integer> boundaries) { for (int cElem = 0; (cElem < (counters.size())) && (cElem < (boundaries.size())); ++cElem) { if (!(counters.get(cElem).equals(boundaries.get(cElem)))) <BUGE> return true;  } return false; } 
@java.lang.Override public com.example.vincentzhang.Sprite.AbstractSprite detectCollide(com.example.vincentzhang.Sprite.ImageSprite imgSprite) { for (com.example.vincentzhang.Sprite.AbstractCollidableSprite bomb : bombs) { if (bomb.detectCollide(imgSprite)) return bomb;  } for (com.example.vincentzhang.Sprite.AbstractCollidableSprite explosion : explosions) { if (explosion.detectCollide(imgSprite)) <BUGS> return explosion; <BUGE>  } return null; } 
public void init() { library.activity.VinhNT_Common.init(); icon = new android.widget.ImageView(this); icon.setImageResource(R.mipmap.icon_default); <BUGS> requestHTTP = new library.connect.VinhNT_HTTP(); <BUGE> android.widget.LinearLayout mainView = new android.widget.LinearLayout(this); setContentView(mainView); mainView.setOrientation(LinearLayout.VERTICAL); library.activity.VinhNT_Header header = new library.activity.VinhNT_Header(this); mainView.addView(header, VinhNT_Common.size_10_per_HORIZONTAL); mainView.addView(getContent(), VinhNT_Common.size_80_per_HORIZONTAL); mainView.addView(getFooter(), VinhNT_Common.size_10_per_HORIZONTAL); } 
public java.lang.Integer getGratitudesComplete() { java.lang.Integer gratitudeComplete = 0; for (java.lang.String gratitude : gratitudes) { <BUGS> gratitudeComplete += java.lang.Math.max(100, (((gratitude.length()) * 100) / (ai.victorl.toda.data.entry.Entry.MIN_ENTRY_LENGTH))); <BUGE> } return java.lang.Math.min(100, java.lang.Long.valueOf(java.lang.Math.round((gratitudeComplete / 3.0))).intValue()); } 
@java.lang.Override public org.junit.runners.model.Statement apply(org.junit.runners.model.Statement base, org.junit.runner.Description description) { org.junit.runners.model.Statement newStatement = base; for (org.junit.runners.model.TestClass extension : extensions) { <BUGS> newStatement = prepareBeforeClasses(extension, base); <BUGE> newStatement = prepareAfterClasses(extension, newStatement); newStatement = prepareRules(extension, newStatement, description); newStatement = prepareBefores(extension, newStatement, null); newStatement = prepareAfters(extension, newStatement, null); } return newStatement; } 
public static com.drewhannay.chesscrafter.models.PieceType getKingPieceType() { java.util.Map<com.drewhannay.chesscrafter.models.Direction, java.lang.Integer> movements = com.google.common.collect.Maps.newHashMap(); for (com.drewhannay.chesscrafter.models.Direction direction : com.drewhannay.chesscrafter.models.Direction.values()) { movements.put(direction, 1); } <BUGS> return new com.drewhannay.chesscrafter.models.PieceType("King", movements, null, null); <BUGE> } 
@org.testng.annotations.Test(groups = { "integration" , "services" , "httpdelete" , "virtual" }, description = "A negative integration test to verify the response code from a delete call") public void compareDeleteResponseBadCode201Test() { com.google.gson.JsonObject request = new com.google.gson.JsonObject(); request.addProperty("id", 1); request.addProperty("title", "foo1"); request.addProperty("body", "bar"); request.addProperty("userId", 5); com.coveros.selenified.services.Call call = this.calls.get(); <BUGS> call.delete("posts/5", new com.coveros.selenified.services.Request(request), false).assertEquals(201); <BUGE> finish(1); } 
@org.springframework.context.annotation.Bean public javax.persistence.EntityManagerFactory entityManagerFactory() { java.util.logging.Logger.getLogger("org.hibernate").setLevel(java.util.logging.Level.INFO); org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter vendorAdapter = new org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter(); <BUGS> vendorAdapter.setShowSql(true); <BUGE> vendorAdapter.setGenerateDdl(false); vendorAdapter.setDatabasePlatform("org.hibernate.dialect.PostgreSQLDialect"); org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean factory = new org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean(); factory.setJpaVendorAdapter(vendorAdapter); factory.setPackagesToScan("com.teamd.taxi.entity"); factory.setDataSource(dataSource()); factory.afterPropertiesSet(); return factory.getObject(); } 
private void buildItemWithTwoRows() { createDVPanels(); java.lang.String text = getLatexString(isInputTreeItem(), org.geogebra.web.web.gui.view.algebra.RadioTreeItem.LATEX_MAX_EDIT_LENGHT); latex = text != null; <BUGS> <BUGE> if (updateDefinitionPanel()) { <BUGS> <BUGE> } <BUGS> plainTextItem.clear(); plainTextItem.add(definitionPanel); <BUGE> if (updateValuePanel(text)) { outputPanel.add(valuePanel); plainTextItem.add(outputPanel); <BUGS> org.geogebra.common.util.debug.Log.debug("[AVR] Value panel is updated"); <BUGE> } <BUGS> ihtml.clear(); <BUGE> ihtml.add(plainTextItem); } 
@org.junit.Test public void testRegexGetsRootWithAccidental() { java.lang.String chord = "Bb"; parser.run(chord); junit.framework.Assert.assertEquals("Bb", parser.getRoot()); java.lang.String otherChord = "F#"; <BUGS> parser.run(chord); <BUGE> junit.framework.Assert.assertEquals("F#", parser.getRoot()); } 
@org.testng.annotations.Test(enabled = true) <BUGS> public void pingRequestShouldBeValid() throws java.lang.InterruptedException { <BUGE> se.inera.axel.shs.mime.ShsMessage testMessage = make(shsMessageMaker); org.apache.camel.component.mock.MockEndpoint mockEndpoint = getMockEndpoint("mock:ping"); mockEndpoint.expectedMinimumMessageCount(1); mockEndpoint.expectedMessagesMatches(isValidPingRequest(testMessage)); template().requestBody("direct:testShs2riv", testMessage); mockEndpoint.assertIsSatisfied(java.util.concurrent.TimeUnit.SECONDS.toMillis(10)); } 
<BUGS> public codeu.chat.common.User newUser(codeu.chat.util.Uuid id, java.lang.String name, codeu.chat.common.Time creationTime, java.lang.String password) { <BUGE> codeu.chat.common.User user = null; if (isIdFree(id)) { user = new codeu.chat.common.User(id, name, creationTime); model.add(user, password); codeu.chat.server.Controller.LOG.info("newUser with password success (user.id=%s user.name=%s user.time=%s)", id, name, creationTime); }else { codeu.chat.server.Controller.LOG.info("newUser fail - id in use (user.id=%s user.name=%s user.time=%s)", id, name, creationTime); } return user; } 
public void cleanUp() { switch (templateSelection) { case SPECIFIC_VALUE : single_value = null; break; case VALUE_LIST : case COMPLEMENTED_LIST : value_list.clear(); value_list = null; <BUGS> <BUGE> case VALUE_RANGE : min_value = null; max_value = null; <BUGS> <BUGE> default : break; } templateSelection = template_sel.UNINITIALIZED_TEMPLATE; } 
private void copyId(java.lang.String id) { android.content.ClipboardManager clipboard = ((android.content.ClipboardManager) (getSystemService(Context.CLIPBOARD_SERVICE))); android.content.ClipData clip = android.content.ClipData.newPlainText("ID", id); clipboard.setPrimaryClip(clip); <BUGS> android.content.Context context = getApplicationContext(); <BUGE> java.lang.CharSequence dialogText = "Object id copied to clipboard"; int duration = android.widget.Toast.LENGTH_SHORT; <BUGS> android.widget.Toast.makeText(context, dialogText, duration).show(); <BUGE> } 
public final boolean newProject(java.lang.String projectName) { <BUGS> final de.dfki.vsm.editor.project.ProjectEditor editor = new de.dfki.vsm.editor.project.ProjectEditor(); <BUGE> editor.getSceneFlowEditor().getSceneFlow().setName(editor.getEditorProject().getEditorConfig().sMAINSUPERNODENAME); addProjectTab(projectName, editor); if ((mProjectEditors.getTabCount()) == 1) { setContentPane(mProjectEditors); mEditorMenuBar.setVisible(true); } refresh(); return true; } 
private void sendPackets(java.util.ArrayList<sr.Packet> packets) throws java.io.IOException { while ((m_lastSent) != (m_winUpper)) { <BUGS> m_lastSent = ((m_lastSent) + 1) % (m_modulo); m_actual = m_actual += 1; <BUGE> sr.Packet p = packets.get(m_actual); m_socket.send(p.getDatagramPacket(m_destAddr, m_destPort)); m_timeouts.startTimer(p, sr.SelectiveRepeatUnit.PACKET_TIMEOUT); <BUGS> <BUGE> } } 
public void newArray(int size) { com.himamis.retex.editor.share.meta.MetaArray meta = formula.getMetaModel().getArray(); <BUGS> com.himamis.retex.editor.share.model.MathArray array = new com.himamis.retex.editor.share.model.MathArray(formula, meta, size); <BUGE> currentField.addArgument(currentOffset, array); <BUGS> com.himamis.retex.editor.share.model.MathSequence field = new com.himamis.retex.editor.share.model.MathSequence(formula); <BUGE> array.setArgument(0, field); for (int i = 1; i < size; i++) { <BUGS> array.setArgument(i, new com.himamis.retex.editor.share.model.MathSequence(formula)); <BUGE> } currentField = field; currentOffset = 0; } 
@org.junit.Test public void add_same_num_Test() { Chronotimer c0 = new Chronotimer(); c0.power(); <BUGS> c0.newRun(); <BUGE> assertEquals(true, c0.num("12")); assertEquals(false, c0.num("12")); } 
@java.lang.Override public java.lang.Long createPost(java.lang.Long userId, edu.iis.mto.blog.api.request.PostRequest postRequest) { edu.iis.mto.blog.domain.model.User user = userRepository.findOne(userId); <BUGS> if (!(user.getAccountStatus().equals(AccountStatus.CONFIRMED))) { throw new edu.iis.mto.blog.domain.errors.DomainError("user is not confirmed"); } <BUGE> edu.iis.mto.blog.domain.model.BlogPost post = mapper.mapToEntity(postRequest); post.setUser(user); blogPostRepository.save(post); return post.getId(); } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.common_names_description); android.os.Bundle extras = getIntent().getExtras(); common_name_rowid = extras.getLong(CommonNamesAdapter.COMMON_NAME_ROWID); common_name = extras.getString(CommonNamesAdapter.COMMON_NAME); common_name_count = extras.getString(CommonNamesAdapter.COMMON_NAME_COUNT).toString(); <BUGS> description = (common_name) + (text); <BUGE> balu.android.CommonNameDescription.tv = ((android.widget.TextView) (findViewById(R.id.common_name_description_text))); balu.android.CommonNameDescription.tv.setText(description); } 
private void attachReactions() { client.MainListener controller = new client.MainListener(this); settings.addMouseListener(controller); close.addMouseListener(controller); logout.addMouseListener(controller); trayIcon.addMouseListener(controller); reload.addMouseListener(controller); <BUGS> scroll.getVerticalScrollBar().addAdjustmentListener(controller); <BUGE> } 
public long getNextChapterStart(long position) { long ret = com.monsterbutt.homeview.plex.media.PlexVideoItem.BAD_CHAPTER_START; if (hasChapters()) { for (com.monsterbutt.homeview.plex.media.Chapter chapter : mVideo.getChapters()) { <BUGS> if ((chapter.getStartTimeOffset()) > position) { <BUGE> ret = chapter.getStartTimeOffset(); break; } } } return ret; } 
private void updateFaceCentroid() { faceCentroid.setToZero(); for (int i = 0; i < (edges.size()); i++) <BUGS> faceCentroid.add(edges.get(i).getOriginVertex().getPosition()); <BUGE>  faceCentroid.scale((1.0 / (edges.size()))); } 
private boolean changedMins() { try { <BUGS> return !((java.lang.Double.parseDouble(this.minutes)) == (java.lang.Double.parseDouble(this.time.getEditor().getText()))); <BUGE> } catch (java.lang.Exception e) { return false; } } 
protected java.lang.String getAsBroadcast(io.minimum.minecraft.superbvote.votes.Vote vote) { org.bukkit.entity.Player onlineVoted = org.bukkit.Bukkit.getPlayerExact(vote.getName()); java.lang.String replaced = message; for (io.minimum.minecraft.superbvote.configuration.message.placeholder.PlaceholderProvider provider : io.minimum.minecraft.superbvote.configuration.message.PlainStringMessage.PROVIDER_LIST) { if (provider.canUse()) { <BUGS> replaced = provider.applyForBroadcast(onlineVoted, message, vote); <BUGE> } } return replaced; } 
private void save(T value) { switch (storageType) { case LOCAL : net.wbz.moba.controlcenter.web.client.LocalStorage.getInstance().set(getConfigKey(), convertValueToString(value)); <BUGS> <BUGE> break; case REMOTE : net.wbz.moba.controlcenter.web.client.ServiceUtils.getConfigService().saveValue(getConfigKey(), convertValueToString(value), new net.wbz.moba.controlcenter.web.client.util.EmptyCallback<java.lang.Void>()); break; } } 
public static void index() { com.google.gson.Gson gson = new com.google.gson.Gson(); int statsCount = ((int) (controllers.DailyStat.count())); <BUGS> java.util.List<controllers.DailyStat> dailyStats = controllers.DailyStat.all().from((statsCount - 10)).fetch(5); <BUGE> if (dailyStats != null) { render(dailyStats); }else { renderHtml("empty"); } } 
private void deleteTask(java.lang.String[] taskString) { for (int i = 0; i < (tasks.size()); i++) { if (taskString[0].equals(tasks.get(i).getTitle())) { if (taskString[1].equals(tasks.get(i).getDescription())) { tasks.remove(i); <BUGS> writePreferences(); <BUGE> } } } } 
public Move makeMove(BoardAndRack bar) { java.lang.System.out.println("Input word including tiles on board, ex. \"DOG\""); java.lang.String word = getNextLine(); java.lang.System.out.println("Input starting position (leftmost or topmost) including tiles on board ex. \"(1,3)\""); Position p = new Position(getNextLine()); java.lang.System.out.println("Is horizontal move? Y/N ex. \"Y\""); boolean isHorizontal = s.nextLine().equals("Y"); Move m = bar.board.convertToMove(new PossibleMove(word, p.x, p.y, isHorizontal)); <BUGS> <BUGE> return m; } 
private void notifyRendering() { <BUGS> if (!(mRenderingState.inWaitingState)) { return ; } mRenderingState.inWaitingState = false; <BUGE> if ((drawTask) != null) { drawTask.requestClear(); } if (mUpdateInNewThread) { synchronized(this) { mDrawTimes.clear(); } synchronized(drawTask) { drawTask.notifyAll(); } }else { mDrawTimes.clear(); removeMessages(master.flame.danmaku.controller.DrawHandler.UPDATE); sendEmptyMessage(master.flame.danmaku.controller.DrawHandler.UPDATE); } <BUGS> <BUGE> } 
@java.lang.Override public void setComparisonMatches(java.util.List<uk.ac.ebi.pride.spectracluster.util.ComparisonMatch> comparisonMatches) { this.bestComparisonMatches.clear(); <BUGS> this.bestComparisonMatches.addAll(comparisonMatches); java.util.Collections.sort(bestComparisonMatches); lowestBestComparisonSimilarity = bestComparisonMatches.get(0).getSimilarity(); <BUGE> bestComparisonMatchIds = null; } 
@java.lang.Override public void in(java.lang.String token) { messageToken = token; l((token + " is in")); l(java.lang.String.valueOf(session.getWits().size())); <BUGS> if ((session.getWits().size()) < 3) { org.json.JSONObject attr = new org.json.JSONObject(); session.sendTo(localStream, true, attr, token); } <BUGE> } 
@java.lang.Override public void resolveCollision(asteroids.model.WorldObject other) { if (other instanceof asteroids.model.Ship) this.resolveCollision(((asteroids.model.Ship) (other))); <BUGS>  if (other instanceof asteroids.model.Bullet) this.resolveCollision(((asteroids.model.Bullet) (other)));  if (other instanceof asteroids.model.MinorPlanet) this.resolveCollision(((asteroids.model.MinorPlanet) (other))); <BUGE>  } 
<BUGS> public void checkForWinner() { <BUGE> for (Car c : cars) if (c.checkWin()) { javax.swing.JOptionPane.showMessageDialog(null, ((((("We have a winner!\nCar " + (c.getRacingNumber())) + " has won!\nDistance traveled by Car ") + (c.getRacingNumber())) + " : ") + (c.getDistanceTraveled()))); <BUGS> <BUGE> }  <BUGS> <BUGE> } 
public static synchronized <T> T provide(final java.lang.Class<T> clz) { <BUGS> io.demor.nuts.lib.eventbus.ListenerBus.addClz(clz); <BUGE> if (io.demor.nuts.lib.eventbus.ListenerBus.mMethodProvider.containsKey(clz)) { return ((T) (io.demor.nuts.lib.eventbus.ListenerBus.mMethodProvider.get(clz).mProxy)); }else { <BUGS> return null; <BUGE> } } 
protected void generateStaticKeyFunctionForRole(pt.ist.fenixframework.dml.Role role, java.io.PrintWriter out) { <BUGS> if ((role.getMultiplicityUpper()) == (Role.MULTIPLICITY_MANY)) { <BUGE> println(out, generateMapKeyFunction(role.getName(), role.getType().getFullName(), "Comparable<?>", "Oid", false)); } } 
public int selectColor(int x, int y, int color) { if ((((x >= (com.github.sesquipedalian_dev.snes_graphics_edit.data.TileCHR.TILE_DIM)) || (y >= (com.github.sesquipedalian_dev.snes_graphics_edit.data.TileCHR.TILE_DIM))) || (x < 0)) || (y < 0)) { throw new java.lang.IndexOutOfBoundsException((("Pick a position within 0 < POSITION < TILE_DIM: " + (com.github.sesquipedalian_dev.snes_graphics_edit.data.TileCHR.TILE_DIM)) + "\n")); } <BUGS> int trueColor = (color - 1) % (1 << (bitDepth)); <BUGE> colorSelected[x][y] = trueColor; return trueColor; } 
@org.junit.Test public void importConcept_shouldAddNewDescriptionsToConcept() throws java.lang.Exception { org.openmrs.module.openconceptlab.client.OclConcept oclConcept = newOclConcept(); <BUGS> importer.importConcept(new org.openmrs.module.openconceptlab.CacheService(conceptService), null, oclConcept); <BUGE> org.openmrs.module.openconceptlab.client.OclConcept.Description desc1 = new org.openmrs.module.openconceptlab.client.OclConcept.Description(); desc1.setDescription("test oclConceptDescription"); desc1.setLocale(org.openmrs.api.context.Context.getLocale()); oclConcept.getDescriptons().add(desc1); <BUGS> importer.importConcept(new org.openmrs.module.openconceptlab.CacheService(conceptService), null, oclConcept); <BUGE> assertImported(oclConcept); } 
@java.lang.Override public void setBiome(int x, int z, org.spongepowered.api.world.biome.BiomeType biome) { com.google.common.base.Preconditions.checkNotNull(biome, "biome"); checkRange(x, z); <BUGS> this.biomes[((x - (this.start.getX())) | ((z - (this.start.getY())) << 4))] = ((net.minecraft.world.biome.BiomeGenBase) (biome)); <BUGE> } 
public se.rydberg.handla.model.TextNumber splitNumericAndStingIfFirstLetterIsDigit(java.lang.String word) { se.rydberg.handla.model.TextNumber textNumber = new se.rydberg.handla.model.TextNumber(); if (java.lang.Character.isDigit(word.charAt(0))) { <BUGS> return textNumber = splitNumericAndString(word); <BUGE> }else { textNumber.setText(word); textNumber.setNumber(""); return textNumber; } } 
<BUGS> public jxl.Sheet checkSheetName(jxl.Workbook workbook) throws java.io.IOException, jxl.read.biff.BiffException { <BUGE> assertTrue(((workbook.getSheets().length) > 0)); for (java.lang.String name : workbook.getSheetNames()) { if (name.equals(getResources(activityTestRule).getString(R.string.default_sheet_name))) { return workbook.getSheet(name); } } workbook.close(); return null; } 
@java.lang.Override public java.util.List<java.lang.Object> getPacketData(java.util.List<java.lang.Object> list) { for (org.halvors.electrometrics.common.component.IComponent component : components) { if (component instanceof org.halvors.electrometrics.common.tile.component.ITileNetworkableComponent) { org.halvors.electrometrics.common.tile.component.ITileNetworkableComponent tileComponent = ((org.halvors.electrometrics.common.tile.component.ITileNetworkableComponent) (component)); <BUGS> list.addAll(tileComponent.getPacketData(list)); <BUGE> } } return list; } 
public int base2int(char base) { int intVal = -1; switch (base) { case 'A' : intVal = 0; break; case 'C' : intVal = 1; break; case 'G' : intVal = 2; break; case 'T' : intVal = 3; break; case 'N' : intVal = 4; <BUGS> <BUGE> default : throw new java.lang.IllegalArgumentException(("Invalid character: " + base)); } return intVal; } 
public int run() { int exponent = 1000; java.math.BigInteger base = java.math.BigInteger.valueOf(2); java.math.BigInteger value = java.math.BigInteger.ZERO; int sum = 0; value = base.pow(exponent); java.lang.String str = value.toString(); <BUGS> for (int i = 0; i < ((str.length()) - 1); i++) <BUGE> sum += ((int) ((str.charAt(i)) - '0'));  return sum; } 
@java.lang.Override public void getValue() { rawMoney = com.sungjae.app.showmethemoney.data.DataMap.readFloat(DataMapKey.MONEY_VALUE_RAW); coinValue = com.sungjae.app.showmethemoney.data.DataMap.readFloat(DataMapKey.COIN_AMOUNT); totalValue = com.sungjae.app.showmethemoney.data.DataMap.readFloat(DataMapKey.TOTAL_VALUE_RAW); enabled = com.sungjae.app.showmethemoney.activity.setting.ConfigurationConstants.getEnabledMoneyKeeper(); <BUGS> requestToKeep = com.sungjae.app.showmethemoney.activity.setting.ConfigurationConstants.getKeepValueMoneyKeeper(); <BUGE> } 
public static int findMaxArg(int upperBound, int lowerBound, int page) { int maxCandidate = 0; java.lang.Double maxCandidateValue = 0.0; <BUGS> for (int i = upperBound; i < lowerBound; i++) { <BUGE> if ((pagenumber.Viterbi.viterbiPages.get(page).get(i)) > maxCandidateValue) { maxCandidateValue = pagenumber.Viterbi.viterbiPages.get(page).get(i); maxCandidate = i; } } return maxCandidate; } 
@java.lang.Override public boolean add(final E elem) { <BUGS> final boolean res = super.add(elem); if (res) try { lock.lock(); <BUGE> added.signal(); <BUGS> } finally { lock.unlock(); }  <BUGE> return res; } 
public void setPageLength(int pLength) { if ((pageLength) != pLength) { pageLength = pLength; page = (startIndex) / pLength; checkPageCount(); <BUGS> grid.setHeightByRows(pLength); grid.setHeightMode(HeightMode.ROW); <BUGE> if (!(setStartIndex())) { fireItemSetChange(); } } } 
@java.lang.Override public java.lang.Boolean call() throws java.lang.Exception { try { consumerVertex.scheduleForExecution(consumerVertex.getExecutionGraph().getScheduler(), consumerVertex.getExecutionGraph().isQueuedSchedulingAllowed()); } catch (java.lang.Throwable t) { <BUGS> fail(new java.lang.IllegalStateException((("Could not schedule consumer " + "vertex ") + consumerVertex), t)); <BUGE> } return true; } 
@java.lang.Override public void validate(java.lang.Object obj, org.springframework.validation.Errors err) { boolean isAllNull = true; edu.asu.spring.quadriga.web.workspace.backing.ModifyWorkspaceForm workspaceForm = ((edu.asu.spring.quadriga.web.workspace.backing.ModifyWorkspaceForm) (obj)); java.util.List<edu.asu.spring.quadriga.web.workspace.backing.ModifyWorkspace> workspaceList = workspaceForm.getWorkspaceList(); if (workspaceList != null) { for (edu.asu.spring.quadriga.web.workspace.backing.ModifyWorkspace workspace : workspaceList) { java.lang.String internalId = workspace.getId(); if (internalId != null) { isAllNull = false; <BUGS> <BUGE> } } <BUGS> <BUGE> err.reject("workspace_selection.required"); } } 
public static void sendEvent(final com.facebook.react.bridge.ReactContext context, final java.lang.String eventName, final com.facebook.react.bridge.WritableMap params) { if (context.hasActiveCatalystInstance()) { <BUGS> android.util.Log.d(io.fullstack.firestack.FirestackUtils.TAG, ("Sending event " + eventName)); <BUGE> context.getJSModule(DeviceEventManagerModule.RCTDeviceEventEmitter.class).emit(eventName, params); }else { android.util.Log.d(io.fullstack.firestack.FirestackUtils.TAG, "Waiting for CatalystInstance before sending event"); } } 
@java.lang.Override public void onError(java.lang.String message, java.lang.String code, java.lang.Exception e) { com.facebook.react.bridge.WritableMap params = com.facebook.react.bridge.Arguments.createMap(); params.putString("eventName", "connectionStateChange"); params.putString("message", message); params.putString("code", code); <BUGS> params.putString("exceptionMessage", e.getMessage()); <BUGE> sendEvent(params); } 
@java.lang.Override public void onBindViewHolder(com.example.sergio.spotify_angular.adapters.CategoriesAdapter.CategoriesViewHolder holder, int position) { kaaes.spotify.webapi.android.models.Category category = data.get(position); <BUGS> com.example.sergio.spotify_angular.adapters.CategoriesAdapter.CategoriesViewHolder categoryViewHolder = ((com.example.sergio.spotify_angular.adapters.CategoriesAdapter.CategoriesViewHolder) (holder)); categoryViewHolder.setName(category.name); bindToListener(categoryViewHolder); com.squareup.picasso.Picasso.with(context).load(category.icons.get(0).url).placeholder(R.drawable.ic_categories).into(categoryViewHolder.getImage()); <BUGE> } 
<BUGS> public static java.lang.String[] normalizeSummonerNames(net.rithms.riot.constant.Platform platform, java.lang.String... summonerNames) { <BUGE> java.util.Objects.requireNonNull(summonerNames); for (int i = 0; i < (summonerNames.length); i++) { <BUGS> summonerNames[i] = net.rithms.util.RiotApiUtil.normalizeSummonerName(platform, summonerNames[i]); <BUGE> } return summonerNames; } 
protected java.lang.String doInBackground(java.lang.String... args) { <BUGS> android.util.Log.d("DEL", ("DELMEX2=" + (meeting.getName()))); <BUGE> java.util.List<org.apache.http.NameValuePair> params = new java.util.ArrayList<>(); params.add(new org.apache.http.message.BasicNameValuePair(Resources.TAG_MEETING_NAME, meeting.getName())); jsonParser.makeHttpRequest(url_delete_meeting, "POST", params); return null; } 
@java.lang.Override public void onDataChange(com.google.firebase.database.DataSnapshot dataSnapshot) { if (bundleExtra != null) { <BUGS> if ((user) != null) { <BUGE> artRated = ((java.util.HashMap<java.lang.String, java.lang.String>) (dataSnapshot.child("Users").child(user.getDisplayName()).child("rated").getValue())); updateRatingView(); addClickListeners(); } } } 
@java.lang.Override public void onResult(com.google.android.gms.plus.People.LoadPeopleResult peopleData) { if ((peopleData.getStatus().getStatusCode()) == (com.google.android.gms.common.api.CommonStatusCodes.SUCCESS)) { com.google.android.gms.plus.model.people.PersonBuffer personBuffer = peopleData.getPersonBuffer(); try { int count = personBuffer.getCount(); <BUGS> for (int i = 0; i < count; i++) { } <BUGE> } finally { personBuffer.close(); } <BUGS> }else { <BUGE> } } 
private void setUpLocationRequest() { mLocationRequest = new com.google.android.gms.location.LocationRequest(); mLocationRequest.setInterval(java.util.concurrent.TimeUnit.SECONDS.toMillis(java.lang.Integer.parseInt(android.support.v7.preference.PreferenceManager.getDefaultSharedPreferences(mContext).getString(mContext.getString(R.string.pref_key_measure_interval), mContext.getString(R.string.pref_key_measure_interval_def))))); <BUGS> mLocationRequest.setFastestInterval(((mLocationRequest.getInterval()) / 2)); <BUGE> mLocationRequest.setPriority(LocationRequest.PRIORITY_HIGH_ACCURACY); } 
private void updateLifelinesPosition() { java.util.Iterator<uml.sequencediagram.Lifeline> it = lifelines.iterator(); <BUGS> <BUGE> while (it.hasNext()) { ((uml.sequencediagram.Lifeline) (it.next())).setCurrentPosition(currentTimePosition); } <BUGS> (currentTimePosition)++; <BUGE> } 
@java.lang.Override protected void init() { cd4017be.lib.BlockItemRegistry.registerItemStack(new net.minecraft.item.ItemStack(this, 1, cd4017be.circuits.block.BlockRSPipe1.ID_Transport), "rsp1bitN"); <BUGS> cd4017be.lib.BlockItemRegistry.registerItemStack(new net.minecraft.item.ItemStack(this, 1, cd4017be.circuits.block.BlockRSPipe1.ID_Extraction), "rsp1bitI"); cd4017be.lib.BlockItemRegistry.registerItemStack(new net.minecraft.item.ItemStack(this, 1, cd4017be.circuits.block.BlockRSPipe1.ID_Injection), "rsp1bitO"); <BUGE> } 
<BUGS> private jacoco.report.internal.html.parse.ParseItem setValues(java.lang.Number n) { <BUGE> java.util.Map<java.lang.String, java.lang.Number> m = new java.util.HashMap<java.lang.String, java.lang.Number>(); for (org.jacoco.core.analysis.ICoverageNode.CounterEntity ce : _default_headers) { m.put(ce.name().toLowerCase(), n); } <BUGS> return setValues(m); <BUGE> } 
public void actionPerformed(java.awt.event.ActionEvent arg0) { if (isPlaying) { audio.stop(); isPlaying = false; <BUGS> button.setText("Pause"); <BUGE> }else { audio.play(); isPlaying = true; <BUGS> button.setText("Play"); <BUGE> } } 
private void addMPButtonActionPerformed(java.awt.event.ActionEvent evt) { es.upc.fib.prop.usParlament.presentation.State st = ((es.upc.fib.prop.usParlament.presentation.State) (stateComboBox.getSelectedItem())); <BUGS> <BUGE> java.lang.Integer dt = java.lang.Integer.parseInt(((java.lang.String) (districtComboBox.getSelectedItem()))); pc.addMPToCommunity(cNumb, st, dt); pops.updateMPsInCommunityTable(); updateBoxes(); } 
@java.lang.Override public void tickPrice(int orderId, int field, double price, int canAutoExecute) { <BUGS> java.lang.System.out.println(((((("Ticker ID " + orderId) + " FIELD ") + field) + " PRICE ") + price)); <BUGE> if (((TickType.BID) == field) || ((TickType.ASK) == field)) java.lang.System.out.println(((((("Ticker ID " + orderId) + " FIELD ") + field) + " PRICE ") + price));  } 
@org.junit.Before public void setUp() throws java.io.IOException { subTasks = new java.util.ArrayList<>(); org.apache.commons.io.FileUtils.forceMkdir(new java.io.File(PATH_DOWNLOADED)); mediaStorageClient = new eu.europeana.harvester.db.filesystem.FileSystemMediaStorageClientImpl(PATH_DOWNLOADED); <BUGS> slaveProcessor = new eu.europeana.harvester.cluster.slave.processing.SlaveProcessor(new eu.europeana.harvester.cluster.slave.processing.metainfo.MediaMetaInfoExtractor(PATH_COLORMAP), new eu.europeana.harvester.cluster.slave.processing.thumbnail.ThumbnailGenerator(PATH_COLORMAP), new eu.europeana.harvester.cluster.slave.processing.color.ColorExtractor(PATH_COLORMAP), mediaStorageClient, loggingAdapter); <BUGE> taskDocumentReference = new eu.europeana.harvester.cluster.slave.processing.ProcessingJobTaskDocumentReference(DocumentReferenceTaskType.UNCONDITIONAL_DOWNLOAD, "source-reference-1", subTasks); } 
public android.support.v4.content.Loader<java.util.ArrayList<gov.wa.wsdot.android.wsdot.shared.AmtrakCascadesServiceItem>> onCreateLoader(int id, android.os.Bundle args) { <BUGS> if (gov.wa.wsdot.android.wsdot.ui.amtrakcascades.AmtrakCascadesSchedulesDetailsFragment.toLocation.equalsIgnoreCase("N/A")) { <BUGE> return new gov.wa.wsdot.android.wsdot.ui.amtrakcascades.AmtrakCascadesSchedulesDetailsFragment.DepartingTrainsLoader(getActivity()); <BUGS> }else if (gov.wa.wsdot.android.wsdot.ui.amtrakcascades.AmtrakCascadesSchedulesDetailsFragment.fromLocation.equalsIgnoreCase(gov.wa.wsdot.android.wsdot.ui.amtrakcascades.AmtrakCascadesSchedulesDetailsFragment.toLocation)) { gov.wa.wsdot.android.wsdot.ui.amtrakcascades.AmtrakCascadesSchedulesDetailsFragment.toLocation = "N/A"; return new gov.wa.wsdot.android.wsdot.ui.amtrakcascades.AmtrakCascadesSchedulesDetailsFragment.DepartingTrainsLoader(getActivity()); }else { return new gov.wa.wsdot.android.wsdot.ui.amtrakcascades.AmtrakCascadesSchedulesDetailsFragment.DepartingArrivingTrainsLoader(getActivity()); }  <BUGE> } 
private static int getMinMatchingLabel(LabeledNeighbor[] neighbors, byte currentColorValue) { int minMatchingLabel = java.lang.Integer.MAX_VALUE; for (LabeledNeighbor neighbor : neighbors) { int label = neighbor.getLabel(); <BUGS> if ((label > 0) && (label < minMatchingLabel)) { <BUGE> minMatchingLabel = label; } } if (minMatchingLabel != (java.lang.Integer.MAX_VALUE)) { return minMatchingLabel; }else { return 0; } } 
@java.lang.Override public void setName(@solutions.digamma.damas.inspection.NotNull java.lang.String value) throws solutions.digamma.damas.DocumentException { try { <BUGS> java.lang.String destination = java.net.URI.create(this.node.getParent().getPath()).resolve(value).getPath(); <BUGE> this.move(destination); } catch (javax.jcr.RepositoryException e) { throw solutions.digamma.damas.jcr.error.JcrExceptionMapper.map(e); } } 
public void run() { byte[] buffer = new byte[1024]; int bytes; while (true) { try { bytes = mmInStream.read(buffer); mHandler.obtainMessage(3, bytes, (-1), buffer).sendToTarget(); } catch (java.io.IOException e) { <BUGS> android.widget.Toast.makeText(getApplicationContext(), "Error", Toast.LENGTH_SHORT).show(); <BUGE> } } } 
public synchronized void releaseAllLocks(simpledb.TransactionId tid, boolean commit) throws java.io.IOException { java.util.HashSet<simpledb.PageId> pids = this.getAllPagesByTid(tid); <BUGS> <BUGE> java.util.HashSet<simpledb.PageId> cloneSet = ((java.util.HashSet<simpledb.PageId>) (pids.clone())); for (simpledb.PageId pid : cloneSet) { this.releaseLock(tid, pid); } } 
@java.lang.Override protected void onDestroy() { super.onDestroy(); <BUGS> <BUGE> for (int i = 0; i < (mReceivedPermissions.length); i++) { java.lang.String permission = mReceivedPermissions[i]; int result = mReceivedPermissionsResults[i]; io.jasonatwood.permissionmanager.PermissionManager.onPermissionResponse(permission, result); } } 
<BUGS> public static void setPollution(double newPollution, net.minecraft.world.World world, net.minecraft.util.math.BlockPos chunkPos) { <BUGE> if ((newPollution < (PollutionDataValue.minPollutionLevel)) || (newPollution > (PollutionDataValue.maxPollutionLevel))) { return ; }else { miguknamja.pollution.data.PollutionDataValue value = new miguknamja.pollution.data.PollutionDataValue(newPollution); miguknamja.pollution.ChunkKey key = miguknamja.pollution.ChunkKey.getKey(world, chunkPos); miguknamja.pollution.data.PollutionWorldData instance = miguknamja.pollution.data.PollutionWorldData.get(world); instance.hashMap.put(key, value); instance.markDirty(); } } 
<BUGS> private static org.pentaho.agilebi.modeler.LogicalColumn findCorrespondingOlapColumn(org.pentaho.agilebi.modeler.LogicalColumn relationalColumn, org.pentaho.agilebi.modeler.LogicalModel olapModel) { <BUGE> org.pentaho.agilebi.modeler.LogicalTable olapTable = org.pentaho.agilebi.modeler.ModelerConversionUtil.findCorrespondingOlapTable(relationalColumn.getLogicalTable(), olapModel); if (olapTable != null) { for (org.pentaho.agilebi.modeler.LogicalColumn col : olapTable.getLogicalColumns()) { if (col.getPhysicalColumn().getId().equals(relationalColumn.getPhysicalColumn().getId())) { return col; } } } return null; } 
@java.lang.Override public void execute() throws org.apache.maven.plugin.MojoExecutionException, org.apache.maven.plugin.MojoFailureException { if ((source) == null) { throw new org.apache.maven.plugin.MojoFailureException(this, "The source is null", ""); } if ((target) == null) { throw new org.apache.maven.plugin.MojoFailureException(this, "The target is null!", ("The target path for the " + "module-fragment.xml is null. Please provide a target path.")); } <BUGS> com.github.zaplatynski.firstspirit.modules.fsm.velocity.ModuleXmlParser parser = new com.github.zaplatynski.firstspirit.modules.fsm.velocity.ModuleXmlParser(source, target, project, getLog()); <BUGE> parser.parseModuleVm(); } 
private void removePlayer(model.Address playerAddress) { theMaze.removePlayer(playerAddress.getKey()); playersInGame.remove(playerAddress); try { tracker.deleteNode(playerAddress); <BUGS> tracker.updateNodesList(playersInGame); <BUGE> } catch (java.rmi.RemoteException e) { e.printStackTrace(); java.lang.System.out.println("Tracker has stopped working"); java.lang.System.exit(0); } if (backUpServer.sameAs(playerAddress)) { backUpServer = playersInGame.get(1); } updateBackUpServer(); gameWindow.updateGame(theMaze); } 
@org.junit.Test public void fullConfig() throws java.lang.Exception { dir = testDir("fullConfig"); <BUGS> new com.github.zhongl.ipage.KVEngineBuilder(new java.io.File(".")).backlog(10).initialBucketSize(256).chunkCapacity(4096).flushByCount(5).flushByElapseMilliseconds(500L).build(); <BUGE> } 
private void generateJava() throws io.konig.gae.datastore.CodeGeneratorException, java.io.IOException { if ((java) != null) { if ((java.getJavaDir()) == null) { throw new io.konig.gae.datastore.CodeGeneratorException("javaCodeGenerator.javaDir must be defined"); } java.getJavaDir().mkdirs(); if (java.isGenerateCanonicalJsonReaders()) { generateCanonicalJsonReaders(); } <BUGS> generateJavaCode(structure); <BUGE> } } 
public java.lang.String toString() { <BUGS> return ((((((((((((((("Term: " + (term)) + " ") + "Frequency: ") + (freq)) + " ") + "Weight: ") + (weight)) + " ") + "TotalCount: ") + (totalCount)) + " ") + "Df: ") + (df)) + " ") + "Tf: ") + (termFreq); <BUGE> } 
@org.junit.Test public void getAnswerTest() { <BUGS> <BUGE> com.github.solairerove.woodstock.domain.Question savedQuestion = com.github.solairerove.woodstock.utils.QuestionGenerator.generateQuestion(); <BUGS> <BUGE> java.lang.Long questionId = questionRepository.save(savedQuestion).getId(); <BUGS> com.github.solairerove.woodstock.domain.Answer savedAnswer = com.github.solairerove.woodstock.utils.AnswerGenerator.generateAnswer(); questionRepository.findOne(questionId).getAnswers().add(savedAnswer); <BUGE> java.lang.Long answerId = savedAnswer.getId(); org.junit.Assert.assertEquals(savedAnswer, answerService.get(questionId, answerId)); } 
@org.junit.Test public void testAcceptHeaderLocale3() throws java.lang.Exception { <BUGS> mockMvc.perform(org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get("/index.page").locale(java.util.Locale.forLanguageTag("en-US")).header("Accept-Language", "en-US, en-GB, en")).andExpect(org.springframework.test.web.servlet.result.MockMvcResultMatchers.status().isOk()).andExpect(org.springframework.test.web.servlet.result.MockMvcResultMatchers.content().string(org.hamcrest.core.StringContains.containsString("Welcome"))); <BUGE> } 
@java.lang.Override public java.lang.String _stringValue(final msi.gama.runtime.IScope scope) throws msi.gama.runtime.exceptions.GamaRuntimeException { getContents(scope); final java.lang.StringBuilder sb = new java.lang.StringBuilder(((getBuffer().length(scope)) * 200)); <BUGS> for (final msi.gama.util.IList<?> s : getBuffer().iterable(scope)) { <BUGE> sb.append(s).append("\n"); } sb.setLength(((sb.length()) - 1)); return sb.toString(); } 
@java.lang.Override public void run() { java.lang.String s = ""; if (type == (com.mobvoi.android.gesture.GestureType.TYPE_TWICE_TURN_WRIST)) { s = "turn wrist twice"; new com.theteamgo.fancywatch.MainActivity.StartGestureMessageTask().execute(Constant.CONTROL_TYPE_NEXT); }else if (type == (com.mobvoi.android.gesture.GestureType.TYPE_TURN_WRIST_UP)) { s = "turn wrist up"; }else if (type == (com.mobvoi.android.gesture.GestureType.TYPE_TURN_WRIST_DOWN)) { s = "turn wrist down"; }else { s = "unknown gesture"; }   <BUGS> android.widget.Toast.makeText(getApplicationContext(), ("onGestureDetected " + s), Toast.LENGTH_SHORT).show(); <BUGE> } 
@org.junit.Test public void testEnabledFilterClearsFlow() throws java.lang.Exception { <BUGS> io.reactivex.observers.TestObserver<com.github.e13mort.stf.model.device.Device> testObserver = io.reactivex.Observable.fromArray(getMock(true, true), getMock(true, false), getMock(false, true), getMock(false, false)).filter(new com.github.e13mort.stf.adapter.filters.AvailabilityPredicate(true)).test(); <BUGE> testObserver.assertValueCount(1); } 
@com.inva.hipstertest.freemarker.controllers.RequestMapping(value = "/freemarker/teacher/schedule/forms-wp", method = RequestMethod.POST) @com.inva.hipstertest.freemarker.controllers.ResponseBody public java.util.List<com.inva.hipstertest.service.dto.FormDTO> getAvailableFormsBySearchCriteria(@com.inva.hipstertest.freemarker.controllers.RequestBody com.inva.hipstertest.freemarker.searchcriteria.SearchCriteria searchCriteria) { <BUGS> log.debug("Create Ajax request to search available forms by search criteria"); <BUGE> org.apache.commons.lang3.Validate.notNull(searchCriteria.getLessonPosition(), "Field 'lessonPosition' on formSearchCriteria can not be null."); org.apache.commons.lang3.Validate.notNull(searchCriteria.getDate(), "Field 'Date' on  formSearchCriteria can not be null."); if ((searchCriteria.getId()) != null) { return formService.findAllAvailablePlusOneById(searchCriteria); } return formService.findAvailableFormsByCurrentSchoolAndSearchCriteria(searchCriteria); } 
@java.lang.Override public r48.RubyIO targetToBound(r48.RubyIO target) { long t = target.fixnumVal; long type = 0; <BUGS> if (t > 10000) { <BUGE> t -= 10000; type++; } r48.RubyIO base = new r48.RubyIO(); base.arrVal = new r48.RubyIO[2]; base.type = '['; base.arrVal[0] = new r48.RubyIO().setFX(type); base.arrVal[1] = new r48.RubyIO().setFX(t); return base; } 
@org.junit.Test public void testEndPositionWithWhiteWordAndWithoutEndPeriod() { java.util.regex.Pattern pattern = java.util.regex.Pattern.compile("\\."); java.lang.String str = "He is Mr. United States"; java.util.List<java.lang.String> whiteList = cc.redpen.util.EndOfSentenceDetectorTest.generateUmList("Mr."); cc.redpen.util.EndOfSentenceDetector detector = new cc.redpen.util.EndOfSentenceDetector(pattern, whiteList); <BUGS> org.junit.Assert.assertEquals((-1), detector.getSentenceEndPosition(str)); <BUGE> } 
private boolean createBridges(org.onosproject.netvirt.configuration.Node node, org.onosproject.net.Network network) throws java.lang.Exception { org.onosproject.ovsdb.providers.Status status; java.lang.String brInt = org.onosproject.ovsdb.providers.constant.ConfigurationConstants.INTEGRATION_BRIDGE; status = this.addBridge(node, brInt, null, null); if (!(status.isSuccess())) { <BUGS> org.onosproject.ovsdb.providers.impl.CfgAdapterProviderImpl.LOG.debug("{} Bridge Creation Status: {}", brInt, status); <BUGE> return false; } <BUGS> org.onosproject.ovsdb.providers.impl.CfgAdapterProviderImpl.LOG.debug("createNetNetwork: node: {}, status: success", node); <BUGE> return true; } 
private void sendNextPacket() { Packet toSend = new Packet(packetArrayList.get(nextSeqNum)); java.lang.System.out.println(("SENDER GBN SENDING:     " + (toSend.toString()))); nl.sendPacket(toSend, to); if ((base) == (nextSeqNum)) { <BUGS> tl.stopTimer(me); <BUGE> tl.startTimer(timeOut, me); } (numTransmissions)++; (nextSeqNum)++; } 
@java.lang.Override public void run() { java.lang.System.out.println(("Start Execution " + (machineExecution.getId()))); try { uniandes.unacloud.agent.execution.domain.ImageCopy image = uniandes.unacloud.agent.execution.ImageCacheManager.getFreeImageCopy(machineExecution, transmissionType); machineExecution.setImage(image); image.configureAndStart(machineExecution); java.lang.System.out.println("endStartExecution"); <BUGS> } catch (uniandes.unacloud.agent.exceptions.ExecutionException ex) { <BUGE> try { uniandes.unacloud.agent.net.send.ServerMessageSender.reportExecutionState(machineExecution.getId(), ExecutionProcessEnum.FAIL, ex.getMessage()); } catch (java.lang.Exception e) { e.printStackTrace(); } } } 
public static void main(java.lang.String[] args) { java.util.Scanner scanIn = new java.util.Scanner(java.lang.System.in); <BUGS> int n; <BUGE> java.lang.System.out.print("Nhap so n: "); n = scanIn.nextInt(); java.lang.System.out.print(((("Tong cac so chan nho hon " + n) + " la:") + (tinhtongdemo.TinhTongDemo.TinhTong(n)))); } 
@java.lang.Override public void call(java.lang.Object... objects) { java.lang.System.out.println(objects[0]); org.cubecorp.hexicube.joustybet.scoreboard.StateAdapter sa = new org.cubecorp.hexicube.joustybet.scoreboard.StateAdapter(((java.lang.String) (objects[0]))); org.cubecorp.hexicube.joustybet.scoreboard.Game.betters = sa.getBetters(); org.cubecorp.hexicube.joustybet.scoreboard.Game.roundActive = sa.isRoundActive(); org.cubecorp.hexicube.joustybet.scoreboard.Game.lastWinner = sa.getLastWinner(); <BUGS> org.cubecorp.hexicube.joustybet.scoreboard.Game.needsRendering = true; <BUGE> } 
<BUGS> private void deployProcess() throws java.io.IOException, java.security.NoSuchAlgorithmException { java.lang.String processDefinitionKey = "liquidPoc"; java.lang.String definitionClasspath = "processes/liquid.consignment.1.bpmn20.xml"; <BUGE> org.activiti.engine.RepositoryService repositoryService = processEngine.getRepositoryService(); org.activiti.engine.repository.ProcessDefinition processDefinition = repositoryService.createProcessDefinitionQuery().processDefinitionKey(processDefinitionKey).latestVersion().singleResult(); if (null == processDefinition) repositoryService.createDeployment().addClasspathResource(definitionClasspath).deploy();  } 
public static void dispalyTotal(boolean special) { try { java.io.FileReader fr = new java.io.FileReader("customerBill.txt"); java.io.BufferedReader br = new java.io.BufferedReader(fr); java.lang.String line; while ((line = br.readLine()) != null) { java.lang.System.out.println(line); <BUGS> fr.close(); <BUGE> } <BUGS> <BUGE> } catch (java.io.IOException e) { e.printStackTrace(); } } 
private java.util.List<de.grau.organizer.classes.Notes> filterNotes() { java.util.List<de.grau.organizer.classes.Notes> retNotes = new java.util.ArrayList<de.grau.organizer.classes.Notes>(); for (android.widget.EditText et_note : layout_notelist) { <BUGS> if (et_note.getText().toString().isEmpty()) <BUGE> continue;  de.grau.organizer.classes.Notes curNote = new de.grau.organizer.classes.Notes(); curNote.setText(et_note.getText().toString()); retNotes.add(curNote); } return retNotes; } 
java.util.Set<java.lang.String> getVocabularyCodes(java.net.URL url, org.obiba.opal.core.service.validation.VocabularyImporter importer) throws java.io.IOException, java.security.GeneralSecurityException { <BUGS> if ((url.getProtocol()) == "https") { <BUGE> return getVocabularyCodesHttps(url, importer); }else { try (java.io.InputStream in = url.openStream()) { return importer.getCodes(in); } } } 
<BUGS> <BUGE> public void onLoaded(com.solid.ad.Ad ad) { <BUGS> com.solid.news.util.L.i("getfirst ad  onLoaded"); <BUGE> com.solid.news.logic.NewsCacheMgr.firstAd = ad; this.isLoadADing = false; com.solid.news.sdk.NewsSdk.getInstance().getReportListener().sendEvent("news_lista_show_facebook_native_ad", "status", java.lang.Long.valueOf((cached ? 1L : 2L))); } 
public void update(float deltaTime) { this.levelController.update(deltaTime); this.frogManager.update(deltaTime); if ((this.hud.getLifeCounter().getLife()) <= 0) { game.setScreen(new com.mygdx.game.screens.GameOverScreen(this.game)); com.mygdx.game.sprites.SpritesDrawer.getInstance().removeAllSprites(); Gdx.input.setInputProcessor(null); <BUGS> this.hud.reset(); <BUGE> } } 
public boolean isDeflated() { for (java.util.Map.Entry<java.lang.String, java.util.List<java.lang.String>> entry : this.entrySet()) { java.lang.String key = entry.getKey(); <BUGS> <BUGE> for (java.lang.String value : entry.getValue()) { if ((key.equalsIgnoreCase("content-type")) && (value.toLowerCase().contains("application/x-deflate"))) { return true; } } } return false; } 
@java.lang.Override public void onGreenChange(final int greenValue) { runOnUiThread(new java.lang.Runnable() { @java.lang.Override public void run() { if ((mGreenSeekBar) != null) { mGreenSeekBar.setProgress((greenValue & 255)); <BUGS> if (colorDemo) { greenFlag = true; }else if (!(mGreenSeekBar.isEnabled())) { mGreenSeekBar.setEnabled(true); }  <BUGE> } } }); } 
public void buildQuad(int index, com.nucleus.shader.ShaderProgram program, com.nucleus.vecmath.Rectangle rectangle) { int vertexStride = program.getVertexStride(); float[] quadPositions = com.nucleus.geometry.MeshBuilder.createQuadPositionsIndexed(rectangle, vertexStride, 0); com.nucleus.geometry.MeshBuilder.buildQuad(this, program, index, quadPositions); <BUGS> prepareUV(mapper, 1); <BUGE> } 
public static synchronized com.android.dialer.calllog.DefaultVoicemailNotifier getInstance(android.content.Context context) { if ((com.android.dialer.calllog.DefaultVoicemailNotifier.sInstance) == null) { android.app.NotificationManager notificationManager = ((android.app.NotificationManager) (context.getSystemService(Context.NOTIFICATION_SERVICE))); android.content.ContentResolver contentResolver = context.getContentResolver(); <BUGS> com.android.dialer.calllog.DefaultVoicemailNotifier.sInstance = new com.android.dialer.calllog.DefaultVoicemailNotifier(context, notificationManager, com.android.dialer.calllog.DefaultVoicemailNotifier.createNewCallsQuery(contentResolver), com.android.dialer.calllog.DefaultVoicemailNotifier.createNameLookupQuery(contentResolver)); <BUGE> } return com.android.dialer.calllog.DefaultVoicemailNotifier.sInstance; } 
@java.lang.Override public java.util.List<java.lang.Class<? extends org.adligo.tests4j.system.shared.trials.I_Trial>> getTrials() { java.util.List<java.lang.Class<? extends org.adligo.tests4j.system.shared.trials.I_Trial>> trials = new java.util.ArrayList<java.lang.Class<? extends org.adligo.tests4j.system.shared.trials.I_Trial>>(); <BUGS> trials.add(org.adligo.fabricate_tests.FabPackagesTrial.class); trials.add(org.adligo.fabricate_tests.FabricateSetupTrial.class); <BUGE> trials.addAll(new org.adligo.fabricate_tests.common.A_CommonPkgTrials().getTrials()); trials.addAll(new org.adligo.fabricate_tests.files.A_FilesTrials().getTrials()); <BUGS> <BUGE> return trials; } 
public void add(int index, double element) { <BUGS> boundsCheck(index); enlageIfNeeded(1); java.lang.System.arraycopy(array, index, array, (index + 1), ((size()) - index)); set(index, element); increasedSize(1); <BUGE> } 
@java.lang.Override protected java.util.Map<java.lang.String, java.lang.String> getParams() throws com.android.volley.AuthFailureError { java.util.Map<java.lang.String, java.lang.String> params = new java.util.HashMap<>(); params.put("writing_no", writing_no_param); params.put("content", Reply_Content); params.put("email", shared_email); <BUGS> params.put("cur_date", cur_date); <BUGE> return params; } 
public void setEndTime(java.time.LocalTime end_time2) { if (end_time2 == null) { java.time.LocalTime localtime = java.time.LocalTime.MAX; end_time_string = ""; <BUGS> <BUGE> }else { end_time_string = end_time2.format(seedu.ticktask.model.task.DueTime.TIME_FORMAT).toString(); end_time = end_time2; if ((end_time) != null) { value = ((getStartTime()) + " - ") + (getEndTime()); }else { value = getStartTime(); } } } 
final synchronized void setResponse(com.basho.riak.client.core.RiakMessage rawResponse) { stateCheck(com.basho.riak.client.core.FutureOperation.State.CREATED, com.basho.riak.client.core.FutureOperation.State.WRITTEN, com.basho.riak.client.core.FutureOperation.State.RETRY); U decodedMessage = decode(rawResponse); this.rawResponse.add(decodedMessage); exception = null; if (done(decodedMessage)) { (remainingTries)--; if ((retrier) != null) { retrier.operationComplete(this, remainingTries); } <BUGS> fireListeners(); <BUGE> state = com.basho.riak.client.core.FutureOperation.State.COMPLETE; latch.countDown(); <BUGS> <BUGE> } } 
public void replaceValue(T newValue, int index) { if (!(indexCheck(index))) return ;  linkedList.Node<T> currentNode = this.start; <BUGS> for (int i = 0; i < 2; i++) { <BUGE> currentNode = currentNode.getTail(); } currentNode.setHead(newValue); } 
public void loadConfiguration() { if (!(getConfig().contains(".GoodGames"))) { logger.info("Config not found! Creating config."); getConfig().addDefault(".GoodGames.Guess the Number.Highest Number", 50); getConfig().addDefault(".GoodGames.Guess the Number.Number of tries", 52); <BUGS> <BUGE> getConfig().options().copyDefaults(true); saveConfig(); } } 
<BUGS> public void showFrame() { <BUGE> javax.swing.JFrame frame = new javax.swing.JFrame("MainUI"); frame.setContentPane(new MainUI().main_panel); frame.setPreferredSize(new java.awt.Dimension(720, 500)); frame.setDefaultCloseOperation(javax.swing.JFrame.EXIT_ON_CLOSE); frame.pack(); new MainUI.MenuUI().showMenu(frame); frame.setResizable(false); frame.setVisible(true); } 
<BUGS> public void sendPartCommand(org.ukiuni.irc4j.server.ClientConnection partConnection) throws java.io.IOException { <BUGE> java.util.List<org.ukiuni.irc4j.server.ClientConnection> sendClients = new java.util.ArrayList<org.ukiuni.irc4j.server.ClientConnection>(joinedConnectionList); for (org.ukiuni.irc4j.server.ClientConnection clientConnection : sendClients) { try { clientConnection.sendPartCommand(partConnection, this); } catch (java.lang.Exception e) { ircServer.removeConnection(clientConnection.getNickName()); org.ukiuni.irc4j.Log.log(e); } } } 
public static void main(java.lang.String[] args) { com.dreamproduction.tests.LsaTest.data = new java.util.ArrayList<>(); com.dreamproduction.tests.LsaTest.data.add("привет"); com.dreamproduction.tests.LsaTest.data.add("привет"); com.dreamproduction.lsa.LSA lsa = null; try { <BUGS> lsa = new com.dreamproduction.lsa.LSA(com.dreamproduction.tests.LsaTest.data, 2); <BUGE> } catch (com.dreamproduction.lsa.WrongDimensionException e) { e.printStackTrace(); } java.lang.System.out.println(lsa.getWordsResultMap()); } 
public static void learn(org.bukkit.entity.Player player, java.lang.String text, java.lang.Object... args) { <BUGS> if (((player != null) && (!(one.lindegaard.MobHunting.compatibility.CitizensCompat.isNPC(player)))) && (one.lindegaard.MobHunting.MobHunting.getPlayerSettingsmanager().getPlayerSettings(player).isLearningMode())) <BUGE> one.lindegaard.MobHunting.Messages.playerBossbarMessage(player, text, args);  } 
<BUGS> private void setEventLatestState(final java.lang.Long revision, final java.lang.String message) { <BUGE> redis.clients.jedis.Jedis jedi = pool.getResource(); java.lang.String key = getEventLatestStateKey(); java.util.HashMap<java.lang.String, java.lang.String> state = new java.util.HashMap<>(); state.put("revision", java.lang.Long.toString(revision)); jedi.hmset(key, state); } 
public static void main(java.lang.String[] args) { <BUGS> java.util.List<Coordinate<java.lang.Double>> test = MercatorMapping.MM(args[0], true); <BUGE> java.lang.System.out.println(((">> The mapped data has " + (test.size())) + " entries.")); java.lang.System.out.println(">> The mapped data has COM: "); java.lang.System.out.println(List_ops.getCOM(test)); java.lang.System.out.println(">> The mapped data contains:"); List_ops.print_coordlist_double(test); } 
private java.lang.annotation.Annotation[] merge(java.lang.annotation.Annotation[] annotations, java.lang.annotation.Annotation[] annotations2) { <BUGS> java.util.Set<java.lang.annotation.Annotation> mergedAnnotations = new java.util.HashSet<java.lang.annotation.Annotation>(); <BUGE> mergedAnnotations.addAll(java.util.Arrays.asList(annotations)); mergedAnnotations.addAll(java.util.Arrays.asList(annotations2)); return mergedAnnotations.toArray(new java.lang.annotation.Annotation[0]); } 
@java.lang.Override public boolean hasNext() { if (!(peekingIterator.hasNext())) { return false; } <BUGS> denominator.ultradns.model.DirectionalRecord record = peekingIterator.peek(); if (record.isNoResponseRecord()) { peekingIterator.next(); } return true; <BUGE> } 
<BUGS> private static java.lang.String parseFile(java.lang.String data, java.lang.String fileName, ConfigFileFormat configFileFormat) { <BUGE> java.lang.String convertedConfig = ""; switch (configFileFormat) { case XML : convertedConfig = data; break; case YML : <BUGS> convertedConfig = ConfigUtil2.parseYML(data, fileName); <BUGE> break; case PROPERTIES : convertedConfig = ConfigUtil2.parseProperties(data); break; default : break; } return convertedConfig; } 
<BUGS> public void removeContact(int position) { com.addressbook.thorrism.addressbook.Contact contact = mContacts.get(position); <BUGE> mBook.removeEntry(position); mContactHeaders.remove(position); mBook.saveEventually(); contact.deleteInBackground(new com.parse.DeleteCallback() { @java.lang.Override public void done(com.parse.ParseException e) { if (e == null) { createToast("Deleted Contact"); }else { e.printStackTrace(); createToast("Failed to delete."); } } }); displayList(); } 
private void exitGame(edu.chalmers.vaporwave.model.menu.MenuState destinationMenu) { this.gameMusic.stopSound(); this.arenaModel.getArenaMovables().clear(); this.arenaModel.clearTiles(); this.enemies.clear(); this.deadEnemies.clear(); edu.chalmers.vaporwave.event.GameEventBus.getInstance().post(new edu.chalmers.vaporwave.event.ExitToMenuEvent(destinationMenu, this.players, this.gameType)); <BUGS> for (edu.chalmers.vaporwave.model.Player player : this.players) { player.resetPlayerGameStats(); } <BUGE> } 
@java.lang.Override protected void publishResults(java.lang.CharSequence constraint, com.alex.develop.adapter.FilterResults results) { <BUGS> android.util.Log.d("Select", ((constraint + ", ") + (results.count))); <BUGE> stocks = ((java.util.List<com.alex.develop.adapter.Stock>) (results.values)); if (0 < (results.count)) { notifyDataSetChanged(); }else { notifyDataSetInvalidated(); } mListener.find(results.count); } 
public void calculateFragLen() { java.util.Collections.sort(getPosTags()); for (int posValue : getPosTags()) { java.util.Set<java.lang.Integer> subList = getNegTags().subSet(posValue, (posValue + 5000)); for (int negValue : subList) { <BUGS> int fragLen = negValue - posValue; if ((fragLen > 0) && (fragLen <= 2000)) { (getCounts()[(fragLen - 1)])++; <BUGE> } } } } 
@java.lang.Override public void run() { mUpdate.update(this, new com.joylabs.mclubtracker.transactions.updateposition.UpdateListerner() { @java.lang.Override public void onCompleted(boolean succeed) { if ((mHandler) != null) { <BUGS> if (com.joylabs.mclubtracker.transactions.user.UserInfo.getInstance().getPostPostion()) { mHandler.postDelayed(mRunnable, ((com.joylabs.mclubtracker.transactions.user.UserInfo.getInstance().getPostinterval()) * 1000)); } <BUGE> } } }, false); } 
protected void addTurretAngle(float deltaTurretAngle, int delta) { float cleanDeltaTurret = kylevedder.com.github.utils.Utils.wrapAngleDelta(deltaTurretAngle); <BUGS> float turretRateCap = (delta > 0) ? (this.TURRET_TURN_RATE) / (1000 / delta) : 0; <BUGE> this.turretAngle = kylevedder.com.github.utils.Utils.wrapAngle(this.turretAngle, kylevedder.com.github.utils.Utils.clampFloat(cleanDeltaTurret, (-turretRateCap), turretRateCap)); } 
@java.lang.Override public java.lang.String save(com.sia.main.domain.SatManMK satManMK) { if ((satManMK.getIdSatManMK()) != null) { <BUGS> <BUGE> satManMKRepo.update(satManMK); return satManMK.getIdSatManMK().toString(); }else { return satManMKRepo.insert(satManMK).toString(); } } 
public static void main(java.lang.String[] args) { double inches; double meters; <BUGS> <BUGE> counter = 0; <BUGS> for (inches = 1; inches <= 144; inches++) <BUGE> meters = inches / 39.37; <BUGS>  java.lang.System.out.println((((inches + "inches is ") + meters) + "meters.")); (counter)++; if ((counter) == 12) { java.lang.System.out.println(); counter = 0; <BUGE> } } 
@org.springframework.context.annotation.Bean public org.springframework.scheduling.quartz.SchedulerFactoryBean schedulerFactoryBean(javax.sql.DataSource dataSource, org.quartz.spi.JobFactory jobFactory, @org.springframework.beans.factory.annotation.Qualifier(value = "sampleJobTrigger") org.quartz.Trigger sampleJobTrigger) throws java.io.IOException { org.springframework.scheduling.quartz.SchedulerFactoryBean factory = new org.springframework.scheduling.quartz.SchedulerFactoryBean(); factory.setOverwriteExistingJobs(true); factory.setDataSource(dataSource); factory.setJobFactory(jobFactory); factory.setQuartzProperties(quartzProperties()); <BUGS> factory.setTriggers(sampleJobTrigger); <BUGE> return factory; } 
private void matchLookAhead(core.Token token) throws parser.ParseException { if ((lookahead) != token) { <BUGS> throw new parser.ParseException(java.lang.String.format("Parse error on line %s, col %s. Found %s, expected %s.", dispatcher.getLine(), dispatcher.getColumn(), dispatcher.getToken(), token)); <BUGE> } lookahead = dispatcher.nextToken(); } 
<BUGS> private static void downloadMovieData() { <BUGE> java.lang.String response = null; try { <BUGS> response = andras.com.popularmovies.utils.MovieDataUtils.getResponseFromHttpUrl(andras.com.popularmovies.utils.MovieDataUtils.buildUrl()); <BUGE> } catch (java.io.IOException e) { android.util.Log.e(andras.com.popularmovies.utils.MovieDataUtils.tag, e.getMessage()); return ; } android.util.Log.v(andras.com.popularmovies.utils.MovieDataUtils.tag, response); try { andras.com.popularmovies.utils.MovieDataUtils.parseMovieJSON(response); } catch (org.json.JSONException e) { android.util.Log.e(andras.com.popularmovies.utils.MovieDataUtils.tag, e.getMessage()); } } 
public Common.Message toMessage() { Common.Message listMsg; java.lang.String content = ""; <BUGS> <BUGE> for (Common.User item : this.usersList) { <BUGS> int i = 0; <BUGE> if (i == 0) { content = item.getUsername(); }else { content = (content + " ") + (item.getUsername()); } i++; } listMsg = new Common.Message(content, new Common.User("Server"), MessageType.DATA); return listMsg; } 
@java.lang.Override public void onNavigationEvent(int navigationEvent, android.os.Bundle extras) { super.onNavigationEvent(navigationEvent, extras); <BUGS> if (navigationEvent == (NAVIGATION_FINISHED)) { <BUGE> android.support.customtabs.CustomTabsIntent.Builder builder = new android.support.customtabs.CustomTabsIntent.Builder(session); builder.setToolbarColor(android.support.v4.content.ContextCompat.getColor(activity, R.color.accent)); android.support.customtabs.CustomTabsIntent customTabsIntent = builder.build(); customTabsIntent.launchUrl(activity, android.net.Uri.parse(urls[((index)++)])); } } 
private short getCheckedValue(long address) { <BUGS> if (address >= (handlerBlock.getAddressEnd())) { <BUGE> return 13567; }else { return ((short) ((data.get(((int) (address)))) & 255)); } } 
@java.lang.Override public void handleMessage(android.os.Message message) { if ((message.arg2) == 1) { switch (message.arg1) { case 1 : thread1JobDone = true; break; case 2 : thread2JobDone = true; break; case 3 : thread3JobDone = true; break; } <BUGS> if (((thread1JobDone) && (thread1JobDone)) && (thread1JobDone)) { <BUGE> themeAll.sortIndex(); } adapterAll.notifyDataSetChanged(); } } 
public final void stopLevel() { level.stop(); for (gamelogic.Game.GameObserver o : observers) { o.resetBoard(); } for (gamelogic.Game.GameObserver o : observers) { <BUGS> if (level.checkHassucceeded(score.getScore())) { <BUGE> o.levelscreen(); }else { o.gameoverscreen(); } } } 
public void setReturnDate(long returnDate, android.content.Context context) { this.returnDate = returnDate; if ((returnDate < (loanDate)) && (returnDate != (-1))) { android.util.Log.i(org.bbt.kiakoa.model.Loan.TAG, "return date should not be lower than loan date"); setLoanDate(returnDate, context); } <BUGS> scheduleNotification(context); <BUGE> } 
@java.lang.Override public void run() { <BUGS> final int musicVolume = config.getVolume(); <BUGE> float volume = 1 - ((float) ((java.lang.Math.log(0)) / (java.lang.Math.log(musicVolume)))); mediaPlayer.setVolume(volume, volume); mediaPlayer.start(); } 
protected java.util.ArrayList<java.lang.String> getLabelsFromData() { <BUGS> int size = chartView.data.get(0).size(); <BUGE> java.util.ArrayList<java.lang.String> result = new java.util.ArrayList<java.lang.String>(size); for (int i = 0; i < size; i++) result.add(chartView.data.get(0).getLabel(i));  return result; } 
private synchronized void openNextDeath() { nextElementToDie = sortedElementsSet.first(); timerTask = new java.util.TimerTask() { @java.lang.Override public void run() { killNextElement(); } }; long deathTimeMillis = nextElementToDie.deathTime.toDateTime().getMillis(); long nowMillis = new org.joda.time.LocalDateTime().toDateTime().getMillis(); long delay = java.lang.Math.max(0, (deathTimeMillis - nowMillis)); <BUGS> timer.schedule(timerTask, 5000); <BUGE> } 
public static void playAgain() { java.lang.System.out.println("Do You Want To Give It Another Go?   \n1. Yea, I\'m Game \n2. Nah, Let\'s Try Something Else"); int response = cs1.Keyboard.readInt(); if (response == 1) { CardGame.reset(); CardGame.main(null); }else if (response == 2) { <BUGS> <BUGE> Woo.main(null); }else { java.lang.System.out.println("I don't understand, so I'll ask again"); CardGame.playAgain(); }  } 
@org.junit.Test public void getTotalSequencesIterated() throws java.lang.Exception { randoop.generation.exhaustive.SequenceGenerator<java.lang.String> sgenLarger = new randoop.generation.exhaustive.SequenceGenerator(largerSet); long beforeIterateLarger = sgenLarger.getTotalSequencesIterated().longValue(); int numberOfSequencesToGenerate = 13; for (int i = 0; i < numberOfSequencesToGenerate; i++) { sgenLarger.next(); } org.junit.Assert.assertEquals(0, beforeIterateLarger); <BUGS> org.junit.Assert.assertEquals(numberOfSequencesToGenerate, sgenLarger.getTotalSequencesIterated()); <BUGE> } 
public boolean determineSize(long recordsReadInCurrentPass, java.lang.Integer lengthVarFieldsInCurrentRecord) throws java.io.IOException { <BUGS> boolean doneReading = readPage(); if (doneReading) { <BUGE> return true; } <BUGS> doneReading = processPageData(((int) (recordsReadInCurrentPass))); if (doneReading) { <BUGE> return true; } lengthVarFieldsInCurrentRecord = -1; <BUGS> doneReading = checkVectorCapacityReached(); if (doneReading) { return true; } return false; <BUGE> } 
public boolean updateIndentString(com.hlz.webModel.IndentModel model, java.lang.String reserve, java.lang.String fulfill) { com.hlz.entity.Indent indent = dao.updateIndent(model, reserve, fulfill); if (indent != null) { <BUGS> messaging.convertAndSend("/topic/update", indent); rabbitTemplate.convertAndSend("update-indent", indent); <BUGE> return true; }else { return false; } } 
static boolean cannotDisplay(com.forgerock.opendj.cli.ConsoleApplication app, org.forgerock.opendj.config.PropertyDefinition<?> pd, java.util.Set<java.lang.String> allowedPropertyNames) { <BUGS> return ((pd.hasOption(PropertyOption.HIDDEN)) || ((!(app.isAdvancedMode())) && (pd.hasOption(PropertyOption.ADVANCED)))) || (!(allowedPropertyNames.contains(pd.getName()))); <BUGE> } 
@java.lang.Override public N getNodeAt(int index) { <BUGS> int sourceNodeCount = sourceNodes.size(); if (((sourceNodes) != null) && (index < sourceNodeCount)) { <BUGE> return sourceNodes.get(index); } if ((sinkNodes) != null) { <BUGS> int sinkIndex = ((sourceNodes) == null) ? index : index - sourceNodeCount; <BUGE> return sinkNodes.get(sinkIndex); } throw new java.lang.IndexOutOfBoundsException(); } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); <BUGS> com.plorial.exoroplayer.views.FileExplorerFragment fileExplorerFragment = new com.plorial.exoroplayer.views.FileExplorerFragment(); android.app.FragmentTransaction transaction = getFragmentManager().beginTransaction(); transaction.add(R.id.fragment_container, fileExplorerFragment); transaction.addToBackStack(FileExplorerFragment.CLASS_NAME); transaction.commit(); <BUGE> } 
@org.junit.Test public void testToString() { <BUGS> assertEquals("kg", tec.uom.se.unit.MetricPrefix.KILO(UCUM.GRAM).toString()); <BUGE> assertEquals("lb", UCUM.POUND.toString()); assertEquals("oz", UCUM.OUNCE.toString()); assertEquals("g", UCUM.GRAM.toString()); assertEquals("lb", UCUM.POUND.toString()); } 
private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) { mdHotels = ((javax.swing.table.DefaultTableModel) (jTableHotels.getModel())); if ((jTableHotels.getSelectedRowCount()) == 0) { javax.swing.JOptionPane.showMessageDialog(this, "please select the Hotel to delete"); return ; } java.lang.String HotelName; int TempSelectRow = jTableHotels.getSelectedRow(); HotelName = mdHotels.getValueAt(TempSelectRow, 0).toString(); deleteHotel(HotelName); mdHotels.removeRow(jTableHotels.getSelectedRow()); <BUGS> mdHotels = null; <BUGE> } 
public boolean updateItem(java.lang.String collectionName, com.mongodb.BasicDBObject query, com.mongodb.BasicDBObject newData) { com.mongodb.DBCollection tCol = mongoDB.getCollection(collectionName); newData.put(mx.edu.cide.justiciacotidiana.v1.mongo.MongoInterface.FIELD_CREATED, query.get(mx.edu.cide.justiciacotidiana.v1.mongo.MongoInterface.FIELD_CREATED)); <BUGS> newData.put(mx.edu.cide.justiciacotidiana.v1.mongo.MongoInterface.FIELD_UPDATED, Utils.isoformater.format(new java.util.Date())); <BUGE> newData.remove(mx.edu.cide.justiciacotidiana.v1.mongo.MongoInterface.FIELD_ID); try { tCol.update(query, newData); } catch (com.mongodb.MongoException ex) { return false; } return true; } 
@org.testng.annotations.Test public void testUDFEnoughInput() throws java.lang.Exception { org.apache.pig.data.Tuple tuple = org.apache.pig.data.TupleFactory.getInstance().newTuple(31); for (int i = 0; i < 31; i++) { tuple.set(i, 0); } tuple.set(0, "M"); org.apache.pig.data.DataBag dataBag = instance.exec(tuple); <BUGS> org.testng.Assert.assertEquals(30, dataBag.size()); <BUGE> org.testng.Assert.assertEquals(dataBag.iterator().next().size(), 5); } 
@android.support.annotation.Nullable public static java.lang.String loadJSONFromAsset(@android.support.annotation.NonNull android.content.Context context, @android.support.annotation.NonNull java.lang.String fileName) { <BUGS> java.lang.String json = null; <BUGE> try { java.io.InputStream is = context.getAssets().open(fileName); int size = is.available(); byte[] buffer = new byte[size]; is.read(buffer); is.close(); json = new java.lang.String(buffer, "UTF-8"); } catch (java.io.IOException ex) { ex.printStackTrace(); return null; } return json; } 
public void analyze(semanticAnalyzer.AssignStatementTail AST) { output.accept(((AST.getLine()) + ": analyze AssignStatementTail\n")); if ((AST.getAddExpression()) != null) { <BUGS> java.lang.System.out.println("ANALYZE ARRAY EXPRESSION"); <BUGE> analyze(AST.getAddExpression()); } analyze(AST.getExp()); } 
public void cleanUp() { try { <BUGS> if ((ps) != null) { ps.close(); <BUGE> } if ((this.dbConnection) != null) { this.dbConnection.close(); } } catch (java.sql.SQLException e) { java.lang.System.out.println(e.getMessage()); } } 
public static boolean isPowerOfTwo(long number) { <BUGS> if (number <= 0) { <BUGE> throw new java.lang.IllegalArgumentException((("number: " + number) + ". Number cannot be neagative.")); } if ((number & (-number)) == number) { return true; } return false; } 
public void add(seedu.taskboss.model.task.Task toAdd) throws seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException { assert toAdd != null; <BUGS> if (contains(toAdd)) { if (!(toAdd.getCategories().contains(Category.done))) { throw new seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException(); } <BUGE> } internalList.add(toAdd); } 
@java.lang.Override public void onTransaction(final org.sigmah.offline.indexeddb.Transaction<org.sigmah.offline.indexeddb.Store> transaction) { final java.util.List<org.sigmah.shared.dto.ProjectDTO> projects = new java.util.ArrayList<org.sigmah.shared.dto.ProjectDTO>(); <BUGS> final org.sigmah.offline.dao.RequestManager<java.util.List<org.sigmah.shared.dto.ProjectDTO>> requestManager = new org.sigmah.offline.dao.RequestManager(projects, callback); <BUGE> getProjectsByIndex(Indexes.PROJECT_FUNDEDS, id, requestManager, transaction); getProjectsByIndex(Indexes.PROJECT_FUNDINGS, id, requestManager, transaction); requestManager.ready(); } 
@java.lang.Override public void run() { java.lang.String mess; java.lang.String sIndex = java.lang.String.valueOf(index); if (!(Config.contains(("Messages." + sIndex)))) { index = 1; } mess = Config.getString(("Messages." + sIndex)); <BUGS> mess = mess.replace("&", "�"); <BUGE> sendBossBar(mess, 10); index = (index) + 1; } 
public void scan() { <BUGS> if (!(wale_tech.tryon.user.setting.PermissionAction.checkAutoRequest(context, Manifest.permission.CAMERA, PermissionSet.CAMERA))) { return ; } <BUGE> if (!(checkLoginStatus())) { return ; } if (!(checkNet())) { return ; } android.content.Intent scan_int = new android.content.Intent(context, com.zbar.lib.CaptureActivity.class); android.support.v7.app.AppCompatActivity activity = ((android.support.v7.app.AppCompatActivity) (context)); activity.startActivityForResult(scan_int, wale_tech.tryon.ScanAction.REQUEST_MAIN); } 
@java.lang.Override public void execute(network.Session session, game.model.Game game) { game.util.GameRenderer gameRenderer = game.getGameRenderer(); if ((this.backgroundValue) != null) { gameRenderer.setBackgroundColor(this.backgroundValue); } if ((this.foregroundValue) != null) { <BUGS> gameRenderer.setForegroundColor(this.backgroundValue); <BUGE> } } 
@java.lang.Override public void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); <BUGS> <BUGE> if (!(com.innovationplayground.sessionexecutiontestclient.PermissionUtil.hasWriteExternalStoragePermission(getActivity()))) { com.innovationplayground.sessionexecutiontestclient.PermissionUtil.requestWriteExternalStoragePermission(getActivity()); return ; } <BUGS> com.innovationplayground.sessionexecutiontestclient.communication.authapi.AuthProxy authProxy = new com.innovationplayground.sessionexecutiontestclient.communication.authapi.AuthProxy(); com.innovationplayground.sessionexecutiontestclient.storage.Storage storage = com.innovationplayground.sessionexecutiontestclient.storage.Storage.getInstance(getActivity()); clientAuthenticator = new com.innovationplayground.sessionexecutiontestclient.business.ClientAuthenticator(authProxy, storage); <BUGE> loadClients(); } 
public static org.opengis.referencing.operation.MathTransform1D create(final double base, final double offset) { org.apache.sis.util.ArgumentChecks.ensureStrictlyPositive("base", base); if (base == 10) { return org.apache.sis.referencing.operation.transform.LogarithmicTransform1D.Base10.create(offset); <BUGS> <BUGE> } <BUGS> return org.apache.sis.referencing.operation.transform.LogarithmicTransform1D.NATURAL.concatenate((1 / (java.lang.Math.log(base))), offset); <BUGE> } 
public void clear() { if ((graphics2D) != null) { graphics2D.setPaint(java.awt.Color.white); graphics2D.fillRect(0, 0, getSize().width, getSize().height); graphics2D.setPaint(java.awt.Color.black); } <BUGS> epaint(); <BUGE> } 
public static void main(java.lang.String[] args) { <BUGS> if ((args.length) != 1) { <BUGE> try { int starWarsSequence = java.lang.Integer.parseInt(args[0]); java.lang.System.out.println(("Star Wars sequance: " + starWarsSequence)); } catch (java.lang.NumberFormatException e) { java.lang.System.err.println((("Argument" + (args[0])) + " must be an integer.")); java.lang.System.exit(2); } }else { java.lang.System.err.println("There must be exactly 1 argument."); java.lang.System.exit(1); } } 
public void showBottomLoading(boolean show) { if ((mShowBottomLoading) != show) { <BUGS> mShowBottomLoading = show; <BUGE> if (show) { <BUGS> <BUGE> com.livae.android.loading.RecyclerAdapter.notifyItemInserted(getBottomLoadingPosition()); }else { com.livae.android.loading.RecyclerAdapter.notifyItemRemoved(getBottomLoadingPosition()); <BUGS> <BUGE> } } } 
public void stopContainer(final java.lang.String containerId, final int timeout) throws com.spotify.docker.client.DockerException { java.util.concurrent.Callable<java.lang.Void> callable = new java.util.concurrent.Callable<java.lang.Void>() { @java.lang.Override public java.lang.Void call() throws java.lang.Exception { dockerClient.stopContainer(containerId, timeout); return null; } }; try { callWithTimeout(callable); } catch (java.lang.Exception e) { <BUGS> com.hubspot.singularity.executor.utils.DockerUtils.LOG.error("Caught exception attempting to stop container", e); <BUGE> throw new com.spotify.docker.client.DockerException(e); } } 
public boolean equals(java.lang.Object other) { if (!(other instanceof oharaShapes3D.CubicShape)) throw new java.lang.IllegalArgumentException("Compared object must be a CubicShape"); else { oharaShapes3D.CubicShape cs = ((oharaShapes3D.CubicShape) (other)); <BUGS> return (((this.getLength()) == (other.getLength())) && ((this.getWidth()) == (other.getWidth()))) && ((this.getHeight()) == (other.getHeight())); <BUGE> } } 
@javax.websocket.OnClose public void close(javax.websocket.Session session, javax.websocket.CloseReason reason) { if (session.getRequestURI().getPath().startsWith(com.chatalytics.web.resources.EventsResource.RT_EVENT_ENDPOINT)) { com.chatalytics.web.resources.EventsResource.LOG.info("Closing session {}. Reason {}", session.getId(), reason); try { <BUGS> <BUGE> session.close(); <BUGS> sessions.remove(session); <BUGE> } catch (java.io.IOException e) { com.chatalytics.web.resources.EventsResource.LOG.warn("Couldn't close {}", session.getId()); } }else { connectedToCompute = false; } } 
private int toInteger(org.jackace.jawascriptexecutive.Executor.JawaObjectRef o) throws org.jackace.jawascriptexecutive.Executor.JawascriptRuntimeException { if ((o.object) instanceof java.lang.Double) { int magnitude = ((int) ((long) (java.lang.Math.floor(java.lang.Math.abs(((java.lang.Double) (o.object))))))); <BUGS> int sign = (((java.lang.Double) (o.object)) > 0) ? 1 : -1; <BUGE> return magnitude * sign; } throw new org.jackace.jawascriptexecutive.Executor.JawascriptRuntimeException("Not yet implemented conversion."); } 
@java.lang.Override public void handleEvent(org.matsim.api.core.v01.events.PersonLeavesVehicleEvent event) { if (!(event.getVehicleId().toString().contains("_"))) { <BUGS> inVehicle.put(event.getPersonId(), false); <BUGE> travelTimes.remove(event.getPersonId()); } } 
@java.lang.Override public boolean onOptionsItemSelected(android.view.MenuItem item) { int id = item.getItemId(); switch (id) { case android.R.id.home : android.util.Log.d("hi", android.support.v4.app.NavUtils.getParentActivityName(this)); android.support.v4.app.NavUtils.navigateUpFromSameTask(this); return true; <BUGS> } if (id == (R.id.action_settings)) { return true; <BUGE> } return super.onOptionsItemSelected(item); } 
private void quitarTagArbol(com.PubliciBot.DM.ArbolTags arbolTags, com.PubliciBot.DM.Tag tag) { java.util.ArrayList<com.PubliciBot.DM.Tag> hijos = buscarTagPorPadre(arbolTags, tag); for (com.PubliciBot.DM.Tag tagtemp : hijos) { <BUGS> <BUGE> arbolTags.getTags().remove(tagtemp); } arbolTags.getTags().remove(tag); } 
@java.lang.Override public boolean onNavigationItemSelected(int position, long id) { if (com.antisocial.app.util.BlockUtils.isBlockServiceRunning(this, com.antisocial.app.service.CoreService.class)) { <BUGS> alert = new android.app.AlertDialog.Builder(this).setTitle("Alert").setMessage("Block is running").setPositiveButton("OK", null).show(); <BUGE> getActionBar().setSelectedNavigationItem(currentSelectedItem); <BUGS> <BUGE> }else { com.antisocial.app.util.BlockUtils.setCurrentMode(profileList[position]); currentSelectedItem = position; } return true; } 
@java.lang.Override public void close() { listeners.clear(); <BUGS> listeners = null; <BUGE> if ((chatToggleCommand) != null) { chatToggleCommand.close(); chatToggleCommand = null; } if ((chatListenCommand) != null) { chatListenCommand.close(); chatListenCommand = null; } } 
@java.lang.Override protected java.util.ArrayList<java.lang.String> doInBackground(byte[]... bytes) { java.util.List<com.hanuor.onyx.helper.RecognitionResult> results = clarifai.recognize(new com.hanuor.onyx.helper.RecognitionRequest(tags.videoArray)); <BUGS> for (com.hanuor.onyx.helper.Tag tag : results.get(0).getTags()) { probableTags.add(tag.getName()); <BUGE> } <BUGS> return probableTags; <BUGE> } 
@com.facebook.react.bridge.ReactMethod public void get(java.lang.String key, java.lang.String bucketName, com.facebook.react.bridge.Callback callback) { android.content.SharedPreferences preferences = getBucket(bucketName); java.lang.Object value = preferences.getAll().get(key); if (value != null) { callback.invoke(value.toString()); }else { <BUGS> callback.invoke(null); <BUGE> } } 
@org.testng.annotations.Test(dependsOnMethods = "testTagGet") public void testTagAddUsers() throws java.lang.Exception { java.util.List<java.lang.String> userIds = new java.util.ArrayList<java.lang.String>(); userIds.add(((me.chanjar.weixin.cp.api.ApiTestModule.WxXmlCpInMemoryConfigStorage) (configStorage)).getUserId()); <BUGS> wxService.tagAddUsers(tagId, userIds); <BUGE> } 
@java.lang.Override public void onClick(android.view.View v) { <BUGS> showProgress(true); <BUGE> com.parse.ParseFacebookUtils.logInWithReadPermissionsInBackground(this, java.util.Arrays.asList("user_location, email, user_birthday"), new com.parse.LogInCallback() { @java.lang.Override public void done(com.parse.ParseUser parseUser, com.parse.ParseException e) { <BUGS> <BUGE> if (parseUser == null) { }else if (parseUser.isNew()) { getFacebookInfo(); }else { android.util.Log.d(com.trytara.tara.LoginActivity.TAG, ("CURRENT USER: " + (parseUser.toString()))); }  } }); } 
@org.junit.Before public void setUp() { java.lang.String field1 = "id"; java.lang.String field2 = "name"; java.lang.String[] fields = new java.lang.String[]{ field1 }; <BUGS> root = new cn.ac.ucas.operator.AggregatorOperator(); <BUGE> filter = new cn.ac.ucas.operator.MockFilterOperator(); project = new cn.ac.ucas.operator.MockProjectOperator(fields); source = new cn.ac.ucas.operator.MockSourceOperator(); org.junit.Assert.assertNotNull(source); project.setChild(source); filter.setChild(project); root.setChild(filter); } 
public T getFirst() { if ((first) != (((last) + 1) % (deque.length))) { if ((first) > 0) { <BUGS> return ((T) (deque[((first) - 1)])); <BUGE> }else { return ((T) (deque[((deque.length) - 1)])); } } return null; } 
boolean canBeMerged(final com.orientechnologies.orient.core.sql.OIndexSearchResult searchResult) { if ((lastField.isLong()) || (searchResult.lastField.isLong())) { return false; } <BUGS> <BUGE> return (com.orientechnologies.orient.core.sql.OIndexSearchResult.isIndexEqualityOperator(lastOperator)) || (com.orientechnologies.orient.core.sql.OIndexSearchResult.isIndexEqualityOperator(searchResult.lastOperator)); } 
@java.lang.Override public void stop() throws java.lang.Exception { <BUGS> java.lang.System.out.println("-- stop()"); <BUGE> java.lang.System.out.println("Stopping application, saving config"); config.pos_x = mainStage.getX(); config.pos_y = mainStage.getY(); config.width = mainStage.getWidth(); config.height = mainStage.getHeight(); org.szernex.java.jtwitchuserlistgrabber.Config.save(config, java.nio.file.Paths.get(R.CONFIG_FILE)); } 
public java.util.ArrayList<org.bitbucket.ucchy.undine.MailData> getTrashboxMails(org.bitbucket.ucchy.undine.sender.MailSender sender) { if (!(isLoaded)) { return null; } <BUGS> sender.setStringMetadata(org.bitbucket.ucchy.undine.MailManager.MAILLIST_METAKEY, "trashbox"); <BUGE> java.util.ArrayList<org.bitbucket.ucchy.undine.MailData> box = new java.util.ArrayList<org.bitbucket.ucchy.undine.MailData>(); for (org.bitbucket.ucchy.undine.MailData mail : mails) { if ((mail.isRelatedWith(sender)) && (mail.isSetTrash(sender))) { box.add(mail); } } org.bitbucket.ucchy.undine.MailManager.sortNewer(box); return box; } 
public static void main(java.lang.String[] args) { try { com.lftechnology.java.training.sanish.palindrome.Main.LOGGER.log(java.util.logging.Level.INFO, "Largest palindrome made from the product of two {0}-digit numbers: {1}", new java.lang.Object[]{ com.lftechnology.java.training.sanish.palindrome.Main.DIGIT_NUM , com.lftechnology.java.training.sanish.palindrome.Palindrome.getLargestPalindrome(com.lftechnology.java.training.sanish.palindrome.Main.DIGIT_NUM) }); } catch (java.lang.Exception e) { <BUGS> com.lftechnology.java.training.sanish.palindrome.Main.LOGGER.log(java.util.logging.Level.WARNING, "Exception : {1}", new java.lang.Object[]{ e.getMessage() }); <BUGE> } } 
@java.lang.Override public android.database.Cursor loadInBackground() { android.database.Cursor result = super.loadInBackground(); if ((!(mEnableCapture)) || (!(com.zhihu.matisse.internal.utils.MediaStoreCompat.hasCameraFeature(getContext())))) { return result; } android.database.MatrixCursor dummy = new android.database.MatrixCursor(com.zhihu.matisse.internal.loader.AlbumMediaLoader.PROJECTION); <BUGS> dummy.addRow(new java.lang.Object[]{ com.zhihu.matisse.internal.entity.Item.ITEM_ID_CAPTURE , com.zhihu.matisse.internal.entity.Item.ITEM_DISPLAY_NAME_CAPTURE , "" , 0 }); <BUGE> return new android.database.MergeCursor(new android.database.Cursor[]{ dummy , result }); } 
public org.matsim.contrib.zone.Zone getZone(org.matsim.contrib.zone.Coord coord) { <BUGS> int r = ((int) (java.lang.Math.round((((coord.getY()) - (minY)) / (cellSize))))); int c = ((int) (java.lang.Math.round((((coord.getX()) - (minX)) / (cellSize))))); <BUGE> return zones[((r * (cols)) + c)]; } 
@java.lang.Override public void onClick(android.view.View v) { java.lang.String address = ""; if (v == (this.lblBitcoinAddress)) <BUGS> address = this.getContext().getString(R.string.bitcoin_address); <BUGE> else if (v == (this.lblLitecoinAddress)) <BUGS> address = this.getContext().getString(R.string.litecoin_address); <BUGE>   <BUGS> net.alegen.android.netclip.util.Clipboard.getInstance(this.getContext()).setClipboardText(address); <BUGE> } 
@java.lang.SuppressWarnings(value = "unchecked") public java.util.List<java.lang.Class<? extends com.audacious_software.passive_data_kit.generators.Generator>> activeGenerators() { java.util.ArrayList<java.lang.Class<? extends com.audacious_software.passive_data_kit.generators.Generator>> active = new java.util.ArrayList<>(); <BUGS> for (java.lang.String className : this.mActiveGenerators) { try { active.add(((java.lang.Class<? extends com.audacious_software.passive_data_kit.generators.Generator>) (java.lang.Class.forName(className)))); } catch (java.lang.ClassNotFoundException e) { <BUGE> } } return active; } 
private co.paralleluniverse.fibers.instrument.CheckInstrumentationVisitor checkFileAndClose(java.io.InputStream is, java.lang.String name) { try { try { org.objectweb.asm.ClassReader r = new org.objectweb.asm.ClassReader(is); co.paralleluniverse.fibers.instrument.CheckInstrumentationVisitor civ = new co.paralleluniverse.fibers.instrument.CheckInstrumentationVisitor(this); <BUGS> r.accept(civ, (((org.objectweb.asm.ClassReader.SKIP_DEBUG) | (org.objectweb.asm.ClassReader.SKIP_FRAMES)) | (org.objectweb.asm.ClassReader.SKIP_CODE))); <BUGE> return civ; } finally { is.close(); } } catch (co.paralleluniverse.fibers.instrument.UnableToInstrumentException ex) { throw ex; } catch (java.lang.Exception ex) { error(name, ex); } return null; } 
@org.junit.Test public void getCurrentCallValue_input_returns() { int smallBlind = 30; int credits = 100; pokerController.setDealer(pokerController.getPlayerList().get(0)); pokerController.setStartCredits(credits); pokerController.setBlinds(smallBlind); <BUGS> pokerController.startGame(); <BUGE> org.junit.Assert.assertEquals(pokerController.getPlayerList().get(0), pokerController.getCurrentPlayer()); int callValue = pokerController.getCurrentCallValue(); org.junit.Assert.assertEquals((smallBlind * 2), callValue); } 
private void saveUserInformation() { java.lang.String name = editTextName.getText().toString(); java.lang.String add = editTextAddress.getText().toString(); fluffystudios.firebaseauthdemo.UserInformation userInformation = new fluffystudios.firebaseauthdemo.UserInformation(name, add); com.google.firebase.auth.FirebaseUser user = firebaseAuth.getCurrentUser(); databaseReference.child(user.getUid()).setValue(userInformation); android.widget.Toast.makeText(this, "Information Saved...", Toast.LENGTH_SHORT).show(); <BUGS> g = $missing$; <BUGE> } 
public void speakAloud(android.view.View v) { <BUGS> if ((currVocab.getSpeech()) == null) { <BUGE> playSound(currVocab.getSpeech()); }else { com.example.sco.imuvo.HelperClasses.WebServiceHelper webServiceHelper = new com.example.sco.imuvo.HelperClasses.WebServiceHelper(); webServiceHelper.setWebServiceHelperListener(new com.example.sco.imuvo.HelperClasses.WebServiceHelperListener() { @java.lang.Override public void onWebServiceReturnResult(byte[] result) { currVocab.setSpeech(result); com.example.sco.imuvo.HelperClasses.VocabDatabaseHelper.update(currVocab); playSound(result); } }); webServiceHelper.getSpeechAsync(currVocab); } } 
@org.junit.Test public void testGetProps() { org.talend.components.api.properties.ComponentProperties props = new org.talend.components.splunk.TSplunkEventCollectorDefinition().createProperties(); org.talend.daikon.properties.presentation.Form f = props.getForm(Form.MAIN); org.talend.components.api.test.ComponentTestUtils.checkSerialize(props, errorCollector); org.talend.daikon.properties.presentation.Form advancedF = props.getForm(Form.ADVANCED); java.lang.System.out.println(f); java.lang.System.out.println(advancedF); java.lang.System.out.println(props); <BUGS> org.junit.Assert.assertEquals(Form.MAIN, f.getName()); org.junit.Assert.assertEquals(Form.ADVANCED, advancedF.getName()); <BUGE> } 
private void printAll() { java.lang.System.out.println("------Server Data------"); java.lang.System.out.println(("username: " + (username))); java.lang.System.out.println(("password: " + (password))); java.lang.System.out.println(("salt: " + (salt))); java.lang.System.out.print(("challengeAnswer: " + (challengeAnswer))); java.lang.System.out.println(""); <BUGS> java.lang.System.out.print("responseToChallenge: "); java.lang.System.out.println(""); <BUGE> java.lang.System.out.println(("timesToRunHash: " + (timesToRunHash))); java.lang.System.out.println(("Hash bit length: " + (HASH_BIT_LENGTH))); java.lang.System.out.println("------ENd Server Data--------"); } 
@java.lang.Override <BUGS> void startElement(java.lang.String uri, java.lang.String localName, java.lang.String qName, int attributePointer, int attributeCount) throws org.xml.sax.SAXException { <BUGE> if (((depth)++) > 0) { super.startElement(uri, localName, qName, attributePointer, attributeCount); } } 
private de.uni_freiburg.informatik.ultimate.logic.Term buildSymmetryAxiom(de.uni_freiburg.informatik.ultimate.logic.Sort s) { de.uni_freiburg.informatik.ultimate.logic.TermVariable qvar1 = variable("x", s); de.uni_freiburg.informatik.ultimate.logic.TermVariable qvar2 = variable("y", s); <BUGS> return quantifier(de.uni_freiburg.informatik.ultimate.eprequalityaxiomsadder.FORALL, new de.uni_freiburg.informatik.ultimate.logic.TermVariable[]{ qvar1 , qvar2 }, term("=>", term(mNewEqualsSymbol, qvar1, qvar2), term(mNewEqualsSymbol, qvar1, qvar2))); <BUGE> } 
private int element_manhattan(int i, int j, int index) { <BUGS> int ori_i = index / (dimension()); <BUGE> int ori_j = (index - (ori_i * (dimension()))) - 1; int idistance = java.lang.Math.abs((i - ori_i)); int jdistance = java.lang.Math.abs((j - ori_j)); return idistance + jdistance; } 
public MiniJavaVar findVar(java.lang.String varName) { int n = contexts.size(); for (n -= 1; n >= 0; n--) { MiniJavaVar findRes = contexts.get(n).vars.get(varName); if (findRes != null) { return findRes; } } <BUGS> java.lang.System.err.printf("Runtime Error: identifier %s not found.\n", varName); return MiniJavaVar.makeVoid(); <BUGE> } 
@java.lang.Override public void save(org.openstack.atlas.service.domain.services.impl.AccountLimit accountLimit) throws org.openstack.atlas.service.domain.exceptions.BadRequestException { <BUGS> try { org.openstack.atlas.service.domain.services.impl.AccountLimit dbLimit = accountLimitRepository.getByAccountIdAndType(accountLimit.getAccountId(), accountLimit.getLimitType()); if (dbLimit != null) { throw new org.openstack.atlas.service.domain.exceptions.BadRequestException(((("A limit for the Limit Type " + (dbLimit.getLimitType().getName().toString())) + " already exists for the account id ") + (dbLimit.getAccountId()))); } } catch (java.lang.Exception e) { <BUGE> } accountLimitRepository.save(accountLimit); } 
@java.lang.Override public boolean f(com.google.gwt.user.client.Event e) { com.google.gwt.query.client.GQuery el = $(e.getEventTarget()); com.cgxlib.core.component.tab.ViewHandler<?> viewHandler = com.cgxlib.core.component.tab.CGXHelper.getViewHandlerAsData(el); if ((viewHandler != null) && (viewHandler instanceof com.cgxlib.core.component.tab.TabView.ViewHandler)) { el.as(CGXlib.CGX).as(com.cgxlib.core.component.tab.Tab.CGX, viewHandler).show(); }else { el.as(com.cgxlib.core.component.tab.Tab.CGX).show(); } <BUGS> return false; <BUGE> } 
private void setTime(java.util.Calendar calendar) { setDate(calendar.get(java.util.Calendar.DAY_OF_MONTH), ((calendar.get(java.util.Calendar.MONTH)) + 1), calendar.get(java.util.Calendar.YEAR)); setTime(calendar.get(java.util.Calendar.HOUR_OF_DAY), calendar.get(java.util.Calendar.MINUTE)); <BUGS> timeChosen = java.util.Calendar.getInstance(); <BUGE> } 
@java.lang.Override public void onSharedPreferenceChanged(android.content.SharedPreferences sharedPreferences, java.lang.String key) { switch (key) { case com.feresr.rxweather.UI.SettingsActivity.PREF_UNIT : if (sharedPreferences.getString(key, "celsius").equals("celsius")) { citiesView.showTemperatureInCelsius(); }else { citiesView.showTemperatureInFahrenheit(); } <BUGS> <BUGE> case com.feresr.rxweather.UI.SettingsActivity.GRIDVIEW : if (sharedPreferences.getBoolean(key, false)) { citiesView.setSetColumns(2); }else { citiesView.setSetColumns(1); } break; } } 
@java.lang.Override public void processInput(com.lumens.engine.TransformComponent src, java.lang.String targetName, java.util.List<com.lumens.model.Element> input) { if (log.isDebugEnabled()) <BUGS> log.debug(java.lang.String.format("Component '%s' input size '%d' target => '%s'", src.getName(), input.size(), targetName)); <BUGE>  processElementList(input); } 
@java.lang.Override public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) { <BUGS> if ((null == (rootView)) && (cacheContentData)) { <BUGE> rootView = onCreateFragmentView(inflater, container, savedInstanceState); } unbinder = butterknife.ButterKnife.bind(this, rootView); return rootView; } 
public void updateParticles() { if (!(particles.isEmpty())) { <BUGS> java.util.ArrayList<com.bmesta.powermode.Particle> tempParticles = new java.util.ArrayList<com.bmesta.powermode.Particle>(particles); <BUGE> final java.util.Iterator<com.bmesta.powermode.Particle> particleIterator = tempParticles.iterator(); while (particleIterator.hasNext()) { if (particleIterator.next().update()) { particleIterator.remove(); } } particles = tempParticles; this.repaint(); } } 
public java.lang.Object pre(int t) { if (t == 0) { return ref; } t = t - 1; <BUGS> checkNonEmptyStream("pre"); <BUGE> checkCapacity(t); if (t >= (size)) { return bonsai.runtime.core.Cast.toLattice(name, ref).bottom(); }else { return stream[preIndex(t)]; } } 
public static void onPlayerTeleport(org.bukkit.entity.Player player, org.bukkit.Location to) { if (!(com.frdfsnlght.inquisitor.PlayerStats.started)) { return ; } <BUGS> if (!(com.frdfsnlght.inquisitor.PlayerStats.isStatsPlayer(player))) { return ; } com.frdfsnlght.inquisitor.PlayerStats.PlayerState state = com.frdfsnlght.inquisitor.PlayerStats.playerStates.get(player.getName()); if (state != null) { com.frdfsnlght.inquisitor.PlayerStats.onPlayerMove(player, player.getLocation()); state.lastLocation = to; state.lastTime = java.lang.System.currentTimeMillis(); <BUGE> } } 
@java.lang.Override public org.boxfox.dms.utilities.json.EasyJsonObject action(org.boxfox.dms.utilities.actions.support.Sender sender, int command, org.boxfox.dms.utilities.json.EasyJsonObject requestObject) throws java.sql.SQLException { java.lang.String title = requestObject.getString("title"); java.lang.String content = requestObject.getString("question_content"); java.lang.String writer = requestObject.getString("writer"); <BUGS> int privacy = requestObject.getInt("privacy"); <BUGE> int status = database.executeUpdate("INSERT INTO qna(title, question_content, question_date, writer, privacy) VALUES('", title, "', '", content, "', now(), '", writer, "', ", privacy, ")"); responseObject.put("status", status); return responseObject; } 
int getSessionStartPointerMillis() { if (((this) == (ee.ioc.phon.android.speechutils.ContinuousRawAudioRecorder.SessionStartPointer.mBeginningOfBufferPosition)) && ((mSessionStartPointerMillis) == (java.lang.Integer.MIN_VALUE))) return ee.ioc.phon.android.speechutils.ContinuousRawAudioRecorder.SessionStartPointer.mNowPosition.getSessionStartPointerMillis();  <BUGS> if (((this) != (ee.ioc.phon.android.speechutils.ContinuousRawAudioRecorder.SessionStartPointer.mBeginningOfBufferPosition)) && ((mSessionStartPointerMillis) > (ee.ioc.phon.android.speechutils.ContinuousRawAudioRecorder.SessionStartPointer.mBeginningOfBufferPosition.getSessionStartPointerMillis()))) <BUGE> return ee.ioc.phon.android.speechutils.ContinuousRawAudioRecorder.SessionStartPointer.mBeginningOfBufferPosition.getSessionStartPointerMillis();  return mSessionStartPointerMillis; } 
@org.springframework.web.bind.annotation.RequestMapping(value = "/friends", method = org.springframework.web.bind.annotation.RequestMethod.POST) public java.lang.String addFriend(java.security.Principal principal, @org.springframework.web.bind.annotation.RequestParam(value = "id") java.lang.Long id) { java.lang.String username = principal.getName(); <BUGS> com.jennbowers.library.models.User toUser = userRepo.findByUsername(username); com.jennbowers.library.models.User fromUser = userRepo.findOne(id); <BUGE> com.jennbowers.library.models.FriendRequest friendRequest = new com.jennbowers.library.models.FriendRequest(); friendRequest.setTouser(toUser); friendRequest.setFromuser(fromUser); friendRequest.setActive(false); friendRequest.setPending(true); friendRequestRepo.save(friendRequest); return "friendAll"; } 
@java.lang.Override public void onStart() { super.onStart(); final android.content.Context context = getApplicationContext(); <BUGS> if ((org.droidplanner.android.BuildConfig.DEBUG) || ((org.droidplanner.android.utils.Utils.getAppVersionCode(context)) > (mAppPrefs.getSavedAppVersionCode()))) { <BUGE> org.droidplanner.android.dialogs.DialogMaterialFragment changelog = new org.droidplanner.android.dialogs.DialogMaterialFragment(); changelog.show(getSupportFragmentManager(), "Changelog Dialog"); mAppPrefs.updateSavedAppVersionCode(context); } } 
private void makeURL() { java.lang.String URL = (MainActivity2.URL) + (MainActivity2.USN); android.content.Intent i = new android.content.Intent(getActivity(), com.teamidentiti.fastvturesults.Services.SemestersService.class); i.putExtra("URL", URL); i.putExtra("USN", MainActivity2.USN); <BUGS> i.putExtra("SEM", MainActivity2.SEM); <BUGE> getActivity().startService(i); } 
public com.dumbpug.crossbowknight.particles.Particle generate(com.dumbpug.crossbowknight.particles.EmitterDetails emitterDetails) { <BUGS> float randomVelx = ((random.nextFloat()) * 4.0F) - 2.0F; float randomVely = ((random.nextFloat()) * 4.0F) - 2.0F; return new com.dumbpug.crossbowknight.particles.ExplosionParticle(((emitterDetails.positionX) - 10), emitterDetails.positionY, randomVelx, randomVely, level); <BUGE> } 
@java.lang.Override public void characters(char[] ch, int start, int length) throws org.xml.sax.SAXException { if (isWithinBodyElement) { bodyText.append(ch, start, length); if (anchorFlag) { <BUGS> anchorText.append(new java.lang.String(ch, start, length).replaceAll("\n", "").replaceAll("\t", "").trim()); <BUGE> } } } 
@java.lang.Override public dyvil.tools.compiler.ast.field.IDataMember resolveField(dyvil.tools.parsing.Name name) { <BUGS> if ((this.variables) != null) { for (int i = (this.variables.size()) - 1; i >= 0; i--) { final dyvil.tools.compiler.ast.field.IVariable variable = this.variables.get(i); if ((variable.getName()) == name) { return variable; } <BUGE> } } return null; } 
@org.springframework.web.bind.annotation.RequestMapping(value = "/books", method = org.springframework.web.bind.annotation.RequestMethod.GET) public java.lang.String getBooks(org.springframework.ui.Model model) { java.lang.System.out.println("ALl the books"); model.addAttribute("book", new edu.mum.cs545.lms.domain.Book()); model.addAttribute("bookTypes", java.util.Arrays.asList(edu.mum.cs545.lms.domain.BookType.values())); model.addAttribute("bookCategories", java.util.Arrays.asList(edu.mum.cs545.lms.domain.BookCategory.values())); <BUGS> java.lang.System.out.println(("All books collection is -- " + (bookservice.getAll().size()))); java.lang.System.out.println(("Available  books -- " + (bookservice.availableBooks().size()))); <BUGE> return "books"; } 
public int getMaxEggGroupID() { android.database.Cursor cursor = database.query(EGG_GROUPS_TABLE, null, null, null, null, null, null); cursor.moveToLast(); int maxEggGroupID = cursor.getInt(cursor.getColumnIndex(EGG_GROUP_ID)); if (PRINT_DEBUG) android.util.Log.v("Database Access", ("Max eggGroupID is: " + (java.lang.String.valueOf(maxEggGroupID))));  cursor.close(); <BUGS> return maxEggGroupID; <BUGE> } 
public java.lang.String translate(java.lang.String str) { java.lang.String url = buildQuery(str); java.lang.String content = null; try { content = http.HttpGet.download(url); <BUGS> java.lang.System.out.println(content); <BUGE> } catch (java.net.MalformedURLException e) { java.lang.System.out.printf("Could not encode %s\n", str); return null; } catch (java.io.IOException e) { java.lang.System.out.printf("Error while downloading %s (%s)\n", url, e.getMessage()); return null; } return content; } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); int weekday = 5; int weekend = 9; int optimalHours = 7 * 8; <BUGS> int actualHours = weekday; <BUGE> actualHours = actualHours + (weekend * 2); int solution = optimalHours - actualHours; display(solution); } 
private boolean isPromotion(final de.htwsaar.chessbot.engine.model.Position start, final de.htwsaar.chessbot.engine.model.Position target) { <BUGS> if (isWhite()) <BUGE> if (((start.rank()) == 7) && ((target.rank()) == 8)) return true; <BUGS> else if (((start.rank()) == 2) && ((target.rank()) == 1)) return true;  <BUGE>  <BUGS>  <BUGE> return false; } 
private void refreshMap() { <BUGS> if ((mMap) != null) { <BUGE> com.google.android.gms.maps.model.LatLng temp1 = new com.google.android.gms.maps.model.LatLng(myRoute.get(0).getLatitude(), myRoute.get(0).getLongitude()); mMap.moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLng(temp1)); } return ; } 
@java.lang.Override public minetweaker.api.item.IItemStack transform(minetweaker.api.item.IItemStack item, minetweaker.api.player.IPlayer byPlayer) { if ((item.getAmount()) > 1) { byPlayer.give(withItem); return item; }else { <BUGS> return withItem.withAmount(((withItem.getAmount()) + 1)); <BUGE> } } 
@java.lang.Override public void onBindViewHolder(final com.thanhtuan.delivery.adapter.ListNghiemThuAdapter.NghiemThuViewHolder holder, int position) { final com.thanhtuan.delivery.model.Photo photo = photos.get(position); holder.ibtnIMG.setImageBitmap(photo.getImage()); holder.txtvLydo.setText(photo.getDescription()); <BUGS> holder.itemView.setOnClickListener(new android.view.View.OnClickListener() { @java.lang.Override public void onClick(android.view.View v) { photos.remove(holder.getAdapterPosition()); } }); <BUGE> } 
@java.lang.Override public void storePublishForFuture(org.eclipse.moquette.spi.impl.events.PublishEvent evt) { java.util.List<org.eclipse.moquette.spi.impl.storage.StoredPublishEvent> storedEvents; java.lang.String clientID = evt.getClientID(); if (!(m_persistentMessageStore.containsKey(clientID))) { storedEvents = new java.util.ArrayList<>(); }else { storedEvents = m_persistentMessageStore.get(clientID); } storedEvents.add(convertToStored(evt)); m_persistentMessageStore.put(clientID, storedEvents); <BUGS> m_db.commit(); <BUGE> org.eclipse.moquette.spi.persistence.MapDBPersistentStore.LOG.debug("Stored published message for client <{}> on topic <{}>", clientID, evt.getTopic()); } 
@java.lang.Override protected void onPreExecute() { ((android.app.Activity) (context)).getWindow().addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON); this.loadingDialog.setIndeterminate(true); this.loadingDialog.setCancelable(false); this.loadingDialog.setTitle(getString(R.string.settings_downloadHDSpots_button_label)); <BUGS> this.loadingDialog.setMessage((("Downloading: " + (lstToDownload)) + "...")); <BUGE> this.loadingDialog.show(); } 
private void checkFirePrimary() { if ((input.isFirePrimaryWeapon()) && ((counter) > 30)) { <BUGS> model.Bubble bubble = new model.Bubble(getX(), getY(), 0, 0, 0, 0, facingRight); <BUGE> bubbles.add(bubble); levelController.getScreenController().addToSprites(bubble); counter = 0; }else { (counter)++; } } 
@org.junit.Test public void testPresentEntityDestroyNotBlockedByReleasedReferenceSucceeds() throws java.lang.Throwable { org.terracotta.connection.Connection client = org.ehcache.clustered.BasicEntityInteractionTest.CLUSTER.newConnection(); try { <BUGS> org.terracotta.connection.entity.EntityRef<org.ehcache.clustered.client.internal.EhcacheClientEntity, org.ehcache.clustered.common.internal.ClusteredTierManagerConfiguration> ref = client.getEntityRef(org.ehcache.clustered.client.internal.EhcacheClientEntity.class, 1, "testPresentEntityDestroyNotBlockedByReleasedReferenceSucceeds"); <BUGE> ref.create(blankConfiguration); ref.fetchEntity().close(); ref.destroy(); } finally { client.close(); } } 
java.util.ArrayList getArrayAbschnitt(java.util.ArrayList list, int i, int j) { <BUGS> java.lang.System.err.println(("list vor Abschnitt " + list)); <BUGE> java.util.ArrayList abschnitt = new java.util.ArrayList<>(); for (int k = i; k < (j + 1); k++) { abschnitt.add(list.get(k)); } <BUGS> java.lang.System.err.println(((((("list nach Abschnitt von" + i) + "bis") + j) + "ist") + abschnitt)); <BUGE> return abschnitt; } 
@java.lang.Override public void widgetSelected(org.eclipse.swt.events.SelectionEvent arg0) { parking.house.gui.AddVehicleDialog dialog = new parking.house.gui.AddVehicleDialog(shell); dialog.open(); parking.house.model.Vehicle v = dialog.getVehicle(); if (v != null) { java.lang.System.out.println(("Choosed vehicle:" + v)); <BUGS> SetValue(v); <BUGE> } } 
@java.lang.Override public void onSwiped(android.support.v7.widget.RecyclerView.ViewHolder viewHolder) { <BUGS> int viewHolderPosition = viewHolder.getAdapterPosition(); mModel.removeChild(viewHolderPosition); mSetsAdapter.notifyItemRemoved(viewHolderPosition); <BUGE> mItemRemovedSnackbar = android.support.design.widget.Snackbar.make(mSetsView, R.string.program_exercise_activity_set_deleted_message, Snackbar.LENGTH_INDEFINITE); mItemRemovedSnackbar.setAction(R.string.cancel_button_text, new android.view.View.OnClickListener() { @java.lang.Override public void onClick(android.view.View v) { mSetsAdapter.notifyItemInserted(mModel.restoreLastRemoved()); } }); mItemRemovedSnackbar.show(); } 
public void actionPerformed(java.awt.event.ActionEvent arg0) { s.setBrTel(txtBrTel.getText()); s.setEmail(txtEmail.getText()); s.setUplaceno(java.lang.Integer.parseInt(txtUplaceno.getText())); controller.GUIKontroler.osvezi(s); <BUGS> populate(); <BUGE> controller.GUIKontroler.pokreniDodajCasProzor(s); } 
@java.lang.Override public boolean equals(final java.lang.Object o) { if (!(o instanceof groovyx.net.http.NonBlockingCookieStore.UriKey)) { return false; } final groovyx.net.http.NonBlockingCookieStore.UriKey rhs = ((groovyx.net.http.NonBlockingCookieStore.UriKey) (o)); <BUGS> return (host.equals(rhs.host)) && (name.equals(rhs.host)); <BUGE> } 
@butterknife.OnClick(value = R.id.show_info_full_c) public void showInfo() { cv.setVisibility(View.VISIBLE); showAnim.cancel(); cv.startAnimation(showAnim); showInfo.setVisibility(View.INVISIBLE); btnFadeOutAnim.cancel(); showInfo.startAnimation(btnFadeOutAnim); <BUGS> ((com.engstuff.coloriphornia.interfaces.HideInfoListener) (activity)).onHideInfoInvoked(false); <BUGE> } 
@java.lang.Override public void onClick(android.view.View v) { java.lang.String EventName; EventName = eventName.getText().toString(); if (EventName.isEmpty()) { android.widget.Toast.makeText(context, "Please enter a Name for the event", Toast.LENGTH_LONG).show(); }else { <BUGS> android.widget.Toast.makeText(context, EventName, Toast.LENGTH_SHORT).show(); <BUGE> } } 
@java.lang.Override protected void onPostExecute(K keys) { super.onPostExecute(keys); <BUGS> <BUGE> android.app.Activity context = base.ContextHolder.getContext(); android.content.Intent openWeb = new android.content.Intent(context, ly.loud.loudly.AuthActivity.class); openWeb.putExtra("URL", getAuthUrl()); openWeb.putExtra("KEYS", keys); openWeb.putExtra("AUTHORIZER", copy); context.startActivity(openWeb); } 
public void displayRecyclerView(boolean editable) { mPlayerRecyclerView.setVisibility(View.VISIBLE); mLayoutManager = new android.support.v7.widget.LinearLayoutManager(this); mPlayerRecyclerView.setLayoutManager(mLayoutManager); <BUGS> mPlayerListAdapter = new io.github.sdsstudios.ScoreKeeper.Adapters.PlayerListAdapter(CURRENT_ACTIVITY, editable, mRelativeLayout, this); <BUGE> mPlayerRecyclerView.setAdapter(mPlayerListAdapter); } 
private synchronized org.esa.beam.framework.datamodel.PlacemarkGroup createTextAnnotationGroup() { final org.esa.beam.framework.datamodel.VectorDataNode vectorDataNode = new org.esa.beam.framework.datamodel.VectorDataNode(org.esa.beam.framework.datamodel.Product.TEXT_ANNOTATION_GROUP_NAME, org.esa.beam.framework.datamodel.Placemark.createTextAnnotationFeatureType()); vectorDataNode.setDefaultStyleCss("symbol:plus; stroke:#ff8800; stroke-opacity:0.0; stroke-width:0.0"); <BUGS> vectorDataNode.setPermanent(true); <BUGE> this.vectorDataGroup.add(vectorDataNode); return vectorDataNode.getPlacemarkGroup(); } 
@java.lang.Override public boolean equals(java.lang.Object otherStylist) { if (!(otherStylist instanceof Stylist)) { return false; }else { Stylist newStylist = ((Stylist) (otherStylist)); <BUGS> return (this.getName().equals(newStylist.getName())) && ((this.getId()) == (newStylist.getId())); <BUGE> } } 
@java.lang.SuppressWarnings(value = "unchecked") @java.lang.Override public java.util.List<com.health.entity.Hospital> findBySuburb(java.lang.String suburb) { try { java.lang.String str = "SELECT h FROM Hospital h WHERE h.suburb = :suburb"; javax.persistence.Query query = em.createQuery(str); query.setParameter("suburb", suburb); return query.getResultList(); } catch (java.lang.Exception e) { e.printStackTrace(); em.close(); return null; <BUGS> <BUGE> } } 
public void enterArrayAccess_lfno_primary(ceylon.tool.converter.java2ceylon.ArrayAccess_lfno_primaryContext ctx) { try { enterArrayAccess_lfno_primary = true; if (equalsequalsNull) { bw.write("!"); } <BUGS> bw.write(((((ctx.expressionName().getText()) + ".get(") + (ctx.expression(0).getText())) + ")")); <BUGE> } catch (java.io.IOException e) { e.printStackTrace(); } } 
@java.lang.Override public void buttonClick(com.vaadin.ui.Button.ClickEvent event) { logger.log(java.util.logging.Level.INFO, (("logge " + (getSession().getAttribute("user"))) + " aus...")); getSession().setAttribute("user", null); <BUGS> com.example.testme.server.broadcast.Broadcaster.broadcast(username, false); <BUGE> getUI().getNavigator().navigateTo(com.example.testme.client.lobby.LobbyPresenter.NAME); } 
@com.emc.sa.api.GET @com.emc.sa.api.Path(value = "/job-status") @com.emc.sa.api.Produces(value = { javax.ws.rs.core.MediaType.APPLICATION_XML , javax.ws.rs.core.MediaType.APPLICATION_JSON }) @com.emc.storageos.security.authorization.CheckPermission(roles = { com.emc.storageos.security.authorization.Role.TENANT_ADMIN }) public com.emc.sa.api.OrderJobInfo getJobStatus(@com.emc.sa.api.DefaultValue(value = "DELETE_ORDER") @com.emc.sa.api.QueryParam(value = com.emc.vipr.client.catalog.impl.SearchConstants.JOB_TYPE) java.lang.String typeStr) { <BUGS> com.emc.sa.api.OrderService.log.info("lbyc0:type={}", typeStr); <BUGE> com.emc.sa.api.utils.OrderServiceJob.JobType type; try { type = OrderServiceJob.JobType.valueOf(typeStr); } catch (java.lang.Exception e) { com.emc.sa.api.OrderService.log.error("Failed to get job type e=", e); throw APIException.badRequests.invalidParameterWithCause(SearchConstants.JOB_TYPE, typeStr, e); } com.emc.sa.api.utils.OrderJobStatus status = queryJobInfo(type); return status != null ? status.toOrderJobInfo() : new com.emc.sa.api.OrderJobInfo(); } 
@java.lang.Override public void handle(javafx.event.ActionEvent event) { javafx.stage.DirectoryChooser directoryChooser = new javafx.stage.DirectoryChooser(); java.io.File selectedDirectory = directoryChooser.showDialog(stage); if (selectedDirectory == null) { <BUGS> path.setText("No Directory selected"); <BUGE> }else { path.setText(selectedDirectory.getAbsolutePath()); } } 
public void onDateSet(android.widget.DatePicker view, int year, int month, int day) { month = month + 1; java.lang.String birthdate = (((day + "/") + month) + "/") + year; java.lang.String last_date = com.example.mishaberkovich.roomsquad.EditProfileActivity.profile_information.remove(com.example.mishaberkovich.roomsquad.EditProfileActivity.birthdate_loc); <BUGS> if (!(last_date.equals(birthdate))) { <BUGE> com.example.mishaberkovich.roomsquad.EditProfileActivity.changes_saved = false; } com.example.mishaberkovich.roomsquad.EditProfileActivity.profile_information.add(com.example.mishaberkovich.roomsquad.EditProfileActivity.birthdate_loc, birthdate); com.example.mishaberkovich.roomsquad.EditProfileActivity.displayAge(getActivity()); } 
public static void main(java.lang.String[] args) throws java.io.IOException { for (int i = 0; i < (TestController.files.length); i++) { <BUGS> <BUGE> TestController.tests(10, "g", ((TestController.root) + (TestController.files[i])), i, TestController.maxValues[i]); <BUGS> TestController.tests(10, "p", ((TestController.root) + (TestController.files[i])), i, TestController.maxValues[i]); <BUGE> } } 
public ninja.Result gameGet(@ninja.params.PathParam(value = "choice") int choose) { <BUGS> models.Game g = new models.amGame(); models.Game g2 = new models.spGame(); <BUGE> if (choose == 1) { g.buildDeck(); g.shuffle(); return ninja.Results.json().render(g); }else { g2.buildDeck(); g2.shuffle(); return ninja.Results.json().render(g2); } } 
<BUGS> private static void restoreDensity(android.content.Context context) { <BUGE> context.getResources().getDisplayMetrics().setToDefaults(); android.util.DisplayMetrics metrics = com.bulong.rudeness.RudenessScreenHelper.getMetricsOnMiui(context.getResources()); if (metrics != null) metrics.setToDefaults();  } 
public static void generate(java.lang.String bugVecFilePath, java.lang.String codeVecFilePath, java.lang.String simMatFilePath) throws java.lang.Exception { int dicSize = config.Config.getInstance().getDicSize(); java.util.HashMap<java.lang.String, Jama.Matrix> bugVecList = utils.MatrixUtil.loadVectors(bugVecFilePath, dicSize); <BUGS> <BUGE> java.util.HashMap<java.lang.String, Jama.Matrix> codeVecList = utils.MatrixUtil.loadVectors(codeVecFilePath, dicSize); <BUGS> <BUGE> utils.MatrixUtil.exportSimilarityMatrix(bugVecList, codeVecList, simMatFilePath, dicSize); } 
public boolean deleteMapLayerMetadataObject(edu.harvard.iq.dataverse.MapLayerMetadata mapLayerMetadata, edu.harvard.iq.dataverse.authorization.users.User user) { edu.harvard.iq.dataverse.MapLayerMetadataServiceBean.logger.info("deleteMapLayerMetadataObject"); if ((mapLayerMetadata == null) || (user == null)) { return false; } if (permissionService.userOn(user, mapLayerMetadata.getDataFile().getOwner()).has(Permission.EditDataset)) { <BUGS> <BUGE> em.remove(em.merge(mapLayerMetadata)); <BUGS> this.deleteOlderMapThumbnails(mapLayerMetadata); <BUGE> return true; } return false; } 
public static double rootMeansSquaredError(double[] real, double[] predicted) { <BUGS> double ret = 1 / (real.length); <BUGE> for (int i = 0; i < (real.length); i++) { ret += java.lang.Math.pow(((real[i]) - (predicted[i])), 2); } <BUGS> return java.lang.Math.sqrt(ret); <BUGE> } 
public void IncrementCurrentScore(int currentHole) { if (!(gameStarted)) { return ; } if ((currentHole >= 1) && (currentHole <= 18)) { <BUGS> if ((score[(currentHole - 1)]) <= (com.manleysoftware.michael.discgolfapp.Model.Player.maxScoreAllowable)) { <BUGE> return ; } (score[(currentHole - 1)])++; } } 
private boolean bracketsBalanced(java.lang.String input) { int i = 0; for (char c : input.toCharArray()) { if (c == '{') i++;  if (c == '}') i--;  <BUGS> <BUGE> } <BUGS> return (i >= 0) && (i == 0); <BUGE> } 
@com.fasterxml.jackson.annotation.JsonCreator public static seedu.address.commons.core.Version fromString(java.lang.String versionString) throws java.lang.IllegalArgumentException { java.util.regex.Matcher versionMatcher = seedu.address.commons.core.Version.VERSION_PATTERN.matcher(versionString); if (!(versionMatcher.find())) { throw new java.lang.IllegalArgumentException(java.lang.String.format(seedu.address.commons.core.Version.EXCEPTION_STRING_NOT_VERSION, versionString)); } <BUGS> return new seedu.address.commons.core.Version(java.lang.Integer.parseInt(versionMatcher.group(1)), java.lang.Integer.parseInt(versionMatcher.group(2)), java.lang.Integer.parseInt(versionMatcher.group(3)), ((versionMatcher.group(4)) == null ? false : true)); <BUGE> } 
@java.lang.Override public void onClick(android.view.View itemView) { <BUGS> android.util.Log.d(android.content.ContentValues.TAG, "onClick "); android.widget.Toast clickMessage = android.widget.Toast.makeText(itemView.getContext(), "CLICKED!", Toast.LENGTH_LONG); clickMessage.show(); <BUGE> android.content.Intent i = new android.content.Intent(itemView.getContext(), com.pratikm.PatientTracker.HealthDetailsActivity.class); i.putExtra("clickedPatientEmail", mTextViewPatientEmail.getText().toString()); itemView.getContext().startActivity(i); } 
public static com.app.PlayingCardSystem.GreenPlayerCardEnum getEnumInstance(java.lang.String enumName) { com.app.PlayingCardSystem.GreenPlayerCardEnum temp = null; for (com.app.PlayingCardSystem.GreenPlayerCardEnum gc : BoardGame.player_cards) { if (enumName.trim().equalsIgnoreCase(gc.name())) { temp = gc; break; } <BUGS> break; <BUGE> } return temp; } 
@org.junit.Test public void testTimestampDeSerializeWithNanoseconds() throws java.lang.Exception { org.apache.hadoop.io.Writable w = new org.apache.hadoop.io.Text("{\"one\":true,\"five\":\"2013-03-27 23:18:40.123456\"}"); org.openx.data.jsonserde.json.JSONObject result = ((org.openx.data.jsonserde.json.JSONObject) (org.openx.data.jsonserde.JsonSerDeTimeStampTest.instance.deserialize(w))); <BUGS> org.junit.Assert.assertEquals(result.get("five"), java.sql.Timestamp.valueOf("2013-03-27 23:18:40.123456")); <BUGE> } 
private boolean isViewNameValidForCurrentUI(java.lang.String viewName) { <BUGS> final java.util.Set<java.lang.String> beanNames = viewNameToBeanNamesMap.get(viewName); <BUGE> if (beanNames != null) { for (java.lang.String beanName : beanNames) { if (isViewBeanNameValidForCurrentUI(beanName)) { return ((getAccessDeniedView()) != null) || (isAccessGrantedToBeanName(beanName)); } } } return false; } 
<BUGS> private void traiterEmail(java.lang.String email, com.tut.beans.Utilisateur utilisateur) { <BUGE> try { validationEmail(email); } catch (java.lang.Exception e) { setErreur(com.tut.forms.ConnexionForm.CHAMP_IDF, e.getMessage()); } utilisateur = utilisateurDao.trouver(email); if (utilisateur == null) { setErreur(com.tut.forms.ConnexionForm.CHAMP_IDF, "Utilisateur inconnu"); java.lang.System.out.println("traiterEmail() --> Echec de l'inscription : utilisateur non stocké en base de données"); } <BUGS> <BUGE> } 
private boolean compareValues(java.lang.Object fieldValue, com.atlassian.crowd.embedded.api.User user, boolean allowUserInField) { boolean result = !allowUserInField; if (fieldValue instanceof java.lang.String) { <BUGS> if (fieldValue.equals(user.toString())) { <BUGE> result = allowUserInField; } }else { if (fieldValue.equals(user)) { result = allowUserInField; } } return result; } 
@java.lang.Override public void onPreviewFrame(byte[] data, android.hardware.Camera camera) { if (camera == null) return ;  <BUGS> float step = camera.getParameters().getExposureCompensationStep(); EV = java.lang.Math.max(step, (step * (camera.getParameters().getExposureCompensation()))); <BUGE> } 
public void setRuntime(long runtime) { if ((this.pauseTime) > 0) { this.startTime = (this.pauseTime) - runtime; }else { <BUGS> this.startTime = (com.badlogic.gdx.utils.TimeUtils.millis()) - runtime; <BUGE> } } 
public static boolean openFolder(java.lang.String path) { java.awt.Desktop desktop = java.awt.Desktop.getDesktop(); <BUGS> java.io.File dirToOpen = null; <BUGE> try { dirToOpen = new java.io.File(path); desktop.open(dirToOpen); } catch (java.lang.Exception e) { Control.InvokeProgram.logger.error(org.apache.commons.lang3.exception.ExceptionUtils.getStackTrace(e)); return false; } return true; } 
public void solve(int nb, int source, int destination, int auxiliary) throws hanoi.TowerIsEmptyException, hanoi.TowerIsFullException { if (nb == 1) { this.moveOneDisc(source, destination); }else { <BUGS> this.solve((nb - 1), source, destination, auxiliary); <BUGE> this.moveOneDisc(source, destination); <BUGS> this.solve((nb - 1), auxiliary, source, destination); <BUGE> } } 
public models.Trainer searchTrainersByEmail(java.lang.String emailEntered) { <BUGS> java.lang.String searchByMail = new java.lang.String(""); <BUGE> if ((trainers.size()) > 0) { <BUGS> for (models.Trainer trainer : trainers) { if (emailEntered.equals(trainer.getEmail())) { return trainer; }else { return null; <BUGE> } <BUGS> } }else { <BUGE> return null; } return null; } 
private int[] quicksort(int[] list, int low, int high) { <BUGS> if (low > high) <BUGE> return list;  int pos = partition(list, low, high); quicksort(list, low, (pos - 1)); quicksort(list, (pos + 1), high); <BUGS> <BUGE> } 
@java.lang.Override public void onWindowFocusChanged(boolean hasFocus) { super.onWindowFocusChanged(hasFocus); if (hasFocus) { setTitle(selectedClub); if (!(de.schneider_simon.minigolfscores.PlayRound.isPutViewsDone)) { playRoundViews.putViewsIntoGridlayout(); <BUGS> <BUGE> de.schneider_simon.minigolfscores.PlayRound.isPutViewsDone = true; } <BUGS> playRoundViews.writeContentToViews(playRoundContent); <BUGE> } } 
public final void applyTransformation(eu.modernmt.model.Word source) { if ((this.transformation) == null) { if ((source == null) || (!(source.placeholder.equals(this.placeholder)))) this.text = this.placeholder; else this.text = source.text;  }else { this.transformation.apply(source, this); <BUGS> <BUGE> } } 
@java.lang.Override protected java.lang.Exception doInBackground(java.lang.Void... params) { cat.ie.challengeaccepted.WS.ChallengeAcceptedWsServiceSoapBinding service = new cat.ie.challengeaccepted.WS.ChallengeAcceptedWsServiceSoapBinding(); cat.ie.challengeaccepted.WS.User user = new cat.ie.challengeaccepted.WS.User(); user.email = mEmail; user.password = mPassword; java.lang.System.out.println(user.email); java.lang.System.out.println(user.password); try { showProgress(true); android.util.Log.i("LOGIN", "LogIn"); remoteUser = service.logIn(user); } catch (java.lang.Exception e) { return e; } <BUGS> <BUGE> return null; } 
@java.lang.Override protected java.util.List<mx.evin.udacity.popularmovies.entities.ReviewResult> doInBackground(java.lang.Integer... params) { <BUGS> java.lang.String movieId = ((params.length) < 1) ? java.lang.String.valueOf(params[0]) : "293660"; <BUGE> mx.evin.udacity.popularmovies.network.MoviesRetrofit moviesRetrofit = new mx.evin.udacity.popularmovies.network.MoviesRetrofit(); mx.evin.udacity.popularmovies.entities.ReviewPage reviewPage = moviesRetrofit.getReviews(movieId); return reviewPage.getReviewResults(); } 
@org.springframework.web.bind.annotation.RequestMapping(value = "/search", method = org.springframework.web.bind.annotation.RequestMethod.GET) public org.springframework.web.servlet.ModelAndView doGet(javax.servlet.http.HttpServletRequest request) { javax.servlet.http.HttpSession session = request.getSession(); java.lang.String requestQuery = request.getParameter("search"); java.util.List<kawahara.models.SearchModel> allSearchResults = searchService.getSearchResults(requestQuery); int pageIndex = getPageIndex(session, requestQuery, allSearchResults, request); <BUGS> <BUGE> return setAttributes(session, requestQuery, pageIndex, allSearchResults); } 
@java.lang.Override public void dispose() { dataset = null; displayService.getDisplays().remove(display); imageDisplayService.getImageDisplays().remove(display); display.clear(); <BUGS> dataset = null; <BUGE> display.close(); display = null; java.lang.System.gc(); } 
@java.lang.Override public void onClick(android.content.DialogInterface dialog, int which) { if ((mCallback) == null) { android.util.Log.e(net.exclaimindustries.geohashdroid.fragments.MapTypeDialogFragment.DEBUG_TAG, "There's no callback set!"); return ; } dialog.dismiss(); switch (which) { case 0 : mCallback.mapTypeSelected(GoogleMap.MAP_TYPE_NORMAL); break; case 1 : mCallback.mapTypeSelected(net.exclaimindustries.geohashdroid.fragments.MapTypeDialogFragment.MAP_STYLE_NIGHT); break; case 2 : <BUGS> mCallback.mapTypeSelected(GoogleMap.MAP_TYPE_TERRAIN); <BUGE> break; case 3 : <BUGS> mCallback.mapTypeSelected(GoogleMap.MAP_TYPE_HYBRID); <BUGE> } } 
@java.lang.Override public void handle(se.kth.news.core.news.CheckNewsResponse newsMsg, se.sics.ktoolbox.util.network.KContentMsg<?, ?, se.kth.news.core.news.CheckNewsResponse> container) { java.util.ArrayList<se.kth.news.core.news.News> newsToAdd = container.getContent().getNews(); <BUGS> java.lang.System.out.println(("NUMBER OF NEWS NODE ADOPTS FROM NEIGHBOUR NODE: " + (container.getContent().getNews().size()))); <BUGE> for (se.kth.news.core.news.News n : newsToAdd) { if (!(news.contains(n))) { logReceivedNews(n); } } } 
@java.lang.Override public boolean handleChange(java.lang.Object oldValue, java.lang.Object newValue, org.eclipse.draw2d.IFigure refreshableFigure) { <BUGS> if ((traceDataProvider[index]) == null) { <BUGE> trace[index].setTraceColor(getModelColor(((org.csstudio.sds.component.xygraph.model.XyGraphModel.PROP_PRIMARY_AXIS_TRACE_COLOR_PREFIX) + index))); } return true; } 
public static int findMax(int[][] a) { int max = java.lang.Integer.MIN_VALUE; for (int i = 0; i < (a.length); i++) { <BUGS> for (int j = 0; j < (a.length); j++) { <BUGE> if ((a[i][j]) > max) { max = a[i][j]; } } } return max; } 
public br.unicamp.ic.lis.tograph.graph.GraphNode createNode(java.lang.String label, br.unicamp.ic.lis.tograph.graph.GraphElementProperties properties) throws java.lang.Exception { <BUGS> java.util.Map<java.lang.String, java.lang.Object> nodeProperties = new java.util.HashMap<>(); <BUGE> for (br.unicamp.ic.lis.tograph.graph.GraphElementProperty property : properties) { nodeProperties.put(property.getKey(), property.getValue()); } java.lang.Long created = inserter.createNode(nodeProperties, org.neo4j.graphdb.DynamicLabel.label(label)); return new br.unicamp.ic.lis.tograph.graph.GraphNode(new java.net.URI(java.lang.String.valueOf(created)), label, this); } 
<BUGS> public void generateSmallToast(java.lang.String info) { <BUGE> final android.widget.Toast toast = android.widget.Toast.makeText(getBaseContext(), info, Toast.LENGTH_SHORT); toast.show(); new android.os.Handler().postDelayed(new java.lang.Runnable() { @java.lang.Override public void run() { toast.cancel(); } }, 500); } 
private void checkSingleExpandMode(int currExpandedParentPosition) { if ((mExpandCollapseMode.mode) != (com.github.huajianjiang.expandablerecyclerview.widget.ExpandableAdapter.ExpandCollapseMode.MODE_SINGLE_EXPAND)) return ;  final int lastExpandedPosition = mExpandCollapseMode.lastExpandedPosition; if (lastExpandedPosition == currExpandedParentPosition) return ;  com.github.huajianjiang.expandablerecyclerview.util.Logger.e(com.github.huajianjiang.expandablerecyclerview.widget.ExpandableAdapter.TAG, (("checkSingleExpandMode " + "---->lastExpandedPosition=*") + lastExpandedPosition)); <BUGS> collapseView(lastExpandedPosition, true); <BUGE> mExpandCollapseMode.lastExpandedPosition = currExpandedParentPosition; } 
private javax.mail.Message[] searchMailbox(javax.mail.Folder folder) throws javax.mail.MessagingException { com.einzig.ipst2.util.PreferencesHelper helper = new com.einzig.ipst2.util.PreferencesHelper(activity.getApplicationContext()); org.joda.time.LocalDate lastParseDate = getLastParseDate(helper.get(helper.parseDateKey())); <BUGS> return folder.search(getSearchTerm(lastParseDate, false)); <BUGE> } 
@java.lang.Override public android.support.v4.app.Fragment getItem(int position) { switch (position) { case 0 : return chatFragment; <BUGS> case 2 : return publicGroupFragment; <BUGE> case 1 : if ((contactsFragment) != null) { return contactsFragment; } return contactsFragment = new com.superchat.ui.ContactsScreen(); <BUGS> <BUGE> case 3 : return bulletinFragment; default : return new com.superchat.ui.TempFragment(); } } 
private com.intellij.psi.PsiFile mockPsiFile(java.lang.String text) { <BUGS> com.intellij.psi.PsiFile psiFile = org.mockito.Mockito.mock(com.intellij.psi.PsiFile.class); org.mockito.Mockito.when(psiFile.getText()).thenReturn(text); org.mockito.Mockito.when(psiFile.getChildren()).thenReturn(new com.intellij.psi.PsiElement[]{ org.mockito.Mockito.mock(com.intellij.psi.PsiElement.class) }); <BUGE> return psiFile; } 
private void spreadSkylightDownwards(int x, int z) { final int highestBlock = getHighestBlock(x, z); final int sectionY = highestBlock / (Section.SECTION_HEIGHT); byte light = World.DEFAULT_SKY_LIGHT; for (int y = sectionY; y >= 0; --y) { final net.morbz.minecraft.world.Section section = sections[sectionY]; if (section != null) { light = section.spreadSkylightDownwards(x, z, light); <BUGS> <BUGE> } } } 
java.lang.String add(de.hk.wfh.rs.FilterContext filterContext, java.lang.String line) { boolean containsFilter = containsPattern(line, filterContext.getFilterList()); boolean containsIgnore = containsPattern(line, filterContext.getIgnoreList()); <BUGS> if ((containsFilter && containsIgnore) || ((!containsFilter) && (!containsIgnore))) { <BUGE> return ("<- ignore-filter conflict -> " + line) + "\n"; }else if (containsFilter && (!containsIgnore)) { return line + "\n"; }  return "\n"; } 
private com.alphatica.genotick.genotick.RobotData createDataUpToTimePoint(int i) { java.util.List<double[]> list = new java.util.ArrayList<>(); for (double[] original : values) { double[] copy = copyReverseArray(original, i); list.add(copy); } <BUGS> try { java.lang.Double futureChange = calculateFutureChange(timePoints[i]); return com.alphatica.genotick.genotick.RobotData.createData(list, name, futureChange); } catch (com.alphatica.genotick.data.NoDataForTimePointException ex) { return com.alphatica.genotick.genotick.RobotData.createEmptyData(name); } <BUGE> } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); android.view.LayoutInflater inflater = ((android.view.LayoutInflater) (getSystemService(de.prismatikremote.hartz.prismatikremote.activities.LAYOUT_INFLATER_SERVICE))); mDrawerLayout.addView(inflater.inflate(R.layout.activity_settings, null)); <BUGS> android.widget.Button allowNotifications = ((android.widget.Button) (findViewById(R.id.allowNotifications))); allowNotifications.setOnClickListener(this); <BUGE> android.widget.Button applySettings = ((android.widget.Button) (findViewById(R.id.apply_settings))); applySettings.setOnClickListener(this); updateUi(); } 
private void updateKLargestComments() { componentSizeCommentMap.clear(); for (org.wso2.siddhi.debs2016.graph.CommentLikeGraph commentLikeGraph : commentStore.values()) { long sizeOfComponent = commentLikeGraph.getSizeOfLargestConnectedComponent(); <BUGS> if (sizeOfComponent > 0) { java.lang.System.out.println("DDDDDDDDDDD"); } <BUGE> if (sizeOfComponent == 0) { continue; } java.lang.String comment = commentLikeGraph.getComment(); componentSizeCommentMap.put(sizeOfComponent, comment); <BUGS> componentSizeCommentMap.hashCode(); <BUGE> } } 
@org.springframework.web.bind.annotation.RequestMapping(value = "/loginaction", method = org.springframework.web.bind.annotation.RequestMethod.POST) public java.lang.String loginAction(com.acae.entity.UserProfile user, javax.servlet.http.HttpSession session) { com.acae.entity.UserProfile userProfile = loginService.getUserProfile(user.getUserId(), user.getPassword()); if (userProfile != null) { session.setAttribute("userProfile", userProfile); <BUGS> session.setAttribute("role", userProfile.getRole()); <BUGE> return "/index"; }else { session.setAttribute("errorMessage", "Wrong User ID or Password"); return "/menu/login"; } } 
<BUGS> private static void post(java.lang.String url, java.lang.String requestBodyString, com.chinamobile.iot.onenet.OneNetApiCallback callback) { <BUGE> com.chinamobile.iot.onenet.OneNetApi.assertInitialized(); com.chinamobile.iot.onenet.OneNetApi.assertUIThread(); com.chinamobile.iot.onenet.OneNetApi.assertUrlConfigured(); okhttp3.RequestBody requestBody = okhttp3.RequestBody.create(okhttp3.MediaType.parse("application/json; charset=utf-8"), requestBodyString); com.chinamobile.iot.onenet.OneNetApi.sHttpExecutor.post(url, requestBody, new com.chinamobile.iot.onenet.OneNetApiCallbackAdapter(callback)); } 
<BUGS> private void synchronizeFounders() { <BUGE> mLastSyncTime = java.lang.System.currentTimeMillis(); int maxVersion = maxFounderVersion(); int serverMaxVersion = 0; serverMaxVersion = syncDeletedFounders(serverMaxVersion); serverMaxVersion = syncNewFounders(serverMaxVersion); serverMaxVersion = syncDirtyFounders(serverMaxVersion); <BUGS> syncServerFounderUpdates(maxVersion, serverMaxVersion); <BUGE> } 
public void toggleEventInvite(android.view.View view) { <BUGS> int id = view.getId(); <BUGE> android.widget.CheckBox chkFriend = ((android.widget.CheckBox) (view)); if (chkFriend.isChecked()) { android.util.Log.d(com.sarahrobinson.finalyearproject.activities.MainActivity.TAG, "Added to invite list"); }else { android.util.Log.d(com.sarahrobinson.finalyearproject.activities.MainActivity.TAG, "Removed from invite list"); } } 
private synchronized void buildGoogleApiClient() { if ((mGoogleApiClient) == null) { <BUGS> mGoogleApiClient = new com.google.android.gms.common.api.GoogleApiClient.Builder(this).addApi(Nearby.MESSAGES_API, new com.google.android.gms.nearby.messages.MessagesOptions.Builder().setPermissions(NearbyPermissions.BLE).setPermissions(NearbyPermissions.MICROPHONE).setPermissions(NearbyPermissions.BLUETOOTH).build()).addConnectionCallbacks(this).enableAutoManage(this, this).build(); <BUGE> } } 
@java.lang.Override public void run() { org.apache.http.client.HttpClient httpClient = clientFactory.getHttpClient(); preemptivelySetAuthCredentials(httpClient); request.addHeader("Content-Type", "application/json"); request.addHeader("Accept", "multipart/related"); <BUGS> <BUGE> request.addHeader("X-Accept-Part-Encoding", "gzip"); <BUGS> request.addHeader("User-Agent", Manager.USER_AGENT); <BUGE> request.addHeader("Accept-Encoding", "gzip, deflate"); addRequestHeaders(request); setBody(request); executeRequest(httpClient, request); } 
private com.hutgroup.robocode.server.RoundResult toRoundResult(int roundId, com.hutgroup.robocode.server.IRobotSnapshot robotSnapshot) { double energyLeft = robotSnapshot.getEnergy(); <BUGS> int playerId = robotSnapshot.getTeamIndex(); <BUGE> com.hutgroup.robocode.server.IScoreSnapshot snapshot = robotSnapshot.getScoreSnapshot(); <BUGS> <BUGE> double gunDamage = (snapshot.getCurrentBulletDamageScore()) + (snapshot.getCurrentBulletKillBonus()); double ramDamage = (snapshot.getCurrentRammingDamageScore()) + (snapshot.getCurrentRammingKillBonus()); return new com.hutgroup.robocode.server.RoundResult(roundId, playerId, energyLeft, ramDamage, gunDamage); } 
public void setUniformMatrix(int loc, boolean transposed, org.joml.Matrix4f mat) { if (loc == (-1)) return ;  if ((example.ShaderProgram.buf16Pool) == null) example.ShaderProgram.buf16Pool = org.lwjgl.BufferUtils.createFloatBuffer(16);  example.ShaderProgram.buf16Pool.clear(); mat.get(example.ShaderProgram.buf16Pool); <BUGS> example.ShaderProgram.buf16Pool.flip(); <BUGE> glUniformMatrix4fv(loc, transposed, example.ShaderProgram.buf16Pool); } 
public boolean insertBudget(final java.lang.String name, final int max) { android.database.sqlite.SQLiteDatabase db = getWritableDatabase(); android.content.ContentValues contentValues = new android.content.ContentValues(); contentValues.put(protect.budgetwatch.DBHelper.BudgetDbIds.NAME, name); contentValues.put(protect.budgetwatch.DBHelper.BudgetDbIds.MAX, max); final long newId = db.insert(protect.budgetwatch.DBHelper.BudgetDbIds.TABLE, null, contentValues); <BUGS> return newId != 1; <BUGE> } 
<BUGS> public static <T> void serialize(T object, java.lang.Class<T> sourceClass, java.io.OutputStream resultStream) throws javax.xml.bind.JAXBException { javax.xml.bind.JAXBContext jaxbContext = javax.xml.bind.JAXBContext.newInstance(sourceClass); <BUGE> javax.xml.bind.Marshaller jaxbMarshaller = jaxbContext.createMarshaller(); jaxbMarshaller.setProperty(javax.xml.bind.Marshaller.JAXB_FORMATTED_OUTPUT, true); jaxbMarshaller.marshal(object, resultStream); } 
public static <From, To> To convert(From object, java.lang.Class<From> from, java.lang.Class<To> to, org.oscm.dataservice.local.DataService ds) { org.oscm.converter.strategy.ConversionStrategy<From, To> converter = org.oscm.converter.strategy.ConversionFactory.getConverter(from, to, ds); <BUGS> converter.setDataService(ds); <BUGE> return converter.convert(object); } 
@java.lang.Override public void onComplete(java.lang.String response) { super.onComplete(response); if (!(android.text.TextUtils.isEmpty(response))) { if (response.startsWith("{\"statuses\"")) { mStatusList = com.sina.weibo.sdk.openapi.models.StatusList.parse(response); <BUGS> if ((mStatusList.statusList.size()) > 0) { <BUGE> setViewData(mStatusList.statusList); }else { android.util.Log.d(com.bricechou.weiboclient.fragment.HomeFragment.TAG, "Refresh onComplete: No Result."); refreshViewDone(); } } } } 
@java.lang.Override public void doControl() { if (cameraData.isNewPacketAvailable()) { us.ihmc.humanoidRobotics.communication.packets.sensing.VideoPacket vidPack = cameraData.getLatestPacket(); <BUGS> java.lang.System.out.println(vidPack.videoSource.toString()); <BUGE> if (!(testImage)) { try { java.io.InputStream in = new java.io.ByteArrayInputStream(vidPack.getData()); javax.imageio.ImageIO.write(javax.imageio.ImageIO.read(in), "png", new java.io.File("testImage")); } catch (java.io.IOException e) { } testImage = true; } }else { <BUGS> java.lang.System.out.println("Nothing Works"); <BUGE> } } 
@java.lang.Override protected void initialiseOWLView() throws java.lang.Exception { obdaModelManager = ((org.semanticweb.ontop.protege.core.OBDAModelManager) (getOWLEditorKit().get(it.unibz.krdb.obda.model.impl.OBDAModelImpl.class.getName()))); obdaModelManager.addListener(this); <BUGS> org.protege.editor.owl.model.OWLModelManager owlModelManager = getOWLEditorKit().getOWLModelManager(); <BUGE> setLayout(new java.awt.BorderLayout()); <BUGS> editor = new org.semanticweb.ontop.protege.panels.DatasourceParameterEditorPanel(obdaModelManager.getActiveOBDAModel(), owlModelManager); <BUGE> add(editor, java.awt.BorderLayout.NORTH); org.semanticweb.ontop.protege.views.DatasourcesManagerView.log.debug("Datasource browser initialized"); } 
@java.lang.Override public void onRefresh() { if (it.asg.hustle.Utils.CheckConnection.isConnected(getActivity())) { <BUGS> android.util.Log.d("HUSTLE", ("refresh on " + (tabPosition))); <BUGE> downloadFriendShows(gridAdapter[tabPosition], true); }else { android.widget.Toast.makeText(getActivity(), getResources().getString(R.string.toast_failure_refresh), Toast.LENGTH_SHORT).show(); swipeView.setRefreshing(false); } } 
<BUGS> private static void sendResultWithDns(boolean result, int result_code, java.lang.String dns1, java.lang.String dns2) { <BUGE> android.content.Intent result_intent = new android.content.Intent(ValueConstants.ACTION_SET_DNS); <BUGS> result_intent.putExtra("result", result); <BUGE> result_intent.putExtra("result_code", result_code); result_intent.putExtra("dns1", dns1); result_intent.putExtra("dns2", dns2); } 
@java.lang.Override public void wae() { ic.commitText(java.lang.String.valueOf(automata.execute(new int[]{ -1 , D_UP , -1 , -1 , -1 }, ic)), 1); <BUGS> ic.commitText(java.lang.String.valueOf(automata.execute(new int[]{ -1 , -1 , D_RIGHT , -1 , -1 }, ic)), 1); <BUGE> } 
private static <D extends org.jetbrains.kotlin.resolve.CallableDescriptor> void collectAllOverriddenDescriptors(@org.jetbrains.annotations.NotNull D current, @org.jetbrains.annotations.NotNull java.util.Set<D> result) { if (result.contains(current)) return ;  for (org.jetbrains.kotlin.resolve.CallableDescriptor callableDescriptor : current.getOriginal().getOverriddenDescriptors()) { @java.lang.SuppressWarnings(value = "unchecked") <BUGS> D descriptor = ((D) (callableDescriptor)); <BUGE> org.jetbrains.kotlin.resolve.DescriptorUtils.collectAllOverriddenDescriptors(descriptor, result); result.add(descriptor); } } 
@org.testng.annotations.Test public void testLongs2() throws java.lang.Exception { final io.github.pr0methean.betterrandom.prng.BaseRandom prng = createRng(); <BUGS> io.github.pr0methean.betterrandom.prng.RandomTestUtils.checkStream(prng, 42, prng.longs((1L << 40), (1L << 42)), (-1), (1 << 40), (1 << 42), alwaysCheckEntropy()); <BUGE> } 
public spell.INode find(java.lang.String word) { spell.Node temp = root; for (int i = 0; i < (word.length()); i++) { int index = indexByLetter(word.charAt(i)); if (temp.hasNode(index)) { temp = temp.getNode(index); }else { return null; } } <BUGS> return temp; <BUGE> } 
public void print(boolean printable) { if (printable) { if ((-1) == (client.networkInterceptors().indexOf(org.fintx.http.HttpClientBase.networkInterceptor))) { client = client.newBuilder().addNetworkInterceptor(org.fintx.http.HttpClientBase.networkInterceptor).build(); } }else { <BUGS> client.networkInterceptors().remove(org.fintx.http.HttpClientBase.networkInterceptor); <BUGE> } } 
private void saveImagePixels() { <BUGS> for (int xPixel = 0; xPixel < ((this.width) - 1); ++xPixel) { for (int yPixel = 0; yPixel < ((this.height) - 1); ++yPixel) { <BUGE> this.setPixel(xPixel, yPixel, imageArray[xPixel][yPixel].getColor()); } } } 
private void checkLineIndent(int lineNum, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel indentLevel) { final java.lang.String line = indentCheck.getLine((lineNum - 1)); <BUGS> final int start = getLineStart(line); if (indentLevel.isGreaterThan(start)) { logChildError(lineNum, start, indentLevel); <BUGE> } } 
<BUGS> private void msgNearby(org.bukkit.entity.Player p, java.lang.String msg) { <BUGE> org.bukkit.entity.Entity en; label58 : for (java.util.Iterator localIterator = p.getNearbyEntities(48.0, 48.0, 48.0).iterator(); localIterator.hasNext(); ((org.bukkit.entity.Player) (en)).sendMessage(msg)) { en = ((org.bukkit.entity.Entity) (localIterator.next())); if ((!(en instanceof org.bukkit.entity.Player)) || (en == p)) break label58;  } } 
@java.lang.Override protected org.payn.chsm.io.ModelBuilder loadBuilder() throws java.lang.Exception { org.payn.chsm.io.xmltools.ElementBuilder builderElem = documentConfig.getBuilderElement(); java.lang.String classPath = builderElem.getClassPath(); if (!(classPath.equals(""))) { <BUGS> return ((org.payn.chsm.io.ModelBuilder) (org.payn.chsm.io.ModelLoader.createObjectInstance(getClass().getClassLoader(), builderElem.getFile(pathRoot), classPath, java.lang.String.format("Builder %s", classPath)))); <BUGE> }else { return null; } } 
private void addRow(java.lang.String[] row) { for (int i = 0; i < (nOfColumns); ++i) { <BUGS> data.addEntity(new org.online.etl.model.abstractions.Entity(currentId, ((long) (i)), "", "String", "")); <BUGE> } } 
public static void add(javax.servlet.http.HttpSession session, java.lang.String key, java.lang.Object value) { <BUGS> java.util.Map<java.lang.String, java.lang.Object> map = com.liferay.portal.kernel.servlet.SessionErrors._getMap(session, true); <BUGE> if (map == null) { return ; } map.put(key, value); } 
<BUGS> public void updateNodeInMap(src.Node n, java.util.Map<java.lang.String, src.Node> map) { <BUGE> src.Node nodeFromMap = map.get(n.getState().toString()); if ((nodeFromMap.getTotalCost()) > (n.getTotalCost())) { map.remove(nodeFromMap.getState().toString()); map.put(n.getState().toString(), n); } <BUGS> <BUGE> } 
<BUGS> public org.json.JSONObject toJson(org.json.JSONObject attrToFilterJsonObject) { <BUGE> org.json.JSONObject toJson = new org.json.JSONObject(); toJson.put(BoraApplicationConstants.EVENT_ID_KEY_JSON, id).put(BoraApplicationConstants.EVENT_NAME_KEY_JSON, name).put(BoraApplicationConstants.EVENT_DATE_KEY_JSON, date).put(BoraApplicationConstants.EVENT_ATTENDEES_KEY_JSON, attendees).put(BoraApplicationConstants.EVENT_PHOTOS_KEY_JSON, photoNames); return toJson; } 
<BUGS> public static java.util.Set<me.newyith.util.Point> getPointsConnected(me.newyith.util.Point origin, java.util.Set<org.bukkit.Material> wallBlocks, java.util.Set<org.bukkit.Material> returnBlocks, int rangeLimit, java.util.Set<me.newyith.util.Point> ignorePoints, java.util.Set<me.newyith.util.Point> searchablePoints) { java.util.Set<me.newyith.util.Point> originLayer = new java.util.HashSet<>(); originLayer.add(origin); <BUGE> java.util.List<java.util.List<me.newyith.util.Point>> layers = me.newyith.generator.Wall.getPointsConnectedAsLayers(origin, originLayer, wallBlocks, returnBlocks, rangeLimit, ignorePoints, searchablePoints, me.newyith.generator.Wall.ConnectedThreshold.FACES); return me.newyith.generator.Wall.flattenLayers(layers); } 
<BUGS> private void processExtensionsDependencies() throws org.apache.maven.plugin.MojoExecutionException { <BUGE> java.util.Collection<org.apache.maven.artifact.Artifact> artifacts = (isExcludeTransitive()) ? getProject().getDependencyArtifacts() : getProject().getArtifacts(); for (org.codehaus.mojo.webstart.JnlpExtension extension : jnlpExtensions) { org.apache.maven.artifact.resolver.filter.ArtifactFilter filter = new org.apache.maven.artifact.resolver.filter.IncludesArtifactFilter(extension.getIncludes()); for (org.apache.maven.artifact.Artifact artifact : artifacts) { if (filter.include(artifact)) { processExtensionDependency(extension, artifact); } } } } 
public dataAccessLayer.SonarOrganisation loadOrganisation(java.lang.String filepath) { businessLogicLayer.setUp.Organisation result = null; try { javax.xml.bind.JAXBContext jaxbContext = javax.xml.bind.JAXBContext.newInstance(businessLogicLayer.setUp.Organisation.class); javax.xml.bind.Unmarshaller jaxbUnmarshaller = jaxbContext.createUnmarshaller(); result = ((businessLogicLayer.setUp.Organisation) (jaxbUnmarshaller.unmarshal(new java.io.File(filepath)))); <BUGS> <BUGE> } catch (javax.xml.bind.JAXBException e) { e.printStackTrace(); } return organisationConverter(result); } 
private void addJSONObjectInterceptor(com.navercorp.pinpoint.bootstrap.plugin.ProfilerPluginContext context) { com.navercorp.pinpoint.bootstrap.plugin.transformer.ClassFileTransformerBuilder builder = context.getClassFileTransformerBuilder("net.sf.json.JSONObject"); <BUGS> builder.editMethod("fromObject", "java.lang.Object").injectInterceptor("com.navercorp.pinpoint.plugin.json.lib.interceptor.JsonLibMethodInterceptor", JsonLibConstants.SERVICE_TYPE).group(com.navercorp.pinpoint.plugin.json.lib.JsonLibPlugin.GROUP); builder.editMethod("toBean", "net.sf.json.JSONObject").injectInterceptor("com.navercorp.pinpoint.plugin.json.lib.interceptor.JsonLibMethodInterceptor", JsonLibConstants.SERVICE_TYPE).group(com.navercorp.pinpoint.plugin.json.lib.JsonLibPlugin.GROUP); builder.editMethod("toString").injectInterceptor("com.navercorp.pinpoint.plugin.json.lib.interceptor.JsonLibMethodInterceptor", JsonLibConstants.SERVICE_TYPE).group(com.navercorp.pinpoint.plugin.json.lib.JsonLibPlugin.GROUP); <BUGE> java.lang.instrument.ClassFileTransformer transformer = builder.build(); context.addClassFileTransformer(transformer); } 
@org.junit.Before public void setUp() throws java.lang.Exception { mediaPlayer = org.mockito.Mockito.mock(android.media.MediaPlayer.class); org.mockito.Mockito.when(mediaPlayer.getDuration()).thenReturn(org.mercycorps.translationcards.manager.MediaPlayerManagerTest.SOME_DURATION); translation = org.mockito.Mockito.mock(Dictionary.Translation.class); <BUGS> org.mockito.Mockito.when(translation.getFilename()).thenReturn(org.mercycorps.translationcards.manager.MediaPlayerManagerTest.ANY_FILENAME); <BUGE> mediaPlayerManager = new org.mercycorps.translationcards.media.MediaPlayerManager(mediaPlayer); } 
private boolean solveH(int col) { int i = 0; <BUGS> int count = 0; <BUGE> for (i = 0; i < (board.length); i++) { if (addQueen(i, col)) { if ((col > ((board[0].length) - 2)) || (solveH((col + 1)))) { return true; }else { removeQueen(i, col); } } } return false; } 
public void mainMenu() { <BUGS> presenter.displayItemsAsMenuOptions(menuOptions); <BUGE> com.twu.biblioteca.Option optionSelected; do { <BUGS> <BUGE> int userInput = presenter.getUserInput(menuOptions.size()); optionSelected = menuOptions.get((userInput - 1)); optionSelected.onSelect(); } while (!(optionSelected instanceof com.twu.biblioteca.QuitOption) ); } 
public org.mapeditor.core.Map nextTurn() { if (!(isGameOver())) { boolean isStalemateForPlayer = isStalemateTurnForPlayer(utilties.models.Game.PLAYER_ID); boolean isStalemateForOpponent = isStalemateTurnForPlayer(utilties.models.Game.OPPONENT_ID); <BUGS> if (isStalemateForPlayer && isStalemateForOpponent) { <BUGE> _isStalemate = true; this._isGameOver = true; }else if ((this._numberOfTurnsCompleted) > (utilties.models.Game.MAX_TURN_LIMIT)) { _isStalemate = true; this._isGameOver = true; }  (this._numberOfTurnsCompleted)++; } return this._entityMap.getMap(); } 
public void dispose() { for (com.badlogic.ashley.core.EntitySystem sys : com.spaceproject.screens.SpaceScreen.engine.getSystems()) { if (sys instanceof com.badlogic.gdx.utils.Disposable) ((com.badlogic.gdx.utils.Disposable) (sys)).dispose();  } for (com.badlogic.ashley.core.Entity ents : com.spaceproject.screens.SpaceScreen.engine.getEntities()) { com.spaceproject.components.TextureComponent tex = ents.getComponent(com.spaceproject.components.TextureComponent.class); if (tex != null) tex.texture.dispose();  } <BUGS> com.spaceproject.screens.SpaceScreen.engine.removeAllEntities(); <BUGE> } 
private void setSpotColor(javax.swing.JButton buttonToChange, java.lang.String playerNameOnSpot) { if ((playerNameOnSpot == null) || ("".equals(playerNameOnSpot))) { <BUGS> return ; } if (myPlayerController.getPlayer1Name().equals(playerNameOnSpot)) { buttonToChange.setIcon(black_icon); <BUGE> }else <BUGS> if (myPlayerController.getPlayer2Name().equals(playerNameOnSpot)) { buttonToChange.setIcon(red_icon); } <BUGE>  } 
@java.lang.Override public void onClick(android.view.View v) { <BUGS> convert_time(); <BUGE> java.lang.String hour = com.bitballoon.se4351_synapps.synapps.EditNotificationActivity.pad(mHour); java.lang.String min = com.bitballoon.se4351_synapps.synapps.EditNotificationActivity.pad(mMinute); print_notification(noti_input.getText().toString(), hour, min); showNotification(noti_input.getText().toString(), hour, min, mAMPM, date_data); } 
private void displayFragment(android.support.v4.app.Fragment fragment, java.lang.String title) { android.support.v4.app.FragmentManager fragmentManager = getSupportFragmentManager(); android.support.v4.app.FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction(); fragmentTransaction.replace(R.id.page_body, fragment); <BUGS> fragmentTransaction.addToBackStack(null); <BUGE> fragmentTransaction.commit(); <BUGS> getSupportActionBar().setTitle(title); <BUGE> } 
private void handleRemovePlayer() { guiController.showMessage("You couldnt pay and are now out of the game!"); guiController.removePlayer(playerController.getCurrentPlayer(), fieldController.getFields()); playerController.getPlayerList().remove(playerController.getCurrentPlayer()); <BUGS> (turn)--; <BUGE> } 
<BUGS> private static void rauswerfen(int neuesFeld, int spielerNummer) { <BUGE> for (int rspielerNummer : si.projekt.maedn.Spiel.spieler.keySet()) { if (rspielerNummer != spielerNummer) { si.projekt.maedn.Spieler rspieler = si.projekt.maedn.Spiel.spieler.get(rspielerNummer); for (int spielFigurNummer : rspieler.holeSpielfiguren().keySet()) { si.projekt.maedn.Spielfigur spielFigur = rspieler.holeSpielfiguren().get(spielFigurNummer); if ((spielFigur.feldnummer) == neuesFeld) { spielFigur.rauswerfen(); <BUGS> <BUGE> } } } } <BUGS> <BUGE> } 
@java.lang.Override public void onClick(android.view.View v) { existingProduct.setQuantityOrWeight(java.lang.Double.valueOf(holder.editTextQuantity.getText().toString())); <BUGS> <BUGE> existingProductDAO.update(existingProduct); <BUGS> existingProducts.set(holder.getAdapterPosition(), existingProduct); <BUGE> if ((mOnDataChangeListener) != null) { mOnDataChangeListener.onDataChanged(existingProducts); } notifyDataSetChanged(); } 
<BUGS> private eu.europeana.corelib.definitions.edm.beans.FullBean retrieveRecord(java.lang.String europeanaId, int hierarchyTimeout) throws eu.europeana.corelib.edm.exceptions.MongoDBException, eu.europeana.corelib.edm.exceptions.MongoRuntimeException, eu.europeana.corelib.neo4j.exception.Neo4JException { <BUGE> long startTime = java.lang.System.currentTimeMillis(); <BUGS> eu.europeana.corelib.definitions.edm.beans.FullBean result = searchService.findById(europeanaId, false, hierarchyTimeout); <BUGE> if (eu.europeana.api2.v2.web.controller.ObjectController.LOG.isDebugEnabled()) { eu.europeana.api2.v2.web.controller.ObjectController.LOG.debug((("SearchService findByID took " + ((java.lang.System.currentTimeMillis()) - startTime)) + " ms")); } return result; } 
@java.lang.Override public void done(com.parse.ParseException e) { if (e != null) { <BUGS> <BUGE> android.util.Log.d(com.gcw.sapienza.places.ShareFragment.TAG, e.getMessage()); }else { resetShareFragment(); ((com.gcw.sapienza.places.com.gcw.sapienza.places.MainActivity) (getActivity())).refresh(); } } 
@java.lang.Override public void onCreate(android.os.Bundle savedInstanceState) { android.util.Log.i("SalesforceDroidGapActivity.onCreate", "onCreate called"); super.onCreate(savedInstanceState); <BUGS> <BUGE> bootconfig = com.salesforce.androidsdk.rest.BootConfig.getBootConfig(this); clientManager = buildClientManager(); passcodeManager = com.salesforce.androidsdk.app.SalesforceSDKManager.getInstance().getPasscodeManager(); userSwitchReceiver = new com.salesforce.androidsdk.ui.sfhybrid.SalesforceDroidGapActivity.DroidGapUserSwitchReceiver(); registerReceiver(userSwitchReceiver, new android.content.IntentFilter(com.salesforce.androidsdk.accounts.UserAccountManager.USER_SWITCH_INTENT_ACTION)); android.webkit.CookieSyncManager.createInstance(this); com.salesforce.androidsdk.util.EventsObservable.get().notifyEvent(EventType.MainActivityCreateComplete, this); } 
@java.lang.Override public void showLodgingList(entity.ResultLodgingList resultLodgingList) { loading = true; java.util.List<entity.ResultLodging> jj = resultLodgingList.getResultLodging(); if (!(nextOffset.equals(resultLodgingList.getStatistics().getOffsetNext().toString()))) { resultLodgings.addAll(jj); adapter.notifyDataSetChanged(); nextOffset = resultLodgingList.getStatistics().getOffsetNext().toString(); <BUGS> <BUGE> } } 
@java.lang.Override public void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); mPage = getArguments().getInt(com.example.vikramjeet.challengerapp.fragments.OpenChallengesFragment.ARG_PAGE); challenges = new java.util.ArrayList<>(); <BUGS> aOpenChallenges = new com.example.vikramjeet.challengerapp.adapters.ChallengeArrayAdapter(getActivity(), challenges); <BUGE> populateData(); } 
@java.lang.Override public void call(caesar.interpreter.CaesarInterpreter interpreter) { caesar.interpreter.buildin.StringClass.logger.log(java.util.logging.Level.FINE, "addString from StringClass is called."); <BUGS> <BUGE> java.lang.String opa = interpreter.getStack().popString(); <BUGS> java.lang.String opb = interpreter.getStack().popString(); <BUGE> java.lang.String result = opa + opb; interpreter.getStack().pushString(result); } 
@java.lang.Override public int compare(com.Ben12345rocks.VotingPlugin.Objects.User p1, com.Ben12345rocks.VotingPlugin.Objects.User p2) { int p1Total = p1.getTotalVotesSite(voteSite); <BUGS> int p2Total = p1.getTotalVotesSite(voteSite); <BUGE> if (p1Total < p2Total) { return 1; } if (p1Total > p2Total) { return -1; } return 0; } 
@org.junit.Test public void testGroupNotPresentInDisplay() throws java.lang.Exception { <BUGS> us.kbase.narrativemethodstore.ValidationResults vr = us.kbase.narrativemethodstore.db.test.ValidatorTest.validate(8); <BUGE> junit.framework.Assert.assertEquals(("" + vr), 0L, ((long) (vr.getIsValid()))); junit.framework.Assert.assertEquals(("" + vr), 1, vr.getErrors().size()); junit.framework.Assert.assertEquals(("" + vr), ("Can't find property [log_entries] within path " + "[parameter-groups] in display.yaml"), vr.getErrors().get(0)); } 
private java.lang.Integer[] compareAndSetStubStatusDelta(java.lang.String rawStubStatus, com.ctrip.zeus.nginx.entity.TrafficStatus trafficStatus) { java.lang.Integer[] stubStatus = com.ctrip.zeus.util.RollingTrafficStatus.parseStubStatusNumber(rawStubStatus.split("\n")); <BUGS> com.ctrip.zeus.util.RollingTrafficStatus.extractStubStatus(com.ctrip.zeus.util.RollingTrafficStatus.getDelta(stubStatus, lastStubStatus), trafficStatus); <BUGE> return stubStatus; } 
public void pop() { astnodes.ASTNode topOfItemStack = itemStack.peek(); <BUGS> if (((stack.size()) > 0) && ((stack.peek().parentCompound) == topOfItemStack)) { <BUGE> stack.pop(); <BUGS> } <BUGE> } 
@org.junit.Test public void testSearch() { <BUGS> int[] numbers = new int[]{ 23 , 76 , 5 , 32 , 2 , 8 , 4 , 9 , 6 }; <BUGE> for (int num : numbers) { tree.insert(num); } int key = 2; assertEquals(2, tree.search(key)); int key2 = 2234; assertEquals(0, tree.search(key2)); } 
public io.ddf.DDF getDDFByUri(java.lang.String uri) throws io.ddf.exception.DDFException { java.util.UUID uuid = this.mUris.get(uri); <BUGS> if (uuid != null) { <BUGE> throw new io.ddf.exception.DDFException(java.lang.String.format("Cannot find ddf with uri %s", uri)); } return this.getDDF(uuid); } 
@java.lang.Override public void run() { org.vanilladb.core.storage.tx.Transaction tx = org.vanilladb.core.server.VanillaDb.txMgr().newTransaction(java.sql.Connection.TRANSACTION_SERIALIZABLE, false, 1); org.elasql.cache.CachedRecord record = org.elasql.cache.tpart.WriteBackTest.createCachedRecord(1, 10001); record.setNewInserted(true); <BUGS> localStorage.writeBack(commonKey, 1, record, tx); <BUGE> } 
static boolean anyPlayers(org.bukkit.Location loc, int range) { <BUGS> java.util.List<org.bukkit.entity.Entity> out = me.badbones69.blockparticles.Api.getNearbyEntities(loc, range, range, range); if (!(out.isEmpty())) { for (org.bukkit.entity.Entity e : out) { if (e instanceof org.bukkit.entity.LivingEntity) { org.bukkit.entity.LivingEntity en = ((org.bukkit.entity.LivingEntity) (e)); if (en instanceof org.bukkit.entity.Player) { return true; <BUGE> } } } <BUGS> <BUGE> } return false; } 
public void login(java.lang.String email, java.lang.String password) { com.weddingcrashers.model.User user = _userService.getUserByEmail(email); com.weddingcrashers.servermodels.LoginContainer loginContainer = new com.weddingcrashers.servermodels.LoginContainer(); if (user != null) { <BUGS> if (user.getPassword().equals(com.weddingcrashers.repositories.Utils.hashPassword(password))) { <BUGE> loginContainer.setUser(user); } } com.weddingcrashers.server.ServerUtils.sendObject(client, loginContainer); } 
@java.lang.Override public src.IR_TYPE_WRAPPER isValid() throws java.lang.Exception { type.isValid(); <BUGS> if (!(size.isValid().equals(new AST.AST_TYPE_TERM(TYPES.INT)))) { <BUGE> throw new java.lang.Exception("invalid array size type"); } computedType = new AST.AST_TYPE_ARRAY(type); return new src.IR_TYPE_WRAPPER(computedType, null); } 
public static void main(java.lang.String[] args) { <BUGS> int[] play = new int[]{ 4 , 8 , 5 , 2 , 3 , 5 , 1 , 6 , 4 , 0 }; java.lang.System.out.println(RightWingGame.solveGameRecursively(play, RightWingGame.DEFAULT_VALUE, RightWingGame.DEFAULT_VALUE)); <BUGE> } 
@java.lang.Override public void changed(drtn.game.screens.ChangeEvent event, com.badlogic.gdx.scenes.scene2d.Actor actor) { if (!(engine.selectedTile().hasRoboticon())) { engine.deployRoboticon(); selectTile(engine.selectedTile(), false); }else { engine.refreshUpgradeOverlay(); upgradeOverlayVisible = true; <BUGS> Gdx.input.setInputProcessor(upgradeOverlay); <BUGE> } } 
public void approachBuilding(java.lang.String bldName) { chronos.pdc.buildings.Building bldg = _bReg.getBuilding(bldName); if (bldg != null) { <BUGS> <BUGE> java.lang.String description = bldg.getExteriorDescription(); java.lang.String imagePath = bldg.getExtImagePath(); displayBuilding(description, imagePath); <BUGS> _currentBldg = bldg; <BUGE> }else { _frame.displayText(civ.BuildingDisplayCiv.NO_BLDG_FOUND); } } 
<BUGS> private void setupAuthenticatedModel(java.lang.String results, org.balaguta.currconv.web.ConversionDto conversion, org.springframework.ui.ModelMap model) { <BUGE> java.util.List<org.balaguta.currconv.data.entity.Conversion> history = conversionService.getHistory(); if ((history.isEmpty()) || (results == null)) { model.put(org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION_HISTORY, history); }else { model.put(org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION_HISTORY, history.subList(1, history.size())); model.put(org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION, history.get(0)); } } 
public ShiftInDay getShift(Shift shift) { switch (shift.getName()) { case "Early Morning Shift" : return earlyMorningShift; case "Morning Shift" : return morningShift; case "Late Morning Shift" : return lateMorningShift; case "Surgery Shift" : return surgeryShift; case "Overnight Shift" : return overnightShift; case "Sunday Shift" : return sundayShift; default : java.lang.System.out.println("Not a valid shift"); break; } <BUGS> <BUGE> } 
@java.lang.Override public void write() { try { if (isNeedFlush()) { flush(); } T data = queue.poll(100, java.util.concurrent.TimeUnit.MICROSECONDS); <BUGS> page.put(data); com.concurrent.sdk.transfer.ConcurrentWriteTransfer.logger.debug("memoryPage put data|{}, page size|{}", data, page.size()); <BUGE> } catch (java.lang.InterruptedException e) { com.concurrent.sdk.transfer.ConcurrentWriteTransfer.logger.error("queue poll data error", e); } } 
private int getCardsCountBeforeCurrentPosition(int position) { int count = 0; <BUGS> if ((shouldShowAppodealAdBanner) && ((ru.aviasales.template.ui.adapter.AdAdapter.APPODEAL_BANNER_POSITION) < position)) <BUGE> count++; <BUGS>  <BUGE> if ((shouldShowAsBanner) && ((ru.aviasales.template.ui.adapter.AdAdapter.AS_BANNER_POSITION) < position)) count++;  return count; } 
@java.lang.Override public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) { view = inflater.inflate(R.layout.fragment_future, container, false); fab = view.findViewById(R.id.futureFab); eventRecycler = view.findViewById(R.id.eventsRecycler); eventRecycler.setLayoutManager(new android.support.v7.widget.LinearLayoutManager(getActivity().getApplicationContext())); tvNoData = view.findViewById(R.id.tvNoFutureData); onClickListeners(); checkPermission(); <BUGS> d.getTime(); <BUGE> return view; } 
public java.lang.String toString() { <BUGS> return ((((((("Rect [" + (x0)) + ", ") + (y0)) + "][ w:") + ((x0) + (x1))) + ", h:") + ((y0) + (y1))) + "]"; <BUGE> } 
public double getPoisson(double lambda) { double L = java.lang.Math.exp((-lambda)); double p = 1.0; double k = 0.0; do { k = k + 0.5; p *= java.lang.Math.random(); } while (p > L ); double numero = 1 / (k - 0.1); <BUGS> java.lang.System.out.println(numero); <BUGE> numero = redondear((numero * 10)); return numero; } 
@java.lang.Override public boolean equals(java.lang.Object o) { if (o == (this)) { return true; } <BUGS> if (!(o instanceof org.yccheok.jstock.engine.Board)) { <BUGE> return false; } return this.industry.equals(((org.yccheok.jstock.engine.Industry) (o)).industry); } 
@org.junit.Test public void addInvalidFunds() { final com.clouway.adapter.rest.Expense expenses = new com.clouway.adapter.rest.Expense("type", "invalid funds"); com.clouway.adapter.http.ExpensesPage page = mockExpenses(expenses); <BUGS> com.clouway.adapter.jdbc.ExpensesRepository repository = new com.clouway.adapter.jdbc.PersistenceExpensesRepository(com.google.inject.util.Providers.of(service)); <BUGE> page.add(request); java.util.List<com.clouway.adapter.rest.Expense> one = repository.find(1, 1); assertTrue(one.isEmpty()); } 
public <T> java.util.Iterator<T> iterator(java.sql.Connection connection, java.lang.String sql, java.lang.Object[] parameters, lazycat.series.jdbc.mapper.RowMapper<T> rowMapper) throws java.sql.SQLException { <BUGS> return query(connection, sql, lazycat.series.jdbc.PreparedStatementSetters.newIgnoreJdbcTypeSetter(parameters, typeHandlerRegistry, typeConverter), new lazycat.series.jdbc.IteratorResultSetExtractor<T>(rowMapper)); <BUGE> } 
private void jComboBox6ActionPerformed(java.awt.event.ActionEvent evt) { cz.fidentis.controller.Comparison2Faces bc = cz.fidentis.gui.GUIController.getSelectedProjectTopComponent().getProject().getSelectedComparison2Faces(); <BUGS> <BUGE> bc.getHDP().getInfo().setColorScheme(cz.fidentis.visualisation.ColorScheme.values()[jComboBox6.getSelectedIndex()]); } 
public void receive(java.util.Map<java.lang.String, java.lang.String> result) { int in = java.lang.Integer.parseInt(result.get("rx-bits-per-second")); int out = java.lang.Integer.parseInt(result.get("tx-bits-per-second")); traffic = in + out; <BUGS> java.lang.System.out.println(((((((java.lang.Thread.currentThread().getId()) + (parentIdentity)) + ": Total traffic on ") + (label)) + ": ") + (traffic))); <BUGE> aggregator.update(traffic); } 
@java.lang.Override public void addPopulators(org.spongepowered.api.world.gen.WorldGenerator generator) { generator.getGenerationPopulators().add(((org.spongepowered.api.world.gen.GenerationPopulator) (this.netherCaveGenerator))); <BUGS> this.genNetherBridge.worldObj = worldObj; <BUGE> if (this.field_177466_i) { generator.getGenerationPopulators().add(((org.spongepowered.api.world.gen.GenerationPopulator) (this.genNetherBridge))); generator.getPopulators().add(((org.spongepowered.api.world.gen.Populator) (this.genNetherBridge))); } } 
public void deselectController() { if ((mCursorController) != null) { mCursorController.removePickEventListener(mPickHandler); mCursorController.setEnable(false); mCursorController = null; } if ((mControllerModel) != null) { mControllerModel.setEnable(false); <BUGS> mControllerModel.getParent().removeChildObject(mControllerModel); <BUGE> mControllerModel = null; } } 
public org.opendaylight.yangtools.yang.binding.InstanceIdentifier<org.opendaylight.yang.gen.v1.urn.opendaylight.genius.idmanager.rev160406.id.pools.id.pool.IdEntries> getIdEntriesInstanceIdentifier(java.lang.String poolName, java.lang.String idKey) { <BUGS> org.opendaylight.yangtools.yang.binding.InstanceIdentifier<org.opendaylight.yang.gen.v1.urn.opendaylight.genius.idmanager.rev160406.id.pools.id.pool.IdEntries> idEntries = org.opendaylight.yangtools.yang.binding.InstanceIdentifier.builder(org.opendaylight.yang.gen.v1.urn.opendaylight.genius.idmanager.rev160406.IdPools.class).child(org.opendaylight.yang.gen.v1.urn.opendaylight.genius.idmanager.rev160406.id.pools.IdPool.class, new org.opendaylight.yang.gen.v1.urn.opendaylight.genius.idmanager.rev160406.id.pools.IdPoolKey(poolName)).child(org.opendaylight.yang.gen.v1.urn.opendaylight.genius.idmanager.rev160406.id.pools.id.pool.IdEntries.class, new org.opendaylight.yang.gen.v1.urn.opendaylight.genius.idmanager.rev160406.id.pools.id.pool.IdEntriesKey(idKey)).build(); return idEntries; <BUGE> } 
public void setAborted(java.lang.String playerId) { validatePlayerId(playerId); if (!(aborted)) { this.abortedBy = playerId; this.aborted = true; this.setChanged(); <BUGS> this.notifyObservers(); <BUGE> }else { this.finished = true; } } 
public java.util.Map<java.lang.String, java.lang.Integer> getBlacklistedVW() { <BUGS> java.util.Map<java.lang.String, java.lang.Integer> blacklistedVW = new java.util.HashMap<java.lang.String, java.lang.Integer>(redis.dbSize().intValue()); <BUGE> java.util.Set<java.lang.String> keys = redis.smembers(this.prefix); java.util.Iterator<java.lang.String> it = keys.iterator(); while (it.hasNext()) { java.lang.String key = it.next(); blacklistedVW.put(key, (-1)); } return blacklistedVW; } 
@java.lang.Override public void onClick(com.google.gwt.event.dom.client.ClickEvent event) { eventRowIndex = itemTable.getCellForEvent(event).getRowIndex(); itemDTO.setId(java.lang.Integer.parseInt(itemTable.getText(eventRowIndex, 0))); itemDTO.setName(itemTable.getText(eventRowIndex, 1)); <BUGS> itemDTO.setPrice(java.lang.Integer.parseInt(itemTable.getText(eventRowIndex, 2))); <BUGE> setItemId(java.lang.Integer.parseInt(itemTable.getText(eventRowIndex, 0))); controllerEditBtn.fireEvent(new com.google.gwt.event.dom.client.ClickEvent() {    }); } 
public int getSyncMsec(int ms) { this.lock.lock(); try { <BUGS> (this.syncCount)--; while (ms == (msec)) { <BUGE> try { free.await(); } catch (java.lang.InterruptedException e) { java.lang.Thread.currentThread().interrupt(); } } <BUGS> <BUGE> free.signalAll(); } finally { lock.unlock(); } return msec; } 
protected void applyCenterCrop(@android.support.annotation.NonNull <BUGS> android.view.TextureView view, @android.support.annotation.NonNull android.graphics.Matrix transformMatrix) { <BUGE> float xScale = ((float) (view.getWidth())) / (intrinsicVideoSize.x); float yScale = ((float) (view.getHeight())) / (intrinsicVideoSize.y); float scale = java.lang.Math.max(xScale, yScale); xScale = scale / xScale; yScale = scale / yScale; <BUGS> applyScale(view, transformMatrix, xScale, yScale); <BUGE> } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); toolbar = ((android.support.v7.widget.Toolbar) (findViewById(R.id.app_bar))); setSupportActionBar(toolbar); mIsTwoPaneLayout = (findViewById(R.id.top_tracks_container)) != null; <BUGS> if ((mIsTwoPaneLayout) && (savedInstanceState != null)) { <BUGE> getSupportFragmentManager().beginTransaction().replace(R.id.top_tracks_container, new com.spotify.sdliles.spotifystreamer.UI.TopTracksFragment()).commit(); } } 
public void testInsideConstructor() throws java.lang.Exception { java.util.Map<java.lang.String, java.lang.String[][]> resultsMap = new java.util.HashMap<>(); resultsMap.put("aMethod(c)", new java.lang.String[][]{ new java.lang.String[]{ "charX" , "charY" , "inCall" } }); <BUGS> resultsMap.put("aMethod(c, x)", new java.lang.String[][]{ new java.lang.String[]{ "charX" , "charY" } , new java.lang.String[]{ "inCall" } }); <BUGE> assertParametersGuesses(resultsMap); } 
private void sendTrackUpdate() { <BUGS> android.content.Intent i = new android.content.Intent(); i.setAction(org.y20k.trackbook.ACTION_TRACK_UPDATED); i.putExtra(org.y20k.trackbook.EXTRA_TRACK, mTrack); i.putExtra(org.y20k.trackbook.EXTRA_LAST_LOCATION, mCurrentBestLocation); android.support.v4.content.LocalBroadcastManager.getInstance(getApplicationContext()).sendBroadcast(i); <BUGE> } 
public static void inputData() { java.util.Scanner scanner = new java.util.Scanner(java.lang.System.in); Exam01.IDCard.str = scanner.next(); <BUGS> Exam01.IDCard.arr = new java.lang.String[18]; for (int i = 0; i < 18; i++) { <BUGE> Exam01.IDCard.arr[i] = Exam01.IDCard.str.substring(i, (i + 1)); } } 
@java.lang.Override public void onComplete(com.google.firebase.database.DatabaseError databaseError, com.google.firebase.database.DatabaseReference databaseReference) { if (databaseError != null) { <BUGS> callbackContext.sendPluginResult(convertToPluginResult(PluginResult.Status.ERROR, databaseError, false)); <BUGE> }else { callbackContext.sendPluginResult(new org.apache.cordova.PluginResult(PluginResult.Status.OK, ((path + '/') + (databaseReference.getKey())))); } } 
private void fetch() throws com.hummingwave.Custom.WaveORMException { com.sample.Employee employee = new com.sample.Employee(); java.util.List object = employee.fetchRecords(null, null, null, null, null, null); <BUGS> employee = ((com.sample.Employee) (object.get(0))); { { try { android.util.Log.e("RESULT", ((new java.lang.String(employee.getBytes(), "ISO-8859-15")) + "")); } catch (java.io.UnsupportedEncodingException e) { e.printStackTrace(); } } } <BUGE> } 
public int p2Left() { (p2Index)--; if (displayNeuhaus) { <BUGS> if ((p2Index) == (-1)) { <BUGE> p2Index = 10; }else <BUGS> if ((p2Index) == 10) { <BUGE> p2Index = 7; }  }else { if ((p2Index) < 0) { p2Index = 7; } } return p2Index; } 
public void clone(java.lang.String pathDest) { <BUGS> checkIfExist(directory); <BUGE> rc = new com.aragost.javahg.RepositoryConfiguration(); if (java.lang.System.getProperty("os.name").toLowerCase().contains("windows")) { configureMercurial(); } br = com.aragost.javahg.BaseRepository.clone(rc, new java.io.File(pathDest), org.cloudml.connectors.util.MercurialConnector.endPoint); } 
<BUGS> protected void initiateGeocode(java.lang.String address, java.lang.String tag) { <BUGE> android.content.Intent intent = new android.content.Intent(this, com.getataxi.client.utils.GeocodeIntentService.class); intent.putExtra(Constants.GEOCODE_RECEIVER, mResultReceiver); intent.putExtra(Constants.GEOCODE_TYPE, Constants.GEOCODE); intent.putExtra(Constants.ADDRESS_DATA_EXTRA, address); intent.putExtra(Constants.GEOCODE_TAG, tag); startService(intent); } 
@java.lang.Override public boolean equals(java.lang.Object obj) { if (obj instanceof Sentence.PADependencyTuple) { Sentence.PADependencyTuple PADepTuple = ((Sentence.PADependencyTuple) (obj)); if ((PADepTuple.predIndex) != (predIndex)) return false;  if ((PADepTuple.argIndex) != (argIndex)) return false;  <BUGS> if ((PADepTuple.srl) != (srl)) <BUGE> return false;  return true; } return false; } 
<BUGS> public void setColor(java.awt.Color color) { if (((this.color) != null) && (this.color.equals(color))) return ; <BUGE>  this.color = color; fireFieldChanged(new ru.foxling.graphit.config.FieldEvent(this, FieldEvent.UPDATE, "color")); <BUGS> <BUGE> } 
@org.testng.annotations.Test(dataProvider = "domainDataProvider") <BUGS> public void testGetZoneName(final java.lang.String requestHostname, final java.lang.String requestHeader, final java.util.List<java.lang.String> serviceBaseDomains, final java.util.List<java.lang.String> serviceConfigHeaders, final java.lang.String subdomainValue) { <BUGE> org.springframework.mock.web.MockHttpServletRequest req = new org.springframework.mock.web.MockHttpServletRequest(); req.setServerName(requestHostname); java.lang.String subdomain = com.ge.predix.uaa.token.lib.HttpServletRequestUtil.getZoneName(req, serviceBaseDomains, serviceConfigHeaders); org.testng.Assert.assertEquals(subdomain, subdomainValue); } 
public static void continuous(java.util.List<java.lang.String> oldlist) { <BUGS> oldlist = pers.zylo117.spotspotter.fileprocessor.FIndexReader.getFIndex(CentralControl.monitorPath, false); final java.util.List<java.lang.String> newlist = pers.zylo117.spotspotter.fileprocessor.FIndexReader.getFIndex(CentralControl.monitorPath, true); <BUGE> newlist.removeAll(oldlist); if (!(newlist.isEmpty())) oldlist = newlist;  pers.zylo117.spotspotter.fileprocessor.FIndexReader.indexProcess(CentralControl.monitorPath, oldlist); } 
public boolean hasContent() { <BUGS> return ((((io.netty.handler.codec.http.HttpResponseStatus.OK) != (status)) || (null != (messenger.getRedirectTo()))) || (null != (content))) || (null != (file)); <BUGE> } 
public void setExternalNum(java.lang.String externalNum) { try { <BUGS> if ((vendorName.length()) <= 50) <BUGE> this.externalNum = externalNum; else { throw new java.lang.IllegalArgumentException((("'" + externalNum) + "' is longer than 50")); } } catch (java.lang.IllegalArgumentException e) { errorList[5] = "ERROR: " + (e.getMessage()); setErrorCount(((getErrorCount()) + 1)); } } 
@java.lang.Override public void onLocationChanged(android.location.Location location) { android.util.Log.d(com.abrahamyans.gpsbusfeed.scheduler.LocationService.TAG, ("Changed location " + location)); com.abrahamyans.gpsbusfeed.event.LocationChangedEvent event = new com.abrahamyans.gpsbusfeed.event.LocationChangedEvent(getApplicationContext(), location, new java.util.Date()); if (tracker.isValidLocationEvent(event)) { <BUGS> feed.onLocationChanged(new com.abrahamyans.gpsbusfeed.event.LocationChangedEvent(getApplicationContext(), location, new java.util.Date())); <BUGE> } processingLocation = false; disconnect(); } 
@java.lang.Override protected void onPostExecute(java.util.ArrayList<com.group6a_hw03.group6a_hw03.Question> question) { super.onPostExecute(question); fActivityLoadProgress.dismiss(); com.group6a_hw03.group6a_hw03.Trivia_Activity.fQuestionData = question; if (question.isEmpty()) { showToast("No questions currently in the database"); quitActivity(); }else { <BUGS> showToast(("Total Questions:" + (java.lang.String.valueOf(com.group6a_hw03.group6a_hw03.Trivia_Activity.fQuestionData.size())))); <BUGE> displayDetails(); } } 
private void handleOnDestroyOne(android.content.pm.ServiceInfo targetInfo) { android.app.Service service = mNameService.get(targetInfo.name); if (service != null) { service.onDestroy(); mNameService.remove(targetInfo.name); java.lang.Object token = findTokenByService(service); mTokenServices.remove(token); mServiceTaskIds.remove(token); <BUGS> me.ele.amigo.compat.QueuedWorkCompat.waitToFinish(); <BUGE> } me.ele.amigo.compat.QueuedWorkCompat.waitToFinish(); } 
private boolean validateUI() { java.util.Iterator it = reportHasmap.entrySet().iterator(); while (it.hasNext()) { java.util.Map.Entry pair = ((java.util.Map.Entry) (it.next())); if (!(pair.getValue().equals("none"))) { return true; } <BUGS> it.remove(); <BUGE> } showNormalDailog(activity.getResources().getString(R.string.youHaveNotReportedAnEntryText)); return false; } 
public void loadCatalogDetailsFromFileIfRequired(boolean forceReload) { if (forceReload) mCatalogueDetails = null;  try { if ((mCatalogueDetails) != null) return ;  java.io.File catalogDetailsFile = getLocalCatalogDetailsFile(); if (!(catalogDetailsFile.exists())) return ;  <BUGS> if (org.jaya.indexsync.IndexCatalogue.sbCatalogueDetailsUpdateInProgress) return ;  <BUGE> org.json.simple.parser.JSONParser parser = new org.json.simple.parser.JSONParser(); mCatalogueDetails = ((org.json.simple.JSONObject) (parser.parse(new java.io.FileReader(catalogDetailsFile)))); } catch (java.lang.Exception ex) { ex.printStackTrace(); } } 
public java.util.List<com.intellij.plugins.haxe.model.HaxeParameterModel> getParameters() { <BUGS> java.util.List<com.intellij.plugins.haxe.model.HaxeParameterModel> _parameters = null; <BUGE> com.intellij.plugins.haxe.model.HaxeParameterList parameterList = com.intellij.plugins.haxe.util.UsefulPsiTreeUtil.getChild(this.haxeMethod, com.intellij.plugins.haxe.model.HaxeParameterList.class); <BUGS> _parameters = new java.util.ArrayList<com.intellij.plugins.haxe.model.HaxeParameterModel>(); <BUGE> if (parameterList != null) { for (com.intellij.plugins.haxe.model.HaxeParameter parameter : parameterList.getParameterList()) { _parameters.add(new com.intellij.plugins.haxe.model.HaxeParameterModel(parameter)); } } return _parameters; } 
@java.lang.Override public void serialize(com.facebook.presto.spi.SerializableNativeValue value, com.fasterxml.jackson.core.JsonGenerator generator, com.fasterxml.jackson.databind.SerializerProvider provider) throws java.io.IOException { generator.writeStartObject(); <BUGS> generator.writeStringField("type", value.getType().getCanonicalName()); <BUGE> generator.writeFieldName("value"); if ((value.getValue()) == null) { generator.writeNull(); }else { com.facebook.presto.spi.SerializableNativeValue.Serializer.writeValue(value, generator); } generator.writeEndObject(); } 
private Ds3ClientHelpers.Job innerStartReadJob(final java.util.List<com.spectralogic.ds3client.helpers.Ds3Object> objects, final com.spectralogic.ds3client.helpers.GetBulkJobSpectraS3Request getBulkJobSpectraS3Request, final com.spectralogic.ds3client.helpers.strategy.transferstrategy.TransferStrategyBuilder transferStrategyBuilder) throws java.io.IOException { final com.spectralogic.ds3client.helpers.GetBulkJobSpectraS3Response getBulkJobSpectraS3Response = this.client.getBulkJobSpectraS3(getBulkJobSpectraS3Request); final com.google.common.collect.ImmutableMultimap<java.lang.String, com.spectralogic.ds3client.models.common.Range> partialRanges = com.spectralogic.ds3client.helpers.util.PartialObjectHelpers.getPartialObjectsRanges(objects); final com.spectralogic.ds3client.helpers.MasterObjectList masterObjectList = getBulkJobSpectraS3Response.getResult(); <BUGS> transferStrategyBuilder.withMasterObjectList(getBulkJobSpectraS3Response.getResult()).withRangesForBlobs(com.spectralogic.ds3client.helpers.util.PartialObjectHelpers.mapRangesToBlob(masterObjectList.getObjects(), partialRanges)); <BUGE> return new com.spectralogic.ds3client.helpers.ReadJobImpl(transferStrategyBuilder); } 
public void setMessageForMultiList(@android.support.annotation.StringRes int headline, @android.support.annotation.StringRes int message, @android.support.annotation.DrawableRes int icon) { if (((mMultiListContainer) != null) && ((mMultiListMessage) != null)) { mMultiListHeadline.setText(headline); mMultiListMessage.setText(message); mMultiListIcon.setImageResource(icon); <BUGS> <BUGE> mMultiListIcon.setVisibility(View.VISIBLE); mMultiListProgress.setVisibility(View.GONE); } } 
public void draw(android.graphics.Canvas canvas) { canvas.drawColor(Color.BLACK); if (!(mSelfJet.isDead())) { mSelfJet.draw(canvas); } for (hacking.to.the.gate.Jet jet : mEnemyJets) { <BUGS> if (!(jet.isDead())) { jet.draw(canvas); } <BUGE> } for (hacking.to.the.gate.PowerUp p : mPowerUps) { if (p.isVisible()) { p.draw(canvas); } } } 
public static symjava.bytecode.BytecodeVecFunc compileVecFunc(symjava.symbolic.Expr[] args, symjava.symbolic.Expr expr) { java.lang.String className = "JITVecFunc_YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY" + (java.util.UUID.randomUUID().toString().replaceAll("-", "")); com.sun.org.apache.bcel.internal.generic.ClassGen genClass = symjava.symbolic.utils.BytecodeUtils.genClassBytecodeVecFunc(className, expr, args, true, false); <BUGS> symjava.symbolic.utils.FuncClassLoader<symjava.bytecode.BytecodeVecFunc> fcl = new symjava.symbolic.utils.FuncClassLoader<symjava.bytecode.BytecodeVecFunc>(java.lang.Thread.currentThread().getContextClassLoader()); <BUGE> return fcl.newInstance(genClass); } 
public int countNodes(hou.forwz.Leetcode.structure.TreeNode root) { <BUGS> <BUGE> int leftDeep = deep(root.left); int rightDeep = deep(root.right); if (leftDeep == rightDeep) { return ((int) ((java.lang.Math.pow(2, leftDeep)) + (countNodes(root.right)))); }else return ((int) (java.lang.Math.pow(2, rightDeep))) + (countNodes(root.left));  } 
public synchronized void incomingCar(data.analytics.smart.traffic.model.movement.CardinalDirection from, data.analytics.smart.traffic.model.Car car) { <BUGS> java.util.List<data.analytics.smart.traffic.model.Car> carList = waitinglist.get(from); carList.add(car); waitinglist.put(from, carList); java.lang.System.out.println((("Car from " + from) + "has to wait in line")); <BUGE> if (light.isGreen(from)) { java.lang.System.out.println("Its already green"); <BUGS> this.announceLeaving(new data.analytics.smart.traffic.model.movement.Direction(from), car); <BUGE> } } 
@org.junit.Test(expected = java.lang.UnsupportedOperationException.class) public void testNullCommandLine() { final org.genepattern.drm.DrmJobSubmission drmJob = new org.genepattern.drm.DrmJobSubmission.Builder(workingDir).jobContext(jobContext).build(); <BUGS> org.junit.Assert.assertEquals("Expecting emtpy list", 0, drmJob.getCommandLine().size()); <BUGE> drmJob.getCommandLine().add("-P"); } 
public void checkTypes(bantam.util.ClassTreeNode classTreeNode) { this.classTreeNode = classTreeNode; bantam.visitor.Class_ classASTNode = this.classTreeNode.getASTNode(); <BUGS> this.fieldScope = this.classTreeNode.getVarSymbolTable().getCurrScopeLevel(); this.methodScope = this.classTreeNode.getMethodSymbolTable().getCurrScopeLevel(); <BUGE> classASTNode.accept(this); } 
public void onClick(android.content.DialogInterface dialog, int id) { java.lang.String userString = task.getText().toString(); erica.todolist2.ToDo taskThing = new erica.todolist2.ToDo(userString, 0); al.set(i, taskThing); <BUGS> service.updateToDo(taskThing.getId(), taskThing); <BUGE> a.notifyDataSetChanged(); } 
<BUGS> private void generateMappingColumns(java.util.Map<java.lang.String, model.data.DataColumn> mappingNewNameToOldColumns) { for (java.util.Map.Entry<java.lang.String, model.data.DataColumn> entry : mappingNewNameToOldColumns.entrySet()) { model.data.DataColumn newColumn = new model.data.DataColumn(entry.getKey(), null, entry.getValue().getType()); <BUGE> this.addColumn(newColumn); <BUGS> mappingColumns.put(entry.getValue(), newColumn); <BUGE> } } 
@java.lang.Override public void update(long songTime) { setY(((GameScreen.BAR_POSITION) + (((((beatTimeMillis) - songTime) + (GameScreen.visualOffsetMillis)) * (GameScreen.HIT_OBJECT_DISTANCE)) / (millisFor4Beats)))); if ((songTime - (beatTimeMillis)) > (holdDurationMillis)) { BeatMap.hitFlagString = BeatMap.HITFLAGSTRINGS[4]; <BUGS> onRelease(HitState.MISS); <BUGE> } } 
public void initialize() { song1 = Gdx.audio.newMusic(Gdx.files.internal("NARC.mp3")); song2 = Gdx.audio.newMusic(Gdx.files.internal("Rose the Wraith.mp3")); song3 = Gdx.audio.newMusic(Gdx.files.internal("ABIIISMO - Machine Uprising.mp3")); <BUGS> song3.play(); <BUGE> song1.setVolume(0.2F); song1.setOnCompletionListener(new com.badlogic.gdx.audio.Music.OnCompletionListener() { @java.lang.Override public void onCompletion(com.badlogic.gdx.audio.Music music) { song1.play(); song3.play(); } }); } 
private void loadLands() { <BUGS> java.lang.String[] lands = ((java.lang.String[]) (com.essentials.mcoldlife.main.CustomConfig.getArray(reference.FILE_LANDS, reference.CONFIG_FOLDER.toString(), reference.PATH_LANDS))); <BUGE> if (lands != null) { <BUGS> for (java.lang.String land : lands) { com.mcoldlife.objects.OLLand l = new com.mcoldlife.objects.OLLand(land); com.mcoldlife.objects.RPGManager.addLand(land, l); <BUGE> } } } 
<BUGS> public static java.lang.String getCurrentTitle(boolean preparing) { return (br.com.carlosrafaelgn.fplay.playback.Player.thePlayer) == null ? "" : (br.com.carlosrafaelgn.fplay.playback.Player.localSong) == null ? br.com.carlosrafaelgn.fplay.playback.Player.thePlayer.getText(R.string.nothing_playing).toString() : !preparing ? br.com.carlosrafaelgn.fplay.playback.Player.localSong.title : ((br.com.carlosrafaelgn.fplay.playback.Player.thePlayer.getText(R.string.loading)) + " ") + (br.com.carlosrafaelgn.fplay.playback.Player.localSong.title); <BUGE> } 
public org.opendaylight.yangtools.concepts.CompositeObjectRegistration.CompositeObjectRegistrationBuilder<T> remove(final org.opendaylight.yangtools.concepts.ObjectRegistration<? super T> registration) { <BUGS> if ((registration.getInstance()) != (instance)) { <BUGE> throw new java.lang.IllegalArgumentException("Instance must be same."); } registrations.remove(registration); return this; } 
@org.junit.Test public void testTSVOutput() throws java.lang.Throwable { java.lang.String SCRIPT_TEXT = getFormatTestQuery(); java.util.List<java.lang.String> argList = getBaseArgs(org.apache.hive.beeline.TestBeeLineWithArgs.miniHS2.getBaseJdbcURL()); argList.add("--outputformat=tsv"); final java.lang.String EXPECTED_PATTERN = "\'1\'\t\'NULL\'\t\'defg\'\t\'ab\"c\'\t\'1.0\'"; <BUGS> testScriptFile(SCRIPT_TEXT, EXPECTED_PATTERN, true, argList); <BUGE> } 
@java.lang.Override public boolean onChildClick(android.widget.ExpandableListView parent, android.view.View v, int groupPosition, int childPosition, long id) { <BUGS> mListener.onDeleteBpmClick(mGroups.get(groupPosition).children.get(childPosition).getId(), groupPosition, childPosition); <BUGE> return false; } 
protected java.lang.String getDataStorePath(final java.lang.String dataStore, final java.lang.String context) { if (org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.newDraft) { if (("config".contains(dataStore)) || ("operational".contains(dataStore))) { return (("/" + (org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.RESTCONF_DRAFT)) + "/data") + context; <BUGS> }else { return (("/" + (org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.RESTCONF_DRAFT)) + "/operations") + context; <BUGE> } <BUGS> }else { return ("/" + dataStore) + context; <BUGE> } <BUGS> <BUGE> } 
public java.lang.String toString() { <BUGS> java.lang.String returnString = "(" + (this.operator.todRealString()); <BUGE> java.util.Iterator<dl.syntax.Term> subTermIterator = getSubTerms().iterator(); while (subTermIterator.hasNext()) { <BUGS> returnString = (returnString + " ") + (subTermIterator.next().todRealString()); <BUGE> } returnString = returnString + " )"; return returnString; } 
public void add(byte[] data, java.lang.String name, java.lang.String fileName, java.lang.String contentType) { <BUGS> dataList.add(HttpHeaders.LINE_SEPARATOR_BYTES); <BUGE> dataList.add(this.border); dataList.add(HttpHeaders.LINE_SEPARATOR_BYTES); dataList.add(buildHeaders(name, fileName, contentType)); dataList.add(data); <BUGS> <BUGE> } 
public int deleteRecord(libraryDatabaseUtility.model.DataSource source, long bookId) throws java.sql.SQLException { int result = 0; java.sql.Connection connection = source.getConnection(); java.sql.PreparedStatement statement = null; statement = connection.prepareStatement(libraryDatabaseUtility.repository.BookDAOImpl.DELETE_RECORD_SQL); statement.setLong(1, bookId); result = statement.executeUpdate(); <BUGS> statement.close(); connection.close(); <BUGE> return result; } 
private static synchronized void sleep() { int select = (com.afunx.ble.blelitelib.operation.BleWriteCharacterisitcNoResponsePacketOperation2.mAutoId.getAndAdd(1)) % (com.afunx.ble.blelitelib.operation.BleWriteCharacterisitcNoResponsePacketOperation2.PACKET_INTERVALS.length); <BUGS> int sleepTime = (com.afunx.ble.blelitelib.operation.BleWriteCharacterisitcNoResponsePacketOperation2.PACKET_INTERVALS[select]) - ((int) ((java.lang.System.currentTimeMillis()) - (com.afunx.ble.blelitelib.operation.BleWriteCharacterisitcNoResponsePacketOperation2.lastTimestamp))); <BUGE> if (sleepTime > 0) { try { java.lang.Thread.sleep(sleepTime); } catch (java.lang.InterruptedException ignore) { } } } 
public void createLocalServer(java.lang.String port) { int iport = -1; try { iport = java.lang.Integer.parseInt(port); localServer = server.ServerFactory.createServer(iport); localServer.startUp(); this.connect("localhost", ("" + port)); } catch (java.lang.NumberFormatException nfe) { showFail(loginScreen, "Please insert a real number at the Port-Field."); } catch (java.net.BindException e) { showFail(loginScreen, "Port is already in use, please enter another Port."); <BUGS> } catch (java.net.BindException e) { showFail(loginScreen, "The specified port is already in use. Please choose another port."); <BUGE> } } 
@java.lang.Override public void onMapReady(com.google.android.gms.maps.GoogleMap googleMap) { mMap = googleMap; com.google.android.gms.maps.model.LatLng loyola = new com.google.android.gms.maps.model.LatLng(41.998, (-87.659)); <BUGS> double maxZoom = 15.5; mMap.moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom(loyola, ((float) (maxZoom)))); <BUGE> if (checkPermissions()) { setMyLocationEnabled(); } } 
public static void printMatlabArray2D(java.lang.Iterable<? extends java.lang.Iterable<java.lang.Double>> ll, int elementsPerLine, java.io.PrintStream out) { boolean first = true; out.println("["); for (java.lang.Iterable<java.lang.Double> l : ll) { if (first) first = false; else out.println(", ");  <BUGS> MatlabUtil.printMatlabArray(l, elementsPerLine, java.lang.System.out); <BUGE> } out.println(); out.println("]"); } 
public void showSprint(softwaremanagementtool.agile.Sprint sprint) { if (sprint != null) { infoViewController.showSprint(sprint); sprintBlViewController.setAgilePrj(agilePrj, agilePrj.getSprintBacklogList(sprint)); prodOpenBlViewController.setAgilePrj(agilePrj, agilePrj.getOpenProdBacklogList()); backlogViewController.showSprint(sprint); <BUGS> taskViewController.showSprint(sprint); <BUGE> reviewViewController.showSprint(sprint); retrospectViewController.showSprint(sprint); } } 
public java.util.List<com.github.bwsoft.iris.sample.FuelFigures.FuelFigure> getFuelFigures(com.github.bwsoft.iris.message.GroupObject msgObj) { figures.clear(); com.github.bwsoft.iris.message.GroupObjectArray fuelFiguresGroup = msgObj.getGroupArray(fuelFigures); for (int i = 0; i < (fuelFiguresGroup.getNumOfGroups()); i++) { <BUGS> com.github.bwsoft.iris.message.GroupObject aFigureObj = fuelFiguresGroup.getGroupObject(0); <BUGE> com.github.bwsoft.iris.sample.FuelFigures.FuelFigure aFigure = new com.github.bwsoft.iris.sample.FuelFigures.FuelFigure(); aFigure.speed = aFigureObj.getFloat(speed); aFigure.mpg = aFigureObj.getFloat(mpg); figures.add(aFigure); } return figures; } 
@java.lang.Override public java.lang.String execute() { java.lang.String result = SUCCESS; try { <BUGS> foundUsers = com.shooting_stars.project.logic.SearchLogic.findUsers(name, surname, city, country, dateOfBirthMin, dateOfBirthMax, page); usersAmount = com.shooting_stars.project.logic.SearchLogic.countUsers(name, surname, city, country, dateOfBirthMin, dateOfBirthMax); <BUGE> } catch (com.shooting_stars.project.exception.LogicException e) { com.shooting_stars.project.command.LOG.error(e.getMessage(), e.getCause()); exception = new com.shooting_stars.project.exception.CommandException(e.getCause()); result = ERROR; } return result; } 
public void selectPrevious() { if ((getSelectedImage()) instanceof org.openstreetmap.josm.plugins.mapillary.MapillaryImage) { if ((getSelectedImage()) == null) return ;  if ((((org.openstreetmap.josm.plugins.mapillary.MapillaryImage) (getSelectedImage())).getSequence()) == null) throw new java.lang.IllegalStateException();  <BUGS> setSelectedImage(((org.openstreetmap.josm.plugins.mapillary.MapillaryImage) (getSelectedImage())).previous()); <BUGE> } } 
@org.junit.Test public void testDouble() { <BUGS> org.junit.Assert.assertEquals(java.lang.Double.valueOf((-3.0)), magic.compiler.Reader.read("-3.0")); org.junit.Assert.assertEquals(java.lang.Double.valueOf(3.0E9), magic.compiler.Reader.read(".3e10")); org.junit.Assert.assertEquals(java.lang.Double.valueOf((-3.0E9)), magic.compiler.Reader.read("-0.3e10")); <BUGE> } 
public void addLast(Item item) { if (item == null) { throw new java.lang.NullPointerException(); } if ((N) == (array.length)) resize(((array.length) * 2));  <BUGS> array[(++(last))] = item; N = (last) + 1; <BUGE> } 
public void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); if (savedInstanceState == null) { mListJenkinsBuildInfoFragment = org.addhen.birudo.ui.fragment.ListJenkinsBuildInfoFragment.newInstance(); <BUGS> if (!(mPresenter.isAppConfigured())) { launch.settings(); } <BUGE> getFragmentManager().beginTransaction().replace(R.id.list_container, mListJenkinsBuildInfoFragment).commit(); } } 
protected void processPath(Q root) { org.appsugar.bean.entity.QGenericIdEntity r = org.appsugar.bean.entity.QGenericIdEntity.genericIdEntity; if (java.util.Objects.isNull(createdAt)) { createdAt = findPath(root, r.createdAt.getMetadata().getName()); } if (java.util.Objects.isNull(updatedAt)) { <BUGS> createdAt = findPath(root, r.updatedAt.getMetadata().getName()); <BUGE> } } 
public long getMemoryAddress(com.zms.zpc.emulator.PC pc) { assert (addressReg) == null; addressUseReg = false; long address = calAddress(pc, this.address); if (addressUseReg) { address += com.zms.zpc.execute.NumberUtils.asSigned(this.disp, this.dispWidth); }else { address += this.disp; } <BUGS> com.zms.zpc.emulator.reg.Segment seg = ((com.zms.zpc.emulator.reg.Segment) (pc.cpu.regs.getReg(instru.segBase))); return seg.getAddress(address); <BUGE> } 
public semantic.Table lookupFunction(java.lang.String name) { <BUGS> int nodeNum; while ((parent) != null) { <BUGE> parent.lookupFunction(name); <BUGS> } for (semantic.Table t : parent.children) { nodeNum = (t.getSymbol(0).getType().equals("function name")) ? 0 : 1; if (t.getSymbol(nodeNum).getName().equals(name)) return t;  <BUGE> } return null; } 
private java.lang.String removeSpaces(java.lang.String s) { java.lang.String answer = ""; for (int i = 0; i < (s.length()); i++) if ((s.charAt(i)) != ' ') <BUGS> answer += answer.charAt(i); <BUGE>   return answer; } 
public final org.exist.security.Permission getPermissions() { try { getLock().acquire(Lock.READ_LOCK); return permissions; } catch (final org.exist.util.LockException e) { <BUGS> org.exist.collections.Collection.LOG.warn(e.getMessage(), e); <BUGE> return permissions; } finally { getLock().release(Lock.READ_LOCK); } } 
@java.lang.Override public void run() { if ((java.lang.Math.abs(((mostRecentX) - (startX)))) > (touchSlop)) { return ; } if ((java.lang.Math.abs(((mostRecentY) - (startY)))) > (touchSlop)) { return ; } isLongPressing = true; <BUGS> listener.onLongPress(); <BUGE> } 
public synchronized com.sun.messaging.jmq.jmsserver.core.Packet getPacket() { com.sun.messaging.jmq.jmsserver.core.Packet pkt = getPacketObject(); if ((pkt != null) || (destroyed)) { return pkt; } <BUGS> assert persist; <BUGE> if (!(persist)) { return null; } pkt = recoverPacket(); assert pkt != null; setPacketObject(true, pkt); return pkt; } 
private java.lang.Boolean AddShortURL() { url.CreateLink short_link = new url.CreateLink(this.row); <BUGS> java.lang.String shortURL = short_link.encodeLongURL(); <BUGE> long hashURL = short_link.getShortURLHash(); try { <BUGS> this.insertFactory.insertShortLink(hashURL, shortURL, this.row); <BUGE> } catch (java.lang.Exception e) { helper.Loghandler.log(("trying to insert the url " + (e.toString())), "fatal"); return false; } return true; } 
private void createActivityList() { activityList.add(new rieger.alarmsmsapp.view.ruleactivitys.SenderSelection()); <BUGS> activityList.add(new rieger.alarmsmsapp.view.ruleactivitys.AlarmTimeSettings()); <BUGE> activityList.add(new rieger.alarmsmsapp.view.ruleactivitys.WordSelection()); activityList.add(new rieger.alarmsmsapp.view.ruleactivitys.SoundSelection()); activityList.add(new rieger.alarmsmsapp.view.ruleactivitys.AnswerCreation()); activityList.add(new rieger.alarmsmsapp.view.ruleactivitys.LightSettings()); activityList.add(new rieger.alarmsmsapp.view.ruleactivitys.TwitterPostSelection()); activityList.add(new rieger.alarmsmsapp.view.ruleactivitys.NavigationTargetSelection()); activityList.add(new rieger.alarmsmsapp.view.ruleactivitys.ReadingSettings()); } 
public void setScreen(View.YatzyScreen screen) { <BUGS> <BUGE> this.wrapper.removeAll(); this.wrapper.add(screen, java.awt.BorderLayout.CENTER); this.fireActionPerformed(new java.awt.event.ActionEvent(this, java.awt.event.ActionEvent.ACTION_PERFORMED, "Change")); <BUGS> this.setLocationRelativeTo(null); this.setVisible(true); <BUGE> } 
@java.lang.Override public void done(java.util.List<com.avoscloud.leanchatlib.utils.ThirdPartUserUtils.ThirdPartUser> userList, java.lang.Exception e) { <BUGS> if ((null != e) && (null != userList)) { <BUGE> for (com.avoscloud.leanchatlib.utils.ThirdPartUserUtils.ThirdPartUser user : userList) { com.avoscloud.leanchatlib.utils.ThirdPartDataCache.getInstance().cacheUser(user.userId, user); } } } 
@org.jetbrains.annotations.Nullable public java.lang.String getCurrentElementType(com.intellij.psi.PsiElement currentElement) { <BUGS> while ((currentElement != null) && ((currentElement instanceof com.intellij.psi.PsiWhiteSpace) || (currentElement instanceof com.intellij.psi.PsiComment))) { <BUGE> currentElement = currentElement.getPrevSibling(); } if (currentElement != null) { return com.perl5.lang.perl.psi.utils.PerlPsiUtil.getPerlExpressionType(currentElement); } return null; } 
public void enterResult(ceylon.tool.converter.java2ceylon.ResultContext ctx) { try { <BUGS> <BUGE> if ((((ceylon.tool.converter.java2ceylon.MethodHeaderContext) (ctx.getParent())).typeParameters()) == null) { <BUGS> enterresult = true; <BUGE> if (ctx.getChild(0).toString().equals("void")) bw.write(((ctx.getChild(0).toString()) + " "));  } } catch (java.io.IOException e) { e.printStackTrace(); } } 
public com.marcuslee.fypdemo.obj.Shot findShot(int frame) { for (com.marcuslee.fypdemo.obj.Shot shot : com.marcuslee.fypdemo.ObjectHolder.Shots) { <BUGS> if (((shot.getStartFrame()) < frame) && ((shot.getEndFrame()) > frame)) { <BUGE> return shot; } } return null; } 
@cucumber.api.java.After public void teardown(final cucumber.api.Scenario scenario) { if (!(featureState.getFailed())) { au.com.agic.apptesting.steps.StepEventHandling.SCREENSHOT_UTILS.takeScreenshot((" " + (scenario.getName())), featureState); } featureState.setFailed(scenario.isFailed()); final boolean clearDriver = java.lang.Boolean.parseBoolean(au.com.agic.apptesting.steps.StepEventHandling.SYSTEM_PROPERTY_UTILS.getProperty(Constants.NEW_BROWSER_PER_SCENARIO)); <BUGS> synchronized(au.com.agic.apptesting.State.THREAD_DESIRED_CAPABILITY_MAP) { if (clearDriver) { State.THREAD_DESIRED_CAPABILITY_MAP.clearWebDriverForThread(true); } <BUGE> } } 
<BUGS> public static org.alien4cloud.tosca.model.definitions.PropertyDefinition buildPropDef(java.lang.String type, java.lang.String entrySchema, boolean required) { <BUGE> org.alien4cloud.tosca.model.definitions.PropertyDefinition propertyDefinition = new org.alien4cloud.tosca.model.definitions.PropertyDefinition(); propertyDefinition.setType(type); propertyDefinition.setRequired(required); propertyDefinition.setPassword(false); <BUGS> propertyDefinition.setEntrySchema(org.alien4cloud.tosca.variable.PropertyDefinitionUtils.buildPropDef(entrySchema, true)); <BUGE> return propertyDefinition; } 
<BUGS> public void getInterest() { <BUGE> int datediff = (seconddate) - (firstdate); rate = 0.05 / 365; double ratetime = java.lang.Math.pow((1 + (rate)), datediff); balance = (balance) * ratetime; firstdate = seconddate; <BUGS> <BUGE> } 
public static void main(java.lang.String[] args) throws org.newdawn.slick.SlickException { <BUGS> app.setTargetFrameRate(60); <BUGE> org.newdawn.slick.AppGameContainer game = new org.newdawn.slick.AppGameContainer(new graphique.StateGame(), graphique.StateGame.width, graphique.StateGame.height, false); <BUGS> <BUGE> game.setShowFPS(true); game.start(); } 
public void set(java.lang.String path, java.lang.Object value, java.lang.String comment) { if (!(this.config.contains(path))) { <BUGS> this.config.set((((manager.getPluginName()) + "_COMMENT_") + (comments)), (" " + comment)); <BUGE> (comments)++; } this.config.set(path, value); } 
public com.intel.genomicsdb.GenomicsDBConf setHostFile(java.lang.String path) throws java.io.FileNotFoundException { set(com.intel.genomicsdb.GenomicsDBConf.MPIHOSTFILE, path); <BUGS> org.apache.log4j.Logger logger = org.apache.log4j.Logger.getLogger(com.intel.genomicsdb.GenomicsDBConf.class); <BUGE> java.util.Scanner scanner = new java.util.Scanner(new java.io.FileInputStream(path)); while (scanner.hasNextLine()) { java.lang.String host = scanner.nextLine(); hosts.add(host); <BUGS> logger.error(("host file content: " + host)); <BUGE> } return this; } 
protected void robaRandomSleep(int minSleepSecond, int maxSleepSecond) { java.util.Random r = new java.util.Random(); int sleepTime = (minSleepSecond + (r.nextInt((maxSleepSecond - minSleepSecond)))) * 1000; solo.sleep(sleepTime); <BUGS> android.util.Log.d(com.crazyroba.RobaActivityInstrumentationTestCase2.TAG, (("Roba random sleep " + sleepTime) + " s")); <BUGE> } 
private org.opendaylight.yang.gen.v1.urn.opendaylight.flow.types.rev131026.flow.MatchBuilder createIpProtocolMatch(org.opendaylight.yang.gen.v1.urn.opendaylight.flow.types.rev131026.flow.MatchBuilder matchBuilder, short ipProtocol) { org.opendaylight.yang.gen.v1.urn.opendaylight.model.match.types.rev131026.match.IpMatchBuilder ipMmatch = new org.opendaylight.yang.gen.v1.urn.opendaylight.model.match.types.rev131026.match.IpMatchBuilder(); if (ipProtocol == (org.opendaylight.faas.fabrics.vxlan.adapters.ovs.pipeline.PipelineAclHandler.PROTOCOL_TCP)) { ipMmatch.setIpProtocol(org.opendaylight.faas.fabrics.vxlan.adapters.ovs.pipeline.PipelineAclHandler.PROTOCOL_TCP); }else if (ipProtocol == (org.opendaylight.faas.fabrics.vxlan.adapters.ovs.pipeline.PipelineAclHandler.PROTOCOL_UDP)) { ipMmatch.setIpProtocol(org.opendaylight.faas.fabrics.vxlan.adapters.ovs.pipeline.PipelineAclHandler.PROTOCOL_UDP); }else if (ipProtocol == (org.opendaylight.faas.fabrics.vxlan.adapters.ovs.pipeline.PipelineAclHandler.PROTOCOL_ICMP)) { ipMmatch.setIpProtocol(org.opendaylight.faas.fabrics.vxlan.adapters.ovs.pipeline.PipelineAclHandler.PROTOCOL_ICMP); <BUGS> <BUGE> }   matchBuilder.setIpMatch(ipMmatch.build()); return matchBuilder; } 
public static void main(java.lang.String[] args) { boolean a = false; boolean b = false; <BUGS> boolean c = false; <BUGE> boolean p = (((a || b) || c) && (((!a) || b) || c)) && (((!a) || (!b)) || c); java.lang.System.out.println(p); } 
@java.lang.Override public void onActivityCreated(@android.support.annotation.Nullable android.os.Bundle savedInstanceState) { super.onActivityCreated(savedInstanceState); activity = ((codemagnus.com.dealokav2.BaseTabActivity) (getActivity())); if ((activity.getSwitchCompat()) != null) activity.getSwitchCompat().setVisibility(View.VISIBLE);  <BUGS> getUserLastKnownLocation(); <BUGE> initPhoneDetails(); getUserLastKnownLocation(); activity.getToolBar().setTitle("Tower List"); <BUGS> if ((activity.getTowerAdapter()) != null) { setListAdapter(activity.getTowerAdapter()); } <BUGE> } 
void add(double confidence, boolean correct) { for (int i = 0; i < (org.deidentifier.arx.aggregates.StatisticsClassification.CONFIDENCE_THRESHOLDS.length); i++) { if (confidence >= (org.deidentifier.arx.aggregates.StatisticsClassification.CONFIDENCE_THRESHOLDS[i])) { <BUGS> (falsePositive[i])++; <BUGE> truePositive[i] += (correct) ? 1.0 : 0.0; } } } 
@org.junit.Test public void testMock() { owo.com.androidunittest.targets.A a = org.mockito.Mockito.mock(owo.com.androidunittest.targets.A.class); org.mockito.Mockito.when(a.publicMethod()).thenReturn("mockA"); junit.framework.Assert.assertEquals("mockA", a.publicMethod()); <BUGS> org.mockito.Mockito.verify(a, org.mockito.Mockito.times(0)).publicMethod(); <BUGE> org.mockito.Mockito.verify(a, org.mockito.Mockito.never()).foo(); } 
public void initialize(org.apache.cordova.CordovaInterface cordova, org.apache.cordova.CordovaWebView webView) { super.initialize(cordova, webView); <BUGS> final com.gae.scaffolder.plugin.Context context = this.cordova.getActivity().getApplicationContext(); <BUGE> com.gae.scaffolder.plugin.FCMPlugin.gWebView = webView; android.util.Log.d(com.gae.scaffolder.plugin.FCMPlugin.TAG, "==> FCMPlugin initialize"); mFirebaseAnalytics = com.google.firebase.analytics.FirebaseAnalytics.getInstance(context); com.google.firebase.messaging.FirebaseMessaging.getInstance().subscribeToTopic("android"); com.google.firebase.messaging.FirebaseMessaging.getInstance().subscribeToTopic("all"); } 
@org.junit.Test public void shouldBeListWithAllTheSameObjects() { game.setInitialState(params); game.evolve(); game.evolve(); java.util.List<com.capgemini.thegameoflife.Cell> cells = game.getAliveCell(); <BUGS> org.junit.Assert.assertEquals(cells.containsAll(expected), expected.containsAll(cells)); <BUGE> } 
@org.junit.Test public void shouldResetHour() { java.util.Date date = new java.util.Date(); <BUGS> date = com.ondetemjogo.util.DateUtil.resetHour(date); <BUGE> java.util.Date newDate = com.ondetemjogo.util.DateUtil.resetHour(date); java.util.Calendar calendar = java.util.Calendar.getInstance(); calendar.setTime(newDate); org.junit.Assert.assertEquals(calendar.get(java.util.Calendar.HOUR_OF_DAY), 0); } 
@org.springframework.web.bind.annotation.RequestMapping(value = "/fireBase") public org.springframework.web.servlet.ModelAndView googleLogin(@org.springframework.web.bind.annotation.ModelAttribute(value = "userloggedin") <BUGS> java.lang.String userLogged, @org.springframework.web.bind.annotation.RequestParam(value = "loggedIn", defaultValue = "false", required = false) <BUGE> java.lang.String loggedIn) { <BUGS> if (!(loggedIn.equals("false"))) { <BUGE> userLogged = loggedIn; } <BUGS> java.lang.System.out.println(("loggedIn: " + loggedIn)); java.lang.System.out.println(("userLogged: " + userLogged)); if (userLogged.equals("false")) { return new org.springframework.web.servlet.ModelAndView("fireBase"); }else { return new org.springframework.web.servlet.ModelAndView("location", "userloggedin", userLogged); } <BUGE> } 
public synchronized void fail(java.lang.Throwable error) { <BUGS> int errWidth = ((pixelWidth) == 0) ? 50 : pixelWidth; int errHeight = ((pixelHeight) == 0) ? 50 : pixelHeight; setBitmap(createErrorBitmap(errWidth, errHeight)); <BUGE> ((react.RPromise<playn.core.Image>) (state)).fail(error); } 
public void setyDirRightHip(mck.MatlabEngine proxy) throws java.lang.Exception { if ((yDirRightHip.MoCap.length) == (iListLength)) { <BUGS> yDirRightHip.enterMoCapData(commandList[16], proxy, initTime, false, counter); <BUGE> }else { <BUGS> yDirRightHip.enterMoCapData(commandList[16], proxy, initTime, true, ((yDirRightHip.MoCap.length) - 1)); <BUGE> } } 
public uk.ac.starlink.ttools.plot2.layer.BinBag.Bin next() { if ((ib) < nbin) { <BUGS> uk.ac.starlink.ttools.plot2.layer.BinBag.Bin bin = createBin(((index)++), binValues[ib]); if ((index) >= (binIndices[ib])) { <BUGE> (ib)++; } return bin; }else { throw new java.util.NoSuchElementException(); } } 
public boolean deposit(java.lang.String userId, int value) { if (value < 0) return false;  RWLock.writeLock().lock(); try { int balance = getOrZero(userId); balances.put(userId, (balance + value)); <BUGS> writeLog("DEPOSIT", userId, "", value); <BUGE> return true; } finally { <BUGS> <BUGE> RWLock.writeLock().unlock(); } } 
@org.junit.Test public void testSize() { Array<java.lang.Integer> list = new Array(); <BUGS> int[] elems = new int[]{ -76 , 45 , 66 , 3 , 234 , 54 , 33 }; <BUGE> for (int i = 0, sz = 1; i < (elems.length); i++ , sz++) { list.add(elems[i]); org.junit.Assert.assertEquals(list.size(), sz); } } 
@org.testng.annotations.Test public void serializeStringDeserializeEmpty() { <BUGS> com.yahoo.sketches.frequencies.ItemsSketch<java.lang.String> sketch1 = new com.yahoo.sketches.frequencies.ItemsSketch<java.lang.String>((1 << (com.yahoo.sketches.frequencies.Util.LG_MIN_MAP_SIZE))); <BUGE> byte[] bytes = sketch1.toByteArray(new com.yahoo.sketches.ArrayOfStringsSerDe()); com.yahoo.sketches.frequencies.ItemsSketch<java.lang.String> sketch2 = com.yahoo.sketches.frequencies.ItemsSketch.getInstance(com.yahoo.memory.Memory.wrap(bytes), new com.yahoo.sketches.ArrayOfStringsSerDe()); org.testng.Assert.assertTrue(sketch2.isEmpty()); org.testng.Assert.assertEquals(sketch2.getNumActiveItems(), 0); org.testng.Assert.assertEquals(sketch2.getStreamLength(), 0); } 
@softgroup.ua.rest.RequestMapping(path = "/automats/byId/{automatId}", method = RequestMethod.GET, produces = org.springframework.http.MediaType.APPLICATION_JSON_UTF8_VALUE) public softgroup.ua.api.AutomatsListReply getAutomatById(@softgroup.ua.rest.PathVariable java.lang.Integer automatId) { softgroup.ua.api.AutomatsListReply reply = new softgroup.ua.api.AutomatsListReply(); try { softgroup.ua.api.Automat automat = automatMapper.fromInternal(automatService.getAutomatById(automatId)); <BUGS> reply.automats.add(gameEngine.fillSlots(automat)); <BUGE> } catch (softgroup.ua.service.exception.ParsingException e) { e.printStackTrace(); softgroup.ua.rest.AutomatController.logger.error(e.toString(), e); } return reply; } 
private void findOneHourTimerDelay(java.lang.String[] timeParts) { int secNum = java.lang.Integer.parseInt(timeParts[2]); <BUGS> int minNum = java.lang.Integer.parseInt(timeParts[1]); int hourNum = java.lang.Integer.parseInt(timeParts[0]); oneHourTimerDelay = (((60 - secNum) + (60 * (10 - minNum))) + ((24 - hourNum) * 3600)) * 1000; <BUGE> } 
<BUGS> public main.Task1Project.pages.tab_pages.AbstractPage clickOnMoreOptions(main.Task1Project.Item item) { <BUGE> org.openqa.selenium.WebElement button = extractText(item); if (button != null) { java.lang.String buttonText = button.getText().trim(); if (buttonText.equals(optionsButtonName)) { LoggerWrapper.myLogger.log(java.util.logging.Level.INFO, "clicking on Options button"); button.click(); <BUGS> return null; <BUGE> } } <BUGS> return null; <BUGE> } 
protected synchronized void update() { xC += (getSpeed()) * (java.lang.Math.cos(getDirection())); x = (xC) - ((simulation.Car.WIDTH) / 2); yC += (getSpeed()) * (java.lang.Math.sin(getDirection())); <BUGS> y = (y) - ((simulation.Car.HEIGHT) / 2); <BUGE> } 
public void actionPerformed(java.awt.event.ActionEvent e) { if (!(Editor.isScenerio())) { <BUGS> if ((browseFile()) != null) { Editor.currentFile = browseFile(); <BUGE> javax.swing.JOptionPane.showMessageDialog(null, (("Scenerio file '" + (Editor.currentFile)) + "' is selected")); }else { javax.swing.JOptionPane.showMessageDialog(null, "No file selected"); } }else { javax.swing.JOptionPane.showMessageDialog(null, "Scenerio file already exists"); } } 
public java.lang.String getNodeName(final com.hazelcast.core.Member iMember) { if (iMember == null) return "?";  if (nodeUuid.equals(iMember.getUuid())) return nodeName;  final java.lang.String name = activeNodesNamesByMemberId.get(iMember.getUuid()); if (name != null) return name;  <BUGS> final com.orientechnologies.orient.core.record.impl.ODocument cfg = getNodeConfigurationByUuid(iMember.getUuid()); <BUGE> if (cfg != null) return cfg.field("name");  return "ext:" + (iMember.getUuid()); } 
private void handleLogout(javax.servlet.http.HttpServletRequest request, javax.servlet.http.HttpServletResponse response, javax.servlet.http.Cookie myCookie) throws java.io.IOException, javax.servlet.ServletException { <BUGS> myCookie.setMaxAge(0); com.servlet.EnterServlet.sessionTable.remove(com.util.SessionUtil.getSessionId(myCookie.getValue())); response.addCookie(myCookie); <BUGE> javax.servlet.RequestDispatcher dispatcher = request.getRequestDispatcher("home.jsp"); dispatcher.forward(request, response); <BUGS> return ; <BUGE> } 
private void updateCurrentMemoryMode() { org.exbin.framework.deltahex.HexStatusApi.MemoryMode memoryMode = HexStatusApi.MemoryMode.RAM_MEMORY; if ((codeArea.getEditationAllowed()) == (org.exbin.deltahex.EditationAllowed.READ_ONLY)) { memoryMode = HexStatusApi.MemoryMode.READ_ONLY; }else if ((codeArea.getData()) instanceof org.exbin.deltahex.delta.DeltaDocument) { memoryMode = HexStatusApi.MemoryMode.DELTA_MODE; }  <BUGS> hexStatus.setMemoryMode(memoryMode); <BUGE> } 
@javafx.fxml.FXML private void handleMouseHover(javafx.scene.input.MouseEvent event) { selector.setVisible(true); selector.setCenterX(event.getSceneX()); selector.setCenterY(event.getSceneY()); <BUGS> xInput.setText(java.lang.Double.toString(event.getSceneX())); yInput.setText(java.lang.Double.toString(event.getSceneY())); <BUGE> if (grid.getCurrPlayer().isDone()) selector.setVisible(false);  } 
private org.h2.command.Prepared parseAnalyze() { org.h2.command.ddl.Analyze command = new org.h2.command.ddl.Analyze(session); if (readIf("TABLE")) { org.h2.table.Table table = readTableOrView(); command.setTable(table); <BUGS> command.setTop(readPositiveInt()); <BUGE> } if (readIf("SAMPLE_SIZE")) { command.setTop(readPositiveInt()); } return command; } 
@java.lang.SafeVarargs <BUGS> public static <V, T> java.util.Comparator<T> propertyComparator(java.lang.String propertyName, V... propertyValues) { <BUGE> org.apache.commons.lang3.Validate.notBlank(propertyName, "propertyName can't be blank!"); org.apache.commons.lang3.Validate.notNull(propertyValues, "propertyValues can't be null!"); return com.feilong.core.util.comparator.BeanComparatorUtil.propertyComparator(propertyName, com.feilong.core.bean.ConvertUtil.toList(propertyValues)); } 
public static void shutLED(int number) { de.adorsys.quiz.helper.GpioHelper.pin17.low(); if (number > 1) { de.adorsys.quiz.helper.GpioHelper.pin18.low(); } if (number > 2) { de.adorsys.quiz.helper.GpioHelper.pin27.low(); } new java.lang.Thread(new java.lang.Runnable() { @java.lang.Override public void run() { try { java.lang.Thread.sleep(2000); } catch (java.lang.InterruptedException ex) { } finally { de.adorsys.quiz.helper.GpioHelper.restart(); } } <BUGS> }).run(); <BUGE> } 
public static boolean isCollection(final org.eclipse.ocl.pivot.PropertyCallExp e) { <BUGS> org.eclipse.ocl.pivot.Type _type = e.getType(); final java.lang.String s = fr.emn.atlanmod.uml.casestudy.rewrite.OCL.gen(_type); <BUGE> if (((com.google.common.base.Objects.equal(s, "Set")) || (com.google.common.base.Objects.equal(s, "OrderedSet"))) || (com.google.common.base.Objects.equal(s, "Sequence"))) { return true; }else { return false; } } 
private java.lang.String getChanged() { java.lang.String str; if ((blocksChanged) > 0) { mmdanggg2.cste.util.CSTELogger.logDebug(((blocksChanged) + " blocks were changed.")); str = net.minecraft.client.resources.I18n.format("commands.cste.fill.success", blocksChanged); }else { mmdanggg2.cste.util.CSTELogger.logDebug("No blocks changed"); str = net.minecraft.client.resources.I18n.format("commands.cste.fill.nochange"); } <BUGS> clearAll(); <BUGE> return str; } 
@org.junit.Test public void shouldSucceedIfWrittenOutOfOrderWithPosition() throws java.io.IOException { int[] blockorder = getRandomPermutationOfBlockOrder(); for (int i = 0; i < (blockcount); i++) { chksumChannel.write(buffers[blockorder[i]], ((blockorder[i]) * (blocksize))); } <BUGS> assertThat(chksumChannel.getChecksum(), org.hamcrest.Matchers.equalTo(expectedChecksum)); <BUGE> } 
private static void runAnalysis(java.lang.String wikiLink) { java.lang.String articleName = comphuman.task2.distanceReading.RunnerHelper.extractArticleName(wikiLink); java.lang.String linkToDiscussion = comphuman.task2.distanceReading.RunnerHelper.extractDiscussionLink(wikiLink); java.lang.String linkToHisDiscussion = comphuman.task2.distanceReading.RunnerHelper.extractHisDiscussionLink(linkToDiscussion); comphuman.task2.distanceReading.GermanWikiArticleDiscussionAnalyzer articleAna = new comphuman.task2.distanceReading.GermanWikiArticleDiscussionAnalyzer(linkToDiscussion, articleName); articleAna.runAnalyses(); articleAna.visTheResults(); comphuman.task2.distanceReading.GermanWikiArticleDiscussionHistoryAnalyzer hisAna = new comphuman.task2.distanceReading.GermanWikiArticleDiscussionHistoryAnalyzer(linkToHisDiscussion, articleName); <BUGS> hisAna.startAnalyser(); <BUGE> } 
public static com.oracle.st.pm.json.movieTicketing.utilitiy.DBConnection getDBConnection() { try { java.lang.String filename = java.lang.System.getProperty("com.oracle.st.xmldb.pm.ConnectionParameters", com.oracle.st.pm.json.movieTicketing.utilitiy.DBConnection.DEFAULT_CONNECTION_DEFINITION); java.io.File connectionProperties = new java.io.File(filename); <BUGS> java.lang.System.out.println(((((com.oracle.st.pm.json.movieTicketing.utilitiy.DBConnection.sdf.format(new java.util.Date())) + "[DBConnection.getDBConnection()]: Using connection properties file + \"") + (connectionProperties.getAbsolutePath())) + "\".")); <BUGE> return com.oracle.st.pm.json.movieTicketing.utilitiy.DBConnection.gson.fromJson(new java.io.FileReader(connectionProperties), com.oracle.st.pm.json.movieTicketing.utilitiy.DBConnection.class); } catch (java.io.FileNotFoundException fnf) { return new com.oracle.st.pm.json.movieTicketing.utilitiy.DBConnection(); } } 
public void update() throws java.io.IOException { request.setCharacterEncoding("UTF-8"); response.setCharacterEncoding("GB2312"); if (versionName.equals(updateversion)) { java.lang.System.out.println(updateUrl); response.getWriter().write(updateUrl); }else { <BUGS> response.getWriter().write(""); <BUGE> } } 
public java.lang.String toString(com.google.code.or.common.glossary.Column column) { java.lang.String value = null; <BUGS> if (null != column) { <BUGE> if (column instanceof com.google.code.or.common.glossary.column.BlobColumn) { value = new java.lang.String(((com.google.code.or.common.glossary.column.BlobColumn) (column)).getValue()); <BUGS> }else if ((column.getValue()) != null) { value = column.toString(); }  <BUGE> } return value; } 
public void markUsed(java.lang.String tupleId) { <BUGS> while ((reservedQueue.size()) > 0) { <BUGE> com.dipaan.bgcolor.Tuple tuple = reservedQueue.peek(); if (tuple.getId().equals(tupleId)) { reservedQueue.remove(tuple); }else if (tuple.isExpired()) { reservedQueue.remove(tuple); availableQueue.offer(tuple); }  <BUGS> <BUGE> } } 
@java.lang.Override public org.openntf.domino.NotesCalendar getCalendar(final org.openntf.domino.Database db) { try { <BUGS> org.openntf.domino.Database parentDb = null; if (db instanceof org.openntf.domino.Database) { parentDb = ((org.openntf.domino.Database) (db)); }else { parentDb = fromLotus(db, Database.SCHEMA, this); } return fromLotus(getDelegate().getCalendar(toLotus(db)), NotesCalendar.SCHEMA, parentDb); <BUGE> } catch (lotus.domino.NotesException e) { org.openntf.domino.utils.DominoUtils.handleException(e, this); return null; } } 
public void testFilterOperatorMoreThanOrEqualForLongAutoID() { <BUGS> siena.core.async.SienaFuture<java.util.List<siena.base.test.model.PersonLongAutoID>> future = pm.createQuery(siena.base.test.model.PersonLongAutoID.class).filter("id>=", siena.base.test.BaseAsyncTest.LongAutoID_CURIE.id).order("id").fetch(); java.util.List<siena.base.test.model.PersonLongAutoID> people = future.get(); <BUGE> assertNotNull(people); assertEquals(2, people.size()); assertEquals(siena.base.test.BaseAsyncTest.LongAutoID_CURIE, people.get(0)); assertEquals(siena.base.test.BaseAsyncTest.LongAutoID_EINSTEIN, people.get(1)); } 
@java.lang.Override <BUGS> public boolean onOptionsItemSelected(android.view.MenuItem item) { <BUGE> switch (item.getItemId()) { case R.id.variantIos : com.vanniktech.emoji.EmojiManager.install(new com.vanniktech.emoji.ios.IosEmojiProvider()); recreate(); return true; case R.id.variantEmojiOne : com.vanniktech.emoji.EmojiManager.install(new com.vanniktech.emoji.one.EmojiOneProvider()); recreate(); return true; <BUGS> <BUGE> } <BUGS> return super.onOptionsItemSelected(item); <BUGE> } 
public boolean equals(java.lang.Object o) { <BUGS> return (header.equals(((simfinder.FieldValue) (o.getHeader())))) && (value.equals(((simfinder.FieldValue) (o.getValue())))); <BUGE> } 
public boolean addEvent(octu.core.Event evt) { for (int i = 0; i < (events.size()); i++) { if (events.get(i).getName().equals(evt.getName())) { return false; } } events.add(evt); <BUGS> arrangeActionsFromEvents(events, loop); <BUGE> return true; } 
@org.junit.Test <BUGS> public void exportBasicTmx() throws java.io.IOException, java.net.URISyntaxException { <BUGE> final com.vistatec.ocelot.segment.model.OcelotSegment testSeg = new com.vistatec.ocelot.segment.model.SimpleSegment.Builder().segmentNumber(1).source("plain text").target("target plain text").build(); setupTmxWriter(testSeg); tmxWriter.setOpenFileLangs(new com.vistatec.ocelot.events.OpenFileEvent("export_tmx_test", LocaleId.ENGLISH.getLanguage(), LocaleId.FRENCH.getLanguage())); tmxWriter.exportTmx(testFile); <BUGS> com.vistatec.ocelot.tm.okapi.TestOkapiTmxWriter.assertExportedTmxFilesEqual(com.google.common.io.Files.asByteSource(testFile), com.vistatec.ocelot.tm.okapi.TestOkapiTmxWriter.class.getResourceAsStream("export_tmx_test_goal.tmx")); <BUGE> } 
@java.lang.Override public void sendOrderedBroadcast(final android.content.Intent intent, final java.lang.String receiverPermission, final android.content.BroadcastReceiver resultReceiver, final android.os.Handler scheduler, final int initialCode, final java.lang.String initialData, final android.os.Bundle initialExtras) { mCondom.proceedBroadcast(intent, new com.oasisfeng.condom.CondomCore.WrappedProcedure() { @java.lang.Override <BUGS> public void run(final android.content.Intent intent) { <BUGE> com.oasisfeng.condom.CondomContext.super.sendOrderedBroadcast(intent, receiverPermission, resultReceiver, scheduler, initialCode, initialData, initialExtras); } }); } 
private void initBugly() { com.tencent.bugly.beta.Beta.initDelay = 5 * 1000; <BUGS> com.tencent.bugly.beta.Beta.enableHotfix = true; <BUGE> Beta.canShowUpgradeActs.add(com.thirtydegreesray.openhub.ui.activity.LoginActivity.class); Beta.canShowUpgradeActs.add(com.thirtydegreesray.openhub.ui.activity.MainActivity.class); Beta.canShowUpgradeActs.add(com.thirtydegreesray.openhub.ui.activity.AboutActivity.class); com.tencent.bugly.beta.Beta.upgradeListener = com.thirtydegreesray.openhub.ui.widget.UpgradeDialog.INSTANCE; com.tencent.bugly.crashreport.CrashReport.UserStrategy strategy = new com.tencent.bugly.crashreport.CrashReport.UserStrategy(getApplicationContext()); strategy.setAppVersion(BuildConfig.VERSION_NAME); strategy.setAppReportDelay((10 * 1000)); com.tencent.bugly.Bugly.init(getApplicationContext(), AppConfig.BUGLY_APPID, BuildConfig.DEBUG); com.tencent.bugly.crashreport.CrashReport.setIsDevelopmentDevice(getApplicationContext(), BuildConfig.DEBUG); } 
@java.lang.Override public void unpackFromFrontOfList(java.util.List<org.msgpack.type.Value> l) { int check_ntype = l.remove(0).asIntegerValue().getInt(); if (check_ntype != (ntype)) { android.util.Log.e(com.mooshim.mooshimeter.common.ConfigTree.TAG, "WRONG NODE TYPE"); } <BUGS> java.util.List<org.msgpack.type.Value> new_path = l.remove(0).asArrayValue(); path = new java.util.ArrayList<java.lang.Integer>(); for (org.msgpack.type.Value v : new_path) { path.add(v.asIntegerValue().getInt()); } <BUGE> } 
public java.util.List<org.eyeseetea.malariacare.data.database.model.Question> getQuestions() { if ((this.questions) == null) { <BUGS> this.questions = new com.raizlabs.android.dbflow.sql.language.Select().from(org.eyeseetea.malariacare.data.database.model.Question.class).where(Question_Table.id_header.eq(this.getId_header())).orderBy(com.raizlabs.android.dbflow.sql.language.OrderBy.fromProperty(Question_Table.order_pos)).queryList(); <BUGE> } return questions; } 
public static java.lang.CharSequence _text(java.lang.CharSequence icon, java.lang.CharSequence text) { final java.lang.StringBuilder s = new java.lang.StringBuilder(); if ((icon != null) && ((icon.length()) > 0)) { s.append(icon).append("  "); } <BUGS> return s.append(text.toString().replaceAll("і", "i")); <BUGE> } 
public void onWin() { int currPlayerId = currPlayer.getCurrPlayerID(); int potVal = currPlayer.getPot(); int amtBetInGame = currPlayer.getCurrBetInGame(); if ((amtBetInGame * 2) >= potVal) currPlayer.winMoney(potVal); else currPlayer.winMoney((amtBetInGame * 2));  message.setText("You Win!"); try { java.lang.Thread.sleep(5000); } catch (java.lang.InterruptedException e) { e.printStackTrace(); } <BUGS> currPlayer.resetRound(); <BUGE> } 
private edu.up.cs301.blokus.Blok copySelectedBoardBlok(edu.up.cs301.blokus.Blok origSelectedBoardBlok) { <BUGS> <BUGE> int row; int col; int color; row = origSelectedBoardBlok.getRow(); col = origSelectedBoardBlok.getColumn(); color = origSelectedBoardBlok.getColor(); edu.up.cs301.blokus.Blok newBlok = new edu.up.cs301.blokus.Blok(row, col, color); return newBlok; } 
@org.junit.Test public void testAddBlankPageIfOdd() throws java.io.IOException { try (org.sejda.impl.sambox.component.PDDocumentHandler handler = new org.sejda.impl.sambox.component.PDDocumentHandler()) { <BUGS> org.junit.Assert.assertNull(handler.addBlankPageIfOdd(new org.sejda.sambox.pdmodel.common.PDRectangle(10, 10))); <BUGE> handler.addBlankPage(new org.sejda.sambox.pdmodel.common.PDRectangle(10, 10)); <BUGS> org.junit.Assert.assertNotNull(handler.addBlankPageIfOdd(new org.sejda.sambox.pdmodel.common.PDRectangle(10, 10))); <BUGE> } } 
static java.util.Collection<java.lang.String> findIssueKeys(java.lang.String input) { <BUGS> java.util.Collection<java.lang.String> ids = com.google.common.collect.Lists.newArrayList(); <BUGE> java.util.regex.Matcher m = io.jenkins.blueocean.blueocean_github_pipeline.GithubIssue.PATTERN.matcher(input); while (m.find()) { if ((m.groupCount()) >= 1) { java.lang.String issue = m.group(1); ids.add(issue.substring(1, issue.length())); } } return ids; } 
public static int bytesToInt(java.nio.ByteOrder order, byte... bytes) { if ((bytes.length) != 4) { throw new java.lang.IllegalArgumentException("Bytes count must be 4"); } java.nio.ByteBuffer buffer = java.nio.ByteBuffer.wrap(bytes, 0, 4); buffer.order(order); <BUGS> return buffer.getShort(); <BUGE> } 
private void pollGraphFromStack(boolean updateDb) { final java.util.Deque<com.tinkerpop.blueprints.impls.orient.OrientBaseGraph> stack = com.tinkerpop.blueprints.impls.orient.OrientBaseGraph.initializationStack.get(); <BUGS> stack.poll(); <BUGE> final com.tinkerpop.blueprints.impls.orient.OrientBaseGraph prevGraph = stack.peek(); if (prevGraph != null) { com.tinkerpop.blueprints.impls.orient.OrientBaseGraph.activeGraph.set(prevGraph); prevGraph.makeActive(); }else { com.tinkerpop.blueprints.impls.orient.OrientBaseGraph.activeGraph.set(null); if (updateDb) ODatabaseRecordThreadLocal.INSTANCE.set(null);  } } 
public static void main(java.lang.String[] args) { int secretNumber = ((int) (1 + ((java.lang.Math.random()) * 10))); int attemps = 3; java.lang.System.out.println("Hi! I chose a number from 0 to 10 for you! Try to guess"); java.lang.System.out.println("You have"); java.util.Scanner sc = new java.util.Scanner(java.lang.System.in); <BUGS> java.lang.String inpu; <BUGE> } 
@java.lang.Override public void run() { if ((md) == null) return ;  android.graphics.Bitmap bitmap = loadArtwork(artworkUrl, artworkLocal); <BUGS> md.putBitmap(MediaMetadataCompat.METADATA_KEY_ART, bitmap); nb.setLargeIcon(bitmap); <BUGE> session.setMetadata(md.build()); notification.show(nb, isPlaying); artworkThread = null; } 
public boolean isWallValid(holdup.Player player, int xPos, int yPos, holdup.Orientation orientation) { if (!(isExistingWallPlaced(xPos, yPos, orientation))) { if (playerHasZeroWalls(player)) { return false; }else { <BUGS> if ((placedWallList.size()) > 1) { return !(isWallBlockingPlayerPath(player, xPos, yPos, orientation)); }else { return true; } <BUGE> } }else { return false; } } 
public void remove(double v) { if ((root) != null) { if ((root.getValue()) == v) { <BUGS> BTree.Node tempRoot = new BTree.Node(0); tempRoot.setLeft(root); root.removeNode(v, tempRoot); root = tempRoot.getLeft(); <BUGE> }else { root.removeNode(v, null); } <BUGS> <BUGE> size -= 1; } } 
public boolean deleteFromUndecVertices(core.MyVertex v) { if (!(this.UndecLabels.contains(v))) { throw new java.lang.IllegalArgumentException("This vertex is not in the undec hashset"); }else { NotLabelledVertices.add(v); v.setLabel("NONE"); UndecLabels.remove(v); <BUGS> <BUGE> } return true; } 
@org.junit.Test public void testPerformPlacePitfall() { nl.tudelft.contextproject.util.webinterface.ActionUtil.perform(Action.PLACEPITFALL, 0, 0); <BUGS> org.mockito.Mockito.verify(nl.tudelft.contextproject.Main.getInstance(), org.mockito.Mockito.times(1)).getCurrentGame(); org.mockito.Mockito.verify(mockedGame, org.mockito.Mockito.times(1)).addEntity(org.mockito.Matchers.any(nl.tudelft.contextproject.model.entities.Pitfall.class)); <BUGE> } 
public java.lang.Object getValueOfProperty(java.lang.String propertyName, java.lang.Object object) { java.lang.String name = (this.caseSensitive) ? propertyName : propertyName.toLowerCase(); <BUGS> java.lang.reflect.Field field = this.fields.get(propertyName); <BUGE> try { return field.get(object); } catch (java.lang.IllegalAccessException e) { throw new org.sql2o.Sql2oException(((("could not read value of field " + (field.getName())) + " on class ") + (object.getClass().toString())), e); } } 
private void LeaveGameMouseClicked(java.awt.event.MouseEvent evt) { comm.msgSender(("E" + ((char) ((Pexeso_client.CurrentGame.getID()) + '0')))); Pexeso_client.CurrentGame = null; comm.setExit(true); <BUGS> comm.game_thread.interrupt(); <BUGE> LobbyStatus.setText("You left your current game"); LobbyStatus.setVisible(true); panel2.setVisible(true); panel3.setVisible(false); } 
<BUGS> private void selectedButtonStyleLower(javafx.scene.control.Button button) { <BUGE> carInsuranceButton.setId("sideToolbarButton"); boatInsuranceButton.setId("sideToolbarButton"); homeInsuranceButton.setId("sideToolbarButton"); holidayHomeInsuranceButton.setId("sideToolbarButton"); travelInsuranceButton.setId("sideToolbarButton"); button.setId("sideToolbarButtonSelected"); } 
public int fitnessValue() { State s = new State(); while (!(s.hasLost())) { s.makeMove(this.pickMove(s, s.legalMoves())); } <BUGS> java.lang.System.out.println(s.getRowsCleared()); <BUGE> return s.getRowsCleared(); } 
<BUGS> public int modifyField(java.lang.String field, java.lang.String value, java.lang.Long id) { <BUGE> if ((field != null) && (value != null)) { try { it.ispw.efco.nottitranquille.controller.ManageLocation.modifyField(field, value, id); } catch (java.lang.Exception e) { e.printStackTrace(); } return 1; } return 0; } 
protected java.lang.Object visitContainer(net.objectof.actof.porter.visitor.IPorterContext context, net.objectof.model.Id<?> parentId) { net.objectof.model.Resource<net.objectof.aggr.Aggregate<java.lang.Object, java.lang.Object>> toParent = getToParent(parentId); net.objectof.actof.porter.visitor.IPorterContext ported = transform(context); if (ported.isDropped()) { return null; } <BUGS> if (toParent == null) { return null; <BUGE> } <BUGS> toParent.value().set(net.objectof.actof.porter.IPorterUtil.unqualify(ported.getKey(), toParent), ported.getValue()); <BUGE> return context.getValue(); } 
private org.openbaton.nfvo.core.api.VNFCInstance getVNFCI(org.openbaton.nfvo.core.api.VirtualDeploymentUnit virtualDeploymentUnit, java.lang.String idVNFCI) throws org.openbaton.nfvo.core.api.NotFoundException { for (org.openbaton.nfvo.core.api.VNFCInstance vnfcInstance : virtualDeploymentUnit.getVnfc_instance()) <BUGS> if (idVNFCI.equals(vnfcInstance.getId())) <BUGE> return vnfcInstance;   throw new org.openbaton.nfvo.core.api.NotFoundException((("VNFCInstance with id " + idVNFCI) + " was not found")); } 
public ru.semiot.platform.apigateway.utils.Credentials addUser(int id, java.lang.String login, java.lang.String password, java.lang.String role) { try { <BUGS> ru.semiot.platform.apigateway.utils.Credentials c = new ru.semiot.platform.apigateway.utils.Credentials((++id), login, password, role); <BUGE> em.merge(c); return c; } catch (java.lang.Exception ex) { return null; } } 
private cluedo.Hud.STATUS rollAndMove(cluedo.Player player, cluedo.Hud.STATUS status, java.util.Scanner sc) { java.lang.System.out.println("/n"); status = cluedo.Hud.STATUS.MOVE_PIECE; displayBoard(player, status); movesRemaining = rollDice(); java.lang.System.out.println(("\nYou rolled a " + (movesRemaining))); while ((movesRemaining) != 0) { movePiece(player, status, sc); (movesRemaining)--; <BUGS> break; <BUGE> } return status; } 
public static int getColumnsNumberFromDimension(java.lang.String dimension) { if (org.apache.commons.lang.StringUtils.isEmpty(dimension)) { return 0; } java.lang.String[] parts = org.apache.commons.lang.StringUtils.split(dimension, ':'); if ((parts.length) < 2) { return 0; } java.lang.String secondPart = parts[1]; <BUGS> return org.talend.dataprep.schema.xls.XlsUtils.getColumnsNumberLastCell(secondPart); <BUGE> } 
@org.junit.Test public void testSaveEncounter() { edu.psu.sweng500.emrms.model.HPatient hPatient = new edu.psu.sweng500.emrms.model.HPatient(); edu.psu.sweng500.emrms.model.HEncounter hEncounter = new edu.psu.sweng500.emrms.model.HEncounter(); <BUGS> hEncounter.sethEncounterID(1001); <BUGE> hEncounter.setUserID("admin"); hEncounter.setCreationDateTime("2017-09-23 21:55:00"); hEncounter.setEncStartDateTime("2017-09-14 11:55:00"); hEncounter.setEncStatus(1); hEncounter.setEncLocationName("Exton Clinic"); hEncounter.setEncounterType("OP"); hEncounter.setEncounterID("Acc1001"); hEncounter.setPatient_ObjectID(3); hEncounter.setAttendingPhysician_ObjectID(1); hEncounter.setBed_ObjectID(1); } 
@java.lang.Override public void onBindViewHolder(final com.cv4j.app.adapter.GridViewFilterAdapter.ViewHolder holder, int position) { java.lang.String filterName = mList.get(position); if (position == 0) { holder.image.setImageBitmap(mBitmap); }else { if (com.safframwork.tony.common.utils.Preconditions.isNotBlank(filterName)) { com.cv4j.core.filters.CommonFilter filter = ((com.cv4j.core.filters.CommonFilter) (getFilter(filterName))); <BUGS> com.cv4j.rxjava.RxImageData.bitmap(mBitmap).placeHolder(R.drawable.test_mm).addFilter(filter).into(holder.image); <BUGE> } } holder.text.setText(filterName); } 
private static com.whippy.tas.premier.beans.Stats setTacklingStat(java.util.List<com.whippy.tas.premier.beans.Position> positions, java.util.Random rand, com.whippy.tas.premier.beans.Stats stats) { if (positions.contains(Position.DEFENSE)) { stats.setTackling(com.whippy.tas.premier.util.Utils.getGaussian(80, 10)); }else if (positions.contains(Position.MIDFIELD)) { stats.setTackling(com.whippy.tas.premier.util.Utils.getGaussian(60, 20)); }else { <BUGS> com.whippy.tas.premier.util.Utils.getGaussian(40, 40); <BUGE> }  return stats; } 
public void purchaseMultiple(int index, int quantity, ver0.PlayerActor character) { ver0.Item[] itemSet = ver0.Item.getAllItems(); if (character.canBuyItems(index, quantity)) { if (character.buyItems(index, quantity)) { <BUGS> java.lang.System.out.println(((("Purchase successful! You have bought" + quantity) + " ") + (itemSet[index]))); <BUGE> this.m_inventory[index] -= quantity; } <BUGS> this.m_inventory[index] -= quantity; <BUGE> }else { java.lang.System.out.println("Sorry, you don't have enough money!"); } } 
@java.lang.Override public int evaluate() { if (((first) != null) && ((last) != null)) { <BUGS> return (first.evaluate()) + (last.evaluate()); <BUGE> }else { throw new java.lang.IllegalStateException("NO!"); } } 
@javafx.fxml.FXML private void homeScreen(javafx.event.ActionEvent event) { javafx.scene.control.Alert confirm = new javafx.scene.control.Alert(javafx.scene.control.Alert.AlertType.CONFIRMATION, "Are you sure you want to disconnect ? You won't be able to rejoin the game.", javafx.scene.control.ButtonType.YES, javafx.scene.control.ButtonType.NO); confirm.setHeaderText("Disconnect"); java.util.Optional<javafx.scene.control.ButtonType> result = confirm.showAndWait(); if ((result.isPresent()) && (result.get().equals(javafx.scene.control.ButtonType.YES))) { if (client.isHostClient()) { <BUGS> <BUGE> tdb.TheDrawingBoard.disconnectMultiplayerServer(); <BUGS> client.disconnect(); <BUGE> }else { client.disconnect(); } } } 
@org.junit.Test public void addStringSimpleException() throws java.lang.Exception { try { firstOperand = new cpe200.Operand("-1"); secondOperand = new cpe200.Operand("1"); binaryCalculator.setFirstOperand(firstOperand); binaryCalculator.setSecondOperand(secondOperand); } catch (java.lang.Exception ex) { fail("Not expect exception here"); } try { <BUGS> assertEquals("0", binaryCalculator.add()); <BUGE> fail("Expect an exception to be thrown before here"); } catch (java.lang.RuntimeException ex) { assertTrue(true); } catch (java.lang.Exception ex) { fail("Expect runtime exception, but the other is thrown"); } } 
<BUGS> public static void showDialog(android.content.Context context, int message, int positiveMsg, int negativeMsg, android.content.DialogInterface.OnClickListener okListener) { com.shuruta.sergey.ftpclient.ui.DialogFactory.showDialog(context, message, positiveMsg, negativeMsg, okListener, new android.content.DialogInterface.OnClickListener() { <BUGE> public void onClick(android.content.DialogInterface dialog, int id) { dialog.dismiss(); } }); } 
@java.lang.Override public void writeEndArray() { try { elementStack.remove(((elementStack.size()) - 1)); jsonGenerator.writeEndArray(); } catch (java.io.IOException e) { try { jsonGenerator.writeEndObject(); jsonGenerator.writeEndArray(); } catch (java.io.IOException e1) { org.wso2.datamapper.engine.output.writers.JacksonJSONWriter.log.error(e.getMessage(), e); } <BUGS> org.wso2.datamapper.engine.output.writers.JacksonJSONWriter.log.error(("Error while creating end array" + e)); <BUGE> } } 
public static tw.kewang.cwb.pretty.FutureWeatherByTown getFutureWeatherByTown(tw.kewang.cwb.Geocode geocode, float afterHours) { java.util.Date date = new java.util.Date(((java.lang.System.currentTimeMillis()) + ((long) ((tw.kewang.cwb.utils.Constants.ONE_HOUR) * afterHours)))); <BUGS> tw.kewang.cwb.Cwb.LOG.debug("getFutureWeatherByTown: {}, {}", geocode.toString(), date.toString()); <BUGE> return tw.kewang.cwb.Cwb.getFutureWeatherByTown(geocode, date); } 
<BUGS> public static javax.swing.JPanel createLabeledTextBox(java.lang.String label) { <BUGE> javax.swing.JPanel labeledTextBox = new javax.swing.JPanel(); javax.swing.JLabel l = new javax.swing.JLabel(label); labeledTextBox.add(l); <BUGS> javax.swing.JTextField text = new javax.swing.JTextField(); <BUGE> labeledTextBox.add(text); return labeledTextBox; } 
@java.lang.Override public java.lang.Boolean apply(final com.intellij.openapi.roots.SourceFolder it) { boolean _and = false; boolean _isTestSource = it.isTestSource(); if (!_isTestSource) { _and = false; }else { com.intellij.openapi.vfs.VirtualFile _file = it.getFile(); <BUGS> boolean _exists = _file.exists(); <BUGE> _and = _exists; } return java.lang.Boolean.valueOf(_and); } 
@java.lang.Override public void run() { com.yc.english.base.helper.TipsHelper.tips(mContext, "修改成功"); com.yc.english.main.model.domain.UserInfo userInfo = com.yc.english.main.hepler.UserInfoHelper.getUserInfo(); <BUGS> userInfo.setAvatar(resultInfo.data.getInfo().getAvatar()); <BUGE> com.yc.english.main.hepler.UserInfoHelper.saveUserInfo(userInfo); com.hwangjr.rxbus.RxBus.get().post(Constant.USER_INFO, userInfo); com.yc.english.base.utils.RongIMUtil.refreshUserInfo(); } 
@java.lang.Override public boolean add(final T t) { if ((size) == 0) { first = new LinkedList.Item<>(t, null, null); }else if ((size) == 1) { <BUGS> last = new LinkedList.Item<>(t, first, null); first.next = last; <BUGE> }else { <BUGS> LinkedList.Item<T> lastInList = last; last.next = new LinkedList.Item<>(t, lastInList, null); <BUGE> }  (size)++; return true; } 
protected final java.net.Socket getRootSocket(java.lang.Object target) { <BUGS> org.apache.thrift.transport.TNonblockingTransport inTrans = ((com.navercorp.pinpoint.plugin.thrift.field.getter.TNonblockingTransportFieldGetter) (target))._$PINPOINT$_getTNonblockingTransport(); if (inTrans != null) { if (inTrans instanceof com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor) { return ((com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor) (inTrans))._$PINPOINT$_getSocket(); }else { if (isDebug) { logger.debug("Invalid target object. Need field accessor({}).", com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor.class.getName()); <BUGE> } } } return null; } 
@java.lang.Override public void onDataChange(com.google.firebase.database.DataSnapshot dataSnapshot) { java.util.ArrayList<java.lang.String> oldReviews = new java.util.ArrayList<>(); for (com.google.firebase.database.DataSnapshot child : dataSnapshot.getChildren()) { java.lang.String oldSearchTerm = child.getValue().toString(); oldReviews.add(oldSearchTerm); } <BUGS> java.lang.String reviewID = (profile) + (oldReviews.size()); getReference(reviewID); <BUGE> } 
private boolean maskHasPortGroup(com.emc.storageos.db.client.model.ExportMask mask, java.net.URI portGroup) { boolean result = false; <BUGS> if (((portGroup == null) && (com.emc.storageos.db.client.util.NullColumnValueGetter.isNullURI(mask.getPortGroup()))) || ((portGroup != null) && (portGroup.equals(mask.getPortGroup())))) { <BUGE> result = true; } return result; } 
@java.lang.Override public boolean equals(final java.lang.Object o) { if (o == (this)) return true;  if (!(super.equals(o))) return false;  final com.helger.photon.core.ajax.response.AjaxHtmlResponse rhs = ((com.helger.photon.core.ajax.response.AjaxHtmlResponse) (o)); <BUGS> return (com.helger.commons.equals.EqualsHelper.equals(m_sErrorMessage, rhs.m_sErrorMessage)) && (com.helger.commons.equals.EqualsHelper.equals(m_aSuccessValue, rhs.m_aSuccessValue)); <BUGE> } 
private void parseArrayMetadata(com.fasterxml.jackson.core.JsonParser jp) throws java.io.IOException { com.fasterxml.jackson.core.JsonToken value = jp.nextToken(); while (value != (com.fasterxml.jackson.core.JsonToken.END_ARRAY)) { if (value == (com.fasterxml.jackson.core.JsonToken.START_OBJECT)) { <BUGS> parseObjectMetadata(jp, true); <BUGE> }else if (value == (com.fasterxml.jackson.core.JsonToken.START_ARRAY)) { parseArrayMetadata(jp); <BUGS> }else if (value != (com.fasterxml.jackson.core.JsonToken.VALUE_NULL)) { parseObjectMetadata(jp, false); }  <BUGE>  value = jp.nextToken(); } } 
@java.lang.Override public int getPoints() { int points = 1; for (java.util.Iterator<entities.Square> i = getSquaresInvolved().iterator(); i.hasNext();) { entities.Block b = i.next().getBlock(); if (b != null) <BUGS> points *= i.next().getBlock().getMultiplier(); <BUGE>  } return points; } 
private java.lang.String buildContainerId() { <BUGS> java.lang.String id = null; <BUGE> java.lang.String selectElementId = selectElement.getId(); if ((selectElementId != null) && ((selectElementId.length()) > 0)) { id = com.arcbees.chosen.client.ChosenImpl.containerIdRegExp.replace(selectElementId, "_"); }else { id = generateContainerId(); selectElement.setId(id); } id += "_chzn"; return id; } 
public org.lirazs.gbackbone.client.core.data.Options defaults(org.lirazs.gbackbone.client.core.data.Options... args) { for (org.lirazs.gbackbone.client.core.data.Options source : args) { <BUGS> for (java.lang.String key : source.keySet()) { if (!(containsKey(key))) { put(key, source.get(key)); <BUGE> } } } return this; } 
@java.lang.Override public void onDismiss(com.example.reativos.oscar.AddParam myDialogFragment) { java.lang.String command_type = dataStore.getString("type"); int command_param = dataStore.getInt("param"); <BUGS> if (command_type != null) { <BUGE> com.example.reativos.oscar.Command newCommand = new com.example.reativos.oscar.Command(command_type, command_param); commandLists.get(currentTabTag).add(newCommand); adapters.get(currentTabTag).notifyDataSetChanged(); } } 
public void startRecord(android.view.View v) { if (!(mBound)) return ;  android.os.Bundle b = new android.os.Bundle(); <BUGS> java.lang.String filePath = (((m_chosenDir) + (java.io.File.separator)) + (hookString)) + ".3gp"; <BUGE> b.putString("str1", filePath); android.os.Message msg = android.os.Message.obtain(null, 1); msg.setData(b); try { mService.send(msg); } catch (android.os.RemoteException e) { e.printStackTrace(); } } 
private void addSharedLink(models.SharedLink link, boolean newActivity) { if (!(this.sharedLinks.contains(link))) { link.member = this; link.ordernum = this.sharedLinks.size(); this.sharedLinks.add(link); <BUGS> link.save(); if (newActivity) { <BUGE> new models.SharedLinkActivity(link).save(); } } } 
@java.lang.Override public java.lang.Boolean getunicodePUA() { for (int i = 0; i < (toUnicode.length()); ++i) { <BUGS> char unicode = this.toUnicode.charAt(0); <BUGE> if ((unicode >= (org.verapdf.gf.model.impl.operator.textshow.GFGlyph.UNICODE_PRIVATE_USE_AREA_BEGINNING)) && (unicode <= (org.verapdf.gf.model.impl.operator.textshow.GFGlyph.UNICODE_PRIVATE_USE_AREA_ENDING))) { return true; } } return false; } 
private void handlePortState() { switch (portState) { case CLOSED : if (open()) { portState = org.openhab.binding.dsmr.internal.DSMRPort.PortState.AUTO_DETECT; autoDetectTS = java.lang.System.currentTimeMillis(); } break; case AUTO_DETECT : if (((java.lang.System.currentTimeMillis()) - (autoDetectTS)) > (autoDetectTimeoutMSec)) { switchPortSpeed(); close(); <BUGS> <BUGE> } break; case OPENED : break; } } 
public static javax.el.ValueExpression createValueExpression(final java.lang.String expression) { final javax.faces.context.FacesContext facesContext = org.jbromo.webapp.jsf.cdi.CDIFacesUtil.getFacesContext(); final javax.faces.application.Application app = facesContext.getApplication(); final javax.el.ExpressionFactory elFactory = app.getExpressionFactory(); final javax.el.ELContext elContext = facesContext.getELContext(); <BUGS> final javax.el.ValueExpression ve = elFactory.createValueExpression(elContext, expression, java.lang.Object.class); return ve; <BUGE> } 
public void onItemSelected(android.widget.AdapterView<?> Spinner_D2_Adapter_View, android.view.View v, int position, long row) { Spinner_D2_Choice = Spinner_D2_Adapter_View.getItemAtPosition(position).toString(); <BUGS> setPaths(Spinner_A1_Choice, Spinner_A2_Choice, Spinner_D1_Choice, Spinner_D2_Choice); <BUGE> findViewById(R.id.map).invalidate(); <BUGS> onDraw(tempCanvas); <BUGE> } 
@java.lang.Override public void onClick(android.view.View v) { java.lang.String username = ((android.widget.EditText) (findViewById(R.id.username))).getText().toString(); android.content.Intent mIntent; switch (v.getId()) { case R.id.loginButton : <BUGS> com.myos.myos.HEAD mIntent = new android.content.Intent(this, com.myos.myos.Salon.class); <BUGE> mIntent.putExtra("username", username); startActivity(mIntent); <BUGS> break; case R.id.signupButton : <BUGE> break; case R.id.signupButton : break; default : break; } } 
@java.lang.Override public void onCreate(android.database.sqlite.SQLiteDatabase db) { db.execSQL((((((("CREATE TABLE " + (com.example.android.farliggodtapp.database.DatabaseHelper.tableName)) + " (") + (com.example.android.farliggodtapp.database.DatabaseHelper.tableColValue)) + " VARCHAR(255), ") + (com.example.android.farliggodtapp.database.DatabaseHelper.tableColType)) + " VARCHAR(255) PRIMARY KEY UNIQUE)")); <BUGS> db.execSQL(("CREATE TABLE `blacklist` (" + ((((((((("  `id` INTEGER PRIMARY KEY AUTOINCREMENT," + "  `scientificName` varchar(255) NOT NULL,") + "  `navn` varchar(255) NOT NULL,") + "  `svalbard` tinyint(1) NOT NULL DEFAULT '0',") + "  `risiko` varchar(255) NOT NULL,") + "  `taxonID` int(11) NOT NULL,") + "  `canEat` tinyint(1) NOT NULL DEFAULT '0',") + "  `family` varchar(255) NOT NULL,") + "  `image` int(11) NOT NULL") + ")"))); <BUGE> } 
private void startAlarmManager() { android.util.Log.i(com.example.sifat.gobar.LOG_TAG_TAXIPOSITIONSERVICE, "startAlarmManager"); android.content.Context context = getBaseContext(); alarmManager = ((android.app.AlarmManager) (context.getSystemService(Context.ALARM_SERVICE))); taxiDetailIntent = new android.content.Intent(context, com.example.sifat.Receiver.TaxiDetailReceiver.class); <BUGS> taxiDetailIntent.putExtra(com.example.sifat.gobar.TAXIDETAIL_RECIEVER, taxiDetailResultReceiver); taxiDetailIntent.putExtra("test", "Oshan"); <BUGE> pendingIntent = android.app.PendingIntent.getBroadcast(context, 0, taxiDetailIntent, 0); alarmManager.setRepeating(AlarmManager.ELAPSED_REALTIME_WAKEUP, android.os.SystemClock.elapsedRealtime(), 10000, pendingIntent); } 
public static java.lang.reflect.Field getFiledNameByMethod(java.lang.Class clazz, java.lang.reflect.Method method) { <BUGS> java.lang.reflect.Field[] fields = clazz.getDeclaredFields(); <BUGE> java.lang.reflect.Field field = null; for (java.lang.reflect.Field f : fields) if ((f.getAnnotation(indi.yume.tools.autosharedpref.Ignore.class)) == null) if (indi.yume.tools.autosharedpref.util.ReflectUtil.toSetter(f.getName()).equals(method.getName())) field = f;    return field; } 
@java.lang.Override public void reduce(org.apache.hadoop.io.Text key, java.lang.Iterable<org.apache.hadoop.io.BooleanWritable> values, com.capstone.maven.mostontimeairlines.Context context) { summaryMap.putIfAbsent(key.toString(), new com.capstone.maven.mostontimeairlines.OntimeSummaryWritable()); com.capstone.maven.mostontimeairlines.OntimeSummaryWritable summary = summaryMap.get(key.toString()); for (org.apache.hadoop.io.BooleanWritable val : values) { if (val.get()) { summary.incrementOntime(); }else { summary.incrementNotOntime(); } } <BUGS> <BUGE> } 
public static void saveLastResultToFile() { java.lang.System.out.println("Enter a filename or '#cancel' to cancel."); <BUGS> java.lang.String file = com.jboby93.markovbot.App.readLine("save as: "); <BUGE> if (file.equals("#cancel")) { java.lang.System.out.println("Operation cancelled."); }else { try { com.jboby93.markovbot.App.writeFile(file, com.jboby93.markovbot.App.lastResult); java.lang.System.out.println("File saved successfully!"); } catch (java.io.IOException e) { com.jboby93.markovbot.App.logStackTrace(e); } } } 
<BUGS> public static void main(java.lang.String[] arguments) throws java.io.IOException { <BUGE> Avans.Util.LinkedList<Avans.Tokenizer.Token> tokenList = new Avans.Util.LinkedList<Avans.Tokenizer.Token>(); Avans.Util.LinkedList<Avans.Compiler.Node.RunNode> runList = new Avans.Util.LinkedList<Avans.Compiler.Node.RunNode>(); <BUGS> try { Avans.DesignPatterns2.Main.createTokenList(tokenList, "..\\JarkHunt\\src\\script2.txt"); } catch (java.lang.Exception e) { java.lang.System.out.println(e.getMessage()); } <BUGE> if ((tokenList.getFirst()) != null) { Avans.DesignPatterns2.Main.testTokenList(tokenList); } } 
private void startMain() { <BUGS> if ((((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.JELLY_BEAN)) && ((android.support.v4.app.ActivityCompat.checkSelfPermission(this, Manifest.permission.CAMERA)) != (android.content.pm.PackageManager.PERMISSION_GRANTED))) && ((android.support.v4.app.ActivityCompat.checkSelfPermission(this, Manifest.permission.VIBRATE)) != (android.content.pm.PackageManager.PERMISSION_GRANTED))) { <BUGE> requestPermission(new java.lang.String[]{ Manifest.permission.CAMERA , Manifest.permission.VIBRATE }, com.fosung.barcodescanner.InitActivity.REQUEST_STORAGE_READ_ACCESS_PERMISSION); }else { android.content.Intent intent = new android.content.Intent(this, com.fosung.barcodescanner.QrCodeScanActivity.class); startActivity(intent); this.finish(); } } 
public int myAtoi(java.lang.String str) { if (null == str) { str = ""; } <BUGS> long ret = atoi(str); <BUGE> if (ret > (java.lang.Integer.MAX_VALUE)) { ret = java.lang.Integer.MAX_VALUE; }else if (ret < (java.lang.Integer.MIN_VALUE)) { ret = java.lang.Integer.MIN_VALUE; }else { ret = ((int) (ret)); }  return ((int) (ret)); } 
private void closeOnError() { try { socket.close(); } catch (final java.io.IOException e) { e.printStackTrace(); mainController.showMessageOnMainView(((("Errore nella chiusura della socket" + (socket)) + (e.getMessage())) + (e.toString()))); <BUGS> <BUGE> } <BUGS> sockets.remove(socket); <BUGE> } 
protected void goToMain() { <BUGS> <BUGE> com.kerchin.yellownote.data.bean.PrimaryData.getInstance(getHelper(), new com.kerchin.yellownote.data.bean.PrimaryData.DoAfterWithEx() { @java.lang.Override public void justNowWithEx(java.lang.Exception e) { dismissDialog(); } }); <BUGS> zj.remote.baselibrary.util.PreferenceUtils.putString(Config.KEY_USER, mLoginUserEdt.getText().toString(), this); zj.remote.baselibrary.util.PreferenceUtils.putBoolean(Config.KEY_ISLOGIN, true, this); zj.remote.baselibrary.util.PreferenceUtils.putString(Config.KEY_PASS, mLoginPassEdt.getText().toString(), this); <BUGE> handler.post(runnableForData); } 
<BUGS> public void exitApplication(android.content.Context context) { <BUGE> try { finishAllActivity(); android.app.ActivityManager manager = ((android.app.ActivityManager) (context.getSystemService(Context.ACTIVITY_SERVICE))); manager.killBackgroundProcesses(context.getPackageName()); java.lang.System.exit(0); } catch (java.lang.Exception e) { java.lang.System.exit(0); } } 
public static synchronized void search(java.lang.String username, java.lang.String tu) { if (!(pset.three.Server.user_orders.containsKey(username))) { pset.three.Server.respond(tu, java.lang.String.format("No order found for %s", username)); return ; } java.lang.String response = ""; for (java.lang.String order : pset.three.Server.user_orders.get(username)) { <BUGS> response += java.lang.String.format("%s\n"); <BUGE> } pset.three.Server.respond(tu, response); } 
void connect() throws java.lang.InterruptedException { final io.netty.channel.ChannelFuture future; synchronized(lock) { connectFuture = bootstrap.connect(host, port); future = connectFuture; } future.sync(); synchronized(lock) { <BUGS> while (((root) == null) && ((future.channel().isOpen()) || (future.channel().isActive()))) { <BUGE> lock.wait(); } } } 
@java.lang.Override public com.google.android.gms.maps.model.MarkerOptions map(com.task.vasskob.googlemaps.screens.map.model.Marker data) { com.google.android.gms.maps.model.LatLng markerLatLng = new com.google.android.gms.maps.model.LatLng(data.getLatitude(), data.getLongitude()); <BUGS> android.util.Log.d(com.task.vasskob.googlemaps.screens.common.model.mapper.MarkerToMarkerOptionsMapper.TAG, ("map: marker id = " + (data.getTitle()))); <BUGE> com.google.android.gms.maps.model.BitmapDescriptor markerIcon = com.google.android.gms.maps.model.BitmapDescriptorFactory.fromResource(data.getMarkerIcon().getResId()); return new com.google.android.gms.maps.model.MarkerOptions().position(markerLatLng).title(data.getTitle()).icon(markerIcon); } 
public void enqueue(Item item) { if ((size) == (arr.length)) { <BUGS> resize((2 * (size))); <BUGE> } arr[((last)++)] = item; (size)++; if ((last) == (arr.length)) last = 0;  } 
public int makeTurn() { int winAns = 9; <BUGS> if (((BotParser.mRound) == 1) || ((BotParser.mRound) == 2)) <BUGE> return 3; <BUGS> else if ((BotParser.mRound) > 5) winAns = BotParser.mField.checkWin(BotParser.mBotId); <BUGE>  <BUGS>  if (winAns != 9) return winAns;  winAns = BotParser.mField.checkWin(BotParser.mBotIdE); if (winAns != 9) return winAns; else { int move = new java.util.Random().nextInt(7); return move; <BUGE> } <BUGS> <BUGE> } 
@java.lang.Override <BUGS> public void save(de.jordsand.birdcensus.core.BirdCount instance) { <BUGE> de.jordsand.birdcensus.database.repositories.SQLiteBirdCountRepository.BirdCountToSQLiteConverter converter = new de.jordsand.birdcensus.database.repositories.SQLiteBirdCountRepository.BirdCountToSQLiteConverter(); <BUGS> db.insert(BirdCountContract.BirdCount.TABLE_NAME, null, converter.extractBirdCountTableData(instance)); <BUGE> for (android.content.ContentValues values : converter.extractObservationTableData(instance)) { db.insert(BirdCountContract.ObservedSpecies.TABLE_NAME, null, values); } <BUGS> <BUGE> } 
public void draw() { background(240); <BUGS> println(dropdownMObjectAlphaFloat); <BUGE> dropdownMObjectAlphaFloat = DropdownDrawFloat(dropdownMObjectAlphaFloat, ((width) - (offsetInt)), offsetInt, buttonOpenCloseMuseumObject, "Exhibition"); dropdownPlayerAlphaFloat = DropdownDrawFloat(dropdownPlayerAlphaFloat, offsetInt, offsetInt, buttonOpenClosePlayerObject, "Visitor"); } 
public datastructures.AttributeJoint getAttributesDFJoint() { datastructures.AttributeJoint attrJoint = new datastructures.AttributeJoint(); <BUGS> for (dependency.ADependency df : this.df) { attrJoint.addAttributes(df.getAntecedent()); attrJoint.addAttributes(df.getConsequent()); <BUGE> } return attrJoint; } 
public void init5() { for (int x = ((Global.WIDTH) / 2) - 1; x < (((Global.WIDTH) / 2) + 2); x++) { body.add(new java.awt.Point(x, (-3))); <BUGS> body.add(new java.awt.Point((((Global.WIDTH) / 2) - 1), (-2))); <BUGE> } <BUGS> <BUGE> } 
@java.lang.Override public akayerov.getsnils.IpraFile getNextDir() { while ((idx) < (fList.length)) { java.lang.String sogrn = null; <BUGS> if (!(fList[idx].isFile())) <BUGE> sogrn = fList[idx].getName(); <BUGS>  java.lang.String namefile = sogrn; return new akayerov.getsnils.IpraFile(fList[((idx)++)].getAbsolutePath(), sogrn, namefile); <BUGE> } return null; } 
@java.lang.SuppressWarnings(value = "restriction") public static boolean isEclipseDebug() { boolean debuggerEnabled = false; org.osgi.framework.BundleContext bundleContext = org.osgi.framework.FrameworkUtil.getBundle(org.talend.commons.runtime.debug.TalendDebugHandler.class).getBundleContext(); <BUGS> <BUGE> org.osgi.framework.ServiceReference<org.eclipse.osgi.service.debug.DebugOptions> debugOptSR = bundleContext.getServiceReference(org.eclipse.osgi.service.debug.DebugOptions.class); if (debugOptSR != null) { org.eclipse.osgi.service.debug.DebugOptions debugOpt = bundleContext.getService(debugOptSR); debuggerEnabled = debugOpt.isDebugEnabled(); } return debuggerEnabled; } 
public java.lang.String getMdScript() { if ("".equals(this.mdScript)) { return null; } <BUGS> java.lang.String function = ((("function " + (this.name)) + "(") + (this.params)) + ") {\n"; <BUGE> function = function + (this.mdScript); function = function + "\n}"; return function; } 
@org.junit.Test public void testListNames_emptymetaStoreFactory() throws org.pentaho.metastore.api.exceptions.MetaStoreException { <BUGS> org.pentaho.metastore.api.IMetaStore metaStore = org.mockito.Mockito.mock(org.pentaho.metastore.api.IMetaStore.class); <BUGE> java.util.List<java.lang.String> expectedNames = new java.util.ArrayList<>(); <BUGS> org.mockito.Mockito.verify(metaStoreFactory, org.mockito.Mockito.never()).getElementNames(); org.junit.Assert.assertEquals(expectedNames, namedClusterManager.listNames(metaStore)); <BUGE> } 
@java.lang.Override public final org.jivesoftware.smack.util.XmlStringBuilder toXML() { org.jivesoftware.smack.util.XmlStringBuilder xml = new org.jivesoftware.smack.util.XmlStringBuilder(this); addExtraAttributes(xml); <BUGS> if ((candidates.isEmpty()) && (infos.isEmpty())) { <BUGE> xml.closeEmptyElement(); }else { xml.rightAngleBracket(); xml.append(candidates); xml.optElement(info); xml.closeElement(this); } return xml; } 
public org.exoplatform.task.dao.TaskQuery clone() { org.exoplatform.task.dao.condition.Condition condition = getCondition(); <BUGS> return new org.exoplatform.task.dao.TaskQuery((condition != null ? ((org.exoplatform.task.dao.condition.AggregateCondition) (condition)) : null), getOrderBy(), ((projectIds) != null ? new java.util.ArrayList<java.lang.Long>(projectIds) : null), assignee); <BUGE> } 
public static boolean add(tds.Task task) { boolean isAdded = true; for (java.util.TreeSet<tds.Task> tree : tds.TaskTree.taskTrees) { if (!(tree.add(task))) { isAdded = false; } } <BUGS> tds.TaskTree.increaseTaskListSize(); tds.TaskTree.pushAddToStorage(task); <BUGE> return isAdded; } 
private void OnChatSendTextMessageResult(int eGroupType, long nGroupID, long nFromUserID, long nToUserID, java.lang.String sSeqID, int nResult) { <BUGS> if ((callbacks.size()) > 0) { for (java.lang.ref.WeakReference<com.V2.jni.callback.ChatRequestCallback> wf : callbacks) { if ((wf.get()) == null) { continue; <BUGE> } <BUGS> wf.get().OnSendTextResultCallback(eGroupType, nGroupID, nFromUserID, nToUserID, sSeqID, nResult); <BUGE> } } } 
public rx.Observable<java.util.List<java.lang.String>> get(java.lang.String query) { if (android.text.TextUtils.isEmpty(query)) { return rx.Observable.just(new java.util.ArrayList<>()); } <BUGS> return rx.Observable.just(rejasupotaro.mds.data.models.Pokemons.allPokemonNames()); <BUGE> } 
@java.lang.Override public void handleMessage(android.os.Message msg) { <BUGS> new com.kame.tafhd.Publisher().publish("I am in hanlderMessage()"); <BUGE> switch (msg.what) { case com.kame.tafhd.MainActivity.TEST_MSG : new com.kame.tafhd.Publisher().publish(((java.lang.String) (msg.obj))); break; case com.kame.tafhd.MainActivity.UNRELEVANT_MSG : new com.kame.tafhd.Publisher().publish("I am in the unrelevent parts."); break; case com.kame.tafhd.MainActivity.ANOTHER : new com.kame.tafhd.Publisher().publish(((java.lang.String) (msg.obj))); break; default : break; } } 
public java.lang.String findParameterInExtension(org.eclipse.core.runtime.IConfigurationElement configurationElement, java.lang.String parameter) { <BUGS> for (org.eclipse.core.runtime.IConfigurationElement configurationElementChild : configurationElement.getChildren(parameter)) { if ((configurationElementChild.getAttribute(parameter)) != null) { return configurationElementChild.getAttribute(parameter); <BUGE> } } return null; } 
<BUGS> public void storeScores(java.util.List scores) { <BUGE> android.content.SharedPreferences prefs = android.preference.PreferenceManager.getDefaultSharedPreferences(context); android.content.SharedPreferences.Editor editor = prefs.edit(); com.google.gson.Gson gson = new com.google.gson.Gson(); java.lang.String scoreJson = gson.toJson(scores); editor.putString(com.evader.rookies.evade.StoreScores.SCORES_STRING, scoreJson); editor.apply(); <BUGS> <BUGE> } 
public java.util.List<com.gradians.prepwell.db.Skill> getSkills() { <BUGS> <BUGE> java.util.ArrayList<java.lang.String> stringIds = new java.util.ArrayList<java.lang.String>(); for (int j : mSkillIds) stringIds.add(java.lang.Integer.toString(j));  return new co.uk.rushorm.core.RushSearch().whereIN("dbId", stringIds).find(com.gradians.prepwell.db.Skill.class); } 
@javax.annotation.PostConstruct public void init() { allKeszKisz = keszKiszFacade.findAll(); allKeszitmeny = keszitmenyFacade.findAll(); allKiszereles = kiszerelesFacade.findAll(); <BUGS> keszitmenyID = allKeszitmeny.get(0).getId(); kiszerelesID = allKiszereles.get(0).getId(); <BUGE> } 
@java.lang.Override public boolean verify(org.spongepowered.api.entity.living.Living living) { <BUGS> <BUGE> java.util.Optional<net.minecraft.item.ItemStack> optHeld = ((org.spongepowered.api.entity.ArmorEquipable) (living)).getItemInHand(); if ((optHeld.isPresent()) && ((optHeld.get().getItem()) == (com.skelril.skree.content.registry.item.CustomItemTypes.TWO_TAILED_SWORD))) { event.setBaseDamage(0); return true; } return false; } 
public java.lang.String toGhName() { java.lang.String groupDelimiter = (isExclusive) ? model.TurboLabel.EXCLUSIVE_DELIM : model.TurboLabel.NONEXCLUSIVE_DELIM; <BUGS> java.lang.String groupPrefix = ((getGroup()) == null) ? "" : (getGroup()) + groupDelimiter; <BUGE> java.lang.String groupAppended = groupPrefix + (getName()); return groupAppended; } 
<BUGS> @org.junit.Test <BUGE> public void test4() throws com.silicolife.textmining.core.interfaces.core.dataaccess.exception.ANoteException, com.silicolife.textmining.processes.ir.patentpipeline.core.searchmodule.WrongIRPatentIDRecoverConfigurationException { java.lang.String identifier = "fucoxanthin"; main.com.silicolife.textmining.patentpipeline.PubChemAPI.PUGHelp.PUGRestInputEnum inputType = main.com.silicolife.textmining.patentpipeline.PubChemAPI.PUGHelp.PUGRestInputEnum.compoundName; main.com.silicolife.textmining.patentpipeline.PubChemAPI.PUGHelp.IIRPubChemPatentIDRetrievalConfiguration configuration = new main.com.silicolife.textmining.patentpipeline.PubChemAPI.PUGHelp.IRPubChemPatentIDRetrievalConfigurationImpl(inputType); main.com.silicolife.textmining.patentpipeline.PubChemAPI.IRPubChemPatentIDRetrieval pugRestSearch = new main.com.silicolife.textmining.patentpipeline.PubChemAPI.IRPubChemPatentIDRetrieval(configuration); com.silicolife.textmining.processes.ir.patentpipeline.configuration.IIRPatentPipelineSearchConfiguration query = new com.silicolife.textmining.processes.ir.patentpipeline.configuration.IRPatentPipelineSearchConfigurationImpl(identifier); java.util.Set<java.lang.String> patentIds = pugRestSearch.retrievalPatentIds(query); java.lang.System.out.println(patentIds.size()); for (java.lang.String patentID : patentIds) java.lang.System.out.println(patentID);  <BUGS> java.lang.System.out.println(java.lang.Integer.parseInt("qss")); <BUGE> } 
@java.lang.Deprecated private static int buildMaxIndexPages(int allPageNo, java.lang.Integer maxIndexPages) { <BUGS> if ((com.feilong.core.util.Validator.isNullOrEmpty(maxIndexPages)) || (0 <= maxIndexPages)) { <BUGE> if (allPageNo > 1000) { return 6; }else if (allPageNo > 100) { return 8; }else { return 10; }  } return maxIndexPages; } 
@org.springframework.web.bind.annotation.RequestMapping(value = "/filter", method = org.springframework.web.bind.annotation.RequestMethod.POST) public final void getGrants(@org.springframework.web.bind.annotation.RequestBody final java.lang.String json, final javax.servlet.http.HttpServletResponse response) throws java.io.IOException { <BUGS> gov.ehawaii.hacc.web.controllers.MainController.LOGGER.info(("JSON: " + json)); <BUGE> java.util.Map<java.lang.String, java.lang.Object> parameters = new com.fasterxml.jackson.databind.ObjectMapper().readValue(json, new com.fasterxml.jackson.core.type.TypeReference<java.util.Map<java.lang.String, java.lang.Object>>() {    }); response.getWriter().write(new com.fasterxml.jackson.databind.ObjectMapper().writeValueAsString(grantsService.getGrants(parameters))); } 
private java.util.List getCentroids() { java.util.List centroids = new java.util.ArrayList(NUM_CLUSTERS); <BUGS> for (Cluster cluster : clusters) { Point aux = cluster.getCentroid(); <BUGE> Point point = new Point(aux.getX(), aux.getY()); centroids.add(point); } return centroids; } 
@org.springframework.web.bind.annotation.RequestMapping(value = "/edit", method = org.springframework.web.bind.annotation.RequestMethod.POST) <BUGS> private java.lang.String saveUser(org.springframework.ui.Model model, @javax.validation.Valid <BUGE> com.oreva.simpleweb.mvc.web.stubs.UserStub userStub, org.springframework.validation.Errors errors) { java.lang.String currentPage = "users/edit"; java.lang.String nextPage = "redirect:/messages/result"; if (errors.hasErrors()) { return currentPage; } com.oreva.simpleweb.mvc.entities.User user = userService.convertStubToEntity(userStub); userService.save(user); <BUGS> model.addAttribute("user", user); <BUGE> return nextPage; } 
@java.lang.Override public void messageArrived(java.lang.String topic, org.eclipse.paho.client.mqttv3.MqttMessage message) { if (((mTopicCallbacks) == null) || (mTopicCallbacks.isEmpty())) return ;  <BUGS> final java.util.List<io.relayr.websocket.WebSocketCallback> callbacks = mTopicCallbacks.get(topic); for (io.relayr.websocket.WebSocketCallback socketCallback : callbacks) <BUGE> socketCallback.successCallback(message);  } 
public static void fatal(java.lang.String location, java.lang.String error, java.lang.Throwable cause) { java.lang.System.err.println(((location + ": ") + error)); <BUGS> cause.printStackTrace(); <BUGE> if ((sutilities.Debugger.logger_) != null) sutilities.Debugger.logger_.log("SEVERE", location, error, cause, true);  } 
private void resolvePropertyAccessor(@org.jetbrains.annotations.NotNull org.jetbrains.kotlin.resolve.BodiesResolveContext c, @org.jetbrains.annotations.NotNull org.jetbrains.kotlin.resolve.ObservableBindingTrace fieldAccessTrackingTrace, @org.jetbrains.annotations.NotNull org.jetbrains.kotlin.resolve.PropertyDescriptor propertyDescriptor, @org.jetbrains.annotations.NotNull org.jetbrains.kotlin.resolve.JetPropertyAccessor accessor, @org.jetbrains.annotations.NotNull org.jetbrains.kotlin.resolve.PropertyAccessorDescriptor accessorDescriptor) { org.jetbrains.kotlin.resolve.scopes.LexicalScope accessorScope = makeScopeForPropertyAccessor(c, accessor, propertyDescriptor); org.jetbrains.kotlin.resolve.lazy.ForceResolveUtil.forceResolveAllContents(accessorDescriptor.getAnnotations()); <BUGS> PreliminaryDeclarationVisitor.Companion.visitDeclaration(accessor, accessorDescriptor, fieldAccessTrackingTrace); <BUGE> resolveFunctionBody(c.getOuterDataFlowInfo(), fieldAccessTrackingTrace, accessor, accessorDescriptor, accessorScope); } 
private void connectRight(int i, int j) { <BUGS> if (j < ((n) - 1)) { <BUGE> int right = getPosition(i, (j + 1)); if (isOpen(right)) { grid.union(right, getPosition(i, j)); } } } 
@java.lang.Override public void run() { <BUGS> if (false == (bHandshakeResponse)) { <BUGE> if ((com.freerdp.freerdpcore.presentation.FiwoServerSetting.mHandler) != null) { android.os.Message msg1 = new android.os.Message(); msg1.what = com.freerdp.freerdpcore.utils.appdefine.MSG_CONNECT_RESPONSE; com.freerdp.freerdpcore.presentation.FiwoServerSetting.mHandler.sendMessage(msg1); } }else { if ((com.freerdp.freerdpcore.presentation.FiwoServerSetting.mHandler) != null) { android.os.Message msg1 = new android.os.Message(); msg1.what = com.freerdp.freerdpcore.utils.appdefine.MSG_CONNECT_NON_RESPONSE; com.freerdp.freerdpcore.presentation.FiwoServerSetting.mHandler.sendMessage(msg1); } } (com.freerdp.freerdpcore.presentation.FiwoServerSetting.count)++; } 
public float get(com.s13g.winston.lib.temperature.Temperature.Unit unit) { if ((mUnit) == unit) { return mValue; } if ((unit == (com.s13g.winston.lib.temperature.Temperature.Unit.CELSIUS)) && ((mUnit) == (com.s13g.winston.lib.temperature.Temperature.Unit.FAHRENHEIT))) { <BUGS> return ((mValue) * 1.8F) + 32; <BUGE> }else if ((unit == (com.s13g.winston.lib.temperature.Temperature.Unit.FAHRENHEIT)) && ((mUnit) == (com.s13g.winston.lib.temperature.Temperature.Unit.CELSIUS))) { <BUGS> return ((mValue) - 32) / 1.8F; <BUGE> }  throw new java.lang.RuntimeException("Unsupported temperature conversion"); } 
void enterInputValue(final org.openqa.selenium.WebElement inputElement, final java.lang.String value) throws java.lang.Exception { waitForElementVisible(inputElement); final java.lang.String inputID = inputElement.getAttribute("id"); summonTooltip(inputID); showInputField(inputID); for (int i = 0; i < (value.length()); i++) { inputElement.sendKeys(java.lang.Character.toString(value.charAt(i))); waitFor(150L); } <BUGS> closeTooltip(inputID); <BUGE> } 
@javax.annotation.Nonnull @java.lang.Override public java.util.Set<net.minecraft.util.math.BlockPos> generateTrunk(net.minecraft.world.World world, java.util.Random rand, forestry.arboriculture.worldgen.TreeBlockTypeLog wood, net.minecraft.util.math.BlockPos startPos) { forestry.core.worldgen.WorldGenHelper.generateTreeTrunk(world, rand, wood, startPos, height, girth, 0, 0, null, 0); <BUGS> return forestry.core.worldgen.WorldGenHelper.generateBranches(world, rand, wood, startPos.add(0, height, 0), girth, 0.15F, 0.25F, ((height) / 4), 1, 0.25F); <BUGE> } 
@org.testng.annotations.Test(enabled = true) <BUGS> public void pingResponseDataPartShouldContainPingForConfigurationResponse() throws java.io.IOException, java.lang.InterruptedException { <BUGE> mockTestShs2Riv.expectedMinimumMessageCount(1); mockTestShs2Riv.expectedMessagesMatches(org.apache.camel.builder.xml.XPathBuilder.xpath("/ping:PingForConfigurationResponse/ping:pingDateTime").namespace("ping", "urn:riv:itintegration:monitoring:PingForConfigurationResponder:1")); se.inera.axel.shs.mime.ShsMessage testMessage = make(shsMessageMaker); template().requestBody("direct:testShs2riv", testMessage); mockTestShs2Riv.assertIsSatisfied(java.util.concurrent.TimeUnit.SECONDS.toMillis(10)); } 
@java.lang.Override public int compare(android.location.Location t1, android.location.Location t2) { if ((t1.getTime()) > (t2.getTime())) { <BUGS> return 1; <BUGE> } if ((t2.getTime()) > (t1.getTime())) { <BUGS> return -1; <BUGE> } return 0; } 
public static play.mvc.Result postPage(java.lang.String postName) { <BUGS> if ((controllers.Application.currentClient) == null) { return redirect(routes.Application.landing()); } <BUGE> java.util.List<controllers.Post> posts = controllers.Post.getPostsWithPostName(postName); controllers.Application.currentPost = posts.get(0); java.util.List<controllers.Comment> comments = controllers.Comment.findComments(postName); return ok(postPage.render(controllers.Application.currentPost, comments, controllers.Application.currentTeam.getTeamName(), controllers.Application.getUnreadNum())); } 
@java.lang.Override public org.jowidgets.api.model.item.IMenuModel editMenu(final org.jowidgets.cap.ui.api.widgets.IBeanTable<BEAN_TYPE> table, final int columnIndex, final org.jowidgets.api.model.item.IMenuModel menuModel) { if ((model.getUpdaterService()) == null) { return null; }else if (hasDefaultEditAction) { <BUGS> final org.jowidgets.cap.ui.api.table.IBeanTableMenuFactory<BEAN_TYPE> beanTableMenuFactory = org.jowidgets.cap.ui.api.CapUiToolkit.beanTableMenuFactory(); final org.jowidgets.api.command.IAction editAction = beanTableMenuFactory.editAction(model); editMenuModel.addAction(editAction); <BUGE> menuModel.addAction(0, editAction); return menuModel; }else { return menuModel; }  } 
@org.junit.Test public void importConcept_shouldRetireConcept() throws java.lang.Exception { org.openmrs.module.openconceptlab.client.OclConcept oclConcept = newOclConcept(); org.junit.Assert.assertFalse(oclConcept.isRetired()); <BUGS> importer.importConcept(new org.openmrs.module.openconceptlab.CacheService(conceptService), null, oclConcept); <BUGE> oclConcept.setRetired(true); <BUGS> importer.importConcept(new org.openmrs.module.openconceptlab.CacheService(conceptService), null, oclConcept); <BUGE> org.openmrs.Concept concept = assertImported(oclConcept); org.junit.Assert.assertTrue(concept.isRetired()); } 
public int getPower(double speed, int resistance) { double power = 0.0; if (speed > 0) { <BUGS> power = ((3.05 + (4.577 * speed)) + ((0.01798 * speed) * speed)) + ((((-2.038E-5) * speed) * speed) * speed); <BUGE> } return ((int) (power)); } 
protected void setResultActivityError(java.lang.String srvStr, java.lang.Exception e) { resultActivityError = ((e.getClass().getName()) + " : Cannot connect to ") + srvStr; java.lang.String msg = e.getMessage(); if (msg != null) <BUGS> resultActivityError.concat((" : " + (e.getMessage()))); <BUGE>  } 
@java.lang.Override public char getGrid(int x, int y) throws java.io.IOException { outToServer.writeBytes((((("GRID " + x) + " ") + y) + "\n")); java.lang.String response = inFromServer.readLine(); <BUGS> <BUGE> return response.charAt(0); } 
public edu.aku.hassannaqvi.mapps_form2.LHWsContract Sync(org.json.JSONObject jsonObject) throws org.json.JSONException { <BUGS> this._ID = jsonObject.getLong(edu.aku.hassannaqvi.mapps_form2.LHWsContract.singleLhw._ID); <BUGE> this.lhwId = jsonObject.getString(edu.aku.hassannaqvi.mapps_form2.LHWsContract.singleLhw.COLUMN_LHWID); this.lhwName = jsonObject.getString(edu.aku.hassannaqvi.mapps_form2.LHWsContract.singleLhw.COLUMN_LHWNAME); this.clusterName = jsonObject.getString(edu.aku.hassannaqvi.mapps_form2.LHWsContract.singleLhw.COLUMN_CLUSTERNAME); this.clusterCode = jsonObject.getString(edu.aku.hassannaqvi.mapps_form2.LHWsContract.singleLhw.COLUMN_CLUSTERCODE); return this; } 
<BUGS> private boolean checkBlock(org.w3c.dom.Node node) { <BUGE> mt.edu.um.cs.cps2000.runtime.BlockStackFrame blockStackFrame = new mt.edu.um.cs.cps2000.runtime.BlockStackFrame(stackFrames.peek()); stackFrames.push(blockStackFrame); boolean ok = checkStatements(node.getChildNodes()); stackFrames.pop(); return ok; } 
public synchronized void advance(long duration, java.util.concurrent.TimeUnit unit) { if (duration <= 0) throw new java.lang.IllegalArgumentException(("Duration must be positive; was " + duration));  this.nanos += unit.toNanos(duration); for (; ;) { co.paralleluniverse.vtime.ManualClock.Scheduled s = waiters.peek(); <BUGS> if ((s == null) || ((s.deadline) < (nanos))) <BUGE> break;  waiters.poll().wakeup(); } } 
public void factorial() { java.lang.Double num1 = ((java.math.BigDecimal) (numbers.pop())).doubleValue(); java.lang.System.out.println(num1); num1 = CalcModel.fact(num1); java.lang.System.out.println(num1); addToExpressionList("!"); updateRounding(num1.toString()); <BUGS> java.math.BigDecimal b = java.math.BigDecimal.valueOf(num1).round(roundingAmount); <BUGE> numbers.push(b); calculatedValues.push(b); } 
public static java.lang.String _readString(java.lang.String prompt) { java.io.BufferedReader userInput = new java.io.BufferedReader(new java.io.InputStreamReader(java.lang.System.in)); java.lang.System.out.print(prompt); try { java.lang.String inputStr = userInput.readLine(); <BUGS> <BUGE> return inputStr; } catch (java.io.IOException E) { return ""; } } 
@java.lang.Override protected com.example.petr.myapplication.FilterResults performFiltering(java.lang.CharSequence charSequence) { com.example.petr.myapplication.FilterResults filterResults = new com.example.petr.myapplication.FilterResults(); <BUGS> java.util.List<java.lang.String> results = findSuggestions(charSequence.toString()); if ((charSequence.length()) != 0) { <BUGE> filterResults.values = results; filterResults.count = results.size(); } return filterResults; } 
@java.lang.Override public void actionPerformed(java.awt.event.ActionEvent e) { try { model.deleteCropLocationTrayLocation(blockID.getText(), bedID.getText(), cropName.getText(), varietyField.getText()); errorLabel.setText(""); <BUGS> repaint(); revalidate(); <BUGE> } catch (java.sql.SQLException e1) { errorLabel.setText("Invalid Field"); } <BUGS> <BUGE> } 
@java.lang.Override public void deleteStudy(java.lang.String username, java.lang.String studyUID) throws java.lang.Exception { edu.stanford.epad.epadws.models.Study study = getStudy(studyUID); if (study == null) return ;  <BUGS> edu.stanford.epad.epadws.models.ProjectToSubjectToStudy projSubjStudy = ((edu.stanford.epad.epadws.models.ProjectToSubjectToStudy) (new edu.stanford.epad.epadws.models.ProjectToSubjectToStudy().getObject(("study_id=" + (study.getId()))))); projSubjStudy.delete(); <BUGE> new edu.stanford.epad.epadws.models.EpadFile().deleteObjects(("study_id=" + (study.getId()))); study.delete(); } 
@javafx.fxml.FXML private void loginButtonPressed(javafx.event.ActionEvent __) { EmployeeContracts.IWorker worker = UtilsImplementations.InjectionFactory.getInstance(EmployeeImplementations.Worker.class, new EmployeeDI.WorkerDiConfigurator()); try { worker.login(username, password); <BUGS> EmployeeApplicationScreen.isEmployeeLoggedIn = true; <BUGE> } catch (SMExceptions.SMException e) { EmployeeGui.EmployeeGuiExeptionHandler.handle(e); return ; } EmployeeCommon.TempWorkerPassingData.worker = worker; GuiUtils.AbstractApplicationScreen.setScene("/WorkerMenuScreen/WorkerMenuScreen.fxml"); } 
public static void main(final java.lang.String[] args) throws java.lang.InterruptedException { <BUGS> final long runtime = ((args.length) > 1) ? java.lang.Long.parseLong(args[1]) : com.awesome.BaseExamplePeriod.DEFAULT_RUN_TIME_MSEC; <BUGE> com.awesome.ex1_2.Ex1_2 ex = new com.awesome.ex1_2.Ex1_2(runtime); ex.run(); ex.printResults(); } 
@java.lang.Override public void onActivityResult(int requestCode, int resultCode, android.content.Intent data) { super.onActivityResult(requestCode, resultCode, data); <BUGS> if ((data != null) && ((data.getStringExtra(it.jaschke.alexandria.AddBook.ISBN_RESULT)) != "-1")) { <BUGE> ean.setText(data.getStringExtra(it.jaschke.alexandria.AddBook.ISBN_RESULT)); } } 
@java.lang.Override public void onClick(android.view.View v) { com.juntcompany.godandgod.Login.SignIn.SignInPolicyFragment f = new com.juntcompany.godandgod.Login.SignIn.SignInPolicyFragment(); SignInActivity.fNum = getActivity().getSupportFragmentManager().getBackStackEntryCount(); android.support.v4.app.FragmentTransaction ft = getActivity().getSupportFragmentManager().beginTransaction(); ft.replace(R.id.container, f); ft.addToBackStack(("" + (SignInActivity.fNum))); <BUGS> android.widget.Toast.makeText(getContext(), java.lang.String.valueOf(SignInActivity.fNum), Toast.LENGTH_SHORT).show(); <BUGE> ft.commit(); } 
public void queryPOIListUpdate() { <BUGS> if ((((currentLocation) == null) || ((currentCompassValue) < 0)) || ((settingsManager.getPresetIdInRouterFragment()) < 1)) { <BUGE> return ; } <BUGS> org.walkersguide.utils.POIPreset preset = settingsManager.getPOIPreset(settingsManager.getPresetIdInRouterFragment()); <BUGE> boolean isInsidePublicTransport = false; if ((numberOfHighSpeeds) > 0) isInsidePublicTransport = true;  poiManager.updatePOIList(preset.getId(), preset.getRange(), currentLocation, currentCompassValue, "", isInsidePublicTransport); } 
public void itemStateChanged(java.awt.event.ItemEvent ie) { switch (ie.getStateChange()) { case 1 : <BUGS> emailInputField.setVisible(true); <BUGE> emailInputField.setEnabled(true); useEmail = true; break; case 2 : <BUGS> emailInputField.setVisible(false); <BUGE> emailInputField.setEnabled(false); useEmail = false; break; default : break; } } 
void killDepletedAgents() { <BUGS> for (Agents.Agent agent : agents) { if ((agent.food) <= 0) { GameLogic.Position deathPlace = agent.position; agents.remove(agent); tiles[deathPlace.x][deathPlace.y].agents.remove(agent); <BUGE> } } } 
public void checkJoin(java.lang.String id, java.lang.String password, java.lang.String checkPassword) { if (password.equals(checkPassword)) { com.project.snake.database.SnakeDTO data = new com.project.snake.database.SnakeDTO("join", id, password, 0, 0, 0, 0); data = network.sendData(data); <BUGS> <BUGE> if (data != null) { view_ctr.joinView(data.getStatus()); return ; } } view_ctr.joinView("joinno"); } 
private java.util.ArrayList<frogger.ObstacleRow<frogger.Car>> initializeCarRows() { java.util.ArrayList<frogger.ObstacleRow<frogger.Car>> newCars = new java.util.ArrayList<>(); <BUGS> frogger.ObstacleRow<frogger.Car> car1 = new frogger.ObstacleRow((-75), 150, 500, 50, 2, 500, new java.util.ArrayList<>(), 1, 3, java.awt.Color.BLACK); <BUGE> newCars.add(car1); return newCars; } 
public void computeDemoRectangle(float viewWidth, float viewHeight) { <BUGS> float centerX = viewWidth / 2; float centerY = viewHeight / 2; float deltaX = viewWidth / ((float) (de.peterloos.beziersplines.utils.ControlPointsHolder.NumDemoEdges)); float deltaY = viewHeight / ((float) (de.peterloos.beziersplines.utils.ControlPointsHolder.NumDemoEdges)); demoData = de.peterloos.beziersplines.utils.ControlPointsHolder.getDemoRectangle(centerX, centerY, deltaX, deltaY); <BUGE> } 
@java.lang.Override public java.nio.file.FileVisitResult visitFile(java.nio.file.Path file, java.nio.file.attribute.BasicFileAttributes attrs) throws java.io.IOException { final java.lang.String path_temp = file.toString(); final java.lang.String path_name = omnikryptec.util.AdvancedFile.getName(path_temp); if (((advancedFileFilter == null) || (advancedFileFilter.accept(ME, path_name))) && (recursiv || (file.getParent().equals(myPathTest)))) { <BUGS> files.add(new omnikryptec.util.AdvancedFile(true, this, path_name)); <BUGE> } return java.nio.file.FileVisitResult.CONTINUE; } 
@java.lang.Override public void onDataFetchComplete(java.lang.Throwable throwable, java.lang.String parser) { if (parser.equals(AppState.MOD_NEWS)) { if ((!(this.isDetached())) && (this.isVisible())) { this.loadPages(); } com.untappedkegg.rally.data.DbUpdated.open(); <BUGS> com.untappedkegg.rally.data.DbUpdated.updated_insert(AppState.MOD_NEWS); <BUGE> com.untappedkegg.rally.data.DbUpdated.close(); } } 
private java.lang.String getFinalValue(java.lang.String newVal, java.lang.String oldVal) { <BUGS> if (com.breadwallet.tools.util.Utils.isNullOrEmpty(newVal)) <BUGE> return null;  <BUGS> if (com.breadwallet.tools.util.Utils.isNullOrEmpty(oldVal)) <BUGE> return newVal;  if (newVal.equals(oldVal)) { return null; }else { return newVal; } } 
public double getMinY() { double minY = points.get(0).y; for (int i = 1; i < (points.size()); i++) { double pY = points.get(i).y; if (pY < minY) { <BUGS> if ((points.get(i).z) <= 0) { return (-(TheLittleEngineThatCould.windowHeight)) / 2; } <BUGE> minY = pY; } } return minY; } 
public void save() { try (Connection con = DB.sql2o.open()) { java.lang.String sql = "INSERT INTO persons (name, email) VALUES (:name, :email)"; <BUGS> con.createQuery(sql).addParameter("name", this.name).addParameter("email", this.email).executeUpdate().getKey(); <BUGE> } } 
<BUGS> private void setDimensions() { <BUGE> if ((java.lang.Double.toString(value).length()) < 15) { width = java.lang.Double.toString(value).length(); height = 1; }else { width = 15; height = ((java.lang.Double.toString(value).length()) / (width)) + 1; } } 
@java.lang.Override public void onRefresh() { if (SimpleOperations.INSTANCE.isNetworkAvailable(getApplicationContext())) { swipeRefreshLayout.setRefreshing(true); <BUGS> new com.raccoonapps.pricemanager.app.client.task.ProductsUpdateTask(null, productsFile, storeFile, getApplicationContext()).execute(); <BUGE> }else { swipeRefreshLayout.setRefreshing(false); android.widget.Toast.makeText(this, "No WiFi connection available", Toast.LENGTH_SHORT).show(); } } 
@java.lang.Override public void onMessageReceived(@android.support.annotation.NonNull com.criptext.comunication.MOKMessage message) { com.criptext.monkeychatandroid.models.MessageItem newItem = processNewMessage(message); <BUGS> boolean isMyOwnMsg = newItem.isIncomingMessage(); <BUGE> updateConversation(newItem.getConversationId(), com.criptext.monkeychatandroid.models.DatabaseHandler.getSecondaryTextByMessageType(newItem, false), (isMyOwnMsg ? MonkeyConversation.ConversationStatus.deliveredMessage : MonkeyConversation.ConversationStatus.receivedMessage), (isMyOwnMsg ? 0 : 1), message.getDatetimeorder(), 0L); } 
@java.lang.Override public com.jomm.terroir.business.model.AbstractUser update(com.jomm.terroir.business.model.AbstractUser user) throws com.jomm.terroir.util.InvalidEntityException, java.lang.NullPointerException { if (user == null) { throw new java.lang.NullPointerException(); }else if ((user.getId()) == null) { throw new com.jomm.terroir.util.InvalidEntityException(); }  <BUGS> return userDao.create(user); <BUGE> } 
public static java.util.List<cascading.tuple.TupleEntry> getAllTupleEntries(cascading.tap.Tap<org.apache.hadoop.mapred.JobConf, ?, ?> t) throws java.io.IOException { cascading.tuple.TupleEntryIterator iter = t.openForRead(com.liveramp.cascading_ext.CascadingUtil.get().getFlowProcess()); java.util.List<cascading.tuple.TupleEntry> tuples = new java.util.ArrayList<cascading.tuple.TupleEntry>(); while (iter.hasNext()) { <BUGS> tuples.add(iter.next()); <BUGE> } return tuples; } 
@java.lang.Override protected synchronized void onProgressUpdate(java.lang.Void... values) { <BUGS> if ((SoundActivity.seekBar) != null) { SoundActivity.seekBar.setMax(org.gtlp.yasb.SoundActivity.soundPlayerInstance.getDuration()); SoundActivity.seekBar.setProgress(org.gtlp.yasb.SoundActivity.soundPlayerInstance.getCurrentPosition()); } if ((SoundActivity.timeText) != null) { SoundActivity.timeText.setText(SoundActivity.soundPlayerInstance.getFormattedProgressText()); <BUGE> } } 
@org.junit.Test public void editRecipe9() { coffeeMaker.addRecipe(coffee); edu.pjatk.inn.coffeemaker.impl.Recipe newMocha = new edu.pjatk.inn.coffeemaker.impl.Recipe(); newMocha.setName("Mocha"); newMocha.setPrice(50); <BUGS> newMocha.setAmtCoffee(java.lang.Integer.parseInt("a")); <BUGE> org.junit.Assert.assertFalse(coffeeMaker.editRecipe(coffee, newMocha)); } 
private java.lang.String getTransitTitle(org.opentripplanner.api.model.Leg leg) { <BUGS> java.lang.String[] possibleTitles = new java.lang.String[]{ leg.tripShortName , leg.routeShortName , leg.route , leg.routeId }; <BUGE> for (int i = 0; i < (possibleTitles.length); i++) { if (!(android.text.TextUtils.isEmpty(possibleTitles[i]))) { return possibleTitles[i]; } } return null; } 
@java.lang.Override public void applyTo(double[] xs, int offset, int length, mikera.vectorz.AVector ys) { for (int i = 0; i < length; i++) { <BUGS> xs[i] = ((java.lang.Number) (fn.invoke(xs[i], ys.unsafeGet(i)))).doubleValue(); <BUGE> } } 
public static double norm2(float[] x, int dim) { double dot = 0; for (int i = 0; i < dim; ++i) { dot += (x[i]) * (x[i]); } <BUGS> return java.lang.Math.sqrt(dot); <BUGE> } 
private static int checkSum(java.lang.String zip) { int checkDigit = 0; <BUGS> for (int i = 0; i < 5; i++) { <BUGE> checkDigit += java.lang.Integer.parseInt(("" + (zip.charAt(i)))); } checkDigit = checkDigit % 10; return checkDigit; } 
@org.junit.Test public void testInvalidNullURI() { try { java.net.URL url = mastsh.toURL(null); org.junit.Assert.fail(("expected IllegalArgumentException, got " + url)); } catch (java.lang.IllegalArgumentException expected) { <BUGS> ca.nrc.cadc.caom2.artifact.resolvers.MastResolverTest.log.debug(("IllegalArgumentException thrown as expected. Test passed.: " + expected)); <BUGE> } catch (java.lang.Exception unexpected) { ca.nrc.cadc.caom2.artifact.resolvers.MastResolverTest.log.error("unexpected exception", unexpected); org.junit.Assert.fail(("unexpected exception: " + unexpected)); } } 
@java.lang.Override public boolean add(E e) { java.lang.Object[] arr2 = new java.lang.Object[(arr.length) + 1]; for (int x = 0; x < (arr.length); x++) { arr2[x] = arr[x]; } arr2[arr.length] = e; <BUGS> <BUGE> return true; } 
public java.util.ArrayList pendingBids() { java.util.ArrayList<com.ismailmare.warondemand.WarItem> itemsBeingBidOn = new java.util.ArrayList<>(); for (int i = 0; i < (inventory.size()); i++) { <BUGS> if ((inventory.get(i).getStatus()) == "BidOn") { <BUGE> itemsBeingBidOn.add(inventory.get(i)); } } return itemsBeingBidOn; } 
@java.lang.Override public void run() { <BUGS> for (org.bukkit.entity.Player player : this.plugin.playersToCheck) { if (!(this.plugin.checkWorld(player.getWorld().getName()))) { player.sendMessage(("This world is currently restricted.\n" + (DimRestrictor.plugin.info(player.getWorld().getName())))); net.kaikk.mc.DimRestrictor.DimRestrictor.teleportPlayer(player, player.getLocation()); <BUGE> } <BUGS> this.plugin.playersToCheck.remove(player); <BUGE> } } 
<BUGS> public void testNextExecutionEveryTwoWeeksStartingWithFirstDayOfYear() throws java.lang.Exception { <BUGE> com.cronutils.model.time.ZonedDateTime now = com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest.truncateToDays(com.cronutils.model.time.ZonedDateTime.now()); int dayOfYear = now.getDayOfYear(); int dayOfMostRecentPeriod = dayOfYear % 14; <BUGS> com.cronutils.model.time.ZonedDateTime expected = (dayOfMostRecentPeriod == 1) ? now : now.plusDays((15 - dayOfMostRecentPeriod)); <BUGE> com.cronutils.model.time.ExecutionTime executionTime = com.cronutils.model.time.ExecutionTime.forCron(parser.parse(com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest.BI_WEEKLY_STARTING_WITH_FIRST_DAY_OF_YEAR)); assertEquals(expected, executionTime.nextExecution(now).get()); } 
<BUGS> public void ParseJSONObject() { <BUGE> int code = 0; try { code = jsonObj.getInteger("cod"); } catch (java.lang.Exception e) { } if (code == 200) { org.vertx.java.core.json.JsonObject newData = CreateCorrectJSONObject(); CreateCorrectResponseString(newData); <BUGS> <BUGE> }else { responseString.append(jsonObj); <BUGS> <BUGE> } } 
@java.lang.Override public void setForeground(java.awt.Color color) { if ((foreground) == null) { super.setForeground(color); <BUGS> <BUGE> } <BUGS> if ((module) != null) for (java.awt.Component c : getComponents()) { c.setForeground(color); }  <BUGE> } 
private int getColumn() { int x; java.util.Scanner scanner = new java.util.Scanner(java.lang.System.in); while (true) { java.lang.System.out.print("Please enter the column number (1-10):"); x = scanner.nextInt(); if ((x >= 1) & (x <= 10)) <BUGS> return x; <BUGE>  } } 
private java.lang.Long fetchSearchKeyId(java.lang.String suggestedField) { javax.persistence.Query query = mgr.createQuery("select f from MetadataEntity f where f.value = :value"); query.setParameter("value", suggestedField); java.util.List<org.esbtools.message.admin.common.orm.MetadataEntity> queryResult = ((java.util.List<org.esbtools.message.admin.common.orm.MetadataEntity>) (query.getResultList())); <BUGS> if ((queryResult != null) && ((queryResult.size()) != 0)) { <BUGE> return queryResult.get(0).getId(); } return null; } 
private static java.lang.String _getParentMessageIdFromSubject(javax.mail.Message message) throws java.lang.Exception { if ((message.getSubject()) == null) { return null; } java.lang.String parentMessageId = null; java.lang.String subject = message.getSubject(); int pos = subject.lastIndexOf(CharPool.LESS_THAN); if (pos != (-1)) { <BUGS> parentMessageId = subject.substring((pos + 1)); <BUGE> } return parentMessageId; } 
@java.lang.Override public <T> T loadClass(java.lang.Class<T> pluginClass) { <BUGS> java.lang.String id = classToBeanMap.get(pluginClass.getCanonicalName()); <BUGE> if (id != null) { return osgiPluginTracker.getBean(pluginClass, this, id); }else { try { return pluginClass.newInstance(); } catch (java.lang.Exception e) { logger.error("Error instancing plugin class: ", e); return null; } } } 
@java.lang.Override public java.util.LinkedList<com.compomics.util.experiment.identification.matches.SpectrumMatch> getAllSpectrumMatches(com.compomics.util.waiting.WaitingHandler waitingHandler, com.compomics.util.experiment.identification.identification_parameters.SearchParameters searchParameters, com.compomics.util.preferences.SequenceMatchingPreferences sequenceMatchingPreferences, boolean expandAaCombinations) throws java.io.IOException, java.lang.ClassNotFoundException, java.lang.IllegalArgumentException, java.lang.InterruptedException, java.sql.SQLException, javax.xml.bind.JAXBException, org.xmlpull.v1.XmlPullParserException { <BUGS> this.fixedModifications = searchParameters.getPtmSettings().getFixedModifications(); <BUGE> if ((spectrumMatches) == null) { parseFile(waitingHandler, expandAaCombinations, true); } return spectrumMatches; } 
private void setPlaceGuess(java.lang.String placeGuess) { <BUGS> placeGuess = placeGuess.trim(); <BUGE> if ((placeGuess != null) && ((placeGuess.length()) > 0)) { mLocationGuess.setText(placeGuess); mObservation.place_guess = placeGuess; }else { mLocationGuess.setText(R.string.set_location); mObservation.place_guess = null; } } 
public boolean isHelpValid(java.lang.String[] arguments) { if ((arguments.length) == 0) { return true; }else if ((arguments.length) == 1) { <BUGS> return !(commandList_.getHelpArgumentList().contains(arguments[0])); <BUGE> }else { return false; }  } 
@java.lang.Override <BUGS> public void setFakeHash() { <BUGE> if ((this.hash.length()) == 0) { this.hash = this.pack.getId(); if ((this.hash.length()) == (org.spongepowered.common.resourcepack.SpongeResourcePack.HASH_SIZE)) { this.hash += " "; } } <BUGS> <BUGE> } 
public void addMeal(ru.javawebinar.topjava.model.Meal m) { if (ru.javawebinar.topjava.DAO.MealDao.mealInMemory.containsKey(m.getId())) { ru.javawebinar.topjava.DAO.MealDao.mealInMemory.put(m.getId(), m); }else { <BUGS> m.setId(ru.javawebinar.topjava.DAO.MealDao.getNewId()); <BUGE> ru.javawebinar.topjava.DAO.MealDao.mealInMemory.put(m.getId(), m); } } 
<BUGS> private void postConvert(final short[] inPixels, final byte[] outPixels, final int begin, final int end) { <BUGE> int q = begin; <BUGS> for (int p = begin; p < end;) { final short f = inPixels[(p++)]; <BUGE> outPixels[(q++)] = (f <= (-16257)) ? 0 : f >= 16256 ? -1 : ((byte) ((f + 16384) >> 7)); <BUGS> } <BUGE> } 
@java.lang.Override public void run() { while ((hitQueue.size()) > 0) { org.bukkit.event.entity.EntityDamageByEntityEvent e = hitQueue.remove(); <BUGS> org.bukkit.Bukkit.getPluginManager().callEvent(e); if (!(e.isCancelled())) ((org.bukkit.entity.Damageable) (e.getEntity())).damage(e.getDamage(), e.getDamager());  <BUGE> } } 
private org.atlasapi.equiv.results.scores.Score score(java.util.List<java.lang.Integer> subjSeriesSizes, org.atlasapi.media.entity.Container cand, org.atlasapi.equiv.results.description.ResultDescription desc) { if (!(cand instanceof org.atlasapi.media.entity.Brand)) { <BUGS> desc.appendText("%s: not Brand -> %.2f", mismatchScore.asDouble()); <BUGE> return mismatchScore; } return score(subjSeriesSizes, ((org.atlasapi.media.entity.Brand) (cand)), desc); } 
public static bar.f0o.jlisp.lib.Net.IPPacket fromByteArray(byte[] packet) throws java.lang.RuntimeException { <BUGS> if ((packet.length) < 20) <BUGE> throw new java.lang.RuntimeException("Payload too short for IP");  if (((packet[0]) >> 4) == 4) return new bar.f0o.jlisp.lib.Net.IPv4Packet(packet); else if (((packet[0]) >> 4) == 6) return new bar.f0o.jlisp.lib.Net.IPv6Packet(packet); else { throw new java.lang.RuntimeException(("Illegal IP version number: " + (packet[0]))); }  } 
private org.eclipse.jface.viewers.StyledString getStyledString(com.boothen.jsonedit.outline.NodeType type, java.lang.String key, java.lang.String value) { java.lang.String fgColor = type.getForegroundColor(); java.lang.String bkColor = type.getBackgroundColor(); org.eclipse.jface.viewers.StyledString text = new org.eclipse.jface.viewers.StyledString(); <BUGS> text.append(key); text.append(": "); <BUGE> text.append(value, org.eclipse.jface.viewers.StyledString.createColorRegistryStyler(fgColor, bkColor)); return text; } 
public static java.util.Calendar parseDateTime(java.lang.String dateTimeString) throws java.text.ParseException { helper.CalendarHelper.FORMAT_DATE_TIME.setLenient(false); dateTimeString = dateTimeString.trim(); java.util.Calendar datetime = java.util.Calendar.getInstance(); datetime.setTime(helper.CalendarHelper.FORMAT_DATE_TIME.parse(dateTimeString)); <BUGS> if (!(helper.CalendarHelper.getDateTimeString(datetime).equals(dateTimeString))) { <BUGE> throw new java.text.ParseException(dateTimeString, 0); } return datetime; } 
private void handleFoundAllFiles(final java.util.Set<java.io.File> allFiles) throws java.io.IOException { if ((wildcardExpanderHandler) != null) { try { wildcardExpanderHandler.transform(allFiles); } catch (final java.lang.Exception e) { <BUGS> <BUGE> throw new java.io.IOException(("Exception during expanding wildcard: " + (e.getMessage()))); } } } 
private net.es.oscars.helpers.RequestedVlanFlowE buildRequestedFlow(java.util.Set<net.es.oscars.helpers.RequestedVlanJunctionE> junctions, java.util.Set<net.es.oscars.helpers.RequestedVlanPipeE> pipes, java.lang.Integer minPipes, java.lang.Integer maxPipes, java.lang.String connectionId) { <BUGS> return net.es.oscars.helpers.RequestedVlanFlowE.builder().junctions(junctions).pipes(pipes).minPipes(minPipes).maxPipes(minPipes).containerConnectionId(connectionId).build(); <BUGE> } 
@java.lang.Override public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) { final android.view.View view = inflater.inflate(R.layout.movie_detail_view, container, false); mUnbinder = butterknife.ButterKnife.bind(this, view); if ((getArguments()) != null) { android.os.Bundle bundle = getArguments(); mMovieId = bundle.getInt(MovieViewHolderPortrait.MOVIEID_KEY, (-1)); timber.log.Timber.d("movieId: %d", mMovieId); } <BUGS> mIvMovieDetailPoster.setImageResource(R.drawable.contact_one); <BUGE> return view; } 
private wyal.lang.Formula extractDeclarationInvariant(wyal.util.Declaration.Named decl, wyal.util.Tuple<wyal.util.Expr> arguments) { if (decl instanceof wyal.util.Declaration.Named.Type) { wyal.util.Declaration.Named.Type td = ((wyal.util.Declaration.Named.Type) (decl)); return expandTypeInvariant(td, arguments.getOperand(0)); <BUGS> }else { wyal.util.Declaration.Named.Macro md = ((wyal.util.Declaration.Named.Macro) (decl)); return expandMacroBody(md, arguments.getOperands()); } <BUGE> } 
@java.lang.Override public void handle(javafx.scene.input.MouseEvent event) { if (digitsim.DigitSimController.isLocked()) { return ; } Gestures.NodeGestures.draggedAnchorPoint = true; aP.setCoords(toolbox.GenFunctions.getXYAdaptGrid(new general.Vector2i(((int) (event.getX())), ((int) (event.getY()))))); <BUGS> c.moveAnchorPoint(aP); <BUGE> c.drawDirectPreLine(); } 
@java.lang.Override public boolean equals(java.lang.Object o) { <BUGS> return o instanceof West.Math.ComplexNumber ? (((West.Math.ComplexNumber) (o)).real.equals(real)) && (((West.Math.ComplexNumber) (o)).imag.equals(imag)) : false; <BUGE> } 
@java.lang.Override public void render(float delta) { clearingScreen(); viewportRender(); <BUGS> game.batch.begin(); game.batch.draw(sprite_title, 100, (((com.jsl.babytrader.Data.ConstData.SCREEN_HEIGHT) - (sprite_title.getHeight())) - 50)); <BUGE> stage.act(Gdx.graphics.getDeltaTime()); stage.draw(); <BUGS> <BUGE> game.batch.end(); } 
public static int maxInBounds(int[] A, int lowerBound, int upperBound) { int max = 0; int[] bounds = new int[]{ lowerBound , upperBound }; for (int i = MyMath.min(bounds); i < ((MyMath.max(bounds)) + 1); i++) { <BUGS> java.lang.System.out.format("%d is between %d and %d%n", i, lowerBound, upperBound); <BUGE> max = java.lang.Math.max(A[i], max); } return max; } 
private void exportSubmission() { java.lang.String tableId = tableIds[tableSpin.getSelectedItemPosition()]; <BUGS> org.opendatakit.tables.tasks.ExportTask task = new org.opendatakit.tables.tasks.ExportTask(org.opendatakit.tables.utils.ImportExportDialog.newInstance(ImportExportDialog.EXPORT_IN_PROGRESS_DIALOG, this), appName, this); <BUGE> task.execute(new org.opendatakit.tables.tasks.ExportRequest(appName, tableId, qualifierTextBox.getText().toString().trim())); } 
@com.codecool.neighbrotaxi.controller.RequestMapping(value = "/logged-in-user", method = RequestMethod.GET) <BUGS> public com.codecool.neighbrotaxi.model.SerializableSessionStorage loggedInUser() { <BUGE> sessionStorage.clearAllErrorMessages(); sessionStorage.clearAllInfoMessages(); if (java.util.Objects.equals(sessionStorage.getLoggedInUser().getName(), "anonymous")) { sessionStorage.addErrorMessage("Nobody is logged in!"); <BUGS> <BUGE> }else { sessionStorage.setLoggedInUser(userService.findByUsername(sessionStorage.getLoggedInUser().getUsername())); } <BUGS> return new com.codecool.neighbrotaxi.model.SerializableSessionStorage(sessionStorage); <BUGE> } 
private void startScanning() { <BUGS> android.bluetooth.le.ScanSettings settings = neew; android.bluetooth.le.ScanSettings.Builder().setScanMode(ScanSettings.SCAN_MODE_LOW_POWER).build(); <BUGE> mBluetoothLeScanner.startScan(new java.util.ArrayList<android.bluetooth.le.ScanFilter>(), settings, mScanCallback); if (com.foodaholic.foodaholic.service.EddystoneScannerService.DEBUG_SCAN) android.util.Log.d(com.foodaholic.foodaholic.service.EddystoneScannerService.TAG, "Scanning started…");  } 
@java.lang.Override public void changed(javafx.beans.value.ObservableValue<? extends java.lang.Boolean> observable, java.lang.Boolean oldValue, java.lang.Boolean newValue) { if (newValue) { <BUGS> if (!(getChildren().contains(closeButton))) <BUGE> getChildren().add(closeButton); <BUGS>  <BUGE> }else { getChildren().removeIf(( c) -> c.equals(closeButton)); } } 
private void labelCpuInventory() { if (game.getCpu()) if ((game.getCpuPlayer()) == (Player.BLUE)) { blueInvLabel.setVisible(true); redInvLabel.setVisible(false); }else { blueInvLabel.setVisible(false); redInvLabel.setVisible(true); } <BUGS>  <BUGE> } 
public org.json.JSONObject toJSON() { org.json.JSONObject json = new org.json.JSONObject(); org.json.JSONArray a = new org.json.JSONArray(); for (com.whizzosoftware.hobson.dto.ErrorDTO error : errors) { <BUGS> a.put(error); <BUGE> } json.put("errors", a); return json; } 
private javax.swing.JMenu initImportMenu() { javax.swing.JMenu importMenu = new javax.swing.JMenu("Импорт/Экспорт"); javax.swing.JMenuItem importMenuItem = new javax.swing.JMenuItem("Импорт/Экспорт данных"); importMenu.add(importMenuItem); <BUGS> importMenuItem.addActionListener(( ae) -> { new diplom.importexport.ImportExportSwingFrame("импорт/кспорт данных"); }); <BUGE> return importMenu; } 
@java.lang.Override public com.tsystems.javaschool.db.entities.Contract addNew(com.tsystems.javaschool.db.entities.Contract contract, java.util.List<java.lang.Integer> optionsIds) { javax.persistence.EntityTransaction transaction = contractDao.getTransaction(); com.tsystems.javaschool.business.services.interfaces.OptionService optionService = new com.tsystems.javaschool.business.services.implementations.OptionServiceImpl(); boolean insideOtherTransaction = transaction.isActive(); <BUGS> if (!insideOtherTransaction) transaction.begin();  contract.setUsedOptions(optionService.loadOptionsByIds(optionsIds)); <BUGE> contractDao.create(contract); <BUGS> if (!insideOtherTransaction) transaction.commit();  <BUGE> return contract; } 
@java.lang.Override public org.eclipse.jface.text.contentassist.IContentAssistant getContentAssistant(final org.eclipse.jface.text.source.ISourceViewer sourceViewer) { final org.eclipse.jface.text.contentassist.ContentAssistant assistant = new org.eclipse.jface.text.contentassist.ContentAssistant(); assistant.setContentAssistProcessor(new eu.modelwriter.core.alloyinecore.ui.editor.completion.AIECompletionProcessor(), IDocument.DEFAULT_CONTENT_TYPE); <BUGS> assistant.setAutoActivationDelay(500); <BUGE> assistant.enableAutoActivation(true); assistant.enableAutoInsert(true); assistant.setProposalPopupOrientation(IContentAssistant.PROPOSAL_OVERLAY); assistant.setContextInformationPopupOrientation(IContentAssistant.CONTEXT_INFO_ABOVE); return assistant; } 
private void catchTheGift() { if (gift.getRect().intersects(paddle.getRect())) { gift = null; for (brickbreaker.source.Ball ball : balls) { if ((ball.getSpeed()) >= 3) { ball.setSpeed(brickbreaker.source.BALL_SPEED); ball.setImage(brickbreaker.source.BALL); }else <BUGS> if ((paddle.width) <= 50) { <BUGE> Sound.SIZEUP.play(); paddle.setWidth(75); }else { score += 10; }  } } } 
public void followUser() { com.firebase.client.Firebase fb = com.stazo.project_18.Project_18.getFB(); if (Project_18.me.getUserTrails().contains(user_ID)) { Project_18.me.removeTrail(fb, user_ID); setFollowButton(false); }else { Project_18.me.addTrail(fb, user_ID); <BUGS> com.stazo.project_18.Notification not = new com.stazo.project_18.Notification(Project_18.me.getID(), Project_18.me.getName(), 0); not.pushToFirebase(fb, user_ID); <BUGE> setFollowButton(true); } } 
<BUGS> @org.junit.Test <BUGE> public void testFindAll() throws java.lang.Exception { populateData(); int expectedSize = 12; int actualSize = 0; java.util.List<net.smartcosmos.dto.things.ThingResponse> response = persistenceService.findAll(tenantUrn); <BUGS> org.junit.Assert.assertFalse(response.isEmpty()); <BUGE> actualSize = response.size(); <BUGS> org.junit.Assert.assertTrue(((("Expected " + expectedSize) + " but received ") + actualSize), (actualSize == expectedSize)); <BUGE> } 
<BUGS> private int getStartIndex(tspUtil.Node[] randomPath) { <BUGE> int start = 0; double MAX = 0; for (int i = 0; i < (numOfCity); i++) { for (int j = 0; j < (numOfCity); j++) { if ((distance[i][j]) > MAX) { MAX = distance[i][j]; start = i; } } } return start; } 
@java.lang.Override public void run() { try { if (!(chatManager.getContacts().isEmpty())) { <BUGS> specialfilldatabase(); <BUGE> updatevalues(); adapter.refreshEvents(infochat, imgid); }else { android.widget.Toast.makeText(getActivity(), "No Contact now", Toast.LENGTH_SHORT).show(); } } catch (java.lang.Exception e) { errorManager.reportUnexpectedSubAppException(SubApps.CHT_CHAT, UnexpectedSubAppExceptionSeverity.DISABLES_SOME_FUNCTIONALITY_WITHIN_THIS_FRAGMENT, e); } mSwipeRefreshLayout.setRefreshing(false); } 
public java.lang.String printJobs() { java.lang.StringBuilder out = new java.lang.StringBuilder(); out.append("\nJob ID\tJob name\tStatus\n"); for (java.lang.String job : mappedJobs.keySet()) { <BUGS> out.append(job).append("\t").append(mappedJobs.get(job)[0]).append("\t").append(mappedJobs.get(job)[1]); <BUGE> } return out.toString(); } 
private void init() { recyclerView = ((android.support.v7.widget.RecyclerView) (findViewById(R.id.list))); recyclerView.setLayoutManager(new com.xiaofeng.flowlayoutmanager.FlowLayoutManager()); <BUGS> recyclerView.setAdapter(new com.xiaofeng.androidlibs.TagAdapter(com.xiaofeng.androidlibs.DemoUtil.generate(200, 3, 13))); <BUGE> } 
public void baseExpectations() { new tests.unit.com.microsoft.azure.iothub.transport.amqps.NonStrictExpectations() { { mockConfig.getIotHubHostname(); result = hostName; mockConfig.getIotHubName(); result = hubName; mockConfig.getDeviceId(); result = deviceId; mockConfig.getDeviceKey(); result = deviceKey; com.microsoft.azure.iothub.net.IotHubUri.getResourceUri(hostName, deviceId); result = resourceUri; <BUGS> new com.microsoft.azure.iothub.auth.IotHubSasToken(resourceUri, deviceKey, anyLong); result = mockToken; <BUGE> } }; } 
@java.lang.Override protected void onPause() { super.onPause(); <BUGS> rc.stop(); pauseTime = java.lang.System.currentTimeMillis(); totalForgroundTime = (tinydb.getLong("TotalForegroundTime", 0)) + ((pauseTime) - (resumeTime)); tinydb.putLong("TotalForegroundTime", totalForgroundTime); <BUGE> } 
@java.lang.Override public void onClick(android.view.View v) { if ((v.getId()) == (R.id.upload_files_btn_cancel)) { setResult(com.owncloud.android.ui.activity.RESULT_CANCELED); finish(); }else <BUGS> if (((v.getId()) == (R.id.upload_files_btn_upload)) && ((mBehaviourSpinner.getSelectedItemPosition()) == 0)) { new com.owncloud.android.ui.activity.UploadFilesActivity.CheckAvailableSpaceTask().execute(); <BUGE> }  } 
<BUGS> private boolean matchesContract(net.nikr.eve.jeveasset.gui.tabs.contracts.MyContractItem contractItem, boolean add) { return (contractItem != null) && (matches(add, contractItem.getTypeID(), (contractItem.getContract().isForCorp() ? contractItem.getContract().getIssuerCorpID() : contractItem.getContract().getIssuerID()), null, null, contractItem.getContract().getLocations(), null, null, null, null, contractItem)); <BUGE> } 
public void categorySelected(org.unpidf.univmobile.data.entities.Category cat) { <BUGS> onBackPressed(); <BUGE> android.app.FragmentManager manager = getFragmentManager(); org.unpidf.univmobile.ui.fragments.GeoCampusFragment f = ((org.unpidf.univmobile.ui.fragments.GeoCampusFragment) (manager.findFragmentByTag(org.unpidf.univmobile.ui.fragments.GeoCampusFragment.class.getName()))); if (f != null) { f.categorySelected(cat); } } 
public boolean remove(int index) { if ((index < 1) || (index > (size()))) return false;  com.seb.research.algorithms.LinkedList.Node current = head; for (int i = 1; i < index; i++) { if ((current.getNext()) == null) { return false; } <BUGS> <BUGE> } current.setNext(current.getNext().getNext()); (count)--; return true; } 
@java.lang.Override protected mmt.uit.placehelper.models.Direction doInBackground(java.lang.String... params) { mmt.uit.placehelper.models.Direction direct = new mmt.uit.placehelper.models.Direction(); <BUGS> direct = mmt.uit.placehelper.services.SearchPlace.getDirection(curLoc.getLat(), curLoc.getLng(), plDetail.getGeometry().getLocation().getLat(), plDetail.getGeometry().getLocation().getLng(), params[1]); <BUGE> try { java.lang.Thread.sleep(1000); } catch (java.lang.InterruptedException e) { e.printStackTrace(); } return direct; } 
@java.lang.Override public void onConnected(android.os.Bundle bundle) { <BUGS> android.os.Debug.waitForDebugger(); <BUGE> route = new com.polsl.roadtracker.database.entity.RouteData(); route.start(); routeDataDao.insert(route); startLocationUpdate(); sensorReader.startSensorReading(route.getId(), this.getSharedPreferences("SensorReaderPreferences", Context.MODE_PRIVATE)); <BUGS> android.os.Debug.waitForDebugger(); <BUGE> } 
@java.lang.Override protected T create() { java.lang.String subType = getPropertyValue(com.oculusinfo.factory.UberFactory.FACTORY_TYPE); try { <BUGS> return produce(subType, com.oculusinfo.factory.UberFactory.getFactoryType()); <BUGE> } catch (com.oculusinfo.factory.ConfigurationException e) { com.oculusinfo.factory.UberFactory.LOGGER.warn("Error creating product {}[{}] for {}", new java.lang.Object[]{ com.oculusinfo.factory.UberFactory.getFactoryType() , com.oculusinfo.factory.UberFactory.getName() , subType }); return null; } } 
@java.lang.Override public void onRequestPermissionsResult(int requestCode, java.lang.String[] permissions, int[] grantResults) { if (requestCode == 0) { <BUGS> if ((((grantResults.length) > 0) && ((grantResults[0]) == (android.content.pm.PackageManager.PERMISSION_GRANTED))) && ((grantResults[1]) == (android.content.pm.PackageManager.PERMISSION_DENIED))) { <BUGE> btn_takePictureButton.setEnabled(true); } } } 
public java.util.Calendar calcDataCobranca(java.util.Calendar dataCompra) { java.util.Calendar dataCobranca = java.util.Calendar.getInstance(); dataCobranca.setTime(dataCompra.getTime()); <BUGS> <BUGE> if ((dataCobranca.get(java.util.Calendar.DAY_OF_MONTH)) >= (diaVirada)) { dataCobranca.add(java.util.Calendar.MONTH, 1); } dataCobranca.set(java.util.Calendar.DAY_OF_MONTH, diaVencimento); return dataCobranca; } 
public void notifyRegistrationError() { android.util.Log.v(com.plugin.gcm.NotificationService.TAG, ("GCM Registration Failed for webview " + (getWebView()))); if ((getRegisterCallBack()) != null) { setNotifiedOfRegistered(false); getRegisterCallBack().error(mNotificationService.mRegistrationErrorId); }else { <BUGS> android.util.Log.v(com.plugin.gcm.NotificationService.TAG, "registration error -> No Register callback - webview: "); getWebView(); <BUGE> } } 
@java.lang.Override public void run() { while (connected) { try { java.lang.String message = in.readLine(); <BUGS> java.lang.System.out.println(("ici : " + message)); <BUGE> player.getMessageFromClient(message); } catch (java.io.IOException ex) { connected = false; player.getMessageFromClient("disconnected"); } } } 
private void recurseImpliedPermissions(com.hypersocket.permissions.PermissionType t, java.util.Set<com.hypersocket.permissions.PermissionType> derivedPermissions) { <BUGS> if (!(derivedPermissions.contains(t))) { <BUGE> derivedPermissions.add(t); if ((t.impliesPermissions()) != null) { for (com.hypersocket.permissions.PermissionType t2 : t.impliesPermissions()) { recurseImpliedPermissions(t2, derivedPermissions); } } } } 
public void renameResidence(java.lang.String oldResidence, java.lang.String newResidence) { if (oldResidence == null) return ;  if (newResidence == null) return ;  oldResidence = oldResidence.toLowerCase(); <BUGS> newResidence = newResidence.toLowerCase(); <BUGE> com.bekvon.bukkit.residence.protection.ClaimedResidence res = ResidenceList.get(oldResidence); if (res != null) { removeResidence(oldResidence); <BUGS> ResidenceList.put(newResidence, res); <BUGE> } } 
private void generateColors() { if ((builder.colorsTop) != null) { <BUGS> android.util.Log.d("testtt", "colors top not null"); <BUGE> colorsTop = builder.colorsTop; colorsSub = builder.colorsSub; return ; } if (builder.accentMode) { <BUGS> android.util.Log.d("testtt", "is accent mode"); <BUGE> colorsTop = ColorPalette.ACCENT_COLORS; colorsSub = ColorPalette.ACCENT_COLORS_SUB; }else { <BUGS> android.util.Log.d("testtt", "is not accent mode"); <BUGE> colorsTop = ColorPalette.PRIMARY_COLORS; colorsSub = ColorPalette.PRIMARY_COLORS_SUB; } } 
@org.junit.Test public void getFormattedDateString_30years() { <BUGS> org.hamcrest.MatcherAssert.assertThat(com.ddiehl.timesincetextview.TimeSince.getFormattedDateString(((mTime) - ((((30 * 365) * 24) * 60) * 60)), mTime, false, com.ddiehl.timesincetextview.TimeSinceTextViewAndroidTest.mContext), com.ddiehl.timesincetextview.TimeSinceTextViewAndroidTest.is(getQuantityString(R.plurals.tstv_timespan_years, 30))); <BUGE> } 
@com.sogilis.ReactNativeBluetooth.ReactMethod public void disconnect(final com.sogilis.ReactNativeBluetooth.ReadableMap deviceMap) { final java.lang.String deviceId = deviceMap.getString("id"); <BUGS> com.sogilis.ReactNativeBluetooth.BluetoothAction disconnectAction = new com.sogilis.ReactNativeBluetooth.BluetoothAction(DEVICE_DISCONNECTED, eventEmitter) { <BUGE> @java.lang.Override public void run() throws com.sogilis.ReactNativeBluetooth.domain.BluetoothException { com.sogilis.ReactNativeBluetooth.BluetoothGatt gatt = gattCollection.get(deviceId); gatt.disconnect(); bluetoothActionsLoop.actionDone(); } }; bluetoothActionsLoop.addAction(disconnectAction); } 
@java.lang.Override public int hashCode() { <BUGS> int result = super.hashCode(); result = (31 * result) + ((t1) != null ? t1.hashCode() : 0); <BUGE> result = (31 * result) + ((t2) != null ? t2.hashCode() : 0); return result; } 
@org.junit.Test public void test_addAlbumToListExt() throws java.lang.Exception { at.sw2017.awesomeinc.awesomeplayer.Album album = new at.sw2017.awesomeinc.awesomeplayer.Album(); android.test.MoreAsserts.assertNotEqual(null, album); at.sw2017.awesomeinc.awesomeplayer.AlbumListAdapter adapter = new at.sw2017.awesomeinc.awesomeplayer.AlbumListAdapter(album); android.test.MoreAsserts.assertNotEqual(null, adapter); adapter.addAlbum("Hallo Welt!"); <BUGS> junit.framework.Assert.assertTrue(adapter.getAlbumList().get(0).equals("Hallo Welt!")); <BUGE> } 
@java.lang.Override public java.lang.String getJSON() { <BUGS> java.lang.System.out.println("FILE"); <BUGE> javax.json.JsonObject json = org.jtool.macrorecorder.macro.MacroJSON.getJSONObjectBuikder(this).add(MacroJSON.JSON_ATTR_CODE, code).add(MacroJSON.JSON_ATTR_CHARSET, charset).add(MacroJSON.JSON_ATTR_SRD_DST_PATH, srcDstPath).build(); return org.jtool.macrorecorder.macro.MacroJSON.stringify(json); } 
public void ExtractOnlineDocuments() { if ((profile.getUrls().size()) > 0) { for (java.lang.String url : profile.getUrls()) { ExtractWebArticles(url); } driver.quit(); <BUGS> ExtractKeyterms(); <BUGE> }else { driver.quit(); } <BUGS> <BUGE> } 
public final void updateIncompatibleList(final domain.ContractOption option, final java.util.List<domain.ContractOption> newIncOptions) { <BUGS> java.util.List<domain.ContractOption> currentIncOptions = option.getIncompatibleOptions(); java.util.List<domain.ContractOption> removingOptions = new java.util.ArrayList(currentIncOptions); <BUGE> removingOptions.removeAll(newIncOptions); <BUGS> java.util.List<domain.ContractOption> newOptions = new java.util.ArrayList(newIncOptions); <BUGE> newOptions.removeAll(currentIncOptions); for (domain.ContractOption removingOption : removingOptions) { deleteIncompatibleOptions(option, removingOption); } <BUGS> for (domain.ContractOption newOption : newIncOptions) { <BUGE> addIncompatibleOptions(option, newOption); } } 
<BUGS> private boolean isManaTurn(int turnNum) { <BUGE> int current = 1; int past = 0; while (current < (turnNum + 1)) { int temp = current; current += past; past = temp; if (current == turnNum) { return true; } } return false; } 
<BUGS> public java.lang.String actionSignup(java.lang.String role) { <BUGE> boh.jee.ejb.model.Guest user = null; user = new boh.jee.ejb.model.User(); user.setGuestName(userName); user.setGuestPhone(userPhone); user.setGuestEmail(userEmail); if (userSrv.userSignUp(user)) { return "roomlist"; }else { illegalAccess = true; return "signup"; } } 
public static final void setEnvironment(final com.oracle.truffle.api.object.DynamicObject obj, final com.oracle.truffle.api.object.DynamicObject value) { <BUGS> com.oracle.truffle.api.object.Shape oldShape = obj.getShape().createSeparateShape(obj.getShape().getSharedData()); com.oracle.truffle.api.object.Shape newShape = oldShape.replaceProperty(obj.getShape().getProperty(som.vmobjects.SReflectiveObject.ENVIRONMENT), com.oracle.truffle.api.object.Property.create(som.vmobjects.SReflectiveObject.ENVIRONMENT, oldShape.allocator().constantLocation(value), 0)); <BUGE> obj.setShapeAndGrow(oldShape, newShape); } 
public static void main(java.lang.String[] args) { java.util.Scanner scan = new java.util.Scanner(java.lang.System.in); int N = scan.nextInt(); long r = scan.nextInt(); long c = scan.nextInt(); long base = 0; long result = Main.getPoint((r + 1), (c + 1), N, base); <BUGS> java.lang.System.out.println(result); <BUGE> } 
<BUGS> private static java.lang.String encrypt(java.lang.String algorithm, java.lang.String clearText) { <BUGE> try { java.security.MessageDigest pwd = java.security.MessageDigest.getInstance(algorithm); pwd.update(clearText.getBytes()); return com.sun.org.apache.xerces.internal.impl.dv.util.HexBin.encode(pwd.digest()); } catch (java.security.NoSuchAlgorithmException e) { throw new java.lang.RuntimeException(("No Such Algorithm: " + algorithm)); } } 
private com.google.hashcode.List<com.google.hashcode.integer> fillAllDifferenceY(com.google.hashcode.List<com.google.hashcode.Cell> slice) { com.google.hashcode.List<java.lang.Integer> diffY = new com.google.hashcode.ArrayList<java.lang.Integer>(); for (com.google.hashcode.Cell cell : slice) { <BUGS> if (!(diffX.contains(cell.y))) { diffX.add(cell.y); <BUGE> } } return diffY; } 
public java.util.List<Actor> detection(java.util.List<Actor> actors) { for (Actor a1 : actors) { a1.setInAir(true); for (Actor a2 : actors) { <BUGS> if ((a1 != a2) && ((a1.getName()) != "floor")) { <BUGE> if (isCollision(a1, a2)) resolveCollision(a1, a2);  } } } return actors; } 
<BUGS> public static <T extends java.io.Serializable> void print(T[] o) { <BUGE> java.lang.String delim = "{"; <BUGS> for (T elem : o) { <BUGE> myUtils.ConsolePrinting.print(delim); myUtils.ConsolePrinting.print(elem); delim = ", "; } delim = (delim.equals("{")) ? "{}" : "}"; myUtils.ConsolePrinting.print(delim); } 
private javax.jcr.Node newNode(final javax.jcr.Node parent, final org.xml.sax.Attributes attributes) throws javax.jcr.RepositoryException { javax.jcr.Node parentNode; if (parent == null) { <BUGS> parentNode = session.getRootNode(); <BUGE> }else { parentNode = parent; } final java.lang.String name = attributes.getValue("name"); final java.lang.String primaryType = attributes.getValue("primaryType"); io.inkstand.scribble.rules.jcr.util.XMLContentHandler.LOG.info("Node {} adding child node {}(type={})", parentNode.getPath(), name, primaryType); return parentNode.addNode(name, primaryType); } 
@java.lang.Override public void validate(com.couchbase.lite.Document doc) { <BUGS> java.util.Map<java.lang.String, java.lang.Object> result = new java.util.TreeMap<>(); <BUGE> int count = 0; com.couchbase.lite.Dictionary dictObj = doc.getDictionary("dict"); for (java.lang.String key : dictObj) { result.put(key, dict.getObject(key)); count++; } org.junit.Assert.assertEquals(finalContent.size(), count); org.junit.Assert.assertEquals(finalContent, result); } 
@javafx.fxml.FXML public void initialize() { desc.setText(task.getDesc().getValue()); id.setText(((displayedIndex) + ". ")); <BUGS> venue.setText(task.getVenue().value); <BUGE> priority.setText(task.getPriority().getValue()); time.setText(task.getTime().getValue()); tags.setText(task.tagsString()); } 
public void evolve(double time, asteroids.part2.CollisionListener collistionListener) { if (time <= 0) { return ; } double timeToFirstCollision = this.getTimeToFirstCollision(); if (time <= timeToFirstCollision) { this.advance(time); return ; <BUGS> <BUGE> } <BUGS> this.advance(timeToFirstCollision); this.resolveCollision(collistionListener); java.lang.System.out.println(timeToFirstCollision); this.evolve((time - timeToFirstCollision), collistionListener); <BUGE> } 
boolean areNodesWorking() { if (((com.telenav.sdk_sample.ui.Header.AutopilotStatusDecisions.statusObject.gettingPerceptionData()) && (com.telenav.sdk_sample.ui.Header.AutopilotStatusDecisions.statusObject.gettingControlData())) && (com.telenav.sdk_sample.ui.Header.AutopilotStatusDecisions.statusObject.gettingLaneData())) { return true; }else { setStatus(com.telenav.sdk_sample.ui.Header.AutopilotStatusDecisions.NODES_NOT_WORKING); <BUGS> return true; <BUGE> } } 
@org.junit.Test public void testRunProjectWithPassingTests() { org.jboss.reddeer.swt.api.Shell workbenchShell = new org.jboss.reddeer.workbench.impl.shell.WorkbenchShell(); org.jboss.tools.fuse.ui.bot.test.ProjectLocalRunTest.log.info("Run a project as Local Camel Context (Project contains a passing test case)."); new org.jboss.reddeer.workbench.impl.editor.DefaultEditor("CamelContextXmlTest.java").activate(); org.jboss.tools.fuse.ui.bot.test.utils.EditorManipulator.copyFileContent("resources/PassingTest.java"); <BUGS> new org.jboss.tools.fuse.reddeer.projectexplorer.CamelProject(org.jboss.tools.fuse.ui.bot.test.ProjectLocalRunTest.PROJECT_NAME).runCamelContext(org.jboss.tools.fuse.ui.bot.test.ProjectLocalRunTest.PROJECT_CAMEL_CONTEXT); <BUGE> workbenchShell.setFocus(); org.junit.Assert.assertFalse("This build should be successful.", new org.jboss.reddeer.eclipse.ui.console.ConsoleView().getConsoleText().contains("BUILD FAILURE")); } 
public void removeAtIndex(int index) { if (index <= 0) { removeFirstNode(); }else if (index >= ((size) - 1)) { removeLastNode(); }else { a3.LinkedList.Node stepNode = head; for (int i = 1; i < index; ++i) { stepNode = stepNode.next; } stepNode.next = stepNode.next.next; stepNode = stepNode.next; stepNode = null; <BUGS> <BUGE> }  <BUGS> --(size); <BUGE> } 
@org.junit.Test public void testDescriptionOfServicePayment() { try { model.PaymentDescription description = new model.PaymentDescription(1, 1); <BUGS> payment = new model.Payment(service, 1, 1, 0); <BUGE> assertEquals(description.getPaymentType(), payment.getDescription().getPaymentType()); assertEquals(description.getPaymentForm(), payment.getDescription().getPaymentForm()); } catch (exception.PaymentException e) { fail(("Should not throw this exception: " + (e.getMessage()))); } } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); camera = new com.example.svenscan.svenscan.utils.Camera(this, this); com.example.svenscan.svenscan.SvenScanApplication app = ((com.example.svenscan.svenscan.SvenScanApplication) (getApplication())); wordManager = app.getWordRepository(); <BUGS> ocr = new com.example.svenscan.svenscan.utils.ocr.OCRDecoder(app); <BUGE> } 
public Model.GameObject.Item.Weapon addWeapon(Model.GameObject.Item.ItemEnum id, java.lang.String name, java.lang.String description, int x, int y, int requiredLevel, Model.GameObject.Item.Items.Takables.Quest requiredItem, Model.StatStruc modify) { this.id = id; <BUGS> location = new Model.Location(x, y, 0); <BUGE> requirement = new Model.Requirement(requiredLevel, requiredItem); effect = new Model.Effects.Effect(modify); return new Model.GameObject.Item.Weapon(id, name, description, location, requirement, effect); } 
void enable(org.bukkit.plugin.java.JavaPlugin plugin) { this._plugin = plugin; se.fredsfursten.donationboardplugin.BoardController.numberOfDays = se.fredsfursten.donationboardplugin.DonationBoardPlugin.getPluginConfig().getInt("Days"); se.fredsfursten.donationboardplugin.BoardController.numberOfLevels = se.fredsfursten.donationboardplugin.DonationBoardPlugin.getPluginConfig().getInt("Levels"); this._model = new se.fredsfursten.donationboardplugin.BoardModel(se.fredsfursten.donationboardplugin.BoardController.numberOfDays, se.fredsfursten.donationboardplugin.BoardController.numberOfLevels); <BUGS> load(se.fredsfursten.donationboardplugin.DonationBoardPlugin.getDonationsStorageFile()); this._knownPlayers = new se.fredsfursten.plugintools.PlayerCollection<se.fredsfursten.donationboardplugin.PlayerInfo>(); <BUGE> } 
@java.lang.Override public net.minecraft.util.ActionResult<net.minecraft.item.ItemStack> onItemRightClick(net.minecraft.world.World world, net.minecraft.entity.player.EntityPlayer player, net.minecraft.util.EnumHand hand) { net.minecraft.item.ItemStack stack = player.getHeldItem(hand); if (world.isRemote) { return new net.minecraft.util.ActionResult<net.minecraft.item.ItemStack>(net.minecraft.util.EnumActionResult.FAIL, stack); } net.minecraft.util.math.Vec3d releasePoint = this.getAirPositionInFrontOfPlayer(world, player, 0.8); <BUGS> this.releaseBug(stack, world, player, hand, releasePoint); return new net.minecraft.util.ActionResult<net.minecraft.item.ItemStack>(net.minecraft.util.EnumActionResult.SUCCESS, stack); <BUGE> } 
public User findUser(java.lang.String strUsername, java.lang.String strPassword) { User objUser = null; UserDAO objUserDAO = null; try { <BUGS> <BUGE> objUser = objUserDAO.getUserByEmailAndPassword(strUsername, strPassword); } catch (java.lang.Exception e) { e.printStackTrace(); } return objUser; } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); <BUGS> if (!(getSharedPreferences(CONST.PREFS, com.brainmurphy.roomhack.MODE_PRIVATE).getBoolean(CONST.IS_LOGGED_IN, false))) { <BUGE> startActivity(new android.content.Intent(this, com.brainmurphy.roomhack.Dashboard.class)); } bLogin = ((android.widget.Button) (findViewById(R.id.bLogIn))); bLogin.setOnClickListener(this); bRegister = ((android.widget.Button) (findViewById(R.id.bRegister))); bRegister.setOnClickListener(this); } 
@java.lang.Override protected void layoutSingularComponent(com.vaadin.ui.Component component) { switch (getPacking()) { case EXPAND : <BUGS> layoutComponent(component, "100%", 0, Alignment.MIDDLE_RIGHT); <BUGE> break; case SPACE_AFTER : layoutComponent(component, null, 0, Alignment.TOP_RIGHT); break; case SPACE_BEFORE : layoutComponent(component, null, 0, Alignment.BOTTOM_RIGHT); break; case SPACE_AROUND : layoutComponent(component, null, 0, Alignment.MIDDLE_RIGHT); break; } } 
@org.junit.Test <BUGS> public void Set_ExtendedIngredients() { <BUGE> com.sem4ikt.uni.recipefinderchatbot.model.ExtendedIngredientModel ingredient = new com.sem4ikt.uni.recipefinderchatbot.model.ExtendedIngredientModel(); ingredient.setImage("test"); java.util.List<com.sem4ikt.uni.recipefinderchatbot.model.ExtendedIngredientModel> list = new java.util.ArrayList<>(); list.add(ingredient); recipeModel.setExtendedIngredients(list); org.junit.Assert.assertEquals(recipeModel.getExtendedIngredients(), list); } 
@java.lang.Override public java.lang.Object call(org.mozilla.javascript.Context cx, org.mozilla.javascript.Scriptable scope, org.mozilla.javascript.Scriptable thisObj, java.lang.Object[] args) { <BUGS> if ((connection.current()) == null) { throw new java.lang.IllegalStateException("cannot call remote functions without a connected client in context"); } <BUGE> connection.current().send(jj.jjmessage.JJMessage.makeCall(java.lang.String.valueOf(args[0]), java.lang.String.valueOf(args[1]))); return org.mozilla.javascript.Undefined.instance; } 
@java.lang.Override public final int calculateValue(final nl.tue.s2id90.draughts.DraughtsState draughtsState, final boolean isWhitePlayer, final int depth) { int value = 0; for (nl.tue.s2id90.group05.HeuristicComponent component : components) { <BUGS> value = component.calculateComponentValue(draughtsState, isWhitePlayer, depth, value); <BUGE> } return value; } 
@java.lang.Override public <T> T getService(org.terracotta.entity.ServiceConfiguration<T> configuration) { <BUGS> T builtInService = (null != (this.owningEntity)) ? getBuiltInService(configuration) : null; <BUGE> T externalService = getExternalService(configuration); com.tc.util.Assert.assertFalse(((null != builtInService) && (null != externalService))); return null != builtInService ? builtInService : externalService; } 
@java.lang.Override public boolean parseMsg(java.lang.String subject, java.lang.String body, net.anei.cadpage.parsers.MsgInfo.Data data) { net.anei.cadpage.parsers.VA.Parser p = new net.anei.cadpage.parsers.VA.Parser(subject); data.strUnit = p.getLast(' '); java.lang.String source = p.get(); <BUGS> if ((source.length()) == 0) return false;  <BUGE> if (!(super.parseMsg(body, data))) return false;  data.strBox = data.strSource; data.strSource = source; return true; } 
@java.lang.Override public void onNext(T i) { <BUGS> if (!(isUnsubscribed())) { boolean stop = (++(count)) >= (limit); <BUGE> child.onNext(i); if (stop && (!(completed))) { completed = true; try { child.onCompleted(); } finally { unsubscribe(); } } } } 
private void checkProduct(java.lang.String developerId, java.lang.String productId) { com.umasuo.device.center.application.dto.ProductView product = restClient.getProduct(developerId, productId); <BUGS> if (developerId.equals(product.getDeveloperId())) { <BUGE> com.umasuo.device.center.application.service.UnionApplication.LOGGER.debug("Developer: {} don't own this product: {}.", developerId, productId); throw new com.umasuo.exception.AuthFailedException("Developer do not own this product"); } if (!(ProductStatus.PUBLISHED.equals(product.getStatus()))) { com.umasuo.device.center.application.service.UnionApplication.LOGGER.debug("Product: {} is not published.", productId); throw new com.umasuo.exception.CreateResourceFailed("Product is not published"); } } 
<BUGS> @java.lang.Override <BUGE> public void ReInit(java.io.Reader stream) { jj_input_stream.ReInit(stream, 1, 1); token_source.ReInit(jj_input_stream); token = new org.sbml.jsbml.text.parser.Token(); jj_ntk = -1; jj_gen = 0; <BUGS> for (int i = 0; i < 17; i++) { <BUGE> jj_la1[i] = -1; <BUGS> } for (int i = 0; i < (jj_2_rtns.length); i++) { <BUGE> jj_2_rtns[i] = new org.sbml.jsbml.text.parser.FormulaParserLL3.JJCalls(); <BUGS> } <BUGE> } 
public static void main(java.lang.String[] args) { TraceGenerator generator = new TraceGenerator(4, 4, 4, 4, 8, 12, 4, 4, 3, 5); Computation computation = generator.generateTrace(); java.lang.System.out.println(computation); App app = new App(false, true, false, false); java.util.List<Computation> computations = app.generateComputations(computation); <BUGS> java.lang.System.out.println(computations.get(0)); <BUGE> } 
public void init() { onCreateChildAssociation = new org.alfresco.repo.policy.JavaBehaviour(this, "onCreateChildAssociation", Behaviour.NotificationFrequency.TRANSACTION_COMMIT); beforeCopyDocumentFolder = new org.alfresco.repo.policy.JavaBehaviour(this, "beforeCopy"); <BUGS> afterCopyDocumentFolder = new org.alfresco.repo.policy.JavaBehaviour(this, "onCopyComplete"); <BUGE> this.policyComponent.bindAssociationBehaviour(OnCreateChildAssociationPolicy.QNAME, OpenESDHModel.TYPE_DOC_SIMPLE, ContentModel.ASSOC_CONTAINS, this.onCreateChildAssociation); this.policyComponent.bindClassBehaviour(BeforeCopyPolicy.QNAME, OpenESDHModel.TYPE_DOC_SIMPLE, this.beforeCopyDocumentFolder); this.policyComponent.bindClassBehaviour(OnCopyCompletePolicy.QNAME, OpenESDHModel.TYPE_DOC_SIMPLE, this.afterCopyDocumentFolder); } 
public boolean isOppositeOf(org.eclipse.emf.diffmerge.api.diff.IReferenceValuePresence peer_p) { <BUGS> return ((((getPresenceRole()) == (peer_p.getPresenceRole())) && ((getFeature().getEOpposite()) == (peer_p.getFeature()))) && ((getElementMatch()) == (peer_p.getValueMatch()))) && ((getValue()) == (peer_p.getElementMatch())); <BUGE> } 
@Test(enabled = false, groups = { "scenario" , "loop" , "templates" , "invitations" , "branded messaging" }) public void bmCanVerifyNewImagePresentInEnrollCustomerPreviewBody() { BrandedMessagingTests.setupTemplate(); clientportal.WireMessageEditorPage.Goto().setCheckboxField(WireMessageEditorCheckboxField.MAKE_TEMPLATE_AVAILABLE_IN_ENROLL_CUSTOMER, true).setCheckboxField(WireMessageEditorCheckboxField.ADD_IMAGE, true).setDropDownValue(WireMessageEditorDropDownField.IMAGE, BrandedMessagingTests.imageID).clickSaveAndActivateLink(); <BUGS> clientportal.EnrollCustomerPage.Goto().selectTemplate(BrandedMessagingTests.templateName).verifyPreviewImage(BrandedMessagingTests.imageID, true).selectTemplate(BrandedMessagingTests.templateNameImage).verifyPreviewImage(BrandedMessagingTests.imageID, false); <BUGE> } 
public void update() { if ((type) == (Type.BASICENEMY)) { (timer)++; this.move(Direction.DOWN, speed); int timeToShoot = rnd.nextInt(3); if ((timeToShoot == 0) && (((timer) % 100) == 0)) { Sound.play("src/sounds/enemyBlaster.wav"); <BUGS> shoot(Type.BULLET, Direction.DOWN, GamePanel.getGameObjects(), GamePanel.getProjectileList()); <BUGE> timer = 0; } } } 
public static void printFloatingBackground(int i, java.lang.String msg) { <BUGS> <BUGE> java.lang.System.out.println((((((((UI.ui.BACKGROUND_BLUE) + (UI.ui.HIGH_INTENSITY)) + (UI.ui.YELLOW)) + i) + ".\t") + msg) + (ansi().reset()))); } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); checkCameraHardware(); if (isRecording) { mMediaRecorder.stop(); releaseMediaRecorder(); mCamera.lock(); isRecording = false; }else { if (prepareVideoRecorder()) { mMediaRecorder.start(); mMediaRecorder.setMaxDuration(30000); <BUGS> billy.justincase.MainActivity.getOutputMediaFileUri(); <BUGE> isRecording = true; }else { releaseMediaRecorder(); } } } 
public void setActionValue(java.lang.Object actionValue) { if (actionValue == null) return ;  currentValue = actionValue; if (!(action.getValue().equals(actionValue))) this.action.setValue(actionValue);  initChildList(); <BUGS> logger.debug("setAction value: {}, children: {}", actionValue, ((getCurrentParameters()) == null ? "null" : getCurrentParameters().size())); <BUGE> } 
private boolean isListOperation(int command) { <BUGS> return (((((command == (INDEX_ADD)) || (command == (INDEX_EDIT))) || (command == (INDEX_DELETE))) || (command == (INDEX_COMPLETE))) || (command == (INDEX_OVERDUE))) || (command == (INDEX_INCOMPLETE)); <BUGE> } 
public java.lang.String GetToken(java.lang.String sessionID) { for (burp.AntiCSRFToken antiCSRFToken : tokens) { <BUGS> if (antiCSRFToken.sessionID.equals(sessionID)) { <BUGE> try { antiCSRFToken.LockToken(); } catch (java.lang.InterruptedException e) { antiCSRFToken.ReleaseToken(); e.printStackTrace(); } return antiCSRFToken.tokenValue; } } return null; } 
@java.lang.Override public net.minecraft.nbt.NBTTagCompound writeToNBT(net.minecraft.nbt.NBTTagCompound tag) { if ((location) != null) location.writeToNBT(tag);  if ((type) != null) type.writeToNBT(tag); else { <BUGS> java.lang.System.out.println("REMOVING NULL THING"); <BUGE> mcmultipart.multipart.MultipartHelper.getPartContainer(getWorld(), getPos()).removePart(this); } return tag; } 
private static void showToast(final android.app.Activity activity, @android.support.annotation.Nullable final java.lang.String msg, final int length) { java.lang.Runnable toastRunnable = new java.lang.Runnable() { @java.lang.Override public void run() { android.widget.Toast.makeText(activity, msg, length).show(); } }; <BUGS> if (io.particle.android.sdk.utils.EZ.isThisTheMainThread()) { toastRunnable.run(); }else { io.particle.android.sdk.utils.EZ.runOnMainThread(toastRunnable); } <BUGE> } 
<BUGS> public static java.lang.String getImports() { <BUGE> java.lang.StringBuilder sb = new java.lang.StringBuilder("import org.junit.Test;\n"); sb.append("import org.junit.Before;\n"); sb.append("import org.junit.Assert;\n"); for (java.lang.String imp : main.MakeTests.imports) { if (main.MakeTests.isValidClass(imp)) { sb.append((("import " + imp) + ";\n")); } } return sb.toString(); } 
private static boolean isSubset(final playground.thibautd.initialdemandgeneration.empiricalsocnet.snowball.SnowballCliques.Clique subset, final playground.thibautd.initialdemandgeneration.empiricalsocnet.snowball.SnowballCliques.Clique of) { <BUGS> return (of.getEgo().getId().equals(of.getEgo().getId())) && (of.alters.containsAll(subset.alters)); <BUGE> } 
@java.lang.Override public void onResponse(final retrofit2.Call<com.charlesmadere.hummingbird.models.Feed> call, final retrofit2.Response<com.charlesmadere.hummingbird.models.Feed> response) { final com.charlesmadere.hummingbird.models.Feed body = (response.isSuccessful()) ? response.body() : null; if (body == null) { listener.failure(com.charlesmadere.hummingbird.networking.Api.retrieveErrorInfo(response)); }else { <BUGS> com.charlesmadere.hummingbird.networking.Api.hydrateFeed(body, feed, listener); <BUGE> } } 
private void saveSettings() { <BUGS> android.util.Log.i("....", "Story activity saved"); <BUGE> android.content.SharedPreferences settings = getSharedPreferences(MainMenuActivity.PREFS_NAME, Context.MODE_PRIVATE); android.content.SharedPreferences.Editor editor = settings.edit(); editor.putString("activity", "story_page"); editor.putString("story", story.getUniqueID()); editor.putInt("page", currentPage); editor.commit(); } 
@org.junit.Test <BUGS> public void getName() throws java.lang.Exception { <BUGE> pingproject.biz.beans.PingBean mockPingBean = mock(pingproject.biz.beans.PingBean.class); doReturn(mockPingBean).when(pingproject.web.ManagedBeans.PingWebBeanTest.spy).getPingBean(); <BUGS> pingproject.web.ManagedBeans.PingWebBeanTest.spy.getName(); <BUGE> verify(pingproject.web.ManagedBeans.PingWebBeanTest.spy).getPingBean(); verify(mockPingBean).retrieveName(); } 
@org.junit.Test public void getAll() throws java.lang.Exception { com.cinema.controller.rest.CustomerControllerTest.LOGGER.debug("mock test: getAll()"); java.util.List<com.cinema.model.Customer> customers = new java.util.ArrayList<>(); customers.add(com.cinema.controller.rest.CustomerControllerTest.CUSTOMER_1); customers.add(com.cinema.controller.rest.CustomerControllerTest.CUSTOMER_2); expect(customerServiceMock.getAllCustomers()).andReturn(customers); replay(customerServiceMock); <BUGS> mockMvc.perform(get(com.cinema.controller.rest.CustomerControllerTest.CUSTOMER_GET_ALL).accept(MediaType.APPLICATION_JSON)).andDo(org.springframework.test.web.servlet.result.MockMvcResultHandlers.print()).andExpect(status().isFound()); <BUGE> } 
private void SRLInstruction() { int rd = file.nextInt(); <BUGS> file.next(); <BUGE> int rs = file.nextInt(); <BUGS> file.next(); <BUGE> int sa = file.nextInt(); file.nextLine(); int funct = 8; int rt = 0; java.lang.String opc = "SRL"; ilist.add(((interfaces.IInstruction) (new model.RTypeInstruction(opc, rd, rs, rt, sa, funct)))); } 
@java.lang.Override public boolean doPreAddUser(java.lang.String userName, java.lang.Object credential, java.lang.String[] roleList, java.util.Map<java.lang.String, java.lang.String> claims, java.lang.String profile, org.wso2.carbon.user.core.UserStoreManager userStoreManager) throws org.wso2.carbon.user.core.UserStoreException { try { if ((!(isEnable())) || (!(userStoreManager.isSCIMEnabled()))) { return true; } } catch (org.wso2.carbon.identity.scim.common.listener.org.wso2.carbon.user e) { throw new org.wso2.carbon.user.core.UserStoreException("Error while reading isScimEnabled from userstore manager", e); } <BUGS> claims = this.getSCIMAttributes(userName, claims); <BUGE> return true; } 
@java.lang.Override public emcshop.scraper.EmcSession login(java.lang.String username, java.lang.String password) throws java.io.IOException { com.github.mangstadt.emc.net.EmcWebsiteConnection connection = null; try { connection = new com.github.mangstadt.emc.net.EmcWebsiteConnectionImpl(username, password); <BUGS> return new emcshop.scraper.EmcSession(connection.getCookieStore()); <BUGE> } catch (com.github.mangstadt.emc.net.InvalidCredentialsException e) { return null; } finally { org.apache.commons.io.IOUtils.closeQuietly(connection); } } 
public void start(java.lang.String s) { org.alicebot.server.core.Globals.load(s); shell = new org.alicebot.server.core.util.Shell(inStream, displayStream, promptStream); server = new org.alicebot.server.net.AliceServer(s, shell); org.alicebot.server.core.util.Trace.setOut(displayStream); <BUGS> server.startup(); <BUGE> shutdown(); } 
@java.lang.Override public void changeState(com.example.alexander_topilskii.internetradio.models.database.Station station) { <BUGS> <BUGE> if (station != null) { <BUGS> currentState = State.IS_WAIT; listener.setPlayerStates((-1), State.IS_WAIT); <BUGE> if ((mediaPlayer) == null) initPlayer(station.getSource()); else { if (mediaPlayer.isPlaying()) { pause(); }else { play(); } } } } 
@java.lang.Override protected android.graphics.Bitmap doInBackground(java.lang.String... params) { <BUGS> android.graphics.Bitmap moviePoster = null; <BUGE> try { java.io.InputStream in = new java.net.URL(params[0]).openStream(); moviePoster = android.graphics.BitmapFactory.decodeStream(in); } catch (java.lang.Exception e) { android.util.Log.d("Error", params[0]); e.printStackTrace(); } return moviePoster; } 
@java.lang.Override public void onBackPressed() { if (mDrawerLayout.isDrawerOpen(mDrawerListView)) { mDrawerLayout.closeDrawer(mDrawerListView); return ; } <BUGS> fragmentMediator.backPressWebView(); edu.rutgers.css.Rutgers.utils.LogUtils.LOGV(edu.rutgers.css.Rutgers.ui.MainActivity.TAG, ("Back button pressed. Leaving top component: " + (edu.rutgers.css.Rutgers.utils.AppUtils.topHandle(this)))); super.onBackPressed(); <BUGE> } 
@java.lang.Override protected void onSuccess(java.util.List<com.jiuzhang.guojing.dribbbo.model.Shot> shots) { <BUGS> if ((shots.size()) < (com.jiuzhang.guojing.dribbbo.dribbble.Dribbble.COUNT_PER_LOAD)) { adapter.setShowLoading(false); } <BUGE> if (refresh) { swipeRefreshLayout.setRefreshing(false); adapter.setData(shots); }else { swipeRefreshLayout.setEnabled(true); adapter.append(shots); } } 
public void disconnect() { <BUGS> try { log.info("Closing connection."); this.dc.close(); log.info("Connection close."); } catch (java.io.IOException e) { log.error(e.getLocalizedMessage()); log.error("Impossible to close connection."); } <BUGE> } 
public int[][] getBuffer() { <BUGS> int[][] out = new int[_grid.length][_grid[0].length]; for (int i = 0; i < (_grid.length); i++) for (int j = 0; j < (_grid[0].length); j++) <BUGE> out[i][j] = _buffer[i][j];   return out; } 
@org.springframework.web.bind.annotation.RequestMapping(value = "/start") public org.springframework.web.servlet.ModelAndView start(com.infofilter.model.SearchConfig sc) throws java.lang.InterruptedException { crawl.setSearchConfig(sc); <BUGS> crawl.run(sc.getUrlSeed()); <BUGE> java.util.List<com.infofilter.model.UrlInfo> urlList = com.infofilter.crawl.Crawl.urlInfoList; org.springframework.web.servlet.ModelAndView mav = new org.springframework.web.servlet.ModelAndView("result"); mav.addObject("urlList", urlList); return mav; } 
public void initScene(final int scale, final com.jme3.math.Vector3f translation) { java.lang.System.out.println("SCENE_PATH file found!"); java.lang.System.out.println((("=> loading " + (com.funkydonkies.gamestates.SceneState.SCENE_PATH.toString())) + " Spatial ...")); <BUGS> loadScene(com.funkydonkies.gamestates.SceneState.SCENE_PATH, scale, translation); <BUGE> java.lang.System.out.println("... DONE loading .scene Spatial <="); } 
static boolean isAxiom(Expression d) { for (int i = 0; i < (LogicHW1.axioms.size()); i++) { if (LogicHW1.axioms.get(i).equalStruct(d, new java.util.HashMap<>(), true)) { <BUGS> LogicHW1.out.println((("Сх. акс. " + i) + 1)); <BUGE> return true; } } return false; } 
private void deleteAppointmentByDateInt(java.lang.Integer date) { android.database.sqlite.SQLiteDatabase db = this.getWritableDatabase(); java.lang.String Query = (((((((("DELETE FROM " + (com.z3r0byte.magistify.DatabaseHelpers.CalendarDB.TABLE_CALENDAR)) + " WHERE ") + (com.z3r0byte.magistify.DatabaseHelpers.CalendarDB.KEY_FORMATTED_START)) + " <= ") + date) + " AND ") + (com.z3r0byte.magistify.DatabaseHelpers.CalendarDB.KEY_FORMATTED_END)) + " >= ") + date; <BUGS> android.util.Log.d(com.z3r0byte.magistify.DatabaseHelpers.CalendarDB.TAG, ("deleteAppointmentByDateInt: Query: " + Query)); <BUGE> db.execSQL(Query); } 
@java.lang.Override public void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); if (getArguments().containsKey(com.example.jeffrey.finalprototype.CommuteDetailFragment.ARG_ITEM_ID)) { mItem = Content.COMMUTE_MAP.get(getArguments().getString(com.example.jeffrey.finalprototype.CommuteDetailFragment.ARG_ITEM_ID)); android.app.Activity activity = this.getActivity(); android.support.design.widget.CollapsingToolbarLayout appBarLayout = ((android.support.design.widget.CollapsingToolbarLayout) (activity.findViewById(R.id.toolbar_layout))); <BUGS> if (appBarLayout != null) { <BUGE> appBarLayout.setTitle(mItem.id); } } } 
public void actionPerformed(final java.awt.event.ActionEvent event) { if ((pvLoggerID) != 0) { if (USE_PVLOGGER.isSelected()) USE_LOGGEDBEND.setEnabled(true); else USE_LOGGEDBEND.setEnabled(false);  <BUGS> CONFIG_PVLOGGER_DATA.actionPerformed(null); <BUGE> setHasChanges(true); }else { javax.swing.JOptionPane.showMessageDialog(mainWindow, "You need to select pvLoggerData first", "Warning!", javax.swing.JOptionPane.PLAIN_MESSAGE); USE_PVLOGGER.setSelected(false); } } 
@java.lang.Override public void show() { super.show(); <BUGS> Gdx.app.debug(com.lothbrok.game.screens.MainMenuScreen.TAG, "show"); <BUGE> stage = new com.badlogic.gdx.scenes.scene2d.Stage(new com.badlogic.gdx.utils.viewport.ExtendViewport(Resolution.instance.getMenuWidth(), Resolution.instance.getMenuHeight())); skin = assets.getMainMenuSkin(); colorSky = skin.getColor(MainMenuConstants.MAIN_MENU_COLOR_SKY); Gdx.input.setInputProcessor(stage); rebuildStage(); audio = new com.lothbrok.game.audio.Audio(assets.getMusicAssets(), assets.getSoundAssets()); audio.playMenuMusic(); } 
public float activated(float[] inputs) { int temp = 0; for (int i = 0; i < (inputs.length); i++) { temp += (inputs[i]) * (weights[i]); } <BUGS> return ((float) (1 / (1 + (java.lang.Math.pow(java.lang.Math.E, (-temp)))))); <BUGE> } 
public int scoreBoard() { switch (game.max) { case "W" : score = (scoreWhite()) - (scoreBlack()); break; case "B" : score = (scoreBlack()) - (scoreWhite()); break; default : break; } <BUGS> <BUGE> } 
public void run() { java.lang.String playerName = player.getName(); org.bukkit.scoreboard.Team playerTeam = org.bukkit.Bukkit.getScoreboardManager().getMainScoreboard().getEntryTeam(playerName); <BUGS> player.setDisplayName(((((playerTeam.getPrefix()) + playerName) + (playerTeam.getSuffix())) + (org.bukkit.ChatColor.RESET))); <BUGE> } 
public double slopeTo(Point that) { if ((this.compareTo(that)) == 0) { return java.lang.Double.NEGATIVE_INFINITY; } if ((this.x) == (that.x)) { return java.lang.Double.POSITIVE_INFINITY; } <BUGS> <BUGE> return ((double) ((that.y) - (this.y))) / ((that.x) - (this.x)); } 
private void execute(final io.toast.tk.dao.domain.impl.test.block.ITestPlan testPlan, final io.toast.tk.runtime.TestRunner runner) { initEnvironment(); for (final io.toast.tk.dao.domain.impl.test.block.ICampaign campaign : testPlan.getCampaigns()) { for (io.toast.tk.dao.domain.impl.test.block.ITestPage testPage : campaign.getTestCases()) { try { beginTest(); <BUGS> testPage = runner.run(testPage); <BUGE> endTest(); } catch (final java.lang.Exception e) { io.toast.tk.runtime.AbstractTestPlanRunner.LOG.error(e.getMessage(), e); } } } createAndOpenReport(testPlan); tearDownEnvironment(); } 
@org.junit.Test public void testDataFrame() throws java.lang.Exception { http2Connect(); <BUGS> sendSimplePostRequest(3); readSimplePostResponse(); <BUGE> org.junit.Assert.assertEquals(("0-WindowSize-[128]\n" + ((((("3-WindowSize-[128]\n" + "3-HeadersStart\n") + "3-Header-[:status]-[200]\n") + "3-HeadersEnd\n") + "3-Body-128\n") + "3-EndOfStream\n")), output.getTrace()); } 
private io.minio.HttpResponse executeGet(java.lang.String bucketName, java.lang.String objectName, java.util.Map<java.lang.String, java.lang.String> headerMap, java.util.Map<java.lang.String, java.lang.String> queryParamMap) throws io.minio.ErrorResponseException, io.minio.InternalException, io.minio.InvalidBucketNameException, io.minio.NoResponseException, java.io.IOException, org.xmlpull.v1.XmlPullParserException { updateRegionMap(bucketName); <BUGS> return execute(Method.GET, Regions.INSTANCE.region(bucketName), bucketName, objectName, null, headerMap, queryParamMap); <BUGE> } 
@java.lang.Override public V put(K key, V value) { <BUGS> key = com.google.common.base.Preconditions.checkNotNull(key); value = com.google.common.base.Preconditions.checkNotNull(value); <BUGE> com.google.common.cache.LocalCache.Timestamped<V> oldValue = cachingHashMap.put(key, new com.google.common.cache.LocalCache.Timestamped<V>(value, ticker)); if (oldValue == null) { return null; } alertListenerIfPresent(key, oldValue.getValue(), com.google.common.cache.RemovalCause.REPLACED); return oldValue.getValue(); } 
<BUGS> private java.lang.Integer captchaHashCalculation(java.lang.String value) { <BUGE> int hash = 5381; value = value.toUpperCase(); for (int i = 0; i < (value.length()); i++) { hash = ((hash << 5) + hash) + (value.charAt(i)); } <BUGS> return java.lang.Integer.valueOf(hash); <BUGE> } 
private void readTokens(com.fsck.k9.mail.store.ImapResponseParser.ImapResponse response) throws java.io.IOException { response.clear(); java.lang.String firstToken = ((java.lang.String) (readToken(response))); response.add(firstToken); if (isStatusResponse(firstToken)) { parseResponseText(response); }else { java.lang.Object token; while ((token = readToken(response)) != null) { if (!(token instanceof com.fsck.k9.mail.store.ImapResponseParser.ImapList)) { response.add(token); } } } <BUGS> response.mCompleted = true; <BUGE> } 
public static boolean logoutUser(int sessionID) { java.lang.String sql = "DELETE FROM Session WHERE SessionID = ?"; try (java.sql.PreparedStatement stmt = bankserver.DBConnector.connection.prepareStatement(sql)) { stmt.setInt(1, sessionID); <BUGS> stmt.executeQuery(sql); <BUGE> return true; } catch (java.sql.SQLException e) { java.util.logging.Logger.getLogger(bankserver.DBConnector.class.getName()).log(java.util.logging.Level.SEVERE, null, e); } return false; } 
public org.apache.commons.lang3.tuple.Pair<java.lang.String, org.semanticweb.owlapi.model.OWLNamedIndividual> createIndividual(java.lang.String modelId, java.lang.String cid, java.util.Set<org.semanticweb.owlapi.model.OWLAnnotation> annotations, METADATA metadata) throws org.geneontology.minerva.MolecularModelManager.UnknownIdentifierException { org.geneontology.minerva.ModelContainer model = checkModelId(modelId); org.semanticweb.owlapi.model.OWLClass cls = getClass(cid, model); if (cls == null) { throw new org.geneontology.minerva.MolecularModelManager.UnknownIdentifierException(("Could not find a class for id: " + cid)); } org.semanticweb.owlapi.model.OWLNamedIndividual individual = createIndividual(model, cls, annotations, true, metadata); <BUGS> return org.apache.commons.lang3.tuple.Pair.of(org.geneontology.minerva.util.IdStringManager.getId(individual.getIRI()), individual); <BUGE> } 
private void okButtonActionPerformed(java.awt.event.ActionEvent evt) { java.util.ArrayList<java.awt.Point> roiData = util.DataManager.readRoiFile(chosenPath); <BUGS> if ((roiData.size()) > 0) { setFields(); notifyRoiListeners(roiData); if (defaultCheckBox.isSelected()) { notifyRoiListeners(chosenPath); <BUGE> } <BUGS> this.setVisible(false); }else { errorText.setText("Error loading: File not found!"); <BUGE> } } 
static java.lang.Object[] boxAndPadWithZeros(int length, long[] values) { long[] padded; if ((values.length) == length) { padded = values; }else { padded = new long[length]; <BUGS> java.lang.System.arraycopy(values, 0, padded, 0, values.length); <BUGE> } return java.util.Arrays.stream(padded).boxed().toArray(); } 
public static void getApplication() { git_aptra.SearchApplicant.DialogSearchApplicantApplication.educationalAchievement = java.lang.String.valueOf(git_aptra.SearchApplicant.DialogSearchApplicantApplication.boxEducationalAchievement.getSelectedItem()); if (git_aptra.SearchApplicant.DialogSearchApplicantApplication.educationalAchievement.equals("Bitte ausw�hlen")) { git_aptra.SearchApplicant.DialogSearchApplicantApplication.educationalAchievement = ""; } git_aptra.SearchApplicant.DialogSearchApplicantApplication.vacancy = java.lang.String.valueOf(git_aptra.SearchApplicant.DialogSearchApplicantApplication.boxVacancy.getSelectedItem()); <BUGS> if (git_aptra.SearchApplicant.DialogSearchApplicantApplication.educationalAchievement.equals("Bitte ausw�hlen")) { <BUGE> git_aptra.SearchApplicant.DialogSearchApplicantApplication.vacancy = ""; } } 
@java.lang.Override public void start(T project, boolean newInstance) { org.jenkinsci.plugins.rabbitmqbuildtrigger.RemoteBuildListener listener = org.jenkinsci.plugins.rabbitmqconsumer.extensions.MessageQueueListener.all().get(org.jenkinsci.plugins.rabbitmqbuildtrigger.RemoteBuildListener.class); if (listener != null) { listener.addTrigger(this); <BUGS> <BUGE> } super.start(project, newInstance); <BUGS> removeDuplicatedTrigger(listener.getTriggers()); <BUGE> } 
@java.lang.Override public void setTimescale(int order) { java.lang.System.out.println(("setTimescale " + order)); <BUGS> VCDLoaderTest.ExpectTraceBuilder.Event event = fEventList.elementAt(((fCurrentEvent)++)); <BUGE> assertEquals(event.fType, VCDLoaderTest.ExpectTraceBuilder.EXPECT_TIMESCALE); assertEquals(event.fTimestamp, ((long) (order))); } 
public static float[] getFloatArrayFromBuffer(java.nio.FloatBuffer buffer) { <BUGS> float[] array = null; <BUGE> if (buffer != null) { if (buffer.hasArray()) { array = buffer.array(); }else { buffer.rewind(); array = new float[buffer.capacity()]; buffer.get(array); } } return array; } 
private void validate(java.lang.Object source, java.lang.Object observer) { com.google.common.base.Preconditions.checkNotNull(source, "source"); <BUGS> com.google.common.base.Preconditions.checkNotNull(source, "observer"); <BUGE> com.google.common.base.Preconditions.checkArgument(verifySource(source), "Source is not the right type!"); <BUGS> com.google.common.base.Preconditions.checkArgument(verifySource(source), "Observer is not the right type!"); <BUGE> } 
public void setProperties(java.util.Map<java.lang.String, java.lang.Object> properties) { for (java.lang.Object o : properties.values()) { <BUGS> if ((!(o instanceof java.lang.String)) && (!(o instanceof java.lang.Double))) { <BUGE> throw new java.lang.IllegalArgumentException("Values must be Strings or Doubles."); } } this.properties = properties; } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_settings); android.support.v7.widget.Toolbar toolbar = ((android.support.v7.widget.Toolbar) (findViewById(R.id.toolbar))); setSupportActionBar(toolbar); <BUGS> getFragmentManager().beginTransaction().add(R.id.content_settings, new com.example.android.sunshine.app.SettingsFragment()).commit(); <BUGE> getSupportActionBar().setDisplayHomeAsUpEnabled(true); } 
public void execute(org.shipkit.internal.gradle.ReleaseNeededPlugin p) { project.getTasks().withType(org.shipkit.gradle.ReleaseNeededTask.class, new org.gradle.api.Action<org.shipkit.gradle.ReleaseNeededTask>() { public void execute(org.shipkit.gradle.ReleaseNeededTask t) { <BUGS> t.setBranch(branch); <BUGE> t.setCommitMessage(java.lang.System.getenv("TRAVIS_COMMIT_MESSAGE")); t.setPullRequest(isPullRequest); } }); } 
public static java.util.List<labfinder.Room> getAllRooms() { com.mongodb.client.MongoCollection<org.bson.Document> classCol = labfinder.MongoAccess.db.getCollection("Rooms"); java.util.List<org.bson.Document> all = classCol.find().into(new java.util.ArrayList<org.bson.Document>()); java.util.List<labfinder.Room> rooms = new java.util.ArrayList<labfinder.Room>(); for (org.bson.Document doc : all) { rooms.add(new labfinder.Room(doc)); <BUGS> <BUGE> } return rooms; } 
protected com.stormpath.sdk.api.ApiKey getTokenApiKey(javax.servlet.http.HttpServletRequest request, java.lang.String apiKeyId) throws com.stormpath.sdk.servlet.filter.oauth.OAuthException { try { return getEnabledApiKey(request, apiKeyId); } catch (com.stormpath.sdk.resource.ResourceException e) { com.stormpath.sdk.servlet.filter.oauth.OAuthErrorCode err = com.stormpath.sdk.servlet.filter.oauth.OAuthErrorCode.INVALID_CLIENT; java.lang.String msg = e.getStormpathError().getDeveloperMessage(); <BUGS> throw new com.stormpath.sdk.servlet.filter.oauth.OAuthException(err, msg, null, e); <BUGE> } } 
public void setUrl(java.lang.String url) { <BUGS> url = ensureprotocol(url); org.openmrs.mobile.activities.LoginActivity.mLastURL = url; <BUGE> org.openmrs.mobile.utilities.URLValidator.ValidationResult result = org.openmrs.mobile.utilities.URLValidator.validate(url); <BUGS> <BUGE> if (result.isURLValid()) { mSpinner.setVisibility(View.VISIBLE); mLoginFormView.setVisibility(View.GONE); new org.openmrs.mobile.net.LocationManager().getAvailableLocation(org.openmrs.mobile.net.helpers.LocationHelper.createAvailableLocationListener(result.getUrl(), this)); }else { showInvalidURLDialog(); } } 
public java.lang.String toByteCode(java.lang.String i_assembly) { java.util.List<backend.Compiler.asm_line> asm_array = new java.util.ArrayList<backend.Compiler.asm_line>(); java.lang.String byteCodeReturn = ""; java.lang.String[] raw_lines = i_assembly.split("\\r?\\n"); for (int line_i = 0; line_i < (raw_lines.length); line_i++) { <BUGS> asm_array.add(asm_line(raw_lines[line_i])); <BUGE> byteCodeReturn += asm_array.get(line_i).getByteCode(); } return byteCodeReturn; <BUGS> return ""; <BUGE> } 
private void setMedian() { <BUGS> int mid = (this.numbers.size()) / 2; if ((mid % 2) == 1) { this.medianOfAllNumbers = this.numbers.get(mid); }else { this.medianOfAllNumbers = ((this.numbers.get((mid - 1))) + (this.numbers.get(mid))) / 2.0; <BUGE> } } 
@java.lang.Override public com.edu.nju.asi.service.serviceImpl.Case uploadOnline(org.springframework.web.multipart.MultipartFile uploadedFile) throws java.io.IOException { if (uploadedFile.isEmpty()) { return null; } java.lang.String thisPath = uploadedFile.getName(); java.io.File thisFile = new java.io.File(thisPath); uploadedFile.transferTo(thisFile); com.edu.nju.asi.service.serviceImpl.Case wanted = parseXML(thisPath); boolean deleteResult = thisFile.delete(); <BUGS> java.lang.System.out.println(deleteResult); <BUGE> return wanted; } 
@org.junit.Test public void testJoinCollection() { boolean hasData = false; HgTupleStream stream = HgDB.join(PartTable.stream().joinOn(PartTable.self(PartTable.ID)), OdetailTable.on.pnos(), HgRelation.IN); for (org.mercurydb.queryutils.HgTupleStream.HgTuple t : stream) { hasData = true; <BUGS> if (!(t.get(OdetailTable.ID).pnos.contains(t.get(PartTable.ID).pno))) <BUGE> org.junit.Assert.fail();  } if (!hasData) org.junit.Assert.fail();  } 
@java.lang.Override public boolean availableForBooking(java.util.Set<com.real.apps.shuttle.domain.model.BookedRange> potentialBookedRanges, com.real.apps.shuttle.domain.model.BookedRange bookedRange) { if ((potentialBookedRanges == null) || (potentialBookedRanges.isEmpty())) { return true; } java.util.Iterator<com.real.apps.shuttle.domain.model.BookedRange> iterator = potentialBookedRanges.iterator(); while (iterator.hasNext()) { com.real.apps.shuttle.domain.model.BookedRange subject = iterator.next(); <BUGS> if (subject.coincide(bookedRange)) { <BUGE> return false; } } return true; } 
protected org.nd4j.linalg.api.ndarray.INDArray createScalarForIndex(int i, boolean applyOffset) { <BUGS> return org.nd4j.linalg.factory.Nd4j.create(data(), new int[]{ 1 , 1 }, new int[]{ 1 , 1 }, (applyOffset ? (offset) + i : i)); <BUGE> } 
@org.junit.Test public void testProcessAnd() throws net.torocraft.minecoprocessors.util.ParseException { net.torocraft.minecoprocessors.processor.Processor processor = net.torocraft.minecoprocessors.processor.ProcessorTest.setupTest(31, 2, 0, 0, "and a, b"); processor.processAnd(); <BUGS> assertRegisters(processor, 2, 2, 0, 0); <BUGE> org.junit.Assert.assertFalse(processor.zero); processor = net.torocraft.minecoprocessors.processor.ProcessorTest.setupTest(29, 2, 0, 0, "and a, b"); processor.processAnd(); <BUGS> assertRegisters(processor, 0, 2, 0, 0); <BUGE> org.junit.Assert.assertTrue(processor.zero); } 
@java.lang.SuppressWarnings(value = "rawtypes") private java.util.List<java.lang.Class> getClass(java.lang.Class clazz, java.util.List<java.lang.Class> classList) { if ((clazz.getSuperclass()) != null) { <BUGS> if (com.ai.dubbo.ext.vo.BaseInfo.class.equals(clazz.getSuperclass().getName())) { <BUGE> return classList; }else { classList.add(clazz.getSuperclass()); return getClass(clazz.getSuperclass(), classList); } } return classList; } 
public boolean ask(java.lang.String username, java.lang.String item, int qty, double price) { if (server.Server.isStockExists(item)) { models.user.User user = new models.user.User(null, username); <BUGS> server.Server.addAsk(user, models.trade.Stock.valueOf(item), qty, price); <BUGE> return true; } return false; } 
private static boolean isCyclic(int numberOfCourse, java.util.Map<java.lang.Integer, java.util.Set<java.lang.Integer>> prerequisitePerCourse) { for (int course = 0; course < numberOfCourse; course++) { <BUGS> java.util.Set<java.lang.Integer> targetCourses = new java.util.HashSet<java.lang.Integer>(); <BUGE> targetCourses.add(course); <BUGS> if ((com.sevendragons.practice.leetcode.medium.coursesschedule.Solution.isCourseContainedInPrerequisites(prerequisitePerCourse, targetCourses, course)) == true) { <BUGE> return true; } } return false; } 
@org.springframework.web.bind.annotation.RequestMapping(method = org.springframework.web.bind.annotation.RequestMethod.GET, value = "/categories/{categoryId}") public java.lang.String searchPostsAction(org.springframework.ui.ModelMap model, @org.springframework.web.bind.annotation.PathVariable(name = "categoryId") final java.lang.String categoryId) { java.util.List<be.nille.blog.domain.category.Category> categories = categoryService.findAll(); java.util.List<be.nille.blog.domain.post.Post> posts = postService.findPostsByCategory(categoryId); <BUGS> model.put("page", new be.nille.blog.web.controller.post.PostsPage(posts, categories)); <BUGE> return "blog/index"; } 
<BUGS> private rifServices.businessConceptLayer.HealthCode transformTaxonomyTermIntoHealthCode(rifServices.taxonomyServices.TaxonomyTerm term) { <BUGE> rifServices.businessConceptLayer.HealthCode healthCode = rifServices.businessConceptLayer.HealthCode.newInstance(); healthCode.setCode(term.getLabel()); healthCode.setTopLevelTerm(((term.getParentTerm()) == null)); healthCode.setNameSpace(term.getNameSpace()); healthCode.setDescription(term.getDescription()); healthCode.setNumberOfSubTerms(term.getSubTerms().size()); return healthCode; } 
public void broadcast(cn.nukkit.Player player) { <BUGS> java.lang.String translation = cn.nukkit.Server.getInstance().getLanguage().translateString("chat.type.achievement", player.getDisplayName(), ((cn.nukkit.utils.TextFormat.GREEN) + (this.getMessage()))); <BUGE> if (cn.nukkit.Server.getInstance().getPropertyBoolean("announce-player-achievements", true)) { cn.nukkit.Server.getInstance().broadcastMessage(translation); }else { player.sendMessage(translation); } } 
@java.lang.Override protected void onHandleIntent(android.content.Intent intent) { if (com.google.android.gms.location.ActivityRecognitionResult.hasResult(intent)) { com.google.android.gms.location.ActivityRecognitionResult result = com.google.android.gms.location.ActivityRecognitionResult.extractResult(intent); com.google.android.gms.location.DetectedActivity CurrentActivity = result.getMostProbableActivity(); if ((CurrentActivity.getConfidence()) >= 75) { ActivityRecognitionPlugin.Activity.ActivityType = CurrentActivity.toString(); ActivityRecognitionPlugin.Activity.Propability = CurrentActivity.getConfidence(); }else <BUGS> ActivityRecognition.Activity.ActivityType = "NotConfidentEnough"; <BUGE>  } } 
@java.lang.Override public boolean removeBusiness(java.lang.String id) throws java.lang.Exception { com.foodie.app.Helper.DebugHelper.Log(("removeBusiness: id = " + id)); BusinessRef.child(id).removeValue(); localDB.removeBusiness(id); <BUGS> java.util.List<com.foodie.app.entities.Activity> businessActivities = com.foodie.app.database.Converters.cursorToActivityList(localDB.getActivity(new java.lang.String[]{ com.foodie.app.entities.Activity.ACTIVITY_BUSINESS_ID }, new java.lang.String[]{ id })); <BUGE> for (com.foodie.app.entities.Activity ac : businessActivities) { removeActivity(ac.get_ID()); } return true; } 
private void highlightArrow(uk.ac.cam.teamdelta.Direction d) { javafx.scene.image.ImageView iv = navMap.get(d); if (iv == null) { uk.ac.cam.teamdelta.Logger.error((("NULL IV - direction" + (d.getDegrees())) + " was not in direction set")); <BUGS> <BUGE> } <BUGS> iv.setImage(hArrow); <BUGE> } 
@java.lang.Override protected void onPreExecute() { super.onPreExecute(); mControlsView.setBackgroundColor(getResources().getColor(R.color.transparent_overlay)); main_button.setVisibility(View.GONE); <BUGS> imageProgressBar.setProgress(0); <BUGE> imageProgressBar.setVisibility(View.VISIBLE); fullscreenText.setText(getResources().getText(R.string.loading)); } 
private void updateParityFlag() { boolean parity = false; <BUGS> for (byte b = this.state.sfrs.A.getValue(); b > 0; b = ((byte) (b & (b - 1)))) <BUGE> parity = !parity;  this.state.sfrs.PSW.setBit(parity, 0); } 
public org.json.JSONObject startVM(org.json.JSONObject vmdata) { try { java.lang.String tid = vmdata.getString("tid"); if (tid.isEmpty()) { return _create_tvd(vmdata); }else { return _start_tvd(vmdata); } } catch (java.lang.Exception e) { <BUGS> <BUGE> } } 
<BUGS> @java.lang.Override <BUGE> public void onDataPacket(net.minecraft.network.NetworkManager net, net.minecraft.network.play.server.SPacketUpdateTileEntity packet) { super.onDataPacket(net, packet); readFromNBT(packet.getNbtCompound()); <BUGS> net.minecraft.block.state.IBlockState state = world.getBlockState(pos); world.notifyBlockUpdate(pos, state, state, 3); <BUGE> } 
@java.lang.Override public void widgetSelected(org.eclipse.swt.events.SelectionEvent e) { for (org.nschmidt.ldparteditor.opengl.OpenGLRenderer renderer : org.nschmidt.ldparteditor.shells.editor3d.Editor3DWindow.renders) { org.nschmidt.ldparteditor.composites.Composite3D c3d = renderer.getC3D(); if (c3d.getLockableDatFileReference().equals(org.nschmidt.ldparteditor.project.Project.getFileToEdit())) { org.nschmidt.ldparteditor.data.VertexManager vm = c3d.getLockableDatFileReference().getVertexManager(); vm.addSnapshot(); loadSelectorSettings(); <BUGS> vm.selectAllWithSameColours(sels, false); <BUGE> vm.syncWithTextEditors(true); return ; } } } 
@java.lang.Override public void onComplete() { if (done) { return ; } <BUGS> done = true; <BUGE> R col = collection; if (col != null) { collection = null; if (emitRemainder) { queue.offer(col); } } <BUGS> <BUGE> drain(); } 
private void computeTwoCMPProjectionConstraintMatrices() { <BUGS> tmpTwoCMPProjection_Aeq.zero(); tmpTwoCMPProjection_beq.zero(); tmpTwoCMPProjection_Aeq.reshape(totalFootstepVariables, numberOfFootstepsToConsider); tmpTwoCMPProjection_beq.reshape(numberOfFootstepsToConsider, 1); <BUGE> for (int i = 0; i < (numberOfFootstepsToConsider); i++) { tmpTwoCMPProjection_Aeq.set((3 * i), i, 1.0); <BUGS> tmpTwoCMPProjection_beq.set(i, 1, 1.0); <BUGE> } } 
private void obtainObjectReferences() { if ((rawTextPanel) == null) { <BUGS> rawTextPanel = com.sandy.jnmaker.util.ObjectRepository.getMainFrame().getRawTextPanel(); imagePanel = com.sandy.jnmaker.util.ObjectRepository.getMainFrame().getImagePanel(); jnPanel = com.sandy.jnmaker.util.ObjectRepository.getMainFrame().getJNPanel(); <BUGE> statefulObjects.put(com.sandy.jnmaker.ui.helper.ProjectManager.KEY_JOVENOTESPANEL, jnPanel); statefulObjects.put(com.sandy.jnmaker.ui.helper.ProjectManager.KEY_RAWTEXTPANEL, rawTextPanel); statefulObjects.put(com.sandy.jnmaker.ui.helper.ProjectManager.KEY_IMAGEPANEL, imagePanel); } } 
public void getBytes(java.io.OutputStream outputStream) throws java.io.IOException { java.io.BufferedOutputStream bufferedOutputStream = new java.io.BufferedOutputStream(outputStream); <BUGS> java.nio.ByteBuffer byteBuffer = java.nio.ByteBuffer.allocate((((java.lang.Long.BYTES) * 2) + (java.lang.Integer.BYTES))); <BUGE> byteBuffer.putLong(id.getMostSignificantBits()); byteBuffer.putLong(id.getLeastSignificantBits()); bufferedOutputStream.write(byteBuffer.array()); getBytesFromPedestrianInfo(personA, bufferedOutputStream); getBytesFromPedestrianInfo(personB, bufferedOutputStream); bufferedOutputStream.flush(); } 
public java.lang.Integer getLatOffset(double lat, double lon, double offset, boolean checkOutside) { java.awt.Point p = tileSource.latLonToXY(lat, lon, zoom); int y = ((p.y) - (center.y)) - ((getHeight()) / 2); <BUGS> if (checkOutside) { if ((y < 0) || (y > (getHeight()))) return null;  <BUGE> } return y; } 
@java.lang.Override public java.lang.String toString() { <BUGS> return java.lang.String.join("\n", this.ueberschrift, this.unterueberschrift, ("AKZ: " + (this.aktenzeichen)), ("Datum: " + (this.datum)), ("Rechtsbereich: " + (this.rechtsbereich)), ("Vergehen: " + (this.vergehen)), ("Strafmass: " + (this.strafmass)), ("Gruende: " + (this.gruende))); <BUGE> } 
@org.junit.Test public void setPerformed() throws java.lang.Exception { int numOfFinishedTasks = repo.getDurationInfo(1).getNumOfFinishedTasks(); <BUGS> org.junit.Assert.assertTrue("There should be no finished tasks, yet", (numOfFinishedTasks == 0)); <BUGE> repo.setPerformed(1, 5); numOfFinishedTasks = repo.getDurationInfo(1).getNumOfFinishedTasks(); <BUGS> org.junit.Assert.assertTrue("There should be 1 finished task now", (numOfFinishedTasks == 1)); <BUGE> } 
void ojld(int num1, int num2) { <BUGS> <BUGE> num1 = java.lang.Math.abs(num1); num2 = java.lang.Math.abs(num2); if (num2 > num1) { int temp = num2; num2 = num1; num1 = temp; } if (num2 == 0) { return ; } if ((num1 % num2) == 0) { this.maxcommom = num2; return ; } int temp = num1 % num2; ojld(num2, temp); } 
public boolean deleteExtrasFromReminder(int reminderId) throws ve.com.abicelis.remindy.exception.CouldNotDeleteDataException { android.database.sqlite.SQLiteDatabase db = mDatabaseHelper.getWritableDatabase(); <BUGS> return (db.delete(RemindyContract.ExtraTable.TABLE_NAME, ((RemindyContract.ExtraTable.COLUMN_NAME_REMINDER_FK) + " =?"), new java.lang.String[]{ java.lang.String.valueOf(reminderId) })) > 0; <BUGE> } 
public boolean checkIfDone(double x, double y) { <BUGS> if ((((((destX) + (error)) >= x) || (((destX) - (error)) <= x)) || (((destY) + (error)) >= y)) || (((destY) - (error)) <= y)) { <BUGE> return true; }else return false;  } 
@java.lang.Override public void onResponse(retrofit2.Call<com.example.Dao.ListDao> call, retrofit2.Response<com.example.Dao.ListDao> response) { filterBeen.addAll(response.body().getDATA().getFilter()); <BUGS> filterDialogVMs = new com.example.root.gitsecommerce.Main.ListFilter.FilterDialogVM(mContext, filterBeen); <BUGE> com.example.root.gitsecommerce.Main.ViewModel.MainActivityVM.mData.clear(); com.example.root.gitsecommerce.Main.ViewModel.MainActivityVM.mData.addAll(response.body().getDATA().getProducts()); com.example.root.gitsecommerce.Main.ViewModel.MainActivityVM.bAdapter.notifyDataSetChanged(); } 
@java.lang.Override public void onPageSelected(int position) { switch (position) { case 0 : findViewById(R.id.gameRelativeLayout).setVisibility(View.VISIBLE); mSetGridView.setVisibility(View.INVISIBLE); break; case 1 : findViewById(R.id.gameRelativeLayout).setVisibility(View.INVISIBLE); mSetGridView.setVisibility(View.VISIBLE); populateSetGridView(); break; <BUGS> case 2 : android.widget.Toast.makeText(this, "Coming Soon ;)", Toast.LENGTH_SHORT).show(); <BUGE> } } 
@java.lang.Override public void writeToParcel(android.os.Parcel dest, int flags) { dest.writeString(this.path); dest.writeLong(this.dateModified); dest.writeString(this.mime); <BUGS> dest.writeParcelable(this.uri, flags); <BUGE> dest.writeLong(this.id); dest.writeLong(this.size); dest.writeByte((this.selected ? ((byte) (1)) : ((byte) (0)))); } 
public void connect(java.lang.String host) throws java.io.IOException, java.net.SocketTimeoutException, java.net.UnknownHostException { decc.Peer pair = new decc.Peer(this, host, this.port); pairs.put(pair.getHostName(), pair); <BUGS> if ((pairs.size()) == 1) <BUGE> pair.sendBrcast(ip);  } 
<BUGS> public static void loadConfig(java.lang.String name) { <BUGE> org.vitrivr.cineast.core.config.Config config = new org.vitrivr.cineast.core.util.json.JacksonJsonProvider().toObject(new java.io.File(name), org.vitrivr.cineast.core.config.Config.class); org.vitrivr.cineast.core.config.Config.LOGGER.info("Config file loaded!"); if (config == null) { org.vitrivr.cineast.core.config.Config.LOGGER.warn("Could not read config file '{}'.", name); <BUGS> <BUGE> }else { <BUGS> synchronized(org.vitrivr.cineast.core.config.Config.class) { org.vitrivr.cineast.core.config.Config.sharedConfig = config; } <BUGE> } } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.splash); java.lang.Thread timerThread = new java.lang.Thread() { public void run() { try { java.lang.Thread.sleep(3000); } catch (java.lang.InterruptedException e) { e.printStackTrace(); } finally { android.content.Intent intent = new android.content.Intent(com.example.eliasvensson.busify.SplashScreen.this, com.example.eliasvensson.busify.MainActivity.class); startActivity(intent); overridePendingTransition(R.anim.fade_in, R.anim.fade_out); } } }; <BUGS> com.example.eliasvensson.busify.g timerThread; start(); <BUGE> } 
public static com.puppycrawl.tools.checkstyle.api.JavadocTagInfo fromText(final java.lang.String text) { if (text == null) { <BUGS> throw new java.lang.NullPointerException("the text is null"); <BUGE> } final com.puppycrawl.tools.checkstyle.api.JavadocTagInfo tag = com.puppycrawl.tools.checkstyle.api.JavadocTagInfo.TEXT_TO_TAG.get(text); if (tag == null) { throw new java.lang.IllegalArgumentException((("the text [" + text) + "] is not a valid Javadoc tag text")); } return tag; } 
@java.lang.Override public void onServiceConnected(android.content.ComponentName componentName, android.os.IBinder service) { mBluetoothLeService = ((com.cooper.wheellog.BluetoothLeService.LocalBinder) (service)).getService(); if (!(mBluetoothLeService.initialize())) { android.util.Log.e(TAG, "Unable to initialize Bluetooth"); finish(); } if (mBluetoothLeService.isConnected()) { mConnectionState = BluetoothLeService.STATE_CONNECTED; buttonConnect.setText("DISCONNECT"); <BUGS> <BUGE> } } 
@java.lang.Override public void run() { <BUGS> db.addReading(new database.Reading(java.lang.System.currentTimeMillis(), application.processingService.getAcc1X(), application.processingService.getAcc1Y(), application.processingService.getAcc1Z(), application.processingService.getAcc2X(), application.processingService.getAcc2Y(), application.processingService.getAcc2Z(), app.edi.palmprothesismotionmonitoring.MainActivity.actionType, 1)); <BUGE> } 
@java.lang.Override public void remove(java.lang.Object object) { if ((internalList) == null) return ;  for (int ic = 0; ic < (internalList.size()); ic++) { if (internalList.get(ic).getReturnValue().equals(object)) { internalList.remove(ic); <BUGS> <BUGE> } } } 
public java.util.List<org.fife.ui.rsyntaxtextarea.DocumentRange> getMarkedOccurrences() { java.util.List<org.fife.ui.rsyntaxtextarea.DocumentRange> list = new java.util.ArrayList<org.fife.ui.rsyntaxtextarea.DocumentRange>(markedOccurrences.size()); for (org.fife.ui.rsyntaxtextarea.HighlightInfo info : markedOccurrences) { int start = info.getStartOffset(); int end = (info.getEndOffset()) + 1; <BUGS> org.fife.ui.rsyntaxtextarea.DocumentRange range = new org.fife.ui.rsyntaxtextarea.DocumentRange(start, end); list.add(range); <BUGE> } return list; } 
@java.lang.Override public void actionPerformed(java.awt.event.ActionEvent e) { <BUGS> if (checkConnection()) { theView.setVisible(false); theCAView = new gomoku.CreateAccountView(); theCAView.setVisible(true); caController = new gomoku.CreateAccountController(theCAView, theConnection, theView); theConnection.setCreateAccountController(caController); } <BUGE> } 
<BUGS> public static void addTimeIconToAlarm(long id) { <BUGE> com.fasterxml.jackson.databind.node.ObjectNode jsonNotification = play.libs.Json.newObject(); com.fasterxml.jackson.databind.node.ObjectNode action = play.libs.Json.newObject(); jsonNotification.put("action", action); action.put("action", "addTimeNotification"); jsonNotification.put("alarmId", id); <BUGS> core.MyWebSocketManager.notifyAll(jsonNotification); <BUGE> } 
protected void doGet(javax.servlet.http.HttpServletRequest request, javax.servlet.http.HttpServletResponse response) throws java.io.IOException, javax.servlet.ServletException { java.lang.String dbname = "doglovers"; try { org.ektorp.CouchDbConnector dbc = _db.createConnector(dbname, true); <BUGS> wasdev.sample.servlet.List<java.lang.String> list = dbc.getAllDocIds(); for (wasdev.sample.servlet.Sting lists : list) { <BUGE> response.getWriter().print(("Get all Ids!" + lists)); } } catch (java.lang.Exception e) { response.getWriter().println(e.getMessage()); } } 
@java.lang.Override public void update() { <BUGS> <BUGE> super.update(); if (world().isRemote) return ;  if (tick(0)) processInputs();  if (tick(1)) processAspects();  if (tick(2)) processStorage();  } 
public void onClick(android.content.DialogInterface dialog, int id) { java.lang.String name = userInput.getText().toString(); <BUGS> name = name.replace("-", "_"); <BUGE> if (!(com.nineworldsdeep.gauntlet.Utils.stringIsNullOrWhitespace(name))) { com.nineworldsdeep.gauntlet.tapestry.v1.ConfigFile f = new com.nineworldsdeep.gauntlet.tapestry.v1.ConfigFile(); f.setDeviceName(name); f.save(); com.nineworldsdeep.gauntlet.Utils.toast(this, "device name stored"); }else { com.nineworldsdeep.gauntlet.Utils.toast(this, "invalid device name"); } } 
<BUGS> private double getMaxHitpointsStamina() { return ((double) (java.lang.Math.ceil(((((double) (this.getWeight())) * ((double) (this.getToughness()))) / 50)))); <BUGE> } 
public void setListData() { customListViewValuesArr.add(new com.example.nguyennam.financialbook.model.RecordSpinner(getResources().getString(R.string.Expense), getResources().getString(R.string.ExpenseDescription))); customListViewValuesArr.add(new com.example.nguyennam.financialbook.model.RecordSpinner(getResources().getString(R.string.Income), getResources().getString(R.string.IncomeDescription))); <BUGS> customListViewValuesArr.add(new com.example.nguyennam.financialbook.model.RecordSpinner(getResources().getString(R.string.Transfer), getResources().getString(R.string.TransferDescription))); <BUGE> } 
private com.louiscarrese.clopecounter.model.Jour createJour() { io.realm.Realm realm = io.realm.Realm.getDefaultInstance(); <BUGS> long id = (realm.where(com.louiscarrese.clopecounter.model.Jour.class).maximumInt("id")) + 1; <BUGE> com.louiscarrese.clopecounter.model.Jour j = new com.louiscarrese.clopecounter.model.Jour(); j.setId(id); return j; } 
@java.lang.Override public mil.nga.giat.mage.sdk.datastore.user.Team create(mil.nga.giat.mage.sdk.datastore.user.Team pTeam) throws mil.nga.giat.mage.sdk.exceptions.TeamException { <BUGS> mil.nga.giat.mage.sdk.datastore.user.Team createdTeam = null; <BUGE> try { createdTeam = teamDao.createIfNotExists(pTeam); } catch (java.sql.SQLException sqle) { android.util.Log.e(mil.nga.giat.mage.sdk.datastore.user.TeamHelper.LOG_NAME, ("There was a problem creating team: " + pTeam), sqle); throw new mil.nga.giat.mage.sdk.exceptions.TeamException(("There was a problem creating team: " + pTeam), sqle); } return createdTeam; } 
public static void applyConfigChanges() { <BUGS> com.sonicether.soundphysics.SoundPhysics.globalRolloffFactor = Config.rolloffFactor; <BUGE> com.sonicether.soundphysics.SoundPhysics.globalReverbMultiplier = 0.7F * (Config.globalReverbGain); com.sonicether.soundphysics.SoundPhysics.soundDistanceAllowance = Config.soundDistanceAllowance; if ((com.sonicether.soundphysics.SoundPhysics.auxFXSlot0) != 0) { com.sonicether.soundphysics.SoundPhysics.setReverbParams(com.sonicether.soundphysics.ReverbParams.getReverb0(), com.sonicether.soundphysics.SoundPhysics.auxFXSlot0, com.sonicether.soundphysics.SoundPhysics.reverb0); com.sonicether.soundphysics.SoundPhysics.setReverbParams(com.sonicether.soundphysics.ReverbParams.getReverb1(), com.sonicether.soundphysics.SoundPhysics.auxFXSlot1, com.sonicether.soundphysics.SoundPhysics.reverb1); com.sonicether.soundphysics.SoundPhysics.setReverbParams(com.sonicether.soundphysics.ReverbParams.getReverb2(), com.sonicether.soundphysics.SoundPhysics.auxFXSlot2, com.sonicether.soundphysics.SoundPhysics.reverb2); com.sonicether.soundphysics.SoundPhysics.setReverbParams(com.sonicether.soundphysics.ReverbParams.getReverb3(), com.sonicether.soundphysics.SoundPhysics.auxFXSlot3, com.sonicether.soundphysics.SoundPhysics.reverb3); } } 
private com.individual.thinking.traitorstown.game.Effect createEffect(com.individual.thinking.traitorstown.game.EffectType type, com.individual.thinking.traitorstown.game.Effect effect) { java.util.Optional<com.individual.thinking.traitorstown.game.Effect> existingEffect = effectRepository.findByEffectType(type); if (existingEffect.isPresent()) { <BUGS> effectRepository.delete(existingEffect.get()); <BUGE> } <BUGS> effectRepository.save(effect); com.individual.thinking.traitorstown.game.CardService.Effects.put(type, effect); return effect; <BUGE> } 
@org.osgi.service.component.annotations.Activate <BUGS> public void start(org.osgi.framework.BundleContext bundleContext) throws java.lang.Exception { <BUGE> org.wso2.carbon.internal.DataHolder.getInstance().setBundleContext(bundleContext); org.wso2.carbon.kernel.config.CarbonConfigProvider configProvider = new org.wso2.carbon.internal.kernel.config.XMLBasedConfigProvider(); org.wso2.carbon.kernel.CarbonRuntime carbonRuntime = org.wso2.carbon.internal.kernel.context.CarbonRuntimeFactory.createCarbonRuntime(configProvider); bundleContext.registerService(org.wso2.carbon.kernel.CarbonRuntime.class.getName(), carbonRuntime, null); } 
@java.lang.Override public void characters(final char[] chr, final int start, final int length) throws org.xml.sax.SAXException { final java.lang.String text = new java.lang.String(chr).substring(start, (start + length)); io.inkstand.scribble.rules.jcr.util.XMLContentHandler.LOG.trace("characters; '{}'", text); final java.lang.String trimmedText = text.trim(); <BUGS> if (!(trimmedText.isEmpty())) { io.inkstand.scribble.rules.jcr.util.XMLContentHandler.LOG.info("text: '{}'", trimmedText); this.textStack.push(trimmedText); } <BUGE> } 
public void move(int from, int to) { int lastPos = getPosition(); super.add(to, super.remove(from)); mObservable.notifyChanged(); <BUGS> if (lastPos == from) <BUGE> moveToPosition(to); <BUGS> <BUGE>  } 
@java.lang.Override public java.util.List<cz.mzk.recordmanager.server.oai.model.OAIRecord> read() { if (finished) { return null; } cz.mzk.recordmanager.server.oai.model.OAIListRecords listRecords = harvester.listRecords(resumptionToken); resumptionToken = listRecords.getNextResumptionToken(); <BUGS> if ((resumptionToken) == null) { <BUGE> finished = true; } if (listRecords.getRecords().isEmpty()) { return null; }else { return listRecords.getRecords(); } } 
@java.lang.Override public void run() { org.eclipse.emf.common.util.EList<java.lang.String> images = api.listAvailableImages(); if (!(images.contains(baseICEImage))) { console.print((baseICEImage + " image not found locally. Pulling from Dockerhub...")); api.pull(baseICEImage); } <BUGS> if (!(images.contains(baseSshImage))) { console.print((baseSshImage + " image not found locally. Pulling from Dockerhub...")); api.pull(baseSshImage); } <BUGE> } 
@org.junit.Test public void testParseFileName() { for (com.google.code.tvrenamer.TVRenamerTest.TestInput testInput : com.google.code.tvrenamer.TVRenamerTest.values) { com.google.code.tvrenamer.model.FileEpisode retval = com.google.code.tvrenamer.controller.TVRenamer.parseFilename(testInput.input); <BUGS> <BUGE> org.junit.Assert.assertEquals(testInput.input, testInput.show, retval.getShowName()); org.junit.Assert.assertEquals(testInput.input, java.lang.Integer.parseInt(testInput.season), retval.getSeasonNumber()); org.junit.Assert.assertEquals(testInput.input, java.lang.Integer.parseInt(testInput.episode), retval.getEpisodeNumber()); } } 
private java.lang.String getLongitude() { android.location.LocationManager lm = ((android.location.LocationManager) (getSystemService(Context.LOCATION_SERVICE))); android.location.Location location = lm.getLastKnownLocation(lm.getBestProvider(new android.location.Criteria(), true)); <BUGS> return java.lang.String.valueOf(location.getLatitude()); <BUGE> } 
<BUGS> private <T> java.lang.Object getFieldValue(T classObject, java.lang.String fieldName) throws org.wso2.carbon.config.ConfigurationException { java.lang.reflect.Field field = getClassField(classObject, fieldName); <BUGE> try { return field.get(classObject); } catch (java.lang.IllegalAccessException e) { <BUGS> throw new org.wso2.carbon.config.ConfigurationException(java.lang.String.format(java.util.Locale.ENGLISH, "Error in obtaining value for field %s in %s", fieldName, classObject.getClass())); <BUGE> } } 
private void removeTopCard() { android.view.View child = getChildAt(((getChildCount()) - 1)); <BUGS> child.setOnTouchListener(null); child.setX(0); child.setY(0); child.setRotation(0); removeView(child); lastRemovedView = child; <BUGE> if (((getChildCount()) <= 0) && ((eventCallback) != null)) { eventCallback.cardsDepleted(); } } 
@java.lang.Override public void parseValue(java.lang.String valueString) { if (valueString == null) { setValue(null); }else { io.pelle.mango.client.FileVO file = ((io.pelle.mango.client.FileVO) (getValue())); <BUGS> <BUGE> file.setFileUUID(valueString); setValue(file); } } 
@java.lang.Override public void writeToPacket(io.netty.buffer.ByteBuf buf) { <BUGS> net.minecraftforge.fluids.FluidStack fluidStack = this.tank[0].getFluid(); <BUGE> int fluidAmount = -1; int fluidID = -1; if (fluidStack != null) { fluidAmount = fluidStack.amount; fluidID = fluidStack.getFluidID(); } buf.writeInt(fluidAmount); buf.writeInt(fluidID); buf.writeBoolean(isActive); } 
public java.lang.String generateScore() { <BUGS> return (((((((getName()) + " ") + (getCurrentWins())) + ":") + (getCurrentLosses())) + " ") + (generateRatio())) + '%'; <BUGE> } 
@java.lang.Override public boolean canAct(org.roda.wui.client.common.actions.Actionable.Action<org.roda.core.data.v2.ip.IndexedAIP> action, org.roda.core.data.v2.ip.IndexedAIP aip) { boolean canAct; <BUGS> if (aip == (org.roda.wui.client.common.actions.AipActions.NO_AIP_OBJECT)) { <BUGE> canAct = org.roda.wui.client.common.actions.AipActions.POSSIBLE_ACTIONS_ON_NO_AIP.contains(action); }else if (AIPState.UNDER_APPRAISAL.equals(aip.getState())) { canAct = (org.roda.wui.client.common.actions.AipActions.POSSIBLE_ACTIONS_ON_SINGLE_AIP.contains(action)) || (org.roda.wui.client.common.actions.AipActions.APPRAISAL_ACTIONS.contains(action)); }else { canAct = org.roda.wui.client.common.actions.AipActions.POSSIBLE_ACTIONS_ON_SINGLE_AIP.contains(action); }  return canAct; } 
<BUGS> public void enqueue(com.hortonworks.streamline.streams.notification.Notifier notifier, com.hortonworks.streamline.streams.notification.Notification notification) { <BUGE> com.hortonworks.streamline.streams.notification.service.NotificationQueueHandler.NotificationQueueTask task = new com.hortonworks.streamline.streams.notification.service.NotificationQueueHandler.NotificationQueueTask(notifier, notification); java.util.concurrent.Future<?> future = executorService.submit(task); taskMap.put(notification.getId(), org.apache.commons.lang3.tuple.Pair.of(task, future)); <BUGS> <BUGE> } 
private void insTypeFocusLost(java.awt.event.FocusEvent evt) { if ((insType.getSelectedIndex()) == 0) { <BUGS> MessageBox.setForeground(java.awt.Color.red); MessageBox.setText("One or more field are empty"); type = null; iWindow.update(); <BUGE> return ; } if ((insType.getSelectedItem().toString().length()) <= 0) return ;  type = utils.E_Types.valueOf(((java.lang.String) (insType.getSelectedItem()))); } 
public void run() { while (!(isDisposed)) { <BUGS> while (((queue.size()) == 0) || (isPlaying)) { <BUGE> try { java.lang.Thread.sleep(200); } catch (java.lang.InterruptedException e) { e.printStackTrace(); } <BUGS> } mediaPlayer = new javafx.scene.media.MediaPlayer(queue.poll()); mediaPlayer.play(); isPlaying = true; mediaPlayer.setOnEndOfMedia(() -> { isPlaying = false; }); <BUGE> } } 
private static org.elasticsearch.hadoop.serialization.dto.mapping.Field skipHeaders(org.elasticsearch.hadoop.serialization.dto.mapping.Field field) { org.elasticsearch.hadoop.serialization.dto.mapping.Field[] props = field.properties(); <BUGS> if ((((props[0]) != null) && ("mappings".equals(props[0].name()))) && (FieldType.OBJECT.equals(props[0].type()))) { <BUGE> return props[0].properties()[0]; } return field; } 
@org.junit.Test public void shouldFindApplicationByExactName() throws java.lang.Exception { java.util.Set<io.gravitee.repository.management.model.Application> apps = applicationRepository.findByName("searched-app1"); <BUGS> org.junit.Assert.assertNotNull(apps); org.junit.Assert.assertEquals(1, apps.size()); org.junit.Assert.assertEquals("searched-app1", apps.iterator().next().getId()); <BUGE> } 
private boolean searchFor(java.lang.String path, java.lang.String user) throws com.dropbox.core.DbxException { java.util.List<com.dropbox.core.DbxEntry> result; result = ConnectionInit.client.searchFileAndFolderNames(path, user); for (com.dropbox.core.DbxEntry f : result) { <BUGS> return f.name.equals(user); <BUGE> } return false; } 
public boolean writeUserFile(java.util.ArrayList<Recommender.User> o) { <BUGS> for (Recommender.User user : o) { user.printList(); } <BUGE> try { java.io.FileOutputStream fileOut = new java.io.FileOutputStream("UserList.ser"); java.io.ObjectOutputStream out = new java.io.ObjectOutputStream(fileOut); out.writeObject(o); out.close(); fileOut.close(); java.lang.System.out.println("Serialized data is saved in BookList.ser"); } catch (java.io.IOException i) { java.lang.System.out.println("This didnt work"); i.printStackTrace(); } return true; } 
public void done(byte[] data, com.parse.ParseException e) { if (e == null) { android.util.Log.d("test", "We've got data in data."); M.setImage(data); messages.add(M); pb.setProgress(60); customAdapter = new com.ferran.yep.views.InboxAdapter(getActivity(), R.layout.custom_inbox_row, messages); setListAdapter(customAdapter); <BUGS> }else { <BUGE> } } 
private void createFileDirectory(java.io.File files) { try { if (!(files.exists())) { if (files.mkdirs()) { com.psk.pms.service.FileServiceImpl.LOGGER.info("Multiple directories are created!"); }else { com.psk.pms.service.FileServiceImpl.LOGGER.info("Failed to create multiple directories!"); } } <BUGS> } catch (java.lang.Throwable e) { com.psk.pms.service.FileServiceImpl.LOGGER.info("Something went wrong!!"); <BUGE> } } 
public MaRzAgent.SuffixNode findBestNodeToTry() { <BUGS> MaRzAgent.SuffixNode[] nodes = ((MaRzAgent.SuffixNode[]) (hashFringe.values().toArray())); <BUGE> assert (nodes.length) > 0; double theBEASTLIESTCombo = nodes[0].heuristic; MaRzAgent.SuffixNode bestNode = nodes[0]; for (MaRzAgent.SuffixNode node : nodes) { if ((node.heuristic) > theBEASTLIESTCombo) { theBEASTLIESTCombo = node.heuristic; bestNode = node; } } return bestNode; } 
@java.lang.Override public com.udacity.gradle.joketeller.Joke loadInBackground() { int retryCount = 0; com.udacity.gradle.joketeller.Joke joke = loadJoke(); <BUGS> if ((lastJoke) != null) { <BUGE> while ((joke.equals(lastJoke)) && (retryCount < (com.udacity.gradle.builditbigger.MainActivity.RETRY_LIMIT))) { timber.log.Timber.d("Got the same joke, looking for fresh material!"); joke = loadJoke(); retryCount++; } } return joke; } 
public boolean updateIndent(com.hlz.webModel.IndentModel model) { com.hlz.entity.Indent indent = dao.updateIndent(model); if (indent != null) { <BUGS> messaging.convertAndSend("/topic/update", indent); rabbitTemplate.convertAndSend("update-indent", indent); <BUGE> return true; }else { return false; } } 
private java.util.Collection<com.google.protobuf.Descriptors.FieldDescriptor> findSourceFields(com.google.protobuf.Descriptors.FieldDescriptor enrichmentField) { final java.lang.String byOptionArgument = enrichmentField.getOptions().getExtension(EventAnnotationsProto.by); com.google.common.base.Preconditions.checkNotNull(byOptionArgument); final int pipeSeparatorIndex = byOptionArgument.indexOf(org.spine3.server.event.enrich.ReferenceValidator.PIPE_SEPARATOR); if (pipeSeparatorIndex < 0) { <BUGS> return java.util.Collections.singleton(findSourceFieldByName(byOptionArgument, enrichmentField)); <BUGE> }else { final java.lang.String[] targetFieldNames = org.spine3.server.event.enrich.ReferenceValidator.PATTERN_PIPE_SEPARATOR.split(byOptionArgument); return findSourceFieldsByNames(targetFieldNames, enrichmentField); } } 
@java.lang.Override public void connect(net.minecraft.world.World world, refinedstorage.api.network.INetworkMaster network) { if (network.canRun()) { this.network = network; <BUGS> <BUGE> this.network.addSlave(this); <BUGS> this.connected = true; <BUGE> world.notifyNeighborsOfStateChange(pos, getBlockType()); if (canSendConnectivityUpdate()) { refinedstorage.RefinedStorageUtils.updateBlock(world, pos); } } } 
public void addOrderRecord(int orderId, double total) { android.content.ContentValues values = new android.content.ContentValues(); values.put(com.samdevlin.restbite.database.ClientDatabase.COLUMN_ORDER_ID, orderId); <BUGS> values.put(com.samdevlin.restbite.database.ClientDatabase.COLUMN_ORDER_TOTAL, total); <BUGE> android.database.sqlite.SQLiteDatabase db = getWritableDatabase(); db.insert(com.samdevlin.restbite.database.ClientDatabase.TABLE_ORDERRECORD, null, values); db.close(); } 
private common.UndirectedGraphNode cloneGraph(common.UndirectedGraphNode node, java.util.HashMap<common.UndirectedGraphNode, common.UndirectedGraphNode> nodes) { common.UndirectedGraphNode newNode = new common.UndirectedGraphNode(node.label); nodes.put(node, newNode); for (common.UndirectedGraphNode neighbor : node.neighbors) { common.UndirectedGraphNode newNeighbor = nodes.get(neighbor); if (newNeighbor == null) { newNeighbor = cloneGraph(neighbor, nodes); } newNode.neighbors.add(newNeighbor); } <BUGS> return node; <BUGE> } 
public int run(java.io.File source, java.io.File destination) { <BUGS> int status = org.dataaccessioner.Migrator.STATUS_INITIALIZING; <BUGE> try { status = org.dataaccessioner.Migrator.STATUS_RUNNING; status = copyDirectory(source, destination); } catch (java.io.FileNotFoundException ex) { setStatusMessage(ex.getLocalizedMessage()); return org.dataaccessioner.Migrator.STATUS_FAILURE; } catch (java.lang.Exception ex) { setStatusMessage(("Unexpected Failure: " + (ex.getLocalizedMessage()))); return org.dataaccessioner.Migrator.STATUS_FAILURE; } return status; } 
public java.lang.String getRunTitle(android.content.Context context) { if (android.text.TextUtils.isEmpty(mRun.getTitle())) { if ((mRun.getRunIndex()) != (-1)) { <BUGS> return context.getString(R.string.run_label, ((mRun.getRunIndex()) + 1)); <BUGE> }else { return context.getString(R.string.run_label, ""); } }else { return mRun.getTitle(); } } 
@java.lang.Override public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) { android.view.View v = inflater.inflate(R.layout.fragment_wishlist_item_list, container, false); mListView = ((android.widget.ListView) (v.findViewById(android.R.id.list))); <BUGS> mListView.setChoiceMode(ListView.CHOICE_MODE_MULTIPLE_MODAL); com.ghstudios.android.ui.detail.WishlistDataDetailFragment.WishlistDataMultiChoiceListener multiChoiceListener = new com.ghstudios.android.ui.detail.WishlistDataDetailFragment.WishlistDataMultiChoiceListener(); mListView.setMultiChoiceModeListener(multiChoiceListener); <BUGE> return v; } 
private double[] primConverter(java.lang.Double[] valArr) { double[] primArr = new double[valArr.length]; <BUGS> if ((valArr.length) <= 0) java.lang.System.err.println("ERROR: array is null");  java.lang.System.out.println(("Valarr length = " + (valArr.length))); <BUGE> for (int i = 0; i < (valArr.length); i++) { <BUGS> java.lang.System.out.println(("i= " + i)); <BUGE> primArr[i] = valArr[i]; } return primArr; } 
@java.lang.Override public int compare(com.example.nickozoulis.teamproj.domain.Referee lRef, com.example.nickozoulis.teamproj.domain.Referee rRef) { int res = firstClassOrdering(lRef, rRef); <BUGS> android.util.Log.i("INFO", "firstClassOrdering"); <BUGE> if (res == 0) { res = secondClassOrdering(lRef, rRef); <BUGS> android.util.Log.i("INFO", "SecondClassOrdering"); <BUGE> if (res == 0) { res = thirdClassOrdering(lRef, rRef); <BUGS> android.util.Log.i("INFO", "thirdClassOrdering"); <BUGE> } } return res; } 
public void run(@org.jetbrains.annotations.NotNull com.intellij.openapi.progress.ProgressIndicator progressIndicator) { if (Utils.debug) { com.intellij.perlplugin.Utils.print("parsing started"); } long start = java.lang.System.currentTimeMillis(); <BUGS> com.intellij.perlplugin.PerlInternalParser.parseAllSources(com.intellij.perlplugin.PerlInternalParser.module, progressIndicator); <BUGE> long end = java.lang.System.currentTimeMillis(); if (Utils.debug) { com.intellij.perlplugin.Utils.print((("update completed in " + ((end - start) / 1000)) + "sec")); } } 
@android.support.annotation.Nullable public com.taobao.weex.WXSDKInstance takeCachedInstance(@android.support.annotation.Nullable java.lang.String targetUrl) { if (!(mRemoteConfig.isSwitchOn())) { com.taobao.weex.utils.WXLogUtils.d(com.taobao.weex.appfram.prerender.PreRenderManager.TAG, "takeCachedInstance failed. switch is off"); return null; } if (android.text.TextUtils.isEmpty(targetUrl)) { return null; } <BUGS> com.taobao.weex.appfram.prerender.IPreRenderCache.Entry entry = mInternalCache.remove(targetUrl); <BUGE> if (((entry != null) && ((entry.data) != null)) && (entry.isFresh())) { return entry.data; }else { return null; } } 
public org.exist.security.Subject popSubject() { if (org.exist.storage.DBBroker.LOG.isTraceEnabled()) { <BUGS> org.exist.storage.DBBroker.LOG.trace(java.lang.String.format("%s: popSubject(%s) from: %s %s", getId(), getCurrentSubject(), java.lang.Thread.currentThread(), org.exist.util.Stacktrace.top(java.lang.Thread.currentThread().getStackTrace(), 10))); <BUGE> } return this.subject.removeFirst(); } 
@org.junit.Test public void get_NotPresent() { <BUGS> com.marc.collections.SkipList<java.lang.Integer> mySkipList = new com.marc.collections.SkipList(4, new java.util.Random()); <BUGE> mySkipList.add(new java.lang.Integer(5)); mySkipList.add(new java.lang.Integer(6)); mySkipList.add(new java.lang.Integer(10)); mySkipList.add(new java.lang.Integer(7)); org.junit.Assert.assertFalse(mySkipList.contains(new java.lang.Integer(8))); } 
private void findPercentiles() { int count = 0; lowerIndex = 0; <BUGS> for (lowerIndex = 0; (lowerIndex) < (histogram.length); (lowerIndex)++) { <BUGE> count += histogram[lowerIndex]; <BUGS> if (count >= (lowerCount)) { break; } <BUGE> } <BUGS> for (upperIndex = lowerIndex; (upperIndex) < (histogram.length); (upperIndex)++) { <BUGE> count += histogram[upperIndex]; <BUGS> if (count >= (upperCount)) { break; } <BUGE> } } 
private void onRightDrawerOpened() { java.lang.String properties = getResources().getString(R.string.properties); <BUGS> java.lang.String tool = getResources().getString(paintView.getTool().getName()); <BUGE> actionBar.setTitle(((properties + ": ") + tool)); } 
private void CalculatejButtonActionPerformed(java.awt.event.ActionEvent evt) { if ((!(SidesjTextField.getText().isEmpty())) && (!(LengthjTextField.getText().isEmpty()))) { <BUGS> validateInput(SidesjTextField, SidesjTextField); <BUGE> } } 
public void onCreate(android.os.Bundle bundle) { super.onCreate(bundle); setContentView(R.layout.after_the_game); <BUGS> android.content.Intent intentFromGameActivity = getIntent(); <BUGE> level = ((com.teamzenith.game.zpuzzle.model.Level) (intentFromGameActivity.getSerializableExtra("Level"))); createComponents(); actions(); } 
public void createAccessToken(java.lang.String result) { com.alibaba.fastjson.JSONObject tmp = com.alibaba.fastjson.JSON.parseObject(result); <BUGS> if (result.contains("accessToken")) { <BUGE> setAccessToken(tmp.getString("access_token")); }else { setAccessToken(tmp.getString("component_access_token")); } setExpiresIn((((tmp.getLong("expires_in")) - 60) * 1000)); } 
void drainUntil(long upToNanos) { long now = timeNanos; java.util.concurrent.PriorityBlockingQueue<hu.akarnokd.reactive4javaflow.TestSchedulerService.TestTask> q = queue; for (; ;) { hu.akarnokd.reactive4javaflow.TestSchedulerService.TestTask tt = q.peek(); if ((tt == null) || ((tt.dueNanos) > upToNanos)) { break; } <BUGS> q.poll(); <BUGE> timeNanos = tt.dueNanos; tt.run(); } timeNanos = upToNanos; } 
public edu.vt.ece5574.agents.Robot createRobot() { sim.util.Int2D pos = genStartPos(); <BUGS> edu.vt.ece5574.agents.Robot robot = new edu.vt.ece5574.agents.Robot(state, id, java.lang.String.valueOf(agentsInBld.size()), pos.getX(), pos.getY()); <BUGE> agents.setObjectLocation(robot, pos.getX(), pos.getY()); agentsInBld.add(robot); state.addAgent(robot); return robot; } 
public void updateLockedLevels() { for (int i = 0; i < (buttons); i++) { <BUGS> levels[i] = new com.darkhouse.gdefence.Model.LevelButton(((firstButtonInt) + i)); if (!(com.darkhouse.gdefence.GDefence.getInstance().user.getLevelAvailable(((firstButtonInt) + i)))) { <BUGE> levels[i].lock(); <BUGS> }else { levels[i].unLock(); <BUGE> } } } 
@java.lang.Override public java.util.List<org.jivesoftware.openfire.mix.mam.ArchivedMixChannelMessage> execute() { <BUGS> if ((end) == null) { <BUGE> if ((limit) == 0) { return repository.findTimeBoundMessagesByChannel(channelName, start, end); }else { return repository.findLimitedTimeBoundMessagesByChannel(channelName, start, end, limit); } }else { if ((limit) == 0) { return repository.findMessagesByChannelSince(channelName, start); }else { return repository.findLimitedMessagesByChannelSince(channelName, start, limit); } } } 
public void update(codeu.chat.common.ConversationSummary owningConversation) { final codeu.chat.common.User u = (owningConversation == null) ? null : clientContext.user.lookup(owningConversation.owner); messageOwnerLabel.setText(("Owner: " + (u == null ? owningConversation == null ? "" : owningConversation.owner : u.name))); <BUGS> messageConversationLabel.setText(("Conversation: " + (owningConversation.title))); <BUGE> getAllMessages(owningConversation, true); } 
<BUGS> public java.lang.String getJoinPointClassName(final org.aspectj.lang.ProceedingJoinPoint currentJoinPoint) { <BUGE> java.lang.String className = null; try { className = currentJoinPoint.getSignature().toString(); } catch (final java.lang.Exception e) { e.getStackTrace(); java.lang.System.out.println(e.getMessage()); className = e.toString(); } return className; } 
@java.lang.Override void restoreLastSession() { init(); java.util.Set<modbus.SlaveNode> slavescopy = new java.util.HashSet<modbus.SlaveNode>(slaves); slaves.clear(); for (modbus.SlaveNode sn : slavescopy) { if ((sn.node) != (node)) { addSlave(sn.node); <BUGS> <BUGE> } } } 
public void shutdown() { java.lang.System.out.println("\n\n\n"); java.lang.System.out.println("   ********* Graceful exit initiated"); producer.shutdown(); <BUGS> xMsgContext.destroyContext(); <BUGE> java.lang.System.out.println("   ********* Destroying xMsg context : done"); registrar.shutdown(); java.lang.System.out.println("   ********* Registrar shudown  : done"); proxy.shutdown(); java.lang.System.out.println("   ********* Proxy service  shudown  : done"); java.lang.System.out.println("   ********* Exiting Data Distribution\n\n"); java.lang.System.exit(0); } 
public void changeToBattle(engine.Formation formation) { if (((currentScene) != null) && ((currentMap) == null)) currentScene.stop();  try { java.lang.Thread.sleep(2000); } catch (java.lang.InterruptedException e) { } <BUGS> <BUGE> battle.start(formation); <BUGS> currentScene = battle; <BUGE> } 
private boolean containsRPurchase(uwi.dcit.agriexpensesvr.ResourcePurchase rpurchase) { com.google.appengine.api.NamespaceManager.set(rpurchase.getAccount()); javax.persistence.EntityManager mgr = uwi.dcit.agriexpensesvr.ResourcePurchaseEndpoint.getEntityManager(); boolean contains = true; try { uwi.dcit.agriexpensesvr.ResourcePurchase item = mgr.find(uwi.dcit.agriexpensesvr.ResourcePurchase.class, rpurchase.getKey()); if (item == null) { contains = false; } } finally { <BUGS> mgr.close(); <BUGE> } return contains; } 
void restore() { init(mVertexShader, mFragmentShader); <BUGS> <BUGE> mAmbientColor.refresh(); if ((mLights) != null) { for (com.gplibs.magicsurfaceview.Light l : mLights) { l.restore(); } } if ((mSurfaces) != null) { for (com.gplibs.magicsurfaceview.MagicBaseSurface<?> s : mSurfaces) { s.restore(); } } } 
@java.lang.Deprecated public org.jruby.runtime.builtin.IRubyObject executeUnder(org.jruby.runtime.ThreadContext context, org.jruby.Callback method, org.jruby.runtime.builtin.IRubyObject[] args, org.jruby.runtime.Block block) { <BUGS> context.preExecuteUnder(this, block); <BUGE> try { return method.execute(this, args, block); } finally { context.postExecuteUnder(); } } 
<BUGS> public static edu.byu.nlp.crowdsourcing.MultiAnnModelBuilders.MultiAnnModelBuilder initModelBuilderWithBaselineInit(edu.byu.nlp.crowdsourcing.MultiAnnModelBuilders.MultiAnnModelBuilder builder, edu.byu.nlp.crowdsourcing.PriorSpecification priors, edu.byu.nlp.data.types.Dataset data, boolean truncateUnlabeledData, org.apache.commons.math3.random.RandomGenerator rnd) { <BUGE> edu.byu.nlp.crowdsourcing.ModelInitialization.AssignmentInitializer initializer = new edu.byu.nlp.crowdsourcing.ModelInitialization.BaselineInitializer(rnd); edu.byu.nlp.crowdsourcing.ModelInitialization.AssignmentInitializer mInitializer = new edu.byu.nlp.crowdsourcing.ModelInitialization.BaselineInitializer(rnd, true); return edu.byu.nlp.crowdsourcing.MultiAnnModelBuilders.initModelBuilder(builder, priors, data, initializer, mInitializer, rnd); } 
@java.lang.Override public void onBindViewHolder(group.g203.countables.path.detail.view.DateViewHolder holder, int position) { setPresenter(holder); <BUGS> holder.ivRemove.setTag(position); <BUGE> mPresenter.setDateFormat(holder.tvDate, mDates.get(position)); mPresenter.handleDateColor(holder.tvDate); mPresenter.setRemoveClick(holder.ivRemove); } 
public void setServiceDown() { <BUGS> MainActivity.isKcaServiceOn = false; <BUGE> com.antest1.kcanotify.KcaService.isPortAccessed = false; if ((missionTimeScheduler) != null) { missionTimeScheduler.shutdown(); } handler = null; nHandler = null; mediaPlayer.release(); mediaPlayer = null; stopForeground(true); notifiManager.cancelAll(); currentPortDeckData = null; viewNotificationBuilder = null; com.antest1.kcanotify.KcaService.isServiceOn = false; } 
<BUGS> java.lang.Object _call(railo.runtime.PageContext pc, int access, railo.runtime.type.Collection.Key key, railo.runtime.type.Struct namedArgs, java.lang.Object[] args, boolean superAccess) throws railo.runtime.exp.PageException { railo.runtime.component.Member member = getMember(access, key, false, superAccess); <BUGE> if (member instanceof railo.runtime.type.UDF) { return _call(pc, ((railo.runtime.type.UDF) (member)), namedArgs, args); } <BUGS> return onMissingMethod(pc, access, member, key.getString(), args, namedArgs, superAccess); <BUGE> } 
private void loadData() { if (isOnline()) { errorText.setText(R.string.error_message); posterAdapter.setAllMoviesOnPage(null); showMovieData(); <BUGS> new com.kacper.popularmovies.FetchMovieVolley(this).getRequest(actualSortingOrder); <BUGE> }else { errorText.setText(R.string.internet_error); showErrorMessage(null); } } 
private void setStyleBarLongVisibility(boolean value) { <BUGS> if (app.allowStylebar()) { <BUGE> dockPanel.setWidgetSize(titleBarPanel, (value ? 44 : 0)); titleBarPanel.setStyleName("TitleBarPanel-open", value); setLongStyleBar(value); deferredOnResize(); } } 
public void replaceFragment(android.support.v4.app.Fragment fragment, java.lang.String tag) { android.support.v4.app.FragmentManager manager = getSupportFragmentManager(); <BUGS> android.support.v4.app.FragmentManager.enableDebugLogging(true); <BUGE> manager.beginTransaction().setCustomAnimations(R.anim.category_fragment_right_in, R.anim.category_fragment_left_out, R.anim.category_fragment_left_in, R.anim.category_fragment_right_out).hide(getSupportFragmentManager().findFragmentByTag(com.bookstore.main.MainBookListFragment.class.getSimpleName())).addToBackStack(null).add(R.id.container_view, fragment, tag).commit(); } 
@java.lang.Override public void joinServer(java.net.InetSocketAddress server) { java.lang.String host = server.getHostString(); int port = server.getPort(); net.minecraft.client.multiplayer.ServerData serverData = new net.minecraft.client.multiplayer.ServerData("Sponge API Call", ((host + ":") + port), false); <BUGS> net.minecraftforge.fml.client.FMLClientHandler.instance().connectToServer(currentScreen, serverData); <BUGE> } 
@java.lang.Override public org.apache.drill.common.expression.PathSegment.ArraySegment cloneWithNewChild(org.apache.drill.common.expression.PathSegment newChild) { <BUGS> org.apache.drill.common.expression.PathSegment.ArraySegment seg = new org.apache.drill.common.expression.PathSegment.ArraySegment(index); <BUGE> if ((child) != null) { seg.setChild(child.cloneWithNewChild(newChild)); }else { seg.setChild(newChild); } return seg; } 
public org.openforis.collect.model.NodeChangeSet addAttribute(org.openforis.idm.model.Entity parentEntity, java.lang.String attributeName, org.openforis.idm.model.Value value, org.openforis.collect.model.FieldSymbol symbol, java.lang.String remarks) { org.openforis.idm.model.Attribute<?, ?> attribute = performAttributeAdd(parentEntity, attributeName, value, symbol, remarks); setMissingValueApproved(parentEntity, attributeName, false); <BUGS> applyInitialValue(attribute, true); <BUGE> org.openforis.collect.model.NodeChangeMap changeMap = new org.openforis.collect.model.NodeChangeMap(); changeMap.addAttributeAddChange(attribute); return afterAttributeInsertOrUpdate(changeMap, attribute); } 
public void printAdjList() { if (((adjList) == null) || ((adjList.size()) == 0)) { java.lang.System.out.println("The adjacency list is not set yet."); }else { java.lang.System.out.println("Start printing adjacency list:"); <BUGS> for (graph.undirectedGraph.UGNode n : adjList) <BUGE> n.print();  } } 
@java.lang.Override public void render(com.badlogic.gdx.graphics.g2d.SpriteBatch batch) { for (int currentX = 0; currentX < (innerTiles.length); currentX++) { for (int currentY = 0; currentY < (innerTiles[0].length); currentY++) { innerTiles[currentX][currentY].render(batch); } } <BUGS> super.render(batch); <BUGE> } 
public int hit(int armor) { int damage; <BUGS> if ((armor > 0) || (armor < 20)) { <BUGE> damage = this.DAMAGE; }else { damage = (this.DAMAGE) - armor; } return damage < 0 ? 0 : damage; } 
public static java.lang.String random(int length) { java.lang.StringBuilder builder = new java.lang.StringBuilder(); <BUGS> do { while ((builder.length()) < length) { builder.append(se.rupy.http.Event.BASE_58[java.lang.Math.abs(((se.rupy.http.Event.random.nextInt()) % (se.rupy.http.Event.BASE_58.length)))]); } } while (builder.toString().matches("[0-9]+") ); <BUGE> return builder.toString(); } 
public static final void unbind(java.lang.Object source) { try { themeable.StyleBinder styleBinder = themeable.Themeable.findStyleBinderForClass(source.getClass()); styleBinder.unbind(source); <BUGS> themeable.Themeable.bound = true; <BUGE> } catch (java.lang.Exception e) { android.util.Log.e(themeable.Themeable.TAG, "Failed to find binding class", e); } } 
@javax.ws.rs.GET @javax.ws.rs.Path(value = "/getMoreInfo/{type}/{id}") @javax.ws.rs.Produces(value = javax.ws.rs.core.MediaType.APPLICATION_JSON) public javax.ws.rs.core.Response getMoreInfo(@javax.ws.rs.PathParam(value = "type") java.lang.String type, @javax.ws.rs.PathParam(value = "id") java.lang.Integer id) throws io.hops.hopsworks.common.exception.AppException { io.hops.hopsworks.common.project.MoreInfoDTO info = null; if (id != null) { <BUGS> if ("proj".equals(type)) { io.hops.hopsworks.common.dao.project.Project proj = projectFacade.find(id); info = new io.hops.hopsworks.common.project.MoreInfoDTO(proj); }else if ("ds".equals(type)) { <BUGE> info = datasetInfo(id); <BUGS> }  <BUGE> } return noCacheResponse.getNoCacheResponseBuilder(Response.Status.OK).entity(info).build(); } 
public double calculateIDF(java.util.List<java.lang.String[]> documents, java.lang.String wordToCheck) { double count = 0; for (java.lang.String[] ss : documents) { for (java.lang.String s : ss) { if (s.equalsIgnoreCase(wordToCheck)) { count++; break; } } } <BUGS> return 1 + (java.lang.Math.log(((documents.size()) / count))); <BUGE> } 
<BUGS> public static java.lang.String hmacSHA256(java.lang.String secret, java.lang.String message) { <BUGE> java.lang.String hash = null; try { javax.crypto.Mac sha256_HMAC = javax.crypto.Mac.getInstance("HmacSHA256"); <BUGS> javax.crypto.spec.SecretKeySpec secret_key = new javax.crypto.spec.SecretKeySpec(secret.getBytes(), "HmacSHA256"); <BUGE> sha256_HMAC.init(secret_key); hash = new java.lang.String(android.util.Base64.encode(sha256_HMAC.doFinal(message.getBytes()), Base64.DEFAULT)); } catch (java.lang.Exception e) { android.util.Log.e(ke.co.interintel.nikobizzapi.encryption.ApiSecurity.TAG, "Error", e); } return hash; } 
public java.util.Date getStartTime() { java.util.Date now = new java.util.Date(); java.util.List<java.util.Date> startTimes = new java.util.ArrayList<java.util.Date>(); for (cn.momia.service.course.base.CourseSku sku : skus) { if (sku.isAvaliable(now)) startTimes.add(sku.getStartTime());  } java.util.Collections.sort(startTimes); <BUGS> return startTimes.get(0); <BUGE> } 
@java.lang.Override public void onClick(android.view.View v) { switch (v.getId()) { case R.id.btGallerySingleImage : pickImageSingle(); break; case R.id.btGalleryMultipleImages : pickImageMultiple(); break; case R.id.btCameraImage : takePicture(); <BUGS> <BUGE> case R.id.btCameraImageCrop : takePictureAndCrop(); break; case R.id.btGallerySingleImageCrop : pickImageSingleAndCrop(); break; } } 
@org.junit.Test public void testDoubleUiOrderElementIssue() throws java.lang.Exception { org.talend.daikon.serialize.jsonschema.UiSchemaGeneratorTest.AProperties aProperties = new org.talend.daikon.serialize.jsonschema.UiSchemaGeneratorTest.AProperties("foo"); aProperties.init(); org.talend.daikon.serialize.jsonschema.UiSchemaGenerator generator = new org.talend.daikon.serialize.jsonschema.UiSchemaGenerator(); com.fasterxml.jackson.databind.node.ObjectNode uiSchemaJsonObj = generator.genWidget(aProperties, "MyForm"); java.lang.String expectedPartial = "{\"ui:order\":[\"myStr\",\"np\"]}"; <BUGS> org.skyscreamer.jsonassert.JSONAssert.assertEquals(expectedPartial, uiSchemaJsonObj.toString(), false); <BUGE> } 
@java.lang.Override public void resolveAnaphora() { java.util.List<org.tariel.pla.logics.Proposition> props = org.tariel.pla.logics.VariableStorage.getPopostionList(); int i = 0; for (org.tariel.pla.logics.classic.CQuantifer quant : this.getQuantifers()) { <BUGS> if (i <= (props.size())) <BUGE> props.get(i).setLinkedId(((java.lang.String) (quant.getVar().getSourceId())));  i++; } } 
private void refreshBalancesForAllLinkedBrokers() { java.util.List<it.trade.android.sdk.model.TradeItLinkedBrokerParcelable> linkedBrokers = linkedBrokerManager.getLinkedBrokers(); if (linkedBrokers.isEmpty()) { showAlert("refreshAllBalancesFirstLinkedBroker", "No linked broker!"); }else if (linkedBrokers.get(0).getAccounts().isEmpty()) { showAlert("refreshAllBalancesFirstLinkedBroker", "No linked broker accounts detected for first linked broker! Try authenticating."); }else { <BUGS> final it.trade.android.sdk.model.TradeItLinkedBrokerParcelable linkedBroker = linkedBrokers.get(0); <BUGE> linkedBrokerManager.refreshAccountBalances(new it.trade.android.sdk.model.TradeItCallBackCompletion() { @java.lang.Override public void onFinished() { goToLinkedBrokersActivity(); } }); }  } 
public void register(com.qualcomm.robotcore.eventloop.opmode.OpModeManager manager) { manager.register("NullOp", com.qualcomm.ftcrobotcontroller.opmodes.NullOp.class); manager.register("MatrixK9TeleOp", com.qualcomm.ftcrobotcontroller.opmodes.MatrixK9TeleOp.class); manager.register("K9TeleOp", com.qualcomm.ftcrobotcontroller.opmodes.Gyro_One.class); manager.register("PushBotAuto", com.qualcomm.ftcrobotcontroller.opmodes.PushBotAuto.class); <BUGS> manager.register("Beacon", com.qualcomm.ftcrobotcontroller.opmodes.Autonomous.class); <BUGE> manager.register("Tankie", com.qualcomm.ftcrobotcontroller.opmodes.TankDrive.class); manager.register("Auto ", com.qualcomm.ftcrobotcontroller.opmodes.Autonomous.class); manager.register("All Test", com.qualcomm.ftcrobotcontroller.opmodes.AllTest.class); } 
public E get(int index) { LinkedSet<E>.Item<E> item = main; if ((index < 0) || (index >= (size))) { <BUGS> throw new java.lang.IndexOutOfBoundsException((((("Index " + index) + " isn't in range (0 - ") + (size)) + ")")); <BUGE> } <BUGS> for (int i = 0; i < index; i++) { <BUGE> item = item.next; } <BUGS> return item.item; <BUGE> } 
<BUGS> private void expandType() { java.lang.String type = getType(); <BUGE> if ((getRelatingObject().getType()) != null) { type += "." + (getRelatingObject().getType()); if ((getRelatingObject().getSubtype()) != null) { type += "." + (getRelatingObject().getSubtype()); } } setType(type); } 
<BUGS> public java.lang.String listToConfig(java.util.ArrayList<mars.client.Module> list) { <BUGE> java.lang.StringBuilder aStringBuilder = new java.lang.StringBuilder(); aStringBuilder.append("["); for (int i = 0; i < (list.size()); i++) { aStringBuilder.append(list.get(i).toString()).append(","); } aStringBuilder.deleteCharAt(aStringBuilder.length()); aStringBuilder.append("]"); return aStringBuilder.toString(); } 
public boolean onAreaTouched(org.andengine.input.touch.TouchEvent pSceneTouchEvent, float pTouchAreaLocalX, float pTouchAreaLocalY) { if (pSceneTouchEvent.isActionDown()) { setTouchAreaBindingOnActionDownEnabled(false); setTouchAreaBindingOnActionMoveEnabled(false); android.content.Intent shareIntent = new android.content.Intent(); shareIntent.setAction(Intent.ACTION_SEND); shareIntent.setType("text/plain"); shareIntent.setPackage("com.twitter.android"); shareIntent.putExtra(Intent.EXTRA_TEXT, (("My score in #ProtectTheTown is " + (score)) + " points. And yours?")); activity.tweetScore(shareIntent); } <BUGS> return false; <BUGE> } 
private void deletePage(int pageIndex) { for (roottemplate.calculator.data.KeyboardKits.KitVersion kv : mCurrentKitV.mParent.mKitVersions) { roottemplate.calculator.data.KeyboardKits[] pages = kv.mPages; kv.mPages = roottemplate.calculator.util.Util.removeFromObjectArray(pages, pageIndex, new roottemplate.calculator.data.KeyboardKits.Page[(pages.length) - 1]); if ((kv.mMainPageIndex) > pageIndex) (kv.mMainPageIndex)--; <BUGS> <BUGE>  } mKitPreviewAdapter.notifyDataSetChanged(); } 
@java.lang.Override protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) { if (heightMeasureSpec != 0) { int sizeWidth = de.dmxcontrol.widget.MeasureSpec.getSize(widthMeasureSpec); int sizeHeight = de.dmxcontrol.widget.MeasureSpec.getSize(heightMeasureSpec); if ((sizeHeight < sizeWidth) && false) { <BUGS> heightMeasureSpec = de.dmxcontrol.widget.MeasureSpec.makeMeasureSpec(de.dmxcontrol.widget.MeasureSpec.getMode(heightMeasureSpec), sizeHeight); <BUGE> } } super.onMeasure(widthMeasureSpec, heightMeasureSpec); } 
<BUGS> public static void showMessage(android.content.Context context, java.lang.String message, android.content.DialogInterface.OnClickListener okListener) { <BUGE> android.app.AlertDialog.Builder builder = new android.app.AlertDialog.Builder(context); builder.setMessage(message).setPositiveButton(R.string.ok, (okListener == null ? new android.content.DialogInterface.OnClickListener() { @java.lang.Override public void onClick(android.content.DialogInterface dialog, int which) { dialog.dismiss(); } } : okListener)); builder.create().show(); } 
@com.facebook.react.bridge.ReactMethod public void startRecordingFps() { <BUGS> if (!(mCatalystSettings.isAnimationFpsDebugEnabled())) { <BUGE> return ; } if ((mFrameCallback) != null) { throw new com.facebook.react.bridge.JSApplicationCausedNativeException("Already recording FPS!"); } com.facebook.react.modules.debug.AnimationsDebugModule.checkAPILevel(); mFrameCallback = new com.facebook.react.modules.debug.FpsDebugFrameCallback(android.view.Choreographer.getInstance(), getReactApplicationContext()); mFrameCallback.startAndRecordFpsAtEachFrame(); } 
public org.osgi.framework.ServiceReference getServiceReference(java.lang.String clazz) { org.osgi.framework.ServiceReference[] references; try { references = getServiceReferences(clazz, null); <BUGS> <BUGE> java.util.Arrays.sort(references); return references[((references.length) - 1)]; } catch (org.osgi.framework.InvalidSyntaxException e) { throw new java.lang.Error("Invalid filter syntax thrown for null filter.", e); } } 
@java.lang.Override public void run() { <BUGS> <BUGE> try { <BUGS> java.lang.Object result = call.run(params.toArray()); <BUGE> sendCallback(callbackId, null, result); <BUGS> } catch (java.lang.Exception e) { sendCallback(callbackId, e.getMessage(), null); } <BUGE> } 
private void next() { <BUGS> <BUGE> int next = (status.ordinal()) + 1; if (next >= (PipelineConfig.Step.values().length)) { ch.epfl.planair.Planair.become(ch.epfl.planair.mods.MenuMode.class); }else { toStep(next); } } 
<BUGS> @org.junit.Test @org.junit.Ignore(value = "Identifiers removed from persistence until needed") <BUGE> public void testGetNoIdentifiers() throws java.io.IOException { org.gbif.api.model.occurrence.Occurrence occ = occurrenceService.get(org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.KEY); assertEquivalence(occ); <BUGS> org.junit.Assert.assertEquals(((java.lang.Integer) (org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.KEY)), occ.getKey()); org.junit.Assert.assertEquals(0, occ.getIdentifiers().size()); <BUGE> } 
@java.lang.Override protected boolean matchesSafely(T item) { T startOfWindow = ((T) (other.minus(window, units))); T endOfWindow = ((T) (other.plus(window, units))); <BUGS> return ((startOfWindow.compareTo(other)) <= 0) && ((endOfWindow.compareTo(other)) >= 0); <BUGE> } 
private void CheckInfiniteLoop(nez.lang.Expression e, java.lang.String var) { if (!(consumption.isConsumed(e))) { If(var, _Eq(), _Field(_state(), "pos")); { <BUGS> trace(""); <BUGE> Break(); } EndIf(); } } 
@javax.annotation.Nullable @java.lang.Override public org.metaborg.spoofax.core.project.configuration.ISpoofaxLanguageSpecConfig get(final org.metaborg.core.project.ILanguageSpec languageSpec) throws java.io.IOException { @javax.annotation.Nullable org.metaborg.spoofax.core.project.configuration.ISpoofaxLanguageSpecConfig config = this.configurationBasedLanguageSpecConfigService.get(languageSpec); if ((config == null) && (languageSpec instanceof org.metaborg.core.project.IProject)) { @javax.annotation.Nullable final org.metaborg.spoofax.core.project.settings.LegacySpoofaxProjectSettings settings; try { settings = this.settingsService.get(((org.metaborg.core.project.IProject) (languageSpec))); } catch (org.metaborg.core.project.ProjectException e) { <BUGS> throw new java.lang.RuntimeException(e); <BUGE> } if (settings != null) { config = new org.metaborg.spoofax.core.project.configuration.LegacySpoofaxLanguageSpecConfig(settings); } } return config; } 
@java.lang.Override public void onSensorChanged(android.hardware.SensorEvent event) { <BUGS> <BUGE> if ((event.sensor.getType()) == (android.hardware.Sensor.TYPE_ACCELEROMETER)) { float rawX = event.values[0]; float normalizedX = rawX * (-2.0F); spaceShip.setXVelocity(((int) (normalizedX))); } } 
public static <T extends uk.ac.bbsrc.tgac.miso.core.data.DetailedSample> T getParent(java.lang.Class<T> targetParentClass, uk.ac.bbsrc.tgac.miso.core.data.DetailedSample start) { <BUGS> for (uk.ac.bbsrc.tgac.miso.core.data.DetailedSample current = start.getParent(); current != null; current = uk.ac.bbsrc.tgac.miso.core.util.LimsUtils.deproxify(current.getParent())) { <BUGE> if (targetParentClass.isInstance(current)) { <BUGS> return ((T) (current)); <BUGE> } } return null; } 
<BUGS> public static void spannableEmoticonFilterFromFile(android.widget.TextView tv_content, java.lang.String content) { <BUGE> android.text.SpannableStringBuilder spannableStringBuilder = new android.text.SpannableStringBuilder(content); <BUGS> android.text.Spannable spannable = com.sj.androidemoji.EmojiDisplayFromFIle.spannableFilter(tv_content.getContext(), spannableStringBuilder, content, com.sj.androidemoji.MainActivity.getFontHeight(tv_content), null); <BUGE> tv_content.setText(spannable); } 
@java.lang.Override public synchronized T accessOne() { safeCheck(); if (keyContainer.isEmpty()) return null;  T tmp = null; java.lang.Long key = keyContainer.get(0); tmp = net.vicp.lylab.core.pool.SequencePool.getFromContainer(key); <BUGS> keyContainer.remove(0); <BUGE> return tmp; } 
private void saveEntry(org.owasp.dependencycheck.dependency.Vulnerability vuln) throws java.io.IOException, org.apache.lucene.index.CorruptIndexException, org.owasp.dependencycheck.data.nvdcve.DatabaseException { <BUGS> if ((cveDB) == null) { return ; } <BUGE> final java.lang.String cveName = vuln.getName(); <BUGS> if (prevVersionVulnMap.containsKey(cveName)) { <BUGE> final java.util.List<org.owasp.dependencycheck.dependency.VulnerableSoftware> vulnSoftware = prevVersionVulnMap.get(cveName); for (org.owasp.dependencycheck.dependency.VulnerableSoftware vs : vulnSoftware) { vuln.updateVulnerableSoftware(vs); } } <BUGS> cveDB.updateVulnerability(vuln); <BUGE> } 
public void update() { if (isActive) { physicsPositionCalibration(); paintballShadow.setTranslation(new com.metaio.sdk.jni.Vector3d(geometry.getTranslation().getX(), geometry.getTranslation().getY(), 0.0F)); <BUGS> <BUGE> } <BUGS> if ((geometry.getTranslation().getZ()) <= 0.0F) { disable(); } if ((getPlayerId()) == (com.google.sprint1.GameState.getState().myPlayerID)) checkCollisions();  <BUGE> } 
private void displayResult(java.lang.String inputTemperature, float convertedTemperature, boolean isInput_Fahrenheit) { <BUGS> <BUGE> if (isInput_Fahrenheit) { mTextView_Result.setText((((convertedTemperature + (course.labs.permissionsapp.ConverterActivity.CELSIUS_STATEMENT_CONST)) + inputTemperature) + (course.labs.permissionsapp.ConverterActivity.FAHRENHEIT_STATEMENT_CONST))); } <BUGS> mTextView_Result.setText((((inputTemperature + (course.labs.permissionsapp.ConverterActivity.CELSIUS_STATEMENT_CONST)) + convertedTemperature) + (course.labs.permissionsapp.ConverterActivity.FAHRENHEIT_STATEMENT_CONST))); <BUGE> } 
private int getCurrentHour() { java.text.SimpleDateFormat simpleDateFormat = new java.text.SimpleDateFormat("kk", java.util.Locale.US); java.lang.String currentHours = simpleDateFormat.format(mCalendar.getTime()); <BUGS> if (currentHours.contains("0")) { return java.lang.Integer.valueOf(currentHours.replace("0", "")); }else { return java.lang.Integer.valueOf(currentHours); } <BUGE> } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); location = ((android.widget.TextView) (findViewById(R.id.locationText))); <BUGS> auth.hci.adscanner.controller.GPSTracker gps = new auth.hci.adscanner.controller.GPSTracker(getBaseContext()); <BUGE> if (gps.canGetLocation()) { location.setText(((("Langtitude: " + (gps.getLatitude())) + "\nLongtitude: ") + (gps.getLongitude()))); }else { gps.showSettingsAlert(); } } 
@java.lang.Override public void onClick(android.view.View v) { android.content.Intent scheduleDetailIntent = new android.content.Intent(jContext, com.android.activelife.tampa.ui.ScheduleContainerActivity.class); <BUGS> scheduleDetailIntent.putExtra("schedule_id", mMessagesDataResponseList.get(position).getSchedule().getId()); <BUGE> scheduleDetailIntent.putExtra("schedule_name", mMessagesDataResponseList.get(position).getSchedule().getName()); jContext.startActivity(scheduleDetailIntent); } 
private void CreateSpecies(java.lang.String type, int number) { for (int i = 0; i < number; i++) { GetPositionsAndTypes(); ((java.util.List<Species.ISpecie>) (species)).add(Species.SpecieFactory.GetSpecies(type, RandomPosition())); } <BUGS> <BUGE> } 
@org.springframework.context.annotation.Bean(destroyMethod = "close") public javax.persistence.EntityManagerFactory entityManagerFactory() throws java.io.IOException, java.sql.SQLException, javax.xml.bind.JAXBException { org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter vendorAdapter = new org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter(); vendorAdapter.setGenerateDdl(true); vendorAdapter.setShowSql(false); org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean factory = new org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean(); factory.setJpaVendorAdapter(vendorAdapter); <BUGS> factory.setJpaDialect(new org.springframework.orm.jpa.vendor.HibernateJpaDialect()); <BUGE> factory.setJpaProperties(getAdditionalProperties()); factory.setPackagesToScan("ch.bfh.btx8201.cdss4nsar.democis.data"); <BUGS> factory.setDataSource(dataSource()); <BUGE> factory.afterPropertiesSet(); return factory.getObject(); } 
public static void response(java.lang.String name, java.lang.String s) { <BUGS> if (com.minecraftmarket.util.Log.debug) <BUGE> com.minecraftmarket.util.Log.log(" "); <BUGS>  com.minecraftmarket.util.Log.log(((("   ------------- " + " MinecraftMarket Debug ") + name) + " -------------    ")); com.minecraftmarket.util.Log.log(("   " + s)); com.minecraftmarket.util.Log.log("   --------------------------------------------------------------------   "); <BUGE> } 
public static int includedNumbers(java.util.List<java.lang.Integer[]> ranges) { <BUGS> java.util.Set<java.lang.Integer> numbers = new java.util.HashSet<java.lang.Integer>(); <BUGE> java.util.List<es.madhava.integerfun.Range> rangesList = new java.util.ArrayList<es.madhava.integerfun.Range>(); for (java.lang.Integer[] range : ranges) { es.madhava.integerfun.RangeMerge.addRange(rangesList, range); } for (es.madhava.integerfun.Range range : rangesList) { numbers.addAll(range.getNumbers()); } return numbers.size(); } 
@java.lang.Override public void showEmpty() { mobymagic.com.javalagos.utils.LogUtils.d(mobymagic.com.javalagos.ui.userslist.BaseUserListFragment.LOG_TAG, "Showing empty"); if ((mPlaceHolderView.getViewCount()) < 1) { mProgressView.setVisibility(View.GONE); mErrorContainerView.setVisibility(View.GONE); mEmptyContainerView.setVisibility(View.VISIBLE); } <BUGS> mPlaceHolderView.noMoreToLoad(); <BUGE> } 
public void launch() { try { socket = new java.net.ServerSocket(port); java.lang.System.out.println((("TCP high level server is running on " + (port)) + "...")); while (true) { java.net.Socket tcpClient = socket.accept(); <BUGS> client.Client client = new client.Client(tcpClient, responseDelay); <BUGE> executorService.submit(client); java.lang.System.out.println("Server is listening new client..."); } } catch (java.io.IOException e) { e.printStackTrace(); } } 
private void setTeamColor(net.minecraft.scoreboard.ScorePlayerTeam team, java.lang.String newTeamColor) { java.lang.String prefix = team.getColorPrefix(); java.lang.String prefixSplit; try { prefixSplit = prefix.substring(4); } catch (java.lang.NullPointerException e) { prefix = "\u00a7r\u00a7r"; prefixSplit = ""; } catch (java.lang.StringIndexOutOfBoundsException e) { prefixSplit = ""; } <BUGS> java.lang.System.out.println((("Set color prefix to " + newTeamColor) + prefixSplit)); <BUGE> team.setNamePrefix((newTeamColor + prefixSplit)); } 
<BUGS> public static java.lang.CharSequence applyToText(java.lang.CharSequence charSequence, android.graphics.Typeface typeface, int start, int end) { android.text.Spannable spannable; <BUGE> if (charSequence instanceof android.text.Spannable) { <BUGS> spannable = ((android.text.Spannable) (charSequence)); }else { spannable = android.text.SpannableString.valueOf(charSequence); <BUGE> } <BUGS> spannable.setSpan(cat.ppicas.customtypeface.CustomTypefaceSpan.getInstance(typeface), start, end, Spanned.SPAN_INCLUSIVE_INCLUSIVE); return spannable; <BUGE> } 
@java.lang.Override public boolean visit(org.eclipse.php.internal.core.compiler.ast.visitor.PHPCallExpression node) throws java.lang.Exception { if ((node.getReceiver()) != null) { node.getReceiver().traverse(this); } if ((node.getArgs()) != null) { node.getArgs().traverse(this); } <BUGS> return visitGeneral(node); <BUGE> } 
public void mouseReleased(java.awt.event.MouseEvent e) { <BUGS> dragging = false; <BUGE> if ((e.getButton()) == (java.awt.event.MouseEvent.BUTTON1)) { <BUGS> <BUGE> java.lang.System.out.println("released"); command = new controller.TravelCommand(currentPersModel, initPosX, initPosy, e.getX(), e.getY()); cmdMan.storeAndExecute(command, currentPersModel.getID()); } } 
@java.lang.Override public boolean equals(java.lang.Object o) { if ((this) == o) return true;  <BUGS> if ((o == null) || ((getClass()) != (o.getClass()))) <BUGE> return false;  <BUGS> net.osmand.plus.quickaction.QuickAction action = ((net.osmand.plus.quickaction.QuickAction) (o)); if ((type) != (action.type)) <BUGE> return false;  <BUGS> if ((id) != (action.id)) return false;  return true; <BUGE> } 
public me.noize.chemistry.io.TimeRange extendTo(final long time) { if (time < (this.getStart())) { return new me.noize.chemistry.io.TimeRange(time, this.getEnd()); }else if ((this.getEnd()) < time) { <BUGS> return new me.noize.chemistry.io.TimeRange(this.getStart(), this.end); <BUGE> }else { return this; }  } 
@java.lang.Override public void onClick(android.content.DialogInterface dialog, int which) { int prog = seekBar.getProgress(); this.warmth = prog + 1; <BUGS> java.lang.System.out.println(R.string.recapHot); <BUGE> this.recapWarmth.setText(android.text.Html.fromHtml(((("<b>" + (res.getString(R.string.recapHot))) + "</b>") + (hotWordArray[prog])))); } 
@java.lang.Override public com.windowsazure.messaging.NotificationPlatform convertTo(com.bosch.cn.dad.notificationhub.model.DeviceType srcDeviceType, com.windowsazure.messaging.NotificationPlatform destPlatform) { if (srcDeviceType == null) { return null; } switch (srcDeviceType) { case WindowsNotification : destPlatform = com.windowsazure.messaging.NotificationPlatform.Wns; break; case WindowsPhoneNotification : destPlatform = com.windowsazure.messaging.NotificationPlatform.Mpns; break; case AppleNotification : destPlatform = com.windowsazure.messaging.NotificationPlatform.Apns; break; case BaiduNotification : destPlatform = com.windowsazure.messaging.NotificationPlatform.Gcm; break; case GoogleCloudMessaging : destPlatform = com.windowsazure.messaging.NotificationPlatform.Gcm; break; case AmazonDeviceMessaging : destPlatform = com.windowsazure.messaging.NotificationPlatform.Adm; break; } <BUGS> return null; <BUGE> } 
public java.lang.String inflectNoun(java.lang.String nounLemma, java.lang.String inflection) { <BUGS> java.lang.String toRet = ""; <BUGE> ballpark.WordElement word = lexicon.getWord(nounLemma, LexicalCategory.NOUN); if (inflection.contains("def")) { if (inflection.contains("plu")) { ballpark.InflectedWordElement pluralWord = new ballpark.InflectedWordElement(word); pluralWord.setPlural(true); toRet = realiser.realise(pluralWord).toString(); } if (toRet != null) return "the " + toRet; <BUGS> <BUGE>  } return nounLemma; } 
private void createIndexForPost() { try { if (!(DS.mop.collectionExists("post"))) { DS.mop.createCollection("post"); <BUGS> com.mongodb.DBObject textIndex = new com.mongodb.BasicDBObject("message", "text"); textIndex.put("link", "text"); textIndex.put("name", "text"); DS.mop.getCollection("post").createIndex(textIndex); <BUGE> } <BUGS> <BUGE> } catch (java.lang.Exception e) { bootstrap.Logger.debug(("error on index post" + (e.getMessage()))); } } 
private int decideAction() { <BUGS> int action = 0; <BUGE> setHorizontalVelocity(0.0); java.util.Random rand = new java.util.Random(); actionDuration = ((rand.nextDouble()) * 3.0) + 1.0; actionTime = 0.0; int randomNum = rand.nextInt(4); <BUGS> if (randomNum == 0) action = 0;  if (randomNum == 1) action = 1;  if (randomNum == 2) action = 2;  if (randomNum == 3) action = 3;  return action; <BUGE> } 
private static double compare(final java.lang.String v1, final java.lang.String v2, final double high, final double low, final java.util.Comparator comparator) { if (comparator == null) { return org.yaba.entity.script.EntityResolutionScript.AVERAGE_SCORE; } double sim = comparator.compare(v1, v2); <BUGS> if (sim < (org.yaba.entity.script.EntityResolutionScript.AVERAGE_SCORE)) { <BUGE> return low; }else { return ((high - (org.yaba.entity.script.EntityResolutionScript.AVERAGE_SCORE)) * (sim * sim)) + (org.yaba.entity.script.EntityResolutionScript.AVERAGE_SCORE); } } 
private void firePrefixOrSuffix(java.lang.String key) { for (java.lang.String k : new java.util.LinkedList(callbacksByMatch.keySet())) { <BUGS> if (k.startsWith(key)) { <BUGE> fireMatch(key, Match.PREFIX); } <BUGS> if (k.endsWith(key)) { <BUGE> fireMatch(key, Match.SUFFIX); } } } 
private Board swapRight(int blankX, int blankY) { Board swap = new Board(this.board); <BUGS> if (blankX <= (this.dimensions())) { <BUGE> throw new java.lang.IndexOutOfBoundsException("Can not swap right most column right"); } exchange(swap.board, blankX, blankY, blankX, (blankY + 1)); return swap; } 
public void editClass(android.view.View view) { java.util.List<android.widget.CheckBox> selectedClasses = projectManager.getCheckedCheckBoxes(); switch (selectedClasses.size()) { case 0 : break; case 1 : { editSingleClass(selectedClasses); <BUGS> <BUGE> } default : { } } } 
@org.junit.Test public void testNullInsideObjects() { eu.europa.fisheries.uvms.rules.service.mapper.fact.FishingActivity faAct = new eu.europa.fisheries.uvms.rules.service.mapper.fact.FishingActivity(); <BUGS> final java.util.List<eu.europa.fisheries.uvms.rules.service.mapper.fact.FaCatchFact> faCatchFacts = activityMapper.generateFactsForFaCatch(faAct); <BUGE> java.util.List<eu.europa.fisheries.uvms.rules.service.mapper.fact.GearProblem> gearList = new java.util.ArrayList<eu.europa.fisheries.uvms.rules.service.mapper.fact.GearProblem>() { { add(new eu.europa.fisheries.uvms.rules.service.mapper.fact.GearProblem()); } }; activityMapper.generateFactsForGearProblems(gearList); } 
private void outputToFile(java.lang.String text) { <BUGS> byte[] id = xaurora.io.IDGenerator.instanceOf().GenerateID(xaurora.communication.ChromeServer.getURL(text), xaurora.communication.ChromeServer.TYPE_FULL_TEXT); <BUGE> xaurora.io.DataFileIO.instanceOf().createDataFile(id, java.lang.String.valueOf(text).getBytes()); <BUGS> <BUGE> } 
@java.lang.Override public java.lang.String toString() { java.lang.String str = "Symbol Table list:"; for (int i = nestinglevel; (-1) < (nestinglevel); i++) { str += ("Nesting level " + i) + ":\n"; str += tables[i].toString(); } <BUGS> <BUGE> } 
private void dataInit() { for (int i = 0; i < 3; i++) { <BUGS> java.util.ArrayList<java.lang.Integer> tmp = new java.util.ArrayList<java.lang.Integer>(); dataMagnetic.add(tmp); dataOrientation.add(tmp); dataAccelerate.add(tmp); dataGyroscope.add(tmp); dataGravity.add(tmp); <BUGE> } } 
<BUGS> private java.lang.String buildHtmlHeadLink() { <BUGE> final java.lang.StringBuilder html = new java.lang.StringBuilder(); html.append("<link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\" />").append(NewLine.CRLF); html.append("<link rel=\"stylesheet\" href=\"/css/bootstrap-theme.min.css\" />").append(NewLine.CRLF); html.append("<link rel=\"stylesheet\" href=\"/css/routerlogger.css\" />").append(NewLine.CRLF); html.append("<link rel=\"stylesheet\" href=\"/fonts/fonts.css\" />").append(NewLine.CRLF); <BUGS> return html.toString(); <BUGE> } 
public boolean groupRetriever() { view.setText("Group Members\n"); try (java.io.FileInputStream file = openFileInput(("CMG" + (groupName)))) { java.util.Scanner in = new java.util.Scanner(file); while (in.hasNextLine()) { <BUGS> userAdded.add(((in.nextLine()) + "\n")); <BUGE> schedAdded.add(in.nextLine()); } } catch (java.lang.Exception e) { return false; } return true; } 
@java.lang.Override public boolean onCreateOptionsMenu(android.view.Menu menu) { getMenuInflater().inflate(R.menu.activity_main_toolbar, menu); mPathItem = menu.findItem(R.id.main_toolbar_path); mTrafficItem = menu.findItem(R.id.main_toolbar_traffic); if (getSharedBoolean(SharedPrefs.KEY_SHOW_PATH)) mPathItem.setIcon(R.drawable.road_variant_on);  if (getSharedBoolean(SharedPrefs.KEY_SHOW_TRAFFIC)) mTrafficItem.setIcon(R.drawable.ic_traffic_24dp_on);  <BUGS> timber.log.Timber.d("onCreateOptionsMenu"); <BUGE> return true; } 
public void disconnect() throws java.io.IOException { if ((listen) == null) { java.lang.System.out.println("Register first!"); return ; } java.net.Socket sock = createSocket(); <BUGS> if (!(sendAndReceive(("disconnect " + (id))))); { <BUGE> java.lang.System.out.println("Disconnect failed, try again"); } listen.interrupt(); sock.close(); } 
public void reset() { if (isTerminated()) { kernelsToRun.addAll(finishedKernels); finishedKernels.clear(); <BUGS> <BUGE> } <BUGS> (iteration)++; end = -1; terminated = (kernelsToRun.isEmpty()) && (runningThreads.isEmpty()); <BUGE> } 
public void append(java.lang.String key, java.lang.String content) { java.lang.String value = get(key); <BUGS> if (value == null) { put(key, content); }else { value = value + content; <BUGE> } <BUGS> <BUGE> logger.info(((((("Node[" + (node.getHashcode())) + "] APPEND Key:") + key) + "Value:") + value)); } 
<BUGS> private static com.gmail.trentech.pjc.core.SQLManager init(org.spongepowered.api.plugin.PluginContainer plugin) { <BUGE> if (!(com.gmail.trentech.pjc.core.SQLManager.sqlManagers.containsKey(plugin.getId()))) { com.gmail.trentech.pjc.core.SQLManager sqlManager = new com.gmail.trentech.pjc.core.SQLManager(plugin); <BUGS> return com.gmail.trentech.pjc.core.SQLManager.sqlManagers.put(plugin.getId(), sqlManager); }else { return com.gmail.trentech.pjc.core.SQLManager.sqlManagers.get(plugin.getId()); <BUGE> } <BUGS> <BUGE> } 
public static void init(final int measurements, final java.lang.String[] events, int... options) { if ((cz.cuni.mff.d3s.perf.Benchmark.defaultEventSet) != (-1)) { cz.cuni.mff.d3s.perf.Measurement.destroyEventSet(cz.cuni.mff.d3s.perf.Benchmark.defaultEventSet); <BUGS> <BUGE> } cz.cuni.mff.d3s.perf.Benchmark.defaultEventSet = cz.cuni.mff.d3s.perf.Measurement.createEventSet(measurements, events, options); } 
@java.lang.Override public com.sun.jersey.api.client.ClientResponse get(java.net.URI uri) throws com.emc.storageos.svcs.errorhandling.resources.InternalException { java.net.URI requestURI = _base.resolve(uri); com.sun.jersey.api.client.ClientResponse response = setResourceHeaders(_client.resource(requestURI)).type(MediaType.APPLICATION_JSON).get(com.sun.jersey.api.client.ClientResponse.class); if (authenticationFailed(response)) { <BUGS> closeResponse(response); <BUGE> authenticate(); response = setResourceHeaders(_client.resource(requestURI)).type(MediaType.APPLICATION_JSON).get(com.sun.jersey.api.client.ClientResponse.class); } checkResponse(uri, response); return response; } 
public void run() { <BUGS> movePotion = false; <BUGE> cauldron.setTextColor(android.support.v4.content.ContextCompat.getColor(context, R.color.chemistryGameCorrect)); cauldron.setText("Correct"); <BUGS> movePotion = false; <BUGE> new android.os.Handler().postDelayed(new java.lang.Runnable() { public void run() { <BUGS> movePotion = false; <BUGE> cauldron.setTextColor(android.support.v4.content.ContextCompat.getColor(context, R.color.chemistryGameText)); currQuestion += 1; movePotion = true; setUp(); } }, 800); } 
@java.lang.Override public java.lang.Object getSystemService(java.lang.String name) { <BUGS> if ((Context.LAYOUT_INFLATER_SERVICE.equals(name)) && ((com.smartnsoft.droid4me.support.v7.app.SmartAppCompatActivity.getWindow()) != null)) { <BUGE> return droid4mizer.getSystemService(name, com.smartnsoft.droid4me.support.v7.app.SmartAppCompatActivity.getWindow().getLayoutInflater()); }else { return droid4mizer.getSystemService(name, super.getSystemService(name)); } } 
private void updateMaster() { if (masterExists()) { <BUGS> int realLightsCount = getRealLightsCount(); <BUGE> int sum = 0; for (bei.m3c.widgets.LightWidget lightWidget : largeLightWidgets.subList(1, largeLightWidgets.size())) { sum += lightWidget.getValue(); } <BUGS> largeLightWidgets.get(0).setValue(java.lang.Math.round((sum / realLightsCount))); <BUGE> } } 
public void deploy() { com.openshift.client.ApplicationScale scale1 = com.openshift.client.ApplicationScale.NO_SCALE; <BUGS> com.openshift.client.cartridge.IStandaloneCartridge car1 = com.openshift.client.cartridge.query.LatestVersionOf.jbossAs().get(user); <BUGE> com.openshift.client.cartridge.StandaloneCartridge cartridge = new com.openshift.client.cartridge.StandaloneCartridge(getEntity().getCartridge()); deployedApp = new com.openshift.client.ApplicationBuilder(domain).setName(applicationName).setStandaloneCartridge(cartridge).setApplicationScale(scale1).setInitialGitUrl(gitRepositoryUrl).build(); } 
public boolean addRoomToBooking(long bookingId) { if ((bookingId < 1) || (bookingId > (currentBookingId))) { return false; }else if ((currentReservationNumber) >= (MAX_ROOMS)) { return false; }else { ++(currentReservationNumber); reservationToBookingId.put(currentReservationId, bookingId); ++(currentReservationId); <BUGS> java.lang.System.out.println("Add Room To Booking"); <BUGE> return true; }  } 
private void flock(java.util.ArrayList<personalproject.simpleapp.Boid> boids) { personalproject.simpleapp.Vector2 sep = seperate(boids); personalproject.simpleapp.Vector2 ali = align(boids); personalproject.simpleapp.Vector2 coh = cohesion(boids); sep.multi(data.getSWeight()); ali.multi(data.getAWeight()); coh.multi(data.getCWeight()); applyForce(sep); <BUGS> <BUGE> } 
public void removeConnectedFlagCascade(int trackIdx) { <BUGS> for (int i = trackIdx; i < (mTracks.size()); i++) { <BUGE> if (mTracks.get(i).isConnectedPrev()) mTracks.get(i).setConnectedPrev(false); else break;  } } 
public void checkFinished() { boolean status = true; for (int index : player.getHighlightedFiguresIndizes()) { if (stage.getActors().get(index).isVisible()) { status = false; } } if ((status && ((kickedIndex) == (-1))) && ((actorActive) == (-1))) { <BUGS> setCheatEnabled(false); <BUGE> handler.sendMessage(player.getNumber()); } } 
@java.lang.Override public void sendToPlayers(java.util.Collection<org.bukkit.entity.Player> targets) { java.lang.String tag = tags.getTag(false, false); for (java.lang.String line : message) { <BUGS> java.lang.String messageLine = tag.concat(line); <BUGE> for (org.bukkit.command.CommandSender target : targets) { <BUGS> target.sendMessage(line); <BUGE> } } } 
@java.lang.Override public java.lang.String stringValue(final msi.gama.runtime.IScope scope) throws msi.gama.runtime.exceptions.GamaRuntimeException { <BUGS> return (((((((("message[sender: " + (data.getSender())) + "; receivers: ") + (data.getReceivers())) + "; performative: ") + (data.getPerformativeName())) + "; content: ") + (data.getContent())) + "; content") + "]"; <BUGE> } 
private void getMiniFields() { for (org.unicef.rapidreg.forms.Section section : sections) { for (org.unicef.rapidreg.forms.Field caseField : section.getFields()) { if (caseField.isShowOnMiniForm()) { if (caseField.isPhotoUploadBox()) { miniFields.add(0, caseField); }else { miniFields.add(caseField); } } } } <BUGS> addProfileFieldForDetailsPage(); <BUGE> } 
<BUGS> <BUGE> public final void setForbidden(java.lang.String spec1, java.lang.String spec2) { addVariable(spec1); addVariable(spec2); spec1 = checkSpec(spec1); spec2 = checkSpec(spec2); java.util.Set<edu.cmu.tetrad.data.Knowledge2.MyNode> f1 = getExtent(spec1); java.util.Set<edu.cmu.tetrad.data.Knowledge2.MyNode> f2 = getExtent(spec2); edu.cmu.tetrad.data.OrderedPair<java.util.Set<edu.cmu.tetrad.data.Knowledge2.MyNode>> o = new edu.cmu.tetrad.data.OrderedPair(f1, f2); <BUGS> forbiddenRulesSpecs.add(o); <BUGE> } 
public boolean InspectInventory(java.lang.String object) { for (int col = 0; col < (playerInventory.length); col++) { <BUGS> if (playerInventory[col][0].toString().equals(object)) { <BUGE> return true; } } return false; } 
public void addScenario(java.lang.String scenarioName, elevatorsimulation.Model.BuildingScenario buildingScenario) { if (!(scenarioExists(scenarioName))) { <BUGS> buildingScenarios.put(new java.lang.StringBuilder(scenarioName), buildingScenario); <BUGE> scenarioEntries.add(buildingScenario.getScenarioEntryText().toString()); return ; } try { throw new elevatorsimulation.Exceptions.ScenarioAlreadyExistsException(); } catch (elevatorsimulation.Exceptions.ScenarioAlreadyExistsException e) { java.lang.System.out.println("Scenario Already Exists"); } } 
@java.lang.Override public void grant(co.cask.cdap.proto.id.EntityId entity, co.cask.cdap.proto.security.Principal principal, java.util.Set<co.cask.cdap.proto.security.Action> actions) throws co.cask.cdap.common.FeatureDisabledException, co.cask.cdap.common.NotFoundException, co.cask.cdap.common.UnauthenticatedException, co.cask.cdap.security.spi.authorization.UnauthorizedException, java.io.IOException { co.cask.cdap.proto.security.GrantRequest grantRequest = new co.cask.cdap.proto.security.GrantRequest(entity, principal, actions); java.net.URL url = config.resolveURLV3(((co.cask.cdap.client.AuthorizationClient.AUTHORIZATION_BASE) + "/privileges/grant")); co.cask.common.http.HttpRequest request = co.cask.common.http.HttpRequest.post(url).withBody(co.cask.cdap.client.AuthorizationClient.GSON.toJson(grantRequest)).build(); <BUGS> executePrivilegeRequest(entity, request); <BUGE> } 
<BUGS> public io.cattle.platform.core.model.Account createProjectForUser(io.cattle.platform.core.model.Account account) { io.cattle.platform.core.model.Account project = authDao.createProject(((account.getName()) + (io.cattle.platform.core.constants.ProjectConstants.PROJECT_DEFAULT_NAME)), null); io.cattle.platform.api.auth.Identity identity = new io.cattle.platform.api.auth.Identity(account.getExternalIdType(), account.getExternalId()); <BUGE> authDao.createProjectMember(project, new io.cattle.platform.iaas.api.auth.projects.Member(identity, io.cattle.platform.core.constants.ProjectConstants.OWNER)); return project; } 
@java.lang.Override public void onViewCreated(android.view.View view, @android.support.annotation.Nullable android.os.Bundle savedInstanceState) { super.onViewCreated(view, savedInstanceState); mAdapter = new com.rukiasoft.androidapps.cocinaconroll.ui.EditRecipeRecyclerViewAdapter(getActivity(), recipeItem.getIngredients(), this); <BUGS> recyclerView.setHasFixedSize(true); <BUGE> recyclerView.setAdapter(mAdapter); recyclerView.setLayoutManager(new android.support.v7.widget.LinearLayoutManager(getActivity())); android.support.v7.widget.helper.ItemTouchHelper.Callback callback = new com.rukiasoft.androidapps.cocinaconroll.dragandswipehelper.SimpleItemTouchHelperCallback(mAdapter); mItemTouchHelper = new android.support.v7.widget.helper.ItemTouchHelper(callback); mItemTouchHelper.attachToRecyclerView(recyclerView); } 
@java.lang.Override public double deposit(double amount) { if ((getBalance()) == 0) return 0;  double deposited = super.deposit(amount); double finalDeposit = against.deposit(deposited); <BUGS> double difference = finalDeposit - deposited; if (difference != 0) <BUGE> super.withdraw(difference); <BUGS>  <BUGE> return finalDeposit; } 
<BUGS> private void setMonthOnAction(javafx.scene.layout.HBox box, java.time.LocalDateTime start) { <BUGE> box.setOnMouseClicked(new javafx.event.EventHandler<javafx.scene.input.MouseEvent>() { @java.lang.Override public void handle(javafx.scene.input.MouseEvent event) { if ((event.getButton()) == (javafx.scene.input.MouseButton.PRIMARY)) { <BUGS> createDayView(start); <BUGE> }else if (((event.getButton()) == (javafx.scene.input.MouseButton.SECONDARY)) && (yearView)) { createYear(timeline.getStart(), timeline.getEnd()); }  } }); } 
@org.junit.Test <BUGS> public void getPerlVersionCallsProcessBuilderFactory() throws java.lang.Exception { <BUGE> processbuilder.PerlProcessBuilderFactory factory = org.mockito.Mockito.mock(processbuilder.PerlProcessBuilderFactory.class); processbuilder.utils.PerlProcessBuilderUtilities processBuilderUtilitiesMock = org.mockito.Mockito.spy(processbuilder.utils.PerlProcessBuilderUtilities.class); org.mockito.Mockito.when(factory.getProcessBuilder(org.mockito.Matchers.<java.lang.String[]>anyVararg())).thenReturn(new java.lang.ProcessBuilder("")); <BUGS> jsr223.perl.utils.PerlVersionGetter perlVersionGetter = new jsr223.perl.utils.PerlVersionGetter(processBuilderUtilitiesMock); perlVersionGetter.getPerlVersion(factory); <BUGE> org.mockito.Mockito.verify(factory).getProcessBuilder(org.mockito.Matchers.<java.lang.String[]>anyVararg()); } 
protected static java.lang.String[] createNames(int nameCount, java.lang.String preamble) { if (preamble == null) preamble = "V";  <BUGS> int i = 1; <BUGE> java.lang.String[] n = new java.lang.String[nameCount]; <BUGS> while (i <= nameCount) { n[i] = preamble + (i++); <BUGE> } return n; } 
public synchronized void start() { assert (this.state) == (ShutdownState.INITIALIZED) : "Invalid MessengerState " + (this.state); this.state = ShutdownState.STARTED; if (edu.brown.hstore.ReconfigCoordinator.debug.val) edu.brown.hstore.ReconfigCoordinator.LOG.debug("Initializing connections");  this.initConnections(); if (edu.brown.hstore.ReconfigCoordinator.debug.val) edu.brown.hstore.ReconfigCoordinator.LOG.debug("Starting listener thread");  this.listener_thread.start(); <BUGS> if ((this.local_site_id) == 0) { this.initCluster(); } <BUGE> this.ready_observable.notifyObservers(this); } 
public void createAndAddWidgets() { this.dataTree = new javax.swing.JTree(this.root); this.dataTree.expandRow(0); this.dataTree.setRootVisible(false); <BUGS> this.dataTree.setEditable(true); <BUGE> final javax.swing.JScrollPane scrollPane = new javax.swing.JScrollPane(this.dataTree); scrollPane.setBorder(new javax.swing.border.TitledBorder(OmeroPluginGUIConstants.TREE_TITLE)); this.add(scrollPane, java.awt.BorderLayout.CENTER); } 
@java.lang.Override public co.cask.cdap.store.NamespaceMDS get() { co.cask.cdap.api.dataset.table.Table table; try { table = dsCache.getDataset(co.cask.cdap.store.DefaultNamespaceStore.APP_META_INSTANCE_ID.getId()); } catch (co.cask.cdap.api.data.DatasetInstantiationException e) { try { <BUGS> table = co.cask.cdap.data2.datafabric.dataset.DatasetsUtil.getOrCreateDataset(dsFramework, co.cask.cdap.store.DefaultNamespaceStore.APP_META_INSTANCE_ID, "table", DatasetProperties.EMPTY, DatasetDefinition.NO_ARGUMENTS, null); <BUGE> } catch (co.cask.cdap.api.dataset.DatasetManagementException | java.io.IOException e1) { throw com.google.common.base.Throwables.propagate(e1); } } return new co.cask.cdap.store.NamespaceMDS(table); } 
static void invokeMethod(java.lang.Object object, java.lang.reflect.Method method, java.lang.Object... args) { try { if (method == null) return ;  method.invoke(object, args); <BUGS> } catch (java.lang.IllegalAccessException | java.lang.reflect.InvocationTargetException ignored) { <BUGE> ignored.printStackTrace(); } } 
public static int getFutureLinesVanished(de.slothsoft.tetris.Board board, de.slothsoft.tetris.Stone stone, int blockY) { int lines = 0; for (int y = 0; y < (stone.getHeightInBlocks()); y++) { int stoneBlocks = stone.calculateBlockCountOfLine(y); int boardBlocksCount = board.calculateBlockCountOfLine((y + blockY)); <BUGS> if ((stoneBlocks + boardBlocksCount) == (Board.WIDTH_IN_BLOCKS)) { <BUGE> lines++; } } return lines; } 
@java.lang.Override public void onDataChange(com.learn.shruti.ratemyday.DataSnapshot dataSnapshot) { for (com.learn.shruti.ratemyday.DataSnapshot postSnapshot : dataSnapshot.getChildren()) { com.learn.shruti.ratemyday.Model.Review r = postSnapshot.getValue(com.learn.shruti.ratemyday.Model.Review.class); <BUGS> if ((r.employeeEmail) == userEmail) <BUGE> reviewList.add(r);  android.widget.Toast.makeText(this, ((("com: " + (r.comments)) + ", rate ") + (r.rating)), Toast.LENGTH_SHORT).show(); } } 
public java.lang.String getReferenceTable(ru.osslabs.model.datasource.MetaObject metaObject, java.lang.String fieldName) { java.lang.String result = ""; <BUGS> if (metaObject.getChildren().containsKey(fieldName)) { result = metaObject.getChildren().get(fieldName).getType().getSecondary(); <BUGE> } return result; } 
<BUGS> private boolean readIfNeeded(io.netty.channel.ChannelHandlerContext ctx) { <BUGE> if ((!(ctx.channel().config().isAutoRead())) && ((!(firedChannelRead)) || (!(handshakePromise.isDone())))) { ctx.read(); <BUGS> return true; <BUGE> } <BUGS> return false; <BUGE> } 
public void setLanecover(float lanecover) { <BUGS> <BUGE> this.lanecover = lanecover; if ((this.fixhispeed) != (bms.player.beatoraja.Config.FIX_HISPEED_OFF)) { hispeed = ((float) ((((2400.0F / ((basebpm) / 100)) / (gvalue)) * 0.6) * (1 - (enableLanecover ? lanecover : 0)))); } } 
public int incrementNumberOfScheduledDeliveries(long messageID) { org.wso2.andes.kernel.OnflightMessageTracker.MsgData trackingData = getTrackingData(messageID); <BUGS> trackingData.addMessageStatus(MessageStatus.SCHEDULED_TO_SEND); int numOfSchedules = trackingData.numberOfScheduledDeliveries.incrementAndGet(); if (org.wso2.andes.kernel.OnflightMessageTracker.log.isDebugEnabled()) { org.wso2.andes.kernel.OnflightMessageTracker.log.debug(((("message id= " + messageID) + " scheduled. Pending to execute= ") + numOfSchedules)); <BUGE> } return numOfSchedules; } 
public T removeLast() { if ((size) == 0) { throw new java.util.NoSuchElementException(); } <BUGS> T ret = ((T) (queue[(--(tail))])); <BUGE> (size)--; return ret; } 
public boolean applyTop(int id) { boolean bool = false; int applyTotal = newsDao.applyTotalTop(); <BUGS> if (applyTotal <= 5) { <BUGE> int count = newsDao.applyTop(id); if (count > 0) { bool = true; } } return bool; } 
@java.lang.Override public boolean onQueryTextSubmit(java.lang.String query) { if (!((query.isEmpty()) || (query.equals(lastQuery)))) { lastQuery = query; mArtistAdapter.clear(); <BUGS> new com.bmriv.android.streamify.QueryArtistTask(mArtistAdapter, mToast).execute(query); <BUGE> } return true; } 
<BUGS> public static void formatRange(java.lang.String source, com.intellij.openapi.util.TextRange range, org.jetbrains.kotlin.psi.KtPsiFactory psiFactory, java.lang.String fileName) { <BUGE> org.jetbrains.kotlin.psi.KtFile ktFile = org.jetbrains.kotlin.formatting.KotlinFormatterUtils.createKtFile(source, psiFactory, fileName); com.intellij.formatting.Block rootBlock = new org.jetbrains.kotlin.formatting.KotlinBlock(ktFile.getNode(), org.jetbrains.kotlin.formatting.NodeAlignmentStrategy.getNullStrategy(), com.intellij.formatting.Indent.getNoneIndent(), null, org.jetbrains.kotlin.formatting.KotlinFormatterUtils.settings, org.jetbrains.kotlin.idea.formatter.KotlinSpacingRulesKt.createSpacingBuilder(org.jetbrains.kotlin.formatting.KotlinFormatterUtils.settings, KotlinSpacingBuilderUtilImpl.INSTANCE)); <BUGS> org.jetbrains.kotlin.formatting.KotlinFormatterUtils.formatRange(ktFile, rootBlock, org.jetbrains.kotlin.formatting.KotlinFormatterUtils.settings, source, range); <BUGE> } 
@org.junit.Test public void testOf_file() throws java.lang.Exception { io.inkstand.scribble.pdf.PDF pdf = io.inkstand.scribble.pdf.PDF.of(this.file); org.junit.Assert.assertNotNull(pdf); org.junit.Assert.assertNotNull(pdf.toDataSource()); <BUGS> <BUGE> try (java.io.InputStream is = pdf.openStream()) { org.junit.Assert.assertNotNull(is); } } 
public ATMServer.Server handleData() throws java.io.IOException { int i = 0; int maxConnections = 200; <BUGS> <BUGE> while ((i++) < maxConnections) { java.net.Socket clientConnection = s.accept(); <BUGS> ATMServer.Worker worker = new ATMServer.Worker(clientConnection, functions, clientData); <BUGE> java.lang.Thread t = new java.lang.Thread(worker); t.start(); logger.info(("New client connected, assigned thread ID #" + (t.getId()))); } return this; } 
@android.support.annotation.MainThread <BUGS> private void clearDataSource(final boolean clearTargetState) { <BUGE> synchronized(mLock) { logger.debug(("clearDataSource(), clearTargetState=" + clearTargetState)); cancelResetCallback(); mScriptExecutor.execute("clearDataSource()"); mScriptExecutor.execute("clearImage()"); mScriptExecutor.execute("clearPage()"); mLastContentUriToOpen = null; mLastAssetFileDescriptorToOpen = null; mLastModeToOpen = PlayMode.NONE; setCurrentState(State.IDLE); if (clearTargetState) { setTargetState(State.IDLE); } } } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_article_list); <BUGS> final android.view.View toolbarContainerView = findViewById(R.id.toolbar_container); <BUGE> mSwipeRefreshLayout = ((android.support.v4.widget.SwipeRefreshLayout) (findViewById(R.id.swipe_refresh_layout))); mRecyclerView = ((android.support.v7.widget.RecyclerView) (findViewById(R.id.recycler_view))); getLoaderManager().initLoader(0, null, this); if (savedInstanceState == null) { refresh(); } } 
<BUGS> static boolean tableExists(org.jdbdt.CallInfo callInfo, org.jdbdt.DB db, java.lang.String tableName) { <BUGE> return db.access(() -> { java.sql.DatabaseMetaData dbmd = db.getConnection().getMetaData(); try (java.sql.ResultSet rs = dbmd.getTables(null, null, null, new java.lang.String[]{ "TABLE" })) { while (rs.next()) { if (tableName.equalsIgnoreCase(rs.getString("TABLE_NAME"))) { return true; } } } return false; }); } 
@java.lang.Override <BUGS> public java.util.List<java.lang.Integer> getSolutionProjects(long id) { java.util.List<java.lang.Integer> projects = new java.util.ArrayList<>(); <BUGE> java.lang.String query = "select id from project where solutionid=" + id; java.util.List<java.util.Map<java.lang.String, java.lang.Object>> projectsResult = jdbcTemplate.queryForList(query); for (java.util.Map<java.lang.String, java.lang.Object> team : projectsResult) { <BUGS> projects.add(java.lang.Integer.parseInt(team.get("id").toString())); <BUGE> } return projects; } 
@java.lang.Override public void run() { if (showErrorMessages) { java.io.StringWriter errors = new java.io.StringWriter(); e.printStackTrace(new java.io.PrintWriter(errors)); dialog.setErrorMessage(((errors.toString()) + "</p></html>")); dialog.setLocationRelativeTo(null); dialog.setModal(true); <BUGS> dialog.setVisible(true); <BUGE> } } 
private static final java.lang.String NpcIntegration() { <BUGS> return (((((((((((((((("" + (((("# The NPCs to open the GUI for Race Selection. \n" + "# NPC names have to be the real names of the NPCs.\n") + "# The Gui will open even if the GUI is disabled in Race Secion.\n") + "# String List: a list of NPC names.\n") + "# default: [] \n")) + (npc_select_race)) + ": []\n\n") + "# The NPCs to open the GUI for Race Change Selection. \n") + "# NPC names have to be the real names of the NPCs.\n") + "# The Gui will open even if the GUI is disabled in Race Secion.\n") + "# String List: a list of NPC names.\n") + "# default: [] \n") + (npc_change_race)) + ": []\n\n") + "# The NPCs to open the GUI for Class Selection. \n") + "# NPC names have to be the real names of the NPCs.\n") + "# The Gui will open even if the GUI is disabled in Class Secion.\n") + "# String List: a list of NPC names.\n") + "# default: [] \n") + (npc_select_class)) + ": []\n\n"; <BUGE> } 
<BUGS> private void printTmpDictionary() { <BUGE> for (java.util.Map.Entry<java.lang.String, java.lang.Integer> d : frequencyDictionary.entrySet()) { java.lang.System.out.println(((("Word " + (d.getKey())) + " has frequency ") + (d.getValue()))); } } 
private org.springframework.http.ResponseEntity<?> createTenantWorker(net.smartcosmos.usermanagement.tenant.dto.CreateTenantRequest createTenantRequest, net.smartcosmos.security.user.SmartCosmosUser user) { java.util.Optional<net.smartcosmos.usermanagement.tenant.dto.CreateTenantResponse> createTenantResponse = tenantDao.createTenant(createTenantRequest); if (createTenantResponse.isPresent()) { <BUGS> eventSendingService.sendEvent(user, net.smartcosmos.usermanagement.event.TenantEventType.TENANT_CREATED, createTenantResponse.get()); <BUGE> return buildCreatedResponseEntity(createTenantResponse.get()); }else { <BUGS> eventSendingService.sendEvent(user, net.smartcosmos.usermanagement.event.TenantEventType.TENANT_CREATE_FAILED_ALREADY_EXISTS, createTenantRequest); <BUGE> return org.springframework.http.ResponseEntity.status(HttpStatus.CONFLICT).build(); } } 
public void execute() { view.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR)); <BUGS> java.lang.Boolean dbSelected = ppPanel.getOptDatabaseSelected(); if (dbSelected) { <BUGE> executePostgis(); }else { executeDbf(); } view.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR)); } 
@java.lang.Override protected void onStart() { super.onStart(); <BUGS> if ((nmct.jaspernielsmichielhein.watchfriends.helper.AuthHelper.isUserLoggedIn(this)) && (!(nmct.jaspernielsmichielhein.watchfriends.helper.AuthHelper.isTokenExpired(this)))) { navigate(nmct.jaspernielsmichielhein.watchfriends.view.HomeFragment.newInstance(), "homeFragment"); }else { <BUGE> nmct.jaspernielsmichielhein.watchfriends.helper.AuthHelper.logUserOff(this); com.facebook.login.LoginManager.getInstance().logOut(); showLoginActivity(); } } 
private Player.Solution buildRandomSolution(Player.GameState gs, Player.AI opAI, Player.ScoreEvaluation eval) { Player.Solution solution = new Player.Solution(Player.MagicNumbers.SIMULATION_DEPTH); Player.GameState newGs = gs.copy(); for (int i = 0; i < (Player.MagicNumbers.SIMULATION_DEPTH); i++) { solution.actions[i] = getRandomAction(gs); Player.GameEngine.applyActionWithoutCopy(newGs, solution.actions[i], opAI.compute(gs)); <BUGS> solution.score += eval.getGameStateScore(gs, i); <BUGE> } return solution; } 
public void set(org.md2k.ema_scheduler.configuration.EMAType emaType, org.md2k.ema_scheduler.delivery.Callback callback) { org.md2k.utilities.Report.Log.d(org.md2k.ema_scheduler.notifier.NotifierManager.TAG, "set()..."); this.emaType = emaType; this.notifications = emaType.getNotifications(); this.callbackDelivery = callback; <BUGS> org.md2k.utilities.Report.Log.d(org.md2k.ema_scheduler.notifier.NotifierManager.TAG, "before runnableSubscribe.."); handlerSubscribe.post(runnableSubscribe); <BUGE> lastAckTime = 0; lastInsertTime = 0; notifyNo = 0; delayEnable = true; <BUGS> <BUGE> } 
<BUGS> public java.lang.Boolean updateBillingSystem(final java.lang.String serviceCode, final java.util.Set<org.egov.collection.integration.models.BillReceiptInfo> billReceipts) { <BUGE> final org.egov.collection.integration.services.BillingIntegrationService billingService = getBillingServiceBean(serviceCode); if (billingService == null) return false; else try { billingService.updateReceiptDetails(billReceipts); return true; } catch (final java.lang.Exception e) { final java.lang.String errMsg = ("Exception while updating billing system [" + serviceCode) + "] with receipt details!"; org.egov.collection.service.ReceiptHeaderService.LOGGER.error(errMsg, e); throw new org.egov.infra.exception.ApplicationRuntimeException(errMsg, e); }  } 
private void setBreadcrumLabel() { labelMap.put("gene", "Genes"); labelMap.put("mp", "Phenotypes"); labelMap.put("disease", "Diseases"); labelMap.put("anatomy", "Anatomy"); labelMap.put("impc_images", "IMPC Images"); <BUGS> labelMap.put("images", "Images"); <BUGE> } 
<BUGS> private source.Node<T> find(T value, source.Node<T> node) { <BUGE> if (node == null) { return null; } <BUGS> int comparison = value.compareTo(node.value); <BUGE> if (comparison == 0) { return node; }else if (comparison > 0) { <BUGS> return find(value, node.rightChild); <BUGE> }else { <BUGS> return find(value, node.leftChild); <BUGE> }  } 
@java.lang.Override public void onChanged() { super.onChanged(); int childCount = getChildCount(); <BUGS> for (int i = childCount; i < (com.daprlabs.cardstack.SwipeDeck.NUMBER_OF_CARDS); ++i) { addNextCard(); } for (int i = 0; i < (getChildCount()); ++i) { positionItem(i); <BUGE> } } 
public void addKeyListeners() { <BUGS> android.widget.Toast.makeText(context, (("Adding Key Listerners" + " ") + (dji.keysdk.KeyManager.getInstance())), Toast.LENGTH_SHORT).show(); <BUGE> if ((dji.keysdk.KeyManager.getInstance()) != null) { removeKeyListeners(); dji.keysdk.DJIKey keyC1 = dji.keysdk.RemoteControllerKey.create(RemoteControllerKey.CUSTOM_BUTTON_1); dji.keysdk.KeyManager.getInstance().addListener(keyC1, c1KeyListener); dji.keysdk.KeyManager.getInstance().addListener(dji.keysdk.RemoteControllerKey.create(RemoteControllerKey.CUSTOM_BUTTON_2), c2KeyListener); } } 
public boolean connectWith(final com.kcht.parking.charge.timeline.Period another) { <BUGS> boolean isLiterallyConnected = ((((this.endHour) == (another.startHour)) && ((this.endMinute) == (another.startMinute))) && ((this.startHour) == (another.endHour))) && ((this.startMinute) == (another.endMinute)); final boolean isTimeGapConnected = ((this.timeGap()) + (another.timeGap())) == 24; return isLiterallyConnected && isTimeGapConnected; <BUGE> } 
@java.lang.Override public void resolveCollision(asteroids.model.WorldObject other) { <BUGS> if (other instanceof asteroids.model.Ship) <BUGE> this.resolveCollision(((asteroids.model.Ship) (other))); <BUGS>  if (other instanceof asteroids.model.Bullet) this.resolveCollision(((asteroids.model.Bullet) (other))); else other.resolveCollision(this); <BUGE>  } 
public void setCreepFactor(boolean creepFactor) { <BUGS> if (((minAge) >= (baeAge)) && ((maxAge) <= (baeAge))) { <BUGE> creepFactor = true; <BUGS> }else { creepFactor = false; <BUGE> } this.creepFactor = creepFactor; } 
@java.lang.Override protected void keyDown(int eventKey, char ch, boolean shift, boolean ctrl, boolean alt, boolean special) throws java.lang.Exception { switch (ch) { case 'm' : org.lwjgl.input.Mouse.setGrabbed((!(org.lwjgl.input.Mouse.isGrabbed()))); break; <BUGS> <BUGE> } } 
@java.lang.Override public java.util.List<org.shunya.server.services.TaskRun> findTaskHistoryByTeam(long teamId) { org.hibernate.Criteria criteria = DBDao.getSessionFactory().getCurrentSession().createCriteria(org.shunya.server.services.TaskRun.class); criteria.setFetchSize(30); criteria.add(org.hibernate.criterion.Restrictions.eq("team.id", teamId)); criteria.addOrder(org.hibernate.criterion.Order.desc("id")); <BUGS> <BUGE> criteria.setMaxResults(30); criteria.setCacheable(true); <BUGS> criteria.setResultTransformer(Criteria.DISTINCT_ROOT_ENTITY); <BUGE> return criteria.list(); } 
@java.lang.Override public com.litrum.webproject.model.ServiceOffered findServiceOfferedByName(java.lang.String name) { org.hibernate.Criteria criteria = getSession().createCriteria(getPersistentClass()); <BUGS> criteria.add(org.hibernate.criterion.Restrictions.eq("nane", name)); <BUGE> return ((com.litrum.webproject.model.ServiceOffered) (criteria.uniqueResult())); } 
public java.lang.String[] removeEntry(java.lang.String[] arrayToRemoveFrom, int entryNumber) { java.lang.String[] result = new java.lang.String[(arrayToRemoveFrom.length) - 1]; int tmp = 0; for (int i = 0; i < (result.length); i++) { if (i == entryNumber) { tmp = 1; <BUGS> }else { result[i] = arrayToRemoveFrom[(i + tmp)]; <BUGE> } <BUGS> <BUGE> } return result; } 
public void updateState(java.lang.String key, java.lang.Object value) { if (((key.equals("LoginError")) == true) && (!(value.equals("")))) { <BUGS> displayErrorMessage(mMessages.getString(((java.lang.String) (value)))); <BUGE> } } 
@org.junit.Test public boolean isAnyNull() throws java.lang.Exception { assertNoNull(); assertNoNull("a", "b", "c"); assertNoNull(1, 2, 3, 4); assertNoNull(1); <BUGS> assertHaveNull(null); <BUGE> assertHaveNull("1", "2", null); assertHaveNull(null, null, null); } 
<BUGS> private void process(long startTS, backtype.storm.tuple.Tuple t) { <BUGE> (counter)++; java.util.List<backtype.storm.tuple.Values> result = f.process(t); if (result != null) for (backtype.storm.tuple.Values out : result) { emit(t, out); if (keepStats) { countStat.increase(1); } }  <BUGS> if (keepStats) { costStat.add(((java.lang.System.nanoTime()) - startTS)); } <BUGE> } 
@java.lang.Override public void onClick(android.view.View v) { android.content.Intent intent = new android.content.Intent(getApplication(), com.lgq.fruitgrower.view.act.PublicActivity.class); android.os.Bundle bundle = new android.os.Bundle(); bundle.putBoolean("farmer", false); intent.putExtras(bundle); startActivityForResult(intent, 1); <BUGS> overridePendingTransition(R.anim.in_from_down, R.anim.out_to_up); <BUGE> if ((rela_layout.getVisibility()) == (android.view.View.VISIBLE)) { rela_layout.setVisibility(View.GONE); } } 
private edu.ksu.operatingsystems.javaos.util.Pair<java.lang.Integer, java.lang.String> readFromRight(java.lang.String readFrom, int numberOfCharacters) { java.lang.Integer value = java.lang.Integer.parseInt(readFrom.substring(0, numberOfCharacters), 2); java.lang.String result = readFrom.substring(numberOfCharacters); <BUGS> return new edu.ksu.operatingsystems.javaos.util.Pair(value, result); <BUGE> } 
@java.lang.Override public boolean onTouch(android.view.View v, android.view.MotionEvent event) { switch (event.getAction()) { case android.view.MotionEvent.ACTION_DOWN : <BUGS> dragIcon = ((java.lang.String) (v.getTag())); dragBool = true; <BUGE> break; case android.view.MotionEvent.ACTION_UP : android.widget.ImageView imageView = ((android.widget.ImageView) (v)); addAccessory(((java.lang.String) (imageView.getTag()))); dragBool = false; break; } return true; } 
<BUGS> private android.widget.Button getAttendeeNameButton() { <BUGE> android.widget.Button attendeeNameButton = null; if ((getContext()) != null) { attendeeNameButton = ((android.widget.Button) (((android.app.Activity) (getContext())).findViewById(R.id.attendeeNameButton))); } return attendeeNameButton; } 
@java.lang.Override public void startElement(java.lang.String uri, java.lang.String localName, java.lang.String qName, org.xml.sax.Attributes attributes) throws org.xml.sax.SAXException { switch (qName) { case "roboUnit" : currentId = attributes.getValue("id"); break; case com.robo4j.core.configuration.XmlConfigurationFactory.ELEMENT_CONFIG : <BUGS> currentConfiguration = ""; configState = true; break; <BUGE> } lastElement = qName; if (configState) { currentConfiguration += java.lang.String.format("<%s %s>", qName, toString(attributes)); } } 
@java.lang.Override public void taskCompleted(uk.ac.ncl.csc2022.t14.bankingapp.server.live.json.JSONTaskStatus status, java.lang.String message, org.json.JSONObject json) { removeLoadingSpinner(); <BUGS> if (status == (uk.ac.ncl.csc2022.t14.bankingapp.server.live.json.JSONTaskStatus.LOGGED_OUT)) { forceLogout(message); return ; } <BUGE> if ((status == (uk.ac.ncl.csc2022.t14.bankingapp.server.live.json.JSONTaskStatus.PASSED)) && (responseParser.parseLogin(json))) { delegate.loginPassed(uk.ac.ncl.csc2022.t14.bankingapp.Utilities.DataStore.sharedInstance().getCurrentUser()); }else { message = responseParser.parseErrorOrDefault(message); delegate.loginFailed(message); } } 
public static org.eclipse.core.resources.IFile getFile(org.eclipse.jdt.core.IJavaElement element) { org.eclipse.core.resources.IResource res = null; try { while ((res = element.getCorrespondingResource()) == null) element = element.getParent();  <BUGS> return ((org.eclipse.core.resources.IFile) (res)); <BUGE> } catch (org.eclipse.jdt.core.JavaModelException e) { org.eclipse.etools.Activator.logError("Failed finding corresponding resource", e); <BUGS> return null; <BUGE> } <BUGS> <BUGE> } 
@java.lang.Override public void displayPanelResized(edu.njit.cs.saboc.blu.core.gui.gep.AbNDisplayPanel displayPanel) { <BUGS> this.setBounds(10, (((displayPanel.getBounds().height) - (panelSize.height)) - 20), panelSize.width, panelSize.height); <BUGE> this.validate(); } 
@org.junit.Test public void getSubTasksTest() { java.util.ArrayList<net.sf.memoranda.Task> param; param = new java.util.ArrayList<net.sf.memoranda.Task>(); <BUGS> param.add(new net.sf.memoranda.TaskImpl(task)); param.add(new net.sf.memoranda.TaskImpl(task)); <BUGE> task.setSubTasks(param); <BUGS> assertEquals(task.getSubTasks(), param); <BUGE> } 
private synchronized void tickNarjillos(org.nusco.narjillos.genomics.GenePool genePool, org.nusco.narjillos.shared.utilities.RanGen ranGen) { <BUGS> java.util.Map<org.nusco.narjillos.creature.Narjillo, java.util.Set<org.nusco.narjillos.shared.things.Thing>> narjillosToCollidedFood = calculateCollisions(narjillos); <BUGE> for (java.util.Map.Entry<org.nusco.narjillos.creature.Narjillo, java.util.Set<org.nusco.narjillos.shared.things.Thing>> entry : narjillosToCollidedFood.entrySet()) { org.nusco.narjillos.creature.Narjillo narjillo = entry.getKey(); java.util.Set<org.nusco.narjillos.shared.things.Thing> collidedFood = entry.getValue(); consume(narjillo, collidedFood, genePool, ranGen); } } 
public void pause() { if (mediaPlayer.isPlaying()) { mediaPlayer.pause(); audioManager.abandonAudioFocus(audioFocusListener); timer = new java.util.Timer(); final java.util.TimerTask stopPlayerTask = new java.util.TimerTask() { @java.lang.Override public void run() { reset(); this.cancel(); } }; timer.schedule(stopPlayerTask, edu.grinnell.kdic.RadioService.STOP_STREAM_DELAY); <BUGS> stopForegroundNotification(); <BUGE> } if (wifiLock.isHeld()) wifiLock.release();  } 
@java.lang.Override public void delete(com.flxn.dao.model.Atribute object, int userid) { <BUGS> if ((exist(object)) && (existOwner(object.getId(), userid))) { <BUGE> jdbcTemplate.update(com.flxn.dao.impl.DELETE_ATRIBUTE_BY_ID, new java.lang.Object[]{ object.getId() }); }else { throw new java.lang.UnsupportedOperationException(); } } 
@java.lang.Override public void onClick(com.google.gwt.event.dom.client.ClickEvent event) { java.lang.String fileName = this.fileUpload.getFilename(); if ((fileName == null) || (fileName.isEmpty())) { <BUGS> setStatusIcon(CommonImages.INSTANCE.error(), true); <BUGE> errorPanel.setErrorMessage("No file Selected", "Please select a file and then press GO"); return ; } if (this.projection.getValue()) { form.setAction(org.reactome.web.pwp.client.tools.analysis.submitters.FileSubmitter.FORM_ANALYSIS_PROJECTION); }else { form.setAction(org.reactome.web.pwp.client.tools.analysis.submitters.FileSubmitter.FORM_ANALYSIS); } this.form.submit(); } 
@java.lang.Override public value.Value mul(value.Value other) { if ((!(isSet())) || (!(other.isSet()))) { <BUGS> return new value.IntegerValue(0); <BUGE> } return new value.IntegerValue(((value) * (((value.IntegerValue) (other)).getValue()))); } 
@java.lang.Override public void mapInitialized() { com.lynden.gmapsfx.javascript.object.MapOptions mapOptions = new com.lynden.gmapsfx.javascript.object.MapOptions(); <BUGS> mapOptions.center(new com.lynden.gmapsfx.javascript.object.LatLong(47.6097, (-122.3331))).overviewMapControl(false).panControl(false).rotateControl(false).scaleControl(false).streetViewControl(false).zoomControl(false).zoom(16); <BUGE> map = mapView.createMap(mapOptions); trackLine = new com.lynden.gmapsfx.shapes.Polyline(); map.addMapShape(trackLine); } 
@org.junit.Test public void testFindByWorkHoursExpectMultipleResuts() throws com.tsystems.javaschool.logiweb.dao.exceptions.DaoException, com.tsystems.javaschool.logiweb.service.exceptions.LogiwebServiceException { setupMocks(); java.util.List<com.tsystems.javaschool.logiweb.entities.Driver> freeDrivers = setupDriverAndJournalsTestData(); <BUGS> com.tsystems.javaschool.logiweb.service.DriverService driverService = new com.tsystems.javaschool.logiweb.service.impl.DriverServiceImpl(driverDaoMock, truckDaoMock, shiftDaoMock, userServiceMock, null); <BUGE> java.util.Set<com.tsystems.javaschool.logiweb.entities.Driver> result = driverService.findUnassignedToTrucksDriversByMaxWorkingHoursAndCity(null, 13); org.hamcrest.MatcherAssert.assertThat(result, org.hamcrest.Matchers.hasItems(freeDrivers.get(1), freeDrivers.get(2), freeDrivers.get(3))); } 
public static android.graphics.Bitmap resizeImage(android.graphics.Bitmap unscaledBitmap, int desiredWidth, int desiredHeight) throws java.io.IOException { try { if (!(((unscaledBitmap.getWidth()) <= desiredWidth) && ((unscaledBitmap.getHeight()) <= desiredHeight))) { android.graphics.Bitmap scaledBitmap = com.scanlibrary.ScalingUtilities.createScaledBitmap(unscaledBitmap, desiredWidth, desiredHeight, ScalingLogic.FIT); <BUGS> unscaledBitmap.recycle(); <BUGE> return scaledBitmap; }else { return unscaledBitmap; } } catch (java.lang.Throwable e) { throw new java.io.IOException(e); } } 
public static com.orca.projectx.Account getAccount(com.firebase.client.Firebase ref) { com.firebase.client.Firebase mRef = ref.child("account"); <BUGS> <BUGE> mRef.addValueEventListener(new com.firebase.client.ValueEventListener() { @java.lang.Override public void onDataChange(com.firebase.client.DataSnapshot dataSnapshot) { com.orca.projectx.Account account = dataSnapshot.getValue(com.orca.projectx.Account.class); com.orca.projectx.Data.setAccount(account); }  @java.lang.Override public void onCancelled(com.firebase.client.FirebaseError firebaseError) { } }); return com.orca.projectx.Data.mAccount; } 
public int find(int x, int[] data, int start, int end) { if (end > start) <BUGS> for (int i = start; i < end; i++) <BUGE> if ((data[i]) == x) return i;    return -1; } 
public static org.eclipse.ecf.mgmt.identity.NamespaceMTO createNamespaceMTO(org.eclipse.ecf.core.identity.Namespace ns) { <BUGS> return new org.eclipse.ecf.mgmt.identity.NamespaceMTO(ns.getName(), ns.getDescription(), ns.getScheme(), ns.getSupportedSchemes(), org.eclipse.ecf.mgmt.identity.host.IdentityFactoryManager.convertClassArrayToNameArray(ns.getSupportedParameterTypes())); <BUGE> } 
public static java.lang.String mimeFor(@lombok.NonNull java.lang.String name) { if (name.isEmpty()) { return ""; } lombok.val ext = pw.phylame.ycl.io.PathUtils.extensionName(name); if (ext.isEmpty()) { return pw.phylame.ycl.io.PathUtils.UNKNOWN_MIME; } <BUGS> return pw.phylame.ycl.io.PathUtils.mimeMap.get().getProperty(name, pw.phylame.ycl.io.PathUtils.UNKNOWN_MIME); <BUGE> } 
@java.lang.Override public void onCreate() { super.onCreate(); com.arsalan.garage.GarageApp.sGarageApp = this; if (((com.arsalan.garage.utils.FlavorConstants.BUILD_TYPE) == (com.arsalan.garage.utils.AppConstants.BUILD_TYPE_DEVELOPMENT)) && ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.GINGERBREAD))) { android.os.StrictMode.setThreadPolicy(new android.os.StrictMode.ThreadPolicy.Builder().detectAll().penaltyLog().build()); <BUGS> android.os.StrictMode.setVmPolicy(new android.os.StrictMode.VmPolicy.Builder().detectAll().penaltyDeath().build()); <BUGE> } initImageLoader(this); initLoaderHandler(this); } 
public void print(int copies) { java.lang.String onStatus = ""; if (isOn) onStatus = " is on!"; else onStatus = " is off!";  java.lang.String textToPrint = (modelNumber) + onStatus; while ((copies > 0) && (!(paperTray.isEmpty()))) { java.lang.System.out.println(textToPrint); copies--; <BUGS> paperTray.usePage(); <BUGE> } if (paperTray.isEmpty()) java.lang.System.out.println("Load more paper");  } 
@java.lang.Override public team379.pathfinding.PathFindResult move(battlecode.common.RobotController rc) throws java.lang.Exception { <BUGS> if ((compassDirection) == null) { <BUGE> calculateNextTarget(true); }else { int distanceSquared = getTarget().distanceSquaredTo(rc.getLocation()); double distance = java.lang.Math.sqrt(distanceSquared); if (distance < (team379.pathfinding.Orbiter.DISTANCE_THRESHOLD)) { calculateNextTarget(true); } } return super.move(rc); } 
@org.junit.Test public void testGetTransactionWithNullArgument() throws java.lang.Exception { se.fermitet.invest.domain.Transaction answer = presenter.getTransactionBasedOnIdString(null); assertNotNull(answer); assertNull(answer.getStock()); assertEquals(org.joda.time.LocalDate.now(), answer.getDate()); assertNull(answer.getFee()); assertNull(answer.getPrice()); <BUGS> assertEquals(0, answer.getNumber()); <BUGE> assertNotNull(answer.getId()); } 
public void onClick(android.content.DialogInterface dialog, int which) { <BUGS> <BUGE> apier.com.lifttrak.DBHandler dbHandler = new apier.com.lifttrak.DBHandler(getApplicationContext(), null, null, 1); dbHandler.addCompleteWorkout(workoutSelected, exercises); android.content.Intent finishWorkout = new android.content.Intent(getApplicationContext(), apier.com.lifttrak.FinishWorkout.class); startActivity(finishWorkout); finish(); <BUGS> android.app.NotificationManager nm = ((android.app.NotificationManager) (getSystemService(getApplicationContext().NOTIFICATION_SERVICE))); nm.cancel(apier.com.lifttrak.RunWorkout.uniqueID); <BUGE> } 
@java.lang.Override public void onConnected(@android.support.annotation.Nullable android.os.Bundle bundle) { mLocationRequest = new com.google.android.gms.location.LocationRequest(); mLocationRequest.setInterval(1000); mLocationRequest.setFastestInterval(1000); <BUGS> android.widget.Toast.makeText(this, "here1", Toast.LENGTH_LONG).show(); <BUGE> mLocationRequest.setPriority(LocationRequest.PRIORITY_HIGH_ACCURACY); if ((android.support.v4.content.ContextCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION)) == (android.content.pm.PackageManager.PERMISSION_GRANTED)) { LocationServices.FusedLocationApi.requestLocationUpdates(mGoogleApiClient, mLocationRequest, this); } } 
private void startServices() { customPreferencesService = context.registerService(org.eclipse.core.internal.preferences.exchange.IProductPreferencesService.class, new org.eclipse.core.internal.preferences.legacy.ProductPreferencesService(), new java.util.Hashtable<java.lang.String, java.lang.String>()); <BUGS> if ((getBundle(CompatibilityHelper.PI_RUNTIME_COMPATIBILITY)) != null) legacyPreferencesService = context.registerService(org.eclipse.core.internal.preferences.exchange.ILegacyPreferences.class, new org.eclipse.core.internal.preferences.legacy.InitLegacyPreferences(), new java.util.Hashtable<java.lang.String, java.lang.String>());  <BUGE> } 
@org.bukkit.event.EventHandler public void onSign(org.bukkit.event.block.SignChangeEvent e) { if (e.getLine(0).equalsIgnoreCase("[atm]")) { <BUGS> e.setLine(0, ((org.bukkit.ChatColor.WHITE) + "== ATM ==")); e.setLine(1, ((((org.bukkit.ChatColor.GREEN) + "> ") + (org.bukkit.ChatColor.WHITE)) + "Withdraw")); <BUGE> e.setLine(2, ((org.bukkit.ChatColor.BLACK) + "Deposit")); e.setLine(3, ((org.bukkit.ChatColor.DARK_GRAY) + "Click for Balance")); } } 
@java.lang.Override public fi.helsinki.cs.tmc.core.domain.Exercise call() throws java.lang.Exception { try { java.util.concurrent.Callable<java.lang.String> download = new fi.helsinki.cs.tmc.core.communication.http.HttpTasks().getForText(java.net.URI.create("localhost:3200/next.json")); java.lang.String json = download.call(); <BUGS> fi.helsinki.cs.tmc.core.domain.Exercise ex = adaptiveExerciseParser.parseFromJson(json); java.util.concurrent.Callable<byte[]> b = getDownloadingExerciseZipTask(ex); return ex; <BUGE> } catch (java.lang.Exception ex) { return null; } } 
@org.junit.Test public void should_provide_cell_with_matching_colours() throws java.lang.Exception { final org.binu.board.Block redYellowBlock = dataParser.createColourBlock(5, 4); <BUGS> assertBlockData(redYellowBlock, CellColour.RED, CellColour.YELLOW); <BUGE> final org.binu.board.Block greenPurpleBlock = dataParser.createColourBlock(3, 2); <BUGS> assertBlockData(greenPurpleBlock, CellColour.GREEN, CellColour.PURPLE); <BUGE> final org.binu.board.Block blueGreenBlock = dataParser.createColourBlock(2, 1); <BUGS> assertBlockData(blueGreenBlock, CellColour.BLUE, CellColour.GREEN); <BUGE> } 
@org.junit.Test public void testTop() { edu.kis.vh.stacks.StackFIFO stackObj = new edu.kis.vh.stacks.StackFIFO(); <BUGS> final int EMPTY_STACK_VALUE = -1; <BUGE> int result = stackObj.top(); org.junit.Assert.assertEquals(EMPTY_STACK_VALUE, result); int testValue = 4; stackObj.push(testValue); int testValue1 = 5; stackObj.push(testValue1); result = stackObj.top(); org.junit.Assert.assertEquals(testValue, result); result = stackObj.top(); org.junit.Assert.assertEquals(testValue, result); } 
public void menuItemFileSaveToDataBase_onAction() { <BUGS> application.util.DataBaseConnection dataBaseConncetion = new application.util.DataBaseConnection("eu-cdbr-azure-west-d.cloudapp.net", "bazadanychorganizer", "b49f86d8da8665", "3c8f720c"); dataBaseConncetion.SaveCallendarEntries(mainApp.getCallendarEntriesObservableList()); <BUGE> javafx.scene.control.Alert alert = new javafx.scene.control.Alert(javafx.scene.control.Alert.AlertType.INFORMATION); alert.setTitle("Database"); <BUGS> alert.setHeaderText("Data successfully saved to database"); <BUGE> alert.showAndWait(); } 
@java.lang.Override public void modifyText(org.eclipse.swt.events.ModifyEvent e) { if ((descriptionText.getText().length()) == 0) { <BUGS> commentStatus = org.talend.metadata.managment.ui.wizard.PropertiesWizardPage.createStatus(IStatus.WARNING, org.talend.metadata.managment.ui.i18n.Messages.getString("PropertiesWizardPage.EmptyDescWarning")); <BUGE> }else { <BUGS> commentStatus = org.talend.metadata.managment.ui.wizard.PropertiesWizardPage.createOkStatus(); <BUGE> } property.setDescription(org.apache.commons.lang.StringUtils.trimToNull(descriptionText.getText())); property.setModificationDate(new java.util.Date()); updatePageStatus(); } 
public byte[] toByteArray() throws java.io.IOException { java.io.ByteArrayOutputStream bos = new java.io.ByteArrayOutputStream(); java.io.ObjectOutputStream oos = new java.io.ObjectOutputStream(bos); oos.writeObject(this); oos.flush(); oos.close(); <BUGS> bos.close(); <BUGE> return bos.toByteArray(); } 
private java.util.List<java.lang.String> listReferenceProfiles(org.hl7.fhir.dstu3.model.ElementDefinition ed) { java.util.List<java.lang.String> res = new java.util.ArrayList<java.lang.String>(); for (org.hl7.fhir.dstu3.model.ElementDefinition.TypeRefComponent tr : ed.getType()) { <BUGS> if (tr.getCode().equals("Reference")) <BUGE> res.add(tr.getProfile());  } return res; } 
@javax.ws.rs.POST @javax.ws.rs.Path(value = "/save") @javax.ws.rs.Produces(value = "application/json") public javax.ws.rs.core.Response saveReport(@javax.ws.rs.FormParam(value = "report") java.lang.String report, @javax.ws.rs.FormParam(value = "groupid") int groupid) { <BUGS> java.lang.String report_name = com.caxpy.bi.utility.BiUtility.saveReport(report); <BUGE> java.util.Map<java.lang.String, java.lang.String> resData = new java.util.HashMap<java.lang.String, java.lang.String>(); resData.put("status", "success"); resData.put("report", report_name); return javax.ws.rs.core.Response.status(200).entity(resData).build(); } 
public void writeTo(final java.io.OutputStream outStream) throws java.io.IOException { if (((progressHandler) != null) || ((cancellationHandler) != null)) { writeWithNotify(outStream); }else { <BUGS> outStream.write(this.b, this.off, this.len); <BUGE> } outStream.flush(); } 
@org.springframework.web.bind.annotation.RequestMapping(value = "/datatype/{id}/html", method = org.springframework.web.bind.annotation.RequestMethod.GET, produces = "text/html") public java.lang.String getDatatypeAsHtml(@org.springframework.web.bind.annotation.PathVariable(value = "id") <BUGS> java.lang.String id, @org.springframework.web.bind.annotation.PathVariable(value = "format") java.lang.String format) throws gov.nist.healthcare.tools.hl7.v2.igamt.lite.web.exception.DataNotFoundException { <BUGE> gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype datatype = datatypeService.findById(id); if ((datatype != null) && (datatype.getScope().equals(SCOPE.HL7STANDARD))) { return exportService.exportDataModelAsHtml(datatype); } return null; } 
@org.junit.Test public void whenImporterDoesNotSupportIsImportable_thenCorrespondingFitnessFeatureShouldBeTrue() { org.corpus_tools.pepper.modules.PepperImporter importer = org.mockito.Mockito.mock(org.corpus_tools.pepper.modules.PepperImporter.class); org.mockito.Mockito.when(importer.isImportable(org.mockito.Matchers.any(org.eclipse.emf.common.util.URI.class))).thenReturn(null); <BUGS> org.assertj.core.api.Assertions.assertThat(new org.corpus_tools.pepper.core.ModuleFitnessChecker(null).checkFitness(importer).getFitness(FitnessFeature.IS_IMPORTABLE)).isEqualTo(false); <BUGE> } 
private static int getNumberOfWeeksOfYear(int year) { <BUGS> com.timodenk.gswnstupla.StuplaControl.calendar.set(java.util.Calendar.YEAR, year); com.timodenk.gswnstupla.StuplaControl.calendar.set(java.util.Calendar.MONTH, java.util.Calendar.DECEMBER); com.timodenk.gswnstupla.StuplaControl.calendar.set(java.util.Calendar.DAY_OF_MONTH, 31); int ordinalDay = com.timodenk.gswnstupla.StuplaControl.calendar.get(java.util.Calendar.DAY_OF_YEAR); int weekDay = (com.timodenk.gswnstupla.StuplaControl.calendar.get(java.util.Calendar.DAY_OF_WEEK)) - 1; <BUGE> return ((ordinalDay - weekDay) + 10) / 7; } 
public void actionPerformed(java.awt.event.ActionEvent aEvt) { java.lang.String tag = org.broad.igv.ui.util.MessageUtils.showInputDialog("Enter tag", renderOptions.getGroupByTag()); if ((tag != null) && ((tag.trim().length()) > 0)) { renderOptions.setGroupByTag(tag); <BUGS> org.broad.igv.ui.IGV.getInstance().groupAlignmentTracks(org.broad.igv.sam.AlignmentTrack.GroupOption.TAG, tag); <BUGE> org.broad.igv.sam.AlignmentTrack.refresh(); } } 
@java.lang.Override public void onItemSelected(android.widget.AdapterView<?> parent, android.view.View view, int pos, long id) { android.util.Log.d(ru.chernysh.plasmatorchsetup.MainActivity.LOG_TAG, ("Selection in model spinner with pos = " + pos)); ru.chernysh.plasmatorchsetup.CustomAdapter adapter = ((ru.chernysh.plasmatorchsetup.CustomAdapter) (parent.getAdapter())); if (adapter != null) { <BUGS> adapter.setSelected(); <BUGE> int selectedKey = adapter.getKey(pos); } } 
@com.facebook.react.bridge.ReactMethod <BUGS> public void hangup() { <BUGE> java.util.Map<java.lang.String, java.lang.String> userInfo = new java.util.HashMap<>(); userInfo.put("key", "value"); com.sts.RNQuickblox.QuickbloxHandler.getInstance().getSession().hangUp(userInfo); com.sts.RNQuickblox.QuickbloxHandler.getInstance().setSession(null); com.sts.RNQuickblox.QuickbloxHandler.getInstance().release(); } 
private void parseCoordinateMetadata(com.fasterxml.jackson.core.JsonParser jp) throws java.io.IOException { jp.nextToken(); jp.nextToken(); jp.nextToken(); <BUGS> if ((jp.getCurrentToken()) == (com.fasterxml.jackson.core.JsonToken.END_ARRAY)) { }else { <BUGE> jp.nextToken(); } jp.nextToken(); } 
private int getInternalIndexOfObjectAt(int index) throws java.lang.IndexOutOfBoundsException { int nbObjectsSoFar = 0; int pos = 0; <BUGS> while (nbObjectsSoFar <= index) { <BUGE> jumpingalien.model.Characters currentObject = objects.get(pos); if ((currentObject != null) && ((objects.indexOf(currentObject)) == pos)) nbObjectsSoFar++;  pos++; } return pos - 1; } 
@org.junit.Test public void testUnmarshal() { java.lang.String text = ("<converterTest>\n  " + (xmlLine)) + "\n</converterTest>"; org.zetool.components.property.converter.AbstractConverterTest.DataHolder dh = ((org.zetool.components.property.converter.AbstractConverterTest.DataHolder) (xstream.fromXML(text))); org.junit.Assert.assertThat(dh.property, org.hamcrest.CoreMatchers.is(org.zetool.components.property.converter.AbstractConverterTest.equalTo(property))); <BUGS> <BUGE> } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_drawer); butterknife.ButterKnife.bind(this); <BUGS> loadHomeRecipes(); <BUGE> setSupportActionBar(mToolbar); setRecyclerView(); setDrawerToggle(); setTvLogoutRipple(); hasStoragePermission(); initLetsCookReceiver(); initProgressDialog(); mToolbar.setNavigationIcon(android.R.drawable.star_big_on); mDrawerFragments = getDrawerFragments(); mFragmentTags = getResources().getStringArray(R.array.nav_drawer_fragment_tags); } 
@java.lang.Override public java.lang.Object getNewValue() { if (null != (dataSource)) { return dataSource; } try { <BUGS> long id = ((java.lang.Long) (super.getOldValue())); <BUGE> dataSource = org.sleuthkit.autopsy.casemodule.Case.getCurrentCase().getSleuthkitCase().getContentById(id); return dataSource; } catch (java.lang.IllegalStateException | org.sleuthkit.datamodel.TskCoreException ex) { org.sleuthkit.autopsy.casemodule.events.DataSourceAddedEvent.logger.log(java.util.logging.Level.SEVERE, "Error doing lazy load for remote event", ex); return null; } } 
public void initialise() { <BUGS> com.example.jackherrer.hang_on.gameplay gameplayclass = new com.example.jackherrer.hang_on.gameplay(); <BUGE> android.content.SharedPreferences settings = getSharedPreferences("prefs_settings", 0); gameplayclass.lives = settings.getInt("lives", 7); android.widget.TextView lives_view = ((android.widget.TextView) (findViewById(R.id.in_game_lives))); lives_view.setText(("Lives: " + (gameplayclass.lives))); gameplayclass.initiate_blank_spaces(this); } 
@java.lang.Override public void onChange(boolean selfChange, android.net.Uri uri) { if (uri.equals(Settings.System.getUriFor(Settings.System.STATUS_BAR_EXPANDED_HEADER_TEXT_COLOR))) { updateTextColor(); }else if (uri.equals(Settings.System.getUriFor(Settings.System.STATUS_BAR_EXPANDED_HEADER_ICON_COLOR))) { updateIconColor(); }  <BUGS> update(); <BUGE> } 
public void setEndTime(java.time.LocalTime end_time2) { if (end_time2 == null) { java.time.LocalTime localtime = java.time.LocalTime.MAX; end_time_string = ""; }else { end_time_string = end_time2.format(seedu.ticktask.model.task.DueTime.TIME_FORMAT).toString(); <BUGS> value = ((getStartTime()) + " - ") + (getEndTime()); <BUGE> end_time = end_time2; <BUGS> <BUGE> } } 
public static boolean checkWinX(char dot) { <BUGS> for (int i = -1; i <= 1; i++) { for (int j = -1; j <= 1; j++) { <BUGE> if ((j == 0) && (i == 0)) continue;  if (TicTacToe.checkLine(TicTacToe.lastX, TicTacToe.lastY, i, j, TicTacToe.ROW_FOR_WIN, dot)) return true;  } } return false; } 
@org.junit.Test public void testCollisionUp() throws java.lang.Exception { <BUGS> org.mockito.Mockito.when(input.isMoveUp()).thenReturn(true); org.mockito.Mockito.when(levelController.causesCollision(org.mockito.Mockito.any(java.lang.Double.class), org.mockito.Mockito.any(java.lang.Double.class), org.mockito.Mockito.any(java.lang.Double.class), org.mockito.Mockito.any(java.lang.Double.class))).thenReturn(true); <BUGE> player.processInput(); player.move(); assertEquals(Level.SPRITE_SIZE, player.getY()); } 
public void setIconInTabLayout() { tabLayout.getTabAt(0).setIcon(R.mipmap.selected_home); <BUGS> tabLayout.getTabAt(1).setIcon(R.mipmap.share); tabLayout.getTabAt(2).setIcon(R.mipmap.profile); tabLayout.getTabAt(3).setIcon(R.mipmap.setting); <BUGE> } 
<BUGS> protected static void addMethodUse(java.util.Set<com.github.juanmf.java2plant.structure.Relation> relations, java.lang.Class<?> fromType, java.lang.Class<?> toType, java.lang.reflect.Type fromParameterType, java.lang.reflect.Method m) { <BUGE> java.lang.String name = (com.github.juanmf.java2plant.util.TypesHelper.getSimpleName(m.getName())) + "()"; <BUGS> com.github.juanmf.java2plant.Parser.addUse(relations, fromType, toType, fromParameterType, m, name); <BUGE> } 
public static int code(java.lang.String format) { try { int index = ygoprocardmaker.enumerate.CardFormat.FORMATS.indexOf(format); if (index == (-1)) { throw new java.lang.IllegalArgumentException(); } <BUGS> return index; <BUGE> } catch (java.lang.Exception e) { throw new java.lang.IllegalArgumentException(); } } 
@play.db.jpa.Transactional public static controllers.Result index() { models.Admin admin = controllers.SGDB.getAdmin(session().get("login")); if (admin != null) { <BUGS> ok(index.render(admin)); <BUGE> } return controllers.Application.home(); } 
public static logic.Facilities getFacility(java.lang.String facilityName) { logic.Facilities[] name = logic.Facilities.values(); for (logic.Facilities facility : name) { <BUGS> if (facility.getValue().trim().equals(facilityName)) { <BUGE> return facility; } } return logic.Facilities.SELECT; } 
void changeMaxRange() { try { <BUGS> if ((java.lang.Float.valueOf(wRangeMaxValue.getText())) < (minRange)) <BUGE> alertBackground(wRangeMaxValue, true); else { alertBackground(wRangeMaxValue, false); <BUGS> maxRange = java.lang.Float.valueOf(wRangeMaxValue.getText()); <BUGE> trainPerceptron(); } } catch (java.lang.NumberFormatException e) { alertBackground(wRangeMaxValue, true); maxRange = 0.5F; } } 
private void doVibrate(int minutes, final int _vibrationStrength) { <BUGS> java.lang.Runnable vibrationRunnable = new java.lang.Runnable() { @java.lang.Override public void run() { setVibrationStart(_vibrationStrength, 1000); } }; alarmHandler.postDelayed(vibrationRunnable, java.util.concurrent.TimeUnit.MINUTES.toMillis(minutes)); <BUGE> } 
public void onSectionAttached(int number) { switch (number) { case 1 : <BUGS> <BUGE> mTitle = getString(R.string.title_activity_google); break; <BUGS> case 2 : <BUGE> android.content.Intent home = new android.content.Intent(this, com.example.navigationdrawer.Rapports.class); startActivity(home); break; <BUGS> case 3 : android.content.Intent profile = new android.content.Intent(this, com.example.navigationdrawer.Accueil.class); startActivity(profile); break; <BUGE> } } 
protected void setMetaData() { <BUGS> new us.nineworlds.serenity.core.services.WatchedVideoAsyncTask().execute(videoId); <BUGE> boolean showOSD = preferences.getBoolean("internal_player_osd", true); if (showOSD) { mediaController.show(SerenitySurfaceViewVideoActivity.CONTROLLER_DELAY); } if ((progressReportingHandler) != null) { progressReportingHandler.postDelayed(progressRunnable, 5000); } } 
<BUGS> public void getMemberIDFromUser() { <BUGE> java.lang.System.out.print("PLEASE TYPE THE MEMBER ID\n>"); input = scan.next(); while (!(checkMemberID(input))) { displayError("INVALID ID"); input = scan.next(); } memberID = java.lang.Integer.parseInt(input); } 
@java.lang.Override public void onClick(android.view.View v) { java.lang.String nickName; <BUGS> <BUGE> if (!((nickName = Nick.getText().toString()).equals(""))) { <BUGS> Nick.setHint("This field is mandatory"); <BUGE> android.content.Intent GoToChat = new android.content.Intent(this, com.example.omri.ochat.ChatActivity.class); GoToChat.putExtra("nickname", nickName); startActivity(GoToChat); }else { android.util.Log.v("Debug", "Nickname missing"); Nick.setHint("This field is mandatory"); Nick.setHintTextColor(Color.RED); } } 
@java.lang.Override public void onDelete() { if (com.google.gwt.user.client.Window.confirm((("Are you sure you want to delete " + (candidate.getName())) + " ?"))) { <BUGS> dispatch.execute(adminService.removeCandidate(candidate.getName()), new com.arcbees.bourseje.client.AdminRestCallback<java.lang.Void>() { <BUGE> @java.lang.Override public void onSuccess(java.lang.Void result) { removeFromParentSlot(); } }); } } 
protected static java.lang.String getRoomName(java.util.ArrayList<main.java.com.marist.mscs721.Room> rooms) { boolean inputCheck = false; java.lang.String test = ""; while (!inputCheck) { java.lang.System.out.println("Room Name?"); test = main.java.com.marist.mscs721.RoomScheduler.keyboard.next(); <BUGS> <BUGE> if ((main.java.com.marist.mscs721.RoomScheduler.findRoomIndex(rooms, test)) == (-1)) { java.lang.System.out.println("ERROR: Invalid room. Please input a room that is on the room list."); }else { <BUGS> inputCheck = false; <BUGE> } } return test; } 
<BUGS> private java.lang.String getJobCoordinationZkPath(org.apache.samza.config.Config config) { <BUGE> org.apache.samza.config.JobConfig jobConfig = new org.apache.samza.config.JobConfig(config); java.lang.String appId = new org.apache.samza.config.ApplicationConfig(config).getGlobalAppId(); java.lang.String jobName = (jobConfig.getName().isDefined()) ? jobConfig.getName().get() : org.apache.samza.zk.ZkJobCoordinatorFactory.DEFAULT_JOB_NAME; java.lang.String jobId = (jobConfig.getJobId().isDefined()) ? jobConfig.getJobId().get() : org.apache.samza.zk.ZkJobCoordinatorFactory.DEFAULT_JOB_ID; return java.lang.String.format(org.apache.samza.zk.ZkJobCoordinatorFactory.JOB_COORDINATOR_ZK_PATH_FORMAT, appId, jobName, jobId); } 
public java.util.List<taxiservice.payments.models.PaymentsHistory> getPaymentsForClients(long clientId) throws taxiservice.payments.exceptions.NonExistingClientException { <BUGS> <BUGE> taxiservice.payments.models.Wallet clientWallet = getClientWallet(clientId); <BUGS> openSession(); java.lang.String hql = "FROM PaymentsHistory WHERE wallet =" + (clientWallet.getWalletid()); <BUGE> org.hibernate.Query query = session.createQuery(hql); java.util.List<taxiservice.payments.models.PaymentsHistory> result = query.list(); closeSession(); return result; } 
private void extract(com.griaule.grfingerjava.FingerprintImage fingerprintImage) { try { template = matchingContext.extract(fingerprintImage); if ((fingerprintingComponent) != null) { <BUGS> <BUGE> fingerprintingComponent.showQuality(template.getQuality()); <BUGS> fingerprintingComponent.showImage(fingerprintImage); <BUGE> } } catch (com.griaule.grfingerjava.GrFingerJavaException e) { showMessage(e.getMessage()); } } 
@java.lang.Override public void onCreate() { super.onCreate(); org.acra.ACRA.init(this); ir.mbaas.pushnotification.CustomGcmListener customGcmListener = new ir.mbaas.pushnotification.CustomGcmListener(); ir.mbaas.pushnotification.CustomMBaaSListener customMBaaSListener = new ir.mbaas.pushnotification.CustomMBaaSListener(); <BUGS> ir.mbaas.sdk.MBaaS.init(this, customGcmListener, customGcmListener, null, false); <BUGE> } 
@java.lang.Override public void onResult(com.google.android.gms.common.api.Status status) { <BUGS> mGoogleApiClient.disconnect(); <BUGE> if (status.isSuccess()) { com.facebook.login.LoginManager.getInstance().logOut(); mSharedPreferencesHelper.setLastSignInMethod(SharedPreferencesHelper.LAST_SIGN_IN_METHOD_NONE); mSharedPreferencesHelper.setFacebookToken(null); mSharedPreferencesHelper.setGoogleToken(null); callback.onSuccess(); }else { callback.onError(); } } 
public void increaseImage(double increasment) { <BUGS> if (((this.getAirline().getImage()) + increasment) <= 100) { <BUGE> this.getAirline().setImage(((this.getAirline().getImage()) + (increasment * (this.getEfficiency())))); }else { this.getAirline().setImage(100.0); } } 
@java.lang.Override public java.lang.Object retrieve(sif3.common.model.SIFZone zone, sif3.common.model.SIFContext context, sif3.common.model.PagingInfo pagingInfo, sif3.common.model.RequestMetadata metadata) throws sif3.common.exception.PersistenceException, sif3.common.exception.UnsupportedQueryException { logger.debug(((("Retrieve Students for " + (getZoneAndContext(zone, context))) + " and RequestMetadata = ") + metadata)); java.util.ArrayList<sif.dd.au30.model.StudentPersonalType> studentList = fetchStudents(systemic.sif3.demo.rest.provider.StudentPersonalProvider.students, pagingInfo); sif.dd.au30.model.StudentCollectionType studentCollection = dmObjectFactory.createStudentCollectionType(); <BUGS> studentCollection.getStudentPersonal().addAll(studentList); return studentCollection; <BUGE> } 
<BUGS> void dependentStopped() { assert !(java.lang.Thread.holdsLock(this)); <BUGE> final java.util.ArrayList<java.lang.Runnable> tasks; synchronized(this) { final boolean leavingRestState = isStableRestState(); if ((--(runningDependents)) != 0) { <BUGS> return ; <BUGE> } tasks = new java.util.ArrayList<java.lang.Runnable>(); transition(tasks); asyncTasks += tasks.size(); updateStabilityState(leavingRestState); } <BUGS> doExecute(tasks); <BUGE> } 
<BUGS> public lampkicking.model.OutputData play(lampkicking.model.InputData inputData) { <BUGE> lampkicking.service.Hoover hoover = new lampkicking.service.Hoover(inputData); lampkicking.model.OutputData outputData = hoover.start(); lampkicking.model.Game game = new lampkicking.model.Game(); game.setInput(gson.toJson(inputData)); game.setOutput(gson.toJson(outputData)); gameRepository.save(game); <BUGS> return outputData; <BUGE> } 
public static me.enerccio.sp.types.PythonObject getGlobal(java.lang.String variable) { <BUGS> if ((PythonInterpreter.interpreter.get().currentFrame.size()) == 0) <BUGE> return PythonRuntime.runtime.getGlobals().doGet(variable);  return PythonInterpreter.interpreter.get().environment().get(variable, true, false); } 
public void onClick(android.view.View v) { <BUGS> if ((item.isLost) == true) { mDatabase.getReference((("beacon/" + (item.devAddress)) + "/")).child("isLost").setValue(false); mDatabase.getReference("lost_items/").child(item.devAddress).removeValue(); item.isLost = false; }else { android.widget.Toast.makeText(getApplicationContext(), "잃어버린 물건이 아닙니다!!", Toast.LENGTH_LONG).show(); } <BUGE> } 
@org.junit.Test public void testPostConstructorDB() { java.lang.String title = "Please get me out of the db!"; java.lang.String text = "All I want is to be with you!"; logic.Post op = new logic.Post(title, text); long postID = op.save(); logic.Post post = new logic.Post(postID); assertEquals(postID, post.postID); <BUGS> <BUGE> } 
com.pixelmed.anatproc.CodedConcept str2cc(java.lang.String s) { <BUGS> <BUGE> s = s.replace("(", "").replace(")", ""); java.lang.String[] str = s.split(";"); return new com.pixelmed.anatproc.CodedConcept(null, null, str[1], null, null, str[0], str[2], null, null); } 
public static java.lang.String timestampToDate(java.lang.String timestamp) { java.lang.Long unixtimestamp = java.lang.Long.parseLong(timestamp); <BUGS> android.util.Log.d("Debug", ("TimeStamp: " + unixtimestamp)); <BUGE> if ("4294967295".equals(unixtimestamp)) { return ""; } java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat("yyyy-MM-dd-HH:mm"); java.util.Date date = new java.util.Date((unixtimestamp * 1000)); return new java.text.SimpleDateFormat("dd/MM/yyyy - HH:mm").format(date); } 
public org.exist.xquery.functions.array.Sequence tail() throws org.exist.xquery.functions.array.XPathException { if ((vector.length()) == 2) { final org.exist.xquery.functions.array.Sequence tail = vector.nth(1); <BUGS> return (tail.getItemType()) == (Type.ARRAY) ? tail : new org.exist.xquery.functions.array.ArrayType(context, tail); <BUGE> } return new org.exist.xquery.functions.array.ArrayType(context, org.exist.xquery.functions.array.RT.subvec(vector, 1, vector.length())); } 
public view.ISprite[][] digDown(int colonne, int ligne, view.ISprite sprite) { <BUGS> this.sprites[colonne][ligne] = new view.Sprite(image, (colonne * (SET_SIZE)), (ligne * (SET_SIZE))); <BUGE> sprite.setY(((sprite.getY()) + 16)); <BUGS> this.sprites[colonne][(ligne + 1)] = sprite; <BUGE> return this.sprites; } 
public void updateObjIdOnStack(int objId, int traceBack) { int idx = ((this.stackSimulator.size()) - 1) - traceBack; edu.columbia.psl.cc.pojo.InstNode latestInst = this.stackSimulator.get(idx); latestInst.setRelatedObjId(objId); <BUGS> java.lang.System.out.println(((("Update obj id: " + latestInst) + " ") + objId)); <BUGE> } 
@org.jetbrains.annotations.Nullable public io.github.eterverda.playless.common.Dist bestMyReplacement(io.github.eterverda.playless.common.Dist... candidates) { int bestVersionCode = versionCode; io.github.eterverda.playless.common.Dist bestDist = null; for (io.github.eterverda.playless.common.Dist candidate : candidates) { if (!(candidate.applicationId.equals(applicationId))) { continue; } <BUGS> if ((candidate.version.versionCode) <= bestVersionCode) { <BUGE> continue; } <BUGS> if (matcher.isCompatible(candidate.filter)) { <BUGE> continue; } bestDist = candidate; } return bestDist; } 
private void assembleTaskAndSave() { <BUGS> task.setName(nameEdit.getText().toString()); task.setDescription(descriptionEdit.getText().toString()); <BUGE> if ((lastSelectedTag) != null) { task.setTagId(lastSelectedTag.getId()); }else { task.setTagId(null); } if (canComplete()) { saveTask(); finishAndStartRightActivity(); } } 
@java.lang.Override public void onPointerCancel(playn.core.Pointer.Event event) { if (((start) == 0) || (!(untransing))) return ;  _udir.update(_cur.screen, _prev.screen, 0); <BUGS> <BUGE> _udir.finish(_cur.screen, _prev.screen); <BUGS> _prev.screen.layer.setVisible(false); <BUGE> clear(); } 
public void test_153_ACLReadDeeperFieldSelf(edu.umass.cs.gnsclient.client.util.GuidEntry westyEntry) { try { try { org.junit.Assert.assertEquals("fieldValue", edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest.client.fieldRead(westyEntry.getGuid(), "test.deeper.field", westyEntry)); } catch (java.lang.Exception e) { <BUGS> edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest.failWithStackTrace("Problem adding read field: ", e); <BUGE> } } catch (java.lang.Exception e) { <BUGS> edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest.failWithStackTrace("Exception when we were not expecting it ACLCreateDeeperField: ", e); <BUGE> } } 
@java.lang.Override public void onFinish(java.lang.Boolean success) { if ((parentFragment.isAdded()) && ((getTitle()) != null)) { <BUGS> parentFragment.setPageSaved((!success)); <BUGE> org.wikipedia.util.FeedbackUtil.showMessage(getActivity(), getActivity().getString((success ? R.string.snackbar_saved_page_format : R.string.snackbar_saved_page_missing_images), getTitle())); } } 
public void paintComponent(java.awt.Graphics g) { <BUGS> currentPos = new int[(kb.getAttributeList().size()) - 1]; for (int i = 0; i < (currentPos.length); i++) currentPos[i] = 0;  <BUGE> super.paintComponent(g); if ((dt) != null) { <BUGS> <BUGE> drawTree(g, dt); } } 
public java.lang.String getUserIdBySpecificIdAndDomainId(org.silverpeas.core.admin.domain.DomainDriverManager ddManager, java.lang.String sSpecificId, java.lang.String sDomainId) throws org.silverpeas.core.admin.service.AdminException { try { ddManager.getOrganizationSchema(); org.silverpeas.core.admin.persistence.UserRow ur = ddManager.getOrganization().user.getUserBySpecificId(idAsInt(sDomainId), sSpecificId); <BUGS> return idAsString(ur.id); <BUGE> } catch (java.lang.Exception e) { throw new org.silverpeas.core.admin.service.AdminException(failureOnGetting(("user with specific id " + sSpecificId), ("in domain " + sDomainId)), e); } finally { ddManager.releaseOrganizationSchema(); } } 
private void adaptPortBindingToParallelRun(org.arquillian.cube.docker.impl.client.config.CubeContainer cubeContainer) { final java.util.Collection<org.arquillian.cube.docker.impl.client.config.PortBinding> portBindings = cubeContainer.getPortBindings(); <BUGS> if (portBindings != null) { for (org.arquillian.cube.docker.impl.client.config.PortBinding portBinding : portBindings) { final int randomPrivatePort = generateRandomPrivatePort(); portBinding.setBound(randomPrivatePort); } <BUGE> } } 
@java.lang.Override public java.lang.String decode(java.lang.String plain) { java.lang.String decrypted = ""; for (char letter : plain.toUpperCase().toCharArray()) { int index = com.soesec.util.Alphabet.IndexOf(letter); if (index < 0) { decrypted += letter; continue; } <BUGS> int i = (index - (info.getRightShift())) % 26; <BUGE> decrypted += com.soesec.util.Alphabet.At(i); } return decrypted; } 
<BUGS> private io.minio.HttpResponse executePut(java.lang.String bucketName, java.lang.String objectName, byte[] data, java.util.Map<java.lang.String, java.lang.String> headerMap, java.util.Map<java.lang.String, java.lang.String> queryParamMap) throws io.minio.ErrorResponseException, io.minio.InternalException, io.minio.InvalidBucketNameException, io.minio.NoResponseException, java.io.IOException, org.xmlpull.v1.XmlPullParserException { <BUGE> updateRegionMap(bucketName); <BUGS> return executePut(bucketName, objectName, data, headerMap, queryParamMap, Regions.INSTANCE.region(bucketName)); <BUGE> } 
public void reset() { bufferPos = 0; f0 = 0L; t0 = 0L; t1 = 0L; chainValue = null; <BUGS> <BUGE> if ((key) != null) { <BUGS> org.bouncycastle.util.Arrays.fill(buffer, ((byte) (0))); <BUGE> java.lang.System.arraycopy(key, 0, buffer, 0, key.length); bufferPos = org.bouncycastle.crypto.digests.Blake2bDigest.BLOCK_LENGTH_BYTES; } init(); } 
java.lang.String prepareLdapAuth() { java.lang.String ldapAuth = "true"; java.lang.String confLdapAuth = env.getProperty("ldap.authentication"); <BUGS> if ((confLdapAuth != null) && (!(confLdapAuth.equals("")))) { <BUGE> ldapAuth = confLdapAuth; } if ((!(ldapAuth.equalsIgnoreCase("true"))) && (!(ldapAuth.equalsIgnoreCase("false")))) { ldapAuth = "true"; } return ldapAuth; } 
public void setDevPanStatusPowerConnection(boolean powerOn) { if (powerOn == (devPanStatusPowerOn)) { return ; } devPanStatusPowerOn = powerOn; sensorConnectionStatus.setText((devPanStatusPowerOn ? R.string.sensor_connection_on : R.string.sensor_connection_off)); <BUGS> if (((currentFragment) == (ru.neurotech.hrvstress.views.MainView.PAGE_INDEX.MULTIPLE.ordinal())) && (!powerOn)) { <BUGE> setPage(ru.neurotech.hrvstress.views.MainView.PAGE_INDEX.DEVICE_STATUS); } } 
public void setDragSortListView() { dragSortController = new com.mobeta.android.dslv.DragSortController(dslv); dragSortController.setDragHandleId(R.id.order_button); <BUGS> dragSortController.setSortEnabled(true); <BUGE> dragSortController.setDragInitMode(0); dslv.setFloatViewManager(dragSortController); dslv.setOnTouchListener(dragSortController); dslv.setDragEnabled(true); } 
<BUGS> private int getYLocation(int position, com.edulectronics.tinycircuit.Models.Components.Connectors.ConnectionPointOrientation orientation) { <BUGE> switch (orientation) { case Left : case Right : return (((getRow(position)) - 1) * (cellSize)) + ((int) (0.5 * (cellSize))); case Top : return ((getRow(position)) - 1) * (cellSize); default : <BUGS> return (getColumn(position)) * (cellSize); <BUGE> } } 
private void friendName() { waitSentence("\"Is this your friend\"?"); while (nameFriend) { waitSentence("\"What is his name?\""); java.lang.String userInput = readKeyboardInput.nextLine(); waitSentence((("\"His name is " + userInput) + "?\"")); userInput = readKeyboardInput.nextLine(); if (userInput.equalsIgnoreCase("Yes")) { waitSentence("\"Thats a nice name too\""); <BUGS> name = false; <BUGE> } } } 
public domain.Coordenada getEsquerra(int color) throws java.lang.Exception { int x = (this.x) + 1; int y; if (color == 0) <BUGS> <BUGE> y = (this.y) - 1; <BUGS> else y = (this.y) + 1; <BUGE>  return new domain.Coordenada(x, y); } 
@java.lang.Override public void loadNBTData(net.minecraft.nbt.NBTTagCompound compound) { net.minecraft.nbt.NBTTagCompound properties = ((net.minecraft.nbt.NBTTagCompound) (compound.getTag(com.lothrazar.samscontent.common.PlayerPowerups.EXT_PROP_NAME))); <BUGS> <BUGE> this.player.getDataWatcher().updateObject(com.lothrazar.samscontent.common.PlayerPowerups.WAYPOINT_WATCHER, properties.getString(com.lothrazar.samscontent.common.PlayerPowerups.NBT_WAYPOINT)); this.player.getDataWatcher().updateObject(com.lothrazar.samscontent.common.PlayerPowerups.TODO_WATCHER, properties.getString(com.lothrazar.samscontent.common.PlayerPowerups.NBT_TODO)); } 
private void drawBins(java.awt.Graphics g) { g.setColor(java.awt.Color.GRAY); int x = LEFT_MARGIN; int y = (getHeight()) - (BOTTOM_MARGIN); for (int b : bins) { int height = ((int) (scaleY(b))); y -= height; <BUGS> <BUGE> x += binWidth; <BUGS> g.fill3DRect(x, y, binWidth, height, true); <BUGE> y = (getHeight()) - (BOTTOM_MARGIN); } } 
public java.util.List<java.lang.Double> prodOfLists(java.util.List<java.lang.Double> xList, java.util.List<java.lang.Double> yList) { java.util.List<java.lang.Double> resList = new java.util.ArrayList<java.lang.Double>(); int size = xList.size(); for (int i = 0; i < size; i++) { <BUGS> resList.set(i, ((xList.get(i)) * (yList.get(i)))); <BUGE> } return resList; } 
@java.lang.Override public void onActionFailure(int action, @android.support.annotation.Nullable com.tomeokin.lspush.data.model.BaseResponse response, java.lang.String message) { if (action == (com.tomeokin.lspush.biz.auth.RegisterFragment.ACTION_CHECK_UID_EXISTED)) { if ((response != null) && ((response.getResultCode()) == 10)) { mUIDAdapter.info(); mNotificationBar.showTemporaryInverse(getString(R.string.uid_not_unique)); }else { mNotificationBar.showTemporaryInverse(message); } }else if (action == (com.tomeokin.lspush.biz.auth.RegisterFragment.ACTION_REGISTER)) { <BUGS> <BUGE> }  } 
public void getLastLocation() { android.util.Log.d(com.setmusic.bitmine.BitmineMainActivity.TAG, "getLastLocation"); android.location.Criteria criteria = new android.location.Criteria(); locationManager = ((android.location.LocationManager) (this.getSystemService(Context.LOCATION_SERVICE))); java.lang.String provider = locationManager.getBestProvider(criteria, true); <BUGS> location = locationManager.getLastKnownLocation(provider); <BUGE> storeLocation(); } 
public static java.util.List<java.lang.Integer> shuffle(java.util.List<?> list, int count) { java.util.List<java.lang.Integer> listClone = new java.util.ArrayList<>(); <BUGS> for (int i = 0; i < count; ++i) { <BUGE> listClone.add(i); } if ((list.size()) == count) { return listClone; } java.util.Collections.shuffle(listClone); return listClone.subList(0, count); } 
@java.lang.Override public java.io.InputStream newInputStream(nl.esciencecenter.xenon.files.Path path) throws nl.esciencecenter.xenon.XenonException { java.lang.String filePath = toFilePath(path.toString()); assertRegularFileExists(path); org.apache.commons.httpclient.HttpClient client = getFileSystemByPath(path); org.apache.commons.httpclient.methods.GetMethod method = new org.apache.commons.httpclient.methods.GetMethod(filePath); try { client.executeMethod(method); <BUGS> java.io.InputStream stream = method.getResponseBodyAsStream(); return stream; <BUGE> } catch (java.io.IOException e) { throw new nl.esciencecenter.xenon.XenonException(adaptor.getName(), ("Could not open inputstream to " + filePath), e); } } 
@java.lang.Override public void onComplete(@android.support.annotation.NonNull com.google.android.gms.tasks.Task<com.google.firebase.auth.AuthResult> task) { android.util.Log.d(com.glocoders.hangout.database.FirebaseHelper.TAG, ("signInWithEmail:onComplete:" + (task.isSuccessful()))); <BUGS> if (!(task.isSuccessful())) { <BUGE> android.util.Log.w(com.glocoders.hangout.database.FirebaseHelper.TAG, "signInWithEmail:failed", task.getException()); <BUGS> <BUGE> code = 1; <BUGS> }else { code = -1; <BUGE> } } 
@org.junit.Test @org.openmrs.test.Verifies(value = "should return count of obs whose groupId is given obsGroupId", method = "getObservationCount(List,List,List,List,List,List,Integer,Date,Date,boolean,String)") public void getObservationCount_shouldReturnCountOfObsWhoseGroupIdIsGivenObsGroupId() throws java.lang.Exception { executeDataSet(org.openmrs.api.ObsServiceTest.INITIAL_OBS_XML); org.openmrs.api.ObsService obsService = org.openmrs.api.context.Context.getObsService(); java.lang.Integer count = obsService.getObservationCount(null, null, null, null, null, null, 2, null, null, false, null); <BUGS> org.junit.Assert.assertEquals(1, count.intValue()); <BUGE> } 
private datastructures.BugSummary handleBugSummary() { datastructures.BugSummary summary = new datastructures.BugSummary(); try { while (reader.hasNext()) { if ((reader.next()) == (javax.xml.stream.events.XMLEvent.START_ELEMENT)) { <BUGS> if (reader.getLocalName().equals(Constants.BUG_CATEGORY)) { <BUGE> summary.add(handleBugCategory()); } }else { if (isEndElement(Constants.BUG_SUMMARY)) { break; } } } } catch (java.lang.Exception e) { e.printStackTrace(); } return summary; } 
public static java.lang.String cleanIniValue(java.lang.String value) { <BUGS> <BUGE> value = value.trim(); if (value.startsWith("\"")) { value = value.substring(1); } if (value.endsWith("\"")) { value = value.substring(0, ((value.length()) - 1)); } return value; } 
@java.lang.SuppressWarnings(value = "unchecked") public <T extends org.opennaas.extensions.router.model.SettingData> java.util.List<T> getAllElementSettingDataByType(java.lang.Class<T> clazz) { java.util.List<org.opennaas.extensions.router.model.SettingData> list = getElementsSettingData(); java.util.ArrayList<T> toReturn = new java.util.ArrayList<T>(); for (org.opennaas.extensions.router.model.SettingData settingData : list) { <BUGS> if (clazz.getClass().isInstance(settingData)) { <BUGE> toReturn.add(((T) (settingData))); } } return toReturn; } 
private void writeNoteAttachmentEmailBody2(org.socialbiz.cog.AuthRequest ar, org.socialbiz.cog.OptOutAddr ooa, org.workcast.json.JSONObject data) throws java.lang.Exception { <BUGS> org.socialbiz.cog.UserProfile ownerProfile = ar.getUserProfile(); if (ownerProfile == null) { throw new java.lang.Exception("Some problem, so some reason the owner user profile is null"); } <BUGE> data.put("optout", ooa.getUnsubscribeJSON(ar)); java.io.File myTemplate = ar.getCogInstance().getConfig().getFileFromRoot("email/DiscussionTopicManual.chtml"); org.socialbiz.cog.mail.ChunkTemplate.streamIt(ar.w, myTemplate, data, ooa.getCalendar()); } 
@java.lang.Override public D getDef(org.auraframework.def.DefDescriptor<D> descriptor) throws org.auraframework.throwable.quickfix.QuickFixException { org.auraframework.system.Source<D> source = sourceFactory.getSource(descriptor); if ((source != null) && (source.exists())) { <BUGS> descriptor = source.getDescriptor(); <BUGE> org.auraframework.system.Parser<D> parser = org.auraframework.impl.parser.ParserFactory.getParser(source.getFormat(), descriptor); D def = parser.parse(descriptor, source); return def; } return null; } 
public void myTick(long mils) { <BUGS> int minsRemaining = ((int) (mils)) / 60000; int secsRemaining = (((int) (mils)) / 1000) % 60; java.lang.String time = ((java.lang.Integer.toString(minsRemaining)) + ":") + (java.lang.String.format("%02d", secsRemaining)); timeRemaining.setText(time); <BUGE> timeInMilis = mils; } 
@java.lang.Override public boolean doesSideBlockRendering(net.minecraft.block.state.IBlockState state, net.minecraft.world.IBlockAccess world, net.minecraft.util.math.BlockPos pos, net.minecraft.util.EnumFacing face) { com.jaquadro.minecraft.storagedrawers.block.tile.TileEntityDrawers tile = getTileEntity(world, pos); <BUGS> if ((tile != null) && ((tile.getEffectiveMaterialSide()) == null)) <BUGE> return false;  return super.doesSideBlockRendering(state, world, pos, face); } 
@java.lang.Override public void run() { if (((animator) != null) && (animator.isStarted())) { animator.stop(); } if ((renderer) != null) { renderer.dispose(window); } <BUGS> canvas.dispose(); <BUGE> window = null; renderer = null; view = null; animator = null; } 
@java.lang.Override public void onClick(android.view.View v) { switch (v.getId()) { case R.id.card_overview : if (toggleSceneButtons) <BUGS> goToSceneOverView(v); <BUGE>  break; case R.id.card_ingredients : if (toggleSceneButtons) goToSceneIngredients(v);  break; case R.id.card_directions : if (toggleSceneButtons) goToSceneDirections(v);  break; case R.id.card_images : if (toggleSceneButtons) { goToSceneComments(v); } break; } } 
@java.lang.Override public void actionPerformed(java.awt.event.ActionEvent e) { simController.startRunning(); <BUGS> guiRunTimer = new javax.swing.Timer(15, new java.awt.event.ActionListener() { @java.lang.Override public void actionPerformed(java.awt.event.ActionEvent e) { if (simController.isRunning()) simController.tick();  } }); guiRunTimer.setRepeats(true); guiRunTimer.start(); <BUGE> } 
private boolean parseSimpleDefinition() { if (!(variableManager.containsVariable(splitString.getNthElement(0)))) { return isValidRightSide(splitString.getNthElement(2)); }else { com.nvl.variable.VariableType type = variableManager.getVariable(splitString.getNthElement(0)).getType(); <BUGS> return matchesType(type, splitString.getNthElement(2)); <BUGE> } } 
<BUGS> private org.eclipse.dawnsci.analysis.api.metadata.IDiffractionMetadata getMeta(uk.ac.diamond.scisoft.analysis.processing.operations.twod.DiffractionMetadataImportModel mod, org.eclipse.dawnsci.analysis.api.dataset.ILazyDataset parent) { <BUGE> org.eclipse.dawnsci.analysis.api.metadata.IDiffractionMetadata lmeta = metadata; if (lmeta == null) { synchronized(this) { lmeta = metadata; if (lmeta == null) { <BUGS> org.eclipse.dawnsci.analysis.api.metadata.IDiffractionMetadata md = uk.ac.diamond.scisoft.analysis.io.NexusDiffractionCalibrationReader.getDiffractionMetadataFromNexus(mod.getFilePath(), parent); <BUGE> if (md == null) throw new org.eclipse.dawnsci.analysis.api.processing.OperationException(this, "File does not contain metadata");  metadata = lmeta = md; } } } return lmeta; } 
public void test_145_ACLUpdateACL(edu.umass.cs.gnsclient.client.util.GuidEntry barneyEntry) { try { try { edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest.client.aclAdd(AclAccessType.READ_WHITELIST, barneyEntry, "cell", GNSProtocol.ALL_GUIDS.toString()); } catch (java.lang.Exception e) { <BUGS> edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest.failWithStackTrace("Exception creating ALL_GUIDS access for Barney's cell: ", e); <BUGE> } } catch (java.lang.Exception e) { <BUGS> edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest.failWithStackTrace("Exception when we were not expecting it in ACLPartTwo: ", e); <BUGE> } } 
public boolean onPreferenceChange(android.preference.Preference preference, java.lang.Object newValue) { if (checkPlayServices()) { <BUGS> java.lang.String mRegID = org.universAAL.android.utils.RAPIManager.getRegistrationId(getApplicationContext()); if (!(mRegID.equals(((java.lang.String) (newValue))))) { org.universAAL.android.utils.RAPIManager.registerInThread(getApplicationContext()); } <BUGE> return true; }else { android.widget.Toast.makeText(getApplicationContext(), R.string.warning_gplay, Toast.LENGTH_LONG).show(); return false; } } 
@java.lang.Override public edu.cmu.tetrad.graph.Graph createGraph(edu.cmu.tetrad.util.Parameters parameters) { <BUGS> return edu.cmu.tetrad.graph.GraphUtils.randomGraphRandomForwardEdges(parameters.getInt("numMeasures"), parameters.getInt("numLatents"), (((parameters.getInt("avgDegree")) * (parameters.getInt("numMeasures"))) / 2), parameters.getInt("maxDegree"), parameters.getInt("maxIndegree"), parameters.getInt("maxOutdegree"), parameters.getBoolean("connected")); <BUGE> } 
public static int eval(Board board) { int sum = 50; int score = board.isConnectN(); if (score == 1) { sum = 1000; }else if (score == 2) { <BUGS> sum = -10000; <BUGE> }else if (score == (-1)) { }   return sum; } 
public void deleteFloor(int x, int y) { <BUGS> for (int scan = 0; scan < (walls.size()); scan++) { <BUGE> if (((floors.get(scan).xPosition) == x) && ((floors.get(scan).yPosition) == y)) { floors.remove(scan); } } } 
private org.apache.camel.component.bean.MethodInfo findMostSpecificOverride(org.apache.camel.component.bean.MethodInfo proposedMethodInfo) { for (org.apache.camel.component.bean.MethodInfo alreadyRegisteredMethodInfo : methodMap.values()) { java.lang.reflect.Method alreadyRegisteredMethod = alreadyRegisteredMethodInfo.getMethod(); java.lang.reflect.Method proposedMethod = proposedMethodInfo.getMethod(); <BUGS> if (org.apache.camel.util.ObjectHelper.isOverridingMethod(proposedMethod, alreadyRegisteredMethod, false)) { <BUGE> return alreadyRegisteredMethodInfo; }else <BUGS> if (org.apache.camel.util.ObjectHelper.isOverridingMethod(alreadyRegisteredMethod, proposedMethod, false)) { <BUGE> return proposedMethodInfo; }  } return null; } 
private void scrolling() { detectTouchEventConsumed(); if ((currentMode) == (client.example.sj.pulltoscaleheaderlayout.PullToScaleHeaderLayout.SCROLL_DOWN)) { if (isFirstViewVisible()) { <BUGS> android.util.Log.e("PullToScaleHeader", ("向下滚动" + (mLastDistance))); <BUGE> isBeingDraggedFromTop(); } } if ((currentMode) == (client.example.sj.pulltoscaleheaderlayout.PullToScaleHeaderLayout.SCROLL_UP)) { if ((headerLayoutParams.height) > (heightOfActionBar)) { <BUGS> android.util.Log.e("PullToScaleHeader", ("向上滚动" + (mLastDistance))); <BUGE> isBeingDraggedFromTop(); } } } 
private void initializeDataStructure() { declarationAxioms = new java.util.ArrayList<org.semanticweb.owlapi.model.OWLAxiom>(); domainAndRangeAxioms = new java.util.ArrayList<org.semanticweb.owlapi.model.OWLAxiom>(); existentialAxioms = new java.util.ArrayList<org.semanticweb.owlapi.model.OWLAxiom>(); cardinalityAxioms = new java.util.ArrayList<org.semanticweb.owlapi.model.OWLAxiom>(); subClassOfAxioms = new java.util.ArrayList<org.semanticweb.owlapi.model.OWLAxiom>(); classAssertionAxioms = new java.util.ArrayList<org.semanticweb.owlapi.model.OWLAxiom>(); disJointOfAxioms = new java.util.ArrayList<org.semanticweb.owlapi.model.OWLAxiom>(); <BUGS> selectedAxioms = new java.util.ArrayList<org.semanticweb.owlapi.model.OWLAxiom>(); <BUGE> changes = new java.util.ArrayList<org.semanticweb.owlapi.model.OWLOntologyChange>(); } 
public java.lang.String displayContents() { java.lang.String contents = ""; <BUGS> crazycalculator.datastructure.Link<T> currentLink = firstLink; <BUGE> int index = 0; <BUGS> while ((currentLink.getData()) != null) { contents = ((((contents + "[ ") + index) + " ]\t= ") + (currentLink.getData())) + "\n"; <BUGE> index++; <BUGS> currentLink = currentLink.getNextLink(); <BUGE> } return contents; } 
<BUGS> private org.openqa.selenium.remote.DesiredCapabilities setCapabilities() { <BUGE> org.openqa.selenium.remote.DesiredCapabilities caps = new org.openqa.selenium.remote.DesiredCapabilities(); caps.setCapability(CapabilityType.BROWSER_NAME, org.fundacionjala.sfdc.core.driver.SauceLabs.ENV.getRemoteBrowser()); caps.setCapability(CapabilityType.VERSION, org.fundacionjala.sfdc.core.driver.SauceLabs.ENV.getRemoteBrowserVersion()); caps.setCapability(org.fundacionjala.sfdc.core.driver.SauceLabs.PLATFORM, java.lang.String.format("%s %s", org.fundacionjala.sfdc.core.driver.SauceLabs.ENV.getRemotePlatform(), org.fundacionjala.sfdc.core.driver.SauceLabs.ENV.getRemotePlatformVersion())); caps.setCapability(org.fundacionjala.sfdc.core.driver.SauceLabs.RESOLUTION, org.fundacionjala.sfdc.core.driver.SauceLabs.ENV.getRemoteResolution()); return caps; } 
@org.junit.Test public void doesNotAdjustToError() { neuralNetwork.InputPerceptron testPerceptron = new neuralNetwork.InputPerceptron(0); final double testInput = 1.0; testPerceptron.setInput(testInput); testPerceptron.activate(); <BUGS> testPerceptron.calculateDeltas(); <BUGE> testPerceptron.adjustToError(); testPerceptron.activate(); assertEquals(testInput, testPerceptron.output(), DELTA); } 
private void addClassPathToModule(java.lang.String moduleName, org.eclipse.jdt.internal.core.builder.ClasspathLocation cp) { <BUGS> java.util.List<org.eclipse.jdt.internal.core.builder.ClasspathLocation> l = this.moduleToClassPathLocations.get(moduleName); if (l == null) { l = new java.util.ArrayList<>(); this.moduleToClassPathLocations.put(moduleName, l); <BUGE> } <BUGS> l.add(cp); <BUGE> } 
public java.lang.Boolean addTournament(com.myapps.ekutarnia.trackmytourney.Tournament tourney) { java.lang.Boolean success = true; android.content.ContentValues val = new android.content.ContentValues(); <BUGS> val.put(com.myapps.ekutarnia.trackmytourney.MyDBHandler.COLUMN_T_SDATE, tourney.getStartDate().toString()); val.put(com.myapps.ekutarnia.trackmytourney.MyDBHandler.COLUMN_T_EDATE, tourney.getEndDate().toString()); <BUGE> val.put(com.myapps.ekutarnia.trackmytourney.MyDBHandler.COLUMN_T_WINNER, tourney.getWinner()); android.database.sqlite.SQLiteDatabase db = this.getWritableDatabase(); db.insert(com.myapps.ekutarnia.trackmytourney.MyDBHandler.TABLE_TOURNAMENT, null, val); db.close(); return success; } 
@java.lang.Override public void visitFile(final uk.co.itmoore.intellisubsteps.psi.PsiFile file) { <BUGS> uk.co.itmoore.intellisubsteps.psi.SubstepsCompletionContributor.logger.debug(((("got src file: " + (file.getName())) + " filetype: ") + (file.getFileType()))); <BUGE> if (file instanceof uk.co.itmoore.intellisubsteps.psi.PsiJavaFile) { buildSuggestionsFromJavaSource(((uk.co.itmoore.intellisubsteps.psi.PsiJavaFile) (file)), stepImplsInScope); }else if (file instanceof uk.co.itmoore.intellisubsteps.psi.stepdefinition.psi.SubstepsDefinitionFile) { buildSuggestionsFromSubstepsSource(((uk.co.itmoore.intellisubsteps.psi.stepdefinition.psi.SubstepsDefinitionFile) (file)), resultSet); }  } 
@java.lang.Override public void run() { boolean end = false; while (!end) { if ((elements.size()) > 0) { de.uni_hildesheim.sse.monitoring.runtime.recordingServer.RecordingStrategiesElement element = elements.remove(0); element.process(strategy); int id = element.getIdentification(); <BUGS> element.clear(); <BUGE> element.release(); end = (Constants.ENDSYSTEM) == id; }else { java.lang.Thread.yield(); } } printElementStatistics(); } 
public model.player.Player getPlayer(model.adventurers.AdventurerType advT) { <BUGS> model.game.Iterator<model.player.Player> it = getPlayers().iterator(); <BUGE> model.player.Player p = null; while ((it.hasNext()) && (!((p = it.next()).getCurrentAdventurer().getADVENTURER_TYPE().equals(advT)))) { } return p; } 
public java.lang.String toString() { java.lang.String str = ""; <BUGS> for (int i = 0; i < (org.astrobotics.ds2016.io.Protocol.ControlData.data.length); i++) { str = (((str + "\n") + i) + ": ") + (org.astrobotics.ds2016.io.Protocol.ControlData.data[i]); <BUGE> } return str; } 
<BUGS> <BUGE> public void onInit(int initStatus) { if (initStatus == (android.speech.tts.TextToSpeech.SUCCESS)) { <BUGS> if ((tts.isLanguageAvailable(java.util.Locale.US)) == (android.speech.tts.TextToSpeech.LANG_AVAILABLE)) { tts.setLanguage(java.util.Locale.US); } <BUGE> }else if (initStatus == (android.speech.tts.TextToSpeech.ERROR)) { android.widget.Toast.makeText(activity, "Sorry! Text to Speech failed...", Toast.LENGTH_LONG).show(); }  } 
public boolean containsKey(java.lang.Object key) { int pos = getHash(key); if ((table[pos]) == null) { return false; }else { hashtable.HashTable.Node curr = table[pos]; <BUGS> while (true) { <BUGE> if (curr.key.equals(key)) { return true; <BUGS> } if ((curr.next) == null) { break; <BUGE> } curr = curr.next; } return false; } } 
private java.lang.String giveRelevantError() { <BUGS> java.lang.String error = ""; java.lang.System.out.println(this.wantedVariable); <BUGE> switch (this.wantedVariable) { case "Angular Velocity" : <BUGS> error = "To calculate Angular Velocity, you need either of these sets of measurements: Angle and Time <p>Linear Velocity and Radius <p>Arc Length, Angle, and Linear Velocity <p>Time, Radius, and Arc Length</p></p></p></p>"; <BUGE> case "Linear Velocity" : <BUGS> error = "To calculate Linear Velocity, you need either of these sets of measurements: <p>Arc Length and Time <p>Angular Velocity and Radius <p>Arc Length, Angle, and Angular Velocity <p>Time, Radius, and Angle</p></p></p></p>"; <BUGE> case "Radius" : <BUGS> error = "To calculate Radius, you need either of these sets of measurements: <p>Linear Velocity and Angular Velocity <p>Arc Length and Angle <p>Arc Length, Time, and Angular Velocity <p>Time, Angle, and Linear Velocity</p></p></p></p>"; <BUGE> case "Time" : <BUGS> error = "To calculate Time, you need either of these sets of measurements: <p>Angular Velocity and Angle <p>Linear Velocity and Arc Length <p>Radius, Angle, and Linear Velocity <p>Angular Velocity, Radius, and Arc Length</p></p></p></p>"; <BUGE> case "Arc Length" : <BUGS> error = "To calculate Arc Length you need either of these sets of measurements: <p>Time and Linear Velocity <p>Angle and Radius <p>Radius, Time, and Angular Velocity <p>Angular Velocity, Angle, and Angular Velocity</p></p></p></p>"; <BUGE> case "Angle" : <BUGS> error = "To calculate Angle, you need either of these sets of measurements: <p>Angular Velocity and Time <p>Radius and Arc Length <p>Arc Length, Angular Velocity, and Linear Velocity <p>Time, Radius, and Linear Velocity</p></p></p></p>"; <BUGE> } <BUGS> switch (this.wantedVariable) { case "Angular Velocity" : java.lang.System.out.println("This is working right"); break; case "Angle" : java.lang.System.out.println("Its not going to the right one"); } return error; <BUGE> } 
private java.util.ArrayList<java.net.URL> mapToAbsolute(org.jsoup.select.Elements anchors) { java.util.ArrayList<java.net.URL> res = new java.util.ArrayList<>(); for (org.jsoup.nodes.Element a : anchors) { java.net.URL u = com.codeforsanjose.blic.Crawler.parseUrl(a.attr("abs:href")); <BUGS> if ((u != null) && (!(pages.containsKey(u)))) { <BUGE> res.add(u); } } return res; } 
@java.lang.Override public void onCompletion(android.media.MediaPlayer mediaPlayer) { <BUGS> android.os.CountDownTimer timer = new android.os.CountDownTimer(2000, 1000) { <BUGE> @java.lang.Override public void onTick(long l) { }  @java.lang.Override public void onFinish() { trialNum = 1; startTrial(); } }; timer.start(); } 
<BUGS> private static java.lang.String[] getParams(final java.util.Map<java.lang.String, java.lang.String> valueNameParamsMap) { <BUGE> return valueNameParamsMap.entrySet().stream().map(it.unibo.alchemist.boundary.gui.TestSingleApplicationBuilder::getParam).collect(java.util.stream.Collectors.toList()).toArray(new java.lang.String[]{  }); } 
public void toHint() { mTracker.send(new com.google.android.gms.analytics.HitBuilders.EventBuilder().setCategory("Action").setAction("MoveToHint").setLabel(com.sweets.rumandapp.StageMainBottomFragment.SCREEN_NAME).build()); android.content.Intent intent = new android.content.Intent(getActivity(), com.sweets.rumandapp.StageHintActivity.class); intent.putExtra(Const.STAGE_ID_KEY, stageId); startActivity(intent); <BUGS> getActivity().finish(); <BUGE> } 
public void updateLocation(java.lang.String whiteMove, java.lang.String blackMove) { player1.nextMove(whiteMove); if (whiteMove.contains("x")) { player2.setCapture(whiteMove); } player2.nextMove(blackMove); if (blackMove.contains("x")) { <BUGS> player2.setCapture(blackMove); <BUGE> } } 
@java.lang.Override public java.net.URL getResource(java.lang.String name) { ro.fortsoft.pf4j.IzouPluginClassLoader.log.debug("Trying to find resource '{}' in plugin classpath", name); <BUGS> java.net.URL url = classLoader.findResource(name); if (url == null) url = libClassLoader.findResource(name);  <BUGE> if (url != null) { ro.fortsoft.pf4j.IzouPluginClassLoader.log.debug("Found resource '{}' in plugin classpath", name); return url; } ro.fortsoft.pf4j.IzouPluginClassLoader.log.debug("Couldn't find resource '{}' in plugin classpath. Delegating to parent"); return super.getResource(name); } 
@java.lang.Override @cpw.mods.fml.relauncher.SideOnly(value = cpw.mods.fml.relauncher.Side.CLIENT) protected net.minecraft.util.IIcon getUnderlayIcon(net.minecraft.world.IBlockAccess world, int x, int y, int z, int side) { int meta = world.getBlockMetadata(x, y, z); org.pfaa.chemica.model.IndustrialMaterial host = this.getGeoMaterial(meta).getHost(); if (host != null) { <BUGS> net.minecraft.util.IIcon icon = getHostIcon(host, world, x, y, z); <BUGE> if (icon != null) { return icon; } } return this.getUnderlayIcon(side, meta); } 
void getChain(java.io.DataInputStream din, java.io.DataOutputStream dout) throws java.lang.Exception { java.lang.String username = peergos.shared.corenode.CoreNodeUtils.deserializeString(din); java.util.List<peergos.shared.corenode.UserPublicKeyLink> chain = coreNode.getChain(username).get(); dout.writeInt(chain.size()); for (peergos.shared.corenode.UserPublicKeyLink link : chain) { <BUGS> peergos.shared.util.Serialize.serialize(link.owner.serialize(), dout); <BUGE> peergos.shared.util.Serialize.serialize(link.serialize(), dout); } } 
<BUGS> @org.testng.annotations.Test(dataProvider = "noHeadersNorDomainDataProvider", expectedExceptions = java.lang.IllegalStateException.class) <BUGE> public void testGetZoneNoHeaderOrBase(final java.lang.String requestHostname, final java.lang.String requestHeader, final java.util.List<java.lang.String> serviceBaseDomains, final java.util.List<java.lang.String> serviceConfigHeaders, final java.lang.String headerValue, final java.lang.String subdomainValue) { org.springframework.mock.web.MockHttpServletRequest req = new org.springframework.mock.web.MockHttpServletRequest(); req.setServerName(requestHostname); req.addHeader(requestHeader, headerValue); java.lang.String subdomain = com.ge.predix.uaa.token.lib.HttpServletRequestUtil.getZoneName(req, serviceBaseDomains, serviceConfigHeaders); <BUGS> <BUGE> } 
@java.lang.Override public int linearIndex(int i) { setLinearStride(); int idx = i; <BUGS> for (int j = 0; j < ((org.nd4j.linalg.api.shape.Shape.rank(shapeInformation.asNioInt())) - 1); j++) { <BUGE> if ((size(i)) == 1) continue;  idx += i * (stride(j)); } return (org.nd4j.linalg.api.shape.Shape.offset(shapeInfo())) + idx; } 
private void callAttempt(java.lang.String sitePhoneNumber, java.lang.String callingSiteToastText) { android.content.Intent callIntent = new android.content.Intent(android.content.Intent.ACTION_CALL); try { <BUGS> callIntent.setData(android.net.Uri.parse("tel:8122387631")); <BUGE> startActivity(callIntent); android.widget.Toast.makeText(getApplicationContext(), callingSiteToastText, Toast.LENGTH_SHORT).show(); } catch (java.lang.SecurityException ex) { java.lang.String noPermToastText = getResources().getString(R.string.toast_call_perm); android.widget.Toast.makeText(getApplicationContext(), noPermToastText, Toast.LENGTH_SHORT).show(); } callDialog.dismiss(); } 
public java.util.List<com.xz.data.prepare.RawData> fetchData(com.xz.data.syntax.TqlEntity tqlEntity, com.xz.data.syntax.TqlInterval tqlInterval) { java.util.List<com.xz.data.prepare.RawData> result = com.google.common.collect.Lists.newArrayList(); for (int i = 1; i < 4; ++i) { <BUGS> result.add(new com.xz.data.prepare.RawData(i)); <BUGE> } return result; } 
<BUGS> public javax.swing.ImageIcon getPokemonIcon(java.lang.String pokemonImageString) { <BUGE> java.awt.Image myImage; javax.swing.ImageIcon myImageIcon = null; try { myImage = javax.imageio.ImageIO.read(getClass().getResource(((utilities.Settings.POKEMON_IMAGES_ICON_FOLDER()) + pokemonImageString))); myImageIcon = new javax.swing.ImageIcon(myImage.getScaledInstance(view.BoxPanel.iconSide, view.BoxPanel.iconSide, java.awt.Image.SCALE_SMOOTH)); } catch (java.io.IOException e) { e.printStackTrace(); } return myImageIcon; } 
public static int addAssetPath(android.content.res.AssetManager assets, java.lang.String path) { if ((net.wequick.small.util.ReflectAccelerator.sAddAssetPath) == null) { net.wequick.small.util.ReflectAccelerator.sAddAssetPath = net.wequick.small.util.ReflectAccelerator.getMethod(android.content.res.AssetManager.class, "addAssetPath", new java.lang.Class[]{ java.lang.String.class }); } if ((net.wequick.small.util.ReflectAccelerator.sAddAssetPath) == null) return 0;  <BUGS> int ret = net.wequick.small.util.ReflectAccelerator.invoke(net.wequick.small.util.ReflectAccelerator.sAddAssetPath, assets, path); <BUGE> return ret; } 
protected boolean isNotBeforeModuleDeclaration(com.intellij.psi.PsiElement topmostElement) { <BUGS> com.intellij.psi.PsiElement[] moduleKeywords = org.intellij.xquery.psi.impl.XQueryPsiImplUtil.findChildrenOfType(topmostElement.getNextSibling(), XQueryTypes.K_MODULE); <BUGE> com.intellij.psi.PsiElement nextModuleDeclaration = com.intellij.psi.util.PsiTreeUtil.getNextSiblingOfType(topmostElement, org.intellij.xquery.psi.XQueryModuleDecl.class); return ((moduleKeywords.length) == 0) && (nextModuleDeclaration == null); } 
public void enqueueNoDependencies(java.util.Set<eu.sqooss.service.scheduler.Job> jobs) throws eu.sqooss.service.scheduler.SchedulerException { synchronized(this) { for (eu.sqooss.service.scheduler.Job job : jobs) { <BUGS> logger.debug(("Scheduler ServiceImpl: queuing job " + (job.toString()))); <BUGE> job.callAboutToBeEnqueued(this); java.util.concurrent.Future<java.lang.Void> future = executorService.submit(job); job.future = future; stats.addWaitingJob(job.getClass().toString()); stats.incTotalJobs(); } } } 
public void setLine(int line, java.lang.String text) { if ((text == null) || (text.isEmpty())) { removeLine(line); return ; } text = org.bukkit.ChatColor.translateAlternateColorCodes('&', text); <BUGS> if ((armorStands.size()) <= line) { <BUGE> addLine(line, text); return ; } armorStands.get(line).setCustomName(text); } 
public kiviuq.entities.TileType[][] convertGrid() { kiviuq.entities.TileType[][] newGrid; newGrid = new kiviuq.entities.TileType[9][9]; for (int x = 0; x < 9; x++) { <BUGS> for (int y = 0; x < 9; y++) { <BUGE> kiviuq.entities.TileType type = grid[x][y].getType(); <BUGS> newGrid[x][x] = type; <BUGE> } } return newGrid; } 
@java.lang.Override public void onScrollStateChanged(android.widget.AbsListView view, int scrollState) { <BUGS> if ((lastVisibleItem) <= 1) { <BUGE> return ; } if (((lastVisibleItem) == (totalItemCount)) && (scrollState == (SCROLL_STATE_IDLE))) { if (!(isLoading)) { isLoading = true; footerView.setVisibility(View.VISIBLE); onLoadListener.onLoad(); } } } 
public int getRoomCost() { int roomCost = 0; <BUGS> if ((roomType) == 'I') roomCost = (HospitalMVC.Patient.icRoomRate) * (days); else if ((roomType) == 'P') <BUGE> roomCost = (HospitalMVC.Patient.privateRoomRate) * (days); <BUGS> else <BUGE> roomCost = (HospitalMVC.Patient.doubleRoomRate) * (days); <BUGS>   <BUGE> return roomCost; } 
public android.view.View getView(int pos, android.view.View v, android.view.ViewGroup p) { android.widget.TextView view = new android.widget.TextView(this); view.setTextSize(25); if ((items) != null) { <BUGS> view.setText(((java.lang.String) (items.get(pos)))); <BUGE> }else { view.setText(pos); } return view; } 
<BUGS> public void setOutcomingPortletCandidate(org.vaadin.addons.portallayout.gwt.client.portlet.PortletChrome portletWidget) { <BUGE> assert portletWidget != null; <BUGS> com.vaadin.client.ComponentConnector pc = com.vaadin.client.Util.findConnectorFor(portletWidget.getContentWidget()); if ((this.incomingPortletCandidate) == pc) { this.incomingPortletCandidate = null; <BUGE> }else if (getChildComponents().contains(pc)) { <BUGS> this.outcomingPortletCandidate = pc; <BUGE> }  } 
<BUGS> public com.example.nils.grocerylist.Item findBestItem(java.util.ArrayList<com.example.nils.grocerylist.Item> list) { <BUGE> com.example.nils.grocerylist.HealthLogic healthLogic = new com.example.nils.grocerylist.HealthLogic(list); <BUGS> if ((mode) == 1) { return healthLogic.getCheapestItem(); <BUGE> } <BUGS> if ((mode) == 2) { return healthLogic.getHealthiestItem(); } return null; <BUGE> } 
public void setTemperature(java.lang.String h) { <BUGS> <BUGE> if (h != null) { <BUGS> strTemperature = h; <BUGE> int i = strTemperature.indexOf('.'); i = java.lang.Integer.parseInt(strTemperature.substring(0, i)); if (i > (maxTemp)) maxTemp = ((byte) (i));  } } 
private java.util.Properties getHibernateProperties() { java.util.Properties properties = new java.util.Properties(); properties.put("hibernate.dialect", env.getProperty(com.project.shopping_Backend.config.HibernateConfig.DATABASE_DIALECT)); properties.put("hibernate.show_sql", env.getProperty(com.project.shopping_Backend.config.HibernateConfig.HIBERNATE_SHOW_SQL)); properties.put("hibernate.format_sql", env.getProperty(com.project.shopping_Backend.config.HibernateConfig.HIBERNATE_FORMAT_SQL)); <BUGS> properties.put("hibernate.hbm2ddl.auto", env.getProperty(com.project.shopping_Backend.config.HibernateConfig.HIBERNATE_HBM2DDL_AUTO)); <BUGE> return properties; } 
public void onDestroy() { super.onDestroy(); if ((lyricViewer) != null) { lyricViewer.dismiss(); } <BUGS> mRemoteTrackTime.unregister(); <BUGE> try { if ((mTrackIntent) != null) { unregisterReceiver(mTrackReceiver); } if ((mStatusIntent) != null) { unregisterReceiver(mStatusReceiver); } } catch (java.lang.Exception e) { } } 
public boolean findItem(java.lang.String item) { boolean q = false; java.lang.String name = item; for (int num = 0; num < 101; num++) { <BUGS> if (items[num][0].equals(name)) { <BUGE> q = true; } } return q; } 
public static void register(net.minecraft.block.Block block) { if (Config.debug) <BUGS> java.lang.System.out.println(("Registered " + (block.toString()))); <BUGE>  net.minecraftforge.fml.common.registry.GameRegistry.register(block); if ((!(shadows.plants.util.Util.isException(block))) && (!(block instanceof shadows.plants.block.internal.cosmetic.BlockDoubleHarvestable))) net.minecraftforge.fml.common.registry.GameRegistry.register(new net.minecraft.item.ItemBlock(block), block.getRegistryName());  } 
@java.lang.Override public void onTransactionChainFailed(final org.opendaylight.controller.md.sal.common.api.data.TransactionChain<?, ?> chain, final org.opendaylight.controller.md.sal.common.api.data.AsyncTransaction<?, ?> transaction, final java.lang.Throwable cause) { synchronized(txLock) { if ((org.opendaylight.openflowplugin.impl.device.TransactionChainManager.TransactionChainManagerStatus.WORKING) == (transactionChainManagerStatus)) { org.opendaylight.openflowplugin.impl.device.TransactionChainManager.LOG.warn("Transaction chain failed, recreating chain due to ", cause); <BUGS> createTxChain(); <BUGE> wTx = null; } } } 
public java.util.ArrayList<java.lang.String> getProjectionIds() { java.util.ArrayList<java.lang.String> projIds = new java.util.ArrayList<java.lang.String>(); if (!(projectionInfo.isEmpty())) { return new java.util.ArrayList<java.lang.String>(projectionInfo.keySet()); <BUGS> }else { for (org.neuroml.model.Projection proj : neuroMLDocument.getNetwork().get(0).getProjection()) { projIds.add(proj.getId()); <BUGE> } <BUGS> } <BUGE> return projIds; } 
@java.lang.Override protected void initResource(android.os.Bundle savedInstanceState) { setSupportActionBar(R.id.zxingscanview_toolbar); scanView = ((am.widget.zxingscanview.ZxingScanView) (findViewById(R.id.zxingscanview_zsv_scan))); foregroundView = ((am.widget.zxingscanview.ZxingForegroundView) (findViewById(R.id.zxingscanview_zfv_foreground))); scanView.addOnScanListener(this); foregroundView.setOpenDrawable(new android.support.v4.widget.MaterialLoadingProgressDrawable(foregroundView)); <BUGS> scanView.addOnScanListener(new am.widget.zxingscanview.ZxingScanView.OnScanListener() { @java.lang.Override public void onError(am.widget.zxingscanview.ZxingScanView scanView) { }  @java.lang.Override public void onResult(am.widget.zxingscanview.ZxingScanView scanView, com.google.zxing.Result result, android.graphics.Bitmap barcode, float scaleFactor) { } }); <BUGE> } 
public java.util.List<model.Comments> getComments() { java.util.List<model.Comments> commentsList; try { java.lang.String query = java.lang.String.format("SELECT c FROM %s AS c ", model.Comments.class.getName()); commentsList = em.createQuery(query, model.Comments.class).getResultList(); return commentsList; } catch (java.lang.Exception e) { <BUGS> java.lang.System.out.println("Szar van a palacsintában"); <BUGE> e.printStackTrace(); } return null; } 
public void surfaceChanged(android.view.SurfaceHolder holder, int format, int w, int h) { if ((this.holder.getSurface()) == null) { return ; } try { camera.stopPreview(); <BUGS> camera.setPreviewDisplay(this.holder); <BUGE> camera.startPreview(); } catch (java.lang.Exception e) { android.util.Log.d("Surface Changed", ("Error starting camera preview: " + (e.getMessage()))); } } 
public static java.lang.String urlEncode(java.lang.Object value) { if (value == null) return null;  try { java.lang.String result = java.net.URLEncoder.encode(value.toString(), "UTF-8"); <BUGS> result = result.replaceAll("\\+", "%20"); <BUGE> return result; } catch (java.io.UnsupportedEncodingException e) { return null; } } 
public static clausal_discovery.validity.ValidityTable create(vector.Vector<clausal_discovery.validity.ValidatedClause> clauses) { <BUGS> vector.Vector<logic.example.Example> examples = (clauses.isEmpty()) ? clauses.getFirst().getLogicBase().getExamples() : new vector.Vector(); <BUGE> return new clausal_discovery.validity.ValidityTable(clausal_discovery.validity.ValidityTable.createValidityMap(clauses), examples); } 
@java.lang.Override <BUGS> public void next() { <BUGE> gui.disable(); getContext().actorSelection(util.MessageHelper.getActorAddress(actors.BillingInfoNode.class)).tell(new actors.TravelInfoNode.TravelInfoNodeDone(travelInfo), self()); getContext().actorSelection(util.MessageHelper.getActorAddress(actors.ProcessReservationNode.class)).tell(new actors.TravelInfoNode.TravelInfoNodeDone(travelInfo), self()); <BUGS> <BUGE> self().tell(new actors.TravelInfoNode.Start(), self()); <BUGS> super.next(); <BUGE> } 
@java.lang.Override public int compare(java.lang.String o1, java.lang.String o2) { if (count.get(o1).equals(count.get(o2))) { return word.get(o1).compareTo(word.get(o2)); }else { <BUGS> return count.get(o1).compareTo(count.get(o2)); <BUGE> } } 
@org.springframework.web.bind.annotation.RequestMapping(value = "/films/addOrUpdate") public java.lang.String admin_films_addOrUpdate(@org.springframework.web.bind.annotation.RequestParam(value = "id", required = false, defaultValue = "null") java.lang.String id, org.springframework.ui.Model model) { <BUGS> if (!(java.util.Objects.equals(id, "null"))) { <BUGE> org.hibernate.Session session = hibernate.HibernateUtil.getSessionFactory().openSession(); <BUGS> dao.FilmDb filmDb = ((dao.FilmDb) (session.createQuery(("from FilmDb f where f.id=" + id)).list().get(0))); model.addAttribute("film", filmDb); <BUGE> } <BUGS> <BUGE> return "admin/films/addOrUpdate"; } 
public static void editStock(model.Stocks stock) { try { org.hibernate.SessionFactory sessionFactory = model.HibernateUtil.getSessionFactory(); org.hibernate.Session session = sessionFactory.openSession(); session.beginTransaction(); session.update(stock); session.getTransaction().commit(); <BUGS> if (session.isOpen()) { session.close(); } <BUGE> } catch (org.hibernate.HibernateException e) { e.printStackTrace(); } } 
public void onItemClick(android.widget.AdapterView<?> parent, android.view.View v, int position, long id) { <BUGS> java.lang.String buddyname = ((android.widget.TextView) (v.findViewById(R.id.BuddyName))).getText().toString(); java.lang.String macAddr = ((android.widget.TextView) (v.findViewById(R.id.MacAddress))).getText().toString(); <BUGE> registerForContextMenu(buddylistView); buddylistView.showContextMenuForChild(v); unregisterForContextMenu(buddylistView); } 
@java.lang.Override public void pop(com.reactnativenavigation.params.ScreenParams params) { getCurrentScreenStack().pop(params.animateScreenTransitions, new com.reactnativenavigation.screens.ScreenStack.OnScreenPop() { @java.lang.Override public void onScreenPopAnimationEnd() { setBottomTabsStyleFromCurrentScreen(); <BUGS> <BUGE> } }); <BUGS> EventBus.instance.post(new com.reactnativenavigation.events.ScreenChangedEvent(getCurrentScreenStack().peek().getScreenParams())); <BUGE> } 
private static boolean isKeyPressed(net.minecraft.client.settings.KeyBinding instance) { try { java.lang.reflect.Field field = net.minecraft.client.settings.KeyBinding.class.getDeclaredField("pressTime"); field.setAccessible(true); <BUGS> int c = ((int) (field.get(instance))); <BUGE> if (c > 0) { return true; } } catch (java.lang.Exception e) { } return false; } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_renshuu); kanaKey = ((android.widget.TextView) (findViewById(R.id.kanaKey))); chisaiIndicator = ((android.widget.TextView) (findViewById(R.id.chisaiIndicator))); <BUGS> <BUGE> userInput = ((android.widget.EditText) (findViewById(R.id.userInput))); userInput.setVisibility(EditText.INVISIBLE); <BUGS> chisaiIndicator.setVisibility(TextView.INVISIBLE); <BUGE> com.nihonkaeritai.flickrenshuu.repositories.KanaRepository.initialize(this); waitForTapToStart(); } 
public void submitAnswers(android.view.View view) { score += questionNo1(); score += questionNo2(); score += questionNo3(); score += questionNo4(); score += questionNo5(); score += questionNo6(); score += questionNo7(); score += questionNo8(); score += questionNo9(); score += questionNo10(); android.content.Intent mainToResultsIntent = new android.content.Intent(this, com.example.android.quizapp.ResultsActivity.class); mainToResultsIntent.putExtra("correct", score); startActivity(mainToResultsIntent); <BUGS> <BUGE> } 
<BUGS> private void selectItem(int position) { <BUGE> if ((mDrawerLayout) != null) { mDrawerLayout.closeDrawer(mFragmentContainerView); } com.jvanier.android.sendtocar.controllers.commands.Command handler = itemsList.get(position).handler; if (handler != null) { handler.perfrom(getActivity()); } } 
public boolean isCompatible(thobe.logfileviewer.plugin.api.IPluginApiVersion versionOfPlugin) { if ((versionOfPlugin.getMajorVersion()) != (getMajorVersion())) { return false; } <BUGS> if ((versionOfPlugin.getMinorVersion()) > (this.getMinorVersion())) { <BUGE> return false; } return true; } 
<BUGS> public void addAllNumbers() { <BUGE> allHandles = new java.util.ArrayList<>(); addAllDecimalNumbers(); addAllHexNumbers(); addAllWebColorNumbers(); for (java.util.List<processing.mode.java.tweak.Handle> handle : allHandles) { java.util.Collections.sort(handle, new processing.mode.java.tweak.HandleComparator()); } } 
@java.lang.Override public boolean onOptionsItemSelected(android.view.MenuItem item) { switch (item.getItemId()) { <BUGS> case R.id.action_delete_expense : return true; <BUGE> case R.id.action_home : android.content.Intent homeIntentVE = new android.content.Intent(this, com.easysplit.mainview.MainActivity.class); startActivity(homeIntentVE); return true; case R.id.action_logout : android.content.Intent logoutIntentVEx = new android.content.Intent(this, com.easysplit.mainview.UserLogin.class); startActivity(logoutIntentVEx); return true; default : return super.onOptionsItemSelected(item); } } 
public com.studiohartman.jamepad.ControllerState getState(int index) throws java.lang.IllegalStateException { verifyInitialized(); <BUGS> if ((index < (controllers.length)) && (index < 0)) { <BUGE> update(); return com.studiohartman.jamepad.ControllerState.getInstanceFromController(controllers[index]); }else { return com.studiohartman.jamepad.ControllerState.getDisconnectedControllerInstance(); } } 
@java.lang.Override <BUGS> public void onValueChange(com.google.gwt.event.logical.shared.ValueChangeEvent<java.lang.String> event) { setDirty(true); org.gwtbootstrap3.client.ui.TextBox box = ((org.gwtbootstrap3.client.ui.TextBox) (event.getSource())); org.gwtbootstrap3.client.ui.FormGroup group = ((org.gwtbootstrap3.client.ui.FormGroup) (box.getParent())); validate(param, box, group); <BUGE> } 
private void setProfileLowQuality(com.example.vasskob.mycamera.utils.PictureSize videoSize, boolean isAudioOn) { android.media.CamcorderProfile profile = android.media.CamcorderProfile.get(CamcorderProfile.QUALITY_480P); <BUGS> setVideoRateParams(profile, 1); mMediaRecorder.setVideoSize(videoSize.width(), videoSize.height()); <BUGE> if (isAudioOn) { setAudioParams(profile); } <BUGS> <BUGE> } 
private void Disconnect() { if ((connectDevice) == null) BroadcastError(Constants.MBOTSERVICE_DISCONNECT_RESULT_ACTION, Constants.MBOTSERVICE_ERROR_NO_DEVICE_CONNECT); else { try { socket.close(); <BUGS> android.bluetooth.BluetoothDevice device = connectDevice; BroadcastResult(Constants.MBOTSERVICE_DISCONNECT_RESULT_ACTION, Constants.BLUETOOTH_DEVICE, device); <BUGE> } catch (java.io.IOException e) { <BUGS> BroadcastError(Constants.MBOTSERVICE_DISCONNECT_RESULT_ACTION, e); } finally { Cleanup(); serialAdapter.Shutdown(); <BUGE> } <BUGS> <BUGE> } } 
@java.lang.Override public void reduce(org.apache.hadoop.io.Text word, java.lang.Iterable<org.apache.hadoop.io.IntWritable> counts, com.moz.commoncrawl.Context context) throws java.io.IOException, java.lang.InterruptedException { int sum = 0; for (org.apache.hadoop.io.IntWritable count : counts) { sum += count.get(); } <BUGS> if (((threshold) != (-1)) && (sum > (threshold))) <BUGE> context.write(word, new org.apache.hadoop.io.IntWritable(sum));  } 
public static java.util.Map<java.lang.String, java.lang.String> getInvertedModIdMap() { <BUGS> if ((com.compomics.denovogui.io.PepNovoModificationFile.modIdMap) == null) { com.compomics.denovogui.io.PepNovoModificationFile.fillModIdMap(); } if ((com.compomics.denovogui.io.PepNovoModificationFile.invertedModIdMap) == null) { com.compomics.denovogui.io.PepNovoModificationFile.invertedModIdMap = new java.util.HashMap<java.lang.String, java.lang.String>(); for (java.util.Map.Entry<java.lang.String, java.lang.String> entry : com.compomics.denovogui.io.PepNovoModificationFile.modIdMap.entrySet()) { com.compomics.denovogui.io.PepNovoModificationFile.invertedModIdMap.put(entry.getValue(), entry.getKey()); } <BUGE> } return com.compomics.denovogui.io.PepNovoModificationFile.invertedModIdMap; } 
public void updateWithGridEntry(com.graphhopper.routing.util.probabilistic.GridEntry gridEntry) { <BUGS> for (int edge : gridEntry.getEdges()) { edgeCache.put(edge, gridEntry); } <BUGE> synchronized(entries) { if (!(entries.add(gridEntry))) { for (com.graphhopper.routing.util.probabilistic.GridEntry entry : entries) { if (entry.equals(gridEntry)) { entry.updateValues(gridEntry.getValues()); } } <BUGS> <BUGE> } } } 
<BUGS> @com.fasterxml.jackson.annotation.JsonPropertyOrder(value = { "name" , "_id" , "values" }) <BUGE> public static int printRecord(java.lang.String[] args) throws com.fasterxml.jackson.core.JsonProcessingException, java.lang.NullPointerException { org.paces.Stata.Data.Meta dbg = new org.paces.Stata.Data.Meta(args); java.lang.Long obid = java.lang.Long.valueOf(com.stata.sfi.Macro.getLocalSafe("obid")); org.paces.Stata.Data.DataRecord x = new org.paces.Stata.Data.DataRecord(obid, dbg); <BUGS> org.paces.Stata.JSON.StataJSON.toJSON(x.getData()); <BUGE> x = null; obid = null; dbg = null; return 0; } 
<BUGS> private void backNavigation() { <BUGE> boolean popped = getSupportFragmentManager().popBackStackImmediate(); if (popped) { com.swerly.wifiheatmap.FragmentBase curFrag = ((com.swerly.wifiheatmap.FragmentBase) (fragmentManager.findFragmentById(R.id.fragment_container))); fabHelper.setupFab(curFrag, true); }else { finish(); } } 
@java.lang.Override public io.dropwizard.auth.AuthFactory<java.lang.Object, T> clone(boolean required) { io.dropwizard.auth.ChainedAuthFactory<T> clone = new io.dropwizard.auth.ChainedAuthFactory<>(); for (io.dropwizard.auth.AuthFactory<?, T> factory : factories) { <BUGS> clone.addChainedProvider(factory.clone(true)); <BUGE> } return clone; } 
<BUGS> public void signUp(java.lang.String uname, java.lang.String pass, java.lang.String email) { <BUGE> try { java.sql.PreparedStatement pst = connection.prepareStatement("INSERT INTO users (uname, email, pass) VALUES (?, ?, ?)"); pst.setString(1, uname); pst.setString(2, email); pst.setString(3, pass); pst.execute(); } catch (java.sql.SQLException e) { e.printStackTrace(); } } 
<BUGS> private void makeSmall() { <BUGE> for (int i = 0; i < (first.adapter.vList.size()); i++) { ((android.widget.TextView) (first.adapter.vList.get(i))).setTextSize(TypedValue.COMPLEX_UNIT_SP, 70); } } 
private java.lang.String getChromosomalChange(org.apache.commons.csv.CSVRecord record) { <BUGS> return ((((("chr" + (record.get(options.getChr()))) + ":") + (record.get(options.getPos()))) + (record.get(options.getRef()))) + ">") + (record.get(options.getAlt())); <BUGE> } 
@java.lang.Override public void onSpinnerItemSelected(android.widget.Spinner spinner, int position) { if ((spinner.getId()) == (org.droidplanner.android.R.id.cameraFileSpinner)) { <BUGS> <BUGE> com.o3dr.services.android.lib.drone.mission.item.complex.CameraDetail cameraInfo = cameraAdapter.getItem(position); for (T survey : getMissionItems()) { survey.getSurveyDetail().setCameraDetail(cameraInfo); } onScrollingEnded(mAnglePicker, 0, 0); } } 
protected java.lang.Integer doInBackground(java.lang.String... params) { <BUGS> java.lang.Integer responseCode = 0; <BUGE> try { javax.ws.rs.core.MultivaluedMap map = new com.sun.jersey.core.util.MultivaluedMapImpl(); map.add("username", params[0]); map.add("latitude", params[1]); map.add("longitude", params[2]); crm.geoalertapp.crm.geoalertapp.utilities.RestClient tc = new crm.geoalertapp.crm.geoalertapp.utilities.RestClient(map); <BUGS> responseCode = tc.postForResponseCode("location/update"); <BUGE> } catch (java.lang.Exception e) { e.printStackTrace(); } <BUGS> return responseCode; <BUGE> } 
<BUGS> protected static java.lang.String readHeaderString(byte[] buffer) { <BUGE> int i = 0; while ((i < (buffer.length)) && (!(webserver.ParseTools.endOfHeader(buffer, (i - 1))))) { i++; } return new java.lang.String(buffer, 0, i); } 
public void zoomOut() { if ((zoom) > 0.4) { zoom -= 0.3; xDif = 0; yDif = 0; }else { <BUGS> <BUGE> if (isMoon) { Main.state = Main.State.PLANETRY; }else { Main.state = Main.State.SOLAR; } } } 
public void addPizza(com.preproduction.delivery.domain.Pizza pizza) { if ((orderSize) < (com.preproduction.delivery.domain.Order.MAX_ORDER_SIZE)) { (orderSize)++; for (com.preproduction.delivery.domain.OrderDetails od : pizzas) { if (od.getPizza().equals(pizza)) { od.setQuantity(((od.getQuantity()) + 1)); return ; } } <BUGS> pizzas.add(new com.preproduction.delivery.domain.OrderDetails(pizza, 1)); <BUGE> } } 
@java.lang.Override protected void applyUpgrade() { if ((main.Scoreboard.XP()) >= (upgradeCost())) { main.Scoreboard.modXP((-(upgradeCost()))); items.Gun g = ((items.Gun) (gui.Controller.getPlayer().getWeapons().get(1))); <BUGS> gui.Controller.getPlayer().replaceWeapon(1, new items.Gun(g.fireRate(), g.spareAmmo(), g.MAX_AMMO, g.RELOAD_FACTOR, false)); <BUGE> } } 
public static at.ezylot.IncrementalBallGame.MovableCircle createMovableCircle(double x, double y, double radius) { java.lang.String[] colors = new java.lang.String[]{ "green" , "blue" , "orange" , "grey" , "brown" }; java.lang.String color = colors[new java.util.Random().nextInt(colors.length)]; <BUGS> return new at.ezylot.IncrementalBallGame.MovableCircle(x, y, radius, javafx.scene.paint.Paint.valueOf(color), new java.util.Random().nextInt(359), Main.RootStage.getScene()); <BUGE> } 
public void idle(com.esotericsoftware.kryonet.Connection conn) { final T connection = classTag.cast(conn); final java.util.List<com.esotericsoftware.kryonet.adapters.Listener<? super T>> listeners = this.listeners; <BUGS> for (int i = 0, n = listeners.size(); i < n; i++) { listeners.get(i).idle(connection); <BUGE> if (!(connection.isIdle())) break;  } } 
public final synchronized jogamp.opengl.GLBufferStorage mapBuffer(final int bufferName, final long offset, final long length, final int access, final jogamp.opengl.GLBufferObjectTracker.MapBufferRangeDispatch dispatch, final long glProcAddress) throws jogamp.opengl.GLException { <BUGS> return this.mapBufferImpl(0, bufferName, true, false, 0, 0, access, dispatch, glProcAddress); <BUGE> } 
<BUGS> private long encode(java.lang.String input) { <BUGE> java.lang.String rtn = ""; java.lang.String first5 = input.toLowerCase().concat("      ").substring(0, 5); <BUGS> int ascii; <BUGE> for (int i = 0; i < 5; ++i) { <BUGS> ascii = ((int) (first5.charAt(i))); <BUGE> rtn = rtn.concat(java.lang.String.valueOf(ascii)); } <BUGS> return java.lang.Long.parseLong(rtn); <BUGE> } 
@org.junit.Test public void testFindByMessageAuthor() { in.shekhar.forumapp.domain.Message message = new in.shekhar.forumapp.domain.Message("test_user", "hello world"); messageRepository.save(message); java.util.List<in.shekhar.forumapp.domain.Message> messages = messageRepository.findByMessageAuthor("test_user"); assertNotNull(messages); assertFalse(messages.isEmpty()); assertEquals(1, messages.size()); <BUGS> <BUGE> } 
public static final short readShortLittleEndian(byte[] array, int pos) { <BUGS> short result = 0; result += (array[(pos + 1)]) & 255; <BUGE> result <<= 8; <BUGS> result += (array[pos]) & 255; <BUGE> return result; } 
@java.lang.Override protected void onPostExecute(java.lang.Object result) { bIsRunning = false; if ((listener) != null) { <BUGS> listener.onDone(method.getName()); <BUGE> } if (((asyncCallback) != null) && (hasSentResult)) { hasSentResult = false; asyncCallback.onResult(err, rs); } } 
<BUGS> private boolean confirmDeleteProjects(org.eclipse.core.resources.IResource[] resources) { <BUGE> org.eclipse.ui.actions.DeleteResourceAction.DeleteProjectDialog dialog = new org.eclipse.ui.actions.DeleteResourceAction.DeleteProjectDialog(shellProvider.getShell(), resources); dialog.setTestingMode(fTestingMode); int code = dialog.open(); deleteContent = dialog.getDeleteContent(); return code == 0; } 
@java.lang.Override protected void onPause() { super.onPause(); unregisterReceiver(); if (isAnimatingRefreshButton) { isAnimatingRefreshButton = false; } if (mShouldFinish) { overridePendingTransition(0, 0); finish(); } <BUGS> mScrollPositionManager.saveToPreferences(this, org.wordpress.android.ui.WPDrawerActivity.SCROLL_POSITION_ID); <BUGE> } 
public void accelerate(double timedelta) { traffic_sim.Vehicle in_front = current_lane.getVehicleInFront(this); <BUGS> if (((in_front == null) && ((current_lane.getDistanceToEnd(position)) > 0)) || ((in_front != null) && ((getFrontVehicleDistance(in_front)) >= (2 * (Lane.min_car_distance))))) { <BUGE> current_velocity += timedelta * (ACCEL); current_velocity = ((current_velocity) > (MAX_VELOCITY)) ? MAX_VELOCITY : current_velocity; } } 
private boolean isAlreadyMerged(com.google.gerrit.server.git.CodeReviewCommit commit) throws java.io.IOException { try (com.google.gerrit.server.git.CodeReviewCommit.CodeReviewRevWalk mirw = com.google.gerrit.server.git.CodeReviewCommit.newRevWalk(rw.getObjectReader())) { mirw.reset(); mirw.markStart(commit); for (org.eclipse.jgit.revwalk.RevCommit accepted : alreadyAccepted) { <BUGS> if (mirw.isMergedInto(mirw.parseCommit(accepted), mirw.parseCommit(commit))) { <BUGE> return true; } } } return false; } 
long getZobristKey(java.util.HashSet<java.lang.String> wPawns, java.util.HashSet<java.lang.String> bPawns) { long zobristKey = 0; for (java.lang.String wPos : wPawns) zobristKey ^= wZobrist.get(wPos);  <BUGS> for (java.lang.String bPos : wPawns) <BUGE> zobristKey ^= bZobrist.get(bPos);  return zobristKey; } 
public void update() { if ((hp) < (maxHP)) { hp += hpRegin; } if ((hp) > (maxHP)) { hp = maxHP; } <BUGS> <BUGE> if ((stamina) < (maxStam)) { stamina += stamRegin; } if ((stamina) > (maxStam)) { stamina = maxStam; } <BUGS> <BUGE> } 
public synchronized void newChar(char c) { ngram.putChar(c); java.lang.String s = ngram.getString(); if (s != null) { <BUGS> java.lang.Integer currentNumber = numberOfNgrams.get(s); <BUGE> if (currentNumber == null) { <BUGS> currentNumber = 1; <BUGE> }else { currentNumber++; } numberOfNgrams.put(s, currentNumber); } } 
public static void appendFile(java.lang.String content, java.lang.String fileName) { java.io.File file = cn.j1angvei.castk2.util.FileUtil.createFileIfNotExist(fileName); try { <BUGS> assert file != null; <BUGE> org.apache.commons.io.FileUtils.write(file, content, java.nio.charset.Charset.defaultCharset(), true); } catch (java.io.IOException e) { e.printStackTrace(); } } 
@java.lang.Override public void execute() { <BUGS> models.NotificationCounter.incrementConversationsCount(recipient.id); <BUGE> if (firstMessage) { <BUGS> <BUGE> email.SendgridEmailClient.getInstatnce().sendMailOnConversation(sender, recipient, message.conversation.post.title, message.body); } mobile.GcmSender.sendNewMessageNotification(recipient.id, sender.name, message.body); } 
<BUGS> private static java.lang.String readUntilNonEmptyLine(java.io.BufferedReader r) { <BUGE> java.lang.String line = null; try { while ((line = r.readLine()) != null) { if ((line.length()) > 0) { return (line + " ") + (edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet.readUntilEmptyLine(r)); } } } catch (java.io.IOException e) { return null; } return null; } 
@java.lang.Override public void onBackPressed() { android.support.v4.widget.DrawerLayout drawer = ((android.support.v4.widget.DrawerLayout) (findViewById(getDrawerLayoutId()))); if (drawer.isDrawerOpen(GravityCompat.START)) { drawer.closeDrawer(GravityCompat.START); }else { <BUGS> finish(); startActivity(new android.content.Intent(this, onBackActivity())); overridePendingTransition(0, 0); <BUGE> } } 
@java.lang.Override public void pause() { <BUGS> com.hustunique.parsingplayer.util.LogUtil.d(com.hustunique.parsingplayer.player.media.ParsingMediaManager.TAG, "pause called"); <BUGE> mBitmap = mRenderView.getBitmap(); com.hustunique.parsingplayer.util.LogUtil.v(com.hustunique.parsingplayer.player.media.ParsingMediaManager.TAG, ((((("paused, cache thumbnail " + (mBitmap)) + " from ") + (mRenderView)) + " size ") + (mBitmap.getByteCount()))); mCurrentPlayerProxy.pause(); } 
public boolean keyboardMashChecker(java.lang.String currentInput) { boolean hasMash = false; <BUGS> if ((((currentInput.equals("sdf")) || (currentInput.equals("dfg"))) || (currentInput.equals("cvb"))) || (currentInput.equals(",./"))) { <BUGE> hasMash = true; } return hasMash; } 
@java.lang.Override public void writeToParcel(android.os.Parcel dest, int flags) { <BUGS> dest.writeString(title); dest.writeString(genre); dest.writeString(posterPath); dest.writeString(plot); dest.writeString(releaseDate); dest.writeDouble(userRating); dest.writeLong(id); <BUGE> } 
protected void onActivityResult(int requestCode, int resultCode, android.content.Intent data) { <BUGS> <BUGE> switch (requestCode) { case 1 : if (resultCode == (android.app.Activity.RESULT_OK)) { int switchNum = data.getIntExtra(com.example.scanitgrocerystorehelper.MainActivity.DELETE_SWITCH, 0); if (switchNum != 0) { long newNum = data.getLongExtra(com.example.scanitgrocerystorehelper.MainActivity.KEY_LIST_ID, 0); if (newNum != 0) deleteList(mSqlAdapter.getList(newNum));  } } } } 
public void viewBlocks(GameInfo.Environment.Blocks.BlockBase[][] blocks) { for (int x = 0; x < (blocks.length); x++) { for (int y = 0; y < (blocks[x].length); y++) { <BUGS> if ((blocks[x][y]) == null) { <BUGE> java.lang.System.out.print("NULL|"); }else { java.lang.System.out.print("GOOD|"); } } java.lang.System.out.println(); } } 
@java.lang.Override public void run() { <BUGS> if (this.stash.containsKey(item)) { final java.util.Set<java.util.UUID> uuids = this.stash.get(item); uuids.remove(player); if (uuids.isEmpty()) this.stash.remove(item);  <BUGE> } } 
@org.junit.Test public void shouldInstallAndUnInstallPuppetModule() { <BUGS> com.xebialabs.deployit.plugin.api.udm.Deployed<?, ?> deployed = getDeployed("1.5.0"); <BUGE> org.junit.Assert.assertThat(getSteps(deployed).size(), org.hamcrest.CoreMatchers.equalTo(2)); com.xebialabs.deployit.plugin.api.udm.DeployedApplication puppetModuleApp = newDeployedApplication("puppetlabs-apache", "1.5.0", deployed); assertInitial(puppetModuleApp); getPuppetModuleListCommandOutput(); assertModuleInstallAndVersionCheck(com.xebialabs.deployit.plugin.puppet.module.APACHE_MODULE_VERSION_1_5_0); assertUndeploy(puppetModuleApp); getPuppetModuleListCommandOutput(); org.junit.Assert.assertThat(executionContext.getCapturedOutput(), hasItem(not(containsString("puppetlabs-apache")))); } 
public eu.eexcess.dataformats.result.ResultList generateFederatedRecommendation(eu.eexcess.dataformats.userprofile.SecureUserProfile secureUserProfile) throws java.io.FileNotFoundException { eu.eexcess.dataformats.result.ResultList resultList = null; <BUGS> java.util.ArrayList<java.lang.String> sourceSelectors = new java.util.ArrayList<>(); java.util.Collections.addAll(sourceSelectors, federatedRecConfiguration.sourceSelectors); secureUserProfile = sourceSelection(secureUserProfile, sourceSelectors); <BUGE> try { resultList = getAndAggregateResults(secureUserProfile, this.federatedRecConfiguration.defaultPickerName); } catch (eu.eexcess.federatedrecommender.utils.FederatedRecommenderException e) { eu.eexcess.federatedrecommender.FederatedRecommenderCore.logger.log(java.util.logging.Level.SEVERE, "Some error retrieving or aggregation results occured.", e); } return resultList; } 
public void addNew(uk.ac.ucl.excites.sapelli.collector.transmission.SendSchedule schedule) { if (schedule != null) { schedule.setEnabled(true); save(schedule, true); <BUGS> refresh(); <BUGE> }else toggleConfigGroup(true, (!(listScheduleAdapter.isEmpty())));  } 
@java.lang.SuppressWarnings(value = "unchecked") @javax.annotation.Nullable @java.lang.Override public <T> T getCapability(@javax.annotation.Nullable net.minecraftforge.common.capabilities.Capability<T> capability, @javax.annotation.Nullable net.minecraft.util.EnumFacing facing) { <BUGS> return ((facing == (net.minecraft.util.EnumFacing.DOWN)) || (facing == null)) && (capability == (net.minecraftforge.energy.CapabilityEnergy.ENERGY)) ? ((T) (energyStorage)) : null; <BUGE> } 
public static <T> T parse(java.lang.String in, java.lang.Class<T> mapTo) { try { net.minidev.json.parser.JSONParser p = new net.minidev.json.parser.JSONParser(net.minidev.json.parser.JSONParser.DEFAULT_PERMISSIVE_MODE); return p.parse(in, net.minidev.json.JSONValue.defaultReader.getMapper(mapTo)); } catch (java.lang.Exception e) { <BUGS> e.printStackTrace(); <BUGE> return null; } } 
private java.util.ArrayList<Node> getMovableNeighbours() { java.util.ArrayList<Node> movableNeighbours = new java.util.ArrayList<Node>(); for (Node node : currNode.getNeighbours()) { <BUGS> if (!(visitedNodes.contains(node))) { <BUGE> movableNeighbours.add(node); } } return movableNeighbours; } 
public int getStats(java.lang.String route, int stat) { int output = 0; switch (route) { case "conquest" : { output = conquest[stat]; <BUGS> <BUGE> } case "birthright" : { output = birthright[stat]; <BUGS> <BUGE> } case "revelations" : { output = revelations[stat]; <BUGS> <BUGE> } } return output; } 
<BUGS> public static com.sk89q.worldedit.CuboidClipboard getSchematic(java.lang.String schematicName) { <BUGE> java.io.File dir = new java.io.File(schematicName); com.sk89q.worldedit.schematic.SchematicFormat schematic = com.sk89q.worldedit.schematic.SchematicFormat.getFormat(dir); <BUGS> com.sk89q.worldedit.CuboidClipboard clipboard = null; <BUGE> try { clipboard = schematic.load(dir); } catch (com.sk89q.worldedit.data.DataException | java.io.IOException e) { e.printStackTrace(); } dir = null; schematic = null; return clipboard; } 
private android.content.Intent createShareTips() { java.lang.String send = java.lang.String.valueOf(array[counter]); android.content.Intent shareIntent = new android.content.Intent(android.content.Intent.ACTION_SEND); shareIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET); shareIntent.setType("text/plain"); <BUGS> shareIntent.putExtra(Intent.EXTRA_TEXT, (send + (com.app.cryptotunnel.nutriplan.HealthTips.APP_SHARE_HASHTAG))); <BUGE> return shareIntent; } 
void updateSymbols(java.lang.String prefix) { <BUGS> <BUGE> for (com.topodroid.DistoX.EnableSymbol symbol : mItems) { if (symbol.MustSave()) { symbol.mSymbol.setEnabled(symbol.mEnabled); TopoDroidApp.mData.setSymbolEnabled((prefix + (symbol.mSymbol.getThName())), symbol.mSymbol.isEnabled()); } } } 
<BUGS> public synchronized long registerOperationWithHeapSize(long heapSize) throws java.lang.InterruptedException { <BUGE> long operationId = ++(operationSequenceGenerator); while (((currentWriteBufferSize) >= (maxHeapSize)) || ((pendingOperationsWithSize.size()) >= (maxInFlightRpcs))) { wait(com.google.cloud.bigtable.hbase.BigtableBufferedMutator.WAIT_MILLIS); } lastOperationChange = java.lang.System.currentTimeMillis(); pendingOperationsWithSize.put(operationId, heapSize); currentWriteBufferSize += heapSize; return operationId; } 
<BUGS> boolean insertUserChild(java.lang.String userId, long childId, int isOwner, int canEdit, java.lang.String childTimeStamp) { <BUGE> android.database.sqlite.SQLiteDatabase db = this.getWritableDatabase(); android.content.ContentValues childUserTableContent = new android.content.ContentValues(); childUserTableContent.put(baps.DatabaseHelper.UC_USER_ID, userId); childUserTableContent.put(baps.DatabaseHelper.UC_CHILD_ID, childId); childUserTableContent.put(baps.DatabaseHelper.UC_ISOWNER, isOwner); long result2 = db.insert(baps.DatabaseHelper.BAPS_USERCHILD_TABLE, null, childUserTableContent); return result2 != (-1); } 
private int getRealParametersCount(java.lang.reflect.Method m) { int c = 0; for (java.lang.Class<?> t : m.getParameterTypes()) { <BUGS> if (((((t != (fr.lteconsulting.pomexplorer.Client.class)) && (t != (fr.lteconsulting.pomexplorer.WorkingSession.class))) && (t != (fr.lteconsulting.pomexplorer.commands.CommandOptions.class))) && (t != (fr.lteconsulting.pomexplorer.commands.FilteredGAVs.class))) && (t != (fr.lteconsulting.pomexplorer.ILogger.class))) <BUGE> c++;  } return c; } 
@java.lang.Override public long nextRoundingValue(long time) { <BUGS> long currentWithoutPostZone = postTz.convertLocalToUTC(time, true); <BUGE> long local = preTz.convertUTCToLocal(currentWithoutPostZone); long nextLocal = durationField.add(local, 1); <BUGS> return postTz.convertUTCToLocal(preTz.convertLocalToUTC(nextLocal, true)); <BUGE> } 
@java.lang.Override public void readFields(java.io.DataInput dis) throws java.io.IOException { int length = dis.readInt(); byte[] bytes = new byte[length]; dis.readFully(bytes); this.key = bytes; this.deletedAt = dis.readLong(); boolean hasAtom = dis.readBoolean(); if (hasAtom) { this.atom = serializer.deserializeFromSSTable(dis, ColumnSerializer.Flag.PRESERVE_SIZE, java.lang.Integer.MIN_VALUE, version); <BUGS> <BUGE> } } 
public void accept(android.view.View view) { <BUGS> android.content.SharedPreferences sharedPreferences = getSharedPreferences(MainActivity.KEY_SETTINGS_TEG, Context.MODE_PRIVATE); <BUGE> android.content.SharedPreferences.Editor editor = sharedPreferences.edit(); editor.putString(MainActivity.KEY_VK, urlReader.getText().toString()); editor.commit(); android.content.Intent intent = new android.content.Intent(this, com.example.ivan.scoolguesohack.MainActivity.class); startActivity(intent); } 
public long ipToLong(java.lang.String ipString) { long ipLong = 0; long ip; java.lang.String[] ipArray = ipString.split("\\."); <BUGS> for (int i = 3; i >= 0; i--) { ip = java.lang.Long.parseLong(ipArray[(3 - i)]); <BUGE> ipLong |= ip << (i * 8); } return ipLong; } 
private void processIntent() { android.os.Bundle b = getIntent().getExtras(); <BUGS> if ((org.bottiger.podcast.activities.feedview.FeedActivity.mFuckItHack) != null) b = org.bottiger.podcast.activities.feedview.FeedActivity.mFuckItHack;  <BUGE> boolean isSlim = b.getBoolean(org.bottiger.podcast.activities.feedview.FeedActivity.FEED_ACTIVITY_IS_SLIM); java.lang.String url = b.getString(org.bottiger.podcast.activities.feedview.FeedActivity.SUBSCRIPTION_URL_KEY); if (isSlim) { mSubscription = b.<org.bottiger.podcast.provider.SlimImplementations.SlimSubscription>getParcelable(org.bottiger.podcast.activities.feedview.FeedActivity.SUBSCRIPTION_SLIM_KEY); mIsSlimSubscription = true; }else { mSubscription = org.bottiger.podcast.SoundWaves.getLibraryInstance().getSubscription(url); mIsSlimSubscription = false; } } 
<BUGS> private void setupGit() throws java.io.IOException { hudson.plugins.git.UserRemoteConfig config = new hudson.plugins.git.UserRemoteConfig(repositoryUrl, null, null, null); <BUGE> java.util.List<hudson.plugins.git.UserRemoteConfig> configs = new java.util.ArrayList<hudson.plugins.git.UserRemoteConfig>(); configs.add(config); hudson.plugins.git.GitSCM git = new hudson.plugins.git.GitSCM(configs, null, false, null, null, null, null); project.setScm(git); } 
public static java.util.Map<java.lang.String, java.lang.Object> sendRequest(java.lang.String subUrl, java.lang.String gid) throws java.io.IOException { <BUGS> java.lang.StringBuffer url = new java.lang.StringBuffer(com.paypal.musictag.dao.usingwebservice.api.CoverArtArchiveAPI.URL).append(subUrl).append(gid); <BUGE> java.net.URL requestUrl = new java.net.URL(url.toString()); java.lang.String json = com.paypal.musictag.util.MusicTagUtil.getJsonFromURL(requestUrl); <BUGS> java.util.Map<java.lang.String, java.lang.Object> map = com.paypal.musictag.util.MusicTagUtil.jsontoMap(json); return map; <BUGE> } 
@java.lang.Override public void onDataChange(com.google.firebase.database.DataSnapshot dataSnapshot) { final java.util.List<com.example.finalproject.Model.Dessert> dessertList = new java.util.LinkedList<com.example.finalproject.Model.Dessert>(); for (com.google.firebase.database.DataSnapshot dstSnapshot : dataSnapshot.getChildren()) { com.example.finalproject.Model.Dessert dessert = dstSnapshot.getValue(com.example.finalproject.Model.Dessert.class); if ((maxKey[0]) < (dessert.getId())) { <BUGS> (maxKey[0])++; <BUGE> } dessertList.add(dessert); } listener.onComplete(dessertList, maxKey[0]); } 
public void run() { <BUGS> while (true) { com.bmc.justdoit.smartkanban.api.objects.KanbanGeneratorRequest request = ((com.bmc.justdoit.smartkanban.api.objects.KanbanGeneratorRequest) (KanbanQueue.CREATOR_QUEUE.poll())); if (request == null) { continue; } <BUGE> java.lang.System.out.println(("Got a request to create >>>>>>>> " + request)); com.bmc.justdoit.smartkanban.kanban.creator.KanbanCreator kanbanCreator = new com.bmc.justdoit.smartkanban.kanban.creator.KanbanCreator(request); java.lang.Thread th = new java.lang.Thread(kanbanCreator); th.start(); <BUGS> } <BUGE> } 
public void checkCollisions() { java.util.ArrayList<Game.Enemy> enemies = Game.StartMenu.getEnemyList(); <BUGS> for (int i = 0; i < (enemies.size()); i++) { <BUGE> if (getBounds().intersects(enemies.get(i).getBounds())) { ey = 0; enemiesKilled += 1; } } } 
private static int[] quickSortH(int[] data, int start, int end) { if (start < end) { int index = Quick.part(data, start, end); <BUGS> Quick.quickSortH(data, start, (index - 1)); <BUGE> Quick.quickSortH(data, (index + 1), end); } return data; } 
public java.util.Set<decc.dht.Key> get(decc.dht.Key k) { <BUGS> clean(); <BUGE> java.util.Map<decc.dht.Key, java.lang.Long> rts = routes.get(k); java.util.Set<decc.dht.Key> ks = null; if (rts != null) ks = rts.keySet();  return ks; } 
@java.lang.Override public void add(T t) { if ((root) == null) { <BUGS> <BUGE> root.setValue(t); root.setPosition(UtilConstant.START_INDEX); }else { xlp.util.genric.list.Element<T> newElement = new xlp.util.genric.list.Element(); newElement.setNode(root); <BUGS> <BUGE> newElement.setPosition(root.getNextPosition()); root = newElement; } } 
synchronized void draw() { if (((mAllSongHistoryList) == null) || ((mAdapter) == null)) { return ; } mAllSongHistoryList = mSongHistoryController.getManagedTimeline(mRealm); mItemList = createItemList(0, 30); <BUGS> mAdapter.updateDataSet(mItemList); <BUGE> if ((mLoading) != null) { mLoading.setVisibility(View.INVISIBLE); } <BUGS> <BUGE> } 
public void addLast(Item item) { if (item == null) throw new java.lang.NullPointerException();  final Deque<Item>.Node oldlast = last; last = new Node(item); if ((size) == 0) { last.next = null; last.prev = null; first = last; }else { oldlast.next = last; last.prev = oldlast; last.next = null; <BUGS> if ((size) == 1) first.next = last;  <BUGE> } (size)++; } 
@java.lang.Override public com.fsck.k9.mail.Folder getFolder(java.lang.String serverId) { if (getStoreSyncKey().equals(com.fsck.k9.mail.store.eas.EasStore.INITIAL_SYNC_KEY)) { try { getInitialFolderList(); } catch (com.fsck.k9.mail.MessagingException e) { <BUGS> timber.log.Timber.e("Exception encountered while fetching the initial folder list", e); <BUGE> } } synchronized(mFolderList) { if (mFolderList.isEmpty()) { syncFoldersFromLocalStore(); } return mFolderList.get(serverId); } } 
@java.lang.Override public void addPlayer(java.lang.String playerName, int balance, int playerID) { java.awt.Color[] colors = new java.awt.Color[]{ java.awt.Color.BLUE , java.awt.Color.WHITE , java.awt.Color.MAGENTA , java.awt.Color.YELLOW , java.awt.Color.BLACK , java.awt.Color.GREEN }; <BUGS> desktop_codebehind.Car car = new desktop_codebehind.Car.Builder().primaryColor(colors[playerID]).secondaryColor(colors[(5 - playerID)]).build(); <BUGE> desktop_resources.GUI.addPlayer(playerName, balance, car); desktop_resources.GUI.setCar(1, playerName); } 
public void clientDisconnected(client.Client client) { java.util.List<client.Client> lostRouteClients; synchronized(syncRoot) { if (!(cache.contains(client))) { return ; } lostRouteClients = removeClient(client); } callbacks.onClientDisconnected(client); for (client.Client c : lostRouteClients) { <BUGS> callbacks.onClientLostRoute(c, c.getRoute()); <BUGE> } } 
private void setPostParameters(java.lang.String namespace, java.lang.String command, org.cytoscape.command.AvailableCommands available, io.swagger.models.Operation operation) { io.swagger.models.parameters.BodyParameter parameter = new io.swagger.models.parameters.BodyParameter(); parameter.setName("body"); org.cytoscape.rest.internal.resource.CyRESTCommandSwagger.CommandModel model = new org.cytoscape.rest.internal.resource.CyRESTCommandSwagger.CommandModel(namespace, command, available); <BUGS> parameter.setRequired((!(model.properties.isEmpty()))); <BUGE> parameter.setSchema(model); operation.addParameter(parameter); } 
@java.lang.Override <BUGS> public void handle(com.sun.net.httpserver.HttpExchange exchange) throws java.io.IOException { <BUGE> mmKNIME.core.logMessage("µmKNIME: Handling overview request."); <BUGS> java.util.Scanner scanner = new java.util.Scanner(getFileStream()).useDelimiter("\\A"); java.lang.String response = (scanner.hasNext()) ? scanner.next() : ""; <BUGE> exchange.sendResponseHeaders(200, response.length()); <BUGS> java.io.OutputStream os = exchange.getResponseBody(); <BUGE> os.write(response.getBytes()); <BUGS> os.flush(); <BUGE> os.close(); } 
@java.lang.Override public android.support.v4.content.Loader<android.database.Cursor> onCreateLoader(int id, android.os.Bundle args) { java.lang.String sortOrder = getSortOrder(); <BUGS> <BUGE> if (sortOrder.equals(getActivity().getString(R.string.pref_sort_favorites))) { sortOrder = (MoviesContract.MoviesEntry.COLUMN_POPULARITY) + " DESC"; } return new android.support.v4.content.CursorLoader(getActivity(), MoviesContract.MoviesEntry.CONTENT_URI, null, null, null, sortOrder); } 
@java.lang.Override <BUGS> public org.apache.lucene.util.LongBitSet acceptedGlobalOrdinals(org.apache.lucene.index.RandomAccessOrds globalOrdinals, org.elasticsearch.search.aggregations.support.ValuesSource.Bytes.WithOrdinals valueSource) throws java.io.IOException { <BUGE> org.apache.lucene.util.LongBitSet acceptedGlobalOrdinals = new org.apache.lucene.util.LongBitSet(globalOrdinals.getValueCount()); org.apache.lucene.index.TermsEnum globalTermsEnum; org.apache.lucene.index.Terms globalTerms = new org.elasticsearch.search.aggregations.bucket.terms.support.IncludeExclude.DocValuesTerms(globalOrdinals); globalTermsEnum = compiled.getTermsEnum(globalTerms); for (org.apache.lucene.util.BytesRef term = globalTermsEnum.next(); term != null; term = globalTermsEnum.next()) { acceptedGlobalOrdinals.set(globalTermsEnum.ord()); } return acceptedGlobalOrdinals; } 
private void resetConfirmation() { if ((confirmation) != null) { getSupportFragmentManager().beginTransaction().remove(confirmation).commit(); confirmation = null; <BUGS> getAllCar(); <BUGE> new it.familiyparking.app.task.AsyncTaskGCM().execute(user, this); } } 
private edu.uci.eecs.wukong.framework.model.InitValue extractInitValue(int start) { short componentId = edu.uci.eecs.wukong.framework.util.WKPFUtil.getLittleEndianShort(buffer, start); byte propertyNumber = buffer[(start + 2)]; <BUGS> propertyNumber++; <BUGE> byte size = buffer[(start + 3)]; byte[] val = new byte[size]; java.lang.System.arraycopy(buffer, (start + 4), val, 0, size); <BUGS> edu.uci.eecs.wukong.framework.model.InitValue value = new edu.uci.eecs.wukong.framework.model.InitValue(componentId, propertyNumber, val); <BUGE> return value; } 
@java.lang.Override <BUGS> public void flatMap(org.wikipedia.citolytics.clickstream.types.ClickStreamResult r, org.apache.flink.util.Collector<org.apache.flink.api.java.tuple.Tuple2<java.lang.String, java.lang.Integer>> out) throws java.lang.Exception { <BUGE> if ((r.getRecommendationsCount()) > 0) { <BUGS> out.collect(new org.apache.flink.api.java.tuple.Tuple2(r.getRecommendations().get(0).getRecommendedArticle(), 1)); <BUGE> } } 
<BUGS> public static java.lang.String emailsMinusYou(com.zulip.android.models.List<com.zulip.android.models.Person> people, com.zulip.android.models.Person you) { com.zulip.android.models.ArrayList<java.lang.String> names = new com.zulip.android.models.ArrayList(); <BUGE> for (com.zulip.android.models.Person person : people) { if ((person.id) != (you.id)) { names.add(person.getEmail()); } } return android.text.TextUtils.join(", ", names); } 
@java.lang.SuppressWarnings(value = "Duplicates") private static void upload(int port) throws java.lang.Exception { byte[] sendData = new byte[1024]; java.util.Scanner input = new java.util.Scanner(java.lang.System.in); while (input.hasNextLine()) { sendData = input.nextLine().getBytes(); <BUGS> <BUGE> } <BUGS> csci4311.nc.NetcatUDPClient.clientSocket.send(new java.net.DatagramPacket(sendData, sendData.length, csci4311.nc.NetcatUDPClient.ipAddress, port)); <BUGE> } 
private void checkAnswer(java.lang.String userEnterAnswer) { java.lang.String answer = myHiraganaSet[myCurrentIndex].getMyAnswer(); int messageResId = 0; <BUGS> if (answer == userEnterAnswer) <BUGE> messageResId = R.string.correct_toast; else messageResId = R.string.incorrect_toast;  android.widget.Toast.makeText(this, messageResId, Toast.LENGTH_SHORT).show(); } 
public static boolean isOpened(java.lang.String p_SPS_BC_Request_UUID) { <BUGS> <BUGE> if (p_SPS_BC_Request_UUID == null) return false;  if ((org.spinsuite.bchat.view.FV_Thread.m_Request.getSPS_BC_Request_UUID()) == null) return false;  if ((org.spinsuite.bchat.view.FV_Thread.m_Request.getSPS_BC_Request_UUID()) == null) return false;  return (org.spinsuite.bchat.view.FV_Thread.m_Request.getSPS_BC_Request_UUID().equals(p_SPS_BC_Request_UUID)) && (org.spinsuite.bchat.view.FV_Thread.m_IsActive); } 
@org.junit.Test public void testTOFANullOptionSeqRemoval() throws br.cefetmg.jquest.model.exception.BusinessException, br.cefetmg.jquest.model.exception.PersistenceException { try { this.tofa.setOptionSeq(null); br.cefetmg.jquest.model.service.TrueOrFalseAnswerManagementImplTest.tofaManagement.remove(tofa.getOptionSeq()); } catch (br.cefetmg.jquest.model.exception.BusinessException | br.cefetmg.jquest.model.exception.PersistenceException ex) { <BUGS> java.lang.String msgErr = ex.getMessage(); <BUGE> java.lang.String msgEsperada = "No Answer ID was informed"; org.junit.Assert.assertTrue(msgErr.contains(msgEsperada)); return ; } org.junit.Assert.fail("Update of null TrueOrFalseAnswer ID"); } 
@java.lang.Override public void onTextChanged(java.lang.CharSequence charSequence, int i, int i1, int i2) { <BUGS> if ((!(dch07y.getText().toString().isEmpty())) || (!(dch07m.getText().toString().isEmpty()))) { <BUGE> dch07.clearCheck(); dch0796x.setText(null); dch0796x.setVisibility(View.GONE); } } 
public void precheck() { com.emc.sa.service.vipr.block.ExportBlockVolumeHelper.precheckExportPathParameters(minPaths, maxPaths, pathsPerInitiator); <BUGS> com.emc.sa.service.vipr.block.ExportBlockVolumeHelper.precheckPortGroupParameter(null, virtualPool, portGroup); <BUGE> if (com.emc.sa.service.vipr.block.BlockStorageUtils.isHost(hostId)) { host = com.emc.sa.service.vipr.block.BlockStorageUtils.getHost(hostId); }else { cluster = com.emc.sa.service.vipr.block.BlockStorageUtils.getCluster(hostId); } com.emc.sa.service.vipr.block.BlockStorageUtils.checkEvents(((host) != null ? host : cluster)); } 
@java.lang.Override <BUGS> <K, V> org.ehcache.Ehcache<K, V> createNewEhcache(final java.lang.String alias, final org.ehcache.config.CacheConfiguration<K, V> config, final java.lang.Class<K> keyType, final java.lang.Class<V> valueType, java.util.Deque<org.ehcache.Releasable> releasables) { final org.ehcache.Ehcache<K, V> ehcache = super.createNewEhcache(alias, config, keyType, valueType, releasables); <BUGE> return org.mockito.Mockito.spy(ehcache); } 
@javafx.fxml.FXML private void buttonBackspace(javafx.event.ActionEvent event) { if ((inputText.length()) > 0) { inputText = inputText.substring(0, ((inputText.length()) - 1)); <BUGS> textFieldResults.setText(inputText); <BUGE> } } 
@java.lang.Override public void onClick(android.view.View v) { com.example.android.groceries2.MainActivity.dbHelper.deleteListTable(listVersion); <BUGS> com.example.android.groceries2.ItemsFragment.refreshItemsCursor(); com.example.android.groceries2.ListFragment.refreshListCursor(); com.example.android.groceries2.LogFragment.refreshLogCursor(); <BUGE> android.content.Intent intent = new android.content.Intent(this, com.example.android.groceries2.MainActivity.class); intent.putExtra("tab", 2); startActivity(intent); android.widget.Toast.makeText(this, (listName + " deleted"), Toast.LENGTH_SHORT).show(); } 
public java.lang.Object dispatchMethod(java.lang.Object host, com.panda.kylin.Kylin kylin, java.lang.String methodName, java.lang.Object[] params) throws java.lang.IllegalAccessException, java.lang.reflect.InvocationTargetException { for (java.lang.reflect.Method method : getClass().getDeclaredMethods()) { com.panda.kylin.PatchMethodName patchMethodName = method.getAnnotation(com.panda.kylin.PatchMethodName.class); if ((methodName.hashCode()) == (patchMethodName.value().hashCode())) { <BUGS> return method.invoke(kylin); <BUGE> } } return null; } 
public int takeNumberFromUser(int width, int height) { java.lang.String userInput = java.lang.Integer.toString(takeNumberFromUser(3)); try { if (((java.lang.Integer.parseInt(userInput)) > width) || ((java.lang.Integer.parseInt(userInput)) > height)) throw new java.lang.IllegalArgumentException();  return java.lang.Integer.parseInt(userInput); } catch (java.lang.IllegalArgumentException iae) { <BUGS> out.writeOut(((("printWrongSequenceHeightWidth" + width) + "x") + height)); <BUGE> return takeNumberFromUser(width, height); } } 
@java.lang.Override public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) { android.view.View rootView = inflater.inflate(R.layout.fragment_friends_tab_requests, container, false); tabFriendRequestContext = getActivity(); layoutFriendRequestList = ((android.widget.LinearLayout) (rootView.findViewById(R.id.layoutFriendRequestsList))); <BUGS> layoutFriendRequestList.removeAllViews(); <BUGE> listFriendRequests.clear(); retrieveFriendRequests(); return rootView; } 
private double entropy(double p) { if ((p == 0) || (p == 1)) { return 1; }else { <BUGS> return (((-p) * (java.lang.Math.log(p))) / (java.lang.Math.log(2))) - (((1 - p) * (java.lang.Math.log((1 - p)))) / (java.lang.Math.log(2))); <BUGE> } } 
public void setFirstRowAsColumnNames() { final org.cytoscape.tableimport.internal.ui.PreviewTablePanel.PreviewTableModel model = ((org.cytoscape.tableimport.internal.ui.PreviewTablePanel.PreviewTableModel) (getPreviewTable().getModel())); model.setFirstRowNames(true); <BUGS> types = org.cytoscape.tableimport.internal.util.TypeUtil.guessTypes(importType, model, dataTypes); <BUGE> updatePreviewTable(); org.cytoscape.util.swing.ColumnResizer.adjustColumnPreferredWidths(getPreviewTable()); } 
private static void sendMessage(javafx.event.ActionEvent e) { java.lang.String sender = AsxGame.activePlayer.email; <BUGS> java.lang.String recipient = com.amazonaws.samples.UI_Mailbox.toField.getText(); <BUGE> java.lang.String subject = com.amazonaws.samples.UI_Mailbox.subjectField.getText(); java.lang.String body = com.amazonaws.samples.UI_Mailbox.bodyField.getText(); if (com.amazonaws.samples.Game.sendMessage(sender, recipient, subject, body)) { com.amazonaws.samples.UI_Mailbox.toField.setText(""); com.amazonaws.samples.UI_Mailbox.subjectField.setText(""); com.amazonaws.samples.UI_Mailbox.bodyField.setText(""); }else { com.amazonaws.samples.UI_Mailbox.toField.setText("Message not sent, sorry!"); } } 
<BUGS> public void move(int x, int y, final java.lang.String activityClass) { <BUGE> for (com.zst.xposed.halo.floatingwindow3.tasks.WindowHolder mWindowHolder : activitiesStack.get(activityClass)) { if (mWindowHolder != null) { mWindowHolder.position(x, y); mWindowHolder.pushToWindow(); } } } 
@java.lang.Override public java.lang.String toString() { <BUGS> return org.pac4j.core.util.CommonHelper.toString(this.getClass(), "client", client, "key", key, "secret", secret, "tokenAsHeader", tokenAsHeader, "connectTimeout", connectTimeout, "readTimeout", readTimeout, "responseType", responseType, "scope", scope, "api", api, "hasGrantType", hasGrantType, "service", service, "hasBeenCancelledFactory", hasBeenCancelledFactory, "profileDefinition", profileDefinition); <BUGE> } 
private int calculateAverageSteps(java.util.List<grimesmea.gmail.com.pricklefit.DailyStepsDTO> dailyStepTotals) { long totalSteps = 0; int totalDays = 0; for (grimesmea.gmail.com.pricklefit.DailyStepsDTO dailyStepsDTO : dailyStepTotals) { totalSteps += dailyStepsDTO.getSteps(); totalDays++; } <BUGS> return ((int) (totalSteps)) / totalDays; <BUGE> } 
private static synchronized void removePropertyFromSharedPrefs(java.lang.String key) { if ((com.indicative.client.java.android.Indicative.getInstance().context) == null) { android.util.Log.v("Indicative", "Indicative instance has not been initialized; not adding common prop"); return ; } android.content.SharedPreferences prefs = com.indicative.client.java.android.Indicative.getInstance().context.getSharedPreferences(com.indicative.client.java.android.Indicative.PROPS_PREFS, Context.MODE_PRIVATE); <BUGS> prefs.edit().remove(key); <BUGE> } 
@java.lang.Override public void run() { byte[] buffer = new byte[1024]; java.net.DatagramPacket packet = new java.net.DatagramPacket(buffer, buffer.length); isRunning = true; while (isRunning) { try { socket.receive(packet); java.lang.String msg = new java.lang.String(buffer, 0, packet.getLength()); <BUGS> <BUGE> } catch (java.io.IOException e) { break; } } } 
@java.lang.Override public java.lang.String toString() { <BUGS> return ((((((((("JavascriptConsoleResultBase [renderedTemplate=" + (renderedTemplate)) + ", spaceNodeRef=") + (spaceNodeRef)) + ", spacePath=") + (spacePath)) + ", scriptPerformance=") + (scriptPerformance)) + ", freemarkerPerformance=") + (freemarkerPerformance)) + "]"; <BUGE> } 
<BUGS> private void playerPassword(org.bukkit.entity.Player p, java.lang.String password) { <BUGE> if (((password.length()) < 5) || ((password.length()) > 50)) { p.sendMessage("Your password must be between 5 and 50 characters in length."); return ; } config("playerpasswords").set(p.getName(), password); if (saveConfig("playerpasswords")) p.sendMessage("Your password has been set."); else p.sendMessage("An error occurred while trying to save your password. Please try again later.");  } 
@java.lang.Override public java.lang.String getSubAwardXmlFileData() { if ((subAwardXmlFileData) != null) { return subAwardXmlFileData.get(); } byte[] newData = getKcAttachmentDao().getData(xmlDataId); <BUGS> java.lang.String newString = new java.lang.String(newData); <BUGE> subAwardXmlFileData = new java.lang.ref.SoftReference<java.lang.String>(newString); return newString; } 
private boolean match(org.cloudish.borg.model.Task task) { <BUGS> if ((task.isAntiAffinity()) && (jidAllocated.contains(task.getJid()))) { <BUGE> return false; } for (org.cloudish.borg.model.TaskConstraint constraint : task.getConstraints()) { org.cloudish.borg.model.HostAttribute hostAtt = attributes.get(constraint.getAttName()); if ((hostAtt == null) || (!(hostAtt.match(constraint)))) { return false; } } return true; } 
@java.lang.Override public void showFinishOperation(com.liferay.mobile.screens.assetlist.AssetEntry assetEntry) { com.liferay.mobile.screens.assetdisplay.AssetDisplayFactory factory = new com.liferay.mobile.screens.assetdisplay.AssetDisplayFactory(); com.liferay.mobile.screens.base.BaseScreenlet screenlet = factory.getScreenlet(getContext(), assetEntry); if (screenlet != null) { addView(screenlet, LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT); <BUGS> <BUGE> } <BUGS> com.liferay.mobile.screens.util.LiferayLogger.e("Error loading screenlet"); <BUGE> } 
@org.junit.Test public void findAllBetweenDates_shouldFindDateGivenSingleDayRange() { net.binarycreations.apod.domain.AstroPick expected = fromDate(net.binarycreations.apod.domain.dao.SqliteAstroPickDaoIntegrationTest.DATE_10_11_15); sut.insert(expected); java.util.List<net.binarycreations.apod.domain.AstroPick> actual = sut.findAllBetweenDates(net.binarycreations.apod.domain.dao.SqliteAstroPickDaoIntegrationTest.DATE_10_11_15, net.binarycreations.apod.domain.dao.SqliteAstroPickDaoIntegrationTest.DATE_10_11_15); <BUGS> assertFalse(actual.isEmpty()); <BUGE> assertAstroPickEquals(expected, actual.get(0)); } 
@ita.o2o.controller.restful.ResponseBody @ita.o2o.controller.restful.RequestMapping(value = "/reject") public java.lang.String reject(java.lang.Integer orderId) { java.lang.System.out.println(("/reject orderId:" + orderId)); ita.o2o.controller.restful.Order order = orderService.getOrderById(orderId); ita.o2o.entity.extra.Status status = statusService.getById(O2OConstants.STATUS_REJECTED); ita.o2o.util.bean.ResponseMessage responseMessage = new ita.o2o.util.bean.ResponseMessage(); <BUGS> <BUGE> if (orderService.updateOrder(order)) { responseMessage.setStatus(O2OConstants.SUCCESS); }else { responseMessage.setStatus(O2OConstants.FAILURE); } return jsonMapper.writeObjectAsString(responseMessage); } 
private com.intellij.xdebugger.impl.evaluate.EvaluationInputComponent createInputComponent(com.intellij.xdebugger.evaluation.EvaluationMode mode, com.intellij.xdebugger.impl.evaluate.XExpression text) { final com.intellij.openapi.project.Project project = mySession.getProject(); text = com.intellij.xdebugger.impl.breakpoints.XExpressionImpl.changeMode(text, mode); if (mode == (com.intellij.xdebugger.evaluation.EvaluationMode.EXPRESSION)) { <BUGS> return new com.intellij.xdebugger.impl.evaluate.ExpressionInputComponent(project, myEditorsProvider, mySourcePosition, text); <BUGE> }else { return new com.intellij.xdebugger.impl.evaluate.CodeFragmentInputComponent(project, myEditorsProvider, mySourcePosition, text, myDisposable); } } 
@java.lang.Override public void onItemClick(int viewId, int position) { switch (viewId) { case R.id.task_card_text_open : <BUGS> if (position != (-1)) { <BUGE> mTaskRecyclerAdapter.getItems().remove(position); mTaskRecyclerAdapter.notifyItemRemoved(position); } break; case R.id.task_card_text : mTaskRecyclerAdapter.getItems().set(position, new com.org.runaway.sharetodo.data.TaskState.AssignedTaskState()); mTaskRecyclerAdapter.notifyItemChanged(position); break; default : break; } } 
protected java.lang.String generateCode(java.lang.String message) { message = message.toUpperCase(); <BUGS> java.lang.StringBuilder codedMessage = new java.lang.StringBuilder(""); <BUGE> for (int i = 0; i < (message.length()); i++) { java.lang.String val = morseCode.get(message.charAt(i)); if (val != null) { codedMessage.append(val); codedMessage.append(" "); }else return null;  } return codedMessage.toString(); } 
public void sendMessage(android.view.View v) { android.content.Intent searchIntent = new android.content.Intent(this, com.bminor.officebarkaroake.PerformSearchActivity.class); android.widget.EditText parm = ((android.widget.EditText) (findViewById(R.id.editText_searchText))); java.lang.String queryString = parm.getText().toString(); java.lang.String typeString = determineCheckedButton(); <BUGS> if (typeString != "all") queryString.trim(); else queryString = ""; <BUGE>  searchIntent.putExtra(com.bminor.officebarkaroake.MainActivity.SEARCH_TYPE, typeString); searchIntent.putExtra(com.bminor.officebarkaroake.MainActivity.SEARCH_STRING, queryString); startActivity(searchIntent); } 
protected final int getLineStart(java.lang.String line) { int index = 0; <BUGS> while (java.lang.Character.isWhitespace(line.charAt(index))) { <BUGE> index++; } return com.puppycrawl.tools.checkstyle.utils.CommonUtils.lengthExpandedTabs(line, index, indentCheck.getIndentationTabWidth()); } 
@java.lang.Override public void onActivityResult(int requestCode, int resultCode, android.content.Intent data) { if (resultCode != (android.app.Activity.RESULT_OK)) { return ; } <BUGS> if (requestCode == (com.csci448.freshapps.keepitfresh.ItemListFragment.REQUEST_OPTION)) { com.csci448.freshapps.keepitfresh.SortOptions option = ((com.csci448.freshapps.keepitfresh.SortOptions) (data.getSerializableExtra(SortOptionsDialogFragment.EXTRA_SORT_OPTION))); updateUI(option); <BUGE> } } 
@java.lang.Override public boolean onMouseDown(com.totemdefender.input.MouseEvent event) { if (pointIsInBounds(event.mousePosition)) { for (com.totemdefender.menu.Component cmp : components) { <BUGS> if (cmp instanceof com.totemdefender.menu.TextEntry) { java.lang.System.out.println(worldToLocal(event.mousePosition)); } <BUGE> if (cmp.pointIsInBounds(worldToLocal(event.mousePosition))) { setFocus(cmp); return cmp.onMouseDown(event); } } }else { java.lang.System.out.println("OUT BOUNDS"); } return false; } 
@java.lang.Override public boolean extract(java.lang.String args) { int i = args.indexOf("\n"); <BUGS> if (i > 0) { <BUGE> ip = args.substring(0, i); <BUGS> id = decc.dht.Key.load(args.substring(i)); <BUGE> } return (i > 0) && (((args.length()) - i) > 0); } 
private static java.lang.String scanPassword() throws java.lang.IllegalArgumentException { <BUGS> <BUGE> java.util.Scanner sc = new java.util.Scanner(java.lang.System.in); <BUGS> java.lang.System.out.print("Input password: "); <BUGE> java.lang.String password; if (sc.hasNext()) { password = sc.nextLine(); }else { throw new java.lang.IllegalArgumentException("Invalid password value"); } return password; } 
@java.lang.Override public void frameLogic() { java.awt.Graphics2D g = ((java.awt.Graphics2D) (bufferStrategy.getDrawGraphics())); <BUGS> g.setRenderingHint(java.awt.RenderingHints.KEY_ANTIALIASING, java.awt.RenderingHints.VALUE_ANTIALIAS_OFF); <BUGE> g.setRenderingHint(java.awt.RenderingHints.KEY_TEXT_ANTIALIASING, java.awt.RenderingHints.VALUE_TEXT_ANTIALIAS_ON); g.setRenderingHint(java.awt.RenderingHints.KEY_RENDERING, java.awt.RenderingHints.VALUE_RENDER_SPEED); try { zeichner.render(g); } finally { g.dispose(); } try { bufferStrategy.show(); } catch (java.lang.IllegalStateException e) { e.printStackTrace(); } } 
@java.lang.Override public void onBindViewHolder(org.creativecommons.thelist.adapters.FeedAdapter.FeedViewholder holder, int position) { org.creativecommons.thelist.adapters.MainListItem l = listItems.get(position); holder.itemView.setVisibility(View.VISIBLE); holder.nameLabel.setText(l.getItemName()); holder.makerLabel.setText(("requested by " + (l.getMakerName()))); switch (getItemViewType(position)) { <BUGS> <BUGE> case org.creativecommons.thelist.adapters.FeedAdapter.DEFAULT_VIEW : holder.iconImageView.setImageResource(R.drawable.ic_camera_alt_grey600_24dp); <BUGS> break; case org.creativecommons.thelist.adapters.FeedAdapter.ERROR_VIEW : holder.iconImageView.setImageResource(R.drawable.ic_error_red_24dp); <BUGE> break; } holder.itemView.setTag(l); } 
@java.lang.Override public void onClick(android.view.View v) { localizationMonitoring.reset(); localizationView.setParticles(localizationMonitoring.getParticles()); <BUGS> <BUGE> localizationView.post(new java.lang.Runnable() { @java.lang.Override public void run() { localizationView.invalidate(); } }); } 
public static void findEvenOrOdd() { java.util.Scanner scanner = new java.util.Scanner(java.lang.System.in); java.lang.System.out.println(("This program will ask you for a number, and will then" + " tell you if it is even or odd")); int evenCheck; java.lang.System.out.println("Enter a number:"); int evenNum = scanner.nextInt(); evenCheck = evenNum % 2; if (evenCheck == 0) { java.lang.System.out.println("Even"); }else { java.lang.System.out.println("Odd"); } java.lang.System.out.println(""); <BUGS> scanner.close(); <BUGE> } 
@java.lang.SuppressWarnings(value = "rawtypes") <BUGS> public void checkMapResolve(java.util.Map object, java.lang.String fieldName) { <BUGE> if ((resolveStatus) == (com.alibaba.fastjson.parser.DefaultJSONParser.NeedToResolve)) { com.alibaba.fastjson.parser.ResolveFieldDeserializer fieldResolver = new com.alibaba.fastjson.parser.ResolveFieldDeserializer(object, fieldName); com.alibaba.fastjson.parser.DefaultJSONParser.ResolveTask task = getLastResolveTask(); task.fieldDeserializer = fieldResolver; task.ownerContext = context; resolveStatus = com.alibaba.fastjson.parser.DefaultJSONParser.NONE; } } 
public void removeOpenSession(javax.websocket.Session session) { synchronized(this) { openSessions.remove(session); if (((waiterCount) > 0) && (openSessions.isEmpty())) { notifyAll(); <BUGS> if ((doneTask) != null) { doneTask.run(); doneTask = null; } <BUGE> } } } 
private void initialization() { mHeaderLayout = new com.handler.HeaderLayout(this); mHeaderLayout.setHeaderIITII(R.drawable.icon_arrow_back_white, HeaderLayout.RES_NONE, HeaderLayout.RES_NONE, R.drawable.icon_search, R.drawable.icon_menu_white); mHeaderLayout.setListener(this, this, this, this); <BUGS> mBottomRl = ((android.widget.LinearLayout) (findViewById(R.id.bottom_ll))); <BUGE> android.view.View searchIv = findViewById(R.id.right_extra_ib); searchIv.setClickable(true); viewPager = ((android.support.v4.view.ViewPager) (findViewById(R.id.plan_vp))); } 
public java.lang.String createEditedCommentDetails() { teammates.ui.template.FeedbackResponseCommentRow frcRow = getComment(); <BUGS> java.lang.String editedCommentHeader = (((("From: " + (frcRow.getCommentGiverName())) + " [") + (frcRow.getCreatedAt())) + "] ") + (frcRow.getEditedAt()); return editedCommentHeader; <BUGE> } 
private void updateLowestPriorityAssignment() { mLowestPriorityConnection = null; for (audio.AudioManager.AudioOutputConnection connection : mAudioOutputConnections) { <BUGS> if ((connection.isConnected()) && (((mLowestPriorityConnection) == null) || ((mLowestPriorityConnection.getPriority()) > (connection.getPriority())))) { <BUGE> mLowestPriorityConnection = connection; } } } 
public java.lang.String getGenealogyString() { java.lang.String ret = ""; for (final int dt : genealogy) { if (dt == (com.jug.export.CellStatsExporter.SegmentRecord.UPPER)) { ret = ret + "T"; <BUGS> } if (dt == (com.jug.export.CellStatsExporter.SegmentRecord.LOWER)) { ret = ret + "B"; } if (dt == (com.jug.export.CellStatsExporter.SegmentRecord.UNKNOWN)) { ret = ret + "U"; } <BUGE> } return ret; } 
private static void interpretAsName(java.util.ArrayList<com.equinox.KeyParamPair> keyParamPairs, com.equinox.KeyParamPair currentPair) { <BUGS> <BUGE> int currentIndex = keyParamPairs.indexOf(currentPair); <BUGS> java.lang.String newName = com.equinox.Parser.appendParameters(keyParamPairs, 0, currentIndex); <BUGE> keyParamPairs.get(0).setParam(newName); } 
@java.lang.Override public java.lang.Object action() { java.lang.Object object = r.action(id, endpointClazz, customActionKey, requestJson, params); if (object == null) { <BUGS> return new io.yawp.commons.http.JsonResponse(""); <BUGE> } applyGetFacade(object); if (hasTransformer()) { return transform(object); } return object; } 
private static void setLogLevel(java.lang.String logLevel) { java.util.logging.Level level; try { level = java.util.logging.Level.parse(logLevel); } catch (java.lang.IllegalArgumentException e) { de.fosd.jdime.Main.LOG.warning(() -> "Invalid log level %s. Must be one of OFF, SEVERE, WARNING, INFO, CONFIG, FINE, FINER, FINEST or ALL."); return ; } <BUGS> java.util.logging.Logger root = java.util.logging.LogManager.getLogManager().getLogger(de.fosd.jdime.Main.class.getPackage().getName()); <BUGE> root.setLevel(level); for (java.util.logging.Handler handler : root.getHandlers()) { handler.setLevel(level); } } 
public org.unidal.dal.jdbc.datasource.JdbcDataSourceDescriptor getDescriptor(java.lang.String id) { org.unidal.dal.jdbc.datasource.JdbcDataSourceDescriptor configuration = m_descriptors.get(id); if (configuration == null) { <BUGS> if (((m_dataSources) != null) && (id != null)) { <BUGE> org.unidal.dal.jdbc.datasource.model.entity.DataSourceDef ds = m_dataSources.findDataSource(id); if (ds != null) { configuration = getDescriptor(ds); m_descriptors.put(id, configuration); } } } return configuration; } 
<BUGS> @java.lang.SuppressWarnings(value = "unchecked") private void insertIDandTypeforItemsBlock(org.json.simple.JSONObject itemsObject, java.lang.String schemaArrayItemsID, java.lang.String schemaArrayItemsType) { <BUGE> if (schemaArrayItemsID != null) { itemsObject.put(org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_ID, schemaArrayItemsID.replace("\\", "")); }else { itemsObject.put(org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_ID, ""); } itemsObject.put(org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_TYPE, schemaArrayItemsType); } 
@java.lang.Override public void onUpdate(android.content.Context context, android.appwidget.AppWidgetManager appWidgetManager, int[] appWidgetIds) { super.onUpdate(context, appWidgetManager, appWidgetIds); android.util.Log.d(Config.LOG_TAG, "Widget Update, Starting Service"); <BUGS> Config.context = context; <BUGE> context.startService(new android.content.Intent(context, com.mathi_amorim.emmanuel.metrictime.UpdateTimeService.class)); android.util.Log.d(Config.LOG_TAG, "Service Started"); } 
public java.lang.String check() { com.zoo.model.User user = userService.findUserById(login); <BUGS> if (user.isMyPassword(pass)) { <BUGE> userHolder.setUser(user); <BUGS> userService.saveUser(user); <BUGE> return java.lang.Boolean.TRUE.toString(); }else { return java.lang.Boolean.FALSE.toString(); } } 
<BUGS> private gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype getDataType(java.lang.String name) { <BUGE> org.springframework.data.mongodb.core.query.Criteria where = org.springframework.data.mongodb.core.query.Criteria.where("scope").is(Constant.SCOPE.HL7STANDARD).and("hl7Version").is(hl7Version).and("name").is(name); org.springframework.data.mongodb.core.query.Query qry = org.springframework.data.mongodb.core.query.Query.query(where); gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype dt = mongoOps.findOne(qry, gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype.class); return dt; } 
@java.lang.Override public void _save() { <BUGS> if ((picture) == null) { <BUGE> deletePicture(); <BUGS> }else { if ((fileId) != (picture.getUUID())) { deletePicture(); fileId = picture.getUUID(); } <BUGE> } super._save(); } 
private android.graphics.Bitmap loadImageFromFile(java.lang.String imageFileName) { android.graphics.Bitmap bitmap = null; try { java.io.File dir = android.os.Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_PICTURES); java.io.File imageFile = new java.io.File(dir, imageFileName); java.io.InputStream inputStream = new java.io.FileInputStream(imageFile); bitmap = android.graphics.BitmapFactory.decodeStream(inputStream); android.util.Log.d("tag", ("got image from cache: " + imageFileName)); } catch (java.io.FileNotFoundException e) { e.printStackTrace(); <BUGS> } catch (java.io.IOException e) { e.printStackTrace(); <BUGE> } return bitmap; } 
@org.support.project.aop.Aspect(advice = org.support.project.ormapping.transaction.Transaction.class) public void removeHook(java.lang.Integer mailHookId) { java.util.List<org.support.project.knowledge.entity.MailHookConditionsEntity> conditions = org.support.project.knowledge.dao.MailHookConditionsDao.get().selectOnHookId(mailHookId); for (org.support.project.knowledge.entity.MailHookConditionsEntity mailHookConditionsEntity : conditions) { org.support.project.knowledge.dao.MailHookConditionsDao.get().physicalDelete(mailHookConditionsEntity); } <BUGS> org.support.project.knowledge.dao.MailHooksDao.get().delete(mailHookId); <BUGE> } 
<BUGS> private void updateVersion(java.lang.Long slbId) { <BUGE> try { int current = buildInfoService.getCurrentTicket(slbId); buildInfoService.updateTicket(slbId, (current + 1)); } catch (java.lang.Exception e) { logger.error("Update Version Fail!", e); <BUGS> <BUGE> } } 
static void authenticate() { com.fhf.prkr.microclient.MainActivity.authenticated = false; com.fhf.prkr.microclient.MainActivity.network.sendpacket(com.fhf.prkr.microclient.MainActivity.network.MANAGEMENT, com.fhf.prkr.microclient.MainActivity.network.AUTHENTICATE, "", true); boolean requestFailed = false; while ((com.fhf.prkr.microclient.MainActivity.network.stillWaiting()) == 1) { if ((com.fhf.prkr.microclient.MainActivity.network.stillWaiting()) == 42) { requestFailed = true; break; } } if (!requestFailed) { <BUGS> com.fhf.prkr.microclient.MainActivity.network.startKeepAlive(); <BUGE> } } 
@java.lang.Override public void removeConfigurations(java.lang.String context) { java.util.Set<java.lang.String> itemNames = contextMap.get(context); if (itemNames != null) { for (java.lang.String itemName : itemNames) { java.util.Set<org.eclipse.smarthome.core.thing.link.ItemChannelLink> links = itemChannelLinkMap.remove(itemName); <BUGS> for (org.eclipse.smarthome.core.thing.link.ItemChannelLink removedItemChannelLink : links) { notifyListenersAboutRemovedElement(removedItemChannelLink); <BUGE> } } contextMap.remove(context); } } 
public void shutDown() { try { lookupService.shutDown(); } catch (java.lang.Throwable t) { org.apache.flink.runtime.query.QueryableStateClient.LOG.error("Failed to shut down KvStateLookupService", t); } try { kvStateClient.shutDown(); } catch (java.lang.Throwable t) { org.apache.flink.runtime.query.QueryableStateClient.LOG.error("Failed to shut down KvStateClient", t); } if ((actorSystem) != null) { try { actorSystem.shutdown(); } catch (java.lang.Throwable t) { <BUGS> org.apache.flink.runtime.query.QueryableStateClient.LOG.error("Failed to shut down ActorSystem"); <BUGE> } } } 
@java.lang.Override public void onResponse(retrofit2.Call<com.divyanshu.pixabayserverapi.callback.PixabayDataObject> call, retrofit2.Response<com.divyanshu.pixabayserverapi.callback.PixabayDataObject> response) { <BUGS> if (((response.body()) == null) && ((response.body().hits.size()) == 0)) { <BUGE> mainActivityView.showErrorMessage(R.string.no_image_error); return ; } mainActivityView.onImageListResponse(response.body().hits); } 
private java.lang.String resolveGroupKeyFromRuleMethod(java.lang.Object executable) throws java.lang.Exception { java.lang.reflect.Method methodWithGroupAnnotation = com.opnitech.rules.core.utils.AnnotationUtil.resolveMethodWithAnnotation(executable, com.opnitech.rules.core.annotations.group.GroupKey.class); if (methodWithGroupAnnotation == null) { return null; } java.lang.String groupKey = ((java.lang.String) (methodWithGroupAnnotation.invoke(executable))); <BUGS> if (org.apache.commons.lang3.StringUtils.isBlank(groupKey)) { <BUGE> com.opnitech.rules.core.utils.ExceptionUtil.throwIllegalArgumentException("Invalid Group Key method in the rule. A group method cannot return a blank String. Rule: ''{0}'', Group Key Method: ''{1}''", executable, methodWithGroupAnnotation.getName()); } return groupKey; } 
<BUGS> private void addAppointmentBinding(org.rapla.entities.domain.Appointment appRef, org.rapla.entities.domain.Allocatable alloc) { org.rapla.entities.storage.ReferenceInfo<org.rapla.entities.domain.Allocatable> allocationId = (alloc != null) ? alloc.getReference() : null; <BUGE> java.util.SortedSet<org.rapla.entities.domain.Appointment> set = appointmentMap.get(allocationId); if (set == null) { set = new java.util.TreeSet<org.rapla.entities.domain.Appointment>(new org.rapla.entities.domain.AppointmentStartComparator()); appointmentMap.put(allocationId, set); } set.add(appRef); } 
model.Position winningMove(common.boardclass.BoardClass<common.pattern.Threat> boardClass, common.StoneType attacker, int depth) { for (int i = 0; i <= depth; i++) { <BUGS> model.Position position = offend(boardClass, attacker, new java.util.HashMap<>(), depth); <BUGE> if (position != null) { return position; } } return null; } 
public void union(int v, int w) { int rv = root(v); int rw = root(w); <BUGS> int sv = size(rv); int sw = size(rw); <BUGE> if (sv > sw) { id[rw] = rv; size[rv] = sv + sw; }else { id[rv] = rw; size[rw] = sv + sw; } } 
@java.lang.Override public void enforce(final org.deidentifier.arx.framework.check.groupify.HashGroupifyDistribution distribution, final int numMaxSuppressedOutliers) { <BUGS> <BUGE> distribution.suppressWhileNotFulfilledBinary(new org.deidentifier.arx.framework.check.groupify.HashGroupifyDistribution.PrivacyCondition() { public org.deidentifier.arx.criteria.State isFulfilled(org.deidentifier.arx.framework.check.groupify.HashGroupifyDistribution distribution) { boolean fulfilled = org.deidentifier.arx.criteria.RiskBasedPrivacyCriterion.this.isFulfilled(distribution); if ((!fulfilled) && ((distribution.getNumOfSuppressedTuples()) > numMaxSuppressedOutliers)) { return State.ABORT; }else { return fulfilled ? State.FULFILLED : State.NOT_FULFILLED; } } }); } 
private java.lang.String saveBookmarkImageBitmap(android.graphics.Bitmap bitmap, java.lang.String postId, java.lang.String filename) { try { java.io.File file = createBookmarkImageFile(postId, filename); java.io.FileOutputStream fileOutputStream = new java.io.FileOutputStream(file); bitmap.compress(Bitmap.CompressFormat.JPEG, 90, fileOutputStream); fileOutputStream.flush(); fileOutputStream.close(); <BUGS> bitmap.recycle(); <BUGE> return file.getAbsolutePath(); } catch (java.io.IOException e) { e.printStackTrace(); } return null; } 
public void write(com.xenoage.utils.xml.XmlWriter writer) { writer.writeElementStart(com.xenoage.zong.musicxml.types.MxlMidiInstrument.elemName); writer.writeAttribute("id", id); writer.writeElementText("midi-channel", midiChannel); writer.writeElementText("midi-program", midiProgram); <BUGS> writer.writeElementText("volume", volume); <BUGE> writer.writeElementText("pan", pan); writer.writeElementEnd(); } 
<BUGS> private static boolean validatePriority(java.lang.String priority) { <BUGE> if (priority == null) { return false; } for (model.map.Priority p : model.map.Priority.values()) { if (p.toString().equals(priority)) return true;  } return false; } 
@org.springframework.web.bind.annotation.RequestMapping(method = org.springframework.web.bind.annotation.RequestMethod.GET, value = "/processingPages") public java.lang.String processingPage(org.springframework.ui.Model model, int pageNumber) { <BUGS> ecommerce.rmall.domain.Page<ecommerce.rmall.domain.Order> page = this.service.queryProcessingWithPage(0); <BUGE> java.util.List<ecommerce.rmall.domain.Station> stations = this.stationService.listAll(); model.addAttribute("CURRENT", "PROCESSING"); model.addAttribute("page", page); model.addAttribute("stations", stations); return "Order/processingPagination"; } 
protected void onPostExecute(android.graphics.Bitmap result) { if ((activity) != null) { <BUGS> activity.getImg_data().add(result); <BUGE> activity.upDateList(); }else if ((viewHolder) != null) { viewHolder.imageView.setImageBitmap(result); }  if ((imgData) != null) { imgData.setBitmap(result); activity.upDateList(); } } 
@java.lang.Override public void onClick(android.view.View v) { if (showBusStop.isSelected()) { showBusStop.setSelected(false); setAllNormalPinsVisibility(popBusStationPins, false); }else { showBusStop.setSelected(true); <BUGS> setAllNormalPinsVisibility(popBusStationPins, false); <BUGE> } } 
public static assignment3_DS.graph.Graph loadGraph(java.io.File nodeFile, java.io.File arcFile) { <BUGS> java.lang.System.out.print(((("loading nodes/ars from " + nodeFile) + " / ") + arcFile)); <BUGE> java.util.Map<java.lang.Integer, assignment3_DS.graph.Node> nodes = assignment3_DS.graph.CSVLoader.getNodes(nodeFile); java.util.List<assignment3_DS.graph.Arc> arcs = assignment3_DS.graph.CSVLoader.getArcs(arcFile, nodes); if (arcs == null) return null; else return new assignment3_DS.graph.Graph(nodes, arcs);  } 
<BUGS> private void setStatus(com.onaio.steps.model.Household household, com.onaio.steps.model.Member member, java.util.ArrayList<java.lang.String> row) { <BUGE> if ((((household.getSelectedMemberId()) == null) || (household.getSelectedMemberId().equals(""))) || (household.getSelectedMemberId().equals(java.lang.String.valueOf(member.getId())))) row.add(household.getStatus().toString()); else { row.add(com.onaio.steps.helper.Constants.SURVEY_NOT_SELECTED); } } 
public int[] getPlayerLocation(int id) { int[] pos = new int[2]; <BUGS> java.lang.String result = ""; <BUGE> int counter = 0; <BUGS> while ((gl.processCommand("MOVE W", id)) != "FAIL") { <BUGE> counter++; } pos[0] = 1 + counter; counter = 0; <BUGS> while ((gl.processCommand("MOVE N", id)) != "FAIL") { <BUGE> counter++; } pos[1] = 1 + counter; return pos; } 
@org.mifos.beyonicIntegration.service.BeyonicService.RequestMapping(value = "/collections", method = RequestMethod.POST, produces = org.springframework.http.MediaType.APPLICATION_JSON_VALUE, consumes = org.springframework.http.MediaType.APPLICATION_JSON_VALUE) public org.springframework.http.ResponseEntity<java.lang.String> receiveCollection(@org.mifos.beyonicIntegration.service.BeyonicService.RequestBody org.mifos.beyonicIntegration.service.BeyonicService.domain.CollectionNotification notif) { java.lang.System.out.println(notif.getData().toString()); try { receptionStatus = sendCollectionToGateway(notif, mfiProperties); } catch (java.io.IOException e) { e.printStackTrace(); } <BUGS> return new org.springframework.http.ResponseEntity<java.lang.String>("Collection received", org.springframework.http.HttpStatus.OK); <BUGE> } 
@java.lang.Override public boolean accept(java.io.File dir, java.lang.String name) { <BUGS> return (!(name.equals("instant-run"))) && (!(((name.endsWith(".json")) && (name.startsWith("horaris_"))) && (name.endsWith(endsWith)))); <BUGE> } 
public org.libsmith.anvil.time.TimePeriod addRandom(org.libsmith.anvil.time.TimePeriod origin, org.libsmith.anvil.time.TimePeriod bound) { <BUGS> java.util.concurrent.TimeUnit min = ((timeUnit.compareTo(this.getTimeUnit())) < 0) ? timeUnit : this.getTimeUnit(); <BUGE> return addRandom(origin.getDuration(min), bound.getDuration(min), min); } 
@java.lang.Override protected void onActivityResult(int requestCode, int resultCode, android.content.Intent imageReturnedIntent) { super.onActivityResult(requestCode, resultCode, imageReturnedIntent); switch (requestCode) { case SELECT_PHOTO : if (resultCode == (RESULT_OK)) { final android.net.Uri imageUri = imageReturnedIntent.getData(); mImageFilePath = com.amansoni.tripbook.util.ImageWrapper.getRealPathFromURI(this, imageUri); com.amansoni.tripbook.util.ImageWrapper.loadImageFromFile(this, mMainImage, mImageFilePath, 400); <BUGS> mTripbookItem.setThumbnail(mImageFilePath); <BUGE> } } } 
<BUGS> public void checkLex(java.lang.String input, int[] kinds) throws edu.umn.cs.melt.copper.runtime.logging.CopperParserException, java.io.IOException { <BUGE> java.util.List<wyvern.tools.parsing.coreparser.Token> tokens = new wyvern.tools.lexing.WyvernLexer().parse(new java.io.StringReader(input), "test input"); checkKinds(kinds, tokens); org.junit.Assert.assertEquals(input, concat(tokens)); <BUGS> <BUGE> } 
public void checkForGoAnywhere() { for (UltimateTicTacToe.BigTile big : bigTiles) { <BUGS> if (((big.numMarked) == 9) || (((big.winner) != 0) && ((idToPlayOn) == (big.id)))) { <BUGE> goAnywhere = true; } } } 
public boolean putChild(int groupPosition, int childPosition, long childId, boolean isChecked) { long packedPosition = android.widget.ExpandableListView.getPackedPositionForChild(groupPosition, childPosition); if (hasStableIds()) { java.lang.Long result = (isChecked) ? childIds.put(childId, packedPosition) : childIds.remove(childId); return result != null; }else { <BUGS> return isChecked ? childPositions.add(packedPosition) : childPositions.remove(packedPosition); <BUGE> } } 
@java.lang.Override public void releaseDevices(final java.util.Map<org.opendaylight.distributed.tx.api.DTXLogicalTXProviderType, java.util.Set<org.opendaylight.yangtools.yang.binding.InstanceIdentifier<?>>> deviceMap) { <BUGS> com.google.common.collect.Maps.asMap(this.txProviderMap.keySet(), new com.google.common.base.Function<org.opendaylight.distributed.tx.api.DTXLogicalTXProviderType, java.lang.Object>() { @javax.annotation.Nullable @java.lang.Override public java.lang.Object apply(@javax.annotation.Nullable org.opendaylight.distributed.tx.api.DTXLogicalTXProviderType logicalTXProviderType) { txProviderMap.get(logicalTXProviderType).releaseTransactionDevices(deviceMap.get(logicalTXProviderType)); return null; } }); <BUGE> } 
@java.lang.Override public void dragStop(com.badlogic.gdx.scenes.scene2d.InputEvent event, float x, float y, int pointer, com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload payload, com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Target target) { this.getActor().setVisible(true); for (com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Target oldTarget : validTargets) { <BUGS> <BUGE> dragDrop.removeTarget(oldTarget); } } 
public void clear() { mProcedureDefinitions.clear(); mProcedureReferences.clear(); <BUGS> mProcedureNameManager.clearUsedNames(); <BUGE> mCountOfReferencesWithReturn = 0; int obsCount = mObservers.size(); for (int i = 0; i < obsCount; ++i) { mObservers.get(i).onClear(); } } 
private java.lang.Runnable getTaskFromSharedQueue() { synchronized(tasks) { <BUGS> while ((tasks.isEmpty()) && (alive)) { <BUGE> try { tasks.wait(); } catch (java.lang.InterruptedException e) { } } <BUGS> if (!(alive)) { <BUGE> return null; } return tasks.removeFirst(); } } 
public static int[] parseIntArray(org.json.JSONArray arr) { <BUGS> <BUGE> int[] res = new int[arr.length()]; for (int i = 0; i < (arr.length()); i++) { res[i] = arr.optInt(i); } return res; } 
@java.lang.Override public java.lang.String getIsoDate(org.hisp.dhis.calendar.DateTimeUnit dateTimeUnit, org.hisp.dhis.calendar.Calendar calendar) { int month = dateTimeUnit.getMonth(); <BUGS> if (dateTimeUnit.isIso8601()) { month = calendar.fromIso(dateTimeUnit).getMonth(); } <BUGE> switch (month) { case 11 : return (dateTimeUnit.getYear()) + "NovS1"; case 5 : return (dateTimeUnit.getYear()) + "NovS2"; default : throw new java.lang.IllegalArgumentException(("Month not valid [11,5] " + month)); } } 
private void insertToElastic(java.util.Set<java.lang.String> tagList, java.lang.String newFileCheckSum, java.util.ArrayList<java.lang.String> parsedFile, java.lang.String[] locationCoordinates) { <BUGS> extractTags(tagList, newFileCheckSum, parsedFile); <BUGE> org.elasticsearch.common.xcontent.XContentBuilder json = elasticServer.elasticSearch.putJsonDocument(parsedFile, tagList, locationCoordinates); elasticServer.elasticSearch.insert(elasticServer.client, json, "documents", "file"); } 
private java.lang.String getElementID(final java.lang.String relativePath) { <BUGS> java.lang.String elementID = null; java.lang.String topicWithelement = null; <BUGE> final java.lang.String fragment = getFragment(relativePath); if (fragment != null) { <BUGS> topicWithelement = getFragment(relativePath); if ((topicWithelement.lastIndexOf(org.dita.dost.writer.SLASH)) != (-1)) { elementID = topicWithelement.substring(((topicWithelement.lastIndexOf(org.dita.dost.writer.SLASH)) + 1)); <BUGE> }else { <BUGS> elementID = topicWithelement; <BUGE> } } <BUGS> return elementID; <BUGE> } 
@java.lang.Override public void onResult(int requestCode, int resultCode, @android.support.annotation.Nullable android.content.Intent data) { if (((requestCode == (id)) && (resultCode != (android.app.Activity.RESULT_OK))) || (data == null)) { return ; } result = ru.spbau.mit.placenotifier.PlacePicker.getSelectedPoint(data); <BUGS> map.clear(); <BUGE> updateCamera(); } 
@org.junit.Test public void CompareTest() { java.util.Random rand = new java.util.Random(); tests.AbstractDaoFactory daoFact = new tests.DaoFactory(); tests.CompareDao dao = daoFact.getCompareDao(); for (int i = 0; i < 50; i++) { <BUGS> assertTrue(dao.playerComparison((((rand.nextFloat()) * ((max) - (min))) + (min)), "RB", "New York Jets", 1)); <BUGE> } } 
@java.lang.Override public void run() { for (unalcol.language.programming.lexer.Token t : changes) { <BUGS> doc.setCharacterAttributes(t.pos().offset(), t.endOffset(), doc.getStyle(token_style.get(t.type())), true); <BUGE> } } 
@java.lang.Override public int getZoneIdx(playground.michalm.zone.util.Node node) { org.matsim.api.core.v01.Coord coord = node.getCoord(); <BUGS> int r = ((int) (((coord.getY()) - (y0)) % (cellSize))); int c = ((int) (((coord.getX()) - (x0)) % (cellSize))); <BUGE> return (r * (cols)) + c; } 
@java.lang.Override public java.lang.String parse(java.lang.String[] parts) { java.lang.String opcode = instructionCodes.get(parts[0]); <BUGS> java.lang.String ft = getFloatRegister(parts[1]); <BUGE> java.lang.String fs = getFloatRegister(parts[2]); <BUGS> java.lang.String fd = getFloatRegister(parts[3]); <BUGE> java.lang.String format = "10000"; java.lang.String funct = "000000"; <BUGS> return ((((opcode + format) + fs) + ft) + fd) + funct; <BUGE> } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); <BUGS> setContentView(R.layout.activity_product_details); butterknife.ButterKnife.bind(this); <BUGE> android.support.v7.widget.Toolbar toolbar = ((android.support.v7.widget.Toolbar) (findViewById(R.id.toolbar))); setSupportActionBar(toolbar); getSupportActionBar().setDisplayHomeAsUpEnabled(true); product = getIntent().getParcelableExtra(Constants.PRODUCT_KEY); getSupportActionBar().setTitle(product.name); } 
@org.springframework.web.bind.annotation.RequestMapping(value = "/module/radiology/radiologyOrder.form", method = org.springframework.web.bind.annotation.RequestMethod.GET) protected org.springframework.web.servlet.ModelAndView getRadiologyOrderFormWithNewRadiologyOrder() { org.springframework.web.servlet.ModelAndView modelAndView = new org.springframework.web.servlet.ModelAndView("module/radiology/radiologyOrderForm"); if (org.openmrs.api.context.Context.isAuthenticated()) { org.openmrs.module.radiology.RadiologyOrder radiologyOrder = new org.openmrs.module.radiology.RadiologyOrder(); radiologyOrder.setStudy(new org.openmrs.module.radiology.Study()); modelAndView.addObject("order", new org.openmrs.Order()); modelAndView.addObject("isOrderActive", true); <BUGS> modelAndView.addObject("hasCompletedPerformedStatus", false); <BUGE> modelAndView.addObject("radiologyOrder", radiologyOrder); } return modelAndView; } 
@java.lang.Override public com.valkryst.VTerminal.component.RadioButton build() { checkState(); <BUGS> <BUGE> final com.valkryst.VTerminal.component.RadioButton radioButton = new com.valkryst.VTerminal.component.RadioButton(this); group.addRadioButton(radioButton); <BUGS> super.width = (text.length()) + 2; super.height = 1; <BUGE> return radioButton; } 
@java.lang.Override public void exitAssignStat(grammar.CracklParser.AssignStatContext ctx) { <BUGS> java.lang.System.out.println(ctx.getText()); <BUGE> analysis.Scope curScope = scopes.get(((scopes.size()) - 1)); analysis.Type lhsType = getType(ctx.target()); checkType(ctx.expr(), lhsType); curScope.addInitVar(ctx.getText()); } 
private boolean asyncSendAcknowledge(com.sun.messaging.jmq.jmsclient.ReadWritePacket pkt) { boolean synchronousReply = protocolHandler.isDirectModeTwoThreadWithSyncReplies(); if (synchronousReply) { return true; } long ackId = pkt.getConsumerID(); com.sun.messaging.jmq.jmsclient.AsyncSendCallback cb = ((com.sun.messaging.jmq.jmsclient.AsyncSendCallback) (requestMetaData.get(java.lang.Long.valueOf(ackId)))); <BUGS> <BUGE> if (cb == null) { return false; } cb.processCompletion(pkt, true); return true; } 
<BUGS> private static int getBlockOrFacadeMetadata(net.minecraft.world.IBlockAccess world, int x, int y, int z, int side) { <BUGE> net.minecraft.block.Block blk = world.getBlock(x, y, z); if (blk instanceof info.jbcs.minecraft.chisel.api.IFacade) { return ((info.jbcs.minecraft.chisel.api.IFacade) (blk)).getFacadeMetadata(world, x, y, z, side); } return world.getBlockMetadata(x, y, z); } 
public java.util.Hashtable<java.lang.String, java.lang.String> toHashTable() { return new java.util.Hashtable<java.lang.String, java.lang.String>() { { <BUGS> <BUGE> put(sns.teamcity.model.DiskSpaceSummary.TOTAL_SPACE, java.lang.String.valueOf(totalSpace)); <BUGS> put(sns.teamcity.model.DiskSpaceSummary.FREE_SPACE, java.lang.String.valueOf(freeSpace)); <BUGE> } }; } 
private void CheckConcate(java.lang.String value1, java.lang.String value2) { <BUGS> if ((!(value2.equals("null"))) || (value2.equals(""))) { <BUGE> java.lang.String value = (("      " + value1) + ":  ") + value2; result_concate = ((result_concate) + value) + "\n"; } } 
public void setHandLinearControlOnly(us.ihmc.robotics.robotSide.RobotSide robotSide) { <BUGS> boolean[] controlledPositionAxes = new boolean[]{ true , true , true }; boolean[] controlledOrientationAxes = new boolean[]{ false , false , false }; <BUGE> setHandControlledAxes(robotSide, controlledPositionAxes, controlledOrientationAxes); } 
public void sleep() { nachos.threads.Lib.assertTrue(conditionLock.isHeldByCurrentThread()); <BUGS> <BUGE> waitForCondQueue.add(nachos.threads.KThread.currentThread()); conditionLock.release(); <BUGS> boolean intStatus = nachos.threads.Machine.interrupt().disable(); <BUGE> nachos.threads.KThread.sleep(); nachos.threads.Machine.interrupt().restore(intStatus); conditionLock.acquire(); } 
public void onUpdate(android.content.Context context, android.appwidget.AppWidgetManager appWidgetManager, int[] appWidgetIds) { android.util.Log.v(com.apps.home.notewidget.widget.WidgetProvider.TAG, "onUpdate"); for (int appWidgetId : appWidgetIds) { if (isConfigured(context, appWidgetId)) { <BUGS> <BUGE> updateNote(context, appWidgetId); <BUGS> appWidgetManager.updateAppWidget(appWidgetId, updateWidgetListView(context, appWidgetId)); <BUGE> } } super.onUpdate(context, appWidgetManager, appWidgetIds); } 
@java.lang.Override public void onReceive(android.content.Context context, android.content.Intent data) { <BUGS> <BUGE> java.lang.String action = data.getAction(); if (action.equals(com.auth0.android.lock.Lock.AUTHENTICATION_ACTION)) { processEvent(data); }else if (action.equals(com.auth0.android.lock.Lock.CANCELED_ACTION)) { callback.onCanceled(); }  } 
public static android.app.AlertDialog showAlertDialog(android.content.Context context, int messageId, android.content.DialogInterface.OnClickListener positiveAction) { android.app.AlertDialog.Builder adb = new android.app.AlertDialog.Builder(context); <BUGS> adb.setTitle(R.string.msg_removeAllHistoryEntries); <BUGE> adb.setNegativeButton(context.getString(R.string.cancel), null); adb.setPositiveButton(context.getString(R.string.ok), positiveAction); return adb.show(); } 
public org.springframework.messaging.Message<java.lang.String> roundRobbin(org.springframework.messaging.Message<java.lang.String> message) { br.com.cinq.kafka.sample.kafka.KafkaPartitionerTransformer.rr = ((br.com.cinq.kafka.sample.kafka.KafkaPartitionerTransformer.rr) + 1) % (br.com.cinq.kafka.sample.kafka.KafkaPartitionerTransformer.ROUND_ROBBIN_FACTOR); <BUGS> java.lang.System.out.println(("HEADER FOR P" + (br.com.cinq.kafka.sample.kafka.KafkaPartitionerTransformer.rr))); <BUGE> return org.springframework.messaging.support.MessageBuilder.withPayload(message.getPayload().concat((" - P" + (br.com.cinq.kafka.sample.kafka.KafkaPartitionerTransformer.rr)))).setHeader("partitionId", br.com.cinq.kafka.sample.kafka.KafkaPartitionerTransformer.rr).build(); } 
public static void deleteTimer(final java.lang.String name) { <BUGS> synchronized(com.sb.elsinore.LaunchControl.timerLock) { java.util.Iterator<java.util.Timer> iterator = com.sb.elsinore.LaunchControl.timerList.iterator(); java.util.Timer tTimer; while (iterator.hasNext()) { tTimer = iterator.next(); if (tTimer.getName().equalsIgnoreCase(name)) { com.sb.elsinore.LaunchControl.timerList.remove(tTimer); } } } <BUGE> } 
@javafx.fxml.FXML private void dead() { this.pedroText.setText("c\u00ea morreu (t\u00e1 na vdd tu n morreu)\n(s\u00f3 perdeu todas as horas e o jogo)"); this.alunoText.setText("COMER BIFE DE F\u00ccGADO \n (aquela coisa mata de t\u00e3o ruim) mova o mouse"); this.dormirB.setDisable(true); this.estudarB.setDisable(true); this.dadinhoB.setDisable(true); this.next.setDisable(true); <BUGS> this.bg.setOnMouseMoved(( e) -> { java.lang.System.exit(0); }); <BUGE> } 
@java.lang.Override public void widgetSelected(org.eclipse.swt.events.SelectionEvent e) { for (org.nschmidt.ldparteditor.opengl.OpenGLRenderer renderer : org.nschmidt.ldparteditor.shells.editor3d.Editor3DWindow.renders) { org.nschmidt.ldparteditor.composites.Composite3D c3d = renderer.getC3D(); if (c3d.getLockableDatFileReference().equals(org.nschmidt.ldparteditor.project.Project.getFileToEdit())) { org.nschmidt.ldparteditor.data.VertexManager vm = c3d.getLockableDatFileReference().getVertexManager(); vm.addSnapshot(); loadSelectorSettings(); <BUGS> vm.selectAll(sels, false); <BUGE> vm.syncWithTextEditors(true); regainFocus(); return ; } } regainFocus(); } 
@org.junit.Test public void testGetChildrenModules_noChildren() { org.talend.core.model.process.INode node = org.mockito.Mockito.mock(org.talend.core.model.process.INode.class); org.talend.core.model.components.IComponent component = org.mockito.Mockito.mock(org.talend.core.model.components.IComponent.class); org.mockito.Mockito.when(node.getComponent()).thenReturn(component); org.mockito.Mockito.when(component.getName()).thenReturn("tLogRow"); <BUGS> java.util.List<org.talend.core.model.general.ModuleNeeded> childrenModules = org.talend.designer.core.utils.JavaProcessUtil.getChildrenModules(node, java.util.Collections.emptySet(), false, false); <BUGE> org.junit.Assert.assertTrue(childrenModules.isEmpty()); } 
public void DrawBoard(java.awt.Graphics g) { for (int r = 0; r < (board.length); r++) { for (int c = 0; c < (board[r].length); c++) { <BUGS> board[r][c].draw(g); <BUGE> } } } 
public int extractY(int y) { int py = (y + (UserInterface.Accordpanel.YP)) + 60; if (curAcc.isSixakk()) { py -= 110; py /= 50; }else { py -= 15 + 50; py /= 50; } <BUGS> java.lang.System.out.println(py); <BUGE> return py; } 
public static int findBytes(java.util.LinkedList<java.lang.Byte> arr, byte value) { int i = 0; <BUGS> while (((arr.get(i)) != value) && (i < (arr.size()))) <BUGE> i++;  if (i < (arr.size())) return i;  return -1; } 
public boolean initCamera(java.lang.String cam) { <BUGS> <BUGE> try { camera = new java.net.URL(cam); new java.lang.Thread(this).start(); } catch (java.net.MalformedURLException e) { e.printStackTrace(); } return (camera) != null; } 
@java.lang.Override public boolean equals(java.lang.Object obj) { if (obj instanceof data.Emotion) { data.Emotion em = ((data.Emotion) (obj)); <BUGS> return (em.name.equals(this.name)) && ((java.lang.Double.compare(em.intensity, this.intensity)) == 0); <BUGE> } return false; } 
public boolean isValidMove(java.lang.String direction) { switch (direction.toLowerCase()) { case "n" : return (this.emptySpaceLocation.getX()) > 0; case "e" : <BUGS> <BUGE> return (this.emptySpaceLocation.getX()) < 2; <BUGS> case "s" : return (this.emptySpaceLocation.getY()) < 2; <BUGE> case "w" : return (this.emptySpaceLocation.getY()) > 0; default : return false; } } 
public static org.eclipse.jdt.core.dom.MethodDeclaration checkInvocationParentRelation(microbat.model.trace.TraceNode prevNode, microbat.model.trace.TraceNode postNode) { java.util.List<org.eclipse.jdt.core.dom.IMethodBinding> methodInvocationBindings = microbat.util.JavaUtil.findMethodInvocations(prevNode); if (!(methodInvocationBindings.isEmpty())) { org.eclipse.jdt.core.dom.MethodDeclaration md = microbat.util.JavaUtil.findMethodDeclaration(postNode); <BUGS> <BUGE> org.eclipse.jdt.core.dom.IMethodBinding methodDeclarationBinding = md.resolveBinding(); if (microbat.util.JavaUtil.canFindCompatibleSig(methodInvocationBindings, methodDeclarationBinding)) { return md; } } <BUGS> java.lang.System.currentTimeMillis(); <BUGE> return null; } 
@org.springframework.web.bind.annotation.RequestMapping(value = "/autenticar-usuario", method = org.springframework.web.bind.annotation.RequestMethod.POST) public java.lang.String autenticarUsuario(avaliador.model.Usuario usuarioRecebido, javax.servlet.http.HttpSession session) { avaliador.model.Usuario usuarioRetornado = usuarioDao.validarUsuario(usuarioRecebido.getLogin(), usuarioRecebido.getSenha()); if (usuarioRetornado != null) { <BUGS> session.setAttribute("usuarioLogado", true); <BUGE> if ((usuarioRetornado.getTipoUsuario()) == (avaliador.model.NivelUsuario.ADMINISTRADOR)) { <BUGS> session.setAttribute("ehAdministrador", true); <BUGE> } return "redirect:/index"; } return "login"; } 
private boolean hayCamposVacios(entities.Contrato t) { <BUGS> return ((((t.getIdentificador().equals("")) || ((t.getPropiedad().getCalle()) == null)) || ((t.getCliente().getPersona()) == null)) || ((t.getCreador().getPersona()) == null)) || (t.getGarantia().equals("")); <BUGE> } 
public java.util.Map toMap() { java.util.HashMap<java.lang.String, java.lang.Object> map = new java.util.HashMap<>(); map.put("itemId", itemId); map.put("tracked", tracked); <BUGS> map.put("job", job.toMap()); <BUGE> return map; } 
public bibliothek.gui.dock.common.intern.CommonSingleDockableLayout read(bibliothek.util.xml.XElement element, bibliothek.gui.dock.station.support.PlaceholderStrategy placeholders) { bibliothek.gui.dock.common.intern.CommonSingleDockableLayout layout = new bibliothek.gui.dock.common.intern.CommonSingleDockableLayout(); layout.setId(element.getElement("id").getString()); bibliothek.util.xml.XElement xarea = element.getElement("area"); if (xarea != null) { <BUGS> java.lang.String area = element.getString(); <BUGE> if ("".equals(area)) { layout.setArea(null); }else { layout.setArea(area); } } return layout; } 
public void removeItems() { <BUGS> java.util.List<T> itemsList = new java.util.LinkedList<>(); <BUGE> for (int position = 0; position < (mItems.size()); position++) { if (getItem(position).getCanRemove()) { mItems.remove(position); todo.javier.mera.todolist.adapters.RecyclerAdapter.notifyItemRemoved(position); position--; } } } 
public static void main(java.lang.String[] args) throws com.rapplogic.xbee.api.XBeeException, java.io.IOException, java.lang.NumberFormatException, java.text.ParseException { initLog4j(); if (false) { com.rapplogic.aru.uploader.xbee.XBeeSketchUploader.runFromCmdLine(args); }else { <BUGS> new com.rapplogic.aru.uploader.xbee.XBeeSketchUploader().process("/Users/andrew/Documents/dev/arduino-remote-uploader/resources/BlinkSlow.cpp.hex", "/dev/tty.usbserial-A6005uRz", java.lang.Integer.parseInt("9600"), "0013A200408B98FF", false, 5, 0, 500); <BUGE> } } 
@java.lang.Override public net.minecraft.item.ItemStack onItemRightClick(net.minecraft.item.ItemStack stack, net.minecraft.world.World world, net.minecraft.entity.player.EntityPlayer player) { cn.academy.terminal.TerminalData tData = cn.academy.terminal.TerminalData.get(player); if (tData.isTerminalInstalled()) { if (!(world.isRemote)) player.addChatMessage(new net.minecraft.util.ChatComponentTranslation("ac.terminal.alrdy_installed"));  }else { if (!(world.isRemote)) { if (!(player.capabilities.isCreativeMode)) (stack.stackSize)--;  tData.install(); <BUGS> cn.academy.terminal.item.ItemTerminalInstaller.startInstalling(); <BUGE> } } return stack; } 
@java.lang.Override public boolean onQueryTextChange(java.lang.String newText) { <BUGS> if ((newText.length()) >= 0) { <BUGE> mUsersList.setVisibility(View.VISIBLE); mUsersAdapter.getFilter().filter(newText); }else { mUsersList.setVisibility(View.GONE); } return false; } 
public void wallsAndGatesV0(int[][] rooms) { <BUGS> checkCornerCase(rooms); <BUGE> for (int i = 0; i < (rooms.length); i++) { for (int j = 0; j < (rooms[0].length); j++) { if ((rooms[i][j]) >= 0) { bfsHelper(rooms, i, j); } } } } 
private java.util.List<de.htw_berlin.HoboOthello.KI.Field> listPossibleSideFields() { java.util.List<de.htw_berlin.HoboOthello.KI.Field> listOfPossibleMoves = listPossibleMoves(); java.util.List<de.htw_berlin.HoboOthello.KI.Field> listOfPossibleSideFields = null; int sideFieldIndex = 0; <BUGS> while (sideFieldIndex < (listOfPossibleMoves.size())) { <BUGE> de.htw_berlin.HoboOthello.KI.Field field = listOfPossibleMoves.get(sideFieldIndex); if (board.isSideField(field)) { listOfPossibleSideFields.add(field); <BUGS> }else { sideFieldIndex++; <BUGE> } <BUGS> <BUGE> } return listOfPossibleSideFields; } 
@java.lang.Override public void forEachEntry(java.util.function.ObjIntConsumer<? super E> action) { com.google.common.base.Preconditions.checkNotNull(action); <BUGS> for (int i = 0; i < (size()); i++) { <BUGE> action.accept(elementSet.asList().get(i), getCount(i)); } } 
<BUGS> private java.util.Map<java.lang.String, java.lang.String> getLimitedUserInfo() { java.util.Map info = new java.util.HashMap<>(); <BUGE> info.put("uid", getUid()); info.put("firstName", getFirstName()); info.put("lastName", getLastName()); info.put("middleName", getMiddleName()); info.put("profilePicsUrls", getNewUserProfilePicUri()); return info; } 
final void setFrontOfTask() { boolean foundFront = false; final int numActivities = mActivities.size(); <BUGS> for (int activityNdx = 0; numActivities < activityNdx; ++activityNdx) { <BUGE> final com.android.server.am.ActivityRecord r = mActivities.get(activityNdx); if (foundFront || (r.finishing)) { r.frontOfTask = false; }else { r.frontOfTask = true; foundFront = true; } } } 
private void updateTitle() { android.widget.ImageButton image = ((android.widget.ImageButton) (findViewById(R.id.title_button_1))); <BUGS> <BUGE> image = ((android.widget.ImageButton) (findViewById(R.id.title_button_2))); image.clearAnimation(); if (varUnread) { image.setBackgroundResource((varBack = R.drawable.btn_bg_pressed)); varUnread = false; } } 
public org.netpreserve.commons.uri.UriBuilder query(final java.lang.String value) { <BUGS> query = config.getParser().validateQuery(this, value, 0, (-1)); if ((query) == null) { throw new org.netpreserve.commons.uri.UriException(("Illegal query: " + value)); <BUGE> } parsedQuery = null; return this; } 
@java.lang.Override public java.lang.String getAcceptedPath() { if (!(this.useEncoding)) return ("/" + (this.root)) + "/*"; else <BUGS> return (encodeIfNecessary(("/" + (this.root.getName())))) + "*"; <BUGE>  } 
@java.lang.Override public org.apache.jena.graph.Node get1(org.apache.jena.sparql.core.Var var) { try { org.rdfhdt.hdtjena.bindings.HDTId id = idBinding.get(var); if (id == null) return null;  <BUGS> org.apache.jena.graph.Node n = id.getNode(); if (n == null) { n = id.getDictionary().getNode(id); id.setNode(n); } return n; <BUGE> } catch (java.lang.Exception ex) { org.apache.jena.atlas.logging.Log.fatal(this, java.lang.String.format("get1(%s)", var), ex); return null; } } 
@java.lang.Override public boolean parseMsg(java.lang.String subject, java.lang.String body, net.anei.cadpage.parsers.MsgInfo.Data data) { <BUGS> if (!(subject.equals("CAD Page"))) <BUGE> return false;  java.lang.String[] fields = body.split("\n"); return parseFields(fields, data); } 
private int eventHandler(java.lang.String event) { <BUGS> java.lang.System.out.println(event); <BUGE> if (event.split(" ")[0].equals("+OK")) return okHandler(event); else if (event.split(" ")[0].equals("-ERR")) return errHandler(event); else { return -1; }  } 
private org.miradi.objecthelpers.ORef getSelectedRef() { if ((getPicker().getSelectedHierarchies().length) == 0) return org.miradi.objecthelpers.ORef.INVALID;  org.miradi.objecthelpers.ORefList selectedObjectRefs = getPicker().getSelectedHierarchies()[0]; <BUGS> <BUGE> org.miradi.objecthelpers.ORef selectedObjectRef = selectedObjectRefs.get(0); if (selectedObjectRef.isInvalid()) return org.miradi.objecthelpers.ORef.INVALID;  return selectedObjectRef; } 
@java.lang.Override public void onTextChanged(final java.lang.CharSequence s, int start, int before, int count) { if (inputString.getText().toString().equals(random)) { <BUGS> player.release(); vibrator.cancel(); <BUGE> handler.removeCallbacks(runnable); service = false; stopService(closeDialog); <BUGS> <BUGE> resetAlarm(); finish(); }else { player.pause(); vibrator.cancel(); handler.removeCallbacks(runnable); } } 
@java.lang.Override public void create(final com.jforex.programming.order.OrderSpecification orderSpecification) { lock.lock(); com.jforex.programming.position.PositionFSM positionFSM = getPositionFSM(orderSpecification.getInstrument()); <BUGS> java.lang.System.out.println(("State of positionFSM before create: " + positionFSM)); <BUGE> positionFSM = positionFSM.fireCreate(this, orderSpecification); positionFSMs.put(orderSpecification.getInstrument(), positionFSM); <BUGS> java.lang.System.out.println(("State of positionFSM after create: " + positionFSM)); java.lang.System.out.println(("State of saved positionFSM after create: " + (getPositionFSM(orderSpecification.getInstrument())))); <BUGE> lock.unlock(); } 
<BUGS> public static pedca.context.Context createAndSaveBottleneckContext(java.lang.String path, double sizeX, double sizeY, double bottleneckWidth, double bottleneckHeight, double bottleneckPosY) { <BUGE> pedca.context.Context context = scenarios.ContextGenerator.getBottleneckContext(sizeX, sizeY, bottleneckWidth, bottleneckHeight, bottleneckPosY); try { context.saveConfiguration(path); } catch (java.io.IOException e) { e.printStackTrace(); } return context; } 
public void write_page(global.PageId pageno, global.Page mempage) { if (((pageno.pid) < 0) || ((pageno.pid) >= (num_db_pages))) { <BUGS> throw new java.lang.IllegalArgumentException("Invalid page number; write aborted"); <BUGE> } try { fp.seek(((long) ((pageno.pid) * (PAGE_SIZE)))); fp.write(mempage.getData()); (write_cnt)++; } catch (java.io.IOException exc) { global.Minibase.haltSystem(exc); } } 
@java.lang.Override public void onClick(android.view.View v) { if ((getMediaController()) != null) { <BUGS> if (item != (getPlaybackManager().getPlaylist())) { org.tomahawk.libtomahawk.collection.StationPlaylist stationPlaylist = org.tomahawk.libtomahawk.collection.StationPlaylist.get(((org.tomahawk.libtomahawk.collection.Playlist) (item))); <BUGE> getPlaybackManager().setPlaylist(stationPlaylist); getMediaController().getTransportControls().play(); } } } 
@java.lang.Override public void startElement(java.lang.String uri, java.lang.String localName, java.lang.String qName, org.xml.sax.Attributes attributes) throws org.xml.sax.SAXException { <BUGS> qName = com.esri.vehiclecommander.Mil2525CMessageParser.translateElementName(qName); <BUGE> if (("message".equals(qName)) || ("geomessage".equals(qName))) { message = new com.esri.core.symbol.advanced.Message(); messages.add(message); version = attributes.getValue("v"); }else if (MessageHelper.MESSAGE_ID_PROPERTY_NAME.equals(qName)) { readingId = true; }  elementName = qName; } 
@java.lang.Override public int previous(int position) { int p = adjPosition(position); if (p == (start)) return -1;  long value = ((~(bits)) & (mask)) << (64 - p); <BUGS> return value == 0L ? -1 : (position - 1) + (java.lang.Long.numberOfLeadingZeros(value)); <BUGE> } 
public void reset() { stopwatch.stopTimer(); spelInformatie.setTotaalAantalBolletjes(0); spelInformatie.reset(); this.vakjesInhoud.clear(); for (int i = 0; i < (vakje.length); i++) vakje[i] = null;  <BUGS> <BUGE> repaint(); } 
private org.upb.fmde.de.categories.concrete.graphs.GraphMorphism createRuleAppendCard() { org.upb.fmde.de.categories.concrete.graphs.Graph left = createHostGraph(); org.upb.fmde.de.categories.concrete.graphs.Graph right = createAppendCardGraph(); org.upb.fmde.de.categories.concrete.finsets.TotalFunction edgeArrow = new org.upb.fmde.de.categories.concrete.finsets.TotalFunction(left.edges(), "edge arrow", right.edges()); org.upb.fmde.de.categories.concrete.finsets.TotalFunction verticeFunction = new org.upb.fmde.de.categories.concrete.finsets.TotalFunction(left.vertices(), "vertice arrow", right.vertices()); <BUGS> verticeFunction.addMapping("B", "B"); <BUGE> org.upb.fmde.de.categories.concrete.graphs.GraphMorphism morph = new org.upb.fmde.de.categories.concrete.graphs.GraphMorphism("append Card", left, right, edgeArrow, verticeFunction); return morph; } 
public void playTonic() { circles.get(0).setColor(java.awt.Color.YELLOW); <BUGS> <BUGE> repaint(); <BUGS> java.lang.System.out.println("Color = yellow"); <BUGE> ETApplet.player.play(tonic); java.lang.System.out.println("Pattern played"); circles.get(0).setColor(java.awt.Color.BLACK); repaint(); } 
private com.navercorp.pinpoint.bootstrap.instrument.matcher.operand.MatcherOperand joinOr(java.util.List<java.lang.String> basePackageNames) { if (basePackageNames.isEmpty()) { <BUGS> throw new java.lang.IllegalArgumentException(("basePackageNames must not be empty " + basePackageNames)); <BUGE> } com.navercorp.pinpoint.bootstrap.instrument.matcher.operand.MatcherOperand operandGroup = null; for (java.lang.String basePackageName : basePackageNames) { if (operandGroup == null) { operandGroup = new com.navercorp.pinpoint.bootstrap.instrument.matcher.operand.PackageInternalNameMatcherOperand(basePackageName); }else { final com.navercorp.pinpoint.bootstrap.instrument.matcher.operand.MatcherOperand packageMatcherOperand = new com.navercorp.pinpoint.bootstrap.instrument.matcher.operand.PackageInternalNameMatcherOperand(basePackageName); operandGroup = operandGroup.or(packageMatcherOperand); } } return operandGroup; } 
protected com.codeborne.selenide.impl.WebDriver markForAutoClose(com.codeborne.selenide.impl.WebDriver webDriver) { ALL_WEB_DRIVERS_THREADS.add(java.lang.Thread.currentThread()); if (!(cleanupThreadStarted.get())) { <BUGS> synchronized(cleanupThreadStarted) { <BUGE> if (!(cleanupThreadStarted.get())) { new com.codeborne.selenide.impl.WebDriverThreadLocalContainer.UnusedWebdriversCleanupThread().start(); cleanupThreadStarted.set(true); } } } java.lang.Runtime.getRuntime().addShutdownHook(new com.codeborne.selenide.impl.WebDriverThreadLocalContainer.WebdriversFinalCleanupThread(java.lang.Thread.currentThread())); return webDriver; } 
@java.lang.Override public void onSelect(com.sencha.gxt.widget.core.client.event.SelectEvent event) { log.setText((("running cmd: " + cmdString) + "  ...")); <BUGS> processingAnim(); <BUGE> gpfsService.runCmd(nodeop, nodes, new com.google.gwt.user.client.rpc.AsyncCallback<java.lang.String>() { @java.lang.Override public void onFailure(java.lang.Throwable caught) { log.setText(caught.getMessage()); processingWait = false; }  @java.lang.Override public void onSuccess(java.lang.String result) { log.setText(result); processingWait = false; reloadState(); } }); } 
@java.lang.Override public void onClick(android.view.View v) { for (com.example.liwaihing.multiuseronlinemaps.UserPosition u : userPositionList) { if ((u.getUserPosition(name)) != null) { marker.remove(); <BUGS> <BUGE> } } dbHelper.removeSharingUser(dbHelper.getGoogleID(), name); dbHelper.removeSharingUser(name, dbHelper.getGoogleID()); layout_pos.setVisibility(View.GONE); if ((polyline) != null) { polyline.remove(); } } 
public boolean getAnswerByQuestion(java.lang.String questionID) { int answerindex = 0; <BUGS> for (expert_system.Entry<java.lang.String, expert_system.Question> elements : ruleMap.entrySet()) { <BUGE> if (elements.getKey().contains(questionID)) { return ((boolean) (answerCollection.toArray()[answerindex])); } answerindex++; } return false; } 
private int GeneralHeading(com.fuzzy.simulator.CAnimat animat) { java.awt.Point target = new java.awt.Point(0, 0); int numAnimats = 0; for (com.fuzzy.simulator.CAnimat otherAnimat : _animats) { java.awt.Point otherLocation = ClosetLocation(animat.GetLocation(), otherAnimat.GetLocation()); int animatDistance = animat.GetDistance(otherAnimat); } <BUGS> <BUGE> } 
public static synchronized void saveGlobalSettings() throws java.io.IOException { java.io.File confFile = ovt.Utils.findFile(((ovt.OVTCore.getConfDir()) + (ovt.OVTCore.globalSettingsFileName))); <BUGS> try (java.io.FileOutputStream out = new java.io.FileOutputStream(confFile)) { ovt.OVTCore.globalProperties.save(out, "OVT properties file."); <BUGE> } } 
public java.lang.String AImove() { coup_standalone.AI.Moves nextMove = new coup_standalone.AI.Moves(); nextMove.updateUtilityWithFacts(); nextMove.updateUtilityWithHistory(); <BUGS> nextMove.updateUtilityWithCoins(myInfo.coins); <BUGE> java.lang.String move; if ((turn) == 1) move = nextMove.firstMove(); else move = nextMove.getMove();  (turn)++; (turnsSinceAmbassador)++; return move; } 
public void draw(org.newdawn.slick.Graphics graphics) throws com.sem.btrouble.view.SlickException { drawBackground(graphics); <BUGS> drawLives(); drawScore(graphics); <BUGE> drawCountDown(graphics); drawPlayers(graphics); drawPowers(graphics); drawBubbles(graphics); drawTimer(graphics); drawBorders(graphics); <BUGS> <BUGE> } 
@java.lang.Override public boolean onScroll(android.view.MotionEvent event1, android.view.MotionEvent event2, float distanceX, float distanceY) { <BUGS> java.lang.System.out.println("-------OnGestureListener:onScroll()"); <BUGE> if (((mPreviousView) == null) && ((mNextView) == null)) { <BUGS> java.lang.System.out.println("-------OnGestureListener:mPreviousView == null && mNextView == null"); <BUGE> isScrolling = false; return true; } isScrolling = true; onScrollX(event1, event2, distanceX); return true; } 
@java.lang.Override <BUGS> public double curve(double a) { if (a <= 0.5) { return (1 - (out((1 - (a * 2))))) * 0.5; <BUGE> } <BUGS> return ((out(((a * 2) - 1))) * 0.5) + 0.5; <BUGE> } 
private void setListView() { <BUGS> android.widget.ListView listView = findView(R.id.lv_main_providers_list); <BUGE> mAdapter = new com.pictureit.noambaroz.beautyapp.helper.MainProviderListAdapter(this, android.R.layout.simple_list_item_1, new java.util.ArrayList<com.pictureit.noambaroz.beautyapp.data.Beautician>()); listView.setAdapter(mAdapter); listView.setOnItemClickListener(new android.widget.AdapterView.OnItemClickListener() { @java.lang.Override public void onItemClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) { com.pictureit.noambaroz.beautyapp.BeauticianUtil.openBeauticianInNewActivity(com.pictureit.noambaroz.beautyapp.MainActivity.this, mAdapter.getItem(position)); } }); } 
private void updateOriginalTags() { modifiedTags = getExistingTags(); for (java.lang.String tagToAdd : tagsToAdd) { boolean hasTag = false; for (java.lang.String existingTag : originalTags) { if (tagToAdd.equalsIgnoreCase(existingTag)) { hasTag = true; } <BUGS> if (!hasTag) { modifiedTags.add(tagToAdd); } <BUGE> } } } 
@java.lang.Override public void onSaveInstanceState(android.os.Bundle saveState) { super.onSaveInstanceState(saveState); <BUGS> android.util.Log.i(LOG_TAG, "Saving instances before destroying the activity"); <BUGE> if ((movieArrayList) != null) saveState.putParcelableArrayList(SAVED_MOVIE_LIST, movieArrayList);  saveState.putString(SAVED_SORT_PREF, sortBy); saveState.putInt(SAVED_PAGE_NO, page); } 
<BUGS> private com.amazonaws.services.kinesis.scaling.ScalingOperationReport scaleStream(java.lang.String streamName, int originalShardCount, int targetShards, double targetPct, int operationsMade, int shardsCompleted, long startTime, java.lang.Integer minShards, java.lang.Integer maxShards) throws java.lang.Exception { <BUGE> com.amazonaws.services.kinesis.scaling.StreamScaler.LOG.info(java.lang.String.format("Scaling Stream %s from %s Shards to %s", streamName, originalShardCount, targetShards)); <BUGS> return scaleStream(streamName, originalShardCount, targetShards, targetPct, operationsMade, shardsCompleted, startTime, getOpenShardStack(streamName), minShards, maxShards); <BUGE> } 
private void saveSettings() { <BUGS> android.util.Log.i("....", "Title page activity saved"); <BUGE> android.content.SharedPreferences settings = getSharedPreferences(MainMenuActivity.PREFS_NAME, Context.MODE_PRIVATE); android.content.SharedPreferences.Editor editor = settings.edit(); editor.putString("activity", "title_page"); editor.putString("story", story.getUniqueID()); editor.commit(); } 
@java.lang.Override public void dispose() { if (isDisposed()) { return ; } <BUGS> <BUGE> getTerminalContext().deleteReferences(terminalContextAndRefs.getRight()); final de.metas.adempiere.form.terminal.context.TerminalContextFactory terminalContextFactory = de.metas.adempiere.form.terminal.context.TerminalContextFactory.get(); terminalContextFactory.destroy(getTerminalContext()); <BUGS> _disposed = true; <BUGE> } 
@android.annotation.TargetApi(value = Build.VERSION_CODES.ICE_CREAM_SANDWICH) public static io.branch.referral.Branch getAutoInstance(@android.support.annotation.NonNull android.content.Context context, boolean isReferrable) { io.branch.referral.Branch.isAutoSessionMode_ = true; io.branch.referral.Branch.customReferrableSettings_ = (isReferrable) ? io.branch.referral.Branch.CUSTOM_REFERRABLE_SETTINGS.REFERRABLE : io.branch.referral.Branch.CUSTOM_REFERRABLE_SETTINGS.NON_REFERRABLE; boolean isDebug = io.branch.referral.BranchUtil.isTestModeEnabled(context); io.branch.referral.Branch.getBranchInstance(context, (!isDebug)); <BUGS> io.branch.referral.Branch.branchReferral_.setActivityLifeCycleObserver(((android.app.Application) (context))); <BUGE> return io.branch.referral.Branch.branchReferral_; } 
@java.lang.Override public void onClick(android.view.View v) { if (!(android.text.TextUtils.isEmpty(prevKey))) { android.content.Intent intent = new android.content.Intent(getActivity(), kyi.senti.activity.CommentActivity.class); intent.putExtra("cardKey", prevKey); intent.putExtra("userId", userId); <BUGS> intent.putExtra("flag", false); <BUGE> startActivity(intent); } } 
public static double[] getAxisValue() { <BUGS> org.usfirst.frc.team3243.robot.InputManager.axis[0] = org.usfirst.frc.team3243.robot.InputManager.ps2controller.getRawAxis(2); org.usfirst.frc.team3243.robot.InputManager.axis[1] = org.usfirst.frc.team3243.robot.InputManager.ps2controller.getRawAxis(1); org.usfirst.frc.team3243.robot.InputManager.axis[2] = org.usfirst.frc.team3243.robot.InputManager.ps2controller.getRawAxis(3); <BUGE> org.usfirst.frc.team3243.robot.InputManager.axis = org.usfirst.frc.team3243.robot.InputManager.deadZone(org.usfirst.frc.team3243.robot.InputManager.axis); return org.usfirst.frc.team3243.robot.InputManager.axis; } 
@java.lang.Override public java.lang.Object getHandle(java.lang.String name) { if (ds.getNames().contains(name)) { <BUGS> return new schn27.zorlog.data.DataSourceMath.Handle(false, name); <BUGE> }else if (mathValues.keySet().contains(name)) { return new schn27.zorlog.data.DataSourceMath.Handle(true, mathValues.get(name)); }else { return null; }  } 
public static void updateForNotes(@android.support.annotation.NonNull com.wildsmith.jarble.provider.jar.JarTableMarbleModel[] marbles, @android.support.annotation.NonNull com.wildsmith.jarble.provider.jar.JarTableMarbleModel updatedMarble) { for (com.wildsmith.jarble.provider.jar.JarTableMarbleModel marble : marbles) { <BUGS> if (marble == null) { <BUGE> continue; } <BUGS> switch (marble.getStateAsEnum()) { case IN_PROGRESS : case EDITING : marble.purposeNotes = updatedMarble.purposeNotes; marble.performanceNotes = updatedMarble.performanceNotes; break; } <BUGE> } } 
@org.junit.Test public void testNotSplit() { models.Game g = new models.Game(); models.User u = new models.User(); <BUGS> u.hostGame = g; <BUGE> models.Card card1 = new models.Card(8, Suit.Clubs, true); models.Card card2 = new models.Card(10, Suit.Diamonds, true); <BUGS> g.dealCardToCol(0, card1); g.dealCardToCol(0, card2); <BUGE> u.split(); assertEquals(false, u.isSplit); } 
private void addBlurImage() { <BUGS> android.graphics.Bitmap bm = com.daimajia.androidviewhover.tools.Blur.apply(getContext(), com.daimajia.androidviewhover.tools.Util.getViewBitmap(this), mBlurRadius); <BUGE> android.widget.ImageView im = new android.widget.ImageView(getContext()); im.setImageBitmap(bm); mBlurImage = im; this.addView(im); } 
public boolean isValid() { verifyNIL(); <BUGS> int lastDegree = BinomialHeap.INFINITY; <BUGE> BinomialHeap.BinomialNode x = this.head; while (x != (BinomialHeap.NIL)) { if ((recVal(x, new int[2])[0]) == 0) { return false; } <BUGS> if ((x.degree) < lastDegree) { <BUGE> return false; } lastDegree = x.degree; x = x.sibling; } return true; } 
@javax.annotation.PostConstruct public void init() { <BUGS> org.elasticsearch.common.settings.Settings.Builder elasticsearchSettings = org.elasticsearch.common.settings.Settings.settingsBuilder().put("cluster.name", matchpconfig.getEsClusterName()).put("path.home", matchpconfig.getEsPath()); node = org.elasticsearch.node.NodeBuilder.nodeBuilder().local(true).settings(elasticsearchSettings.build()).node(); <BUGE> try { <BUGS> <BUGE> Reindex(); <BUGS> } catch (java.io.IOException e) { e.printStackTrace(); } catch (java.lang.CloneNotSupportedException e) { <BUGE> e.printStackTrace(); } } 
@java.lang.Override public void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.add_serie); db = nl.asymmetrics.droidshows.utils.SQLiteStore.getInstance(this); <BUGS> series = db.getSeries(2); <BUGE> java.util.List<nl.asymmetrics.droidshows.thetvdb.model.Serie> search_series = new java.util.ArrayList<nl.asymmetrics.droidshows.thetvdb.model.Serie>(); this.seriessearch_adapter = new nl.asymmetrics.droidshows.ui.AddSerie.SeriesSearchAdapter(this, R.layout.row_search_series, search_series); setListAdapter(seriessearch_adapter); android.content.Intent intent = getIntent(); getSearchResults(intent); } 
public void verifyDriveArcingRight(double minimumDifference) { org.junit.Assert.assertTrue((((getLeftSetpoint()) - (getRightSetpoint())) > minimumDifference)); <BUGS> org.junit.Assert.assertTrue(((((xbot.common.controls.actuators.MockCANTalon) (drive.rightDrive)).getSetpoint()) > 0)); <BUGE> } 
@java.lang.Override public boolean equals(java.lang.Object o) { if ((this) == o) return true;  if ((o == null) || ((getClass()) != (o.getClass()))) return false;  com.mounacheikhna.practice.algorithms.SmartWordToy.Node node = ((com.mounacheikhna.practice.algorithms.SmartWordToy.Node) (o)); <BUGS> if ((steps) != (node.steps)) return false;  return java.util.Arrays.equals(word, node.word); <BUGE> } 
@java.lang.Override public void changed(javafx.beans.value.ObservableValue<? extends java.lang.String> ov, java.lang.String t, java.lang.String t1) { java.lang.System.out.println("Plate No. Changed"); <BUGS> if ((t1 != null) && ((t1.trim()) != "")) { <BUGE> rentButton.setDisable(false); }else { rentButton.setDisable(true); } } 
private void generateAllMultiplikation() { java.lang.StringBuffer bufa = new java.lang.StringBuffer(); for (int a = 0; a < 10; a++) for (int b = 0; b < 10; b++) { <BUGS> bufa.append(a); bufa.append(b); <BUGE> }  aufgaben = bufa.toString(); } 
@java.lang.Override protected void onPostExecute(java.lang.Boolean b) { super.onPostExecute(b); if (b) { if ((mListener) != null) { mListener.onEditionSuccess(); } }else { <BUGS> android.widget.Toast.makeText(getActivity(), R.string.tags_edition_failed, Toast.LENGTH_SHORT).show(); <BUGE> } } 
public void writeByteBufferImpl(java.nio.ByteBuffer buf) throws java.io.IOException { int currLen = buf.remaining(); assert null != (sChannel) : "tcp socket not set yet, null value found."; sChannel.write(buf); bufferPool.returnBuffer(buf); <BUGS> block.setNumBytes((((block.getNumBytes()) + currLen) - 4)); <BUGE> bufferPool.returnBuffer(buf); } 
@java.lang.Override public entity.Customer findCustomer(long id) { javax.persistence.EntityManager em = emf.createEntityManager(); try { em.getTransaction().begin(); <BUGS> entity.Customer c = em.find(entity.Customer.class, 1); <BUGE> em.getTransaction().commit(); return c; } finally { em.close(); } } 
@java.lang.Override public boolean equals(java.lang.Object o) { if ((this) == o) return true;  <BUGS> if ((o == null) || ((getClass()) != (o.getClass()))) <BUGE> return false;  java.lang.Number that = ((java.lang.Number) (o)); return ((compareTo(that)) == 0) || (value.equals(that.doubleValue())); } 
public java.util.List<eu.h2020.symbiote.cloud.model.data.observation.Observation> readResourceHistory(java.lang.String resourceId) { <BUGS> java.util.List<eu.h2020.symbiote.cloud.model.data.observation.Observation> value = null; <BUGE> eu.h2020.symbiote.cloud.model.data.observation.Observation obs1 = eu.h2020.symbiote.plugin.PlatformSpecificPlugin.observationExampleValue(); eu.h2020.symbiote.cloud.model.data.observation.Observation obs2 = eu.h2020.symbiote.plugin.PlatformSpecificPlugin.observationExampleValue(); value.add(obs1); value.add(obs2); return value; } 
private void cubeConfigReset() { <BUGS> logger.info("Resetting configuration for MAX! Cube {}", org.openhab.binding.max.internal.handler.MaxCubeBridgeHandler.getThing().getUID()); <BUGE> sendCubeCommand(new org.openhab.binding.max.internal.command.A_Command()); for (org.openhab.binding.max.internal.device.Device di : devices) { for (org.openhab.binding.max.internal.handler.DeviceStatusListener deviceStatusListener : deviceStatusListeners) { try { deviceStatusListener.onDeviceRemoved(this, di); } catch (java.lang.Exception e) { logger.error("An exception occurred while calling the DeviceStatusListener", e); unregisterDeviceStatusListener(deviceStatusListener); } } } clearDeviceList(); propertiesSet = false; roomPropertiesSet = false; } 
public static void main(java.lang.String[] args) { <BUGS> int[] a = new int[]{ 1 , 2 , 3 , 4 , 5 }; <BUGE> reverseLinkedListII.ReverseLinkedListII obj = new reverseLinkedListII.ReverseLinkedListII(); reverseLinkedListII.ReverseLinkedListII.ListNode head = obj.makeList(a); reverseLinkedListII.ReverseLinkedListII.printList(head); <BUGS> head = obj.reverseBetween(head, 2, 4); <BUGE> reverseLinkedListII.ReverseLinkedListII.printList(head); } 
public final void setTransferable(eu.mihosoft.vrl.visual.Transferable dragginObj) { this.draggingObj = dragginObj; draggingObj.setSourceObject(this); this.add(draggingObj); <BUGS> draggingObj.setLocation(0, 0); <BUGE> draggingObj.setSize((((int) (this.getSize().getWidth())) - 1), (((int) (this.getSize().getHeight())) - 1)); } 
public synchronized void setHMILevel(com.smartdevicelink.proxy.rpc.enums.HMILevel hmiVal) { hmiLevel = hmiVal; <BUGS> if ((hmiVal.equals(HMILevel.HMI_FULL)) || (hmiVal.equals(HMILevel.HMI_LIMITED))) setUserSelectedStatus(true); else if (hmiVal.equals(HMILevel.HMI_NONE)) setUserSelectedStatus(false); <BUGE>  <BUGS>  <BUGE> } 
<BUGS> public model.Book get(int key) { <BUGE> int firstHash = hashFunctionOne(key); int secondHash = hashFunctionTwo(key); if (((table[firstHash]) != null) && ((table[firstHash].getKey()) == key)) { return table[firstHash].getValue(); }else { return table[secondHash].getValue(); } } 
public java.lang.String loadSettingsFile(nfl.season.input.NFLTeamSettingsFileReaderFactory fileReaderFactory) throws java.io.IOException { java.io.BufferedReader fileReader = fileReaderFactory.createNFLTeamSettingsReader(); java.lang.StringBuilder nflTeamSettingsBuilder = new java.lang.StringBuilder(); <BUGS> java.lang.String line = fileReader.readLine(); while (line != null) { nflTeamSettingsBuilder.append(line); nflTeamSettingsBuilder.append("\n"); <BUGE> line = fileReader.readLine(); <BUGS> } fileReader.close(); <BUGE> return nflTeamSettingsBuilder.toString(); } 
@org.junit.Test public void getFormattedDateString_1day() { <BUGS> org.hamcrest.MatcherAssert.assertThat(com.ddiehl.timesincetextview.TimeSince.getFormattedDateString(((mTime) - (((1 * 24) * 60) * 60)), mTime, false, com.ddiehl.timesincetextview.TimeSinceTextViewAndroidTest.mContext), com.ddiehl.timesincetextview.TimeSinceTextViewAndroidTest.is(getQuantityString(R.plurals.tstv_timespan_days, 1))); <BUGE> } 
public com.mycompany.model.UserOTP saveUserQRCode(java.lang.String username, java.lang.String qrcode) { java.lang.System.out.println("=========+API============"); com.mycompany.model.UserOTP userOTP = userOTPDao.getUserOTP(username); java.util.Date date = new java.util.Date(); <BUGS> if (userOTP == null) { userOTP.setValidUser(false); <BUGE> } <BUGS> userOTP.setQrcode(qrcode); userOTP.setModifiedTime(date); return userOTPDao.saveUserOTP(userOTP); <BUGE> } 
@java.lang.Override public void run() { <BUGS> android.util.Log.d("WaterLevel", "in mRecordFeed"); <BUGE> while ((mRecorder.getRecordingState()) == (android.media.AudioRecord.RECORDSTATE_RECORDING)) { short[] data = new short[(mBufferSize) / 2]; mRecorder.read(data, 0, ((mBufferSize) / 2)); <BUGS> android.util.Log.d("WaterLevel", "in mRecordFeed, in while, before appendSignal"); <BUGE> mDecoder.appendSignal(data); <BUGS> android.util.Log.d("WaterLevel", "in mRecordFeed, in while, after appendSignal"); <BUGE> } } 
protected java.lang.reflect.Method getMethod(int amountOfParams) throws java.lang.ClassNotFoundException { if (!(methods.containsKey(amountOfParams))) { <BUGS> java.lang.String fullName = ((java.lang.String) (be.nabu.libs.evaluator.impl.MethodOperation.getParts().get(0).getContent())); methods.put(amountOfParams, findMethod(fullName, amountOfParams)); <BUGE> } return methods.get(amountOfParams); } 
private void updateLocation(android.location.Location location) { if (location != null) { currentLocation.setText(com.example.xialong.funplacesforkids.util.Util.getCity(this, location.getLatitude(), location.getLongitude())); weather.execute(location.getLatitude(), location.getLongitude()); }else { currentLocation.setText(WeatherUtil.DEFAULT_LOCATION); <BUGS> weather.execute(WeatherUtil.SF_LAN, WeatherUtil.SF_LON); <BUGE> } } 
@java.lang.Override public void onItemClick(android.widget.AdapterView<?> parent, android.view.View viewClicked, int position, long id) { com.aolalabs.partywolf.Event clickedEvent; if (dateView) { clickedEvent = events.get(position); }else { clickedEvent = sortedEvents.get(position); } <BUGS> java.lang.String message = "You clicked on " + (clickedEvent.getTitle()); java.lang.System.out.println(message); <BUGE> android.content.Intent i = new android.content.Intent(this, com.aolalabs.partywolf.EventDetailA.class); i.putExtra("event", clickedEvent); startActivity(i); } 
private void checkSimultaneousRelease() { <BUGS> <BUGE> final int timeSensitiveness = 50; if (((keyThread) != null) && ((keyThread.getState()) == (java.lang.Thread.State.TIMED_WAITING))) { <BUGS> updateMovement(); <BUGE> }else { keyThread = new java.lang.Thread() { public void run() { try { keyThread.sleep(timeSensitiveness); <BUGS> updateMovement(); <BUGE> } catch (java.lang.InterruptedException e) { java.lang.System.out.println(("------ Key thread interrupted -------\n" + e)); } } }; keyThread.start(); } } 
<BUGS> @java.lang.Override <BUGE> public void onSearchRequest() { <BUGS> super.onSearchRequest(); <BUGE> if (!(mInput.isShown())) { mInput.setVisibility(View.VISIBLE); mInput.requestFocus(); android.view.inputmethod.InputMethodManager imm = ((android.view.inputmethod.InputMethodManager) (getFFCActivity().getSystemService(Context.INPUT_METHOD_SERVICE))); imm.showSoftInput(mInput, InputMethodManager.SHOW_FORCED); } } 
public static java.util.List<pi.pathfinder.Area> createGraphFromMap(pi.controller.Map map, int robotWidth, int robotHeight) { java.util.List<pi.pathfinder.ObstacleEdge> obstacleEdges = pi.pathfinder.GraphConverter.createObstacleEdges(map.getObstacles()); pi.pathfinder.GraphConverter.sortObstacleEdges(obstacleEdges); java.util.List<pi.pathfinder.Area> graph = pi.pathfinder.GraphConverter.createGraphFromObstacleEdges(map, obstacleEdges); pi.pathfinder.GraphConverter.removeTooSmallAreas(graph, robotWidth, robotHeight); <BUGS> <BUGE> pi.pathfinder.GraphConverter.logger.info(graph); return graph; } 
@org.junit.Test public void testGetTagsByUnknownQueryIds() { <BUGS> com.google.common.collect.SetMultimap<java.lang.Long, java.lang.String> tags = userQueryDao.getQueryTags(java.util.Arrays.asList(16L, 17L)); <BUGE> assertTrue((!(tags.isEmpty()))); assertEquals(com.google.common.collect.Sets.newHashSet("public"), tags.get(16L)); assertEquals(com.google.common.collect.Sets.<java.lang.String>newHashSet(), tags.get(17L)); } 
public java.lang.Object getObject(java.lang.String key) { java.lang.Object result = null; try { <BUGS> result = this.keyValue.getValue(key); <BUGE> } catch (java.util.ConcurrentModificationException e) { if (this.logger.error(this, "getObject", NetworkParserLog.ERROR_TYP_CONCURRENTMODIFICATION, key)) { throw e; } } return result; } 
private void orderedInsert(gradesystem.Grades insertedGrade) { int index = 0; gradesystem.Grades element; <BUGS> while ((element = aList.get(index)) != null) { <BUGE> if ((insertedGrade.getTotalGrade()) > (element.getTotalGrade())) { aList.add(index, insertedGrade); break; } index++; } if (index == (aList.size())) aList.add(index, insertedGrade);  } 
public static void setResultFilterMethod(com.ghostflying.portalwaitinglist.util.SettingUtil.ResultFilterMethod resultFilterMethod) { <BUGS> if (resultFilterMethod == (com.ghostflying.portalwaitinglist.util.SettingUtil.getResultFilterMethod())) { <BUGE> com.ghostflying.portalwaitinglist.util.SettingUtil.options.edit().putInt(com.ghostflying.portalwaitinglist.util.SettingUtil.RESULT_FILTER_METHOD_NAME, resultFilterMethod.ordinal()).apply(); com.ghostflying.portalwaitinglist.util.SettingUtil.notifyChange(resultFilterMethod); } } 
public void generateFirstGeneration() { genomes = new float[genomesPerGeneration][(numPlanets) * (paramsPerPlanet)]; for (int i = 0; i < (genomesPerGeneration); i++) genomes[i] = generateRandomGenome();  generationCounter = 1; <BUGS> com.github.infosimulators.events.EventRegistry.fire(new com.github.infosimulators.events.Event(com.github.infosimulators.events.EventType.TRAINER_GENERATED_FIRST_GEN, null)); <BUGE> com.github.infosimulators.events.EventRegistry.fire(new com.github.infosimulators.events.Event(com.github.infosimulators.events.EventType.TRAINER_GEN_GENERATED, new java.lang.String[]{ "1" })); } 
public void housesNotIncluded(java.util.ArrayList<org.w3c.dom.Element> houseElements) { if (!(houseElements.isEmpty())) { for (int i = 0; i < (houseElements.size()); i++) { <BUGS> if ((houseElements.get(i).getAttribute(model.ViewHandler.houseIDTag)) != null) { houseElements.get(i).setAttribute(model.ViewHandler.inView, "false"); } <BUGE> } }else { } } 
public void toggleWarHUD(org.bukkit.entity.Player p) { if (!(warUsers.contains(p))) { toggleAllOff(p); <BUGS> <BUGE> com.palmergames.bukkit.towny.huds.WarHUD.toggleOn(p, plugin.getTownyUniverse().getWarEvent()); }else toggleAllOff(p);  } 
private static java.util.List<java.lang.String> getGlobalTemp(SymbolTable table) { java.util.List<java.lang.String> globalTemp = new java.util.ArrayList<>(); if (table.getScope().equals("GLOBAL")) { java.lang.System.out.println(); <BUGS> java.lang.System.out.println(";Yes, global"); <BUGE> for (SymbolEntry se : table.getDecls()) { java.lang.String variable = se.getVariable(); if (variable.startsWith("$L")) { globalTemp.add(variable); } } } return globalTemp; } 
private int findId(java.lang.String findTitle) { <BUGS> for (int i = 0; i < (myArrayList.size()); i++) { if (myArrayList.get(i).getTitle().matches(findTitle)) { <BUGE> return i; } } <BUGS> return 0; <BUGE> } 
public void actionPerformed(java.awt.event.ActionEvent ex) { bottomInner.remove(startButton); bottomInner.revalidate(); bottomInner.repaint(); <BUGS> startButton.removeActionListener(this); <BUGE> new java.lang.Thread(new java.lang.Runnable() { public void run() { startGame(); } }).start(); java.lang.System.out.println("Thread test"); } 
public void run() { <BUGS> while ((((t) < (tf)) || ((nProf) > 0)) || ((nAlu) > 0)) { <BUGE> int j = indexOfMin(tps); if ((tpll) <= (tps.get(j))) { llegada(); }else { salida(j); } if ((t) >= (tf)) { tpll = hv; } } calcularResultados(); } 
synchronized void releaseNodeState(final org.opendaylight.bgpcep.pcep.topology.provider.TopologyNodeState nodeState, final org.opendaylight.protocol.pcep.PCEPSession session, final boolean persistNode) { <BUGS> org.opendaylight.bgpcep.pcep.topology.provider.ServerSessionManager.LOG.debug("Node {} unbound", nodeState.getNodeId()); <BUGE> this.nodes.remove(org.opendaylight.bgpcep.pcep.topology.provider.ServerSessionManager.createNodeId(session.getRemoteAddress())); <BUGS> nodeState.released(persistNode); <BUGE> } 
<BUGS> public void removeType(java.lang.String name) { <BUGE> org.yakindu.base.types.Type type = typeRegistry.get(name); if (type != null) { extendsRegistry.removeAll(type); resource.getContents().remove(type); typeRegistry.remove(name); } } 
public static com.alexwyler.wwc.dawg.DawgNode getInstance() { if ((com.alexwyler.wwc.dawg.DawgNode.instance) == null) { try { <BUGS> java.lang.System.out.print("Creating DAWG... "); <BUGE> com.alexwyler.wwc.dawg.DawgNode.instance = com.alexwyler.wwc.dawg.DawgNode.makeDawg(new java.io.File("WebContent/words.txt")); <BUGS> java.lang.System.out.println("DONE."); <BUGE> } catch (java.io.FileNotFoundException e) { e.printStackTrace(); } } return com.alexwyler.wwc.dawg.DawgNode.instance; } 
public org.knowm.xchart.BubbleSeries addSeries(java.lang.String seriesName, java.util.List<? extends java.lang.Number> xData, java.util.List<? extends java.lang.Number> yData, java.util.List<? extends java.lang.Number> bubbleData) { <BUGS> return addSeries(seriesName, org.knowm.xchart.internal.Utils.getDoubleArrayFromDateList(xData), org.knowm.xchart.internal.Utils.getDoubleArrayFromNumberList(yData), org.knowm.xchart.internal.Utils.getDoubleArrayFromNumberList(bubbleData)); <BUGE> } 
private com.android.server.usage.UserUsageStatsService getUserDataAndInitializeIfNeededLocked(int userId, long currentTimeMillis) { com.android.server.usage.UserUsageStatsService service = mUserState.get(userId); if (service == null) { service = new com.android.server.usage.UserUsageStatsService(getContext(), userId, new java.io.File(mUsageStatsDir, java.lang.Integer.toString(userId)), this); <BUGS> service.init(currentTimeMillis, getScreenOnTimeLocked()); <BUGE> mUserState.put(userId, service); } return service; } 
@java.lang.Override public void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_autocomplete); getApplicationComponent().inject(this); android.support.v7.widget.Toolbar toolbar = ((android.support.v7.widget.Toolbar) (findViewById(R.id.toolbar))); setSupportActionBar(toolbar); getSupportActionBar().setDisplayHomeAsUpEnabled(true); <BUGS> getSupportActionBar().setDisplayShowHomeEnabled(true); <BUGE> mPresenter.attachView(this); } 
public java.util.List<org.inaturalist.android.GuideTaxonXML> getTaxa(org.inaturalist.android.GuideTaxonFilter filter) { java.lang.String xPathExpression = buildFilterXpath(filter); java.util.ArrayList<org.w3c.dom.Node> nodes = getNodesByXPath(xPathExpression); java.util.ArrayList<org.inaturalist.android.GuideTaxonXML> taxa = new java.util.ArrayList<org.inaturalist.android.GuideTaxonXML>(); <BUGS> <BUGE> for (org.w3c.dom.Node node : nodes) { taxa.add(new org.inaturalist.android.GuideTaxonXML(this, node)); } return taxa; } 
public void continuouslyDiscoverServices() { android.util.Log.i(edu.rit.se.wifibuddy.WifiDirectHandler.TAG, "Continuously Discover services called"); if ((serviceDiscoveryRegistered) == false) { android.util.Log.i(edu.rit.se.wifibuddy.WifiDirectHandler.TAG, "Setting up service discovery"); registerServiceDiscoveryListeners(); serviceDiscoveryRegistered = true; } if (continuouslyDiscovering) { android.util.Log.w(edu.rit.se.wifibuddy.WifiDirectHandler.TAG, "Services are still discovering, do not need to make this call"); }else { addServiceDiscoveryRequest(); <BUGS> android.util.Log.i(edu.rit.se.wifibuddy.WifiDirectHandler.TAG, "Submitting first discover task"); <BUGE> continuouslyDiscovering = true; serviceDiscoveryTasks = new java.util.ArrayList<>(); discoverServices(); submitServiceDiscoveryTask(); } } 
public static void shuffle(java.lang.Object[] a) { for (int i = 1; i < (a.length); i++) { <BUGS> int r = edu.princeton.cs.algs4.StdRandom.uniform(0, i); <BUGE> java.lang.Object x = a[i]; a[i] = a[r]; a[r] = x; } } 
<BUGS> public void HitOrStand(Player x) { <BUGE> java.lang.System.out.println("Hit or stand?"); java.lang.System.out.println("1: Hit"); java.lang.System.out.println("2: Stand"); if ((cs1.Keyboard.readInt()) == 1) { <BUGS> _playerTotal += drawCard(); java.lang.System.out.println(_playerTotal); if ((_playerTotal) > 21) { x.lose(_bet); return ; <BUGE> }else { HitOrStand(x); } }else { <BUGS> return ; <BUGE> } <BUGS> <BUGE> } 
public java.util.List<utils.Song> getRandomSongList() { java.util.Random rand = new java.util.Random(); int randNum; java.util.List<utils.Song> randomSongs = new java.util.ArrayList<utils.Song>(); for (int i = 0; i < 3; i++) { randNum = (rand.nextInt(albumSongs.size())) + 1; java.lang.System.out.println(("random number: " + randNum)); <BUGS> randomSongs.add(albumSongs.get(randNum)); <BUGE> } return randomSongs; } 
public int selectRow(java.awt.event.MouseEvent e) { int selected_row = -1; java.awt.Point p = e.getPoint(); <BUGS> java.lang.System.out.println(((("Manowitz left page(x,y): " + (p.x)) + ", ") + (p.y))); <BUGE> java.awt.FontMetrics fm = right_page.getFontMetrics(right_page.getFont()); selected_row = ((p.y) / (fm.getHeight())) + 1; return selected_row; } 
@java.lang.Override public boolean equals(final java.lang.Object obj) { if ((this) == obj) { return true; } <BUGS> if ((obj == null) || ((obj.getClass()) != (this.getClass()))) { <BUGE> return false; } return address.equals(((com.iota.iri.Neighbor) (obj)).address); } 
public java.lang.String fetchOrgFileString(java.lang.String orgPath) throws com.matburt.mobileorg.Error.ReportableError { java.io.BufferedReader reader = this.fetchOrgFile(orgPath); <BUGS> <BUGE> java.lang.String fileContents = ""; java.lang.String thisLine = ""; try { while ((thisLine = reader.readLine()) != null) { fileContents += thisLine + "\n"; } } catch (java.io.IOException e) { throw new com.matburt.mobileorg.Error.ReportableError(r.getString(R.string.error_file_read, orgPath), e); } return fileContents; } 
@java.lang.Override public void onClick(android.view.View view) { if (status.equals(rustelefonen.no.drikkevett_android.tabs.planParty.BacPlanPartyFragment.Status.RUNNING)) { addConsumedUnits(getUnitId()); if (!(isFirstUnitAdded())) { setFirstUnitAdded(); } } if (status.equals(rustelefonen.no.drikkevett_android.tabs.planParty.BacPlanPartyFragment.Status.NOT_RUNNING)) { addPlannedUnits(getUnitId()); } <BUGS> if (status.equals(rustelefonen.no.drikkevett_android.tabs.planParty.BacPlanPartyFragment.Status.DA_RUNNING)) { } <BUGE> stateHandler(status); } 
public static org.json.JSONObject getObject(java.lang.String path) { java.nio.file.Path p = new java.io.File(path).toPath(); if (!(p.toFile().exists())) { <BUGS> throw new java.lang.RuntimeException("Configuration file does not exist!"); <BUGE> } try { return new org.json.JSONObject(new java.lang.String(java.nio.file.Files.readAllBytes(p), java.nio.charset.StandardCharsets.UTF_8)); } catch (java.io.IOException e) { e.printStackTrace(); } <BUGS> return null; <BUGE> } 
@java.lang.Override <BUGS> public void insert(E obj, int location) { if ((location - 1) < (currentSize)) { (currentSize)++; dynamicResize(true); shiftElements((location - 1), true); array[(location - 1)] = obj; <BUGE> }else { throw new java.lang.RuntimeException("Index is not within contiguous list"); } } 
@java.lang.Override public void preInit(net.minecraftforge.fml.common.event.FMLPreInitializationEvent e) { super.preInit(e); OBJLoader.INSTANCE.addDomain(com.cjm721.overloaded.Overloaded.MODID); <BUGS> MinecraftForge.EVENT_BUS.register(ModItems.distanceBreaker); <BUGE> MinecraftForge.EVENT_BUS.register(new com.cjm721.overloaded.client.render.block.compressed.CompressedBlockAssets()); com.cjm721.overloaded.common.block.ModBlocks.registerModels(); com.cjm721.overloaded.common.item.ModItems.registerModels(); CompressedResourcePack.INSTANCE.addDomain("overloaded"); CompressedResourcePack.INSTANCE.inject(); } 
@java.lang.Override public java.lang.String getLabel(java.lang.String section, java.lang.String name, java.lang.Object... params) { java.util.Map<java.lang.String, java.lang.String> label = org.auraframework.impl.context.LocalizationAdapterImpl.labels.get(name); if (label == null) { if (org.auraframework.impl.context.LocalizationAdapterImpl.testLabels.containsKey(getLabelKey(section, name))) { return org.auraframework.impl.context.LocalizationAdapterImpl.testLabels.get(getLabelKey(section, name)); } <BUGS> return "FIXME - LocalizationAdapter.getLabel() needs implementation!"; <BUGE> } return label.get(this.getAuraLocale().getLanguageLocale().toString()); } 
@java.lang.Override public void createTable(org.apache.hadoop.hive.metastore.api.Table tbl) throws org.apache.hadoop.hive.metastore.api.InvalidObjectException, org.apache.hadoop.hive.metastore.api.MetaException { java.lang.String tbls = com.alibaba.fastjson.JSON.toJSONString(tbl); <BUGS> int err = 0; redis.clients.jedis.Jedis jedis = redisUtil.getJedis(); <BUGE> jedis.hset("table", ((("" + (tbl.getDbName())) + ".") + (tbl.getTableName())), tbls); org.apache.hadoop.hive.metastore.NewObjectStore.LOG.info((("-----tianlong-----create table " + (tbl.getTableName())) + " success!")); <BUGS> jedis.close(); <BUGE> } 
public void actionPerformed(java.awt.event.ActionEvent e) { <BUGS> placexor(1, 1, whichmark()); <BUGE> if (debug) java.lang.System.out.println(("Paikka 1 1 " + (whichmark())));  ChangeButton(buttonbb); buttonbb.setEnabled(false); viimeisinSiirto[1][1] = whichmark(); (buttoncount)++; } 
private static void distributeFiles(java.lang.String tmpPath, org.apache.flink.api.java.ExecutionEnvironment env) throws java.io.IOException, java.net.URISyntaxException { org.apache.flink.python.api.PythonPlanBinder.clearPath(org.apache.flink.python.api.PythonPlanBinder.FLINK_HDFS_PATH); org.apache.flink.runtime.filecache.FileCache.copy(new org.apache.flink.core.fs.Path(tmpPath), new org.apache.flink.core.fs.Path(org.apache.flink.python.api.PythonPlanBinder.FLINK_HDFS_PATH), true); env.registerCachedFile(org.apache.flink.python.api.PythonPlanBinder.FLINK_HDFS_PATH, org.apache.flink.python.api.PythonPlanBinder.FLINK_PYTHON_DC_ID); <BUGS> org.apache.flink.python.api.PythonPlanBinder.clearPath(tmpPath); <BUGE> } 
public static void printConfigurationProblems(java.io.PrintStream out, java.util.List<yarnandtail.andhow.ConstructionProblem> probs, yarnandtail.andhow.appconfig.AppConfigDefinition appDef) { if (probs.isEmpty()) { }else { <BUGS> yarnandtail.andhow.ReportGenerator.printProblemHR(out); <BUGE> out.println("CONSTRUCTION PROBLEMS  ~Foundational problems with the App Configuration."); out.println("~The AppConfig may have been built in an inconsistent way, such as default values that violate validation rules."); out.println("~When there are construction problems, no attempt is made to load configuration values."); out.println(); out.println("Defailed list of Construction Problems:"); for (yarnandtail.andhow.ConstructionProblem p : probs) { out.println(p.getMessage()); } <BUGS> yarnandtail.andhow.ReportGenerator.printProblemHR(out); <BUGE> } } 
public seedu.todolist.model.task.Task toModelType() throws seedu.todolist.commons.exceptions.IllegalValueException { final java.util.List<seedu.todolist.model.tag.Tag> personTags = new java.util.ArrayList<>(); for (seedu.todolist.storage.XmlAdaptedTag tag : tagged) { personTags.add(tag.toModelType()); } final seedu.todolist.model.task.Name name = new seedu.todolist.model.task.Name(this.name); final seedu.todolist.model.tag.UniqueTagList tags = new seedu.todolist.model.tag.UniqueTagList(personTags); <BUGS> return new seedu.todolist.model.task.Task(name, tags, null, null); <BUGE> } 
@java.lang.Override public void run(io.github.carlorodriguez.alarmon.NotificationServiceInterface service) { int count; try { count = service.firingAlarmCount(); } catch (android.os.RemoteException e) { return ; <BUGS> } finally { handler.post(new java.lang.Runnable() { @java.lang.Override public void run() { notifyService.unbind(); } }); <BUGE> } if (count > 0) { android.content.Intent notifyActivity = new android.content.Intent(getApplicationContext(), io.github.carlorodriguez.alarmon.ActivityAlarmNotification.class); notifyActivity.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK); startActivity(notifyActivity); } } 
javax.swing.JLabel getViewTitleLabel() { if ((viewTitleLabel) == null) { viewTitleLabel = new javax.swing.JLabel(); <BUGS> viewTitleLabel.setToolTipText("Click to change the title..."); <BUGE> viewTitleLabel.setFont(viewTitleLabel.getFont().deriveFont(org.cytoscape.util.swing.LookAndFeelUtil.getSmallFontSize())); viewTitleLabel.setMinimumSize(new java.awt.Dimension(viewTitleLabel.getPreferredSize().width, getViewTitleTextField().getPreferredSize().height)); } return viewTitleLabel; } 
@org.junit.Test public void testRouteDelete() { testRouteAddToNoVlan(); org.onosproject.incubator.net.routing.ResolvedRoute route = new org.onosproject.incubator.net.routing.ResolvedRoute(org.onosproject.sdnip.SdnIpFibTest.PREFIX1, org.onosproject.sdnip.SdnIpFibTest.IP3, org.onosproject.sdnip.SdnIpFibTest.MAC3, org.onosproject.sdnip.SdnIpFibTest.SW3_ETH1); org.onosproject.net.intent.MultiPointToSinglePointIntent removedIntent = createIntentToThreeSrcOneTwo(org.onosproject.sdnip.SdnIpFibTest.PREFIX1); <BUGS> org.easymock.EasyMock.reset(intentSynchronizer); <BUGE> intentSynchronizer.withdraw(org.onosproject.routing.TestIntentServiceHelper.eqExceptId(removedIntent)); <BUGS> org.easymock.EasyMock.replay(intentSynchronizer); <BUGE> routeListener.event(new org.onosproject.incubator.net.routing.RouteEvent(RouteEvent.Type.ROUTE_REMOVED, route)); <BUGS> org.easymock.EasyMock.verify(intentSynchronizer); <BUGE> } 
<BUGS> public static int getSequenceNumber(byte[] datagramContents) { <BUGE> int start = (Packet.SENDER_LENGTH) + (Packet.RECEIVER_LENGTH); int end = start + (Packet.SEQUENCE_NUM_LENGTH); byte[] seqNumArray = new byte[Packet.SEQUENCE_NUM_LENGTH]; seqNumArray = java.util.Arrays.copyOfRange(datagramContents, start, end); java.nio.ByteBuffer seqNumByteBuffer = java.nio.ByteBuffer.wrap(seqNumArray); int seqNum = seqNumByteBuffer.getShort(); return seqNum; } 
private void generateFieldIdMethod(final java.lang.StringBuilder sb, final uk.co.real_logic.sbe.ir.Token token, final java.lang.String indent) { <BUGS> sb.append(java.lang.String.format((("\n" + indent) + "    public const int %sId = %d;\n"), uk.co.real_logic.sbe.generation.csharp.CSharpUtil.CSharpUtil.formatPropertyName(token.name()), java.lang.Integer.valueOf(token.id()))); <BUGE> } 
public boolean lowerRoom(int roomID) { int prev_level = rooms_list.get(roomID).getLevel(); rooms_list.get(roomID).lower(); <BUGS> if (prev_level > (rooms_list.get(roomID).getLevel())) return true; else return false;  <BUGE> } 
@java.lang.Deprecated @java.lang.Override public void execute() { <BUGS> org.usfirst.frc.team1100.robot.subsystems.Drive.getInstance().driveMecanum(org.usfirst.frc.team1100.robot.OI.getInstance().getLeftStick().getX(), org.usfirst.frc.team1100.robot.OI.getInstance().getLeftStick().getY(), org.usfirst.frc.team1100.robot.OI.getInstance().getRightStick().getY(), 0.0); <BUGE> } 
<BUGS> @java.lang.Override public void unregisterHandler(org.eclipse.smarthome.core.thing.Thing thing) { org.osgi.framework.ServiceRegistration<org.eclipse.smarthome.core.thing.binding.ThingHandler> serviceRegistration = thingHandlers.remove(thing.getUID().toString()); if (serviceRegistration != null) { org.eclipse.smarthome.core.thing.binding.ThingHandler thingHandler = ((org.eclipse.smarthome.core.thing.binding.ThingHandler) (bundleContext.getService(serviceRegistration.getReference()))); serviceRegistration.unregister(); removeHandler(thingHandler); thingHandler.dispose(); if (thingHandler instanceof org.eclipse.smarthome.core.thing.binding.BaseThingHandler) { ((org.eclipse.smarthome.core.thing.binding.BaseThingHandler) (thingHandler)).unsetBundleContext(bundleContext); } <BUGE> } } 
public void restoreMarkers() { java.util.Iterator<application.GeographicPoint> it = markerMap.keySet().iterator(); while (it.hasNext()) { gmapsfx.javascript.object.Marker marker = markerMap.get(it.next()); if (marker != (startMarker)) { <BUGS> <BUGE> marker.setVisible(true); } } selectManager.resetSelect(); } 
@java.lang.Override public byte[] getBinaryContentById(int id, int publication) throws org.dd4t.core.exceptions.ItemNotFoundException { final com.tridion.data.BinaryData binaryData = org.dd4t.providers.impl.BrokerBinaryProvider.BINARY_CONTENT_RETRIEVER.getBinary(publication, id); <BUGS> if ((binaryData == null) || ((binaryData.getDataSize()) > 0)) { <BUGE> throw new org.dd4t.core.exceptions.ItemNotFoundException(((("Unable to find binary content by id: tcm:" + publication) + "-") + id)); } try { return binaryData.getBytes().clone(); } catch (java.io.IOException e) { throw new org.dd4t.core.exceptions.ItemNotFoundException(e); } } 
<BUGS> public static void setVertGroup(javax.swing.GroupLayout layout, javax.swing.JScrollPane jScrollPane1, javax.swing.JScrollPane jScrollPane2, javax.swing.JLabel jLabel1, javax.swing.JLabel status, javax.swing.JTextField cmdEntry) { <BUGE> javax.swing.GroupLayout.ParallelGroup vGroup = layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING); javax.swing.GroupLayout.SequentialGroup v1 = UserInterface.UserInterface.vertGroup1(layout, jScrollPane2, jScrollPane1, status, jLabel1, cmdEntry); vGroup.addGroup(v1); layout.setVerticalGroup(vGroup); } 
<BUGS> private void setupEventListeners() { <BUGE> setOnSearchClickedListener(new android.view.View.OnClickListener() { @java.lang.Override public void onClick(android.view.View view) { android.widget.Toast.makeText(getActivity(), "Implement your own in-app search", Toast.LENGTH_LONG).show(); } }); setOnItemViewClickedListener(new com.karmacons.a123movie.MainFragment.ItemViewClickedListener()); setOnItemViewSelectedListener(new com.karmacons.a123movie.MainFragment.ItemViewSelectedListener()); } 
@java.lang.Override public void onDataReceived() { if (sensor.canGetInfo()) { temperature = sensor.getTemperature(); location = sensor.getLocation(); new java.lang.Thread(run).start(); }else { pCircle.dismiss(); <BUGS> android.widget.Toast.makeText(getApplicationContext(), "Can not get sensor data", Toast.LENGTH_SHORT).show(); <BUGE> } <BUGS> sensor.removeListener(); <BUGE> } 
@java.lang.Override public boolean isApplicable(model.AtomData data) { if (((toDeltaColumn) == null) && ((toDeltaID) != null)) { for (model.DataColumnInfo d : data.getDataColumnInfos()) { if (d.getId().equals(toDeltaID)) { this.toDeltaColumn = d; } } } <BUGS> return (((data.getNext()) != null) || ((data.getPrevious()) != null)) && ((this.toDeltaColumn) != null); <BUGE> } 
@java.lang.SuppressWarnings(value = "null") public void insertAt(int item, int pos) { <BUGS> int i = 0; <BUGE> Node newNode = new Node(); newNode.data = item; newNode.next = null; Node temp; temp = head; while (i < (pos - 1)) { i++; temp = temp.next; } newNode.next = temp.next; temp.next = newNode; } 
@java.lang.Override public int compare(com.vejkamera.RoadCamera lhsRoadCamera, com.vejkamera.RoadCamera rhsRoadCamera) { if (lhsRoadCamera == null) { return -1; } if (rhsRoadCamera == null) { return 1; } for (java.lang.String currentSyncId : originalSorting) { <BUGS> if ((lhsRoadCamera.getSyncId()) == currentSyncId) { <BUGE> return -1; } <BUGS> if ((rhsRoadCamera.getSyncId()) == currentSyncId) { <BUGE> return 1; } } return 0; } 
@org.junit.Test public void mustProperlyCreatePacketWithNonZeroPorts() { com.offbynull.portmapper.natpmp.messages.UdpMappingNatPmpRequest req = new com.offbynull.portmapper.natpmp.messages.UdpMappingNatPmpRequest(61938, 62452, 4294967295L); <BUGS> org.junit.Assert.assertEquals(2, req.getOp()); <BUGE> org.junit.Assert.assertEquals(61938, req.getInternalPort()); org.junit.Assert.assertEquals(62452, req.getSuggestedExternalPort()); org.junit.Assert.assertEquals(4294967295L, req.getLifetime()); } 
private java.lang.String getFormattedMessage(java.lang.String key, java.lang.Object... data) { <BUGS> java.lang.String message = null; <BUGE> try { message = messageBundle.getString(key); } catch (java.util.MissingResourceException ex) { return (key + " ") + (java.util.Arrays.toString(data)); } return java.text.MessageFormat.format(message, data); } 
public void launchFeedbackActivity(android.content.Context context, java.lang.String subject) { android.content.Intent emailIntent = new android.content.Intent(android.content.Intent.ACTION_SENDTO, android.net.Uri.fromParts("mailto", Constants.DEV_EMAIL, null)); emailIntent.putExtra(Intent.EXTRA_SUBJECT, subject); emailIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK); <BUGS> context.startActivity(android.content.Intent.createChooser(emailIntent, context.getString(R.string.select_app))); <BUGE> } 
public static boolean checkItemStatus(org.eclipse.swt.widgets.MenuItem item, boolean readonly) { <BUGS> <BUGE> if (item.isEnabled()) { if (readonly) { return false; }else { return true; } }else { if (readonly) { return true; }else { return false; } } } 
@org.hamcrest.Factory public static org.hamcrest.Matcher<facebook4j.internal.http.HttpParameter[]> hasPostJsonParameter(final java.lang.String name, final java.lang.String expectedJsonObjectSource) { facebook4j.internal.org.json.JSONObject expectedJsonObject; try { expectedJsonObject = new facebook4j.internal.org.json.JSONObject(expectedJsonObjectSource); } catch (facebook4j.internal.org.json.JSONException ex) { <BUGS> throw new java.lang.AssertionError(("failed to parse object source: " + expectedJsonObjectSource), ex); <BUGE> } return facebook4j.junit.F4JHttpParameterMatchers.hasPostJsonParameter(name, expectedJsonObject); } 
@java.lang.Override public int compare(java.lang.String object1, java.lang.String object2) { java.lang.Long l1 = mp.get(object1); java.lang.Long l2 = mp.get(object2); if (l2 == null) { l2 = 0L; } if (l1 == null) { l1 = 0L; } <BUGS> return l1 < l2 ? 1 : l1 == l2 ? 0 : -1; <BUGE> } 
public void init() { try { <BUGS> java.util.ArrayList<java.util.ArrayList<java.lang.String>> last_id = place_bet.ExecuteQuery("SELECT max(BetID) FROM bets;"); <BUGE> if ((last_id.get(0).get(0)) != null) this.CurrentBetID = java.lang.Long.parseLong(last_id.get(0).get(0));  } catch (java.sql.SQLException e) { e.printStackTrace(); } } 
@javax.ws.rs.POST @javax.ws.rs.Consumes(value = javax.ws.rs.core.MediaType.APPLICATION_JSON) @javax.ws.rs.Produces(value = javax.ws.rs.core.MediaType.APPLICATION_JSON) @javax.ws.rs.Path(value = "/{id}/reminder") @io.swagger.annotations.ApiOperation(value = "sends an email reminder for a specified assessment") @io.swagger.annotations.ApiResponses(value = { @io.swagger.annotations.ApiResponse(code = 200, message = "Reminder sent") }) public javax.ws.rs.core.Response remindRespondant(@io.swagger.annotations.ApiParam(value = "Respondant Id") @javax.ws.rs.PathParam(value = "id") java.lang.Long respondantId) { com.employmeo.data.model.Respondant respondant = respondantService.getRespondantById(respondantId); if ((respondant.getRespondantStatus()) <= (com.employmeo.data.model.Respondant.STATUS_STARTED)) { respondant.setRespondantStatus(Respondant.STATUS_REMINDED); respondantService.save(respondant); <BUGS> emailService.sendEmailReminder(respondant); <BUGE> } <BUGS> <BUGE> return javax.ws.rs.core.Response.status(Status.OK).build(); } 
public void hmovement() { if (((movementSpeed) > 0) && ((xpos) >= 630)) { <BUGS> updateLogic(); <BUGE> } if (((movementSpeed) < 0) && ((xpos) <= 2)) { <BUGS> updateLogic(); <BUGE> } xpos += movementSpeed; } 
public java.util.List<java.lang.Integer> classify(java.util.List<Utils.DataVector> data, boolean calAccuracy) { for (Utils.DataVector vector : data) { java.util.List<java.lang.Integer> treePredictions = new java.util.ArrayList(data.size()); for (RandomForestHOG.DecisionTree.DecisionTree tree : dTree) { int curPrediction = tree.classify(vector); treePredictions.add(curPrediction); } int forestPrediction = Utils.Helper.getModeInt(treePredictions); finalPredictions.add(forestPrediction); } <BUGS> if (calAccuracy) { calAccuracy(); } <BUGE> return finalPredictions; } 
private void clearUserEdits(int[] backup) { int userEdited = 0; for (int i = 0; i < (backup.length); i++) { if (((backup[i]) != (Cell.NONE)) && (!(mCells[i].isLocked()))) { backup[i] = Cell.NONE; userEdited++; } } <BUGS> android.util.Log.i("SUDOKU", (("Removed " + userEdited) + " user edits and restarted the queue")); <BUGE> } 
private boolean isNorthEastMovementBlocked(game.Piece piece, int newX, int newY) { <BUGS> <BUGE> for (int i = (piece.getY()) + 1; i < newY; i++) { <BUGS> int moveCounter = 1; <BUGE> if (tileHasPiece(((piece.getX()) + moveCounter), i)) return true;  moveCounter++; } return false; } 
public void hurt(final int aValue, final boolean aHeavy) { mValue += aValue; if ((mValue) >= (mSteps.length)) { mValue = (mSteps.length) - 1; } <BUGS> mChangeListener.sendChange(new com.deepercreeper.vampireapp.host.change.HealthChange(false, mValue)); <BUGE> if (aHeavy) { mHeavyWounds += aValue; if ((mHeavyWounds) > (mValue)) { mHeavyWounds = mValue; } mChangeListener.sendChange(new com.deepercreeper.vampireapp.host.change.HealthChange(true, mHeavyWounds)); } <BUGS> <BUGE> updateValue(); } 
private java.lang.String worstTime() { java.util.ArrayList<java.lang.Long> arrayListTemp = new java.util.ArrayList<>(); for (long i : arrayListTimes) { if (i > 0) { arrayListTemp.add(i); } } if ((arrayListTemp.size()) == 0) { <BUGS> return ""; <BUGE> } return "Worst: " + (com.example.tom.timer.TimerTime.convertMillisToTime(java.util.Collections.max(arrayListTemp))); } 
public void bindRestaurant(com.example.bubbles.myrestaurants.models.Restaurant restaurant) { <BUGS> com.squareup.picasso.Picasso.with(this.mContext).load(restaurant.getImageUrl()).into(mRestaurantImageView); <BUGE> mNameTextView.setText(restaurant.getName()); mCategoryTextView.setText(restaurant.getCategories().get(0)); mRatingTextView.setText((("Rating: " + (restaurant.getRating())) + "/5")); } 
public void onClick(android.content.DialogInterface dialog, int id) { dbHelper.unsubscribeFromLecture(lectureIdsToUnsubscribe); for (java.lang.String lectureId : lectureIdsToUnsubscribe) { <BUGS> com.pushbots.push.Pushbots.sharedInstance().untag("lectureId"); <BUGE> } checkboxList = new java.util.ArrayList<>(); myLecturesListView.setAdapter(new util.CustomListAdapter(this, R.layout.listitemrow, checkboxList)); fillLecturesList(); android.widget.Toast.makeText(this, "Subscribed", Toast.LENGTH_SHORT); } 
public void test_when_VideoH264PacketProducer_has_started_then_isWorking_returns_true_otherwise_false() { com.example.zebul.cameraservice.packet_producers.video.camera.CameraVideoH264PacketProducer producer = new com.example.zebul.cameraservice.packet_producers.video.camera.CameraVideoH264PacketProducer(new com.example.zebul.cameraservice.packet_producers.CameraVideoH264PacketProducerTest.H264PacketListenerFake(), new com.example.zebul.cameraservice.packet_producers.CameraVideoH264PacketProducerTest.PacketProductionExceptionListenerFake()); assertFalse(producer.isWorking()); for (int i = 0; i < 3; i++) { <BUGS> producer.start(defaultCameraSettings, (i + "")); <BUGE> assertTrue(producer.isWorking()); producer.stop(); assertFalse(producer.isWorking()); } } 
public void stopStreaming() { mStreamManager.stopStreaming().addOnCompleteListener(new com.google.android.gms.tasks.OnCompleteListener<java.lang.Void>() { @java.lang.Override public void onComplete(@android.support.annotation.NonNull com.google.android.gms.tasks.Task<java.lang.Void> task) { if (task.isSuccessful()) { android.util.Log.d(io.straas.android.sdk.streaming.demo.MyScreencastSession.TAG, "Stop succeeds"); <BUGS> mControlOverlayLayout.updateStreamingStatusOnUiThread(mMainThreadHandler, false); <BUGE> endLiveEvent(); }else { android.util.Log.e(io.straas.android.sdk.streaming.demo.MyScreencastSession.TAG, ("Stop fails: " + (task.getException()))); } } }); } 
@java.lang.Override public void run() { try { <BUGS> java.lang.Thread.sleep((2 * 1000L)); <BUGE> slaveJedis80.shutdown(); logger.info("shutdown the slave 80"); java.lang.Thread.sleep((1 * 1000L)); slaveJedis81.shutdown(); logger.info("shutdown the slave 81"); } catch (java.lang.InterruptedException e) { e.printStackTrace(); } } 
private java.lang.String[] getParsedData() { java.lang.String[] parsedComponentData = new java.lang.String[this.componentList.size()]; for (int i = 0; i < (this.componentList.size()); i++) { Strand temp = this.componentList.get(i); java.lang.String sequence = temp.sequence; parsedComponentData[i] = ((temp.name) + ":") + sequence; <BUGS> java.lang.System.out.println(parsedComponentData[i]); <BUGE> } return parsedComponentData; } 
private java.lang.String readFile() throws java.io.FileNotFoundException, java.io.IOException { java.util.List<java.lang.String> lines = com.google.common.io.CharStreams.readLines(new java.io.FileReader(file)); java.lang.String allLines = ""; for (java.lang.String line : lines) { allLines += line + "\n"; } <BUGS> return allLines.substring(0, allLines.length()); <BUGE> } 
public void rerunFilter() { filterOutput.clear(); ninja.mbedded.ninjaterm.util.streamedText.StreamedText toBeConsumed = new ninja.mbedded.ninjaterm.util.streamedText.StreamedText(totalUnfrozenAnsiParserOutput); bufferBetweenAnsiParserAndFilter = toBeConsumed; streamingFilter.parse(toBeConsumed, filterOutput); for (ninja.mbedded.ninjaterm.model.terminal.txRx.StreamedTextListener newStreamedTextListener : newStreamedTextListeners) { newStreamedTextListener.run(filterOutput); } <BUGS> <BUGE> } 
<BUGS> public java.lang.String percentEncodeRfc3986(java.lang.String s) { <BUGE> java.lang.String out; try { out = java.net.URLEncoder.encode(s, utils.SignedRequestsHelper.UTF8_CHARSET).replace("+", "%20").replace("*", "%2A").replace("%7E", "~"); } catch (java.io.UnsupportedEncodingException e) { out = s; } return out; } 
@java.lang.Override public boolean setNextRow(io.crate.core.collections.Row row) { <BUGS> row = new io.crate.core.collections.RowN(row.materialize()); <BUGE> if (projector.downstreamAborted.get()) { return false; } if (!(lowestCommon.isEmittable(row, this))) { <BUGS> pendingPause.set(true); <BUGE> pause(); } return downstreamContext.setNextRow(row); } 
private void processNormalTasksAndEvents(java.util.ArrayList<katnote.task.Task> normalTasks, java.util.ArrayList<katnote.task.Task> events) { <BUGS> if ((normalTasks == null) || (normalTasks.isEmpty())) { <BUGE> return ; } java.util.Queue<katnote.task.Task> normalTasksQueue = copyTasksIntoLinkedList(normalTasks); java.util.ArrayList<katnote.task.Task> eventCopy = new java.util.ArrayList<katnote.task.Task>(events); if (_isGUIFormat) { processForToday(normalTasksQueue, eventCopy); processForTomorrow(normalTasksQueue, eventCopy); processForTheWeek(normalTasksQueue, eventCopy); processRemainingTasks(normalTasksQueue, eventCopy); } } 
private int writeSprite(byte[] spriteData) { <BUGS> java.lang.System.out.println(("Data addr=" + (dataAddr))); <BUGE> int size = spriteData.length; int bankBytesLeft = (SpritesToROM.BANK_SIZE) - ((dataAddr) % (SpritesToROM.BANK_SIZE)); if (bankBytesLeft < size) { dataAddr += bankBytesLeft + (SpritesToROM.HEADER_SIZE); } <BUGS> <BUGE> writeIndex(dataAddr); dataAddr += writeBytes(rom, dataAddr, spriteData); <BUGS> return size; <BUGE> } 
@org.springframework.web.bind.annotation.RequestMapping(value = "/sign_in", method = org.springframework.web.bind.annotation.RequestMethod.POST) public java.lang.String loginRedirect(@org.springframework.web.bind.annotation.ModelAttribute @javax.validation.Valid fr.univ.annuaire.beans.Login l, org.springframework.validation.BindingResult result) throws fr.univ.annuaire.dao.DaoException { <BUGS> fr.univ.annuaire.manager.LoginManager manager = new fr.univ.annuaire.manager.LoginManager(l); <BUGE> if (result.hasErrors()) { logger.info("Returning log view, auth failled: incorrect syntax"); return "login"; } <BUGS> if (!(manager.checkLogin())) { <BUGE> logger.info("Returning accueil view, auth success"); return "redirect:/actions/accueil"; } logger.info("Returning log view, auth failled: wrong identifiants"); return "login"; } 
@java.lang.Override public void onClick(android.view.View v) { if ((level) < (lvlMax)) { (level)++; }else { level = lvlMin; } android.util.Log.d("lv", java.lang.String.valueOf(level)); <BUGS> levelTxt.setText(("レベル" + (java.lang.String.valueOf(level)))); <BUGE> page = firstPage; <BUGS> pageTxt.setText(("ページ" + (java.lang.String.valueOf(page)))); <BUGE> new com.example.shintaku.test.Setting2Activity.Loader().execute(); } 
@java.lang.Override public void onComplete(@android.support.annotation.NonNull com.google.android.gms.tasks.Task<com.google.firebase.auth.AuthResult> task) { if (task.isSuccessful()) { android.util.Log.d(com.example.jason.fooder1.LoginPage.TAG, "signInWithCredential:success"); com.google.firebase.auth.FirebaseUser user = mAuth.getCurrentUser(); <BUGS> updateUI(user); <BUGE> }else { android.util.Log.w(com.example.jason.fooder1.LoginPage.TAG, "signInWithCredential:failure", task.getException()); android.widget.Toast.makeText(this, "Authentication failed.", Toast.LENGTH_SHORT).show(); <BUGS> updateUI(null); <BUGE> } } 
private void resize(int capacity) { assert capacity >= (N); Item[] temp = ((Item[]) (new java.lang.Object[capacity])); <BUGS> synchronized(a) { for (int i = 0; i < (N); i++) { copyIfNotNull(a, temp, i, i); } <BUGE> } a = temp; } 
private java.util.List<uk.ac.ox.zoo.seeg.abraid.mp.common.domain.Location> filterToLocationsWithMatchingGeoNameId(java.util.List<uk.ac.ox.zoo.seeg.abraid.mp.common.domain.Location> locations, java.lang.Integer geoNameId) { java.util.List<uk.ac.ox.zoo.seeg.abraid.mp.common.domain.Location> locationsWithCorrectGeoNameId = new java.util.ArrayList<>(); for (uk.ac.ox.zoo.seeg.abraid.mp.common.domain.Location location : locations) { <BUGS> if (location.getGeoNameId().equals(geoNameId)) { <BUGE> locationsWithCorrectGeoNameId.add(location); } } return locationsWithCorrectGeoNameId; } 
public void stopRecording() throws java.io.IOException { isRecording = false; <BUGS> <BUGE> mr.stop(); mr.reset(); mr.release(); java.io.File recordedFile = new java.io.File(app.ddf.danskdatahistoriskforening.helper.LocalMediaStorage.getOutputMediaFileUri(null, LocalMediaStorage.MEDIA_TYPE_AUDIO_RECORD).getPath()); java.io.File recordedFileTemp = new java.io.File(app.ddf.danskdatahistoriskforening.helper.LocalMediaStorage.getOutputMediaFileUri(null, LocalMediaStorage.MEDIA_TYPE_AUDIO_RECORD_TEMP).getPath()); mergeAudioFile(recordedFile, recordedFileTemp); } 
@java.lang.Override public void run() { while ((progressBarStatus) < 100) { progressBarStatus = counter; counter += 1; try { java.lang.Thread.sleep(30); } catch (java.lang.InterruptedException e) { e.printStackTrace(); } progressBarHandler.post(new java.lang.Runnable() { @java.lang.Override public void run() { mProgressDialog.setProgress(progressBarStatus); } }); } <BUGS> if ((progressBarStatus) >= 100) return ;  <BUGE> } 
@org.smart4j.framework.mvc.annotation.Request.Get(value = "/notices") public org.smart4j.framework.mvc.bean.View index() { int pageNumber = 1; int pageSize = org.bright.sepe.Tool.getPageSize("notice_pager"); <BUGS> java.lang.String name = ""; org.smart4j.framework.dao.bean.Pager<org.bright.sepe.entity.Notice> noticePager = noticeService.getNoticePager(pageNumber, pageSize, name); <BUGE> return new org.smart4j.framework.mvc.bean.View("notice.jsp").data("noticePager", noticePager); } 
<BUGS> public static int getReceiverID(byte[] datagramContents) { <BUGE> int start = Packet.RECEIVER_LENGTH; int end = start + (Packet.RECEIVER_LENGTH); byte[] receiverIdArray = new byte[Packet.RECEIVER_LENGTH]; receiverIdArray = java.util.Arrays.copyOfRange(datagramContents, start, end); java.nio.ByteBuffer receiverIdByteBuffer = java.nio.ByteBuffer.wrap(receiverIdArray); int receiverID = receiverIdByteBuffer.getInt(); return receiverID; } 
private java.util.ArrayList<com.application.dsmsocial.ImageItem> getData() { final java.util.ArrayList<com.application.dsmsocial.ImageItem> imageItems = new java.util.ArrayList<>(); android.content.res.TypedArray imgs = getResources().obtainTypedArray(R.array.shopImage); for (int i = 0; i < (imgs.length()); i++) { android.graphics.Bitmap bitmap = android.graphics.BitmapFactory.decodeResource(getResources(), imgs.getResourceId(i, (-1))); <BUGS> <BUGE> } return imageItems; } 
<BUGS> public void setIncomingPortletCandidate(org.vaadin.addons.portallayout.gwt.client.portlet.PortletChrome portletWidget) { <BUGE> assert portletWidget != null; <BUGS> com.vaadin.client.ComponentConnector pc = com.vaadin.client.Util.findConnectorFor(portletWidget.getContentWidget()); if ((this.outcomingPortletCandidate) == pc) { this.outcomingPortletCandidate = null; <BUGE> }else if (!(getChildComponents().contains(pc))) { <BUGS> this.incomingPortletCandidate = pc; <BUGE> }  } 
@java.lang.Override public RecyclerView.ViewHolder onCreateViewHolder(android.view.ViewGroup parent, int viewType) { if (viewType == (Category.TYPE_SUB_TITLE)) { <BUGS> new com.fmtech.categoryrecyclerview.CategoryAdapter.CategoryTitleViewHolder(mLayoutInflater.inflate(R.layout.item_category_list_subtitle, null, false)); <BUGE> }else if (viewType == (Category.TYPE_SUB_ITEM)) { <BUGS> new com.fmtech.categoryrecyclerview.CategoryAdapter.CategoryItemViewHolder(mLayoutInflater.inflate(R.layout.item_category_list_subitem, null, false)); <BUGE> }else { throw new java.lang.RuntimeException(("Invalid viewType: " + viewType)); }  <BUGS> return null; <BUGE> } 
private java.lang.String convertToTableName(android.net.Uri uri) { <BUGS> <BUGE> switch (com.ywca.pentref.common.PentrefProvider.mUriMatcher.match(uri)) { case com.ywca.pentref.common.PentrefProvider.POI_TABLE : case com.ywca.pentref.common.PentrefProvider.POI_ROW : case com.ywca.pentref.common.PentrefProvider.SEARCH_SUGGESTIONS : return com.ywca.pentref.models.Poi.TABLE_NAME; case com.ywca.pentref.common.PentrefProvider.CATEGORY_TABLE : case com.ywca.pentref.common.PentrefProvider.CATEGORY_ROW : return Contract.Category.TABLE_NAME; case com.ywca.pentref.common.PentrefProvider.BOOKMARK_TABLE : case com.ywca.pentref.common.PentrefProvider.BOOKMARK_ROW : return Contract.Bookmark.TABLE_NAME; default : throw new java.lang.IllegalArgumentException(("Illegal uri: " + uri)); } } 
public static double getFireIndex(java.lang.String sent1) { RapAnalyzer fire = new RapAnalyzer(); double t = (RapAnalyzer.sentenceanalyzer(sent1)) * 10; double w = (RapAnalyzer.wordlength(sent1)) * 0.5; double y = (RapAnalyzer.wordvariety(sent1)) * 0.5; RapAnalyzer.fireindex = ((t + w) + y) / 3; <BUGS> java.lang.System.out.println(("fireindex: " + (RapAnalyzer.fireindex))); <BUGE> return RapAnalyzer.fireindex; } 
private static void setToPositionInRow(de.hotware.blockbreaker.model.Block[][] pMatrix, int pRow, int pPosition, de.hotware.blockbreaker.model.Block.BlockColor pColor, int pSize) { <BUGS> for (int i = pPosition; (i - pPosition) < pSize; ++i) { <BUGE> pMatrix[pRow][i] = new de.hotware.blockbreaker.model.Block(pColor, pRow, i); } } 
@java.lang.Override protected org.apache.commons.cli.Options getOptions() { org.apache.commons.cli.Options opts = new org.apache.commons.cli.Options(); <BUGS> opts.addOption("bitset", "bitset_input", true, "Use Bitset for the input of pos_items [default:false]"); <BUGE> opts.addOption("sampling", "sampling_rate", true, "Sampling rates of positive items [default: 1.0]"); opts.addOption("with_replacement", false, "Do sampling with-replacement [default: false]"); return opts; } 
public void tick() { for (int i = 0; i < (enemies.size()); i++) { enemies.get(i).tick(); <BUGS> if ((enemies.get(i).getHealth()) == 0) <BUGE> enemies.remove(i);  } } 
<BUGS> @org.junit.Test <BUGE> public void addToIndexShouldInsertElementToGivenIndex() throws java.lang.Exception { list.add(10); list.add(20); list.add(30); <BUGS> list.add(40, 1); <BUGE> assertEquals(new java.lang.Integer(40), list.get(1)); } 
@java.lang.Override public ru.itis.inform.department.dao.models.User mapRow(java.sql.ResultSet resultSet, int i) throws java.sql.SQLException { try { <BUGS> return new ru.itis.inform.department.dao.models.User(resultSet.getInt("id"), resultSet.getString("username"), resultSet.getString("email"), resultSet.getString("city"), resultSet.getString("age"), resultSet.getString("gender"), resultSet.getString("passportData"), resultSet.getInt("snils")); <BUGE> } catch (java.sql.SQLException e) { throw new java.lang.IllegalArgumentException(e); } } 
private boolean contains(java.lang.Object field, java.lang.Object value) { if (field == null) { <BUGS> return (value.equals("")) || (value == null); <BUGE> } return field.toString().contains(value.toString()); } 
@butterknife.OnClick(value = R.id.actionSheetDialog) public void actionSheetDialog(android.view.View v) { final java.lang.String[] stringItems = new java.lang.String[]{ "版本更新" , "帮助与反馈" , "退出QQ" }; <BUGS> com.bryan.lib.dialog.FastDialog.ShowActionSheetDialog(context, stringItems, true, new com.flyco.dialog.listener.OnOperItemClickL() { <BUGE> @java.lang.Override public void onOperItemClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) { com.bryan.lib.util.T.showShort(context, stringItems[position]); } }); } 
public void onUserRemoved(int userId) { <BUGS> com.android.server.AppWidgetServiceImpl impl = mAppWidgetServices.get(userId); <BUGE> if (userId < 1) return ;  <BUGS> if (impl == null) { com.android.server.AppWidgetServiceImpl.getSettingsFile(userId).delete(); }else { impl.onUserRemoved(); <BUGE> } } 
private org.eclipse.sirius.diagram.description.Layer getOrCreateAnimationLayer(org.eclipse.sirius.diagram.description.DiagramDescription description, java.lang.String layerName, org.eclipse.core.runtime.IProgressMonitor monitor) { final org.eclipse.sirius.diagram.description.Layer res; org.eclipse.sirius.diagram.description.Layer existingLayer = null; for (org.eclipse.sirius.diagram.description.Layer layer : description.getAdditionalLayers()) { <BUGS> if ("Animation".equals(layer.getName())) { <BUGE> existingLayer = layer; break; } } if (existingLayer != null) { res = existingLayer; }else { <BUGS> res = org.modelexecution.xmof.gemoc.extension.sirius.ui.command.AddAnimationLayerRunnable.createLayer(description, layerName, monitor); <BUGE> } return res; } 
public void resume() { if ((masterResourceStreamer.getState()) != (DownloadState.STOPPED)) { masterResourceStreamer.resume(); }else { masterResourceStreamer.setState(DownloadState.RUNNING, true); jacz.peerengineservice.util.datatransfer.master.MasterResourceStreamer newMasterResourceStreamer = new jacz.peerengineservice.util.datatransfer.master.MasterResourceStreamer(masterResourceStreamer, this); <BUGS> resourceStreamingManager.activateMasterResourceStreamer(masterResourceStreamer, () -> { <BUGE> }); } } 
public void remove(small.data.structures.Vec2 gridPos) { int idx = ((gridPos.y) * (gridRows)) + (gridPos.x); if (!(map.containsKey(idx))) { log.info("Could not remove. Key is not in buffer."); return ; } <BUGS> <BUGE> if (gridPos.equals(relativeOrigin)) { log.info("Removing current relative origin requires the relative origin to be updated."); log.info("Updating relative origin..."); this.updateRelativeOrigin(); } <BUGS> map.remove(idx); <BUGE> } 
public static void main(java.lang.String[] args) throws clients.NoAvailableSpaceException, clients.NotADirectoryException, clients.NotInTreeException, clients.ParentException, clients.VirtualDiskDoesntExistException { <BUGS> clients.CLUI.crvfs("vfs1", 1000L); clients.CLUI.impvfs("eval/Host/level 1", "vfs1", "Home"); <BUGE> java.lang.System.out.println("What would you like to do ? Type help to see the commands"); java.util.Scanner scan = new java.util.Scanner(java.lang.System.in); while (true) { java.lang.String str = scan.nextLine(); clients.CLUI.understand(str); } } 
public void updateTask(int index, seedu.taskboss.model.task.ReadOnlyTask editedTask) throws seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException { assert editedTask != null; seedu.taskboss.model.task.Task taskToUpdate = internalList.get(index); <BUGS> if ((!(taskToUpdate.equals(editedTask))) && (internalList.contains(editedTask))) { if (!(editedTask.getCategories().contains(Category.done))) { throw new seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException(); } <BUGE> } taskToUpdate.resetData(editedTask); internalList.set(index, taskToUpdate); } 
private void compareLocation(cz.fi.muni.pa165.mushroomhunter.entity.Location oldLocation, cz.fi.muni.pa165.mushroomhunter.entity.Location newLocation) { <BUGS> assertEquals(oldLocation.getId(), newLocation.getId()); <BUGE> assertEquals(oldLocation.getName(), newLocation.getName()); assertEquals(oldLocation.getDescription(), newLocation.getDescription()); assertEquals(oldLocation.getNearCity(), newLocation.getNearCity()); } 
public void stop() { try { <BUGS> socket.close(); <BUGE> } catch (final java.io.IOException e1) { de.taimos.gpsd4java.backend.GPSdEndpoint.LOG.debug(("Close forced: " + (e1.getMessage()))); } try { this.listeners.clear(); <BUGS> if ((listenThread) != null) { <BUGE> this.listenThread.halt(); } } catch (final java.lang.Exception e) { de.taimos.gpsd4java.backend.GPSdEndpoint.LOG.debug("Interrupted while waiting for listenThread to stop", e); } this.listenThread = null; } 
@org.junit.Test public void testDoesExtend() throws java.io.IOException, org.eclipse.core.runtime.CoreException { <BUGS> org.eclipse.core.resources.IProject project = org.springsource.ide.eclipse.commons.tests.util.StsTestUtil.createPredefinedProject("validation", "org.springframework.ide.eclipse.beans.core.tests"); <BUGE> org.eclipse.jdt.core.IType foo = org.springframework.ide.eclipse.core.java.JdtUtils.getJavaType(project, "org.springframework.SubClass"); org.junit.Assert.assertTrue(org.springframework.ide.eclipse.core.java.Introspector.doesExtend(foo, "org.springframework.Base")); org.junit.Assert.assertTrue((!(org.springframework.ide.eclipse.core.java.Introspector.doesExtend(foo, "org.springframework.beans.factory.BeanFactory")))); <BUGS> project.delete(true, null); <BUGE> } 
@java.lang.Override public void onBackPressed() { <BUGS> <BUGE> if (exit) { <BUGS> super.onBackPressed(); <BUGE> finish(); }else { android.widget.Toast.makeText(this, getString(R.string.press_back_again), Toast.LENGTH_SHORT).show(); exit = true; new android.os.Handler().postDelayed(new java.lang.Runnable() { @java.lang.Override public void run() { exit = false; } }, (3 * (com.newrunner.googlemap.MainActivity.ONE_SECOND))); } } 
public void testFieldFallback() { <BUGS> final com.oasisfeng.hack.Hack.HackedTargetField<java.lang.Integer> field = com.oasisfeng.hack.Hack.into(com.oasisfeng.hack.HackTest.Simple.class).staticField("mIntField").ofType(int.class).fallbackTo((-1)); <BUGE> assertEquals((-1), ((int) (field.get()))); field.set(0); assertEquals((-1), ((int) (field.get()))); } 
public int getMaxID() { java.lang.String sql = "SELECT MAX(ID) FROM CONTACTS"; java.sql.ResultSet rs = executeQuery(sql); <BUGS> int id = ((int) (java.lang.Math.random())) * 100; <BUGE> try { <BUGS> id = rs.getInt("ID"); <BUGE> } catch (java.sql.SQLException e) { e.printStackTrace(); } return id; } 
@java.lang.Override public void run() { try { <BUGS> context.addRunningJob(executable); <BUGE> executable.execute(context); } catch (com.kylinolap.job2.exception.ExecuteException e) { logger.error(("ExecuteException job:" + (executable.getId())), e); } catch (java.lang.Exception e) { logger.error(("unknown error execute job:" + (executable.getId())), e); } finally { context.removeRunningJob(executable); } } 
@java.lang.Override public void acquireLock(io.hops.transaction.lock.TransactionLocks locks) throws java.io.IOException { io.hops.transaction.lock.LockFactory lf = io.hops.transaction.lock.LockFactory.getInstance(); <BUGS> locks.add(lf.getINodeLock((!(dir.isQuotaEnabled()) ? true : false), nameNode, lockType, INodeResolveType.PATH, src)).add(lf.getBlockLock()).add(lf.getBlockRelated(BLK.RE, BLK.ER, BLK.CR, BLK.UC)); <BUGE> } 
<BUGS> static void processCourseClasses(org.jdom2.Element courseClass) throws java.lang.Exception { edu.stanford.CourseTrans.response.addContent(edu.stanford.CourseTrans.createNewCourse(courseClass)); <BUGE> java.util.List<org.jdom2.Element> classes = courseClass.getChildren("class"); for (org.jdom2.Element _class : classes) { edu.stanford.CourseTrans.newCourse.addContent(edu.stanford.CourseTrans.createNewClass(_class)); java.util.List<org.jdom2.Element> sections = _class.getChildren("section"); for (org.jdom2.Element section : sections) { edu.stanford.CourseTrans.newClass.addContent(edu.stanford.CourseTrans.createNewSection(section)); } } } 
public void dibujar(android.graphics.Bitmap foto) { <BUGS> <BUGE> android.widget.LinearLayout group = ((android.widget.LinearLayout) (findViewById(R.id.emblematicos_text))); android.graphics.Bitmap scaled; scaled = android.graphics.Bitmap.createScaledBitmap(foto, 500, 300, false); android.widget.ImageView imageView = new android.widget.ImageView(this); imageView.setImageBitmap(scaled); group.addView(imageView); } 
@java.lang.Override protected void onPostExecute(ca.rmen.android.scrumchatter.meeting.detail.MeetingPagerAdapter result) { mMeetingPagerAdapter = result; mBinding.activityLoading.setVisibility(View.GONE); mBinding.pager.setAdapter(mMeetingPagerAdapter); <BUGS> int position = mMeetingPagerAdapter.getPositionForMeetingId(mMeetingId); ca.rmen.android.scrumchatter.util.Log.v(TAG, ((("meeting " + (mMeetingId)) + " is on page ") + position)); mBinding.pager.setCurrentItem(position); <BUGE> } 
private void restoreStandaloneLinksFromBackup() { if ((backupStandaloneLinks) != null) { aQute.bnd.build.model.conversions.Converter<java.lang.Object, java.lang.String> converter = model.lookupConverter(bndtools.editor.project.RepositorySelectionPart.PROP_STANDALONE); @java.lang.SuppressWarnings(value = "unchecked") java.util.List<aQute.bnd.build.model.clauses.HeaderClause> restored = ((java.util.List<aQute.bnd.build.model.clauses.HeaderClause>) (converter.convert(backupStandaloneLinks))); standaloneLinks = restored; backupStandaloneLinks = null; <BUGS> <BUGE> } } 
@java.lang.Override public org.silverpeas.components.projectmanager.model.TaskDetail getMostDistantTask(java.lang.String instanceId, int taskId) { java.sql.Connection con = getConnection(); try { <BUGS> return org.silverpeas.components.projectmanager.model.ProjectManagerDAO.getMostDistantTask(con, instanceId, taskId); <BUGE> } catch (java.lang.Exception re) { throw new org.silverpeas.components.projectmanager.model.ProjectManagerRuntimeException("DefaultProjectManagerService.getMostDistantTask()", org.silverpeas.core.exception.SilverpeasRuntimeException.ERROR, "projectManager.GETTING_TASK_FAILED", ("taskId = " + taskId), re); } finally { org.silverpeas.core.persistence.jdbc.DBUtil.close(con); } } 
<BUGS> public java.lang.String getSequence(com.axelor.apps.base.db.Company company) throws com.axelor.exception.AxelorException { <BUGE> java.lang.String seq = sequenceService.getSequenceNumber(IAdministration.SALES_ORDER, company); if (seq == null) { throw new com.axelor.exception.AxelorException(java.lang.String.format(com.axelor.i18n.I18n.get(IExceptionMessage.SALES_ORDER_1), company.getName()), com.axelor.exception.db.IException.CONFIGURATION_ERROR); } return seq; } 
private static double translatePreference(int p) { int maxValue = 9; <BUGS> int minValue = -1; <BUGE> if (p > maxValue) p = maxValue;  if (p < minValue) p = minValue;  if (p == 0) { return 1; }else if (p > 0) { return p; }else { return 1.0 / (java.lang.Math.abs(p)); }  } 
private void treatFormatId(java.lang.String formatId, forms.Test test) { forms.TestFormat format = new forms.TestFormat(); try { validateFormatId(formatId); format.setId(java.lang.Long.parseLong(formatId)); <BUGS> test.setFormat(format); <BUGE> } catch (java.lang.Exception e) { setError(forms.TestForm.FORMAT_FIELD, e.getMessage()); } <BUGS> <BUGE> } 
@java.lang.Override public void actionPerformed(java.awt.event.ActionEvent e) { java.lang.String str = tfTxt.getText(); <BUGS> taContent.setText(str); <BUGE> tfTxt.setText(""); try { dos.writeUTF(str); dos.flush(); } catch (java.io.IOException e1) { e1.printStackTrace(); } } 
public void closeBrowser() { mBrowserFrame.setBackgroundColor(mBackgroundColor); performExitCleanUp(); mBrowserFrame.removeAllViews(); int size = mTabsManager.size(); mTabsManager.shutdown(); mCurrentView = null; for (int n = 0; n < size; n++) { <BUGS> mTabsView.tabRemoved(n); <BUGE> } finish(); } 
public org.elasticsearch.action.bulk.BulkResponse bulkIndex(java.lang.String indexName, java.lang.String indexType, java.util.Map<java.lang.String, java.lang.String> idJsonDocMap, boolean refresh) { <BUGS> org.elasticsearch.action.bulk.BulkRequestBuilder bulkRequestBuilder = client.prepareBulk(); for (java.lang.String docId : idJsonDocMap.keySet()) bulkRequestBuilder.setRefresh(refresh).add(client.prepareIndex(indexName, indexType).setSource(idJsonDocMap.get(docId)));  <BUGE> org.elasticsearch.action.bulk.BulkResponse bulkResponse = bulkRequestBuilder.get(); <BUGS> if (bulkResponse.hasFailures()) { java.lang.System.out.println("FAIL TO INDEX SOME ELEMENTS"); } <BUGE> return bulkResponse; } 
@org.junit.Test public void getPluginDirProperty_explicitly_set() throws org.pentaho.di.core.exception.KettleException { final java.lang.String PLUGIN_DIR = "/opt/pentaho"; <BUGS> final org.apache.hadoop.conf.Configuration c = new org.apache.hadoop.conf.Configuration(); <BUGE> c.set(MRUtil.PROPERTY_PENTAHO_KETTLE_PLUGINS_DIR, PLUGIN_DIR); java.lang.String pluginDirProperty = org.pentaho.hadoop.mapreduce.MRUtil.getPluginDirProperty(c); org.junit.Assert.assertTrue(("Plugin Directory Property not configured as expected: " + pluginDirProperty), pluginDirProperty.endsWith(PLUGIN_DIR)); } 
public static net.miginfocom.swing.MigLayout getMigLayout(java.lang.String layoutConstraints, java.lang.String columnConstraints, java.lang.String rowConstraints) { <BUGS> java.lang.String finalLayouConstraints = null; if (org.jskat.gui.swing.LayoutFactory.isMacOS()) { finalLayouConstraints = org.jskat.gui.swing.LayoutFactory.injectMacOSLayoutConstraints(layoutConstraints); }else { finalLayouConstraints = layoutConstraints; <BUGE> } return new net.miginfocom.swing.MigLayout(finalLayouConstraints, columnConstraints, rowConstraints); } 
public java.util.Collection<D> insert(java.util.Collection<D> collection) { <BUGS> <BUGE> org.sonar.db.DbSession session = this.getDbSession(); try { for (D dto : collection) { getMapper(session).insert(dto); } session.commit(); } finally { com.thoughtworks.lean.sonar.aggreagtedreport.dao.base.Mybatis.closeQuietly(session); } return collection; } 
public void run() { network.ServerSocketCreator create = new network.ServerSocketCreator(); java.lang.Thread serverSock = new java.lang.Thread(create); serverSock.start(); java.util.Scanner read = new java.util.Scanner(java.lang.System.in); char input = 'N'; <BUGS> <BUGE> while (input != 'Y') { <BUGS> java.lang.System.out.println("Would you like to stop the server? Y/N"); <BUGE> input = read.nextLine().charAt(0); <BUGS> java.lang.System.out.println(input); <BUGE> } read.close(); create.terminate(); } 
private void handleForeignKey(org.talend.mdm.commmon.metadata.MetadataRepository repository, org.talend.mdm.commmon.metadata.ComplexTypeMetadata type, org.talend.mdm.commmon.metadata.annotation.XmlSchemaAnnotationProcessorState state, org.w3c.dom.Element appInfo) { state.markAsReference(); java.lang.String path = appInfo.getTextContent(); <BUGS> org.talend.mdm.commmon.metadata.FieldMetadata fieldMetadata = org.talend.mdm.commmon.metadata.annotation.ForeignKeyProcessor.getFieldMetadata(repository, type, appInfo, path); <BUGE> state.setReferencedField(fieldMetadata); state.setReferencedType(new org.talend.mdm.commmon.metadata.SoftTypeRef(repository, repository.getUserNamespace(), org.talend.mdm.commmon.metadata.annotation.ForeignKeyProcessor.getTypeName(type, path), true)); } 
<BUGS> public boolean setPlayerToHaveLargestArmy(int playerIndex) { <BUGE> if ((playerIndex < 0) || (playerIndex > 3)) return false;  if ((currentLargestArmyPlayer) != (-1)) { adjustPlayersPoints(currentLargestArmyPlayer, ((-1) * (LargestArmyValue))); } currentLargestArmyPlayer = playerIndex; adjustPlayersPoints(currentLargestArmyPlayer, LargestArmyValue); return true; } 
@java.lang.Override public boolean apply(@javax.annotation.Nullable com.gmi.nordborglab.browser.shared.proxy.TraitProxy input) { if (input == null) return true;  boolean isNotFound = true; for (com.gmi.nordborglab.browser.shared.proxy.AlleleAssayProxy alleleAssay : input.getObsUnit().getStock().getPassport().getAlleleAssays()) { <BUGS> if ((alleleAssay.getId()) == (selectedAlleleAssay.getId())) { <BUGE> isNotFound = false; break; } } return isNotFound; } 
private void release() { com.huhx0015.hxaudio.utils.HXLog.d(com.huhx0015.hxaudio.audio.HXSound.LOG_TAG, "RELEASE: release(): Releasing all HXSoundEngine instances..."); <BUGS> if ((hxSoundEngines) != null) { int i = 0; for (int x : new int[numberOfEngines]) { hxSoundEngines.get(i).release(); com.huhx0015.hxaudio.utils.HXLog.d(com.huhx0015.hxaudio.audio.HXSound.LOG_TAG, (("RELEASE: release(): HXSoundEngine (" + i) + ") is released.")); i++; } hxSoundEngines = null; <BUGE> } <BUGS> com.huhx0015.hxaudio.audio.HXSound.hxSound = null; <BUGE> } 
@java.lang.Override public server.main.GameInfo monopoly(server.main.Monopoly monopoly) throws server.main.ServerException { server.main.MonopolyCommand monopolyCommand = new server.main.MonopolyCommand(monopoly); server.main.GameInfo gi = null; <BUGS> if (agent.sendCommand(yearOfPlentyCommand)) { <BUGE> gi = server.receiver.AllOfOurInformation.getSingleton().getGames().get(monopoly.getGameId()).getGame(); } return gi; } 
static src.CircularList<src.Candidate> initList(int nbCandidates) { src.CircularList<src.Candidate> list = new src.CircularList(); <BUGS> for (int i = 0; i < nbCandidates; i++) { <BUGE> list.add(new src.Candidate(("" + i), "")); } return list; } 
@org.springframework.web.bind.annotation.RequestMapping(value = "/add", method = org.springframework.web.bind.annotation.RequestMethod.POST, headers = "Accept=application/json") @org.springframework.web.bind.annotation.ResponseBody public com.wangzhixuan.code.Result add(com.wangzhixuan.vo.PeopleVo peoplevo, @org.springframework.web.bind.annotation.RequestParam(value = "fileName", required = false) org.springframework.web.multipart.commons.CommonsMultipartFile file) { com.wangzhixuan.code.Result result = new com.wangzhixuan.code.Result(); try { peopleService.addPeople(peoplevo, file); result.setSuccess(true); result.setMsg("添加成功"); return result; <BUGS> } catch (java.lang.RuntimeException e) { <BUGE> com.wangzhixuan.controller.PeopleController.LOGGER.error("添加用户失败：{}", e); result.setMsg(e.getMessage()); return result; } } 
public E take(final long waitMillis) { try { lock.lockInterruptibly(); <BUGS> added.await(waitMillis, java.util.concurrent.TimeUnit.MILLISECONDS); <BUGE> return take(); } catch (final java.lang.InterruptedException e) { net.xy.codebase.collection.ParkingArrayQueue.LOG.error(e.getMessage(), e); } finally { lock.unlock(); } return null; } 
@java.lang.Override public void onResponse(retrofit2.Call<io.caly.calyandroid.model.response.BasicResponse> call, retrofit2.Response<io.caly.calyandroid.model.response.BasicResponse> response) { io.caly.calyandroid.util.Logger.d(io.caly.calyandroid.activity.TAG, ("onResponse code : " + (response.code()))); io.caly.calyandroid.util.Logger.d(io.caly.calyandroid.activity.TAG, ("param" + (io.caly.calyandroid.util.Util.requestBodyToString(call.request().body())))); <BUGS> switch (response.body().code) { <BUGE> case 200 : break; default : com.crashlytics.android.Crashlytics.logException(new io.caly.calyandroid.exception.UnExpectedHttpStatusException(call, response)); break; } } 
@java.lang.Override public void onClick(android.view.View v) { if (((org.naturenet.NatureNetApplication) (getActivity().getApplication())).isConnected()) { <BUGS> join_ib.setVisibility(View.GONE); <BUGE> main.goToJoinActivity(); }else { android.widget.Toast.makeText(main, R.string.no_connection, Toast.LENGTH_SHORT).show(); } } 
private static int getIntAttr(org.w3c.dom.Element element, java.lang.String attrName) { if (element == null) return 0;  try { <BUGS> return java.lang.Integer.parseInt(element.getAttribute("attrName")); <BUGE> } catch (java.lang.NumberFormatException e) { craftedcart.smbworkshopexporter.util.LogHelper.error(craftedcart.smbworkshopexporter.XMLConfigParser.class, java.lang.String.format("Invalid integer at %s", element.toString())); } return 0; } 
@java.lang.Override public void run() { <BUGS> int offset = content.indexOf(mSearchQuery); <BUGE> int line = mTvChapterContent.getLayout().getLineForOffset(offset); int coordinateY = mTvChapterContent.getLayout().getLineTop(line); mSvChapterContent.scrollTo(0, (coordinateY - 400)); } 
@java.lang.Override public void start(javafx.stage.Stage primaryStage) { <BUGS> com.teamdev.jxbrowser.chromium.LoggerProvider.setLevel(java.util.logging.Level.SEVERE); <BUGE> setupComponents(); mainController.start(primaryStage); address.events.EventManager.getInstance().post(new address.events.LoadDataRequestEvent(address.prefs.PrefsManager.getInstance().getSaveLocation())); syncManager.startSyncingData(config.updateInterval, config.simulateUnreliableNetwork); } 
private void startMonitor() { if (mMonitoring.compareAndSet(false, true)) { <BUGS> if ((mRunningMonitor) == null) { <BUGE> mRunningMonitor = mThreadPoolManager.scheduleFixedRate(ThreadType.DECODER, mStateMonitor, 20, java.util.concurrent.TimeUnit.MILLISECONDS); }else { throw new java.lang.RuntimeException(("Channel state monitor's scheduled " + "future pointer was not null")); } } } 
public void enqueue(Item item) { if (item == null) { throw new java.lang.NullPointerException(); } queue[tail] = item; ++(size); swap(tail, randomIndex()); tail = (++(tail)) % (queue.length); <BUGS> if ((size) > ((queue.length) / 2.0)) { <BUGE> changeQueueSize(((queue.length) * 2)); } } 
public java.util.List<com.ryan.pojo.ChunkInfo> fsp() { java.util.List<com.ryan.pojo.ChunkInfo> chunkList = new java.util.ArrayList<>(); markChunkPostition(buffer, chunkSize); <BUGS> int currentPos = this.chunkId; (this.chunkId)++; <BUGE> while (true) { <BUGS> <BUGE> if (currentPos >= (list.size())) { return chunkList; }else { key.set(currentPos); chunkList.add(nextKeyValue(currentPos)); } } } 
@java.lang.Override public cs444.codegen.tiles.InstructionsAndTiming<cs444.codegen.arm.instructions.bases.ArmInstruction> generate(final cs444.parser.symbols.ast.expressions.ArrayAccessExprSymbol arrayAccess, final cs444.codegen.Platform<cs444.codegen.arm.instructions.bases.ArmInstruction, cs444.codegen.arm.Size> platform) { final cs444.codegen.tiles.InstructionsAndTiming<cs444.codegen.arm.instructions.bases.ArmInstruction> instructions = super.generate(arrayAccess, platform); final cs444.codegen.SizeHelper<cs444.codegen.arm.instructions.bases.ArmInstruction, cs444.codegen.arm.Size> sizeHelper = platform.getSizeHelper(); <BUGS> instructions.add(new cs444.codegen.arm.instructions.Add(cs444.codegen.arm.Register.R0, cs444.codegen.arm.Register.R8, cs444.codegen.arm.Register.R8, sizeHelper)); <BUGE> instructions.add(new cs444.codegen.arm.instructions.Pop(cs444.codegen.arm.Register.R8)); return instructions; } 
@org.junit.Test public void test_addYears() throws java.lang.Exception { <BUGS> org.junit.Assert.assertEquals(20140912, dint.Dint.addYears(20140912, 0)); org.junit.Assert.assertEquals(20140912, dint.Dint.addYears(20130912, 1)); org.junit.Assert.assertEquals(20140912, dint.Dint.addYears(20150912, (-1))); org.junit.Assert.assertEquals(20140912, dint.Dint.addYears(10140912, 1000)); org.junit.Assert.assertEquals(20160228, dint.Dint.addYears(20140228, 2)); <BUGE> } 
@org.junit.Test public void loggingResponseFilterDoesntLogWhenSpecifiedMatcherIsNotFulfilled() throws java.lang.Exception { final java.io.StringWriter writer = new java.io.StringWriter(); final java.io.PrintStream captor = new java.io.PrintStream(new org.apache.commons.io.output.WriterOutputStream(writer), true); <BUGS> io.restassured.RestAssured.given().filter(io.restassured.filter.log.ResponseLoggingFilter.logResponseToIfMatches(captor, equalTo(400))).expect().body("greeting", equalTo("Greetings John Doe")).when().get("/greet?firstName=John&lastName=Doe"); <BUGE> org.junit.Assert.assertThat(writer.toString(), is("")); } 
java.lang.String executeChange(org.bukkit.entity.Player player, java.lang.String oldGroup, java.lang.String newGroup, java.lang.String world) { java.lang.String msg; if (changeGroup(player, oldGroup, newGroup, world)) { <BUGS> msg = (((("Successfully changed " + player) + " to group ") + newGroup) + " in world ") + world; <BUGE> }else { <BUGS> msg = (((("Unsuccessfully changed " + player) + " to group ") + newGroup) + " in world ") + world; <BUGE> } return msg; } 
private finalproject.queryprocessor.clustering.Cluster findClosestCluster(finalproject.WeightedDocument d) { finalproject.queryprocessor.clustering.Cluster closest = null; java.lang.Double closestDistance = java.lang.Double.MAX_VALUE; for (finalproject.queryprocessor.clustering.Cluster cluster : clusterList) { <BUGS> java.lang.Double distance = cluster.getCentroid().getDistanceFromVector(d.getVector()); <BUGE> if (distance < closestDistance) { closestDistance = distance; closest = cluster; } } return closest; } 
@org.junit.BeforeClass @java.lang.SuppressWarnings(value = "unchecked") public static void generateAndCompileEnum() throws java.lang.ClassNotFoundException { <BUGS> java.lang.ClassLoader resultsClassLoader = org.jsonschema2pojo.integration.EnumIT.classSchemaRule.generateAndCompile("/schema/enum/typeWithEnumProperty.json", "com.example", org.jsonschema2pojo.integration.util.CodeGenerationHelper.config("propertyWordDelimiters", "_")); <BUGE> org.jsonschema2pojo.integration.EnumIT.parentClass = resultsClassLoader.loadClass("com.example.TypeWithEnumProperty"); org.jsonschema2pojo.integration.EnumIT.enumClass = ((java.lang.Class<java.lang.Enum>) (resultsClassLoader.loadClass("com.example.TypeWithEnumProperty$EnumProperty"))); } 
public java.util.List<java.lang.String> getCookies() { java.lang.String cookies = headers.get("Cookie: "); <BUGS> <BUGE> java.util.List<java.lang.String> cookiesList = new java.util.LinkedList<java.lang.String>(); <BUGS> java.util.StringTokenizer tokenizer = new java.util.StringTokenizer(cookies, "; "); while (tokenizer.hasMoreTokens()) { java.lang.String cookie = tokenizer.nextToken(); cookiesList.add(cookie); } <BUGE> return cookiesList; } 
private boolean isReachable(int eventFrom, int eventTo) { <BUGS> java.lang.System.out.println(eventFrom); <BUGE> java.util.Set<java.lang.Integer> outgoingEvents = messages.get(eventFrom); if (outgoingEvents == null) { return false; } for (java.lang.Integer intermediateEvent : outgoingEvents) { if (intermediateEvent.equals(eventTo)) { return true; } if (isReachable(intermediateEvent, eventTo)) { return true; } } return false; } 
@java.lang.Override public void onShow() { android.util.Log.d(TAG, "onShow IN!"); if (((mtvFlow) != null) && (isLogin)) { currentAccount = com.etoc.weflow.WeFlowApplication.getAppInstance().getAccountInfo(); mtvFlow.showNumberWithAnimation(currentAccount.getFlowcoins(), 1000); } <BUGS> loginView(); <BUGE> } 
public synchronized void unlock() throws java.lang.IllegalMonitorStateException { java.lang.Thread callingThread = java.lang.Thread.currentThread(); if (!(isLocked)) throw new java.lang.IllegalMonitorStateException();  if ((isLocked) && (callingThread != (lockedBy))) throw new java.lang.IllegalMonitorStateException();  <BUGS> lockCount -= lockCount; <BUGE> if ((lockCount) == 0) { isLocked = false; lockedBy = null; notify(); } } 
@java.lang.Override public void enterInstruction(net.rapidasm.antlr.RapidASMParser.InstructionContext ctx) { net.rapidasm.structure.RapidStatementBlock block = this.getCurrentBlock(); this.currentInstructionStatement = new net.rapidasm.structure.RapidInstructionStatement(block, ctx.ALPHANUM().getText()); <BUGS> <BUGE> this.resetOperands(); <BUGS> block.addStatement(this.currentInstructionStatement); <BUGE> } 
<BUGS> public static void menuOptions() throws java.io.IOException { <BUGE> java.lang.String entry = io.File_IO.in.nextLine(); switch (entry) { case "1" : io.File_IO.viewAllContacts(); break; case "2" : io.File_IO.addContact(); break; case "3" : io.File_IO.viewContact(); break; case "4" : io.File_IO.deleteContact(); break; case "5" : io.File_IO.exitProgram(); default : io.File_IO.exitProgram(); } } 
@com.oracle.truffle.api.dsl.Specialization public java.lang.Object getIndex(org.jruby.truffle.runtime.core.RubyMatchData matchData, int index) { notDesignedForCompilation(); <BUGS> if (index >= (matchData.getValues().length)) { <BUGE> return getContext().getCoreLibrary().getNilObject(); }else { return matchData.getValues()[index]; } } 
@java.lang.Override protected void showRationale() { <BUGS> new android.support.v7.app.AlertDialog.Builder(mActivity).setTitle("Permission Needed").setMessage("Permission rationale here").setNegativeButton("Cancel", null).setPositiveButton("Request Permission", new android.content.DialogInterface.OnClickListener() { <BUGE> @java.lang.Override public void onClick(android.content.DialogInterface dialog, int which) { performPermissionRequest(); } }).show(); } 
public void close() throws java.io.IOException { <BUGS> this.keepRunning = false; <BUGE> try { this.selector.wakeup(); stillRunningLatch.await(); } catch (java.lang.InterruptedException e) { fx.networking.nio.NIOServer.LOGGER.info("interrupted while closing the NIOServer: {}", e); } if (this.selector.isOpen()) { this.selector.close(); } } 
public void deleteBrackets(long event_id, boolean deleteUserAdded) { android.util.Log.v("DeleteBracket", ("Deleting Bracket: " + event_id)); if (deleteUserAdded) { deleteBrackets(((BracketTable.Cols.FK_EVENT_ID) + " = ?"), new java.lang.String[]{ "" + event_id }); }else { <BUGS> deleteBrackets(((((BracketTable.Cols.FK_EVENT_ID) + " = ? AND ") + (BracketTable.Cols.USER_ADDED)) + " = ?"), new java.lang.String[]{ "" + event_id , "1" }); <BUGE> } } 
static org.eclipse.january.dataset.Dataset santiseDataset(org.eclipse.january.dataset.IDataset data) { org.eclipse.january.dataset.Dataset tmp = org.eclipse.january.dataset.DatasetUtils.convertToDataset(data); if ((tmp.getStrides()) != null) { tmp = tmp.getSlice(); tmp.setName(data.getName()); } <BUGS> tmp = tmp.getView(false); tmp.clearMetadata(org.eclipse.january.metadata.StatisticsMetadata.class); <BUGE> return tmp; } 
public int getInventorySize() { int highestSlot = getHighestSlot(); <BUGS> if (highestSlot <= 9) { <BUGE> return 9; }else if (highestSlot < 18) { return 18; }else if (highestSlot < 27) { return 27; }else if (highestSlot < 36) { return 36; }else if (highestSlot < 45) { return 45; }else { return 45; }     } 
@java.lang.Override <BUGS> public void invoke(java.util.Scanner args) { final java.lang.String name = (args.hasNext()) ? args.nextLine().trim() : ""; <BUGE> if ((name.length()) > 0) { if ((context.create(name)) == null) { java.lang.System.out.println("ERROR: Failed to create new user"); } }else { java.lang.System.out.println("ERROR: Missing <username>"); } } 
<BUGS> public entity.Usuario getUsrByName(java.lang.String usr) { <BUGE> entity.Usuario objetoUsuario; sesionBD.beginTransaction(); org.hibernate.Query query = sesionBD.createQuery(("from Usuario where codigo = " + usr)); objetoUsuario = ((entity.Usuario) (query.uniqueResult())); sesionBD.getTransaction().commit(); return objetoUsuario; } 
private void displayConfirmDialog() { if ((weatherAlertBuffer) != null) { <BUGS> <BUGE> nz.ac.elec.agbase.weather_app.AlertSummaryGenerator summaryGenerator = new nz.ac.elec.agbase.weather_app.AlertSummaryGenerator(); <BUGS> nz.ac.elec.agbase.android_agbase_api.agbase_models.Sensor sensor = nz.ac.elec.agbase.android_agbase_db.AgBaseDatabaseManager.getInstance().readSensorWithGuid(weatherAlertBuffer.getDeviceGuid()); <BUGE> java.lang.String weatherAlertSummary = ((sensor.name) + "\n") + (summaryGenerator.writeAlertSummary(weatherAlertBuffer)); nz.ac.elec.agbase.weather_app.dialogs.ConfirmAlertDialog dialog = new nz.ac.elec.agbase.weather_app.dialogs.ConfirmAlertDialog(this, weatherAlertBuffer.getName(), weatherAlertSummary); dialog.getDialog().show(); } } 
public boolean checkMultiblock() { boolean prevState = isMultiblockStructurePresent(); makeo.gadomancy.common.utils.MultiblockHelper.MultiblockPattern patternToCheck; if (prevState) { if (isInMultiblock()) { patternToCheck = makeo.gadomancy.common.registration.RegisteredMultiblocks.completeNodeManipulatorMultiblock; }else { patternToCheck = makeo.gadomancy.common.registration.RegisteredMultiblocks.incompleteNodeManipulatorMultiblock; } this.multiblockStructurePresent = makeo.gadomancy.common.utils.MultiblockHelper.isMultiblockPresent(worldObj, xCoord, yCoord, zCoord, patternToCheck); }else { patternToCheck = makeo.gadomancy.common.registration.RegisteredMultiblocks.incompleteNodeManipulatorMultiblock; this.multiblockStructurePresent = makeo.gadomancy.common.utils.MultiblockHelper.isMultiblockPresent(worldObj, xCoord, yCoord, zCoord, patternToCheck); } <BUGS> markDirty(); <BUGE> return isMultiblockStructurePresent(); } 
public static boolean contains(java.lang.String target, java.lang.String[] strings, boolean totalMatch) { for (java.lang.String s : strings) { <BUGS> <BUGE> if (totalMatch ? target.equals(s) : target.contains(s)) { return true; } } return false; } 
public org.avuna.httpd.util.unixsocket.UnixSocket accept() throws java.io.IOException { if (!(bound)) bind();  <BUGS> org.avuna.httpd.util.Logger.log("accepting"); <BUGE> java.lang.String nsfd = org.avuna.httpd.util.CLib.accept(sockfd); <BUGS> org.avuna.httpd.util.Logger.log(nsfd); <BUGE> int i = java.lang.Integer.parseInt(nsfd.substring(0, nsfd.indexOf("/"))); nsfd = nsfd.substring(((nsfd.indexOf("/")) + 1)); org.avuna.httpd.util.unixsocket.UnixSocket us = new org.avuna.httpd.util.unixsocket.UnixSocket(file, i); return us; } 
public static void addImage(com.skilltradiez.skilltraderz.Image image) { <BUGS> <BUGE> java.util.Set<com.skilltradiez.skilltraderz.Image> images = com.skilltradiez.skilltraderz.MasterController.getUserDB().getImagez(); images.add(image); com.skilltradiez.skilltraderz.MasterController.getUserDB().getChangeList().add(image); image.notifyDB(); com.skilltradiez.skilltraderz.DatabaseController.save(); } 
protected void execute() { int index; index = (org.usfirst.frc.team68.robot.MathUtil.findClosestIndex(RobotMap.intakePositions, org.usfirst.frc.team68.robot.subsystems.Intake.getIntake().getIntakeArm())) + 1; if (index > ((RobotMap.intakePositions.length) - 1)) index = (RobotMap.intakePositions.length) - 1;  <BUGS> org.usfirst.frc.team68.robot.subsystems.Intake.getIntake().setIntakeArm(org.usfirst.frc.team68.robot.RobotMap.intakePositions[index]); <BUGE> isDone = true; } 
<BUGS> public static void TestGetProblemTests() { <BUGE> javax.ws.rs.core.Response response = test.java.TestDirlididi.server.newRequest((("/problem/" + (test.java.TestDirlididi.PROBLEM_ID)) + "/test")).request().buildGet().invoke(); org.junit.Assert.assertEquals(Response.Status.OK.getStatusCode(), response.getStatus()); } 
private java.util.Set<edu.cmu.tetradapp.model.Node> mb(edu.cmu.tetradapp.model.Graph graph, edu.cmu.tetradapp.model.Node z) { java.util.Set<edu.cmu.tetradapp.model.Node> mb = new java.util.HashSet(graph.getAdjacentNodes(z)); for (edu.cmu.tetradapp.model.Node c : graph.getChildren(z)) { for (edu.cmu.tetradapp.model.Node p : graph.getParents(c)) { <BUGS> mb.add(p); <BUGE> } } return mb; } 
@java.lang.Override public void run() { target.receiveHealing(output); increaseCurrentTimer(); java.lang.System.out.println(("Renew is ticking! " + (currentTime))); <BUGS> if ((currentTime) == (duration)) { <BUGE> target.removeEffect(EffectType.HEALOVERTIME); java.lang.System.out.println("Renew expired"); } } 
public java.util.List<msa.application.service.domain.CausaRotturaCristalliDTO> getCauseRotturaCristalli() throws msa.application.exceptions.InternalMsaException { <BUGS> java.util.List<msa.application.service.domain.CausaRotturaCristalliDO> result = null; <BUGE> try { <BUGS> result = domainRepository.getElencoCauseRotturaCristalli(); return converter.convertList(result, msa.application.service.domain.CausaRotturaCristalliDTO.class); <BUGE> } catch (java.lang.Exception e) { throw new msa.application.exceptions.InternalMsaException(e, buildErrorMessageByText(MessageType.ERROR, ((msa.application.commons.Constants.DEFAULT_DOMAIN_ERROR_MESSAGE) + "causa rottura cristalli"))); } } 
<BUGS> @org.freeshr.application.fhir.Test <BUGE> public void shouldValidateDiagnosisWithPreviousProcedureRequestExtension() throws java.lang.Exception { encounterBundle = org.freeshr.data.EncounterBundleData.encounter(EncounterBundleData.HEALTH_ID, org.freeshr.utils.FileUtil.asString("xmls/encounters/stu3/p98001046534_encounter_with_suspended_procedure_request.xml")); validationContext = new org.freeshr.validations.EncounterValidationContext(encounterBundle, new org.freeshr.utils.FhirFeedUtil()); org.freeshr.application.fhir.EncounterValidationResponse response = validator.validate(validationContext); <BUGS> for (java.lang.Error error : response.getErrors()) { java.lang.System.out.println(error.getField()); java.lang.System.out.println(error.getReason()); } <BUGE> assertTrue(response.isSuccessful()); } 
public void KSA() { int j = 0; <BUGS> <BUGE> for (int i = 0; i < 256; i++) { j = ((j + (S[i])) + (key[(i % (key.length))])) % 256; <BUGS> int temp = S[i]; <BUGE> S[i] = S[j]; S[j] = temp; <BUGS> <BUGE> } } 
@java.lang.Override public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState) { if ((view) == null) { view = inflater.inflate(R.layout.fragment_password_recover_step1, null); frag_Email = ((com.example.fragments.inputcells.SimpleTextInputCellFragment) (getFragmentManager().findFragmentById(R.id.input_email))); <BUGS> com.example.fragments.inputcells.FragmentPasswordRecoverStep1.email = frag_Email.getText(); <BUGE> view.findViewById(R.id.btn_goNext).setOnClickListener(new android.view.View.OnClickListener() { @java.lang.Override public void onClick(android.view.View v) { goNext(); } }); } return view; } 
@java.lang.Override public void updateAI(float tpf) { this.timePerFrame = tpf; calculateNewVelocity(tpf); velocity.multLocal(this.brakingFactor); switch (agent.getApplyType()) { case Spatial : <BUGS> agent.setWorldTranslation(agent.getPredictedPosition()); <BUGE> rotateAgent(tpf); break; case BetterCharacterControl : case RigidBody : throw new java.lang.RuntimeException((("The ApplyType " + (agent.getApplyType())) + " isn't supported yet, sorry.")); case DontApply : break; } } 
<BUGS> public java.util.ArrayList<java.lang.Object> checkObjectFor(com.badlogic.gdx.maps.MapLayer layer, java.lang.String property) { java.util.ArrayList<java.lang.Object> o = new java.util.ArrayList<java.lang.Object>(); <BUGE> com.badlogic.gdx.maps.MapObjects objects = layer.getObjects(); for (com.badlogic.gdx.maps.MapObject object : objects) { if (object.getProperties().containsKey(property)) { o.add(object); } } return o; } 
public boolean hasNext() { <BUGS> if (((current) != null) && (current.hasNext())) return true;  if (rels.hasNext()) { current = rels.next().other().iterator(); return hasNext(); } return false; <BUGE> } 
<BUGS> public void moveUpPackageableElements(org.eclipse.uml2.uml.PackageableElement packageableElement, java.util.List<org.eclipse.uml2.uml.PackageableElement> packageableElementsToMove) { <BUGE> final org.obeonetwork.dsl.uml2.design.internal.services.MoveUpElementSwitch moveUpElementsSwitch = new org.obeonetwork.dsl.uml2.design.internal.services.MoveUpElementSwitch(); final java.util.List<org.eclipse.uml2.uml.PackageableElement> packageableElementsInRightOrder = retrieveTheRightOrderForPackageableElement(packageableElementsToMove); final java.util.Iterator<org.eclipse.uml2.uml.PackageableElement> iterator = packageableElementsInRightOrder.iterator(); while (iterator.hasNext()) { final org.eclipse.uml2.uml.Element element = iterator.next(); moveUpElementsSwitch.moveUpElement(element); } } 
@org.junit.Test public void checkAvg() throws java.lang.Exception { com.wolkabout.hexiwear.StepCountActivity step = new com.wolkabout.hexiwear.StepCountActivity(); double[] array = new double[7]; int count = 0; <BUGS> while (count != 6) { <BUGE> array[count] = 10 * count; count++; } double weekly = step.stepAvgWeek(array); <BUGS> <BUGE> assertTrue(((weekly == 30.0) || (weekly == 30))); } 
@java.lang.Override public void startElement(java.lang.String uri, java.lang.String localName, java.lang.String qName, org.xml.sax.Attributes attributes) throws org.xml.sax.SAXException { <BUGS> <BUGE> sinlin.Tag tag = new sinlin.Tag(qName, attributes); if (!(arrayDeque.isEmpty())) { arrayDeque.peek().addNodeTag(tag); } arrayDeque.push(tag); } 
private void updateTrackersWithWord(int wordNum) { <BUGS> long setBit = 1L << (wordNum & 63); if ((tracker1[(wordNum >>> 6)] |= setBit) != setBit) { <BUGE> tracker2[(wordNum >>> 12)] |= 1L << ((wordNum >>> 6) & 63); } } 
private void createTimerLabel() { this.timer = new com.badlogic.gdx.scenes.scene2d.ui.Label("Time till game start: ", this.skin); <BUGS> java.lang.System.out.println(Gdx.graphics.getWidth()); <BUGE> this.timer.setPosition(((Gdx.graphics.getWidth()) * (nl.tudelft.ti2806.riverrush.screen.WaitingScreen.TIMER_LABEL_WIDTH_MULTIPLIER)), ((Gdx.graphics.getHeight()) * (nl.tudelft.ti2806.riverrush.screen.WaitingScreen.TIMER_LABEL_HEIGHT_MULTIPLIER))); this.stage.addActor(this.timer); } 
public void onReceive(android.content.Context context, android.content.Intent intent) { <BUGS> android.app.Notification.Builder notificationBuilder = new android.app.Notification.Builder(context).setSmallIcon(android.R.drawable.stat_sys_warning).setAutoCancel(true).setContentTitle("Novas notícias estão disponíveis!").setContentText("Clique aqui para acessar sua lista de notícias e manter-se informado").setVibrate(mVibratePattern); <BUGE> android.app.NotificationManager mNotificationManager = ((android.app.NotificationManager) (context.getSystemService(Context.NOTIFICATION_SERVICE))); mNotificationManager.notify(1, notificationBuilder.build()); } 
private java.lang.String createReadPageTitle(com.pratilipi.data.client.PratilipiData pratilipiData, int pageNo, int pageCount) { java.lang.String title = createPratilipiPageTitle(pratilipiData); <BUGS> title = (title == null) ? "" : " « " + title; <BUGE> java.lang.String pratilipiText = ((com.pratilipi.i18n.I18n.getString("pratilipi", com.pratilipi.filter.UxModeFilter.getDisplayLanguage())) + " / ") + "Pratilipi"; return (title + " « ") + pratilipiText; } 
@javax.ws.rs.POST @javax.ws.rs.Path(value = "/submit/{actionType}") <BUGS> public javax.ws.rs.core.Response submitCmdlet(java.lang.String args, @javax.ws.rs.PathParam(value = "actionType") java.lang.String actionType) { <BUGE> try { return new org.smartdata.server.rest.message.JsonResponse(Response.Status.CREATED, smartEngine.getCmdletManager().submitCmdlet(((actionType + " ") + args))).build(); } catch (java.lang.Exception e) { org.smartdata.server.rest.CmdletRestApi.logger.error("Exception in ActionRestApi while adding cmdlet", e); return new org.smartdata.server.rest.message.JsonResponse(Response.Status.INTERNAL_SERVER_ERROR, e.getMessage(), org.apache.commons.lang.exception.ExceptionUtils.getStackTrace(e)).build(); } } 
public int lineClearCalc(int linesCleared) { <BUGS> int score = ((int) (((((java.lang.Math.pow(linesCleared, 3)) / 6.0) - (java.lang.Math.pow(linesCleared, 2))) + ((23 * linesCleared) / 6.0)) - 2)); <BUGE> return score * (pointsPerLine); } 
public void compute(com.hp.hpl.jena.sparql.core.Quad quad) { eu.diachron.qualitymetrics.accessibility.availability.RDFAccessibility.logger.debug("Assessing {}", quad.asTriple().toString()); if (quad.getPredicate().getURI().equals(VOID.dataDump.getURI())) { <BUGS> httpRetreiver.addResourceToQueue(quad.getObject().getURI()); dataDumpsURIs.add(quad.getObject().getURI()); <BUGE> (totalDataDumps)++; } } 
<BUGS> private void collapseViews(android.view.View fab, final android.view.View cardview, final boolean collapsing) { <BUGE> android.animation.Animator fabAnimator = (collapsing) ? com.application.material.bookmarkswallet.app.animator.AnimatorBuilder.getInstance(com.application.material.bookmarkswallet.app.manager.SearchManager.context).buildHideAnimator(fab, false) : com.application.material.bookmarkswallet.app.animator.AnimatorBuilder.getInstance(com.application.material.bookmarkswallet.app.manager.SearchManager.context).buildShowAnimator(fab, false); fabAnimator.start(); <BUGS> cardview.setVisibility((collapsing ? android.view.View.VISIBLE : android.view.View.GONE)); <BUGE> } 
@java.lang.Override public void onActivityStarted(android.app.Activity activity) { (appCount)++; <BUGS> com.ufo.socketioandroiddemo.login.UserInfoRepository userInfoRepository = com.ufo.socketioandroiddemo.login.UserInfoRepository.getInstance(); com.ufo.socketioandroiddemo.login.UserInfoBean bean = userInfoRepository.currentUser(getApplicationContext()); if (bean != null) { getRecent(); startSocketIOService(); <BUGE> } } 
<BUGS> <BUGE> @org.springframework.web.bind.annotation.PostMapping(value = "/byName/{userId}") @org.springframework.web.bind.annotation.ResponseStatus(value = org.springframework.http.HttpStatus.OK) public com.softserve.if072.common.model.Store getStoreByNameAndUser(@org.springframework.web.bind.annotation.PathVariable java.lang.Integer userId, @org.springframework.web.bind.annotation.RequestBody com.softserve.if072.common.model.Store store) { com.softserve.if072.common.model.Store oldStore = storeService.getStoreByNameAndUser(store.getName(), store.getAddress(), userId); com.softserve.if072.restservice.controller.StoreController.LOGGER.info(java.lang.String.format("Store with name %s was retrieved", store.getName())); <BUGS> if (oldStore != null) { return oldStore; }else return null;  <BUGE> } 
public static java.lang.String getShortDomain(orca.manage.beans.ReservationMng mng) { java.util.Properties resProps = orca.manage.OrcaConverter.fill(mng.getResourceProperties()); java.lang.String domain = resProps.getProperty(orca.controllers.xmlrpc.XmlrpcHandlerHelper.RESOURCE_DOMAIN_VALUE); <BUGS> <BUGE> java.util.regex.Matcher matcher = orca.controllers.xmlrpc.XmlrpcHandlerHelper.pattern.matcher(domain); if (matcher.find()) return matcher.group(1); else return null;  } 
@java.lang.Override <BUGS> public G2D.Vector2D transform(app2dapi.geometry.G2D.Vector2D v) { <BUGE> java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double(v.x(), v.y()); trans.deltaTransform(jp, jp); return new app2dpcimpl.geometry.PVD2DImpl(jp.x, jp.y); } 
public io.rocketchat.livechat.LiveChatAPI.ChatRoom createRoom(java.lang.String userID, java.lang.String authToken) { <BUGS> java.lang.String userName = userInfo.optString("username"); <BUGE> java.lang.String visitorToken = LiveChatBasicRPC.visitorToken; java.lang.String roomID = io.rocketchat.common.utils.Utils.shortUUID(); return new io.rocketchat.livechat.LiveChatAPI.ChatRoom(userName, roomID, userID, visitorToken, authToken); } 
protected remixlab.proscene.JSONObject toJSONObject(remixlab.proscene.Frame frame) { remixlab.proscene.JSONObject jsonFrame = new remixlab.proscene.JSONObject(); <BUGS> jsonFrame.setFloat("magnitude", eyeFrame().magnitude()); <BUGE> jsonFrame.setJSONArray("position", toJSONArray(frame.position())); jsonFrame.setJSONArray("orientation", toJSONArray(frame.orientation())); return jsonFrame; } 
public java.util.List<com.order.www.domain.db.OrderItemDB> listAllDesignedItem() { java.util.List<com.order.www.dao.util.SearchFilter> filters = com.google.common.collect.Lists.newArrayList(); filters.add(new com.order.www.dao.util.SearchFilter("asinInfo", SearchFilter.Operator.ISNOTNULL, "")); filters.add(new com.order.www.dao.util.SearchFilter("asinInfo.status", SearchFilter.Operator.EQ, 1)); <BUGS> filters.add(new com.order.www.dao.util.SearchFilter("imageUrl", SearchFilter.Operator.NEQ, "404")); <BUGE> org.springframework.data.jpa.domain.Specification<com.order.www.domain.db.OrderItemDB> spec = com.order.www.dao.util.DynamicSpecifications.bySearchFilter(filters, com.order.www.domain.db.OrderItemDB.class); return orderItemDao.findAll(spec); } 
public boolean checkStep(int x, int y) { <BUGS> if ((x < (this.width)) || ((width) > (this.height))) { <BUGE> return false; }else <BUGS> if ((y < (this.height)) || ((height) > (this.height))) { <BUGE> return false; }else if ((matrix.data[x][y]) > 0) { return false; }else return true;    } 
private void addShowLink(java.lang.String url, java.util.List<net.myonlinestuff.torrentdl.domain.ShowLink> showLinks, org.jsoup.select.Elements el) { if ((el != null) && (!(el.isEmpty()))) { <BUGS> net.myonlinestuff.torrentdl.service.Parser.LOGGER.info("element found: {}", el.toString()); <BUGE> for (final org.jsoup.nodes.Element element : el) { showLinks.add(new net.myonlinestuff.torrentdl.domain.ShowLink(element.text(), element.attr("href"), url)); } } } 
public void deleteOldMarker(com.google.android.gms.maps.model.Marker marker) { if ((markers.get(viewHolder)) == null) markers.put(viewHolder, marker); else { markers.get(viewHolder).remove(); <BUGS> distance -= currentDistance; duration -= currentDuration; <BUGE> markers.put(viewHolder, marker); } } 
<BUGS> private static java.lang.String join(java.lang.String[] set, java.lang.String medium, int start) { java.lang.String s = set[start]; <BUGE> int i = 0; for (java.lang.String part : set) { <BUGS> if (i > start) <BUGE> s = (((s + " ") + medium) + " ") + part;  i++; } return s; } 
@java.lang.Override public void onNavigationDrawerItemSelected(int position) { if (!(auth)) return ;  android.support.v4.app.FragmentManager fragmentManager = getSupportFragmentManager(); if (position == 0) { <BUGS> fragmentManager.beginTransaction().replace(R.id.container, tw.edu.ncu.cc.course.ScheduleFragment.newInstance((position + 1))).commit(); <BUGE> }else { fragmentManager.beginTransaction().replace(R.id.container, tw.edu.ncu.cc.course.MainActivity.PlaceholderFragment.newInstance((position + 1))).commit(); } } 
private void handlePreviousBtnClick() { <BUGS> releaseResources(); <BUGE> --(currentPosition); if ((currentPosition) < 0) { currentPosition = 0; }else { <BUGS> setCurrentSongUi(); resetUiElements(); <BUGE> if (raiseToastIfNetworkNotAvailable()) { return ; } if ((playService) != null) { playService.setSeekPosition(0); playService.playSong(currentPosition); } } } 
private java.lang.String getPortMapping(int port) { <BUGS> return (portOffset) == 0 ? ((ipAddress) + "::") + port : ((((ipAddress) + ":") + ((portOffset) + port)) + ":") + port; <BUGE> } 
<BUGS> public void handle(java.io.InputStream ips, java.io.OutputStream ops) throws java.io.IOException { <BUGE> com.googlecode.jsonrpc4j.ReadContext ctx = com.googlecode.jsonrpc4j.ReadContext.getReadContext(ips, mapper); com.fasterxml.jackson.databind.JsonNode jsonNode = null; try { ctx.assertReadable(); jsonNode = ctx.nextValue(); } catch (com.fasterxml.jackson.core.JsonParseException e) { writeAndFlushValue(ops, createErrorResponse("jsonrpc", "null", (-32700), "Parse error", null)); <BUGS> return ; <BUGE> } <BUGS> handleNode(jsonNode, ops); <BUGE> } 
private java.lang.String setupDstByDirectory(java.lang.String directory) { int fileNameIndex = VCF_FILE_PATH.lastIndexOf("/"); if (fileNameIndex == (-1)) { fileNameIndex = VCF_FILE_PATH.lastIndexOf("\\"); } <BUGS> <BUGE> java.lang.String output = directory + (VCF_FILE_PATH.substring(fileNameIndex)); return (output.substring(0, ((output.length()) - 3))) + "csv"; } 
public void save(ru.cdek.example.model.Entity entity) throws org.springframework.dao.DataAccessException { org.springframework.jdbc.core.namedparam.BeanPropertySqlParameterSource paramSource = new org.springframework.jdbc.core.namedparam.BeanPropertySqlParameterSource(entity); java.lang.Number id = this.insertEntity.executeAndReturnKey(paramSource); <BUGS> ru.cdek.example.repository.jdbc.JdbcEntityRepositoryImpl.logger.info(java.lang.String.format("Added entity with id - %d (name: %s)", id, entity.getName())); <BUGE> } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); myCouchBase = new com.github.dev.williamg.simplecouchbaseapp.MyCouchBase(this); editText = ((android.widget.EditText) (findViewById(R.id.main_text))); recyclerView = ((android.support.v7.widget.RecyclerView) (findViewById(R.id.main_recycler_view))); recyclerView.setLayoutManager(new android.support.v7.widget.LinearLayoutManager(this)); recyclerView.setAdapter(new com.github.dev.williamg.simplecouchbaseapp.DocumentAdapter(myCouchBase.getAllDocumentsId(), this)); <BUGS> myCouchBase.close(); <BUGE> } 
@java.lang.Override public void onViewCreated(android.view.View view, android.os.Bundle savedInstanceState) { mViewPager = ((android.support.v4.view.ViewPager) (view.findViewById(R.id.viewpager))); mPageAdapter = new com.av.dev.pyurluxuryandroid.Fragment.LifestyleManager.RequestLifestyleFragment.SectionsPagerAdapter(); mViewPager.setAdapter(mPageAdapter); <BUGS> mViewPager.setCurrentItem(1); <BUGE> mSlidingTabLayout = ((com.av.dev.pyurluxuryandroid.View.SlidingTabLayout) (view.findViewById(R.id.sliding_tabs))); mSlidingTabLayout.setRowCount(2); mSlidingTabLayout.setViewPager(mViewPager); mSlidingTabLayout.setOnPageChangeListener(pageListener); } 
@java.lang.Override public void run() { try { oneDayTimerLatch.await(); } catch (java.lang.InterruptedException e) { e.printStackTrace(); } java.lang.Object[] trends = oneDayStatistics.findAndGetTrends(); oneDayStatistics.clearStatistics(); updateOutputFile(oneDayResults, trends, ((time) / (6 * 24)), "Day"); <BUGS> oneHourTimerLatch = new java.util.concurrent.CountDownLatch(2); <BUGE> } 
public boolean apply(java.lang.String[] t) { if ((this.nextCommand) == null) return this.hasBeenAnswered = false;  <BUGS> if (this.hasBeenAnswered = this.nextCommand.apply(t)); this.setChanged(); notifyObservers(new java.lang.Object[]{ this.nextCommand.getClass() , t }); <BUGE> return hasBeenAnswered; } 
public java.lang.String[] getNames() { java.lang.String[] names = new java.lang.String[3]; for (int i = 0; i < 3; i++) { names[i] = this.playerFields[i].getText(); } <BUGS> return this.names; <BUGE> } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_first); mBookRide = ((android.widget.Button) (findViewById(R.id.book_ride))); mRegister = ((android.widget.Button) (findViewById(R.id.register_now))); mBookRide.setOnClickListener(this); mRegister.setOnClickListener(this); <BUGS> if (com.securide.custmer.preferences.SecuridePreferences.isRegistered()) { startActivity(new android.content.Intent(mContext, com.securide.custmer.MapsActivity.class)); finish(); } <BUGE> } 
public code.dao.hibernatedao.Race findRaceUseInnerJOINWithTrainAndTrainTypes(int raceID) { org.hibernate.Query query = getCurrentSession().createQuery(code.dao.hibernatedao.RaceHibernateDao.GET_RACE_WITH_TRAIN_AND_TRAIN_TYPE_USING_ID_HQL); query.setInteger("id", raceID); code.dao.hibernatedao.Race race = ((code.dao.hibernatedao.Race) (query.uniqueResult())); org.hibernate.Hibernate.initialize(race.getTickets()); <BUGS> <BUGE> return race; } 
@javafx.fxml.FXML public void showExercise() throws java.io.IOException, javax.xml.parsers.ParserConfigurationException, org.xml.sax.SAXException { <BUGS> selection.exercise = new trainer.models.Exercise(selection.catalog, exercisesListView.getSelectionModel().getSelectedItem().toString()); exerciseTextArea.setText(selection.exercise.description); trainer.App.getInstance().controllers.put("trainer", trainer.gui.TrainerController.createWithName("trainer")); <BUGE> } 
@java.lang.Override public void dispose() { for (com.badlogic.ashley.core.Entity entity : renderQueue) { com.spaceproject.components.TextureComponent tex = Mappers.texture.get(entity); if ((tex.texture) != null) tex.texture.dispose();  } for (com.spaceproject.SpaceBackgroundTile tile : com.spaceproject.systems.LoadingSystem.getTiles()) { tile.tex.dispose(); } <BUGS> com.spaceproject.systems.RenderingSystem.batch.dispose(); <BUGE> } 
@java.lang.Override public void onBackPressed() { android.support.v7.widget.SearchView searchView = ((android.support.v7.widget.SearchView) (android.support.v4.view.MenuItemCompat.getActionView(menu.findItem(R.id.action_search)))); if (!(searchView.isIconified())) { searchView.setIconified(true); }else if (backPressed) { super.onBackPressed(); }else { <BUGS> <BUGE> android.widget.Toast.makeText(this, "Press again to leave the app", Toast.LENGTH_LONG).show(); }  } 
public void link(internetz.Artifact newart) { java.util.ArrayList mostsimilar = getMostSimilar(bookmarks, newart); <BUGS> while (mostsimilar.iterator().hasNext()) { newart.buildLink(((internetz.Artifact) (mostsimilar.iterator().next()))); <BUGE> } } 
public static void create(hospital.models.Patient entity) { hospital.repositories.concrete.Repository<hospital.models.Address> addressRepository = new hospital.repositories.concrete.Repository<hospital.models.Address>(hospital.models.Address.class); addressRepository.add(entity.getAddress()); <BUGS> <BUGE> hospital.repositories.concrete.Repository<hospital.models.Patient> patientRepository = new hospital.repositories.concrete.Repository<hospital.models.Patient>(hospital.models.Patient.class); patientRepository.add(entity); patientRepository.close(); } 
@org.junit.Test public void testMoveCutOff() { java.lang.String boardStr = "x  x  x  0  1\n" + ((("x  x  x  0 1h\n" + "x  x  x  0h x\n") + "x  x  x  x  x\n") + "x  x  x  x  x"); Board b = Board.fromString(boardStr); Driver d = new VoronoiMinMax(); Direction move = d.move(b); <BUGS> org.junit.Assert.assertEquals(Direction.RIGHT, move); <BUGE> b.move(b.US, b.tileFrom(b.ourTile(), move)); } 
@java.lang.Override public void handle(javafx.scene.input.MouseEvent e) { if (!(isGameover)) { <BUGS> int row = GUI.getLoc(((int) ((e.getY()) - 48))); <BUGE> int col = GUI.getLoc(((int) (e.getX()))); board.addPiece(row, col); update(); if (board.checkWin()) { isGameover = true; endGame(); } } } 
private void addFragment(android.support.v4.app.Fragment fragment) { android.transition.Transition changeTransform = android.transition.TransitionInflater.from(this).inflateTransition(R.transition.change_image_transform); android.support.v4.app.FragmentTransaction ft = getSupportFragmentManager().beginTransaction(); <BUGS> ft.add(R.id.activity_container, fragment, fragment.getClass().getSimpleName()); <BUGE> ft.addToBackStack(fragment.getTag()); ft.commit(); android.util.Log.d(com.vladscaesteanu.licenta.MainActivity.TAG, ("Fragment no is" + (fragmentManager.getBackStackEntryCount()))); } 
@java.lang.Override protected void onActivityResult(int requestCode, int resultCode, android.content.Intent data) { super.onActivityResult(requestCode, resultCode, data); <BUGS> if ((requestCode == (rray.me.androidresume.BasicInfoEditActivity.REQ_CODE_PICK_IMAGE)) && (requestCode == (android.app.Activity.RESULT_OK))) { <BUGE> android.net.Uri imageUri = data.getData(); if (imageUri != null) { showImage(imageUri); } } } 
private void refreshList() { listView = ((android.widget.ListView) (findViewById(R.id.mushroom_list_view))); bazinac.aplikacenahouby.db.AplikaceNaHoubyDBHelper database = new bazinac.aplikacenahouby.db.AplikaceNaHoubyDBHelper(getApplicationContext()); bazinac.aplikacenahouby.db.MushroomHelper mush = new bazinac.aplikacenahouby.db.MushroomHelper(); <BUGS> mushList = mush.getMushrooms(database.getReadableDatabase(), foundMushroomIDs, activeMinorSignValues); <BUGE> atlasAdapter = new bazinac.aplikacenahouby.adapters.MushroomListAdapter(this, mushList); listView.setAdapter(atlasAdapter); } 
@java.lang.Override protected int intSpeed(float fSpeed) { int speed = super.intSpeed(fSpeed); <BUGS> if (speed <= 0) { <BUGE> return speed; } switch (this.getSpeedStepMode()) { case jmri.DccThrottle.SpeedStepMode28 : case jmri.DccThrottle.SpeedStepMode28Mot : return ((int) ((fSpeed * 28) * 4)) + 12; case jmri.DccThrottle.SpeedStepMode14 : return ((int) ((fSpeed * 14) * 8)) + 8; } return speed; } 
protected android.graphics.Rect growRight(final int w, final int h) { final com.funzio.pure2D.utils.RectBinPacker.Node down = mRoot; final com.funzio.pure2D.utils.RectBinPacker.Node right = new com.funzio.pure2D.utils.RectBinPacker.Node(((mRoot.x) + (mRoot.width)), mRoot.y, w, mRoot.height); mRoot = new com.funzio.pure2D.utils.RectBinPacker.Node(mRoot.x, mRoot.y, ((mRoot.width) + w), mRoot.height); <BUGS> mRoot.mRight = right; mRoot.mDown = down; <BUGE> return right.occupy(w, h); } 
@java.lang.Override public int getElementCount(final java.lang.String elementType) { if (elementType == null) { throw new java.lang.NullPointerException("elementType must not be null."); } if (!(wrappedMap.containsKey(elementType))) { <BUGS> throw new java.lang.IllegalArgumentException("No such type found."); <BUGE> } org.smurn.jply.ElementType unwrapped = wrappedMap.get(elementType).getUnwrappedType(); return reader.getElementCount(unwrapped.getName()); } 
@java.lang.Override <BUGS> public void setGoalTarget(net.minecraft.server.v1_9_R1.EntityLiving entityliving, org.bukkit.event.entity.EntityTargetEvent.TargetReason reason, boolean fireEvent) { <BUGE> if (((this.target) instanceof net.minecraft.server.v1_9_R1.EntityLiving) && (this.target.isAlive())) { super.setGoalTarget(this.target, EntityTargetEvent.TargetReason.CUSTOM, false); }else { super.setGoalTarget(null, EntityTargetEvent.TargetReason.CUSTOM, false); } <BUGS> <BUGE> } 
public void close() { GUI.status = false; GUI.db_url = ""; GUI.database = ""; GUI.username = ""; GUI.password = ""; GUI.stmt = null; GUI.con = null; <BUGS> <BUGE> this.dispose(); <BUGS> analyster.dispose(); <BUGE> java.lang.System.exit(0); } 
public static final sune.util.ssdf2.SSDCollection read(java.lang.String content) { if (content == null) { throw new java.lang.IllegalArgumentException("Content cannot be null!"); } <BUGS> char[] chars = sune.util.ssdf2.SSDF.formatContent(content.toCharArray()); return ((sune.util.ssdf2.SSDCollection) (sune.util.ssdf2.SSDF.readObjects(chars, 0, chars.length, null, false, false).get(null))); <BUGE> } 
private void checkUsername(com.musicforall.model.User user) { java.lang.String searchUsername; <BUGS> java.lang.String username = searchUsername = user.getUsername(); <BUGE> int i = 0; while ((userService.getIdByUsername(searchUsername)) != null) { i++; searchUsername = username + i; } if (i > 0) { user.setUsername(searchUsername); } } 
@org.junit.Test public void testGetTrasactionId() throws java.lang.Exception { org.p2p.lending.club.api.transaction.impl.Transaction transaction = new org.p2p.lending.club.api.transaction.impl.Transaction("12345"); <BUGS> org.junit.Assert.assertTrue(((transaction.getTrasactionId()) == 1)); <BUGE> transaction = new org.p2p.lending.club.api.transaction.impl.Transaction("12345"); <BUGS> org.junit.Assert.assertTrue(((transaction.getTrasactionId()) == 2)); <BUGE> transaction = new org.p2p.lending.club.api.transaction.impl.Transaction("12345"); <BUGS> org.junit.Assert.assertTrue(((transaction.getTrasactionId()) == 3)); <BUGE> } 
public boolean isEveryCharacterUniqueUsingHistogram() { int[] asciiCount = new int[128]; for (int i = 0; i < (string.length()); i++) { (asciiCount[string.charAt(i)])++; } for (int i = 0; i < (asciiCount.length); i++) { <BUGS> if ((asciiCount[i]) > 0) { <BUGE> return false; } } return true; } 
@java.lang.Override public void update(com.flurnamenpuzzle.generator.Observable observable) { com.flurnamenpuzzle.generator.domain.PuzzleGeneratorModel model = ((com.flurnamenpuzzle.generator.domain.PuzzleGeneratorModel) (observable)); int percentage = model.getPercentageGenerated(); java.lang.String statusMessage = model.getStatusMessage(); <BUGS> this.progressLabel.setText(statusMessage); <BUGE> this.progressBar.setValue(percentage); this.progressBar.setString(((progressBar.getValue()) + "%")); } 
@java.lang.Override public bee.creative.function.Array section(final int offset, final int length) throws java.lang.IllegalArgumentException { final int offset2 = offset - (this.length()); <BUGS> <BUGE> if (offset2 >= 0) return array.section(offset2, length);  <BUGS> final int length2 = offset2 + length; <BUGE> if (length2 <= 0) return super.section(offset, length);  <BUGS> return super.section(offset, (-offset2)).concat(array.section(0, offset2)); <BUGE> } 
@com.squareup.otto.Subscribe public void onInternalLinkClicked(com.ayuget.redface.ui.event.InternalLinkClickedEvent event) { com.ayuget.redface.ui.fragment.TopicFragment topicFragment = ((com.ayuget.redface.ui.fragment.TopicFragment) (getSupportFragmentManager().findFragmentByTag(com.ayuget.redface.ui.activity.TopicsActivity.TOPIC_FRAGMENT_TAG))); <BUGS> if (((topicFragment != null) && ((event.getTopic()) == (topicFragment.getTopic()))) && ((event.getPage()) == (topicFragment.getCurrentPage()))) { <BUGE> topicFragment.setCurrentPagePosition(event.getPagePosition()); } } 
public void play() { setup(); <BUGS> printBoard(); <BUGE> while ((playerList.size()) > 1) { for (int i = 0; i < (playerList.size()); i++) { playerList.get(i).turn(board, this); printBoard(); } } } 
public static void reg(net.minecraft.block.Block block, int meta, java.lang.String file) { net.minecraft.item.Item item = net.minecraft.item.Item.getItemFromBlock(block); net.minecraftforge.client.model.ModelLoader.setCustomModelResourceLocation(item, meta, new net.minecraft.client.resources.model.ModelResourceLocation((((io.github.zaphodious.essentialsorcery.core.Reference.MODID) + ":") + file), "inventory")); <BUGS> java.lang.System.out.println((((("Ran " + (io.github.zaphodious.essentialsorcery.core.Reference.MODID)) + ":") + (block.getUnlocalizedName().substring(5))) + " through the render reg.")); <BUGE> } 
public static void signOut(android.content.Context context) { new com.example.tberroa.girodicerapp.data.OperatorInfo().clear(context); new com.example.tberroa.girodicerapp.data.CurrentInspectionInfo().clearAll(context); <BUGS> <BUGE> new com.example.tberroa.girodicerapp.data.UserInfo().setUserStatus(context, false); <BUGS> new com.example.tberroa.girodicerapp.database.LocalDB().clear(); <BUGE> context.startActivity(new android.content.Intent(context, com.example.tberroa.girodicerapp.activities.SignInActivity.class)); if (context instanceof android.app.Activity) { ((android.app.Activity) (context)).finish(); } } 
private void handleCancelRequest(android.javax.sip.message.Request request, android.javax.sip.ServerTransaction serverTransaction) { android.javax.sip.header.CallIdHeader callIdHeader = ((android.javax.sip.header.CallIdHeader) (request.getHeader(CallIdHeader.NAME))); java.lang.String callId = callIdHeader.getCallId(); if ((doSendResponse(Response.OK, RequestMethod.CANCEL, request, serverTransaction)) != null) { <BUGS> logger.info("{} response sent.", Response.OK); <BUGE> bus.post(new org.github.sipuada.events.CallInvitationCanceled(("Call invitation canceled by the caller " + "or callee took longer than roughly 30 seconds to answer."), callId, true)); return ; } throw new org.github.sipuada.exceptions.RequestCouldNotBeAddressed(); } 
@org.junit.Test public void computeSimpleGraphTest() throws java.lang.Exception { algorithms.river_issue.FordFulkerson fordTestGraph = new algorithms.river_issue.FordFulkerson(); fordTestGraph.init(testGraph); fordTestGraph.setSourceAndTarget(testGraph.getNode("S"), testGraph.getNode("T")); fordTestGraph.compute(); <BUGS> org.junit.Assert.assertTrue(cutFromTestGraph.equals(fordTestGraph.maxFlowMinCut)); <BUGE> } 
public java.lang.String toString() { <BUGS> return (("Startpunt: " + (getStartPunt())) + " - Eindpunt: ") + (getEindPunt()); <BUGE> java.lang.String returnString = (("Lijn: startpunt: " + (this.getStartPunt())) + " - eindpunt: ") + (this.getEindPunt()); returnString = (returnString + "\n") + (omhullende.toString()); return returnString; } 
@java.lang.Override public boolean addUniversalDistillationRecipe(net.minecraftforge.fluids.FluidStack aInput, net.minecraftforge.fluids.FluidStack[] aOutputs, net.minecraft.item.ItemStack aOutput2, int aDuration, int aEUt) { for (int i = 0; i < (java.lang.Math.min(aOutputs.length, 11)); i++) { <BUGS> addDistilleryRecipe(gregtech.api.util.GT_Utility.getIntegratedCircuit(i), aInput, aOutputs[i], (aDuration * 2), (aEUt / 4), false); <BUGE> } return addDistillationTowerRecipe(aInput, aOutputs, aOutput2, aDuration, aEUt); } 
public org.opendaylight.sxp.util.time.ManagedTimer setTimer(org.opendaylight.yang.gen.v1.urn.opendaylight.sxp.node.rev141002.TimerType timerType, int period) throws org.opendaylight.sxp.util.exception.connection.ChannelHandlerContextDiscrepancyException, org.opendaylight.sxp.util.exception.connection.ChannelHandlerContextNotFoundException, org.opendaylight.sxp.util.exception.unknown.UnknownTimerTypeException { io.netty.channel.ChannelHandlerContext ctx = null; if (isModeBoth()) { if (timerType == (org.opendaylight.yang.gen.v1.urn.opendaylight.sxp.node.rev141002.TimerType.KeepAliveTimer)) { ctx = getChannelHandlerContext(org.opendaylight.sxp.core.SxpConnection.ChannelHandlerContextType.SpeakerContext); }else { ctx = getChannelHandlerContext(org.opendaylight.sxp.core.SxpConnection.ChannelHandlerContextType.ListenerContext); } }else { ctx = getChannelHandlerContext(); } org.opendaylight.sxp.util.time.ManagedTimer timer = org.opendaylight.sxp.util.time.connection.TimerFactory.createTimer(timerType, period, owner, this, ctx); <BUGS> this.timers.put(timerType, timer); return timer; <BUGE> } 
int appExists(java.lang.String name) { <BUGS> for (int i = 0; (statArray[i]) != null; i++) { <BUGE> if (statArray[i].packageName.equals(name)) { android.util.Log.d("Crash site", java.lang.String.valueOf(i)); return i; } } return -1; } 
@java.lang.Override public void stop() { org.webrtc.Logging.d(org.webrtc.Camera1Session.TAG, ("Stop camera1 session on camera " + (cameraId))); checkIsOnCameraThread(); if ((state) != (org.webrtc.Camera1Session.SessionState.STOPPED)) { final long stopStartTime = java.lang.System.nanoTime(); <BUGS> state = org.webrtc.Camera1Session.SessionState.STOPPED; <BUGE> stopInternal(); final int stopTimeMs = ((int) (java.util.concurrent.TimeUnit.NANOSECONDS.toMillis(((java.lang.System.nanoTime()) - stopStartTime)))); org.webrtc.Camera1Session.camera1StopTimeMsHistogram.addSample(stopTimeMs); } } 
@java.lang.Override public void connected() { appContext.setSIOService(sioService); <BUGS> loadPersistenceLayer(); <BUGE> appContext.getMainBus().post(new ch.fork.AdHocRailway.ui.UpdateMainTitleEvent(((((AdHocRailway.TITLE) + " [") + url) + "]"))); appContext.getMainBus().post(new ch.fork.AdHocRailway.ui.CommandLogEvent(("Successfully connected to AdHoc-Server: " + url))); } 
@java.lang.Override @net.openhft.chronicle.core.annotation.ForceInline public void write(long offsetInRDO, @org.jetbrains.annotations.NotNull java.nio.ByteBuffer bytes, int offset, int length) { if (bytes.isDirect()) { <BUGS> memory.copyMemory(((sun.nio.ch.DirectBuffer) (bytes)).address(), ((address) + (translate(offsetInRDO))), length); <BUGE> }else { memory.copyMemory(bytes.array(), offset, ((address) + (translate(offsetInRDO))), length); } } 
@java.lang.Override public boolean onItemLongClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) { try { <BUGS> new com.example.llh_pc.it_support.utils.Dialogs.DialogDefault(this.getParent()).showConfirmCloseApp(); <BUGE> } catch (java.lang.Exception e) { android.util.Log.e("error", e.getMessage()); e.printStackTrace(); } return false; } 
@java.lang.Override public org.bukkit.entity.Item dropItem(org.bukkit.Location location, org.bukkit.inventory.ItemStack item) { com.google.common.base.Optional<org.bukkit.entity.Entity> created = getHandle().createEntity(EntityTypes.DROPPED_ITEM, blue.lapis.pore.converter.vector.VectorConverter.create3d(location)); if (!(created.isPresent())) { return null; } assert created instanceof org.bukkit.entity.Item; org.bukkit.entity.Item drop = ((org.bukkit.entity.Item) (created)); <BUGS> drop.setPickupDelay(10); <BUGE> throw new org.apache.commons.lang.NotImplementedException(); } 
public static java.lang.String getAdminRestAPIResource() throws org.wso2.carbon.apimgt.core.exception.APIManagementException { if ((org.wso2.carbon.apimgt.rest.api.common.util.RestApiUtil.adminRestAPIDefinition) == null) { try { org.wso2.carbon.apimgt.rest.api.common.util.RestApiUtil.adminRestAPIDefinition = org.apache.commons.io.IOUtils.toString(org.wso2.carbon.apimgt.rest.api.common.util.RestApiUtil.class.getResourceAsStream("/admin-api.yaml"), "UTF-8"); } catch (java.io.IOException e) { java.lang.String message = "Error while reading the swagger definition of Admin Rest API"; org.wso2.carbon.apimgt.rest.api.common.util.RestApiUtil.log.error(message, e); throw new org.wso2.carbon.apimgt.rest.api.common.exception.APIMgtSecurityException(message, org.wso2.carbon.apimgt.core.exception.ExceptionCodes.API_NOT_FOUND); } } <BUGS> return org.wso2.carbon.apimgt.rest.api.common.util.RestApiUtil.storeRestAPIDefinition; <BUGE> } 
private boolean executeTIMEZONE_LIST() { int listIndex = getListArg(com.rfo.basic.Run.list_is_string); if (listIndex < 0) return false;  if (!(checkEOL())) return false;  <BUGS> java.util.ArrayList<java.lang.String> theList = com.rfo.basic.Run.theLists.get(listIndex); <BUGE> for (java.lang.String zone : java.util.TimeZone.getAvailableIDs()) { theList.add(zone); } return true; } 
@java.lang.Override public void onClick(android.view.View v) { <BUGS> if (MainActivity.schedule.add(dayWeek, from_hours.getValue(), from_minutes.getValue(), to_hours.getValue(), to_minutes.getValue())) { <BUGE> closeDialog(); }else { android.widget.Toast temp = android.widget.Toast.makeText(c.getBaseContext(), "This interval is incorrect!", Toast.LENGTH_SHORT); temp.show(); } } 
@java.lang.Override public boolean onPreferenceChange(android.preference.Preference preference, java.lang.Object newValue) { if (preference.getKey().equals(getResources().getString(R.string.key_mov_speed))) { <BUGS> android.util.Log.d(lsa.viewercloudpoints.MyGLSurfaceView.TAG, ("MovementSpeed changed: " + newValue)); <BUGE> speedMultiTouch = calculateSpeedMultiTouch(((int) (newValue))); } return true; } 
private boolean isAccessorGroup(java.lang.String accessorName) throws java.sql.SQLException { <BUGS> java.sql.Statement stmt = null; java.sql.ResultSet rs = null; try { stmt = jdbcFixture.getConnection().createStatement(); rs = stmt.executeQuery(((("select r_is_group from dm_user" + " where user_name = '") + accessorName) + "'")); <BUGE> if (rs.next()) { return rs.getBoolean(1); } <BUGS> } finally { rs.close(); stmt.close(); <BUGE> } return false; } 
public void actionPerformed(java.awt.event.ActionEvent e) { <BUGS> placexor(1, 0, whichmark()); <BUGE> if (debug) java.lang.System.out.println(("Paikka 1 0 " + (whichmark())));  ChangeButton(buttonba); buttonba.setEnabled(false); viimeisinSiirto[1][0] = whichmark(); (buttoncount)++; } 
@java.lang.Override public void onCreate() { net.nashlegend.sourcewall.App.application = this; if (net.nashlegend.sourcewall.util.PrefsUtil.readBoolean(Consts.Key_Is_Night_Mode, false)) { android.support.v7.app.AppCompatDelegate.setDefaultNightMode(AppCompatDelegate.MODE_NIGHT_YES); }else { android.support.v7.app.AppCompatDelegate.setDefaultNightMode(AppCompatDelegate.MODE_NIGHT_NO); } super.onCreate(); <BUGS> com.squareup.leakcanary.LeakCanary.install(this); <BUGE> net.nashlegend.sourcewall.App.initImageLoader(this); } 
private boolean checkMove(float x, float y, float oldX, float oldy) { <BUGS> return (java.lang.Math.sqrt(((java.lang.Math.pow(java.lang.Math.abs((x - oldX)), 2)) + (java.lang.Math.pow(java.lang.Math.abs((y - oldy)), 2))))) > (mSlopeDistance); <BUGE> } 
@java.lang.Override public void stateChanged(javax.swing.event.ChangeEvent e) { if (alwaysCheckBox.isSelected()) { startDateTxtField.setText("ALWAYS"); periodTxtField.setText("ALWAYS"); periodTxtField.setEnabled(false); startDateTxtField.setEnabled(false); }else { <BUGS> startDateTxtField.setText(""); periodTxtField.setText(""); <BUGE> periodTxtField.setEnabled(true); startDateTxtField.setEnabled(true); } } 
<BUGS> private long getSerialVersionUID(org.babyfish.persistence.tool.path.TypedQueryPathProcessor.MetaClass metaClass, java.lang.String nestedSimpleClassName) throws java.io.IOException { <BUGE> long serialVersionUID = (nestedSimpleClassName != null) ? nestedSimpleClassName.hashCode() : 0; for (org.babyfish.persistence.tool.path.TypedQueryPathProcessor.MetaProperty property : metaClass.getProperties().values()) { serialVersionUID += (serialVersionUID * 31) + (property.getName().hashCode()); } return serialVersionUID; } 
@java.lang.Override public void onScrolled(android.support.v7.widget.RecyclerView recyclerView, int dx, int dy) { visibleItemCount = manager.getChildCount(); totalItemCount = manager.getItemCount(); pastVisiblesItems = manager.findFirstVisibleItemPosition(); if (!(loading)) { if (((visibleItemCount) + (pastVisiblesItems)) >= (totalItemCount)) { (pageIndex)++; <BUGS> getBooks(pageIndex); android.util.Log.v("...", "Last Item Wow !"); <BUGE> } } } 
@java.lang.Override void statisticsImpl(com.trivago.triava.tcache.action.ActionRunner<K, V> actionRunner, java.lang.Object... args) { <BUGS> if ((args[1]) == (java.lang.Boolean.TRUE)) { <BUGE> actionRunner.stats.incrementHitCount(); }else { actionRunner.stats.incrementMissCount(); } super.statisticsImpl(actionRunner); } 
public java.util.List<com.mymusic.mymusicapp.model.SongDetails> listSongDetails(java.lang.String text) { java.util.List<com.mymusic.mymusicapp.model.SongDetails> values = new java.util.ArrayList<com.mymusic.mymusicapp.model.SongDetails>(); <BUGS> if (text == "") { <BUGE> values = com.mymusic.mymusicapp.model.SongDetails.listAll(com.mymusic.mymusicapp.model.SongDetails.class); }else { values = com.mymusic.mymusicapp.model.SongDetails.find(com.mymusic.mymusicapp.model.SongDetails.class, "title = ? or artist = ?", text, text); } return values; } 
public static int getUnScheuledHours(Office offices) { int hoursNotScheduled = 0; for (int i = 1; i < 37; i++) { for (int j = 0; j < 7; j++) { if ((offices.officeReq.get(i).get(j)) >= 0) { <BUGS> hoursNotScheduled += (offices.officeReq.get(i).get(j)) / 2; <BUGE> } } } <BUGS> return hoursNotScheduled; <BUGE> } 
@java.lang.Override public void onCreate(@android.support.annotation.Nullable android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); <BUGS> if ((savedInstanceState != null) && (!(defaults))) { <BUGE> if (savedInstanceState.getBoolean(rs.ftn.pma.tourismobile.fragments.BOTTOM_BAR_SHOWING)) { bottomBar.show(); }else { bottomBar.hide(); } firstTimeLoading = savedInstanceState.getBoolean(rs.ftn.pma.tourismobile.fragments.FIRST_TIME_LOADING); } } 
private void handleDeletePlaylistEvent(android.net.Uri pUri) { com.dreamdigitizers.megamelodies.views.interfaces.IViewPlaylists view = this.getView(); if (view != null) { <BUGS> int playlistId = java.lang.Integer.parseInt(pUri.getQueryParameter("playlistId")); <BUGE> java.util.HashMap transactions = this.mTransactionActions.get(ServicePlayback.CUSTOM_ACTION__DELETE_PLAYLIST); <BUGS> android.support.v4.media.MediaBrowserCompat.MediaItem mediaItem = ((android.support.v4.media.MediaBrowserCompat.MediaItem) (transactions.get(playlistId))); transactions.remove(playlistId); <BUGE> view.removeMediaItem(mediaItem); } } 
@java.lang.Override public void onBackPressed() { <BUGS> int count = getFragmentManager().getBackStackEntryCount(); <BUGE> int currentView = viewStack.pop(); if (count == 0) { super.onBackPressed(); }else { getFragmentManager().popBackStack(); } java.lang.String title = fragmentMap.get(currentView).getTitleString(); setTitle(title); } 
public java.lang.String removeInitialFinalWhites(java.lang.String text) { java.lang.String textWOWhites = text; while ((textWOWhites.startsWith(" ")) || (textWOWhites.startsWith("\t"))) textWOWhites = textWOWhites.substring(1);  <BUGS> while ((textWOWhites.endsWith(" ")) || (textWOWhites.startsWith("\t"))) <BUGE> textWOWhites = textWOWhites.substring(0, ((textWOWhites.length()) - 1));  return textWOWhites; } 
@javax.ws.rs.Path(value = "/{idAnnotatedCollaborativeContentAnalysis:.*}") @javax.ws.rs.GET public java.util.Collection<eu.learnpad.ca.rest.data.collaborative.AnnotatedCollaborativeContentAnalysis> getCollaborativeContentVerifications(@javax.ws.rs.PathParam(value = "idAnnotatedCollaborativeContentAnalysis") java.lang.String contentID) throws eu.learnpad.exception.LpRestException { if (eu.learnpad.ca.rest.impl.ColloborativeContentVerificationsImpl.map.containsKey(java.lang.Integer.valueOf(contentID))) { <BUGS> eu.learnpad.ca.rest.data.collaborative.CollaborativeContentAnalysis caa = eu.learnpad.ca.rest.impl.ColloborativeContentVerificationsImpl.map.get(contentID); <BUGE> eu.learnpad.ca.correctness.CorrectnessAnalysis corrana = new eu.learnpad.ca.correctness.CorrectnessAnalysis(new org.languagetool.language.BritishEnglish()); eu.learnpad.ca.rest.data.collaborative.AnnotatedCollaborativeContentAnalysis acca = corrana.check(caa); java.util.ArrayList<eu.learnpad.ca.rest.data.collaborative.AnnotatedCollaborativeContentAnalysis> ar = new java.util.ArrayList<eu.learnpad.ca.rest.data.collaborative.AnnotatedCollaborativeContentAnalysis>(); ar.add(acca); return ar; }else return null;  } 
public void run() throws java.lang.Exception { <BUGS> synchronized(this.state) { com.google.common.base.Preconditions.checkState(((this.state) == (State.INITED)), ("Can only run while in INITED state. Current: " + (this.state))); this.state = State.RUNNING; } <BUGE> processor.run(runInputMap, runOutputMap); } 
public static void onEntityUpdate(com.mumfrey.liteloader.transformers.event.EventInfo<net.minecraft.entity.player.EntityPlayer> e) { net.minecraft.entity.player.EntityPlayer ep = e.getSource(); <BUGS> if ((((ep instanceof net.minecraft.entity.player.EntityPlayerMP) && (ep.capabilities.isCreativeMode)) && (me.dags.daflight.DaFlight.get().DFController.noClipOn)) && (me.dags.daflight.DaFlight.get().DFController.flyModOn)) { <BUGE> ep.noClip = true; } } 
@java.lang.Override public void onUpgrade(android.database.sqlite.SQLiteDatabase db, int oldVersion, int newVersion) { db.execSQL(("DROP TABLE IF EXISTS " + (MoviesContract.MoviesEntry.TABLE_NAME))); db.execSQL(("DROP TABLE IF EXISTS " + (MoviesContract.VideoEntry.TABLE_NAME))); db.execSQL(("DROP TABLE IF EXISTS " + (MoviesContract.ReviewEntry.TABLE_NAME))); <BUGS> db.execSQL(("DROP TABLE IF EXISTS " + (MoviesContract.FavoriteEntry.TABLE_NAME))); <BUGE> } 
public int getCaptionHeight() { int textWidth = mTextView.getWidth(); <BUGS> int widthMeasureSpec = View.MeasureSpec.makeMeasureSpec(android.content.res.Resources.getSystem().getDisplayMetrics().widthPixels, View.MeasureSpec.EXACTLY); <BUGE> int heightMeasureSpec = View.MeasureSpec.makeMeasureSpec(0, View.MeasureSpec.UNSPECIFIED); if (textWidth < 1) { return 0; } mTextView.measure(widthMeasureSpec, heightMeasureSpec); return mTextView.getMeasuredHeight(); } 
@org.junit.Test public void TestContentType() { com.upokecenter.test.Message msg = new com.upokecenter.test.Message().SetTextBody("text"); msg.setContentType(com.upokecenter.test.MediaType.Parse("text/html")); try { msg.setContentType(null); org.junit.Assert.fail("Should have failed"); } catch (java.lang.NullPointerException ex) { <BUGS> new java.lang.Object(); <BUGE> } catch (java.lang.Exception ex) { org.junit.Assert.fail(ex.toString()); throw new java.lang.IllegalStateException("", ex); } } 
public static boolean loginUser(java.lang.String userName, java.lang.String password, javafx.scene.text.Text attemptsLeft) { sample.Models.LoginUser.checkTries(attemptsLeft, userName); try { <BUGS> return ((((sample.Models.LoginUser.checkFile()) && (sample.Models.LoginUser.checkUserName(userName))) && (sample.Models.LoginUser.checkPassWord(password, userName))) && ((sample.Models.LoginUser.counter) < 3)) && (sample.Models.LoginUser.check); <BUGE> } catch (java.io.IOException e) { java.lang.System.out.println("Error while logging in user"); return false; } } 
public Util.complex pow(int n) { <BUGS> double rn = (java.lang.Math.pow(getAbs(), n)) * (java.lang.Math.cos(getAngle())); double in = (java.lang.Math.pow(getAbs(), n)) * (java.lang.Math.sin(getAngle())); <BUGE> setR(rn); setI(in); return this; } 
public boolean storeCredentials(java.lang.String appName, java.lang.String hashedUser, java.lang.String hashedPassword) { <BUGS> try { com.jeszka.domain.AppCredentials appCredentials = new com.jeszka.domain.AppCredentials.Builder().appName(appName).username(hashedUser).password(hashedPassword).enabled(true).build(); final int result = posterDao.saveAppCredentials(appCredentials); java.lang.System.out.println(("Storing credentials result: " + result)); return true; } catch (org.springframework.dao.DuplicateKeyException e) { java.lang.System.out.println(("Storing credentials not successful " + (e.getMessage()))); return false; } <BUGE> } 
@java.lang.Override public boolean equals(java.lang.Object o) { if ((this) == o) return true;  <BUGS> if ((o == null) || ((getClass()) != (o.getClass()))) <BUGE> return false;  me.newyith.fortress.util.BaseUUID that = ((me.newyith.fortress.util.BaseUUID) (o)); return !((model.uuid) != null ? !(model.uuid.equals(that.getUuid())) : (that.getUuid()) != null); } 
private int calcHeigth() { int aY = a.getBlockY(); int bY = b.getBlockY(); int y = 0; <BUGS> if (aY > bY) { <BUGE> y = bY - aY; }else { y = aY - bY; } return y; } 
@org.junit.Test public void testParsingConfigXmlForSettingModulePackageAndId() throws java.lang.Exception { org.openmrs.addonindex.scheduled.FetchDetailsToIndex task = new org.openmrs.addonindex.scheduled.FetchDetailsToIndex(null, null); org.openmrs.addonindex.domain.AddOnVersion version = new org.openmrs.addonindex.domain.AddOnVersion(); <BUGS> org.openmrs.addonindex.domain.AddOnInfoAndVersions addOnInfoAndVersions = new org.openmrs.addonindex.domain.AddOnInfoAndVersions(); task.handleConfigXml(org.openmrs.addonindex.TestUtil.getFileAsString("config.withRelativePathDtd.xml"), version, addOnInfoAndVersions, false); org.junit.Assert.assertThat(addOnInfoAndVersions.getModulePackage(), org.hamcrest.core.Is.is("org.openmrs.module.mdrtb")); org.junit.Assert.assertThat(addOnInfoAndVersions.getModuleId(), org.hamcrest.core.Is.is("mdrtb")); <BUGE> } 
<BUGS> public void cancelNotification(int notificationId) { <BUGE> if ((android.content.Context.NOTIFICATION_SERVICE) != null) { java.lang.String ns = android.content.Context.NOTIFICATION_SERVICE; <BUGS> android.app.NotificationManager nMgr = ((android.app.NotificationManager) (getApplicationContext().getSystemService(ns))); <BUGE> nMgr.cancel(notificationId); } } 
public static void phaseThree(UndirectedGraph<java.lang.Integer, java.lang.Integer> graph, java.util.List<Graph.Vertex<java.lang.Integer>> lowDegreeVertices) { for (Graph.Vertex<java.lang.Integer> v : lowDegreeVertices) { graph.removeVertex(graph.getVertexWithElement(v.getElement())); } <BUGS> long stoptime = java.lang.System.currentTimeMillis(); <BUGE> } 
private void deleteGoogleEvent(java.lang.String googleId) throws java.io.IOException { w094j.ctrl8.database.GoogleStorage.logger.info(("Deleting Google Event: " + googleId)); <BUGS> w094j.ctrl8.database.GoogleStorage.logger.info(("Deleting dataStoreEvent: " + googleId)); <BUGE> w094j.ctrl8.database.GoogleStorage.dataStoreEvent.delete(googleId); try { this.clientCalendar.events().delete(this.googleCalendar.getId(), googleId).execute(); } catch (java.io.IOException e) { w094j.ctrl8.database.GoogleStorage.logger.info(("Fail to delete Google Event: " + googleId)); } } 
public boolean inLabels(java.util.HashSet<java.lang.String> hashSet) { if (hashSet != null) { if (hashSet.isEmpty()) return true;  for (java.lang.String str : hashSet) { <BUGS> if (this.label.equalsIgnoreCase(str)) <BUGE> return true;  } return false; }else { return true; } } 
public io.lambdacloud.util.ObjectArray set(int ms, int me, int[] aryn, io.lambdacloud.util.ObjectArray ary) { <BUGS> int row = me - ms; <BUGE> int col = aryn.length; for (int i = 0; i < row; i++) for (int j = 0; j < col; j++) { data[(ms + i)][aryn[j]] = ary.data[i][j]; }  return this; } 
@java.lang.Override protected void onPostExecute(java.lang.String status) { java.lang.String imagePath = ((localstoragehandler.fileCacheFolder) + "/") + (filename); if (status.equals("OK")) { if (type.equals(MessageInfo.MessageType.IMAGE)) { <BUGS> android.widget.ImageView imageView = new android.widget.ImageView(context); <BUGE> at.vcity.androidim.tools.BitmapLoaderTask task = new at.vcity.androidim.tools.BitmapLoaderTask(imageView); task.execute(imagePath); imageView.setLayoutParams(params); <BUGS> messageHistoryLayout.addView(imageView); <BUGE> } }else { } } 
private void showAds() { mAdView = ((com.google.android.gms.ads.AdView) (rootView.findViewById(R.id.update_information_banner_field))); <BUGS> java.lang.String adsTestId = "7CFCF353FBC40363065F03DFAC7D7EE4"; com.google.android.gms.ads.AdRequest adRequest = new com.google.android.gms.ads.AdRequest.Builder().addTestDevice(adsTestId).addKeyword("smartphone").addKeyword("tablet").addKeyword("news apps").addKeyword("games").build(); mAdView.loadAd(adRequest); <BUGE> } 
private mil.nga.giat.mage.sdk.datastore.user.Permissions parsePermissions(com.fasterxml.jackson.core.JsonParser parser) throws java.io.IOException { if ((parser.getCurrentToken()) != (com.fasterxml.jackson.core.JsonToken.START_ARRAY)) return null;  java.util.Collection<mil.nga.giat.mage.sdk.datastore.user.Permission> permissions = new java.util.ArrayList<>(); while ((parser.nextToken()) != (com.fasterxml.jackson.core.JsonToken.END_ARRAY)) { <BUGS> parser.nextToken(); <BUGE> java.lang.String permission = parser.getText().toUpperCase(java.util.Locale.US); permissions.add(mil.nga.giat.mage.sdk.datastore.user.Permission.valueOf(permission)); } return new mil.nga.giat.mage.sdk.datastore.user.Permissions(permissions); } 
private static void fillMissingValues() { for (int i = 0; i < (DatasetCleanup.groupSize); i++) { for (int j = 0; j < (DatasetCleanup.labels.length); j++) { <BUGS> if ((DatasetCleanup.featureSpace[i][j].equals("")) || (DatasetCleanup.featureSpace[i][j].equals("null"))) <BUGE> DatasetCleanup.featureSpace[i][j] = java.lang.String.valueOf((-1));  } } } 
public void createBye() { try { <BUGS> javax.sip.message.Request byeRequest = this.getDialog().createRequest(Request.BYE); java.lang.System.out.println(("CREATE BYE REQUEST ->" + byeRequest)); sipConnector.sendRequest(byeRequest, this); <BUGE> } catch (javax.sip.SipException ex) { com.dialogic.msmltool.Call.logger.log(java.util.logging.Level.SEVERE, ex.getMessage(), ex); } } 
public com.digitalpebble.storm.crawler.Metadata getMetaForOutlink(java.lang.String sourceURL, com.digitalpebble.storm.crawler.Metadata parentMD) { com.digitalpebble.storm.crawler.Metadata md = filter(parentMD); if (trackPath) { md.addValue(com.digitalpebble.storm.crawler.util.MetadataTransfer.urlPathKeyName, sourceURL); } if (trackDepth) { java.lang.String existingDepth = md.getFirstValue(com.digitalpebble.storm.crawler.util.MetadataTransfer.depthKeyName); int depth = 0; try { depth = java.lang.Integer.parseInt(existingDepth); } catch (java.lang.Exception e) { depth = 0; } <BUGS> md.setValue(com.digitalpebble.storm.crawler.util.MetadataTransfer.depthKeyName, java.lang.Integer.toString((depth++))); <BUGE> } return md; } 
public org.json.simple.JSONObject asJSON() { org.json.simple.JSONObject obj = new org.json.simple.JSONObject(); obj.put("username", username); obj.put("password", password); obj.put("firstName", firstName); obj.put("lastName", lastName); obj.put("emailAddress", emailAddress); <BUGS> obj.put("lastLogin", lastLogin); <BUGE> obj.put("type", "cheapSubscription"); return obj; } 
@org.junit.Test public void testCollectionAsBasic() { org.hibernate.boot.registry.StandardServiceRegistry ssr = new org.hibernate.boot.registry.StandardServiceRegistryBuilder().build(); try { <BUGS> org.hibernate.boot.Metadata metadata = new org.hibernate.boot.MetadataSources().addAnnotatedClass(org.hibernate.test.annotations.basic.CollectionAsBasicTest.Post.class).getMetadataBuilder().applyBasicType(new org.hibernate.test.annotations.basic.CollectionAsBasicTest.DelimitedStringsType()).build(); <BUGE> org.hibernate.mapping.PersistentClass postBinding = metadata.getEntityBinding(org.hibernate.test.annotations.basic.CollectionAsBasicTest.Post.class.getName()); org.hibernate.mapping.Property tagsAttribute = postBinding.getProperty("tags"); } finally { org.hibernate.boot.registry.StandardServiceRegistryBuilder.destroy(ssr); } } 
private static void testServerChannelFactory(org.osgi.framework.BundleContext bundleContext) { org.osgi.framework.ServiceReference<com.wincom.dcim.agentd.NetworkService> serviceRef = bundleContext.getServiceReference(com.wincom.dcim.agentd.NetworkService.class); com.wincom.dcim.agentd.NetworkService service = bundleContext.getService(serviceRef); java.lang.System.out.println(serviceRef); java.lang.System.out.println(service); com.wincom.dcim.agentd.internal.AgentdServiceActivator.createAcceptor(service); <BUGS> for (int i = 0; i < 10000; ++i) { <BUGE> com.wincom.dcim.agentd.internal.AgentdServiceActivator.createConnection(service); } } 
@org.testng.annotations.BeforeClass public void beforeSuite() throws java.lang.InterruptedException { org.molgenis.data.rest.client.MolgenisClient molgenisClient = org.molgenis.selenium.util.RestApiV1Util.createMolgenisClientApiV1(baseURL, org.molgenis.selenium.test.AnnotatorTest.LOG); this.driver = DriverType.FIREFOX.getDriver(); this.model = new org.molgenis.selenium.model.AnnotatorModel(driver, molgenisClient, org.molgenis.selenium.util.RestApiV1Util.loginRestApiV1(molgenisClient, uid, pwd, org.molgenis.selenium.test.AnnotatorTest.LOG)); <BUGS> org.molgenis.selenium.util.SignUtil.signIn(this.driver, baseURL, uid, pwd, org.molgenis.selenium.test.AnnotatorTest.LOG); <BUGE> } 
public biomorphHandling.Biomorph evolveClo(biomorphHandling.Biomorph father, biomorphHandling.Biomorph mother) { biomorphHandling.Evolver ec = new biomorphHandling.Evolver(father, mother, perfectValues); biomorphHandling.Biomorph biomorph = ec.evolve(); statisticMachine.saveGeneValues(ec.getChildGenes()); statisticMachine.printRunningStats(); <BUGS> biomorphCollection.addFirst(biomorph); createAndAdd(); <BUGE> return biomorph; } 
@java.lang.Override public void channelInactive(org.eclipse.moquette.server.netty.ChannelHandlerContext ctx) throws java.lang.Exception { <BUGS> org.eclipse.moquette.server.netty.NettyMQTTHandler.LOG.debug("channelInactive"); <BUGE> super.channelInactive(ctx); org.eclipse.moquette.server.netty.NettyChannel channel = m_channelMapper.get(getKey(ctx.channel())); if (null == channel) { ctx.close(); return ; } remove(ctx.channel()); release(channel); ctx.close(); } 
@java.lang.Override public void onUpdate(com.wylder.shuttlewidget.ScheduleConstraint[] newConstraints) { constraints = newConstraints; if ((newConstraints.length) == 0) { flagEmptyList = true; constraints = new com.wylder.shuttlewidget.ScheduleConstraint[]{ null }; <BUGS> <BUGE> } com.wylder.shuttlewidget.ConstraintListAdapter adapter = new com.wylder.shuttlewidget.ConstraintListAdapter(getActivity(), constraints); setListAdapter(adapter); } 
@java.lang.Override public void onCompletion(android.media.MediaPlayer mp) { int temp = ((sharedPreferences.getInt(Constants.CURRENT_PLAYING_VIDEO_NUMBER, (-1))) + 1) % (videoList.size()); vvVideo.setVideoURI(videoList.get(temp)); <BUGS> com.example.saksham.overlayscreenshort.PlaylistAdapter.changeActiveItemBackground(sharedPreferences.getInt(Constants.CURRENT_PLAYING_VIDEO_NUMBER, (-1)), temp); <BUGE> editor.putInt(Constants.CURRENT_PLAYING_VIDEO_NUMBER, temp); editor.commit(); vvVideo.start(); } 
<BUGS> private static float getScaleFactor() { <BUGE> android.util.DisplayMetrics metrics = new android.util.DisplayMetrics(); io.gloop.drawed.utils.ScreenUtil.activity.getWindowManager().getDefaultDisplay().getMetrics(metrics); float factor1 = (metrics.heightPixels) / 1920.0F; float factor2 = (metrics.widthPixels) / 1080.0F; if (factor1 >= factor2) return factor1; else return factor2;  } 
@java.lang.Override public com.navercorp.pinpoint.web.vo.AgentInfo getAgentInfo(final java.lang.String agentId, final long timestamp) { if (agentId == null) { throw new java.lang.NullPointerException("agentId must not be null"); } com.navercorp.pinpoint.web.dao.hbase.Scan scan = createScan(agentId, timestamp); <BUGS> com.navercorp.pinpoint.web.vo.AgentInfo agentInfo = this.hbaseOperations2.find(HBaseTables.AGENTINFO, scan, new com.navercorp.pinpoint.web.dao.hbase.HbaseAgentInfoDao.AgentInfoResultsExtractor()); if (agentInfo != null) { this.agentLifeCycleDao.populateAgentStatus(agentInfo, timestamp); } return agentInfo; <BUGE> } 
@java.lang.Override protected void onDestroy() { if ((mCore) != null) { mCore.pauseSensors(); mCore.shutdown(this); } <BUGS> com.ilm.sandwich.OsmMap.listHandler.removeCallbacksAndMessages(null); <BUGE> com.ilm.sandwich.tools.Statistics mStatistics = new com.ilm.sandwich.tools.Statistics(); mStatistics.check(this); super.onDestroy(); } 
<BUGS> private org.projectbuendia.client.ui.SnackBar.Message getMessage(@android.support.annotation.StringRes <BUGE> int message) { org.projectbuendia.client.ui.SnackBar.Message theMessage = null; for (java.util.Map.Entry<org.projectbuendia.client.ui.SnackBar.MessageKey, org.projectbuendia.client.ui.SnackBar.Message> entry : org.projectbuendia.client.ui.SnackBar.mMessagesList.entrySet()) { org.projectbuendia.client.ui.SnackBar.Message value = entry.getValue(); if ((value.message) == message) { theMessage = value; } } return theMessage; } 
@org.junit.Test public void testTrajectoryBoundsZVelocity() { java.util.List<java.lang.Double> l = com.google.common.collect.Lists.newArrayList(); for (int i = 0; i < ((trajectory.getTrajectoryDuration()) * 10); i++) { l.add(getVelocityZ(trajectory, (i / 10.0))); } <BUGS> java.lang.System.out.println(l); <BUGE> assertBounds(l, speed, speed); } 
public void removeMachine(de.prob2.ui.project.Machine machine) { java.util.List<de.prob2.ui.project.Machine> machinesList = this.getMachines(); machinesList.remove(machine); <BUGS> this.set(new de.prob2.ui.project.Project(this.getName(), this.getDescription(), machinesList, this.getPreferences(), this.getRunconfigurations(), this.getLocation())); <BUGE> } 
@java.lang.Override public void onLocalVideoTrackReceive(com.quickblox.videochat.webrtc.QBRTCSession session, com.quickblox.videochat.webrtc.view.QBRTCVideoTrack videoTrack) { <BUGS> this.localVideoTrack = videoTrack; <BUGE> localVideoVidew = ((com.quickblox.videochat.webrtc.view.QBGLVideoView) (findViewById(R.id.localVideoVidew))); android.util.Log.d("Track", ("localVideoVidew is " + (localVideoVidew))); if ((localVideoVidew) != null) { videoTrack.addRenderer(new org.webrtc.VideoRenderer(new com.quickblox.videochat.webrtc.view.VideoCallBacks(localVideoVidew, QBGLVideoView.Endpoint.LOCAL))); localVideoVidew.setVideoTrack(videoTrack, QBGLVideoView.Endpoint.LOCAL); android.util.Log.d("Track", "onLocalVideoTrackReceive() is raned"); } } 
public boolean addUser() { <BUGS> if ((pwField.getText()) == (pwConfirmField.getText())) { <BUGE> animalkeeping.technicalAdministration.DatabaseUser newUser = new animalkeeping.technicalAdministration.DatabaseUser(usernameField.getText(), pwField.getText(), userClassComboBox.getValue()); return true; }else { java.lang.System.out.println("Passwords do not match!"); return false; } } 
public void addEntry(com.example.lenni.blackjack_ptm.LeaderboardEntry entry) { android.database.sqlite.SQLiteDatabase db = this.getWritableDatabase(); android.content.ContentValues values = new android.content.ContentValues(); values.put(com.example.lenni.blackjack_ptm.LeaderBoardDbHelper.COLUMN_PLAYER, entry.getPlayerName()); values.put(com.example.lenni.blackjack_ptm.LeaderBoardDbHelper.COLUMN_SCORE, entry.getScore()); <BUGS> db.insert(com.example.lenni.blackjack_ptm.LeaderBoardDbHelper.TABLE_LEADERBOARD, null, values); <BUGE> db.close(); } 
public void die() { data.incrementObservableValue(observableDataKey, 1); this.getPosition().x = respawnPosition.x; this.getPosition().y = respawnPosition.y; <BUGS> nidhogglike.entities.Sword sword = ((nidhogglike.game.NidhoggUniverse) (data.getUniverse())).getFreeSword(); if (sword != null) setSword(sword);  <BUGE> } 
void addAmountTodo(int amt, todolist.TodoList list) { todolist.Todo head = new todolist.Todo("Task 1"); list.addTodo(head); int numAdded = 1; while (numAdded != amt) { <BUGS> <BUGE> todolist.Todo newTodo = new todolist.Todo(("Task " + (java.lang.Integer.toString(numAdded)))); list.addTodo(newTodo); <BUGS> numAdded++; <BUGE> } } 
<BUGS> <BUGE> @com.oracle.truffle.api.dsl.Specialization public org.jruby.truffle.nodes.core.RubyString encode(org.jruby.truffle.nodes.core.RubyString string, org.jruby.truffle.nodes.core.RubyString encoding, @java.lang.SuppressWarnings(value = "unused") org.jruby.truffle.runtime.UndefinedPlaceholder options) { <BUGS> notDesignedForCompilation(); <BUGE> final org.jruby.truffle.nodes.core.org.jruby.RubyString jrubyString = getContext().toJRuby(string); final org.jruby.truffle.nodes.core.org.jruby.RubyString jrubyEncodingString = getContext().toJRuby(encoding); final org.jruby.truffle.nodes.core.org.jruby.RubyString jrubyTranscoded = ((org.jruby.truffle.nodes.core.org.jruby.RubyString) (jrubyString.encode(getContext().getRuntime().getCurrentContext(), jrubyEncodingString))); return getContext().toTruffle(jrubyTranscoded); } 
@com.google.gwt.uibinder.client.UiHandler(value = "versionSelect") protected void onVersionChange(com.google.gwt.event.dom.client.ChangeEvent e) { <BUGS> java.lang.System.out.println("versoin change"); <BUGE> java.lang.String version = versionSelect.getSelectedValue(); for (com.siemens.plm.hackathon.haystatck.shared.VersionDTO v : this.versions) { if (v.getName().equals(version)) { populateBaselines(v.getBaselines()); break; } } getRepositories(this.getCurrentProduct(), version); } 
private static int getResIdByStatus(com.ogp.hotspotincar.WatchdogService.ActuatorState actuatorState) { if ((com.ogp.hotspotincar.WatchdogService.ActuatorState.UNCHANGED) == actuatorState) { actuatorState = com.ogp.hotspotincar.HotspotWidget.storedState; }else { com.ogp.hotspotincar.HotspotWidget.storedState = actuatorState; } switch (actuatorState) { <BUGS> <BUGE> case NOT_ACTUATED : return R.drawable.disconnected; <BUGS> case ACTUATED : return R.drawable.connected; <BUGE> default : return R.drawable.disabled; } } 
public static java.util.Calendar toCalendar(int day, int month, int year) { java.util.Calendar cal = java.util.Calendar.getInstance(); cal.set(java.util.Calendar.YEAR, year); <BUGS> cal.set(java.util.Calendar.MONTH, (month - 1)); <BUGE> cal.set(java.util.Calendar.DAY_OF_MONTH, day); cal.getTime(); return cal; } 
public void start(java.lang.String myBaseId, java.lang.String enemyBaseId, java.util.Set<java.lang.String> enemyIds) { this.myBaseId = myBaseId; this.enemyBaseId = enemyBaseId; this.enemyIds = enemyIds; <BUGS> android.util.Log.d("Start game", ((((myBaseId + ":") + enemyBaseId) + ":") + enemyIds)); <BUGE> } 
public int paga_reale_mazziere() { <BUGS> fiches = (fiches) - (puntata); <BUGE> if ((fiches) < 0) { perso = true; int buf = fiches; fiches = 0; return (puntata) + (buf + (puntata)); } return (puntata) * 2; } 
@java.lang.Override public java.lang.Byte next() { try { if (this.hasNext()) { <BUGS> return new java.lang.Byte(((byte) (bufferedInputStream.read()))); <BUGE> }else { throw new java.util.NoSuchElementException("No more data left in the file"); } } catch (java.io.IOException e) { <BUGS> com.google.common.base.Throwables.propagate(e); return null; <BUGE> } } 
@java.lang.Override public ua.com.jobsukraine.entity.Candidate findByLogin(java.lang.String login) { ua.com.jobsukraine.entity.Candidate c = null; try { c = candidateRepository.findByInfo(loginInfoRepository.findByLogin(login)); <BUGS> if ((candidateRepository.getFeedbacks(c.getId())) != null) <BUGE> c.setRating(candidateRepository.getGlobalRating(c.getId()));  } catch (org.springframework.dao.EmptyResultDataAccessException e) { } return c; } 
public java.lang.String getVoteSiteName(java.lang.String url) { java.util.ArrayList<java.lang.String> sites = com.Ben12345rocks.VotingPlugin.Config.ConfigVoteSites.getInstance().getVoteSitesNames(); <BUGS> for (java.lang.String siteName : sites) { java.lang.String URL = com.Ben12345rocks.VotingPlugin.Config.ConfigVoteSites.getInstance().getServiceSite(siteName); if (URL.equals(url)) { return siteName; <BUGE> } } return url; } 
public void enable(java.lang.String name, java.lang.String artifact) throws java.io.IOException { org.apache.zeppelin.helium.HeliumPackageSearchResult pkgInfo = getPackageInfo(name, artifact); if (pkgInfo == null) { return ; } if (org.apache.zeppelin.helium.HeliumPackage.isBundleType(pkgInfo.getPkg().getType())) { <BUGS> bundleFactory.buildPackage(pkgInfo.getPkg(), true); <BUGE> } heliumConf.enablePackage(name, artifact); save(); } 
public void runAlgorithm(double minSup, double minConf, org.knime.sequence.ruleGrowth.spmf.SequenceDatabase database) throws java.io.IOException { this.database = database; <BUGS> <BUGE> this.minsuppRelative = ((int) (java.lang.Math.ceil((minSup * (database.size()))))); runAlgorithm("NO NEED", null, minsuppRelative, minConfidence); } 
@java.lang.Override public void onDateSet(android.widget.DatePicker datePicker, int year, int month, int day) { <BUGS> dateList.add((((((day + "/") + (month < 10 ? '0' : "")) + month) + "/") + year)); <BUGE> showDialog(888); } 
public void start() { java.util.ArrayList<View> views = readFile("unge-lovende.csv"); <BUGS> java.util.ArrayList<View> views = readFile("forTesting.csv"); a8e255251b2389db42f3ac80ba6f89fd22ca[] HashMap; viewData = findKeyData(views); <BUGE> Analyse.printMap(viewData[0]); Analyse.printMap(viewData[1]); Analyse.printDayMap(viewData[2]); Analyse.printMap(viewData[3]); } 
public java.lang.Boolean draw(dk.eax.Field field) { if ((field.getToken()) == null) { <BUGS> <BUGE> int y = field.getCoordinate_y(); int x = field.getCoordinate_x(); dk.eax.graphics.Ellipse ellipsis = new dk.eax.graphics.Ellipse(x, y, 200, 200); ellipsis.draw(); field.setToken(this); return true; } return false; } 
@java.lang.Override public boolean onNavigationItemSelected(@android.support.annotation.NonNull android.view.MenuItem item) { switch (item.getItemId()) { case R.id.nav_search : mDrawerLayout.closeDrawers(); return true; case R.id.nav_saved_search_results : mDrawerLayout.closeDrawers(); android.content.Intent savedResultsIntent = new android.content.Intent(this, com.example.android.vigi.SavedSearchResultsActivity.class); startActivity(savedResultsIntent); return true; <BUGS> case R.id.nav_settings : mDrawerLayout.closeDrawers(); android.content.Intent settingsIntent = new android.content.Intent(this, com.example.android.vigi.SettingsActivity.class); startActivity(settingsIntent); return true; <BUGE> default : return false; } } 
public void paint(java.awt.Graphics g) { g.setColor(java.awt.Color.BLACK); <BUGS> g.fillOval(((x) + ((range) / 2)), ((y) + ((range) / 2)), radius, radius); g.drawOval(x, y, range, range); <BUGE> } 
@org.springframework.security.access.prepost.PreAuthorize(value = "@workLogSecurityService.hasPermissionToEditWorkLog(#workLogId)") @com.softserverinc.edu.controllers.GetMapping(value = "issue/{issueId}/worklog/{workLogId}/edit") public java.lang.String issueByIdEditWorklog(@com.softserverinc.edu.controllers.PathVariable java.lang.Long issueId, @com.softserverinc.edu.controllers.PathVariable java.lang.Long workLogId, org.springframework.ui.ModelMap model, @org.springframework.beans.factory.annotation.Qualifier(value = "worklog") @org.springframework.data.web.PageableDefault(value = com.softserverinc.edu.constants.PageConstant.AMOUNT_PROJECT_ELEMENTS) org.springframework.data.domain.Pageable workLogPageable) { <BUGS> com.softserverinc.edu.entities.Issue issue = issueService.findById(issueId); model.addAttribute("issue", issue); <BUGE> model.addAttribute("issueCommentsList", issueCommentService.findByIssueId(issueId)); model.addAttribute("newIssueComment", getNewIssueComment(issueId)); workLogService.forEditWorkLogModel(model, workLogId, issueId, workLogPageable); return "issue_view"; } 
<BUGS> public com.xrtb.common.Campaign getCampaign(java.lang.String id) { map = ((java.util.concurrent.ConcurrentMap) (com.xrtb.common.Configuration.getInstance().redisson.getMap("users-database"))); java.util.Set set = map.keySet(); java.util.Iterator<java.lang.String> it = set.iterator(); while (it.hasNext()) { com.xrtb.db.User u = map.get(it.next()); for (com.xrtb.common.Campaign c : u.campaigns) { if (c.adId.equals(id)) return c;  } } <BUGE> return null; } 
private void onClientHandle(com.impetus.kundera.persistence.handler.impl.EntitySaveGraph objectGraph, java.lang.Object childEntity) throws java.lang.Exception { if (childEntity instanceof java.util.Collection<?>) { java.util.Collection<?> childCol = ((java.util.Collection<?>) (childEntity)); for (java.lang.Object ch : childCol) { <BUGS> onClientDelete(ch, objectGraph); <BUGE> } }else { <BUGS> onClientDelete(childEntity, objectGraph); <BUGE> } } 
@java.lang.Override public void writePortable(com.hazelcast.nio.serialization.PortableWriter writer) throws java.io.IOException { java.util.List<java.lang.String> nullChecker = com.google.common.collect.Lists.newArrayList(); if ((topicFilter) != null) { writer.writeUTF("topicFilter", topicFilter); <BUGS> nullChecker.add("topicName"); <BUGE> } if ((qos) != null) { writer.writeInt("qos", qos.value()); nullChecker.add("qos"); } writer.writeUTFArray("nullChecker", nullChecker.toArray(new java.lang.String[0])); } 
private void reloadCoategories() { <BUGS> java.lang.System.out.println("start Runnable..."); <BUGE> threadPool.execute(new gui.RunnableParameter<java.lang.Integer>(trvCategory.getSelectionModel().getSelectedItem().getValue().getId()) { @java.lang.Override public void run() { superController.setSelectedCategory(parameter, true); } }); <BUGS> java.lang.System.out.println("Runnable started."); <BUGE> } 
@java.lang.Override public boolean onTouchEvent(com.androlua.MotionEvent event) { if ((mOnTouchEvent) != null) { try { java.lang.Object ret = mOnTouchEvent.call(event); <BUGS> if (((ret != null) && ((ret.getClass()) == (java.lang.Boolean.class))) && ((boolean) (ret))) <BUGE> return true;  } catch (com.androlua.LuaException e) { sendMsg(("onTouchEvent " + (e.getMessage()))); } } return super.onTouchEvent(event); } 
@org.springframework.web.bind.annotation.RequestMapping(value = { "" , "/" , "/index" }) public java.lang.String getIndexPage(org.springframework.ui.Model model) { java.util.Optional<guru.springframework.domain.Category> categoryOptional = categoryRepository.findByDescription("American"); java.util.Optional<guru.springframework.domain.UnitOfMeasure> unitOfMeasureOptional = unitOfMeasureRepository.findByDescription("Teaspoon"); java.lang.System.out.println(("Cat Id is: " + (categoryOptional.get().getId()))); java.lang.System.out.println(("UOM ID is: " + (unitOfMeasureOptional.get().getId()))); <BUGS> java.util.List<guru.springframework.domain.Recipe> recipeList = recipeService.getRecipes(); <BUGE> model.addAttribute("recipes", recipeList); return "index"; } 
@java.lang.Override public de.ppi.samples.fuwesta.model.User read(java.lang.Long userId) { final de.ppi.samples.fuwesta.model.User user = userDao.findOne(userId); <BUGS> if (!(org.springframework.util.CollectionUtils.isEmpty(user.getPostings()))) { <BUGE> user.getPostings().size(); } return user; } 
@org.junit.Before public void setUp() throws java.lang.Exception { components = new haw.vs.superteam.gamesservice.Components(); boardsAdapter = mock(haw.vs.superteam.gamesservice.api.BoardsAdapter.class); <BUGS> when(boardsAdapter.createBoard(org.mockito.Matchers.any(haw.vs.superteam.gamesservice.Game.class))).thenReturn(new haw.vs.superteam.gamesservice.Board()); <BUGE> when(boardsAdapter.addPlayer(org.mockito.Matchers.any(haw.vs.superteam.gamesservice.Game.class), org.mockito.Matchers.any(haw.vs.superteam.gamesservice.Player.class))).thenReturn(true); playerAdapter = mock(haw.vs.superteam.gamesservice.api.PlayerAdapter.class); controller = new haw.vs.superteam.gamesservice.GameController("test-uri", playerAdapter, boardsAdapter); } 
@java.lang.Override public boolean shouldTraverse(com.google.javascript.jscomp.NodeTraversal t, com.google.javascript.rhino.Node n, com.google.javascript.rhino.Node parent) { switch (n.getType()) { case com.google.javascript.rhino.Token.YIELD : visitYieldExpression(n); break; case com.google.javascript.rhino.Token.DO : case com.google.javascript.rhino.Token.FOR : case com.google.javascript.rhino.Token.WHILE : visitLoop(n); break; case com.google.javascript.rhino.Token.CASE : if (controlCanExit(n.getFirstChild())) { <BUGS> compiler.report(com.google.javascript.jscomp.JSError.make(currentStatement, Es6ToEs3Converter.CANNOT_CONVERT_YET, "Case statements that contain yields")); <BUGE> return false; } break; } return true; } 
@java.lang.Override <BUGS> public void buttonPressed(java.lang.String buttonName) { <BUGE> java.lang.System.out.println(("qst 2 fini, name = " + buttonName)); if (buttonName.equals("continue")) { game.setScreen(new com.odysseedesmaths.dialogs.SimpleDialog(game, com.odysseedesmaths.Assets.DLG_ARRIVEE_2b, new com.odysseedesmaths.dialogs.EndButtonsListener() { @java.lang.Override public void buttonPressed(java.lang.String buttonName) { game.setScreen(new com.odysseedesmaths.minigames.accrobranche.Accrobranche(game)); } })); }else if (buttonName.equals("restart")) { game.setScreen(game.getModeScene()); }  } 
private void addEntry(int answer) { <BUGS> entries.add(new Entry(allTrials.get(((counter) - 1)), answer, (((inCircleSteps) * 1.0) / (totalTimeSteps)), ((java.lang.System.currentTimeMillis()) - (startTime)), counter, currentGazeDataSet, new Tuple(this.getGCanvas().getLocationOnScreen()), ((inPracticeMode) && ((counter) < 5)))); <BUGE> } 
public void fillListView(java.lang.String title) { db = new yeongdejong.com.assamhouse.DB_Recipes(this); java.util.ArrayList<yeongdejong.com.assamhouse.Recipes> cuisines = db.getSelectedCategory(title); java.lang.String size = java.lang.String.valueOf(cuisines.size()); <BUGS> yeongdejong.com.assamhouse.Toast.makeText(this, cuisines.get(0).getName(), Toast.LENGTH_SHORT).show(); <BUGE> } 
private org.esa.snap.core.datamodel.Band getComplexSrcBand(final org.esa.snap.core.datamodel.Band iBand) { java.lang.String name = iBand.getName(); if (name.startsWith("i_")) { <BUGS> name.replace("i_", "q_"); <BUGE> }else if (name.startsWith("q_")) { <BUGS> name.replace("q_", "i_"); <BUGE> }  return srcProduct.getBand(name); } 
public static java.util.Set<org.talend.hadoop.distribution.DistributionModuleGroup> getModuleGroups() { java.util.Set<org.talend.hadoop.distribution.DistributionModuleGroup> hs = new java.util.HashSet<>(); <BUGS> hs.add(new org.talend.hadoop.distribution.DistributionModuleGroup(HDInsight36Constant.SPARK_HIVE_MRREQUIRED_MODULE_GROUP.getModuleName(), false, org.talend.hadoop.distribution.hdinsight360.modulegroup.HDInsight36HiveOnSparkModuleGroup.condition)); hs.add(new org.talend.hadoop.distribution.DistributionModuleGroup(HDInsight36Constant.SPARK_SQL_MRREQUIRED_MODULE_GROUP.getModuleName(), false, org.talend.hadoop.distribution.hdinsight360.modulegroup.HDInsight36HiveOnSparkModuleGroup.condition)); <BUGE> return hs; } 
public void run() throws java.lang.Exception { prepareClassPathForUploading(); com.hazelcast.simulator.coordinator.Coordinator coordinator = newCoordinator(); try { startMembers(coordinator); startClients(coordinator); <BUGS> com.hazelcast.simulator.coordinator.TestSuite suite = newTestSuite().setWarmupSeconds(options.warmupSeconds).setDurationSeconds(options.durationSeconds).setWorkerQuery(new com.hazelcast.simulator.coordinator.registry.WorkerQuery().setTargetType(TargetType.PREFER_CLIENT)); <BUGE> coordinator.testRun(new com.hazelcast.simulator.coordinator.operations.RcTestRunOperation(suite)); } finally { coordinator.close(); } } 
public void map(org.apache.hadoop.io.Text key, org.apache.hadoop.io.Text value, cloudCompu.PageRankMr.Context context) throws java.io.IOException, java.lang.InterruptedException { java.lang.String[] detial = value.toString().split("&gt;"); java.lang.String[] par = detial[0].split(" "); if ((java.lang.Integer.parseInt(par[2])) == 0) { title.set("Sum"); pr.set(java.lang.Double.parseDouble(par[0])); <BUGS> context.write(title, pr); <BUGE> } } 
@java.lang.Override public void onCreateContextMenu(android.view.ContextMenu menu, android.view.View v, android.view.ContextMenu.ContextMenuInfo menuInfo) { super.onCreateContextMenu(menu, v, menuInfo); <BUGS> menu.clear(); <BUGE> menu.add(0, com.phicdy.mycuration.ui.FilterListFragment.EDIT_FILTER_MENU_ID, 0, R.string.edit_filter); menu.add(0, com.phicdy.mycuration.ui.FilterListFragment.DELETE_FILTER_MENU_ID, 1, R.string.delete_filter); } 
public static int hash(final java.lang.String str) { int hash = -2128831035; final byte[] bytes = str.getBytes(java.nio.charset.StandardCharsets.ISO_8859_1); for (final byte b : bytes) { { <BUGS> int _bitwiseXor = hash ^ b; hash = _bitwiseXor; <BUGE> hash = hash * 16777619; } } return hash; } 
@java.lang.Override public void connectionLost(java.lang.Throwable thrwbl) { java.lang.System.out.println("Connection Lost..."); java.lang.System.out.println(thrwbl.getCause()); <BUGS> <BUGE> java.lang.String m = ((bfh.ch.labdem.main.Subscriber.class.getName()) + "\n") + (thrwbl.getMessage()); LabDemLogger.LOGGER.log(java.util.logging.Level.SEVERE, m); } 
@java.lang.Override public void onCheckedChanged(android.widget.CompoundButton buttonView, boolean isChecked) { if ((com.cyapass.cyapass.MainActivity.currentSiteKey) == null) { return ; } if (isChecked) { com.cyapass.cyapass.MainActivity.currentSiteKey.setMaxLength(java.lang.Integer.parseInt(com.cyapass.cyapass.MainActivity.PlaceholderFragment.maxLengthTabEditText.getText().toString())); }else { <BUGS> com.cyapass.cyapass.MainActivity.currentSiteKey.setMaxLength(64); <BUGE> } if (gv.isLineSegmentComplete()) { android.util.Log.d("MainActivity", "addChars -- Re-generating password..."); gv.GeneratePassword(); } } 
@java.lang.Override public boolean canHandle(org.opentosca.planbuilder.model.tosca.AbstractImplementationArtifact ia, org.opentosca.planbuilder.model.tosca.AbstractNodeType infrastructureNodeType) { javax.xml.namespace.QName type = ia.getArtifactType(); org.opentosca.planbuilder.prephase.plugin.scriptiaonlinux.PrePhasePlugin.LOG.debug((((("Checking if type: " + (type.toString())) + " and infrastructure nodeType: ") + (infrastructureNodeType.getId().toString())) + " can be handled")); <BUGS> return this.isSupportedDeploymentPair(type, infrastructureNodeType.getId()); <BUGE> } 
private void initRecyclerView() { android.support.v7.widget.LinearLayoutManager linearLayoutManager = new android.support.v7.widget.LinearLayoutManager(getActivity()) { @java.lang.Override protected int getExtraLayoutSpace(android.support.v7.widget.RecyclerView.State state) { return 300; } }; mRecyclerView.setLayoutManager(linearLayoutManager); <BUGS> mNewsListAdapter.bindFragment(this); <BUGE> mRecyclerView.setAdapter(mNewsListAdapter); mRecyclerView.setItemAnimator(new com.lixinwei.www.goldennews.newslist.NewsItemAnimator()); } 
public nu.yona.server.analysis.service.UserAnonymizedSynchronizer.Lock lock(java.util.UUID userAnonymizedID) { try { synchronized(lockedUsers) { nu.yona.server.analysis.service.UserAnonymizedSynchronizer.LockStatus lockStatus; while ((lockStatus = getLockStatus(userAnonymizedID)) == (nu.yona.server.analysis.service.UserAnonymizedSynchronizer.LockStatus.LOCKED)) { lockedUsers.wait(); } if (lockStatus == (nu.yona.server.analysis.service.UserAnonymizedSynchronizer.LockStatus.FREE)) { storeLock(userAnonymizedID); } <BUGS> <BUGE> } <BUGS> return new nu.yona.server.analysis.service.UserAnonymizedSynchronizer.Lock(userAnonymizedID); <BUGE> } catch (java.lang.InterruptedException e) { throw nu.yona.server.exceptions.YonaException.unexpected(e); } } 
private boolean handleAlias(org.json.JSONArray args, final org.apache.cordova.CallbackContext cbCtx) { java.lang.String aliasId = args.optString(0, ""); <BUGS> java.lang.String originalId = args.optString(1, null); <BUGE> if (android.text.TextUtils.isEmpty(aliasId)) { this.error(cbCtx, "missing alias id"); return false; } <BUGS> com.alanhmak.cordova.plugin.MixpanelPlugin.mixpanel.alias(aliasId, originalId); <BUGE> cbCtx.success(); return true; } 
public long timestampForPlanetFile(java.lang.String filename) { java.util.regex.Pattern longDatePattern = java.util.regex.Pattern.compile("\\d{8}"); java.util.regex.Pattern shortDatePattern = java.util.regex.Pattern.compile("\\d{6}"); java.util.regex.Matcher dateMatcher = longDatePattern.matcher(filename); if (dateMatcher.matches()) { }else { dateMatcher = longDatePattern.matcher(filename); if (dateMatcher.matches()) { } } <BUGS> <BUGE> } 
void free(final long id) throws java.io.IOException { final net.kotek.jdbm.BlockIo curBlock = file.get(net.kotek.jdbm.Location.getBlock(id)); final short offset = net.kotek.jdbm.Location.getOffset(id); final int size = net.kotek.jdbm.RecordHeader.getAvailableSize(curBlock, offset); if (size > (net.kotek.jdbm.PhysicalRowIdManager.DATA_PER_PAGE)) { } net.kotek.jdbm.RecordHeader.setCurrentSize(curBlock, offset, 0); <BUGS> file.release(net.kotek.jdbm.Location.getBlock(id), true); <BUGE> freeman.put(id, size); } 
@net.minecraftforge.fml.common.Mod.EventHandler public void preInit(net.minecraftforge.fml.common.event.FMLPreInitializationEvent event) { <BUGS> blockTorch = new com.builtbroken.bonetorch.torch.BlockBoneTorch(); net.minecraftforge.fml.common.registry.GameRegistry.register(blockTorch); <BUGE> net.minecraftforge.fml.common.registry.GameRegistry.register(new com.builtbroken.bonetorch.torch.ItemBlockBoneTorch(blockTorch), blockTorch.getRegistryName()); if ((event.getSide()) == (net.minecraftforge.fml.relauncher.Side.CLIENT)) { blockTorch.registerModel(); } } 
public boolean clear() { if ((ArraySize) == 0) { return false; }else { for (int i = ArraySize; i > 0; i--) { this.remove(i); } ArraySize = 0; <BUGS> <BUGE> } } 
public void chooseRightFragment() { avia.androi.innopolis.com.aviasales.models.User user = avia.androi.innopolis.com.aviasales.utils.ShPrefUtils.getUser(); <BUGS> <BUGE> if (user == null) { android.app.Fragment fragment = avia.androi.innopolis.com.aviasales.login.LoginFragment.newInstance(); iView.showFragment(fragment); }else { android.app.Fragment fragment = avia.androi.innopolis.com.aviasales.search.TicketFragment.newInstance(); iView.showFragment(fragment); iView.initializeNavDrawer(); } } 
public int getGID() { int result = -1; try { result = nationbuilder.lib.data.map.xml.XmlHelper.getInt(this.element, "gid"); return result; } catch (java.lang.NumberFormatException ex) { nationbuilder.lib.Logging.Log.writeInfo("gid attribute fetch failed, trying id attribute"); } try { result = nationbuilder.lib.data.map.xml.XmlHelper.getInt(this.element, "id"); <BUGS> result++; <BUGE> return result; } catch (java.lang.NumberFormatException ex) { nationbuilder.lib.Logging.Log.writeError("Parsing of the Tile GID attribute failed"); return result; } } 
public static void main(java.lang.String[] args) { main.java.PlagiarismDetector plagiarismDetector = new main.java.PlagiarismDetector(); main.java.PlagiarismService plagiarismService = new main.java.PlagiarismService(); main.java.InputWrapper inputWrapper = plagiarismDetector.validateInput(args); double plagiarismRatio = plagiarismService.checkPlagiarism(inputWrapper); <BUGS> <BUGE> java.lang.System.out.println("---------------------------------------------------------------------------------------------"); java.lang.System.out.println((("Plagiarism Percentage is " + (plagiarismRatio * 100)) + " %")); java.lang.System.out.println("---------------------------------------------------------------------------------------------"); <BUGS> <BUGE> } 
private void initCamera() { try { <BUGS> final int cameraType = ((captureType) == (com.onfido.android.sdk.capture.ui.CaptureType.FACE)) ? Camera.CameraInfo.CAMERA_FACING_FRONT : Camera.CameraInfo.CAMERA_FACING_BACK; <BUGE> camera = android.hardware.Camera.open(cameraType); } catch (java.lang.Exception e) { view.errorLoadingCamera(); } if ((camera) != null) { view.init(camera); } } 
public void syncToDoList() { android.content.SharedPreferences toDoSharedPref = getActivity().getSharedPreferences("toDo", Context.MODE_PRIVATE); java.lang.String[] splittedList; java.lang.String savedList = toDoSharedPref.getString("toDoList", null); if (savedList != null) { splittedList = savedList.split("\\n"); <BUGS> toDoList.addAll(java.util.Arrays.asList(splittedList)); <BUGE> } mAdapter.notifyDataSetChanged(); } 
public void saveContents() { if (!(this.persistent)) { return ; } java.io.ObjectOutputStream objOut; try { objOut = new java.io.ObjectOutputStream(new java.io.FileOutputStream(fileLocation)); objOut.writeObject(this.data); <BUGS> objOut.writeObject(this.ridList); <BUGE> objOut.close(); } catch (java.io.IOException e) { e.printStackTrace(); } } 
public static void createHTunnel(byte[][] map, int x1, int x2, int y) { <BUGS> for (int x = java.lang.Math.min(x1, x2); x < (java.lang.Math.max(x1, x2)); x++) { <BUGE> map[y][x] = ((byte) (dungeon.MapGenDungeon.SPACE)); } } 
@java.lang.Override public void notifyOnReceivedMessage(android.telephony.SmsMessage message) { java.lang.String messageContent = message.getMessageBody(); java.lang.String messageFrom = message.getOriginatingAddress(); <BUGS> java.lang.String messageReciviedTime = java.text.SimpleDateFormat.getInstance().format(new java.util.Date(message.getTimestampMillis())); <BUGE> final com.example.michaelssss.myapplication.services.Message message1 = new com.example.michaelssss.myapplication.services.Message(messageReciviedTime, messageFrom, messageContent); new java.lang.Thread(new java.lang.Runnable() { @java.lang.Override public void run() { urlConnection.sendMessage(com.alibaba.fastjson.JSON.toJSONString(message1)); } }).start(); } 
public void setRoute(com.openshift.restclient.model.route.IRoute newRoute, boolean executeCommand) { java.lang.String prevHost = getHost(getRoute()); <BUGS> java.lang.String prevRouteURL = getRouteURL(isSelectDefaultRoute(), getRoute()); <BUGE> super.setRoute(newRoute); java.lang.String newHost = getHost(newRoute); java.lang.String newRouteURL = getRouteURL(isSelectDefaultRoute(), newRoute); if (executeCommand) section.execute(new org.jboss.tools.openshift.internal.ui.server.OpenShiftServerEditorModel.SetRouteCommand(getServer(), getRoute(), newRoute, newRouteURL, prevHost, newHost));  } 
@java.lang.Override public void onClick(android.content.DialogInterface dialogInterface, int i) { <BUGS> <BUGE> counter.setValue(java.lang.Integer.valueOf(input.getText().toString())); listener.added(counter.getKey()); counter.load(counter.getKey()); } 
private static IUser.UserType authorizeUser(java.lang.String username) { IUser.UserType usertype; if (!(username.toLowerCase().equals("guest"))) { java.lang.System.out.print("Password: "); java.lang.String password = platoUI.scanner.next(); <BUGS> try { usertype = platoUI.libControl.login(username, password); } catch (java.lang.NullPointerException err) { java.lang.System.out.println("\nLogin information was incorrect. Please try again.\n"); return null; } <BUGE> return usertype; }else return IUser.UserType.Customer;  } 
@java.lang.Override public void onOpen(java.lang.Object arg0) { super.onOpen(arg0); android.view.View.OnTouchListener listener = new android.view.View.OnTouchListener() { public boolean onTouch(android.view.View v, android.view.MotionEvent e) { if ((e.getAction()) == 1) { marker.setHasToClose(false); marker.maximize(); } return true; } }; <BUGS> this.mView.setOnTouchListener(listener); <BUGE> this.mView.findViewById(R.id.maximize).setOnTouchListener(listener); } 
@net.minecraftforge.fml.common.Mod.EventHandler public void preInit(net.minecraftforge.fml.common.event.FMLPreInitializationEvent event) { <BUGS> me.dmillerw.consequence.Consequence.INSTANCE.INSTANCE.adapterDir = new java.io.File(event.getModConfigurationDirectory(), "consequence/adapters"); <BUGE> if (!(me.dmillerw.consequence.Consequence.INSTANCE.adapterDir.exists())) me.dmillerw.consequence.Consequence.INSTANCE.adapterDir.mkdirs();  me.dmillerw.consequence.Consequence.INSTANCE.scriptDir = new java.io.File(event.getModConfigurationDirectory(), "consequence/scripts"); if (!(me.dmillerw.consequence.Consequence.INSTANCE.scriptDir.exists())) me.dmillerw.consequence.Consequence.INSTANCE.scriptDir.mkdirs();  me.dmillerw.consequence.Consequence.INSTANCE.logger = event.getModLog(); me.dmillerw.consequence.Consequence.PROXY.preInit(event); } 
public void start() { com.stuin.tenseconds.Round.moving = true; <BUGS> com.stuin.tenseconds.Round.playing = true; <BUGE> com.stuin.tenseconds.Round.loss = false; ((com.stuin.tenseconds.Views.Grid) (getChildAt(0))).enter(); ((com.stuin.tenseconds.Views.Grid) (getChildAt(2))).enter(); ((com.stuin.tenseconds.Views.Timer) (getChildAt(1))).start(); postDelayed(title, 100); } 
public static boolean isPlayerLoggedIn(java.lang.String name) { <BUGS> <BUGE> if (!(com.hsun324.protection.Protection.getInstance().isEnabled())) return true;  if (com.hsun324.protection.ProtectionSystem.playerProtectionMap.containsKey(name)) return com.hsun324.protection.ProtectionSystem.playerProtectionMap.get(name).isLoggedIn();  return false; } 
@java.lang.Override public com.mycompany.pokdedex.db.dto.PokemonAttackDto map(int i, java.sql.ResultSet resultSet, org.skife.jdbi.v2.StatementContext statementContext) throws java.sql.SQLException { com.mycompany.pokdedex.db.dto.PokemonAttackDto pokemonAttackDto = new com.mycompany.pokdedex.db.dto.PokemonAttackDto(); <BUGS> pokemonAttackDto.setAttackId(resultSet.getInt("pokemon_id")); pokemonAttackDto.setPokemonId(resultSet.getInt("attack_id")); <BUGE> return pokemonAttackDto; } 
@org.junit.Test public void lookupAppointmentTest() throws java.text.ParseException { java.lang.String start = "2016-08-05T14:10:00Z"; java.lang.String end = "2016-08-05T14:40:00Z"; createAppointment(TESTDOC1, TESTPAT1, start, end); com.sergey.restclinic.resources.AppointmentResource a = new com.sergey.restclinic.resources.AppointmentResource(); <BUGS> com.sergey.restclinic.models.Doctor doctor = com.sergey.restclinic.resources.AppointmentResource.lookupDoctor(TESTDOC1); com.sergey.restclinic.models.Patient patient = com.sergey.restclinic.resources.AppointmentResource.lookupPatient(TESTPAT1); <BUGE> java.util.List<com.sergey.restclinic.models.Appointment> apts = a.lookupAppointment(doctor, patient, start, end); org.junit.Assert.assertEquals(2, apts.size()); } 
<BUGS> private boolean isClientVersionCompatible(java.lang.String clientVersion) { <BUGE> return (((java.lang.Boolean.parseBoolean(java.lang.System.getProperty("skipJspressoVersionCheck"))) || ((org.jspresso.framework.util.Build.getJspressoVersion()) == null)) || (Build.UNKNOWN.equals(org.jspresso.framework.util.Build.getJspressoVersion()))) || (org.jspresso.framework.util.Build.getJspressoVersion().equals(clientVersion)); } 
public static void main(java.lang.String[] args) { java.util.Map apple2 = new java.util.Map("2apples.txt"); java.util.Map apple10 = new java.util.Map("10apples.txt"); NearestNeighbor solve2 = new NearestNeighbor(apple2); NearestNeighbor solve10 = new NearestNeighbor(apple10); solve2.solve(); <BUGS> <BUGE> java.lang.System.out.println(solve2.getDist()); <BUGS> <BUGE> } 
@java.lang.Override public android.view.View getView(int position, android.view.View convertView, android.view.ViewGroup parent) { android.view.View view = super.getView(position, convertView, parent); <BUGS> android.widget.TextView text1 = ((android.widget.TextView) (findViewById(android.R.id.text1))); android.widget.TextView text2 = ((android.widget.TextView) (findViewById(android.R.id.text2))); <BUGE> text1.setText(recipes.get(position).getName()); text2.setText(recipes.get(position).getComments()); return view; } 
@java.lang.Override public void onResponse(@android.support.annotation.NonNull android.content.Context ctx, com.cardinfolink.madgazescan.model.StateModel<java.util.ArrayList<com.cardinfolink.madgazescan.model.UserModel>> data) { java.lang.String userId = null; <BUGS> if (((data != null) & ((data.getStatus()) != (com.cardinfolink.madgazescan.api.ResponseCode.SUCCESS))) & (com.cardinfolink.madgazescan.utils.CollectionUtils.isValid(data.getData()))) { <BUGE> userId = data.getData().get(0).getUserId(); } java.lang.String url = generateGlassUrl(merchantCode, userId); startWebActivity(url); } 
<BUGS> public static void putString(android.content.Context context, java.lang.String key, java.lang.String value, boolean commit) { <BUGE> ds.framework.v4.Settings.ensurePreferencesEditor(context); ds.framework.v4.Settings.sPreferencesEditor.putString(key, value); if (commit) { ds.framework.v4.Settings.sPreferencesEditor.commit(); <BUGS> ds.framework.v4.Settings.sPreferencesEditor = null; <BUGE> } if ((ds.framework.v4.Settings.sInstance) != null) { ds.framework.v4.Settings.sInstance.mSettings.put(key, value); } } 
@java.lang.Override public void onSuccess() { android.app.Fragment f = getFragmentManager().findFragmentByTag("Video"); com.gmail.markdevw.wetube.fragments.VideoListFragment vlf = ((com.gmail.markdevw.wetube.fragments.VideoListFragment) (f)); vlf.getVideoItemAdapter().notifyDataSetChanged(); vlf.getRecyclerView().scrollToPosition(0); <BUGS> mToolbar.setTitle(((("Page: " + (com.gmail.markdevw.wetube.WeTubeApplication.getSharedDataSource().getCurrentPage())) + "   User: ") + (mName))); <BUGE> } 
@java.lang.Override public android.support.v4.app.Fragment getItem(int position) { switch (position) { case 0 : <BUGS> <BUGE> case 1 : <BUGS> return com.example.gil.myweather.weather.control.WeatherFragment.newInstance(1); <BUGE> case 2 : <BUGS> return com.example.gil.myweather.weather.control.WeatherFragment.newInstance(2); case 3 : <BUGE> return com.example.gil.myweather.weather.ui.WeatherListFragment.newInstance(10); default : return com.example.gil.myweather.weather.control.WeatherFragment.newInstance(1); } } 
@java.lang.Override final boolean updateBool() throws java.lang.Exception { boolean b = false; for (nl.ramondevaan.visualization.core.Source<S> s : inputs) { if (s != null) { <BUGS> b = b || (s.update()); <BUGE> } } if (b || (changed)) { try { output = nl.ramondevaan.visualization.core.Filter.updateImpl(); return true; } catch (java.lang.Exception e) { output = null; throw e; } } return false; } 
public void stopScheduler() { <BUGS> timer.cancel(); <BUGE> if ((scheduler) != null) { scheduler.cancel(); scheduler = null; } try { transmitter.close(); } catch (java.lang.Exception e) { de.rwth_aachen.afu.raspager.RasPagerService.log.log(java.util.logging.Level.SEVERE, "Failed to close transmitter.", e); } } 
@java.lang.Override public void setLanguage(com.pratilipi.common.type.Language language) { <BUGS> <BUGE> switch (language) { case HINDI : languageId = 5130467284090880L; break; case GUJARATI : languageId = 5965057007550464L; break; case TAMIL : languageId = 6319546696728576L; break; case MARATHI : languageId = 5173513199550464L; break; case MALAYALAM : languageId = 5752669171875840L; break; case BENGALI : languageId = 6235363433512960L; break; case ENGLISH : languageId = 6213615354904576L; break; } this.language = language; } 
@com.fasterxml.jackson.annotation.JsonIgnore <BUGS> private void checkStatus() { <BUGE> if ((holes) == null) { this.status = PatternStatus.READY; return ; } for (businessentities.PatternHole aHole : holes) { if (((aHole.getPatternAssigned()) == null) || (aHole.getPatternAssigned().isEmpty())) { this.status = PatternStatus.WIP; return ; } } this.status = PatternStatus.READY; } 
@java.lang.Override public void onClick(android.view.View v) { cleanSlate(); if (i == 0) a1.cak.moore.cak_finale.Create.super.onBackPressed();  <BUGS> if (i == 2) <BUGE> android.widget.Toast.makeText(context, R.string.newFile, Toast.LENGTH_SHORT).show(); <BUGS>  <BUGE> dialog.dismiss(); } 
public static void writeDictionary(java.lang.String dictionaryLocation) throws java.io.IOException { java.util.HashMap<java.lang.String, java.lang.Object> dict = new java.util.HashMap<java.lang.String, java.lang.Object>(); java.util.Scanner read = new java.util.Scanner(new java.io.FileReader(dictionaryLocation)); while (read.hasNext()) { java.lang.String word = read.next(); dict.put(word, null); } SpellChecker.dictionary = dict; <BUGS> java.lang.System.out.println(SpellChecker.dictionary.size()); <BUGE> } 
@java.lang.Override public void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); mActivityContext = getActivity(); mApplicationContext = getActivity().getApplicationContext(); if ((getArguments()) != null) { mCategoryName = getArguments().getString(com.pratilipi.mobile.android.PratilipiList.PratilipiListFragment.CATEGORY_NAME); mCategoryFilters = getArguments().getString(com.pratilipi.mobile.android.PratilipiList.PratilipiListFragment.CATEGORY_FILTER); mSearchQuery = getArguments().getString(com.pratilipi.mobile.android.PratilipiList.PratilipiListFragment.SEARCH_QUERY); } mUserActionListner = new com.pratilipi.mobile.android.PratilipiList.PratilipiListPresenter(mActivityContext, this); <BUGS> mPratilipiListAdapter = new com.pratilipi.mobile.android.PratilipiList.PratilipiListAdapter(mApplicationContext, this, mSearchQuery); <BUGE> } 
public void onClick(android.view.View v) { android.util.SparseBooleanArray checked = daysList.getCheckedItemPositions(); <BUGS> java.util.ArrayList<java.lang.Integer> daysSelected = new java.util.ArrayList<java.lang.Integer>(); <BUGE> for (int i = 0; i < (checked.size()); i++) { daysSelected.add(i); } <BUGS> this.headBackToMainScreen(daysSelected); <BUGE> } 
public void testDescriptor() throws java.lang.Exception { org.datacleaner.descriptors.AnalyzerDescriptor<?> desc = org.datacleaner.descriptors.Descriptors.ofAnalyzer(org.datacleaner.beans.valuedist.ValueDistributionAnalyzer.class); assertEquals(0, desc.getInitializeMethods().size()); assertEquals(6, desc.getConfiguredProperties().size()); <BUGS> assertEquals(2, desc.getProvidedProperties().size()); <BUGE> assertEquals("Value distribution", desc.getDisplayName()); } 
public java.lang.String toString() { java.lang.String result = ""; <BUGS> if (organic) { <BUGE> result += "*"; } <BUGS> result += (name) + " "; if (fruit) { <BUGE> result += "(F) "; } <BUGS> result += ("- " + (weight)) + " lbs"; <BUGE> return result; } 
@java.lang.Override public void handle(javafx.event.ActionEvent e) { root.getChildren().remove(makeMove); spacesToMove = ((int) ((java.lang.Math.random()) * 3)) + 1; <BUGS> (curSpace)++; targetX = control.tileList.get(curSpace).x; targetY = control.tileList.get(curSpace).y; <BUGE> startNanoTime = java.lang.System.nanoTime(); isRolling = true; } 
public org.json.JSONArray getStoryData() { <BUGS> org.json.JSONArray storyArray = null; <BUGE> try { org.json.JSONArray mJSONArray = loadDataFromAsset(); for (int i = 2; i < (mJSONArray.length()); i++) { storyArray.put(mJSONArray.getJSONObject(i)); } } catch (org.json.JSONException ex) { ex.printStackTrace(); <BUGS> } finally { return storyArray; <BUGE> } <BUGS> <BUGE> } 
private boolean deliverLevelParts(com.lappard.android.level.LevelCreator.PartAvailableListener listener) { if ((levelParts.size()) > (deliveredParts)) { java.util.List<com.badlogic.gdx.scenes.scene2d.Actor> result = createActors(levelParts.get(deliveredParts)); (deliveredParts)++; <BUGS> android.util.Log.d("LevelCreator", "delivering Actors..."); <BUGE> listener.onPartAvailable(result); return true; } return false; } 
@java.lang.Override <BUGS> protected void populateViewHolder(id.sch.smktelkom_mlg.project2.xirpl10816242534.oeripbedjoe.Fragment.Fragment2.BeratHolder beratViewHolder, id.sch.smktelkom_mlg.project2.xirpl10816242534.oeripbedjoe.DataAdapter data, int position) { <BUGE> beratViewHolder.setName(data.getTitle()); beratViewHolder.setText(data.getDesc()); beratViewHolder.setAbjad(data.getTitle().substring(0, 1)); } 
public boolean removeClient(de.dhbwka.java.bombercat.Client client, java.util.Map<java.lang.String, de.dhbwka.java.bombercat.Lobby> lobbies) { boolean result = false; if (lobbyLeader.equals(client)) { <BUGS> deleteLobby(); lobbies.remove(getLobbyName()); <BUGE> result = true; }else { result = clients.remove(client); client.setLobby(null); result = true; } if (result) { broadcastPlayers(); } return result; } 
private int compareNumOfAllocations(com.example.nickozoulis.teamproj.domain.Referee lRef, com.example.nickozoulis.teamproj.domain.Referee rRef) { if ((lRef.getNumOfMatchAllocated()) > (rRef.getNumOfMatchAllocated())) return 1;  if ((lRef.getNumOfMatchAllocated()) < (rRef.getNumOfMatchAllocated())) return -1;  if ((lRef.getNumOfMatchAllocated()) == (rRef.getNumOfMatchAllocated())) return 0;  <BUGS> throw new java.lang.IllegalStateException("Comparing failed."); <BUGE> } 
public void mouseAction(java.awt.event.MouseEvent e) { <BUGS> if ((((e.getModifiers()) & (java.awt.event.InputEvent.BUTTON3_MASK)) != 0) || (e.isPopupTrigger())) { <BUGE> org.parosproxy.paros.view.View.getSingleton().getPopupMenu().show(e.getComponent(), e.getX(), e.getY()); } } 
public int doEndTag() throws javax.servlet.jsp.JspException { try { java.lang.String bodyContentString = (null != (getBodyContent())) ? getBodyContent().getString() : ""; bodyContent = null; pageContext.getOut().write(bodyContentString); <BUGS> } catch (java.io.IOException e) { throw new javax.servlet.jsp.JspException(e); } catch (java.lang.RuntimeException e) { <BUGE> throw new javax.servlet.jsp.JspException(e); } return EVAL_PAGE; } 
protected boolean updateVideoSize(int width, int height) { matrixManager.setIntrinsicVideoSize(width, height); updateMatrixOnLayout(); videoSize.x = width; videoSize.y = height; <BUGS> if ((width == 0) || (height == 0)) { return false; } android.view.SurfaceHolder holder = getHolder(); if (holder != null) { holder.setFixedSize(width, height); } return true; <BUGE> } 
private void pause(Bluetooth.BluetoothInterface.Packet packet) { if (playing) { <BUGS> try { Audio.SongPlayer.sleepNanos(packet.launchTime); } catch (java.lang.InterruptedException e) { java.lang.System.out.println(e); } speakerCache.stop(); playing = false; java.lang.System.out.println("Pause"); <BUGE> } } 
public void init() { if (Heart.Heart_Core.initialized) { return ; } if (!(headless)) { initGUI(); redirectSystemStreams(); } initVariables(); initCfg(); initLog(); <BUGS> shareMediaDir(); <BUGE> initMediaManager(); initPatchThread(); } 
public boolean checkLogin(java.lang.String email, java.lang.String password) { password = hashString(password); <BUGS> java.sql.ResultSet resultSet = null; <BUGE> java.lang.String query = "SELECT email, password FROM User WHERE email = ? and password = ? "; try { java.sql.PreparedStatement pstmt = connection.prepareStatement(query); pstmt.setString(1, email); pstmt.setString(2, password); <BUGS> resultSet = pstmt.executeQuery(); <BUGE> if (resultSet.next()) { return true; } } catch (java.lang.Exception e) { printErrorMessage(e, "Login"); } return false; } 
public int findIndexFromKey(K key) { for (int i = 0; i < (internalMap.size()); i++) { <BUGS> if ((internalMap.get(i).getKey()) == key) <BUGE> return i;  } return -1; } 
public void trickOver() { for (models.Card card : model.getCardsInPlay().getAllCards()) { <BUGS> <BUGE> } javax.swing.JOptionPane.showMessageDialog(view.getFrame(), "Trick over"); clearTable(); if (model.isHandOver()) { handOver(); } } 
@java.lang.Override protected void beforeHookedMethod(com.woalk.apps.xposed.notifcount.MethodHookParam param) throws java.lang.Throwable { android.service.notification.StatusBarNotification sbn = ((android.service.notification.StatusBarNotification) (param.args[0])); <BUGS> if ((sbn.getNotification().number) == 0) { com.woalk.apps.xposed.notifcount.XposedMod.mSettingsHelper.reload(); com.woalk.apps.xposed.notifcount.XposedMod.autoApplyNumber(sbn.getNotification(), com.woalk.apps.xposed.notifcount.XposedMod.mSettingsHelper.getSetting(sbn.getPackageName())); } <BUGE> } 
public void setMaxCount(java.lang.Integer max) { for (int i = 0; i <= (max + 1); i++) { itemList.add(i); } maxItems = max; <BUGS> currentPageListView.setEnabled(false); <BUGE> dataAdapter.setPagesNumber(itemList); currentPageListView.setAdapter(dataAdapter); maxPages.setText(max.toString()); } 
private void checkAndAdd(java.util.Set<java.lang.String> classes, java.lang.String className) { <BUGS> for (java.lang.String excl : this.excludes) { if (excl.equals(className)) return ;  if (excl.endsWith(".*")) { java.lang.String baseName = excl.substring(0, ((excl.length()) - 1)); if (className.startsWith(baseName)) <BUGE> return ;  <BUGS> <BUGE> } <BUGS> } <BUGE> classes.add(className); } 
@com.wordnik.swagger.annotations.ApiOperation(httpMethod = "POST", value = "文件上传", response = java.lang.String.class) @com.lucifer.controller.RequestMapping(value = "/upload", method = RequestMethod.POST) @com.lucifer.controller.ResponseBody public com.lucifer.utils.Result upload(@com.lucifer.controller.RequestParam(value = "file") org.springframework.web.multipart.MultipartFile file) { try { java.lang.String uploadUrl; <BUGS> uploadUrl = qiniuCloudService.simpleUploadWithoutKey(file.getBytes()); <BUGE> return com.lucifer.utils.Result.ok(uploadUrl); } catch (java.lang.Exception e) { e.printStackTrace(); return com.lucifer.utils.Result.fail(e.getMessage()); } } 
public long insert(io.keepcoding.rgs.everpobre.model.Notebook notebook) { if (notebook == null) { throw new java.lang.IllegalArgumentException("Passing NULL NOTEBOOK, imbecile"); } long id = db.getWritableDatabase().insert(DBConstants.TABLE_NOTEBOOK, null, this.getContentValues(notebook)); notebook.setId(id); db.close(); <BUGS> db = null; <BUGE> return id; } 
public boolean canPlaceRoadAtLocation(int playerIndex, client.models.mapdata.EdgeLocation edge) { if ((this.getEdgeOwner(edge)) != (-1)) return false;  java.lang.Integer[] surrOwners = this.getAdjacentEdgeOwners(edge); <BUGS> <BUGE> if (java.util.Arrays.asList(surrOwners).contains(playerIndex)) return true; else return false;  } 
<BUGS> private void backupAllMenuItemAction() { <BUGE> int response = mainView.showConfirmationDialog("Back up vocab files", "This will overwrite all previous backup files. Are you sure?"); if (response == (javax.swing.JOptionPane.YES_OPTION)) { for (com.tkomiya.models.VocabList vlist : vocabLists) { java.io.File file = new java.io.File(((((com.tkomiya.main.MainController.DEFAULT_SAVE_DIRECTORY) + (vlist.getName())) + ".") + (com.tkomiya.main.MainController.BACKUP_FILE_EXTENSION))); saveVocabListAsTextFile(vlist, file); } } } 
static byte[] readFile(java.io.File file) throws java.io.IOException { byte[] buffer = new byte[1024]; java.io.ByteArrayOutputStream bytes = new java.io.ByteArrayOutputStream(); java.io.FileInputStream fileInputStream = new java.io.FileInputStream(file); <BUGS> while (true) { int read = fileInputStream.read(buffer); if (read == (-1)) break;  bytes.write(buffer, 0, read); } fileInputStream.close(); <BUGE> return bytes.toByteArray(); } 
@java.lang.Override public void readFields(java.io.DataInput in) throws java.io.IOException { int size = in.readInt(); <BUGS> <BUGE> shortestpath = new int[size]; for (int i = 0; i < size; i++) { shortestpath[i] = in.readInt(); } } 
public org.apache.cassandra.db.RowIndexEntry<org.apache.cassandra.io.sstable.IndexInfo> deserializeForCache(org.apache.cassandra.io.util.DataInputPlus in) throws java.io.IOException { assert version.storeRows(); long position = in.readUnsignedVInt(); switch (in.readByte()) { case org.apache.cassandra.db.RowIndexEntry.CACHE_NOT_INDEXED : return new org.apache.cassandra.db.RowIndexEntry<>(position); case org.apache.cassandra.db.RowIndexEntry.CACHE_INDEXED : <BUGS> return new org.apache.cassandra.db.RowIndexEntry.IndexedEntry(position, in, idxInfoSerializer, version, true); <BUGE> case org.apache.cassandra.db.RowIndexEntry.CACHE_INDEXED_SHALLOW : return new org.apache.cassandra.db.RowIndexEntry.ShallowIndexedEntry(position, in, idxInfoSerializer); default : throw new java.lang.AssertionError(); } } 
@org.junit.Test public void shouldReturnNullDigestOnPartlyOverlappingWrites() throws java.io.IOException { chksumChannel.write(buffers[1], blocksize); chksumChannel.write(buffers[0], ((blocksize) - 1)); if ((blocksize) == 1) { fail("Pick a blocksize > 1 for testing correct handling of partly overlapping writes!"); } <BUGS> assertThat(chksumChannel.getChecksum(), org.hamcrest.Matchers.equalTo(null)); <BUGE> } 
<BUGS> public java.lang.String format(org.joda.time.DateTime dateTime, java.util.Locale locale) { <BUGE> if (dateTime == null) { return ""; } org.joda.time.DateTimeZone timeZone = dateTime.getZone(); long utcTime = timeZone.convertLocalToUTC(dateTime.getMillis(), false); dateTime = new org.joda.time.DateTime((utcTime + (offset))); return formatter.withLocale(locale).print(dateTime); } 
@org.testng.annotations.Test public void testListUserAssociations() throws java.lang.Exception { org.wso2.is.portal.user.client.association.FederatedAccountAssociationClientService userAccountAssociationClientService = getFederatedAccountAssociationClientService(); <BUGS> org.wso2.carbon.security.caas.user.core.bean.User testUser = new org.wso2.carbon.security.caas.user.core.bean.User.UserBuilder().setUserId("testUser").setIdentityStore(new org.wso2.carbon.security.caas.user.core.store.IdentityStoreImpl()).setAuthorizationStore(new org.wso2.carbon.security.caas.user.core.store.AuthorizationStoreImpl()).setPrimaryAttributeValue("userId").setClaimManager(new org.wso2.carbon.security.caas.user.core.claim.InMemoryClaimManager()).build(); <BUGE> org.testng.Assert.assertNotNull(userAccountAssociationClientService.listUserAssociations(testUser)); } 
@java.lang.Override public void setCoordinates(dev.eyesless.simple_weather_for_fishermans.geocoding_responce_classes.Location location) { <BUGS> cfinterface.setCoords((((java.lang.String.valueOf(location.getLat())) + " and ") + (java.lang.String.valueOf(location.getLng())))); if ((location.getLastlocation()) != null) <BUGE> setAutocompleted(location.getLastlocation()); <BUGS>  cfinterface.setDefoultLoc(); cfinterface.setLocUnavaliable(); <BUGE> } 
protected void intalizeDrawer() { moveDrawerToTop(); mDrawerLayout = ((android.support.v4.widget.DrawerLayout) (findViewById(R.id.drawer_layout))); menuItems = getResources().getStringArray(R.array.side_menu_items); mDrawerList = ((android.widget.ListView) (findViewById(R.id.left_drawer))); mDrawerLayout.setDrawerShadow(R.drawable.drawer_shadow, GravityCompat.START); <BUGS> slideMenuAdapter = new com.svs.hztb.Adapters.SlideMenuAdapter(getApplicationContext(), menuItems); <BUGE> mDrawerList.setAdapter(slideMenuAdapter); } 
private java.lang.String getField(java.util.Map<java.lang.String, java.lang.Object> profile) { java.util.List<java.lang.String> map = ((java.util.List<java.lang.String>) (profile.get("summary"))); <BUGS> if ((map.size()) >= 2) { <BUGE> return map.get(1).toString(); }else { return ""; } } 
private static void compareHands(java.util.List<java.lang.Integer> x, java.util.List<java.lang.Integer> y, boolean[] a, boolean[] b) { int buildValue1 = week1Problems.P6.findValue(a); int buildValue2 = week1Problems.P6.findValue(b); if (buildValue1 > buildValue2) { <BUGS> java.lang.System.out.print("Player 1 wins"); <BUGE> }else if (buildValue1 == buildValue2) { week1Problems.P6.compareHigh(x, y); }else { <BUGS> java.lang.System.out.print("Player 2 wins"); <BUGE> }  } 
private void resetViewport() { final lecho.lib.hellocharts.model.Viewport v = new lecho.lib.hellocharts.model.Viewport(chart.getMaximumViewport()); <BUGS> v.bottom = (edu.zucc.xk31401419.mycurrencies.utils.MathUtil.getMaxAndMin(rateValuesTab)[1]) * ((float) (1.1)); v.top = (edu.zucc.xk31401419.mycurrencies.utils.MathUtil.getMaxAndMin(rateValuesTab)[0]) * ((float) (0.9)); <BUGE> v.left = 0; v.right = (numberOfPoints) - 1; chart.setMaximumViewport(v); chart.setCurrentViewport(v); } 
java.util.HashSet<uialgebra.algebra.UIATokenElement> getAllTop() { java.util.HashSet<uialgebra.algebra.UIATokenElement> erg = new java.util.HashSet<uialgebra.algebra.UIATokenElement>(); erg.add(this); if (!(getTop().isLastEdge())) <BUGS> for (uialgebra.algebra.UIATokenElement elem : getLeft().getLeftsideElements()) <BUGE> erg.addAll(elem.getAllTop());   return erg; } 
public static java.lang.String format(final int year, final int month, final int day, final java.lang.String pattern) { final java.util.Calendar cal = java.util.Calendar.getInstance(java.util.TimeZone.getTimeZone("UTC")); cal.set(java.util.Calendar.YEAR, year); <BUGS> cal.set(java.util.Calendar.MONTH, month); <BUGE> cal.set(java.util.Calendar.DAY_OF_MONTH, day); return new java.text.SimpleDateFormat(pattern).format(cal.getTime()); } 
private void addMember(final com.enonic.xp.security.PrincipalKey container, final com.enonic.xp.security.PrincipalKey member) { try { securityService.addRelationship(com.enonic.xp.security.PrincipalRelationship.from(container).to(member)); com.enonic.xp.core.impl.security.SecurityInitializer.LOG.info(((("Added " + member) + " as member of ") + container)); <BUGS> } catch (java.lang.Throwable t) { <BUGE> com.enonic.xp.core.impl.security.SecurityInitializer.LOG.error(((("Unable to add member: " + container) + " -> ") + member), t); } } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_chat); if (!(checkServiceAlive())) { return ; } mChatView.setLeftBubbleColor(Color.WHITE); mChatView.setSendIcon(R.drawable.ic_action_send); mChatView.setRightMessageTextColor(Color.WHITE); mChatView.setLeftMessageTextColor(Color.BLACK); <BUGS> mChatView.setUsernameTextColor(Color.WHITE); mChatView.setSendTimeTextColor(Color.WHITE); <BUGE> mChatView.setDateSeparatorColor(Color.WHITE); Reflash(); } 
@java.lang.Override <BUGS> public boolean createStudent(java.lang.String name, java.lang.String userID, java.lang.String pass) { <BUGE> if (user.isSet()) { if ((user.get().access()) == (AccessLevel.teacher)) { <BUGS> flash.card.java.model.Student s = new flash.card.java.model.Student(name, userID, pass); <BUGE> return this.db.putStudent(s); } } return false; } 
public static java.lang.String omitEveryOther(java.lang.String word) { boolean keepCurrent = true; int i = 0; java.lang.String newSpeak = ""; while (i < (word.length())) { if (keepCurrent) { newSpeak += java.lang.String.valueOf(word.charAt(i)); keepCurrent = false; }else { keepCurrent = true; } <BUGS> <BUGE> } return newSpeak; } 
@java.lang.Override public void onBarDelete(int total) { score += total; callback.onScoreChange(score); <BUGS> if (((score) % (home.tetris.Scene.SCORE_PER_LEVEL)) == 0) { <BUGE> (level)++; sound.play(Sound.LEVEL_UP); callback.onLevelUp(level); } deletingAnimation.falling(total); } 
public java.util.List<ralgorithm.State> pmove() { java.util.List<ralgorithm.State> states = new java.util.ArrayList<ralgorithm.State>(); ralgorithm.State state; while (true) { state = step(); if (state == null) { <BUGS> java.lang.System.out.println("Got NULL state"); <BUGE> break; } states.add(state); } for (ralgorithm.Movement m : moves) { <BUGS> java.lang.System.out.println("FINALIZING"); <BUGE> m.finalizeMove(); } return states; } 
private boolean isMonth(java.lang.String nextWord) { boolean ans = false; for (int i = 1; i < (monthsInYear.length); i++) { <BUGS> if (nextWord.equals(monthsInYear[i])) { <BUGE> ans = true; break; } } return ans; } 
@java.lang.Override public void put(KEY key, VALUE data) { java.lang.String s = datacache.Util.getMD5(key.toString()); try { datacache.disklrucache.DiskLruCache.Editor editor = mDiskIruCache.edit(s); if (editor != null) { java.io.OutputStream outputStream = editor.newOutputStream(0); mValueDataSaver.writeTo(outputStream, data); <BUGS> <BUGE> } <BUGS> editor.commit(); <BUGE> } catch (java.io.IOException e) { e.printStackTrace(); } } 
@java.lang.Override protected me.aerovulpe.crawler.data.Photo[] doInBackground(android.database.Cursor... params) { if (params[0].isClosed()) return null;  me.aerovulpe.crawler.data.Photo[] photos = null; try { photos = me.aerovulpe.crawler.data.Photo.arrayFromCursor(params[0]); } catch (android.database.StaleDataException e) { e.printStackTrace(); <BUGS> } finally { cursor.close(); <BUGE> } return photos; } 
@java.lang.Override @java.lang.SuppressWarnings(value = "unchecked") public java.util.List<org.n52.series.api.v1.db.da.beans.ProcedureEntity> getAllInstances(org.n52.series.api.v1.db.da.DbQuery parameters) throws org.n52.series.api.v1.db.da.DataAccessException { org.hibernate.Criteria criteria = getDefaultCriteria("procedure"); if (hasTranslation(parameters, org.n52.series.api.v1.db.da.beans.I18nProcedureEntity.class)) { parameters.addLocaleTo(criteria, org.n52.series.api.v1.db.da.beans.I18nProcedureEntity.class); } <BUGS> criteria = parameters.addDetachedFilters("procedure", criteria); <BUGE> parameters.addPagingTo(criteria); return ((java.util.List<org.n52.series.api.v1.db.da.beans.ProcedureEntity>) (criteria.list())); } 
public int getValue(gameplay.Card card) { int s = card.getSuit(); int val; switch (s) { case 0 : <BUGS> val = this.indexOf(spades, card); <BUGE> break; case 1 : <BUGS> val = this.indexOf(hearts, card); <BUGE> break; case 2 : <BUGS> val = this.indexOf(clubs, card); <BUGE> break; case 3 : <BUGS> val = this.indexOf(diamonds, card); <BUGE> break; default : val = 0; } return val; } 
private boolean editTask(java.lang.String rawInput) { java.util.ArrayList<java.lang.String> inputParts = breakString(rawInput); int taskID = convertToInt(getTaskID(inputParts)); java.lang.String date = getDateFromRaw(inputParts); if (isInvalidID(taskID)) { return false; } <BUGS> logic.editTask(taskID, date); return true; <BUGE> } 
@org.junit.Test public void testGetMinYWorld() throws java.lang.Exception { bbox.addHitBox(new com.almasb.fxgl.physics.HitBox("ARM", new javafx.geometry.Point2D(0, 20), com.almasb.fxgl.physics.BoundingShape.box(40, 40))); <BUGS> org.junit.Assert.assertEquals(20, bbox.getMinYWorld(), 0); <BUGE> position.translateY(100); <BUGS> org.junit.Assert.assertEquals(120, bbox.getMinYWorld(), 0); <BUGE> } 
public static java.lang.String toCSVTime(java.lang.Object obj, org.apache.sqoop.schema.type.Column col) { <BUGS> <BUGE> if (((org.apache.sqoop.connector.common.Time) (col)).hasFraction()) { return org.apache.sqoop.connector.common.SqoopIDFUtils.encloseWithQuotes(org.apache.sqoop.connector.common.SqoopIDFUtils.tfWithFraction.print(((org.joda.time.LocalTime) (obj)))); }else { return org.apache.sqoop.connector.common.SqoopIDFUtils.encloseWithQuotes(org.apache.sqoop.connector.common.SqoopIDFUtils.tfWithNoFraction.print(((org.joda.time.LocalTime) (obj)))); } } 
@java.lang.Override public void act(float delta) { taken += delta; if ((taken) > (duration)) { callActionCompletedListener(); <BUGS> action.act(delta); if (action.isDone()) action.callActionCompletedListener();  <BUGE> } } 
@java.lang.Override public void setBooleanMetadata(java.lang.String key, boolean value) { <BUGS> if (((sender.getBlock()) == null) || ((sender.getBlock().getType()) == (org.bukkit.Material.COMMAND))) { <BUGE> return ; } sender.getBlock().setMetadata(key, new org.bukkit.metadata.FixedMetadataValue(org.bitbucket.ucchy.undine.UndineMailer.getInstance(), value)); } 
private void executeOnStartActions() { <BUGS> int actionIndexOnStart = java.lang.Integer.parseInt(sharedPrefs.getString(getString(R.string.key_prefActionOnStart), java.lang.Integer.toString(ActionOnStartNone))); <BUGE> if (actionIndexOnStart == (ActionOnStartNone)) { return ; }else if (actionIndexOnStart == (ActionOnStartSurahList)) { android.content.Intent intent = new android.content.Intent(this, com.frrahat.quransimple.SuraListActivity.class); startActivityForResult(intent, REQUEST_SURAH_LIST); }else if (actionIndexOnStart == (ActionOnStartRandomAyah)) { showARandomAyah = true; }   } 
public void onClick(android.view.View v) { fold(); popupWindow.dismiss(); <BUGS> hideUserOptions(0); <BUGE> showPlayerAction(0, "Fold"); thread.postDelayed(new java.lang.Runnable() { public void run() { simulateTurns(); } }, 5000); } 
private void addCoupleToSquare(short square, short coupleNo, short cplPsn) { com.bgt.core.CoupleGenerator tip = com.bgt.core.Globals.getInstance().getCoupleGenerator(); <BUGS> java.lang.System.out.println(((((("in addCoupleToSquare, square = " + square) + ", couple = ") + coupleNo) + ", cplPsn = ") + cplPsn)); <BUGE> tip.getCouplesInSquare().setCoupleNo(square, cplPsn, coupleNo); tip.getCouples().setSelectedForSquare(coupleNo, true); } 
private boolean testActiveClick(com.google.gwt.user.client.Event e) { com.google.gwt.dom.client.Element target = e.getEventTarget().cast(); com.google.gwt.query.client.GQuery $e = com.google.gwt.query.client.GQuery.$(target); if (($e.parents(("#" + (containerId))).length()) > 0) { activeField = true; }else { closeField(); } <BUGS> return false; <BUGE> } 
public static com.mongodb.MongoClient createClientFromFlumeContext(org.apache.flume.Context context, java.lang.String prefix) { <BUGS> java.util.List<com.mongodb.ServerAddress> seeds = org.mapad.google.common.utils.MongoUtils.getSeeds((prefix + (context.getString(org.mapad.google.common.utils.MongoUtils.HOSTNAMES)))); <BUGE> com.mongodb.MongoCredential credential = org.mapad.google.common.utils.MongoUtils.getCredential(context, prefix); com.mongodb.MongoClient client; if (credential != null) { client = new com.mongodb.MongoClient(seeds, java.util.Arrays.asList(credential)); }else { client = new com.mongodb.MongoClient(seeds); } return client; } 
private void updateRippleSize(int width, int height) { final int cx = width / 2; <BUGS> final int cy = (mDual) ? (mIcon.getTop()) + (mIcon.getHeight()) : height; <BUGE> final int rad = ((int) ((mIcon.getHeight()) * 1.25F)); mRipple.setHotspotBounds((cx - rad), (cy - rad), (cx + rad), (cy + rad)); } 
public java.lang.String cardToString() { java.lang.String ret = ""; if (((value) == 1) || ((value) == 11)) { ret = "A"; } if ((value) == 21) { ret = "J"; } if ((value) == 22) { ret = "Q"; } if ((value) == 23) { ret = "K"; }else { <BUGS> ret = value; <BUGE> } return ret; } 
public void fireBomb(samueltaylor.classicwarlordprototype.Model.Region r, java.util.List<samueltaylor.classicwarlordprototype.Model.Empire> affectedEmpires, java.util.List<samueltaylor.classicwarlordprototype.Model.Region> affectedRegions) { location.setBomb(null); location = r; <BUGS> if ((r.getBomb()) != null) { <BUGE> this.bombtype = location.getBomb().getBombtype(); } location.setBomb(this); location.detonateBomb(affectedEmpires, affectedRegions); } 
@cz.cuni.amis.pogamut.base.communication.worldview.listener.annotation.EventListener(eventClass = cz.cuni.amis.pogamut.ut2004.communication.messages.gbinfomessages.PlayerKilled.class) public void playerKilled(cz.cuni.amis.pogamut.ut2004.communication.messages.gbinfomessages.PlayerKilled event) { if (event.getKiller().equals(info.getId())) { updateRisque(); shoot.stopShooting(); if ((currentWeapon) != null) { currentWeapon.upNbKills(); currentWeapon.updateProbability(); } target = null; bot.getBotName().setInfo("COLLECT"); now = collect; canPursue = false; <BUGS> body.getCommunication().sendGlobalTextMessage(("courage : " + (risque))); <BUGE> } } 
private void showWindow(net.mready.hover.HoverWindow window) { <BUGS> checkWindow(window); <BUGE> if (window.attached) { return ; } windowManager.addView(window.windowView, window.windowLayoutParams); window.attached = true; if ((powerManager.isScreenOn()) && (!(keyguardManager.inKeyguardRestrictedInputMode()))) { window.performStart(); } } 
public com.kosn.entity.Item checkEquipment(java.lang.String target) { java.util.List<com.kosn.entity.Item> equippedItems = new java.util.ArrayList<com.kosn.entity.Item>(equipment.values()); for (com.kosn.entity.Item checkItem : equippedItems) { if (checkItem.getName().equals(target)) { return checkItem; } } <BUGS> <BUGE> return null; } 
public void getAddress() { if (!(locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER))) { mainLayout.setVisibility(View.GONE); buildAlertMessageNoGps(); }else if (!(isConn())) { mainLayout.setVisibility(View.GONE); buildAlertMessageNoInternet(); }else { mainLayout.setVisibility(View.VISIBLE); android.location.LocationListener locationListener = new com.example.weatherapplication.MainActivity.MyLocationListener(); <BUGS> locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 5000, 10, locationListener); <BUGE> }  } 
@java.lang.Override public void apply(org.eclipse.emf.ecore.EObject element, org.eclipse.xtext.ui.editor.model.edit.IModificationContext context) throws java.lang.Exception { <BUGS> com.puppetlabs.geppetto.semver.Version v = getResolvedMetadataVersion(element); <BUGE> java.lang.StringBuilder bld = new java.lang.StringBuilder(); bld.append("\""); <BUGS> bld.append(v.getMajor()); bld.append("."); bld.append(v.getMinor()); <BUGE> bld.append(".x\""); context.getXtextDocument().replace(issue.getOffset(), issue.getLength(), bld.toString()); } 
private java.lang.String buildSortOrder(com.chd.MediaMgr.utils.MediaFileUtil.SortMethod sort) { <BUGS> <BUGE> java.lang.String sortOrder = null; switch (sort) { case name : sortOrder = (MediaStore.Files.FileColumns.TITLE) + " asc"; break; case size : sortOrder = (MediaStore.Files.FileColumns.SIZE) + " asc"; break; case date : sortOrder = (MediaStore.Files.FileColumns.DATE_MODIFIED) + " desc"; break; case type : sortOrder = (((MediaStore.Files.FileColumns.MIME_TYPE) + " asc, ") + (MediaStore.Files.FileColumns.TITLE)) + " asc"; break; } return sortOrder; } 
@java.lang.Override protected <T extends java.security.spec.AlgorithmParameterSpec> T engineGetParameterSpec(final java.lang.Class<T> paramSpec) throws java.security.spec.InvalidParameterSpecException { if (paramSpec.equals(javax.crypto.spec.IvParameterSpec.class)) { <BUGS> return ((T) (new javax.crypto.spec.IvParameterSpec(iv, pos))); <BUGE> }else { throw new java.security.spec.InvalidParameterSpecException(); } } 
@java.lang.Override protected void onCreate(android.os.Bundle savedInstanceState) { super.onCreate(savedInstanceState); if ((getLayoutRes()) > 0) { setContentView(R.layout.activity_base); <BUGS> butterknife.ButterKnife.bind(this); <BUGE> android.view.View content = android.view.LayoutInflater.from(this).inflate(getLayoutRes(), root, false); if (hasTitle()) { android.support.v7.widget.Toolbar toolbar = inflateToolbar(); root.addView(toolbar); } root.addView(content); <BUGS> <BUGE> } } 
public double slopeTo(Point that) { if ((this.compareTo(that)) == 0) return java.lang.Double.NEGATIVE_INFINITY;  if ((this.x) == (that.x)) return java.lang.Double.POSITIVE_INFINITY;  <BUGS> return ((double) ((this.y) - (that.y))) / ((double) ((this.x) - (that.x))); <BUGE> } 
<BUGS> <BUGE> public void printData() { java.lang.System.out.println(("=> Directory= " + (this.path))); <BUGS> if ((files.size()) > 0) <BUGE> java.lang.System.out.println("     Files: "); else java.lang.System.out.println("     <no files>");  <BUGS> for (int i = 0; i < (files.size()); ++i) java.lang.System.out.println(("     - " + (files.get(i)))); <BUGE>  } 
public static boolean isInvEmpty(net.minecraft.inventory.IInventory stack) { boolean empty = true; if (stack == null) return true;  for (int i = 0; i < (stack.getSizeInventory()); i++) { <BUGS> if ((stack.getStackInSlot(i)) != null) <BUGE> return false;  } return true; } 
private void setProperties(org.openhab.binding.max.internal.message.F_Message message) { ntpServer1 = message.getNtpServer1(); ntpServer2 = message.getNtpServer2(); <BUGS> org.eclipse.smarthome.config.core.Configuration configuration = org.openhab.binding.max.internal.handler.MaxCubeBridgeHandler.editConfiguration(); <BUGE> configuration.put(org.openhab.binding.max.internal.handler.PROPERTY_NTP_SERVER1, ntpServer1); configuration.put(org.openhab.binding.max.internal.handler.PROPERTY_NTP_SERVER2, ntpServer2); updateConfiguration(configuration); logger.debug("NTP properties updated"); } 
public void run() { if (!(discoveryReplyList.contains(packetData))) { <BUGS> discoveryReplyList.add(packetData); <BUGE> android.widget.ListView lvDiscoveryReplies = ((android.widget.ListView) (findViewById(R.id.listView_DiscoveryReplies))); android.widget.ArrayAdapter<java.lang.String> adapter = ((android.widget.ArrayAdapter<java.lang.String>) (lvDiscoveryReplies.getAdapter())); adapter.add(packetData); <BUGS> adapter.notifyDataSetChanged(); <BUGE> } } 
@java.lang.Override public void run() { while (_running) { try { scanKeyboard(); } catch (ioio.lib.api.exception.ConnectionLostException e) { _running = false; e.printStackTrace(); } catch (java.lang.InterruptedException e) { _running = false; e.printStackTrace(); } <BUGS> while (!(_running)); <BUGE> } } 
private java.lang.Class<?> getSuperClassOnSet(java.util.Set<java.lang.Class<?>> set, java.lang.Class<?> clazz) { java.lang.Class<?> found = null; for (java.lang.Class<?> aux : set) { <BUGS> if ((aux.isAssignableFrom(clazz)) && ((found != null) && (aux.isAssignableFrom(found)))) { <BUGE> found = aux; } } return found == null ? clazz : found; } 
@java.lang.Override public void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent event, float x, float y, int pointer, int button) { back.setBounds(((back.getX()) - 5), back.getY(), ((back.getWidth()) + 5), ((back.getHeight()) + 5)); game.mainMenuScreen = new by.randomen.screens.MainMenuScreen(game); game.setScreen(game.mainMenuScreen); game.settingsMScreen.dispose(); <BUGS> dispose(); <BUGE> } 
@java.lang.Override public org.exist.xquery.value.Sequence postEval(org.exist.xquery.value.Sequence seq) throws org.exist.xquery.XPathException { if ((orderedResult) == null) { return seq; } orderedResult.sort(); <BUGS> final org.exist.xquery.value.Sequence result = orderedResult; <BUGE> orderedResult = null; if ((getReturnExpression()) instanceof org.exist.xquery.FLWORClause) { <BUGS> return ((org.exist.xquery.FLWORClause) (getReturnExpression())).postEval(seq); <BUGE> } <BUGS> return result; <BUGE> } 
<BUGS> protected void updateReel(double x, double y, double orientationReelle, boolean enMarcheAvant, double courbureReelle) { <BUGE> if (enMarcheAvant) { orientationGeometrique = orientationReelle; courbureGeometrique = courbureReelle; }else { orientationGeometrique = orientationReelle + (java.lang.Math.PI); courbureGeometrique = -courbureReelle; } position.setX(x); position.setY(y); this.orientationReelle = orientationReelle; this.enMarcheAvant = enMarcheAvant; this.courbureReelle = courbureReelle; } 
protected net.instant.util.fileprod.ProducerJob produceInner(java.lang.String name) { net.instant.util.fileprod.ProducerJob ret = null; if ((fs) != null) ret = fs.produce(name);  <BUGS> if (((rs) != null) && (ret != null)) <BUGE> ret = rs.produce(name);  return ret; } 
@org.testng.annotations.Test public void testSubtractBusinessKey() throws java.lang.Exception { boolean assert_ = false; try { spreadsheet.mapper.utils.FieldUtils.subtractBusinessKey("test.int1"); } catch (java.lang.IllegalArgumentException e) { spreadsheet.mapper.utils.FieldUtilsTest.LOGGER.debug("\'test.int1\' not business key"); if (e.getMessage().contains("business key")) { assert_ = true; } } <BUGS> org.testng.Assert.assertTrue(assert_); <BUGE> java.lang.String s = spreadsheet.mapper.utils.FieldUtils.subtractBusinessKey(((FieldUtils.BUSINESS_KEY_PREFIX) + "test.int1")); <BUGS> org.testng.Assert.assertEquals(s, "test.int1"); <BUGE> } 
<BUGS> public int getBillWorth(int itemDamage, int stackSize) { <BUGE> int cash = 0; switch (itemDamage) { case 0 : cash = 1; break; case 1 : cash = 5; break; case 2 : cash = 10; break; case 3 : cash = 20; break; case 4 : cash = 50; break; case 5 : cash = 100; break; } return cash * stackSize; } 
public java.util.List<java.lang.String> asListString(javax.naming.directory.Attribute att) throws javax.naming.NamingException { <BUGS> <BUGE> if (att == null) <BUGS> return null; <BUGE>  <BUGS> java.util.List<java.lang.String> res = new java.util.LinkedList<java.lang.String>(); <BUGE> for (int i = 0; i < (att.size()); i++) res.add(((java.lang.String) (att.get(i))));  return res; } 
private void stopScan() { if (mIsScanning) { android.util.Log.v(Utils.TAG, "Stopping scan"); <BUGS> mScanHandler.removeCallbacks(mBleScannerTimeoutRunnable); <BUGE> final no.nordicsemi.android.support.v18.scanner.BluetoothLeScannerCompat scanner = no.nordicsemi.android.support.v18.scanner.BluetoothLeScannerCompat.getScanner(); scanner.stopScan(scanCallback); <BUGS> <BUGE> mIsScanning = false; } } 
private void calculateLength() { if ((orientation) == (Sens.VERTICAL)) { <BUGS> length = (end.getRow()) - (start.getRow()); <BUGE> }else if ((orientation) == (Sens.HORIZONTAL)) { <BUGS> length = (end.getCol()) - (start.getCol()); <BUGE> }  } 
@java.lang.Override public com.ullink.slack.simpleslackapi.SlackMessageHandle<com.ullink.slack.simpleslackapi.replies.SlackChannelReply> leaveChannel(com.ullink.slack.simpleslackapi.SlackChannel channel) { <BUGS> com.ullink.slack.simpleslackapi.impl.SlackMessageHandleImpl handle = new com.ullink.slack.simpleslackapi.impl.SlackMessageHandleImpl(getNextMessageId()); <BUGE> java.util.Map<java.lang.String, java.lang.String> arguments = new java.util.HashMap<>(); arguments.put("token", authToken); arguments.put("channel", channel.getId()); postSlackCommand(arguments, com.ullink.slack.simpleslackapi.impl.SlackWebSocketSessionImpl.CHANNELS_LEAVE_COMMAND, handle); return handle; } 
@java.lang.Override public void landOnField(Players.PlayerController playerController, Fields.FieldController fieldController) { Players.Player jailedPlayer = playerController.getCurrentPlayer(); jailedPlayer.setJail(true); <BUGS> Game.GameController.movement(false, ((jailedPlayer.getPlace()) + 1), 11, jailedPlayer, fieldController, playerController); <BUGE> jailedPlayer.setPlace(10); } 
private void getClassModifiers(java.lang.Class clazz, int numberOfTabs) { getTabs(numberOfTabs); java.lang.String modifiers = java.lang.reflect.Modifier.toString(clazz.getModifiers()); if (modifiers.isEmpty()) { <BUGS> sb.append(("class " + (clazz.getSimpleName()))); <BUGE> }else { <BUGS> sb.append(((modifiers + " class ") + (clazz.getSimpleName()))); <BUGE> } } 
private void stealSourceAsFields(java.util.Map<java.lang.String, java.lang.Object> sourceAsMap, final java.util.Map<java.lang.String, org.elasticsearch.search.SearchHitField> fields, final java.util.Set<java.lang.String> included) { <BUGS> if ((((sourceAsMap == null) || (fields == null)) || (sourceAsMap.isEmpty())) || (included != null)) { <BUGE> return ; } org.elasticsearch.search.fetch.source.FetchSourceSubPhase.stealSourceAsFields(null, sourceAsMap, fields, included); } 
private void findSubIndexForColor(int topIndex, int color) { <BUGS> if (((getBuilder().mColorsSub.length) - 1) < topIndex) <BUGE> return ;  int[] subColors = getBuilder().mColorsSub[topIndex]; for (int subIndex = 0; subIndex < (subColors.length); subIndex++) { if ((subColors[subIndex]) == color) { subIndex(subIndex); break; } } } 
<BUGS> public int findPositionById(long id) { android.database.Cursor cursor = getList(); if (cursor == null) <BUGE> return -1;  <BUGS> while (cursor.moveToNext()) { if ((cursor.getLong(0)) == id) { return cursor.getPosition(); <BUGE> } } return -1; } 
public void removeCell(java.lang.String id) { elegit.treefx.Cell cell = cellMap.get(id); <BUGS> if (cellMap.containsKey(cell.getCellId())) { <BUGE> elegit.treefx.Cell oldCell = cellMap.remove(cell.getCellId()); for (elegit.treefx.Cell p : cell.getCellParents()) { p.removeCellChild(oldCell); } removedCells.add(oldCell); this.removeEdges(oldCell); } } 
public void setTemplateID(java.util.Map mobData, com.nkoiv.mists.game.gameobject.MapObject mob) { if (mobData.containsKey("templateID")) { int templateID = java.lang.Integer.parseInt(((java.lang.String) (mobData.get("templateID")))); <BUGS> mob.setTemplateID(templateID); <BUGE> }else { mob.setTemplateID(getNextFreeID()); } } 
public boolean createUser(boolean checkExists) { if ((!(userDefined())) || (checkExists && (userExists()))) { return false; } <BUGS> org.avaje.docker.commands.PostgresContainer.log.debug("create postgres user {}", config.containerName()); <BUGE> java.lang.ProcessBuilder pb = createRole(dbConfig.getDbUser(), dbConfig.getDbPassword()); java.util.List<java.lang.String> stdOutLines = org.avaje.docker.commands.process.ProcessHandler.process(pb).getStdOutLines(); return (stdOutLines.size()) == 2; } 
@java.lang.Override public boolean start() { try { <BUGS> syncBladeInterval = java.lang.Integer.valueOf(configDao.getValue(Config.UCSSyncBladeInterval.key())); <BUGE> } catch (java.lang.NumberFormatException e) { syncBladeInterval = 600; } syncBladesExecutor = java.util.concurrent.Executors.newScheduledThreadPool(1, new com.cloud.utils.concurrency.NamedThreadFactory("UCS-SyncBlades")); syncBladesExecutor.scheduleAtFixedRate(new com.cloud.ucs.manager.UcsManagerImpl.SyncBladesThread(), syncBladeInterval, syncBladeInterval, java.util.concurrent.TimeUnit.SECONDS); return true; } 
@org.junit.Test public void testValidateCredentialsPasswordOnly() throws java.lang.Exception { <BUGS> <BUGE> expectedMessages.add(HubProxyInfoBuilder.ERROR_MSG_CREDENTIALS_INVALID); final com.blackducksoftware.integration.hub.builder.HubProxyInfoBuilder builder = new com.blackducksoftware.integration.hub.builder.HubProxyInfoBuilder(); builder.setHost(com.blackducksoftware.integration.hub.global.HubProxyInfoBuilderTest.VALID_HOST); builder.setUsername(""); builder.setPassword(com.blackducksoftware.integration.hub.global.HubProxyInfoBuilderTest.VALID_PASSWORD); final com.blackducksoftware.integration.hub.builder.ValidationResults<com.blackducksoftware.integration.hub.global.HubProxyInfoFieldEnum, com.blackducksoftware.integration.hub.global.HubProxyInfo> result = new com.blackducksoftware.integration.hub.builder.ValidationResults<com.blackducksoftware.integration.hub.global.HubProxyInfoFieldEnum, com.blackducksoftware.integration.hub.global.HubProxyInfo>(); builder.validateCredentials(result); org.junit.Assert.assertFalse(result.isSuccess()); actualMessages = getMessages(result); } 
protected static org.glassfish.grizzly.http.server.HttpServer startServer() throws java.io.IOException { final org.glassfish.jersey.server.ResourceConfig rc = new org.glassfish.jersey.server.ResourceConfig().packages("org.wikibrain.atlasify"); rc.register(org.wikibrain.atlasify.CORSFilter.class); <BUGS> rc.register(org.glassfish.jersey.jackson.JacksonFeature.class); <BUGE> java.lang.System.out.println("Staring grizzly..."); org.glassfish.grizzly.http.server.HttpServer server = org.glassfish.jersey.grizzly2.httpserver.GrizzlyHttpServerFactory.createHttpServer(org.wikibrain.atlasify.AtlasifyServer.baseURI, rc); return server; } 
private void unwrapAndRemoveFromIndex(java.lang.Object oldValue, com.hazelcast.nio.serialization.Data indexKey) { if (oldValue instanceof com.hazelcast.query.extractor.MultiResult) { java.util.List<java.lang.Object> results = ((com.hazelcast.query.extractor.MultiResult) (oldValue)).getResults(); for (java.lang.Object o : results) { <BUGS> java.lang.Comparable sanitizedValue = sanitizeValue(((java.lang.Comparable) (o))); <BUGE> removeIndexInternal(sanitizedValue, indexKey); } }else { <BUGS> java.lang.Comparable sanitizedValue = sanitizeValue(((java.lang.Comparable) (oldValue))); <BUGE> removeIndexInternal(sanitizedValue, indexKey); } } 
@java.lang.Override public java.lang.Boolean apply(java.lang.Long bookmarkId) { boolean result; if (bookmarkId > 0) { bookmarksDBAdapter.removeBookmark(bookmarkId); result = false; }else { bookmarksDBAdapter.addBookmark(sura, ayah, page); result = true; } <BUGS> bookmarksPublishSubject.onNext(null); <BUGE> return result; } 
public void update(ru.job4j.model.Item updated) { for (int i = 0; i < (this.position); i++) { <BUGS> if (this.items[i].equals(updated)) { <BUGE> this.items[i] = updated; } } } 
public void promote(com.github.arsenalfcgunners.gappleperms.Rank r) { rank = r; if ((rank.isDonor()) && (!(donorranks.contains(rank)))) { donorranks.add(rank); } gp.getRankManager().setDonorRanks(uuid, donorranks); gp.getRankManager().setRank(uuid, rank); clearPerms(); givePerms(); <BUGS> gp.getLogger().log(java.util.logging.Level.WARNING, "Online player promoted."); <BUGE> } 
@org.junit.Test public void testBucketExistsFails() throws io.minio.MinioException, java.io.IOException, java.security.InvalidKeyException, java.security.NoSuchAlgorithmException, org.xmlpull.v1.XmlPullParserException { com.squareup.okhttp.mockwebserver.MockWebServer server = new com.squareup.okhttp.mockwebserver.MockWebServer(); com.squareup.okhttp.mockwebserver.MockResponse response = new com.squareup.okhttp.mockwebserver.MockResponse(); response.addHeader("Date", "Sun, 29 Jun 2015 22:01:10 GMT"); response.setResponseCode(404); server.enqueue(response); server.start(); <BUGS> io.minio.MinioClient client = new io.minio.MinioClient(server.getUrl("")); <BUGE> boolean result = client.bucketExists("bucket"); org.junit.Assert.assertEquals(false, result); } 
private void onPlayerStateChange(@org.bottiger.podcast.player.exoplayer.ExoPlayerWrapper.PlayerState int argPlayerStatus) { <BUGS> <BUGE> if (!(getEpisode().equals(org.bottiger.podcast.SoundWaves.getAppContext(getContext()).getPlaylist().first()))) { setStatus(ExoPlayerWrapper.STATE_READY); return ; } setStatus(argPlayerStatus); } 
private java.lang.String getIGNameForInitiator(com.emc.storageos.db.client.model.Initiator initiator, com.emc.storageos.xtremio.restapi.XtremIOClient client, java.lang.String xioClusterName) throws java.lang.Exception { java.lang.String igName = null; try { if (null != (initiator.getLabel())) { <BUGS> com.emc.storageos.xtremio.restapi.model.response.XtremIOInitiator initiatorObj = client.getInitiator(initiator.getLabel(), null); <BUGE> if (null != initiatorObj) { igName = initiatorObj.getInitiatorGroup().get(1); } } } catch (java.lang.Exception e) { com.emc.storageos.volumecontroller.impl.xtremio.XtremIOExportOperations._log.warn("Initiator {} already deleted", initiator.getLabel()); } return igName; } 
private java.util.ArrayList<java.lang.String> runSocket(int packetsMax) throws java.io.IOException { java.util.ArrayList<java.lang.String> toReturn = new java.util.ArrayList<java.lang.String>(); while (packetsMax != 0) { byte[] rcvdInfo = new byte[10]; java.net.DatagramPacket packet = new java.net.DatagramPacket(rcvdInfo, rcvdInfo.length); socket.receive(packet); <BUGS> toReturn.add(packet.getData().toString()); <BUGE> packetsMax--; } return toReturn; } 
public void inactiveTimerStart() { java.lang.String sDelay = settings.getString("inactiveTimerMins", com.givenhansco.keystonenavigation.Activities.MainMenuActivity.DEFAULT_TIMER_DELAY); long delay; try { delay = java.lang.Long.parseLong(sDelay); } catch (java.lang.Exception e) { delay = 240; } <BUGS> android.util.Log.i(com.givenhansco.keystonenavigation.Activities.MainMenuActivity.TAG, ("timerDelay : " + delay)); <BUGE> if (delay != 0) { delay = (1000 * 60) * delay; startInactiveTimer(delay); }else { <BUGS> android.util.Log.i(com.givenhansco.keystonenavigation.Activities.MainMenuActivity.TAG, "Inactive Timer Skipped"); <BUGE> } } 
public void setSongIndex(int index) { java.lang.System.out.println(("setSongIndex " + index)); if (index != (this.songIndex)) { <BUGS> this.beatmapIndex = 0; <BUGE> setBeatmapIndex(0); } <BUGS> this.songIndex = index; <BUGE> nextSongButton.setEnable((index < ((Resources.songs.size()) - 1))); imageReload(); textReload(); } 
public void openSQLConnection() { <BUGS> sqlConnection.createConnection(); createConnection.setDisable(true); clear.setDisable(false); closeConnection.setDisable(false); sentRequest.setDisable(false); additionalQueryBox.setDisable(false); addQueryToCollection.setDisable(false); openConnection.setDisable(true); offConnection.setDisable(false); investigation.setDisable(false); this.isConnected = true; <BUGE> } 
@org.springframework.web.bind.annotation.RequestMapping(value = "/searchkeyword") public java.lang.String searchKeyword(java.lang.String curusername, java.lang.String keyword, org.springframework.web.servlet.mvc.support.RedirectAttributes attr) { java.util.List<java.util.HashMap> keywordList = keywordService.selectKeywordByKeyword(keyword); <BUGS> com.chas.model.User user = userService.selectUserByName(curusername); <BUGE> java.util.List<com.chas.model.Aspect> aspectList = aspectService.selectAllAspect(); attr.addFlashAttribute("aspectList", aspectList); attr.addFlashAttribute("user", user); attr.addFlashAttribute("searchword", keyword); attr.addFlashAttribute("keywordList", keywordList); return "redirect:/keyword"; } 
@ninja.FilterWith(value = www.purple.mixxy.filters.JsonEndpoint.class) public ninja.Result comic(@ninja.params.PathParam(value = "user") <BUGS> java.lang.String user, @ninja.params.PathParam(value = "work") <BUGE> java.lang.String work) { <BUGS> www.purple.mixxy.models.User username = userDao.getUser(user); <BUGE> www.purple.mixxy.models.Comic comic = comicDao.getComic(username, work); <BUGS> if ((username == null) || (comic == null)) { <BUGE> return ninja.Results.notFound().template(("www/purple/mixxy/" + (ninja.utils.NinjaConstant.LOCATION_VIEW_FTL_HTML_NOT_FOUND))); } return ninja.Results.ok().render("comic", comic).render("user", user).html(); } 
@java.lang.Override public java.util.List<de.blackcraze.grb.model.entity.StockType> findByNameLike(java.lang.String name, java.util.Locale locale) { java.util.List<de.blackcraze.grb.model.entity.StockType> stocks = de.blackcraze.grb.util.InjectorUtils.getStockTypeDao().findAll(); <BUGS> java.util.function.Predicate<de.blackcraze.grb.model.entity.StockType> filter = ( stock) -> !(de.blackcraze.grb.i18n.Resource.getItem(stock.getName(), locale).toLowerCase().contains(name)); <BUGE> stocks.removeIf(filter); return stocks; } 
@java.lang.Override protected void timeStep() throws java.lang.Exception { <BUGS> if (semaphore.tryAcquire(1, acquireTimeoutMs, java.util.concurrent.TimeUnit.MILLISECONDS)) { <BUGE> throw new java.lang.RuntimeException(); } java.lang.Integer key = randomInt(keyCount); com.hazelcast.core.ICompletableFuture f = ((com.hazelcast.core.ICompletableFuture) (map.putAsync(key, key))); f.andThen(this); } 
@java.lang.Override protected void onDestroy() { super.onDestroy(); if (isFinishing()) { mGoogleApiClient = null; if ((customThreadCheckLocation) != null) customThreadCheckLocation.stopRunning(false);  if ((customThreadCheckGPSState) != null) customThreadCheckGPSState.stopRunning(false);  android.support.v4.content.LocalBroadcastManager.getInstance(this).unregisterReceiver(receiverMaps); <BUGS> floorPlanNavigationImageImageView.setImageDrawable(null); if ((roundCornersBitmap) != null) roundCornersBitmap.recycle();  <BUGE> } } 
public boolean writeData(byte[] data, int length) { int written = 0; <BUGS> for (int i = 0; i < (java.lang.Math.min(length, data.length)); i++) { <BUGE> if ((writeBitsRaw(org.q3df.demo.Q3HuffmanCoder.huff_paths[(255 & (data[i]))], org.q3df.demo.Q3HuffmanCoder.sym_size[(255 & (data[i]))])) > 0) { written++; }else break;  } return written == length; } 
public org.apache.shiro.session.Session toSimpleSession() throws java.io.IOException { final org.apache.shiro.session.mgt.SimpleSession simpleSession = new org.apache.shiro.session.mgt.SimpleSession(); <BUGS> simpleSession.setId(recordId); <BUGE> simpleSession.setStartTimestamp(startTimestamp.toDate()); simpleSession.setLastAccessTime(lastAccessTime.toDate()); simpleSession.setTimeout(timeout); simpleSession.setHost(host); final java.util.Map attributes = serializer.deserialize(sessionData); simpleSession.setAttributes(attributes); return simpleSession; } 
<BUGS> public static <T extends android.os.Parcelable> java.util.Map<java.lang.String, T> fromBundle(android.os.Bundle input, java.lang.Class<T> claz) { <BUGE> input.setClassLoader(claz.getClassLoader()); java.util.Map<java.lang.String, T> output = new android.support.v4.util.ArrayMap<java.lang.String, T>(); for (java.lang.String key : input.keySet()) { <BUGS> output.put(key, ((T) (input.getParcelable(key)))); <BUGE> } return output; } 
@org.junit.Test public void testRemove() { Person test10 = new Person("Dave", "Son"); Course course2 = new Course("3010", "SYSC"); test10.remove(course2); Course[] array2 = test10.getCourses(); <BUGS> if ((array2[0]) == course2) { <BUGE> fail("Remove for the course didn't work"); } } 
@org.junit.Test public void resolveClassWithDefaultScope() { <BUGS> java.lang.String match = "import foo;\n" + (("\n" + "public class Foo {/*comment*/}\n") + "\n"); <BUGE> de.flapdoodle.codedoc.resolver.java.Reference ref = de.flapdoodle.codedoc.resolver.java.Reference.parse("foo.Foo").get(); de.flapdoodle.codedoc.common.Either<de.flapdoodle.codedoc.CodeSample, java.lang.Error> result = new de.flapdoodle.codedoc.resolver.java.JavaSourceReferenceResolverImpl().resolve(ref, code); assertTrue(result.isLeft()); assertEquals(match, result.left().code()); assertEquals("java", result.left().type()); } 
<BUGS> public int getPlayerForLine(final int row, final java.lang.String playerFigure) { <BUGE> int playerRowCount = 0; for (int i = 0; i < (board.getRowLength(row)); i++) { if (((board.getFigure(row, i)) != null) && ((board.getFigure(row, i).toString()) == playerFigure)) { playerRowCount++; } } return playerRowCount; } 
@java.lang.Override public boolean equals(java.lang.Object other) { if (other == null) return false;  if (!(other instanceof model.Team)) return false;  model.Team team = ((model.Team) (other)); <BUGS> if ((team.name.equals(this.name)) && (this.players.equals(team.players))) <BUGE> return true;  return false; } 
private float calculateDistanceToTheNextRadar(java.lang.Double latitude, java.lang.Double longitude) { android.location.Location currentLocation = com.mobilemakers.juansoler.appradar.StartScreenFragment.getLastLocation(); <BUGS> if (currentLocation == null) { return -1; } <BUGE> android.location.Location nextLocation = createTheNextLocation(latitude, longitude); float distance = (currentLocation.distanceTo(nextLocation)) / 1000; return new java.math.BigDecimal(distance).setScale(1, java.math.BigDecimal.ROUND_HALF_UP).floatValue(); } 
public org.concordion.api.MultiValueResult handleErrorJsonResponse(final java.lang.String paymentName) throws java.io.IOException, java.util.concurrent.ExecutionException { com.fasterxml.jackson.databind.JsonNode jsonNode = handleJsonResponse(paymentName); <BUGS> return org.concordion.api.MultiValueResult.multiValueResult().with(specs.response.STATUS, jsonNode.get(specs.response.STATUS).textValue()).with(specs.response.ERROR_CODE, jsonNode.get(specs.response.ERROR_CODE).intValue()).with(specs.response.ERROR_MESSAGE, jsonNode.get(specs.response.ERROR_MESSAGE).textValue()).with(specs.response.CUSTOMER_MESSAGE, jsonNode.get(specs.response.CUSTOMER_MESSAGE).textValue()); <BUGE> } 
public org.eclipse.titan.runtime.core.TitanBoolean operatorEquals(final org.eclipse.titan.runtime.core.TitanUniversalCharString other_value) { mustBound("Unbound left operand of charstring element comparison."); other_value.mustBound("Unbound right operand of charstring element comparison."); if ((other_value.getValue().size()) != 1) { return new org.eclipse.titan.runtime.core.TitanBoolean(false); } <BUGS> return new org.eclipse.titan.runtime.core.TitanBoolean(((get_char()) == (other_value.charAt(0)))); <BUGE> } 
public static java.util.List<com.google.android.gms.maps.model.LatLng> convertToLatLng(java.util.List<casak.ru.geofencer.domain.model.Point> points) { <BUGS> java.util.List<com.google.android.gms.maps.model.LatLng> result = new java.util.ArrayList(points.size()); <BUGE> for (casak.ru.geofencer.domain.model.Point point : points) { result.add(casak.ru.geofencer.presentation.converters.LatLngConverter.convertToLatLng(point)); } return result; } 
@java.lang.Override public void onClick(android.content.DialogInterface dialog, int which) { android.content.ContentValues valuesToInsert = new android.content.ContentValues(); valuesToInsert.put("measuredAt", ((android.widget.EditText) (promptView.findViewById(R.id.datetime))).getText().toString()); <BUGS> valuesToInsert.put("glucoseValue", ((android.widget.EditText) (promptView.findViewById(R.id.measurement))).getText().toString()); <BUGE> db.insert("BloodGlucose", null, valuesToInsert); dialog.dismiss(); } 
@java.lang.Override public void onClick(android.view.View view) { <BUGS> com.sweproject.calorietracker.MainActivity.insertDBData(com.sweproject.calorietracker.DataObjects.Food_Day.class, this, new com.sweproject.calorietracker.DataObjects.Food_Day(FragmentCalendar.currentDay.getId(), ((mServingSpin.getSelectedItemPosition()) + 1), mServingSizes.get(mSelectedIndex).getId()), false); <BUGE> } 
public void printMonsters(net.slashie.libjcsi.wswing.WSwingConsoleInterface j, characters.active.ActiveCharacter user) { for (map.Room room : getRooms()) { if (user.getRoom().equals(room)) { for (characters.active.ActiveCharacter enemy : room.getMonsters()) { <BUGS> if (!(enemy.isDead())) { if (util.RandUtil.containsTuple(enemy.getPosition(), user.getVisiblePositions())) { room.printMonsters(j, user.getVisiblePositions()); } <BUGE> } } } } } 
public void run() throws java.lang.ClassNotFoundException { java.lang.Class.forName("org.sqlite.JDBC"); <BUGS> java.sql.Connection conn = null; <BUGE> try { <BUGS> <BUGE> conn = this.getConnection(); java.lang.System.out.println("Successfully connected to database!"); } catch (java.sql.SQLException e) { java.lang.System.out.println("Error: Could not connect to the database."); e.printStackTrace(); return ; } } 
@java.lang.Override public void processOutput(com.lumens.engine.TransformComponent src, java.lang.String targetName, java.util.List<com.lumens.model.Element> output) { if (log.isDebugEnabled()) <BUGS> log.debug(java.lang.String.format("Component '%s' output size '%d' target => '%s'", src.getName(), output.size(), targetName)); <BUGE>  processElementList(output); } 
@java.lang.Override public void setDefinition(java.lang.String filename, java.lang.Long start, java.lang.Long end) { org.eclipse.core.resources.IFile file = getFile(filename); if ((file != null) && (file.exists())) { <BUGS> tern.eclipse.ide.ui.utils.EditorUtils.openInEditor(file, start.intValue(), ((end.intValue()) - (start.intValue())), true); <BUGE> } } 
@java.lang.Override public void onBindViewHolder(final mem.edu.meaningful.CoordinatorFragment.SimpleStringRecyclerViewAdapter.ViewHolder holder, final int position) { <BUGS> holder.mTextView.setText(mValues[position]); <BUGE> holder.mView.setOnClickListener(new android.view.View.OnClickListener() { @java.lang.Override public void onClick(android.view.View v) { android.support.design.widget.Snackbar.make(v, getValueAt(position), Snackbar.LENGTH_SHORT).show(); } }); } 
protected void doGet(javax.servlet.http.HttpServletRequest request, javax.servlet.http.HttpServletResponse response) throws java.io.IOException, javax.servlet.ServletException { <BUGS> java.lang.String action = request.getParameter("action"); if ((action != null) && (action.equals("list"))) { com.tsystems.javaschool.timber.logiweb.service.TruckService truckService = new com.tsystems.javaschool.timber.logiweb.service.TruckService(new com.tsystems.javaschool.timber.logiweb.dao.TruckDao()); java.util.List<com.tsystems.javaschool.timber.logiweb.entity.Truck> trucks = truckService.findAll(); request.setAttribute("trucks", trucks); javax.servlet.RequestDispatcher rd = getServletContext().getRequestDispatcher("/trucks.jsp"); rd.forward(request, response); } <BUGE> } 
public io.kks.states.State removeState(int index) { <BUGS> if (((stateStack.size()) <= 1) || (outOfBounds(index))) { <BUGE> return null; } io.kks.states.State removeState = stateStack.remove(index); removeState.onDestroy(); return removeState; } 
private void updateExpressionPartWithSubExpression(java.util.Stack subexpressionStack) { while (!(subexpressionStack.empty())) { subexpression += subexpressionStack.pop(); } <BUGS> expressionParts.add(new app.com.example.grace.currencycalculator.models.Operand(new java.lang.StringBuilder(subexpression).reverse().toString())); subexpression = ""; <BUGE> } 
private void stop() { if (mGame.hasStarted()) { ca.hoogit.powerhour.Game.Engine.started = false; if (mGame.is(State.ACTIVE)) { mTimer.cancel(); <BUGS> mVibrator.cancel(); <BUGE> } android.util.Log.i(ca.hoogit.powerhour.Game.Engine.TAG, ("Stopping game on round " + (mGame.currentRound()))); } <BUGS> <BUGE> finish(); } 
private com.github.javalbert.sqlbuilder.Predicate buildExistsPredicate(com.github.javalbert.sqlbuilder.dsl.ExistsPredicate dslPredicate) { <BUGS> com.github.javalbert.sqlbuilder.dsl.com.github.javalbert.sqlbuilder.Predicate predicate = newPredicate(dslPredicate); <BUGE> if ((dslPredicate.getOperator()) == (PredicateOperator.EXISTS)) { predicate.exists(); }else if ((dslPredicate.getOperator()) == (PredicateOperator.NOT_EXISTS)) { predicate.notExists(); }  return predicate.subquery(buildSelect(dslPredicate.getSubquery())); } 
public int reflectDirection(int laser_direction) { laser_direction = jkhet.Piece.mod((laser_direction + 2), 4); int relative_side = jkhet.Piece.mod((laser_direction - (rot)), 4); if (relative_side == 0) { return jkhet.Piece.mod((1 + (rot)), 4); }else if (relative_side == 1) { return jkhet.Piece.mod(rot, 4); }else { <BUGS> board_pieces.remove(this); <BUGE> return -1; }  } 
@java.lang.Override public java.util.List<com.bubblewrap.plants.webserver.model.Sensor> getCurrentSensorValues() { java.util.List<com.bubblewrap.plants.webserver.model.Sensor> result = new java.util.ArrayList<com.bubblewrap.plants.webserver.model.Sensor>(); java.util.List<com.bubblewrap.plants.webserver.model.Sensor> sensors = jdbcTemplate.query(retrieveSensors, new com.bubblewrap.plants.webserver.jdbc.SensorRowMapper()); for (com.bubblewrap.plants.webserver.model.Sensor sensor : sensors) { java.lang.String latestDataQuery = java.lang.String.format(retrieveLatestSensorData, sensor.getId()); sensor.setData(jdbcTemplate.query(latestDataQuery, new com.bubblewrap.plants.webserver.jdbc.SensorDataRowMapper())); <BUGS> <BUGE> } return result; } 
@org.junit.Test public void happyPath() { java.lang.String json = com.jayway.restassured.RestAssured.given().auth().basic(ServerConfig.USERNAME, ServerConfig.PASSWORD).body(questions.PostQuestionTest.questionOne).when().post(questions.PostQuestionTest.postUrl).then().statusCode(200).contentType(ContentType.JSON).extract().response().asString(); java.lang.Long questionId = com.jayway.restassured.path.json.JsonPath.from(json).getLong("questionId"); org.junit.Assert.assertNotNull(questionId); <BUGS> helpers.QuestionHelper.assertQuestionInSurvey(questions.PostQuestionTest.surveyId, questionId); <BUGE> } 
<BUGS> void addInterval(com.example.mapinguari.workoutclass.exerciseObjects.Interval interval) { com.example.mapinguari.workoutclass.exerciseObjectsViews.IntervalView intervalView = intervalViewToAdd(interval); int pos = intervalsView.getChildCount(); <BUGE> if ((pos % 2) == 0) { intervalView.setBackgroundColor(getResources().getColor(R.color.even_list_item)); }else { intervalView.setBackgroundColor(getResources().getColor(R.color.odd_list_item)); } intervalsView.addView(intervalView, pos); <BUGS> <BUGE> } 
protected void handleStringAnswer() throws java.io.IOException { java.lang.String requestId = readValue(); java.lang.String value = readValue(); com.ideal.evecore.util.PendingAtomicReference<java.lang.String> reference = stringResults.remove(requestId); if (reference != null) { <BUGS> synchronized(reference) { reference.set(value); reference.notify(); } <BUGE> } } 
protected void markVoidCompatible() { if (preferredSugar) { <BUGS> getExpectation().acceptActualType(resultClosureType, (((((org.eclipse.xtext.xbase.typesystem.conformance.ConformanceFlags.CHECKED_SUCCESS) | (org.eclipse.xtext.xbase.typesystem.conformance.ConformanceFlags.LAMBDA_VOID_COMPATIBLE)) | (org.eclipse.xtext.xbase.typesystem.conformance.ConformanceFlags.PROPAGATED_TYPE)) | (org.eclipse.xtext.xbase.typesystem.conformance.ConformanceFlags.SEALED)) | (org.eclipse.xtext.xbase.typesystem.conformance.ConformanceFlags.PREFERRED_LAMBDA_SUGAR))); <BUGE> }else { <BUGS> getExpectation().acceptActualType(resultClosureType, ((((org.eclipse.xtext.xbase.typesystem.conformance.ConformanceFlags.CHECKED_SUCCESS) | (org.eclipse.xtext.xbase.typesystem.conformance.ConformanceFlags.LAMBDA_VOID_COMPATIBLE)) | (org.eclipse.xtext.xbase.typesystem.conformance.ConformanceFlags.PROPAGATED_TYPE)) | (org.eclipse.xtext.xbase.typesystem.conformance.ConformanceFlags.SEALED))); <BUGE> } } 
public void nextRound() { Round.setText(("Round " + ((start) - 1))); pt.makeEmpty(); (start)++; <BUGS> pickNumber(3); <BUGE> control = 0; turn = 0; CorrectNum.setText("0"); } 
public void connect() throws java.io.IOException, java.lang.ClassNotFoundException, java.security.InvalidKeyException, java.security.NoSuchAlgorithmException, java.security.spec.InvalidKeySpecException, javax.crypto.BadPaddingException, javax.crypto.IllegalBlockSizeException, javax.crypto.NoSuchPaddingException, rsa.exceptions.GeneratingPublicKeyException { conn = new network.Connection(); <BUGS> if ((thread) == null) { thread = new java.lang.Thread(this); thread.setDaemon(true); thread.start(); } <BUGE> } 
public void start(org.osgi.framework.BundleContext context) throws java.lang.Exception { super.start(context); net.bioclipse.balloon.business.Activator.plugin = this; javaScriptFinderTracker = new org.osgi.util.tracker.ServiceTracker(context, net.bioclipse.balloon.business.IJavaScriptBalloonManager.class.getName(), null); javaScriptFinderTracker.open(); javaFinderTracker = new org.osgi.util.tracker.ServiceTracker(context, net.bioclipse.balloon.business.IJavaBalloonManager.class.getName(), null); javaFinderTracker.open(); <BUGS> getPreferenceStore().setDefault(net.bioclipse.balloon.business.Activator.BALLOON_TIMEOUT, net.bioclipse.balloon.business.Activator.DEFAULT_BALLOON_TIMEOUT); <BUGE> } 
private boolean getNextQuestion() { currentQuestion = quiz.nextQuestion(); <BUGS> <BUGE> if ((currentQuestion) == null) { currentState = backend.GameState.GAME_OVER; return false; } lblCurrentQ.setText(currentQuestion.getQ()); int index = 0; for (java.lang.String ans : currentQuestion.getAnswers()) { answers[index].setText(ans); index++; } lblTime.setText(java.lang.Integer.toString(currentQuestion.getTimeLimit())); currentState = backend.GameState.WAITING_FOR_ANSWERS; <BUGS> broadcastToClients(NetworkMessages.nextQ); <BUGE> return true; } 
public static void listing() { <BUGS> java.nio.file.Path taskFile = java.nio.file.Paths.get("/home/salankiv/greenfox/salankiv-todo-app/assets/tasks.txt"); <BUGE> try { <BUGS> <BUGE> java.util.List<java.lang.String> lines = java.nio.file.Files.readAllLines(taskFile); for (int i = 0; i < (lines.size()); i++) { java.lang.System.out.println((((i + 1) + ". ") + (lines.get(i)))); } } catch (java.io.IOException e) { e.printStackTrace(); } } 
@java.lang.Override protected void onResume() { super.onResume(); android.support.v4.app.Fragment fragment = getSupportFragmentManager().findFragmentById(R.id.list_container); <BUGS> if ((!(mTwoPane)) && (fragment instanceof com.qualicom.availabilitydashboard.NodeListActivityFragment)) { <BUGE> android.util.Log.i("BACK", "Back to node fragment"); selectedNode = null; } } 
@java.lang.Override public void execute(backtype.storm.tuple.Tuple tuple) { <BUGS> java.lang.String text = tuple.getStringByField("message"); <BUGE> java.lang.String language = "UNKNOWN"; com.joelholder.bolt.LanguageIdentifier li = new com.joelholder.bolt.LanguageIdentifier(text); language = li.getLanguage(); _collector.emit(new backtype.storm.tuple.Values(text, language)); _collector.ack(tuple); } 
public void run() { try { javax.sound.sampled.Clip clip = javax.sound.sampled.AudioSystem.getClip(); <BUGS> java.net.URL audioUrl = java.lang.ClassLoader.getSystemResource(Game.musicFile); java.io.File audioFile = new java.io.File(audioUrl.toURI()); javax.sound.sampled.AudioInputStream inputStream = javax.sound.sampled.AudioSystem.getAudioInputStream(audioFile); <BUGE> clip.open(inputStream); clip.start(); clip.loop(javax.sound.sampled.Clip.LOOP_CONTINUOUSLY); } catch (java.lang.Exception ex) { java.lang.System.out.println("Can't play sound, check file path"); } } 
public void write(int data) { int index = 0; while (index < (clientCount)) { <BUGS> clients[index].write(data); <BUGE> if (clients[index].active()) { <BUGS> <BUGE> index++; }else { removeIndex(index); } } } 
<BUGS> public de.marsetex.lab2.task3.RationalNumber subtract(de.marsetex.lab2.task3.RationalNumber other) { <BUGE> int zaehlerTemp = ((zaehler) * (other.nenner)) + ((other.zaehler) * (nenner)); int nennerTemp = (nenner) * (other.nenner); return new de.marsetex.lab2.task3.RationalNumber(zaehlerTemp, nennerTemp); } 
public static java.util.List<java.lang.String> decolorize(java.util.List<java.lang.String> colored) { if (colored == null) return null;  java.util.List<java.lang.String> decolored = new java.util.ArrayList<java.lang.String>(colored.size()); <BUGS> for (java.lang.String string : decolored) { <BUGE> decolored.add(com.nisovin.shopkeepers.Utils.translateColorCodesToAlternative('&', string)); } return decolored; } 
<BUGS> <BUGE> public void onClick(android.view.View v) { globalPlay.setFgMadeFlag(goodCB.isChecked()); globalPlay.setFgDistance(java.lang.Integer.parseInt(fgDistanceEditText.getText().toString())); if (!(kickerEditText.getText().toString().equals(""))) { globalPlay.setPlayerNumber(java.lang.Integer.parseInt(kickerEditText.getText().toString())); } <BUGS> flow = true; <BUGE> newPlayDialog(); dialog.dismiss(); } 
public static java.lang.String getTodaysTshirt() { if ((com.coollooks.Util.tShirtPathList) == null) com.coollooks.Util.setTshirtList();  <BUGS> int i = ((int) (((java.lang.Math.random()) * 33) % ((com.coollooks.Util.tShirtPathList.size()) - 1))); <BUGE> if ((com.coollooks.Util.tShirtPathList.size()) > 0) return com.coollooks.Util.tShirtPathList.get(i); else return null;  } 
private void populateGrid() { <BUGS> java.lang.System.out.println("populateGrid()"); <BUGE> for (int h = 0; h < (grid.size()); h++) { for (int w = 0; w < (fieldWidth); w++) { grid.get(h).add(w, new Cell()); } } } 
@java.lang.Override public void onEntityAdded(net.minecraft.entity.Entity entity) { if ((!(entity instanceof net.minecraft.entity.player.EntityPlayer)) && (this.dimension.hasSetting(SettingType.ENTITYSPAWN))) { de.alaoli.games.minecraft.mods.yadm.data.settings.EntitySpawnSetting setting = ((de.alaoli.games.minecraft.mods.yadm.data.settings.EntitySpawnSetting) (this.dimension.get(SettingType.ENTITYSPAWN))); setting.increase(entity); <BUGS> if (setting.isLimitReached(entity)) { this.removeEntity(entity); } <BUGE> } super.onEntityAdded(entity); } 
private java.util.Collection<tools.gsf.navigation.AssetNode> _getDescendents(tools.gsf.navigation.AssetNode n) { java.util.Set<tools.gsf.navigation.AssetNode> descendents = new java.util.HashSet<>(); for (tools.gsf.navigation.AssetNode kid : n.getChildren()) { <BUGS> <BUGE> descendents.addAll(_getDescendents(kid)); } return descendents; } 
@android.support.annotation.NonNull public static java.util.List<com.fastaccess.data.dao.FragmentPagerAdapterModel> buildForRepoIssue(@android.support.annotation.NonNull android.content.Context context, @android.support.annotation.NonNull java.lang.String login, @android.support.annotation.NonNull java.lang.String repoId) { <BUGS> return com.annimon.stream.Stream.of(new com.fastaccess.data.dao.FragmentPagerAdapterModel(context.getString(R.string.opened), com.fastaccess.ui.modules.repos.issues.issue.RepoOpenedIssuesView.newInstance(repoId, login, IssueState.open)), new com.fastaccess.data.dao.FragmentPagerAdapterModel(context.getString(R.string.closed), com.fastaccess.ui.modules.repos.issues.issue.RepoClosedIssuesView.newInstance(repoId, login, IssueState.closed))).collect(com.annimon.stream.Collectors.toList()); <BUGE> } 
public void addTo(java.lang.String email) { try { for (java.lang.String mail : email.split(";")) <BUGS> if (canSendTo(mail)) this.to.add(new javax.mail.internet.InternetAddress(mail));  <BUGE>  } catch (javax.mail.internet.AddressException e) { throw new java.lang.RuntimeException(e); } } 
@java.lang.Override public boolean accept(org.apache.hadoop.fs.Path path) { <BUGS> java.lang.String ext = libra.common.helpers.PathHelper.getExtensionWithoutCompressed(path.getName()).toLowerCase(); <BUGE> for (java.lang.String fext : libra.common.sequence.FastaPathFilter.FASTA_EXT) { <BUGS> if (ext.equals(fext)) { <BUGE> return true; } } return false; } 
@org.junit.Test public void getListUser() { java.util.List<com.ca.devtest.lisabank.wsdl.User> users = bankServices.getListUserWithoutAdmin(); org.junit.Assert.assertNotNull(users); <BUGS> assertEquals("Il y a plus de 7 utilisateurs, le webservice \"userControl\" ne sont pas correctement configur\u00e9", 6, users.size()); assertNotEquals("Admin", users.get(0).getLname()); <BUGE> } 
@java.lang.Override public void update(float delta) { for (org.terasology.entitySystem.entity.EntityRef entity : entityManager.getEntitiesWith(org.terasology.miniion.components.NPCMovementInputComponent.class)) { org.terasology.miniion.components.NPCMovementInputComponent characterMovementComponent = entity.getComponent(org.terasology.miniion.components.NPCMovementInputComponent.class); org.terasology.logic.characters.CharacterComponent characterComp = entity.getComponent(org.terasology.logic.characters.CharacterComponent.class); entity.send(new org.terasology.logic.characters.CharacterMoveInputEvent(((inputSequenceNumber)++), 0, 0, characterMovementComponent.directionToMove, characterMovementComponent.runningRequested, characterMovementComponent.jumpingRequested, ((long) (delta)))); <BUGS> <BUGE> } } 
public static communication.pdu.SessionPDU createSessionPDU(byte[] data) { <BUGS> <BUGE> int flags = communication.utils.NumberParser.intToByte(data[0]); int sessionId = communication.utils.NumberParser.intToByte(data[1]); byte[] newData = java.util.Arrays.copyOfRange(data, 2, data.length); return new communication.pdu.SessionPDU(flags, sessionId, new communication.pdu.PDU(newData)); } 
private void cleanup() { com.badlogic.gdx.backends.lwjgl3.Lwjgl3Cursor.disposeSystemCursors(); if ((audio) instanceof com.badlogic.gdx.backends.lwjgl3.audio.OpenALAudio) { ((com.badlogic.gdx.backends.lwjgl3.audio.OpenALAudio) (audio)).dispose(); } com.badlogic.gdx.backends.lwjgl3.Lwjgl3Application.errorCallback.free(); <BUGS> <BUGE> if ((com.badlogic.gdx.backends.lwjgl3.Lwjgl3Application.glDebugCallback) != null) { com.badlogic.gdx.backends.lwjgl3.Lwjgl3Application.glDebugCallback.free(); <BUGS> <BUGE> } org.lwjgl.glfw.GLFW.glfwTerminate(); } 
static ddejonge.ggp.sat.logic.CNF disjunctCNFwithLiteral(ddejonge.ggp.sat.logic.CNF cnf, boolean positive, ddejonge.ggp.sat.logic.Proposition p) { ddejonge.ggp.sat.logic.CNF newCnf = new ddejonge.ggp.sat.logic.CNF(); for (ddejonge.ggp.sat.logic.Clause clause : cnf) { ddejonge.ggp.sat.logic.Clause newClause = new ddejonge.ggp.sat.logic.Clause(clause.getPositiveAtoms(), clause.getNegativeAtoms()); newClause.addLiteral(p, positive); <BUGS> <BUGE> } return newCnf; } 
@java.lang.Override protected void autonomousMain() throws ccre.instinct.AutonomousModeOverException, java.lang.InterruptedException { <BUGS> Elevator.setBottom.event(); waitUntil(Elevator.atBottom); Rollers.open.set(true); Rollers.direction.set(false); Rollers.running.set(true); waitUntil(ccre.ctrl.BooleanMixing.invert(AutoLoader.crateInPosition)); waitForTime(timeout); Rollers.running.set(false); running.set(false); <BUGE> } 
public com.nostra13.universalimageloader.core.DisplayImageOptions getDisplayImageOption(@android.support.annotation.DrawableRes int icon) { <BUGS> com.nostra13.universalimageloader.core.DisplayImageOptions options = new com.nostra13.universalimageloader.core.DisplayImageOptions.Builder().showImageOnLoading(icon).showImageForEmptyUri(icon).showImageOnFail(icon).cacheInMemory(false).cacheOnDisk(true).imageScaleType(ImageScaleType.EXACTLY).considerExifParams(true).bitmapConfig(Bitmap.Config.RGB_565).displayer(new com.nostra13.universalimageloader.core.display.FadeInBitmapDisplayer(1000)).build(); return options; <BUGE> } 
private void init(android.content.Context context) { android.view.View rootView = inflate(context, R.layout.easytabs, this); tabs = ((android.support.design.widget.TabLayout) (rootView.findViewById(R.id.tabs))); pager = ((android.support.v4.view.ViewPager) (rootView.findViewById(R.id.pager))); <BUGS> appCompactActivity = ((android.support.v7.app.AppCompatActivity) (context)); <BUGE> } 
public void stopped() { if ((option) == '1') { <BUGS> java.lang.System.out.println("Moving"); <BUGE> distance += 0.2F * ((acc) / 100); acc -= 0.1F; if ((acc) < 0) { option = '3'; Gdis = distance; distance = 0.0F; acc = Cacc; } } } 
@java.lang.Override public void mouseClicked(java.awt.event.MouseEvent e) { if (((enhancedStr) < 2) && (addPoints)) { (availablePoints)--; (enhancedStr)++; }else if (((enhancedStr) > 0) && (!(addPoints))) { (availablePoints)++; (enhancedStr)--; }  <BUGS> java.lang.System.out.println(((("Available Points: " + (availablePoints)) + "\nEnhanced Strength Points: ") + (enhancedStr))); <BUGE> } 
@java.lang.Override public void onHeaderClick(final com.nervousfish.nervousfish.activities.Header header, final int position) { super.onHeaderClick(header, position); if ((header.id) == (R.id.key_management_header)) { final android.content.Intent intent = new android.content.Intent(this, com.nervousfish.nervousfish.activities.KeyManagementActivity.class); <BUGS> intent.putExtra(ConstantKeywords.SERVICE_LOCATOR, com.nervousfish.nervousfish.activities.SettingsActivity.serviceLocator); <BUGE> this.startActivity(intent); } } 
public java.util.PriorityQueue<java.lang.Integer> getStartingNodes() { sorted = poag.getNodeIDs(); java.util.PriorityQueue<java.lang.Integer> startingNodeIds = new java.util.PriorityQueue<>(); for (int i = 0; i < (size); i++) { java.lang.Integer[] prevs = poag.getPreviousNodeIDs(sorted[i]); <BUGS> if ((prevs[0]) == null) { <BUGE> startingNodeIds.add(sorted[i]); } } return startingNodeIds; } 
public void reset() { java.lang.System.out.println("RESTART! RESTART!"); swimmer.restart(); <BUGS> oxygenMeter.restart(); staminaMeter.restart(); <BUGE> timer.restart(); Gdx.input.setInputProcessor(this); gameOverOverlay.setVisible(false); pauseOverlay.setVisible(false); winOverlay.setVisible(false); gameOver = false; goingRight = false; goingLeft = false; paused = false; this.gameState = com.cpioli.headabovewater.screens.GameScreen.GAME_PLAY; } 
<BUGS> private java.util.HashMap<helper.Position, java.util.HashMap<java.lang.String, java.util.HashSet<java.lang.String>>> getRelationReprs() { java.util.HashMap<helper.Position, java.util.HashMap<java.lang.String, java.util.HashSet<java.lang.String>>> relationReprs = new java.util.HashMap<helper.Position, java.util.HashMap<java.lang.String, java.util.HashSet<java.lang.String>>>(); <BUGE> for (helper.Position p : helper.Position.values()) { <BUGS> relationReprs.put(p, new java.util.HashMap<java.lang.String, java.util.HashSet<java.lang.String>>()); <BUGE> } return relationReprs; } 
<BUGS> private void info() { <BUGE> try { java.lang.StringBuilder info = util.FileHandler.readStringBuilder("information"); notifier.send(((answerCommand) + (info.toString()))); } catch (java.lang.Exception ex) { java.lang.String error = "Error when reading info file."; logging.Logger.logMessage('E', this, error); notifier.send(((answerCommand) + error)); } } 
java.util.ArrayList<personal.vinay.bigdata.PrepData.Record> setMinSpread(java.util.ArrayList<personal.vinay.bigdata.PrepData.Record> records) { <BUGS> float minSpread = 9999; <BUGE> for (personal.vinay.bigdata.PrepData.Record record : records) { if (((record.getBidPrice()) - (record.getAskPrice())) < minSpread) { minSpread = (record.getBidPrice()) - (record.getAskPrice()); } } for (personal.vinay.bigdata.PrepData.Record record : records) { record.setMinSpread(minSpread); } return records; } 
@java.lang.Override public boolean onOptionsItemSelected(android.view.MenuItem item) { switch (item.getItemId()) { case org.stendardo.bsak.qiblih.CompassActivity.EDIT_ID : startActivity(new android.content.Intent(this, org.stendardo.bsak.qiblih.QiblihPreferences.class)); <BUGS> return true; case org.stendardo.bsak.qiblih.CompassActivity.CLOSE_ID : finish(); <BUGE> return true; case org.stendardo.bsak.qiblih.CompassActivity.README_ID : startActivity(new android.content.Intent(this, org.stendardo.bsak.qiblih.ReadmeActivity.class)); return true; case org.stendardo.bsak.qiblih.CompassActivity.LICENSE_ID : startActivity(new android.content.Intent(this, org.stendardo.bsak.qiblih.LicenseActivity.class)); return true; } return super.onOptionsItemSelected(item); } 
private static org.yamj.core.database.model.type.JobType retrieveJobType(java.lang.String department) { <BUGS> switch (department) { <BUGE> case "writing" : return org.yamj.core.database.model.type.JobType.WRITER; case "directing" : return org.yamj.core.database.model.type.JobType.DIRECTOR; case "production" : return org.yamj.core.database.model.type.JobType.PRODUCER; case "sound" : return org.yamj.core.database.model.type.JobType.SOUND; case "camera" : return org.yamj.core.database.model.type.JobType.CAMERA; case "art" : return org.yamj.core.database.model.type.JobType.ART; case "editing" : return org.yamj.core.database.model.type.JobType.EDITING; case "costume & make-up" : return org.yamj.core.database.model.type.JobType.COSTUME_MAKEUP; case "crew" : return org.yamj.core.database.model.type.JobType.CREW; case "visual effects" : return org.yamj.core.database.model.type.JobType.EFFECTS; case "lighting" : return org.yamj.core.database.model.type.JobType.LIGHTING; default : org.yamj.core.service.metadata.online.TheMovieDbScanner.LOG.debug("Unknown department '{}'", department); return org.yamj.core.database.model.type.JobType.UNKNOWN; } } 
@java.lang.Override public <T> T query(java.lang.Class<T> clazz) { java.lang.Object inst = org.wikiup.core.util.Interfaces.unwrap(clazz, wrapped); if (inst == null) { if (byClasses.containsKey(clazz)) return org.wikiup.core.util.Interfaces.cast(clazz, byClasses.get(clazz));  <BUGS> inst = translator.translate(wrapped); <BUGE> byClasses.put(clazz, inst); } return org.wikiup.core.util.Interfaces.cast(clazz, inst); } 
@org.junit.Test public void display_account_list() { <BUGS> org.springframework.ui.Model model = org.mockito.Mockito.mock(org.springframework.ui.Model.class); <BUGE> java.util.List<com.odde.bbuddy.account.domain.Account> accounts = dataMother.getAccounts(); <BUGS> org.mockito.Mockito.when(this.accounts.getList()).thenReturn(accounts); <BUGE> controller.list(model); <BUGS> org.mockito.Mockito.verify(model).addAttribute("accounts", accounts); <BUGE> } 
public java.lang.String formatXLSDate(org.apache.poi.ss.usermodel.Cell curCell, int c) { <BUGS> java.util.Date date = new java.util.Date(); <BUGE> try { date = new java.text.SimpleDateFormat(columns.get(c).getDateType()).parse(curCell.toString()); } catch (java.text.ParseException e) { return curCell.toString(); } return new java.text.SimpleDateFormat(columns.get(c).getDateType()).format(date); } 
@org.junit.Test public void shouldSelectOnlyHookManagedCreds() { org.jenkinsci.plugins.github.config.GitHubServerConfig conf = new org.jenkinsci.plugins.github.config.GitHubServerConfig(""); conf.setManageHooks(false); org.jenkinsci.plugins.github.GitHubPlugin.configuration().getConfigs().add(conf); <BUGS> org.junit.Assert.assertThat(org.jenkinsci.plugins.github.webhook.WebhookManager.forHookUrl(org.jenkinsci.plugins.github.webhook.WebhookManagerTest.HOOK_ENDPOINT).createHookSubscribedTo(com.google.common.collect.Lists.newArrayList(org.kohsuke.github.GHEvent.PUSH)).apply(new com.cloudbees.jenkins.GitHubRepositoryName("github.com", "name", "repo")), org.hamcrest.Matchers.nullValue()); <BUGE> } 
@java.lang.Override public void onActivityCreated(android.os.Bundle savedInstanceState) { super.onActivityCreated(savedInstanceState); createHandler(); android.support.v4.app.FragmentManager fm = getFragmentManager(); mWorkFragment = ((com.betterchat.www.utility.RetainedFragment) (fm.findFragmentByTag("work"))); if ((mWorkFragment) == null) { mWorkFragment = new com.betterchat.www.utility.RetainedFragment(); mWorkFragment.setTargetFragment(this, 0); fm.beginTransaction().add(mWorkFragment, "work").commit(); } <BUGS> client = mWorkFragment.getClient(); <BUGE> } 
@java.lang.Override public net.minecraftforge.fml.common.network.simpleimpl.IMessage onMessage(com.lothrazar.cyclicmagic.net.PacketSyncPlayerData message, net.minecraftforge.fml.common.network.simpleimpl.MessageContext ctx) { if ((ctx.side) == (net.minecraftforge.fml.relauncher.Side.CLIENT)) { <BUGS> <BUGE> com.lothrazar.cyclicmagic.ModMain.IPlayerExtendedProperties props = com.lothrazar.cyclicmagic.ModMain.getPlayerProperties(net.minecraft.client.Minecraft.getMinecraft().thePlayer); if (props == null) { <BUGS> ModMain.logger.error("IPlayerExtendedProperties NULL PROBLEM"); <BUGE> }else { props.setDataFromNBT(message.tags); } } return null; } 
public static Bag getTestBag(int i) { Bag bag = new Bag(i); for (int j = 0; j < 10; j++) { Token t = CloneTestHelper.getTestToken(); TokenFrequency tFrequency = new TokenFrequency(); tFrequency.setToken(t); <BUGS> tFrequency.setFrequency(utility.Util.getRandomNumber(3, 1)); <BUGE> bag.add(tFrequency); } return bag; } 
@java.lang.Override public void onClick(android.view.View v) { <BUGS> android.widget.CheckBox notifyMe = ((android.widget.CheckBox) (findViewById(R.id.checkbox_send_notifications))); notifyMe.setVisibility(com.zyumbik.makeanappointment.custom_views.VISIBLE); <BUGE> interactionListener.onConfirm(notifyMe.isChecked()); buttonConfirm.setEnabled(false); <BUGS> android.view.View buttonReset = findViewById(R.id.button_new_appointment); <BUGE> buttonReset.setVisibility(com.zyumbik.makeanappointment.custom_views.VISIBLE); buttonReset.setOnClickListener(new com.zyumbik.makeanappointment.custom_views.OnClickListener() { @java.lang.Override public void onClick(android.view.View v) { interactionListener.onReset(); } }); } 
public static void startGame(int playercount, int boardsize) { game.GameMaster.reset(); for (int i = 1; i <= playercount; i++) { <BUGS> game.GameMaster.playerAL.add(new game.Player(0.0, i, 0.0, 0, game.GameMaster.names.get((i - 1)), 0)); <BUGE> } game.GameMaster.EndCheck = boardsize; game.GameMaster.PlayerInTurn = game.GameMaster.playerAL.get(0); } 
public java.lang.String convertFromArabicToRomanNumeral(java.lang.Integer inputNumber) { java.lang.StringBuilder romanNumeral = new java.lang.StringBuilder(); while (inputNumber != 0) { for (java.util.Map.Entry<java.lang.Integer, java.lang.String> numeralMapEntry : RomanNumeralConverter.numeralMap.entrySet()) { java.lang.Integer numeralSegmentArabicValue = numeralMapEntry.getKey(); java.lang.String numeralSegment = numeralMapEntry.getValue(); if (inputNumber >= numeralSegmentArabicValue) { inputNumber -= numeralSegmentArabicValue; romanNumeral.append(numeralSegment); <BUGS> <BUGE> } } } return romanNumeral.toString(); } 
@org.junit.Test public void restartNotStarted() throws java.io.IOException { java.lang.String applicationName = getApplicationName(); <BUGS> org.cloudfoundry.operations.ApplicationsTest.createApplication(this.cloudFoundryOperations, org.cloudfoundry.operations.ApplicationsTest.getApplicationBits(), applicationName, false).then(this.cloudFoundryOperations.applications().restart(org.cloudfoundry.operations.applications.RestartApplicationRequest.builder().name(applicationName).build())).subscribe(testSubscriber()); <BUGE> } 
private void loadTile(com.badlogic.gdx.utils.XmlReader.Element tile, int firstGid) { int id = tile.getIntAttribute("id"); <BUGS> com.mygdx.game.shared.model.CollideablePolygon tilePolygon = com.mygdx.game.shared.model.TilePolygonLoader.loadTilePolygon(tile, tileHeight); <BUGE> int tileGid = firstGid + id; tiles.put(tileGid, new com.mygdx.game.server.model.MapLoader.Tile(tilePolygon)); } 
@java.lang.Override public java.lang.String toString() { <BUGS> java.lang.String msg = (((((("IPTABLE " + (this.messageID)) + " ") + (ipAddress)) + " ") + (port)) + " ") + (ipTable); <BUGE> java.lang.String length = java.lang.String.format("%04d", ((msg.length()) + 5)); return (length + " ") + msg; } 
public boolean deleteByKey(java.lang.String key) { if (keyExists(key)) { synchronized(this) { for (org.tevya.model.LinkDefinition ld : currentLinkDefinitions.definitions) { if (ld.getKey().equals(key)) { currentLinkDefinitions.definitions.remove(ld); break; } } try { <BUGS> <BUGE> initialize(); } catch (java.lang.Exception e) { org.tevya.repo.LinkDefinitionFlatFileRepository.logger.warning(java.lang.String.format("Reinitialization failed: %s", e)); } } return true; } return false; } 
public static int count(java.lang.String content, char charForSearch) { int count = 0; <BUGS> <BUGE> int contentLength = content.length(); for (int i = 0; i < contentLength; i++) { if (charForSearch == (content.charAt(i))) { count++; } } return count; } 
@java.lang.Override public org.openqa.selenium.WebDriver getWebDriverInstance() { org.openqa.selenium.WebDriver retVal = getWebDriver(); if (null == retVal) { org.bigtester.ate.model.page.atewebdriver.MyChromeDriver.setChromeDriverSystemEnv(); if (getBrowserProfile().isPreserveCookiesOnExecutions()) { org.openqa.selenium.chrome.ChromeOptions ops = new org.openqa.selenium.chrome.ChromeOptions(); ops.addArguments(("--user-data-dir=" + (getBrowserProfile().getTestCaseChromeUserDataDir()))); retVal = new org.openqa.selenium.chrome.ChromeDriver(ops); }else { retVal = new org.openqa.selenium.chrome.ChromeDriver(); } <BUGS> <BUGE> } <BUGS> setWebDriver(retVal); <BUGE> return retVal; } 
<BUGS> public java.lang.String convertRequestToString() throws java.io.IOException { <BUGE> java.io.InputStreamReader inputStreamReader = new java.io.InputStreamReader(inputStream); java.io.BufferedReader bufferedReader = new java.io.BufferedReader(inputStreamReader); java.lang.StringBuilder requestBuilder = new java.lang.StringBuilder(); java.lang.String line; do { line = bufferedReader.readLine(); requestBuilder.append(line); if (line.equals("")) break;  } while (bufferedReader.ready() ); return requestBuilder.toString(); } 
public boolean isMatched() { switch (matchingType) { case OR : <BUGS> return matches.values().contains(false); <BUGE> case AND : default : return ((matches.size()) > 0) && (!(matches.values().contains(false))); } } 
<BUGS> private double distanceTo(pathfinding.MapNode n) { <BUGE> double xDelta = (this.location.getX()) - (n.location.getX()); double yDelta = (this.location.getY()) - (n.location.getY()); return java.lang.Math.sqrt(((java.lang.Math.pow(xDelta, 2)) + (java.lang.Math.pow(yDelta, 2)))); } 
@java.lang.Override public void opened() { try { while ((product.getProductState(vm)) == (ch.admin.vbs.cube.core.vm.IVmProduct.VmProductState.STARTING)) { java.lang.Thread.sleep(500); } product.connectNic(vm, true); <BUGS> <BUGE> } catch (java.lang.Exception e) { ch.admin.vbs.cube.core.vm.ctrtasks.Start.LOG.error("VM's VPN was opened but we failed to connect VM's NIC", e); vm.setVpnState(VmVpnState.NOT_CONNECTED); <BUGS> vmModel.fireVmStateUpdatedEvent(vm); <BUGE> } <BUGS> vm.setVpnState(VmVpnState.CONNECTED); <BUGE> vmModel.fireVmStateUpdatedEvent(vm); } 
public void enterBuilding(java.lang.String bldName) { chronos.pdc.buildings.Building bldg = _bReg.getBuilding(bldName); if (bldg != null) { <BUGS> <BUGE> java.lang.String description = bldg.getInteriorDescription(); java.lang.String imagePath = bldg.getIntImagePath(); displayBuilding(description, imagePath); <BUGS> _currentBldg = bldg; <BUGE> _frame.setOnTown(false); }else { _frame.displayText(civ.BuildingDisplayCiv.NO_BLDG_FOUND); } } 
private void refreshModel(org.eclipse.viatra.cep.core.metamodels.events.Event event) { model.setLatestEvent(null); for (org.eclipse.viatra.cep.core.metamodels.automaton.EventToken eventToken : model.getEventTokensInModel()) { eventToken.setLastProcessed(null); } model.getEnabledForTheLatestEvent().clear(); strategy.handleInitTokenCreation(model, AutomatonFactory.eINSTANCE); model.setLatestEvent(event); <BUGS> <BUGE> cepUpdateCompleteProvider.latestEventHandled(); <BUGS> strategy.handleAutomatonResets(model, AutomatonFactory.eINSTANCE); <BUGE> } 
public boolean makeTurn(int posOnBoard, int turn) throws something.Reversi.IllegalMoveException { if ((this.board[posOnBoard]) == (Tile.EMPTY)) { something.Reversi.Tile tile; if ((turn % 2) == 0) { tile = Tile.BLACK; }else { tile = Tile.WHITE; } if (checkValidityMove(posOnBoard, tile)) { <BUGS> java.lang.System.out.println("valid move"); <BUGE> board[posOnBoard] = tile; turnTiles(posOnBoard, tile); return true; } } return false; } 
@aramframework.com.cmm.annotation.IncludedInfo(name = "일지관리", order = 4060, gid = 40) @org.springframework.web.bind.annotation.RequestMapping(value = "/cop/smt/dsm/listDiary.do") @org.springframework.security.access.annotation.Secured(value = "ROLE_USER") public java.lang.String listDiary(@org.springframework.web.bind.annotation.ModelAttribute aramframework.com.cop.smt.dsm.domain.DiaryManageVO diaryManageVO, org.springframework.ui.ModelMap model) { egovframework.rte.ptl.mvc.tags.ui.pagination.PaginationInfo paginationInfo = new egovframework.rte.ptl.mvc.tags.ui.pagination.PaginationInfo(); diaryManageVO.getSearchVO().fillPageInfo(paginationInfo); model.addAttribute("resultList", diaryManageService.selectDiaryManageList(diaryManageVO)); int totCnt = ((java.lang.Integer) (diaryManageService.selectDiaryManageListCnt(diaryManageVO))); diaryManageVO.getSearchVO().setTotalRecordCount(totCnt); paginationInfo.setTotalRecordCount(totCnt); <BUGS> model.addAttribute("paginationInfo", paginationInfo); <BUGE> return aramframework.com.cmm.util.WebUtil.adjustViewName("/cop/smt/dsm/DiaryList"); } 
public double phase_Time() { <BUGS> double k = (java.lang.Math.signum(stellarium.util.math.Spmath.getD(sciapi.api.value.util.VOp.dot(sciapi.api.value.euclidian.CrossUtil.cross(((sciapi.api.value.IValRef) (EcRPosG)), ((sciapi.api.value.IValRef) (stellarium.stellars.EcRPos))), ((sciapi.api.value.IValRef) (Pole)))))) * (getPhase()); <BUGE> if (k < 0) k = k + 2;  return k / 2; } 
<BUGS> private void analyzeAssociations(org.litepal.crud.DataSupport baseObj) { <BUGE> try { java.util.Collection<org.litepal.crud.model.AssociationsInfo> associationInfos = getAssociationInfo(baseObj.getClassName()); analyzeAssociatedModels(baseObj, associationInfos); <BUGS> <BUGE> } catch (java.lang.Exception e) { throw new org.litepal.exceptions.DataSupportException(e.getMessage()); } } 
@java.lang.Override protected void update(float elapsedTimeMS) { graphicslib3D.Point3D cameraLocation = camera1.getLocation(); graphicslib3D.Matrix3D cameraTranslation = new graphicslib3D.Matrix3D(); cameraTranslation.translate(cameraLocation.getX(), cameraLocation.getY(), cameraLocation.getZ()); skyBox.setLocalTranslation(cameraTranslation); <BUGS> <BUGE> if ((thisClient) != null) { thisClient.processPackets(); } <BUGS> camera1Controller.update(elapsedTimeMS); super.update(elapsedTimeMS); <BUGE> } 
@java.lang.Override public byte[] transform(java.lang.ClassLoader loader, java.lang.String className, java.lang.Class<?> classBeingRedefined, java.security.ProtectionDomain protectionDomain, byte[] classfileBuffer) throws java.lang.instrument.IllegalClassFormatException { try { <BUGS> return className.equals(net.x11.patch.XKeysymTransformer.XNET_PROTOCOL) ? doClass(className, classBeingRedefined, classfileBuffer) : classfileBuffer; <BUGE> } catch (java.lang.Throwable err) { err.printStackTrace(); return classfileBuffer; } } 
private java.util.ArrayList<java.awt.geom.Point2D.Double> generateTestPath() { java.util.ArrayList<java.awt.geom.Point2D.Double> testPath = new java.util.ArrayList<java.awt.geom.Point2D.Double>(); for (int i = 0; i < 1000; i++) { testPath.add(new java.awt.geom.Point2D.Double((i / 500.0), 0.0)); } <BUGS> <BUGE> } 
public static void main(java.lang.String[] args) { long time_start = java.lang.System.currentTimeMillis(); greedy.Greedy10.cargarDatos(); greedy.Greedy10.resolverProblema(); greedy.Greedy10.mostrarMochila(); long time_end = java.lang.System.currentTimeMillis(); <BUGS> <BUGE> java.lang.System.out.println("-------------------------------------------------------"); java.lang.System.out.println(); java.lang.System.out.println(); java.lang.System.out.println(((">> Tiempo de duracion del proceso: " + (time_end - time_start)) + " milisegundos.")); } 
protected void applyCenterInside(@android.support.annotation.NonNull android.view.TextureView view, @android.support.annotation.NonNull android.graphics.Matrix transformMatrix) { <BUGS> if (((intrinsicVideoSize.y) <= (view.getWidth())) && ((intrinsicVideoSize.x) <= (view.getHeight()))) { <BUGE> applyCenter(view, transformMatrix); }else { applyFitCenter(view, transformMatrix); } } 
private static void loadFile(java.lang.String packageName, sbahjsic.runtime.ExecutionEnvironment env) throws java.lang.Exception { <BUGS> <BUGE> try (sbahjsic.io.FileSource fs = new sbahjsic.io.FileSource(new java.io.File(((((sbahjsic.io.StandardLibrary.STD) + "/") + packageName) + ".sb")))) { env.execute(fs); } <BUGS> sbahjsic.io.StandardLibrary.LOADED.add(packageName); <BUGE> } 
protected javax.ws.rs.core.Response handleGenericError(java.lang.Throwable exception) { net.sf.mmm.util.exception.api.NlsRuntimeException userError = net.sf.mmm.util.exception.api.TechnicalErrorUserException.getOrCreateUserException(exception); if (userError.isTechnical()) { <BUGS> io.oasp.module.rest.service.impl.RestServiceExceptionFacade.LOG.error("Service failed on server", exception); <BUGE> }else { io.oasp.module.rest.service.impl.RestServiceExceptionFacade.LOG.warn("Service failed due to business error: {}", exception.getMessage()); } return createResponse(userError); } 
@java.lang.Override public void onTurnSuccess(int computerMove) { <BUGS> if (isGameOver) { return ; } if (computerMove == (-1)) { <BUGE> return ; } setXBackground(levelPlayer1, computerMove); fillGameGrid(computerMove, Constants.PLAYER2); areButtonsClicked[computerMove] = true; asyncService.checkForWinner(gameGrid, Constants.PLAYER2, this); <BUGS> setButtonsClickable(); <BUGE> } 
public static double roundedToSize(double value, int sigFigs) { <BUGS> java.math.BigDecimal valueBDtoSize = java.math.BigDecimal.ZERO; if (java.lang.Double.isFinite(value)) { java.math.BigDecimal valueBD = new java.math.BigDecimal(value); int newScale = sigFigs - ((valueBD.precision()) - (valueBD.scale())); valueBDtoSize = valueBD.setScale(newScale, java.math.RoundingMode.HALF_UP); } <BUGE> return valueBDtoSize.doubleValue(); } 
@java.lang.Override public void onLoadFinished(android.content.Loader<android.database.Cursor> loader, android.database.Cursor data) { switch (loader.getId()) { case com.android.contacts.list.JoinContactListFragment.DISPLAY_NAME_LOADER : { if ((data != null) && (data.moveToFirst())) { showTargetContactName(data.getString(0)); } break; } case JoinContactListAdapter.PARTITION_ALL_CONTACTS : { <BUGS> android.database.Cursor suggestionsCursor = ((com.android.contacts.list.JoinContactLoader.JoinContactLoaderResult) (data)).suggestionCursor; onContactListLoaded(suggestionsCursor, data); <BUGE> break; } } } 
private org.wso2.carbon.messaging.CarbonMessage createCarbonMsg(org.ballerinalang.bre.Context context) { org.ballerinalang.model.values.BConnector bConnector = ((org.ballerinalang.model.values.BConnector) (getRefArgument(context, 0))); java.lang.String path = getStringArgument(context, 0); <BUGS> org.ballerinalang.model.values.BMessage bMessage = ((org.ballerinalang.model.values.BMessage) (getArgument(context, 1))); <BUGE> org.wso2.carbon.messaging.CarbonMessage cMsg = bMessage.value(); prepareRequest(bConnector, path, cMsg); cMsg.setProperty(Constants.HTTP_METHOD, Constants.HTTP_METHOD_POST); return cMsg; } 
public void onNumDecksChanged(javafx.beans.value.ObservableValue observable, java.lang.Object oldNum, java.lang.Object newNum) { <BUGS> model.CardSettings cardSettings = model.GameCreation.getInstance().getCardSettings(); <BUGE> if (((java.lang.String) (newNum)).matches("[0-9]*")) { cardSettings.setNumDecks(java.lang.Integer.parseInt(((java.lang.String) (newNum)))); updateSuitTextFields(view.getCardComboBox().getValue()); } } 
private void setDirectionButton(android.widget.ImageView imageView, int id, int rotation) { android.widget.TableRow.LayoutParams pieceLayout = new android.widget.TableRow.LayoutParams(((height) / 6), ((height) / 6)); imageView.setLayoutParams(pieceLayout); <BUGS> imageView.setOnClickListener(directionClicked); <BUGE> imageView.setImageResource(id); imageView.setPivotX(((height) / 12)); imageView.setPivotY(((height) / 12)); imageView.setRotation(rotation); } 
@java.lang.Override public synchronized void stop() { if ((serverSocket) == null) { java.lang.System.err.println("Server already stopped"); return ; } try { <BUGS> <BUGE> serverSocket.close(); <BUGS> executorService.shutdown(); <BUGE> } catch (java.io.IOException e) { <BUGS> java.lang.System.err.println(("Exception during closing ServerSocket: " + (e.getMessage()))); <BUGE> } serverSocket = null; } 
public static void main(java.lang.String[] args) { java.util.Scanner scanner = new java.util.Scanner(java.lang.System.in); <BUGS> Controller controller = new Controller(args); <BUGE> Veto.showLine(controller.getWelcomeMessage()); while (!(controller.isTimeToExit())) { Veto.show(Veto.MESSAGE_COMMAND_PROMPT); java.lang.String userInput = scanner.nextLine(); java.lang.String feedback = controller.executeCommand(userInput); Veto.showLine(feedback); } scanner.close(); } 
public void draw(org.newdawn.slick.Graphics graphics) throws org.newdawn.slick.SlickException { drawBackground(graphics); drawCountDown(graphics); drawPlayers(graphics); drawPowers(graphics); drawTimer(graphics); drawBorders(graphics); <BUGS> drawLives(); <BUGE> drawScore(graphics); } 
@java.lang.Override public boolean equals(java.lang.Object obj) { if (obj == null) { return false; } if ((getClass()) != (obj.getClass())) { return false; } final poker.Card other = ((poker.Card) (obj)); if ((this.rank) != (other.rank)) { return false; } <BUGS> if (!(java.util.Objects.equals(this.suit, other.suit))) { <BUGE> return false; } return true; } 
@java.lang.Override protected java.lang.Object newInstanceForClass(java.lang.String className) throws java.lang.ClassNotFoundException, java.lang.IllegalAccessException, java.lang.InstantiationException { java.lang.Class<?> clss = java.lang.Class.forName(className); try { java.lang.reflect.Constructor<?> cons = clss.getConstructor(android.content.Context.class); return cons.newInstance(androidContext); <BUGS> <BUGE> } catch (java.lang.reflect.InvocationTargetException ite) { <BUGS> } catch (java.lang.NoSuchMethodException nsme) { <BUGE> } return clss.newInstance(); } 
private void checkInspectionTime() { nyc.c4q.jonathancolon.inContaq.utlities.sqlite.ContactDatabaseHelper dbHelper = nyc.c4q.jonathancolon.inContaq.utlities.sqlite.ContactDatabaseHelper.getInstance(getApplicationContext()); db = dbHelper.getWritableDatabase(); java.util.List<nyc.c4q.jonathancolon.inContaq.contactlist.model.Contact> contacts = nyc.c4q.jonathancolon.inContaq.utlities.sqlite.SqlHelper.selectAllContacts(db); for (int i = 0; i < 1; i++) { nyc.c4q.jonathancolon.inContaq.contactlist.model.Contact contact = contacts.get(i); <BUGS> startNotification(contact); <BUGE> } } 
@android.support.annotation.Nullable @java.lang.Override public android.view.View onCreateView(android.view.LayoutInflater inflater, @android.support.annotation.Nullable android.view.ViewGroup container, @android.support.annotation.Nullable android.os.Bundle savedInstanceState) { <BUGS> android.view.View view = inflater.inflate(R.layout.fragment_sidebar, container, false); <BUGE> campoOs = view.findViewById(R.id.sidebar_op_text); campoMatricula = view.findViewById(R.id.sidebar_user_text); campoSenha = view.findViewById(R.id.sidebar_user_password); campoOs.setText(os); campoMatricula.setText(matricula); campoSenha.setText(senha); <BUGS> this.view = view; <BUGE> return view; } 
private boolean validateQuantity() { int quantity = java.lang.Integer.valueOf(subgroupsQuantity.getText().toString()); <BUGS> if (quantity <= (getMaximumQuantity())) { <BUGE> subgroupsQuantityLayout.setError(getString(R.string.nwinners_msg_validate_quantity, group.getItemCount())); requestFocus(subgroupsQuantity); return false; } return true; } 
public static boolean listContainsArray(java.util.List<short[]> list, short[] array) { for (short[] element : list) { <BUGS> if (!(java.util.Arrays.equals(element, array))) { return false; <BUGE> } } <BUGS> return true; <BUGE> } 
public controllers.Result postCadastro() { com.fasterxml.jackson.databind.JsonNode json = request().body().asJson(); controllers.Usuario usuario = play.libs.Json.fromJson(json, controllers.Usuario.class); <BUGS> <BUGE> try { controllers.AutenticacaoController.sistemaUsuarios.adicionarUsuario(usuario); } catch (controllers.DadosInvalidosException exception) { return badRequest(exception.getMessage()); } sistemasInfo.SistemaLog.novaMensagemLog(((usuario.getEmail()) + " acabou de se cadastrar no sistema")); return ok(play.libs.Json.toJson(usuario)); } 
@java.lang.Override public void onGameStart() { <BUGS> getContext().alliance(1, 0); getContext().alliance(2, 0); <BUGE> net.toyknight.aeii.campaign.Message message = new net.toyknight.aeii.campaign.Message(5, net.toyknight.aeii.utils.Language.getText("CAMPAIGN_CHALLENGE_STAGE_6_MESSAGE_1")); getContext().message(message); } 
@java.lang.Override public void onLocationChanged(android.location.Location location) { mCurrentLocation = new com.google.android.gms.maps.model.LatLng(location.getLatitude(), location.getLongitude()); mLastUpdateTime = java.text.DateFormat.getTimeInstance().format(new java.util.Date()); com.frodo.travigator.utils.CommonUtils.logStatus(TAG, ((("Location updated ->" + (location.getLatitude())) + ":") + (location.getLongitude()))); org.greenrobot.eventbus.EventBus.getDefault().post(new com.frodo.travigator.events.LocationChangedEvent(mCurrentLocation)); <BUGS> stopLocationUpdates(); <BUGE> } 
<BUGS> private static boolean differByOne(java.lang.String word, java.lang.String ladderLast) { <BUGE> if ((word.length()) != (ladderLast.length())) { return false; } int count = 0; for (int i = 0; i < (word.length()); i++) { if ((word.charAt(i)) != (ladderLast.charAt(i))) { count++; } } return count == 1; } 
@java.lang.Override public model.project.Project calculateProject(model.project.Project project) { this.project = project; if ((project.getPhases().size()) != 0) { calculateLenght(project); <BUGS> <BUGE> calculateResultSkill(project); <BUGS> calculateProjectDays(project); <BUGE> calculateQuarterResults(project); }else { } return project; } 
