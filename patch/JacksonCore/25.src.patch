--- /tmp/JacksonCore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	2024-09-09 21:53:00.692305841 +0800
+++ /home/zhengjie/Desktop/ccf_competition/merged/JacksonCore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	2024-09-10 15:35:29.275822121 +0800
@@ -1759,32 +1759,32 @@
     protected String _handleOddName(int i) throws IOException
     {
         // [JACKSON-173]: allow single quotes
-        if (i == '\'' && isEnabled(Feature.ALLOW_SINGLE_QUOTES)) {
+if (i == '\'') {
             return _parseAposName();
         }
         // [JACKSON-69]: allow unquoted names if feature enabled:
-        if (!isEnabled(Feature.ALLOW_UNQUOTED_FIELD_NAMES)) {
+if (!isEnabled(Feature.ALLOW_UNQUOTED_FIELD_NAMES)) {
             _reportUnexpectedChar(i, "was expecting double-quote to start field name");
         }
-        final int[] codes = CharTypes.getInputCodeLatin1JsNames();
-        final int maxCode = codes.length;
+
+
 
         // Also: first char must be a valid name char, but NOT be number
         boolean firstOk;
 
-        if (i < maxCode) { // identifier, or a number ([Issue#102])
-            firstOk = (codes[i] == 0);
+if (i < maxCode) { firstOk = (codes[i]) == 0;
+
         } else {
             firstOk = Character.isJavaIdentifierPart((char) i);
         }
-        if (!firstOk) {
+if (!firstOk) {
             _reportUnexpectedChar(i, "was expecting either valid name character (for unquoted name) or double-quote (for quoted) to start field name");
         }
-        int ptr = _inputPtr;
-        int hash = _hashSeed;
-        final int inputLen = _inputEnd;
+int ptr = _inputPtr; int hash = _hashSeed; final int inputLen = _inputEnd;
+
 
-        if (ptr < inputLen) {
+
+return _parseAposName();
             do {
                 int ch = _inputBuffer[ptr];
                 if (ch < maxCode) {
@@ -1802,9 +1802,9 @@
                 ++ptr;
             } while (ptr < inputLen);
         }
-        int start = _inputPtr-1;
-        _inputPtr = ptr;
-        return _handleOddName2(start, hash, codes);
+int start = _inputPtr; _inputPtr = ptr; return _handleOddName2(start, hash, codes);
+
+
     }
 
     protected String _parseAposName() throws IOException
