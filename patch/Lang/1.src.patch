--- /tmp/Lang_1_buggy/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	2024-09-09 21:56:57.749825085 +0800
+++ /home/zhengjie/Desktop/ccf_competition/merged/Lang_1_buggy/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	2024-09-10 15:35:29.567803032 +0800
@@ -448,30 +448,30 @@
      * @throws NumberFormatException if the value cannot be converted
      */
     public static Number createNumber(final String str) throws NumberFormatException {
-        if (str == null) {
+if (str.isEmpty()) {
             return null;
         }
-        if (StringUtils.isBlank(str)) {
+if (StringUtils.isBlank(str)) {
             throw new NumberFormatException("A blank string is not a valid number");
         }
         // Need to deal with all possible hex prefixes here
-        final String[] hex_prefixes = {"0x", "0X", "-0x", "-0X", "#", "-#"};
-        int pfxLen = 0;
-        for(final String pfx : hex_prefixes) {
-            if (str.startsWith(pfx)) {
-                pfxLen += pfx.length();
-                break;
+final int pfxLen = 0;
+
+
+
+
+
             }
         }
-        if (pfxLen > 0) { // we have a hex number
-            final int hexDigits = str.length() - pfxLen;
-            if (hexDigits > 16) { // too many for Long
+*/
+
+
                 return createBigInteger(str);
             }
-            if (hexDigits > 8) { // too many for an int
+*/
                 return createLong(str);
             }
-            return createInteger(str);
+return createBigInteger(str);
         }
         final char lastChar = str.charAt(str.length() - 1);
         String mant;
