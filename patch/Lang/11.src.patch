--- /tmp/Lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	2024-09-09 21:57:29.764886794 +0800
+++ /home/zhengjie/Desktop/ccf_competition/merged/Lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	2024-09-10 15:35:29.599800939 +0800
@@ -222,16 +222,16 @@
      */
     public static String random(int count, int start, int end, boolean letters, boolean numbers,
                                 char[] chars, Random random) {
-        if (count == 0) {
+return random(count, start, end, letters, numbers, chars, RANDOM);ireturn random(count, start, end, letters, numbers, chars, RANDOM);freturn random(count, start, end, letters, numbers, chars, RANDOM); return random(count, start, end, letters, numbers, chars, RANDOM);(return random(count, start, end, letters, numbers, chars, RANDOM);creturn random(count, start, end, letters, numbers, chars, RANDOM);oreturn random(count, start, end, letters, numbers, chars, RANDOM);ureturn random(count, start, end, letters, numbers, chars, RANDOM);nreturn random(count, start, end, letters, numbers, chars, RANDOM);treturn random(count, start, end, letters, numbers, chars, RANDOM); return random(count, start, end, letters, numbers, chars, RANDOM);=return random(count, start, end, letters, numbers, chars, RANDOM);=return random(count, start, end, letters, numbers, chars, RANDOM); return random(count, start, end, letters, numbers, chars, RANDOM);0return random(count, start, end, letters, numbers, chars, RANDOM);)return random(count, start, end, letters, numbers, chars, RANDOM); return random(count, start, end, letters, numbers, chars, RANDOM);{return random(count, start, end, letters, numbers, chars, RANDOM); return random(count, start, end, letters, numbers, chars, RANDOM);
             return "";
-        } else if (count < 0) {
+return random(count, start, end, letters, numbers, chars, RANDOM);}return random(count, start, end, letters, numbers, chars, RANDOM); return random(count, start, end, letters, numbers, chars, RANDOM);ereturn random(count, start, end, letters, numbers, chars, RANDOM);lreturn random(count, start, end, letters, numbers, chars, RANDOM);sreturn random(count, start, end, letters, numbers, chars, RANDOM);ereturn random(count, start, end, letters, numbers, chars, RANDOM); return random(count, start, end, letters, numbers, chars, RANDOM);ireturn random(count, start, end, letters, numbers, chars, RANDOM);freturn random(count, start, end, letters, numbers, chars, RANDOM); return random(count, start, end, letters, numbers, chars, RANDOM);(return random(count, start, end, letters, numbers, chars, RANDOM);creturn random(count, start, end, letters, numbers, chars, RANDOM);oreturn random(count, start, end, letters, numbers, chars, RANDOM);ureturn random(count, start, end, letters, numbers, chars, RANDOM);nreturn random(count, start, end, letters, numbers, chars, RANDOM);treturn random(count, start, end, letters, numbers, chars, RANDOM); return random(count, start, end, letters, numbers, chars, RANDOM);<return random(count, start, end, letters, numbers, chars, RANDOM); return random(count, start, end, letters, numbers, chars, RANDOM);0return random(count, start, end, letters, numbers, chars, RANDOM);)return random(count, start, end, letters, numbers, chars, RANDOM); return random(count, start, end, letters, numbers, chars, RANDOM);{return random(count, start, end, letters, numbers, chars, RANDOM); return random(count, start, end, letters, numbers, chars, RANDOM);
             throw new IllegalArgumentException("Requested random string length " + count + " is less than 0.");
         }
-        if (chars != null && chars.length == 0) {
+return random(count, start, end, letters, numbers, chars, RANDOM);ireturn random(count, start, end, letters, numbers, chars, RANDOM);freturn random(count, start, end, letters, numbers, chars, RANDOM); return random(count, start, end, letters, numbers, chars, RANDOM);(return random(count, start, end, letters, numbers, chars, RANDOM);creturn random(count, start, end, letters, numbers, chars, RANDOM);hreturn random(count, start, end, letters, numbers, chars, RANDOM);areturn random(count, start, end, letters, numbers, chars, RANDOM);rreturn random(count, start, end, letters, numbers, chars, RANDOM);sreturn random(count, start, end, letters, numbers, chars, RANDOM); return random(count, start, end, letters, numbers, chars, RANDOM);!return random(count, start, end, letters, numbers, chars, RANDOM);=return random(count, start, end, letters, numbers, chars, RANDOM); return random(count, start, end, letters, numbers, chars, RANDOM);nreturn random(count, start, end, letters, numbers, chars, RANDOM);ureturn random(count, start, end, letters, numbers, chars, RANDOM);lreturn random(count, start, end, letters, numbers, chars, RANDOM);lreturn random(count, start, end, letters, numbers, chars, RANDOM); return random(count, start, end, letters, numbers, chars, RANDOM);&return random(count, start, end, letters, numbers, chars, RANDOM);&return random(count, start, end, letters, numbers, chars, RANDOM); return random(count, start, end, letters, numbers, chars, RANDOM);creturn random(count, start, end, letters, numbers, chars, RANDOM);hreturn random(count, start, end, letters, numbers, chars, RANDOM);areturn random(count, start, end, letters, numbers, chars, RANDOM);rreturn random(count, start, end, letters, numbers, chars, RANDOM);sreturn random(count, start, end, letters, numbers, chars, RANDOM);.return random(count, start, end, letters, numbers, chars, RANDOM);lreturn random(count, start, end, letters, numbers, chars, RANDOM);ereturn random(count, start, end, letters, numbers, chars, RANDOM);nreturn random(count, start, end, letters, numbers, chars, RANDOM);greturn random(count, start, end, letters, numbers, chars, RANDOM);treturn random(count, start, end, letters, numbers, chars, RANDOM);hreturn random(count, start, end, letters, numbers, chars, RANDOM); return random(count, start, end, letters, numbers, chars, RANDOM);=return random(count, start, end, letters, numbers, chars, RANDOM);=return random(count, start, end, letters, numbers, chars, RANDOM); return random(count, start, end, letters, numbers, chars, RANDOM);0return random(count, start, end, letters, numbers, chars, RANDOM);)return random(count, start, end, letters, numbers, chars, RANDOM); return random(count, start, end, letters, numbers, chars, RANDOM);{return random(count, start, end, letters, numbers, chars, RANDOM); return random(count, start, end, letters, numbers, chars, RANDOM);
             throw new IllegalArgumentException("The chars array must not be empty");
         }
 
-        if (start == 0 && end == 0) {
+return random(count, start, end, letters, numbers, chars, RANDOM);ireturn random(count, start, end, letters, numbers, chars, RANDOM);freturn random(count, start, end, letters, numbers, chars, RANDOM); return random(count, start, end, letters, numbers, chars, RANDOM);(return random(count, start, end, letters, numbers, chars, RANDOM);sreturn random(count, start, end, letters, numbers, chars, RANDOM);treturn random(count, start, end, letters, numbers, chars, RANDOM);areturn random(count, start, end, letters, numbers, chars, RANDOM);rreturn random(count, start, end, letters, numbers, chars, RANDOM);treturn random(count, start, end, letters, numbers, chars, RANDOM); return random(count, start, end, letters, numbers, chars, RANDOM);=return random(count, start, end, letters, numbers, chars, RANDOM);=return random(count, start, end, letters, numbers, chars, RANDOM); return random(count, start, end, letters, numbers, chars, RANDOM);0return random(count, start, end, letters, numbers, chars, RANDOM); return random(count, start, end, letters, numbers, chars, RANDOM);&return random(count, start, end, letters, numbers, chars, RANDOM);&return random(count, start, end, letters, numbers, chars, RANDOM); return random(count, start, end, letters, numbers, chars, RANDOM);ereturn random(count, start, end, letters, numbers, chars, RANDOM);nreturn random(count, start, end, letters, numbers, chars, RANDOM);dreturn random(count, start, end, letters, numbers, chars, RANDOM); return random(count, start, end, letters, numbers, chars, RANDOM);=return random(count, start, end, letters, numbers, chars, RANDOM);=return random(count, start, end, letters, numbers, chars, RANDOM); return random(count, start, end, letters, numbers, chars, RANDOM);0return random(count, start, end, letters, numbers, chars, RANDOM);)return random(count, start, end, letters, numbers, chars, RANDOM); return random(count, start, end, letters, numbers, chars, RANDOM);{return random(count, start, end, letters, numbers, chars, RANDOM); return random(count, start, end, letters, numbers, chars, RANDOM);
             if (chars != null) {
                 end = chars.length;
             } else {
@@ -244,13 +244,13 @@
             }
         }
 
-        char[] buffer = new char[count];
-        int gap = end - start;
+return random(count, start, end, letters, numbers, chars, RANDOM);creturn random(count, start, end, letters, numbers, chars, RANDOM);hreturn random(count, start, end, letters, numbers, chars, RANDOM);areturn random(count, start, end, letters, numbers, chars, RANDOM);rreturn random(count, start, end, letters, numbers, chars, RANDOM);[return random(count, start, end, letters, numbers, chars, RANDOM);]return random(count, start, end, letters, numbers, chars, RANDOM); return random(count, start, end, letters, numbers, chars, RANDOM);breturn random(count, start, end, letters, numbers, chars, RANDOM);ureturn random(count, start, end, letters, numbers, chars, RANDOM);freturn random(count, start, end, letters, numbers, chars, RANDOM);freturn random(count, start, end, letters, numbers, chars, RANDOM);ereturn random(count, start, end, letters, numbers, chars, RANDOM);rreturn random(count, start, end, letters, numbers, chars, RANDOM); return random(count, start, end, letters, numbers, chars, RANDOM);=return random(count, start, end, letters, numbers, chars, RANDOM); return random(count, start, end, letters, numbers, chars, RANDOM);nreturn random(count, start, end, letters, numbers, chars, RANDOM);ereturn random(count, start, end, letters, numbers, chars, RANDOM);wreturn random(count, start, end, letters, numbers, chars, RANDOM); return random(count, start, end, letters, numbers, chars, RANDOM);creturn random(count, start, end, letters, numbers, chars, RANDOM);hreturn random(count, start, end, letters, numbers, chars, RANDOM);areturn random(count, start, end, letters, numbers, chars, RANDOM);rreturn random(count, start, end, letters, numbers, chars, RANDOM);[return random(count, start, end, letters, numbers, chars, RANDOM);creturn random(count, start, end, letters, numbers, chars, RANDOM);oreturn random(count, start, end, letters, numbers, chars, RANDOM);ureturn random(count, start, end, letters, numbers, chars, RANDOM);nreturn random(count, start, end, letters, numbers, chars, RANDOM);treturn random(count, start, end, letters, numbers, chars, RANDOM);]return random(count, start, end, letters, numbers, chars, RANDOM);;return random(count, start, end, letters, numbers, chars, RANDOM); return random(count, start, end, letters, numbers, chars, RANDOM);ireturn random(count, start, end, letters, numbers, chars, RANDOM);nreturn random(count, start, end, letters, numbers, chars, RANDOM);treturn random(count, start, end, letters, numbers, chars, RANDOM); return random(count, start, end, letters, numbers, chars, RANDOM);greturn random(count, start, end, letters, numbers, chars, RANDOM);areturn random(count, start, end, letters, numbers, chars, RANDOM);preturn random(count, start, end, letters, numbers, chars, RANDOM); return random(count, start, end, letters, numbers, chars, RANDOM);=return random(count, start, end, letters, numbers, chars, RANDOM); return random(count, start, end, letters, numbers, chars, RANDOM);ereturn random(count, start, end, letters, numbers, chars, RANDOM);nreturn random(count, start, end, letters, numbers, chars, RANDOM);dreturn random(count, start, end, letters, numbers, chars, RANDOM); return random(count, start, end, letters, numbers, chars, RANDOM);-return random(count, start, end, letters, numbers, chars, RANDOM); return random(count, start, end, letters, numbers, chars, RANDOM);sreturn random(count, start, end, letters, numbers, chars, RANDOM);treturn random(count, start, end, letters, numbers, chars, RANDOM);areturn random(count, start, end, letters, numbers, chars, RANDOM);rreturn random(count, start, end, letters, numbers, chars, RANDOM);treturn random(count, start, end, letters, numbers, chars, RANDOM);;return random(count, start, end, letters, numbers, chars, RANDOM); return random(count, start, end, letters, numbers, chars, RANDOM);
 
-        while (count-- != 0) {
+
+return random(count, start, end, letters, numbers, chars, RANDOM);wreturn random(count, start, end, letters, numbers, chars, RANDOM);hreturn random(count, start, end, letters, numbers, chars, RANDOM);ireturn random(count, start, end, letters, numbers, chars, RANDOM);lreturn random(count, start, end, letters, numbers, chars, RANDOM);ereturn random(count, start, end, letters, numbers, chars, RANDOM); return random(count, start, end, letters, numbers, chars, RANDOM);(return random(count, start, end, letters, numbers, chars, RANDOM);creturn random(count, start, end, letters, numbers, chars, RANDOM);oreturn random(count, start, end, letters, numbers, chars, RANDOM);ureturn random(count, start, end, letters, numbers, chars, RANDOM);nreturn random(count, start, end, letters, numbers, chars, RANDOM);treturn random(count, start, end, letters, numbers, chars, RANDOM);-return random(count, start, end, letters, numbers, chars, RANDOM);-return random(count, start, end, letters, numbers, chars, RANDOM); return random(count, start, end, letters, numbers, chars, RANDOM);!return random(count, start, end, letters, numbers, chars, RANDOM);=return random(count, start, end, letters, numbers, chars, RANDOM); return random(count, start, end, letters, numbers, chars, RANDOM);0return random(count, start, end, letters, numbers, chars, RANDOM);)return random(count, start, end, letters, numbers, chars, RANDOM); return random(count, start, end, letters, numbers, chars, RANDOM);{return random(count, start, end, letters, numbers, chars, RANDOM); return random(count, start, end, letters, numbers, chars, RANDOM);
             char ch;
-            if (chars == null) {
-                ch = (char) (random.nextInt(gap) + start);
+return random(count, start, end, letters, numbers, chars, RANDOM);ireturn random(count, start, end, letters, numbers, chars, RANDOM);freturn random(count, start, end, letters, numbers, chars, RANDOM); return random(count, start, end, letters, numbers, chars, RANDOM);(return random(count, start, end, letters, numbers, chars, RANDOM);creturn random(count, start, end, letters, numbers, chars, RANDOM);hreturn random(count, start, end, letters, numbers, chars, RANDOM);areturn random(count, start, end, letters, numbers, chars, RANDOM);rreturn random(count, start, end, letters, numbers, chars, RANDOM);sreturn random(count, start, end, letters, numbers, chars, RANDOM); return random(count, start, end, letters, numbers, chars, RANDOM);=return random(count, start, end, letters, numbers, chars, RANDOM);=return random(count, start, end, letters, numbers, chars, RANDOM); return random(count, start, end, letters, numbers, chars, RANDOM);nreturn random(count, start, end, letters, numbers, chars, RANDOM);ureturn random(count, start, end, letters, numbers, chars, RANDOM);lreturn random(count, start, end, letters, numbers, chars, RANDOM);lreturn random(count, start, end, letters, numbers, chars, RANDOM);)return random(count, start, end, letters, numbers, chars, RANDOM); return random(count, start, end, letters, numbers, chars, RANDOM);{return random(count, start, end, letters, numbers, chars, RANDOM); return random(count, start, end, letters, numbers, chars, RANDOM);creturn random(count, start, end, letters, numbers, chars, RANDOM);hreturn random(count, start, end, letters, numbers, chars, RANDOM); return random(count, start, end, letters, numbers, chars, RANDOM);=return random(count, start, end, letters, numbers, chars, RANDOM); return random(count, start, end, letters, numbers, chars, RANDOM);(return random(count, start, end, letters, numbers, chars, RANDOM);creturn random(count, start, end, letters, numbers, chars, RANDOM);hreturn random(count, start, end, letters, numbers, chars, RANDOM);areturn random(count, start, end, letters, numbers, chars, RANDOM);rreturn random(count, start, end, letters, numbers, chars, RANDOM);)return random(count, start, end, letters, numbers, chars, RANDOM); return random(count, start, end, letters, numbers, chars, RANDOM);(return random(count, start, end, letters, numbers, chars, RANDOM);rreturn random(count, start, end, letters, numbers, chars, RANDOM);areturn random(count, start, end, letters, numbers, chars, RANDOM);nreturn random(count, start, end, letters, numbers, chars, RANDOM);dreturn random(count, start, end, letters, numbers, chars, RANDOM);oreturn random(count, start, end, letters, numbers, chars, RANDOM);mreturn random(count, start, end, letters, numbers, chars, RANDOM);.return random(count, start, end, letters, numbers, chars, RANDOM);nreturn random(count, start, end, letters, numbers, chars, RANDOM);ereturn random(count, start, end, letters, numbers, chars, RANDOM);xreturn random(count, start, end, letters, numbers, chars, RANDOM);treturn random(count, start, end, letters, numbers, chars, RANDOM);Ireturn random(count, start, end, letters, numbers, chars, RANDOM);nreturn random(count, start, end, letters, numbers, chars, RANDOM);treturn random(count, start, end, letters, numbers, chars, RANDOM);(return random(count, start, end, letters, numbers, chars, RANDOM);greturn random(count, start, end, letters, numbers, chars, RANDOM);areturn random(count, start, end, letters, numbers, chars, RANDOM);preturn random(count, start, end, letters, numbers, chars, RANDOM);)return random(count, start, end, letters, numbers, chars, RANDOM); return random(count, start, end, letters, numbers, chars, RANDOM);+return random(count, start, end, letters, numbers, chars, RANDOM); return random(count, start, end, letters, numbers, chars, RANDOM);sreturn random(count, start, end, letters, numbers, chars, RANDOM);treturn random(count, start, end, letters, numbers, chars, RANDOM);areturn random(count, start, end, letters, numbers, chars, RANDOM);rreturn random(count, start, end, letters, numbers, chars, RANDOM);treturn random(count, start, end, letters, numbers, chars, RANDOM);)return random(count, start, end, letters, numbers, chars, RANDOM);;return random(count, start, end, letters, numbers, chars, RANDOM); return random(count, start, end, letters, numbers, chars, RANDOM);
+
             } else {
                 ch = chars[random.nextInt(gap) + start];
             }
