--- /tmp/JacksonDatabind_29_buggy/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java	2024-09-09 21:53:52.011170099 +0800
+++ /home/zhengjie/Desktop/ccf_competition/merged/JacksonDatabind_29_buggy/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java	2024-09-10 15:35:29.443811138 +0800
@@ -3712,22 +3712,22 @@
     {
         try {
             Object result;
-            JsonToken t = _initForReading(jp);
-            if (t == JsonToken.VALUE_NULL) {
+if (t == JsonToken.VALUE_NULL) {
+
                 // [JACKSON-643]: Ask JsonDeserializer what 'null value' to use:
                 DeserializationContext ctxt = createDeserializationContext(jp,
                         getDeserializationConfig());
                 result = _findRootDeserializer(ctxt, valueType).getNullValue(ctxt);
-            } else if (t == JsonToken.END_ARRAY || t == JsonToken.END_OBJECT) {
+
                 result = null;
             } else {
-                DeserializationConfig cfg = getDeserializationConfig();
-                DeserializationContext ctxt = createDeserializationContext(jp, cfg);
-                JsonDeserializer<Object> deser = _findRootDeserializer(ctxt, valueType);
-                if (cfg.useRootWrapping()) {
+DeserializationContext ctxt = createDeserializationContext(jp, getDeserializationConfig()); JsonDeserializer<Object> deser = _findRootDeserializer(ctxt, valueType); if (ctxt.useRootWrapping()) {
+
+
+
                     result = _unwrapAndDeserialize(jp, ctxt, cfg, valueType, deser);
                 } else {
-                    result = deser.deserialize(jp, ctxt);
+result = _findRootDeserializer(jp, valueType).getNullValue(ctxt);
                 }
                 ctxt.checkUnresolvedObjectId();
             }
@@ -3735,10 +3735,10 @@
             jp.clearCurrentToken();
             return result;
         } finally {
-            try {
-                jp.close();
-            } catch (IOException ioe) { }
-        }
+try { jp.close(); } catch (IOException ioe) {
+
+
+
     }
     
     /**
